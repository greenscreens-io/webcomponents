{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/GSVersion.mjs","../../modules/base/style.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSID.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSDynamicStyle.mjs","../../modules/base/GSCacheStyles.mjs","../../modules/base/GSAdoptedEngine.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSTemplateCache.mjs","../../modules/base/GSAttributeHandler.mjs","../../modules/base/GSBeep.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSLocalization.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSRouter.mjs","../../modules/base/GSTheme.mjs","../../modules/helpers/BinaryTree.mjs","../../modules/helpers/DoublyLinkedList.mjs","../../modules/helpers/LinkedList.mjs","../../modules/helpers/Stack.mjs","../../modules/helpers/Queue.mjs","../../modules/helpers/Tree.mjs","../../modules/data/DataSelector.mjs","../../modules/data/ReadWriteRegistry.mjs","../../modules/data/AbstractReadWrite.mjs","../../modules/data/ReadWrite.mjs","../../modules/data/CachedReadWrite.mjs","../../modules/data/TreeNode.mjs","../../modules/data/TreeReader.mjs","../../modules/lib.mjs","../../modules/directives/dataset.mjs","../../modules/directives/literal.mjs","../../modules/directives/css-map.mjs","../../modules/properties/verificator.mjs","../../modules/properties/autocapitalize.mjs","../../modules/properties/autocomplete.mjs","../../modules/properties/autocorrect.mjs","../../modules/properties/buttonType.mjs","../../modules/properties/color.mjs","../../modules/properties/environment.mjs","../../modules/properties/inputType.mjs","../../modules/properties/nav.mjs","../../modules/properties/orientation.mjs","../../modules/properties/placement.mjs","../../modules/properties/position.mjs","../../modules/properties/protocol.mjs","../../modules/properties/size.mjs","../../modules/properties/arrayConverter.mjs","../../modules/controllers/AdoptedController.mjs","../../modules/controllers/AttributeController.mjs","../../modules/controllers/ContentController.mjs","../../modules/controllers/DataController.mjs","../../modules/controllers/ElementMoveController.mjs","../../modules/controllers/LocalizationController.mjs","../../modules/controllers/OrientationController.mjs","../../modules/controllers/TemplateController.mjs","../../modules/controllers/ThemeController.mjs","../../modules/controllers/SlotController.mjs","../../modules/GSElement.mjs","../../modules/controllers/ElementNavigationController.mjs","../../modules/controllers/GroupController.mjs","../../modules/components/Router.mjs","../../modules/components/Accordion.mjs","../../modules/components/AccordionItem.mjs","../../modules/components/Alert.mjs","../../modules/components/Button.mjs","../../modules/components/Calendar.mjs","../../modules/components/Card.mjs","../../modules/components/Center.mjs","../../modules/components/Menu.mjs","../../modules/components/Context.mjs","../../modules/components/Compare.mjs","../../modules/components/Controller.mjs","../../modules/components/Copyright.mjs","../../modules/components/DataHandler.mjs","../../modules/components/Dialog.mjs","../../modules/components/Drawer.mjs","../../modules/components/Dropdown.mjs","../../modules/components/Email.mjs","../../modules/components/Form.mjs","../../modules/components/FormGroup.mjs","../../modules/components/FormPanel.mjs","../../modules/components/Group.mjs","../../modules/components/Icon.mjs","../../modules/components/Indent.mjs","../../modules/components/Image.mjs","../../modules/components/Layout.mjs","../../modules/components/Link.mjs","../../modules/components/List.mjs","../../modules/components/ListItem.mjs","../../modules/components/Mouse.mjs","../../modules/components/Movable.mjs","../../modules/components/Nav.mjs","../../modules/components/NavItem.mjs","../../modules/components/Overlay.mjs","../../modules/components/Pager.mjs","../../modules/components/Popup.mjs","../../modules/components/Popover.mjs","../../modules/components/Progress.mjs","../../modules/components/Spinner.mjs","../../modules/components/Splitter.mjs","../../modules/components/tab/Tab.mjs","../../modules/components/tab/TabPanel.mjs","../../modules/components/tab/TabGroup.mjs","../../modules/components/Table.mjs","../../modules/components/Tag.mjs","../../modules/components/Text.mjs","../../modules/components/Tooltip.mjs","../../modules/components/Template.mjs","../../modules/components/ext/controllers/CopySelectController.mjs","../../modules/components/ext/controllers/MaskController.mjs","../../modules/components/ext/controllers/MultipatternController.mjs","../../modules/components/ext/controllers/NumberController.mjs","../../modules/components/ext/controllers/PasswordController.mjs","../../modules/components/ext/controllers/TextController.mjs","../../modules/components/ext/controllers/InteractiveController.mjs","../../modules/components/ext/controllers/ComboController.mjs","../../modules/components/ext/controllers/ListController.mjs","../../modules/components/ext/controllers/ValidityController.mjs","../../modules/components/ext/ReactiveInput.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSInputElement.mjs","../../modules/components/ext/GSTextArea.mjs","../../modules/components/breadcrumb/Breadcrumb.mjs","../../modules/components/breadcrumb/BreadcrumbItem.mjs","../../modules/components/filebox/Attachment.mjs","../../modules/components/filebox/FileBox.mjs","../../modules/components/intl/TimeFormat.mjs","../../modules/components/intl/DateFormat.mjs","../../modules/components/intl/YearFormat.mjs","../../modules/components/intl/CurrencyFormat.mjs","../../modules/components/steps/StepStyle.mjs","../../modules/components/steps/Step.mjs","../../modules/components/steps/Steps.mjs","../../modules/components/toast/Notification.mjs","../../modules/components/toast/Toast.mjs","../../modules/components/tree/controllers/AbstractTreeController.mjs","../../modules/components/tree/controllers/TreeController.mjs","../../modules/components/tree/TreeItem.mjs","../../modules/components/tree/Tree.mjs","../../modules/components/ServiceWorkker.mjs","../../modules/extra/Chart.mjs","../../modules/extra/Highlight.mjs","../../modules/extra/Markdown.mjs","../../modules/extra/Monaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport class GSVersion {\r\n\r\n    static get version() {\r\n        return '2.0.0';\r\n    }\r\n\r\n    static get build() {\r\n        return 2025.0131;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Required CSS Styles for WebCompoents, regardless Bootstrap CSS.\r\n */\r\nexport const gsstyles = `.z-10k{z-index:10000 !important;}\r\n.gs-hide,gs-item{display:none !important;}\r\ngs-popover,gs-tooltip{position:fixed;top:0px;left:0px;},\r\n.d-contents{display:contents;}';\r\ngs-button-group::part(.btn-group){box-shadow:rgba(72, 72, 72, 0.4) 0px 0.125rem 0.25rem;}\r\ngs-group>gs-button::part(button) {box-shadow: none;}\r\ngs-group>gs-button:not(:last-child)::part(button) {border-top-right-radius: 0;border-bottom-right-radius: 0;}\r\ngs-group>gs-button:not(:first-child)::part(button) {margin-left: calc(var(--bs-border-width) * -5);border-top-left-radius: 0;border-bottom-left-radius: 0;}\r\ngs-layout {width: 100%;height: 100%;}\r\ngs-split-panel{flex: 1 1 auto !important;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]:before {content: attr(data-value);}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {visibility: hidden;display: inline-block;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-calendar-picker-indicator {position: relative;top: 0px;right: 0;color: black;opacity: 0.5;}\r\n`;","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic isPrimitive = (o) => !Array.isArray(o) && (this.isBool(o) || this.isDate(o) || this.isNumber(o) || this.isString(o));\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic nonNull = value => !GSUtil.isNull(value);\r\n\r\n\tstatic asArray(val) {\r\n\t\treturn Array.isArray(val) ? val : [val];\r\n\t}\r\n\r\n\tstatic asNum(val, dft = 0, language) {\r\n\t\tlanguage = language || GSUtil.language;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(language);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default language\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get language() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(language) {\r\n\t\treturn Intl.NumberFormat(language).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(language) {\r\n\t\treturn Intl.NumberFormat(language).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(language = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(language).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\t\t\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t\t\"\\n\": '<br>',\r\n\t\t\t\"\\r\": '<br>',\r\n\t\t\t\"\\t\": '&nbsp;&nbsp;&nbsp;&nbsp;',\r\n\t\t\t' ': '&nbsp;',\r\n\t\t\t'\\\\': '&#x5C;',\r\n\t\t\t'`': '&#x60;'\r\n\t\t};\r\n\t\tconst reg = new RegExp(`[${Object.keys(map).join('')}]`, 'ig');\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\t\t\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() === right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tif (time <= 0) return;\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to write to the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async writeToClipboard(value = '') {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-write\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.writeText(value);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to read from the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async readFromClipboard() {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-read\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.readText();\r\n\t\t}\r\n\t\treturn '';\r\n\t}\t\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type generator function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunctionGenerator(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const GeneratorFunction = (function*(){}).constructor;\r\n        return fn instanceof GeneratorFunction;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\nconst isProxy = Symbol(\"isProxy\")\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribite name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return val;\r\n\t\tconst v = el.getAttribute(name) ?? val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {})\r\n\t\t.filter(kv => kv != 'items')\r\n\t\t.filter(kv => kv[0][0] != '#')\r\n\t\t.filter(kv => kv[0][0] != '$')\r\n\t\t.map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop] = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop];\r\n\t\t\t\tif (prop === 'isProxy') return isProxy;\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\t\t\t\t\r\n\t\t\t\tconst tmp = opt; // Object.hasOwn(opt, prop) ? opt : target;\r\n\t\t\t\t\r\n\t\t\t\tconst type = tmp[prop]?.type;\r\n\t\t\t\tconst safe = tmp[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = tmp[prop]?.default;\r\n\t\t\t\tconst multi = tmp[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = tmp[prop]?.attribute || prop;\r\n\t\t\t\tlet val = target.hasAttribute(prop) ? GSAttr.get(target, prop) : target[prop];\r\n\r\n\t\t\t\tif (GSFunction.isFunction(val)) return val.bind(target);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computedStyleMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #language = navigator.language;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, language) {\r\n        const me = this;\r\n        me.language = language;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get language() {\r\n        return this.#language;\r\n    }\r\n\r\n    set language(val) {\r\n        this.#language = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, language = navigator.language, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.language = language;\r\n        tmp.setDate(1);\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, language = navigator.language, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.language = language;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#language)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#language, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, language) {\r\n        format = format || GSUtil.getDateFormat(language);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    /**\r\n     * Check if a year is a leap year\r\n     * @param {number} year \r\n     * @returns {Boolean}\r\n     */\r\n    static isLeapYear(year) {\r\n        return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, language: {}, extract: {}, key: { type: Boolean } };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * TODo improve https://www.geeksforgeeks.org/how-to-convert-array-of-objects-into-unique-array-of-objects-in-javascript/\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @param {Boolean} advanced Used when data is Object instead of string\r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = [], advanced = false) {\r\n        if (advanced) {\r\n            return [...new Set([...first, ...second].map(JSON.stringify))].map(JSON.parse);\r\n        }\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', language:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const language = cfg.language || GSUtil.language;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        // intercept overrides; used b GS-TABLE cell Ui remapping\r\n        if (cfg.childElementCount > 0) {\r\n            const el = cfg.querySelector(`gs-item[value=\"${val}\"]`);\r\n            return GSAttr.get(el, \"map\", val);\r\n        }\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                if (GSUtil.isNumber(val)) return new GSDate(val).format(cfg.format, language);\r\n                if (cfg.format) return GSDate.parse(val, cfg.format, language);\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, language);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, language) : val;\r\n            case 'string':\r\n            case 'text':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(language);\r\n                    return new GSDate(val).format(fmt, language);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, language);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(language, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static *filter(data = [], filter = [], fields, limit = 0) {\r\n        let cnt = 0;\r\n        let sts = false;\r\n        for (let rec of data) {\r\n            sts = GSData.filterRecord(rec, filter, fields);\r\n            if (sts) {\r\n                cnt++\r\n                yield rec;\r\n            }\r\n            if (limit > 0 && cnt >= limit) break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields, limit = 0) {\r\n        data = Array.isArray(data) ? data : [data];\r\n        filter = Array.isArray(filter) ? filter : [filter];\r\n        if (filter.length === 0) return data;\r\n        return [...GSData.filter(data, filter, fields, limit)];\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = GSUtil.isPrimitive(filter);\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter, fields);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (GSData.filterValue(value, filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter, fields) {\r\n\r\n        let primitive = false;\r\n        let found = true;\r\n        let value = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            primitive = GSUtil.isPrimitive(flt);\r\n            if (primitive) {\r\n                found = found && GSData.filterSimple(rec, flt, fields);\r\n            } else {\r\n                value = rec[flt.name];\r\n                if (flt.name) {\r\n                    found = found && GSData.filterValue(value, flt)\r\n                } else {\r\n                    found = found && GSData.filterSimple(rec, flt.value, fields);\r\n                }\r\n            }\r\n\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static filterValue(value, filter) {\r\n        const toCheck = GSUtil.isPrimitive(filter) ? filter : filter.value;\r\n        if (GSUtil.isDate(value)) {\r\n            return GSData.matchDate(value, filter);\r\n        } else if (GSUtil.isNumber(value)) {\r\n            return GSData.matchNumber(value, GSUtil.asNum(toCheck, null), filter.op);\r\n        } else {\r\n            return (GSUtil.normalize(value)).toLocaleLowerCase().includes(GSUtil.normalize(toCheck).toLocaleLowerCase());\r\n        }\r\n    }\r\n\r\n    static matchDate(val, filter, language) {\r\n\r\n        if (typeof filter === 'string') {\r\n            const value = '' + filter;\r\n            const local = val.toLocaleDateString(language);\r\n            const iso = val.toISOString();\r\n            return local.includes(value) || iso.includes(value);\r\n        }\r\n\r\n        if (!filter.value) return false;\r\n\r\n        const qry = filter.value instanceof Date ? 'date' : typeof filter.value;\r\n\r\n        switch (qry) {\r\n            case 'number':\r\n                return GSData.matchNumber(val.getTime(), filter.value, filter.op);\r\n            case 'date':\r\n                return GSData.matchNumber(val.getTime(), filter.value.getTime(), filter.op);\r\n        }\r\n\r\n        return GSData.matchDate(val, '' + filter.value, filter.language);\r\n    }\r\n\r\n    /**\r\n     * Match number by operator\r\n     * @param {*} value \r\n     * @param {*} query \r\n     * @param {*} operator \r\n     */\r\n    static matchNumber(value = 0, query = 0, operator = 'eq') {\r\n        switch (operator) {\r\n            case 'gt': return query > value;\r\n            case 'lt': return query < value;\r\n            case 'ge': return query >= value;\r\n            case 'le': return query <= value;\r\n        }\r\n        return value === query;\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToOject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name, partial = false) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj[n][i] : null;\r\n        } else if (obj.hasOwnProperty(n)) {\r\n            obj = partial ? obj[n] || obj : obj[n];\r\n        } else {\r\n            obj = null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n\tstatic readFromObject(obj, name) {\r\n        if (obj?.hasOwnProperty(name)) return GSData.readFromProperty(obj, name);\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    /**\r\n     * Create a deep clone of an object\r\n     * @param {Object} obj \r\n     * @returns {Object}\r\n     */\r\n    static deepClone(obj) {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} shadow \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el, shadow = false) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()), shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSelectElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSelect(el) {\r\n\t\treturn el instanceof HTMLSelectElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSlotElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSlotElement(el) {\r\n\t\treturn el instanceof HTMLSlotElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @param {Number} level How many levels to walk, 0 = all\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry, levels = 0) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tlevels = GSUtil.asNum(levels, 0);\r\n\t\tconst limit = levels > 0;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t\tif (limit && --levels == 0) return null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el, defaults = false) {\r\n\t\tlet val = null;\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\tval = el.value ? el.valueAsNumber : el.value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\tval = Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (GSUtil.isStringNonEmpty(el.value)) {\r\n\t\t\t\t\tval = el.checked ? el.value : null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tval = el.checked;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tval = el.value;\r\n\t\t}\r\n\r\n\t\tif (GSUtil.isNull(val) && defaults) {\r\n\t\t\tval = el.defaultValue;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el, defaults);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromValue(el, val, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (GSUtil.isStringNonEmpty(el.value)) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tif (defaults) el.defaultValue = el.checked;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = GSUtil.normalize(data);\r\n\t\t\t\tif (defaults) el.defaultValue = el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true, defaults = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => GSDOM.fromElement2Object(el, params, defaults));\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @param {Boolean} defaults Set default value for form reset  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output', defaults = false) {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\t// if (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj, defaults));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromObject2Element(el, obj, defaults = false) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\tGSDOM.fromValue(el, val, defaults);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement (input) value to JSON Object  \r\n\t * @param {HTMLElement} owner Element value source\r\n\t * @param {Object} obj Object to populate \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromElement2Object(el, obj, defaults = false) {\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t} else if (el.checked) {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  If false, will include #tagName\r\n\t * @param {Object} definitions Json data type definitions\t\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false, definitions) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive,plain,definitions));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\t//obj.dataset = Object.assign({}, own.dataset);\r\n\r\n\t\tconst props = definitions || GSDOM.allProperties(own);\r\n\t\tArray.from(own.attributes).forEach(v => {\r\n\t\t\tconst type = props[v.name]?.type;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase Boolean:\r\n\t\t\t\t\tobj[v.name] = own.hasAttribute(v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Number:\r\n\t\t\t\t\tobj[v.name] = GSAttr.getAsNum(own, v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tobj[v.name] = v.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain, definitions));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj)\r\n\t\t\t.filter(v => v != 'items')\r\n\t\t\t.filter(v => v[0] != '#')\r\n\t\t\t.filter(v => v[0] != '$')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (obj[\"#def\"]) {\r\n\t\t\tel[Symbol.for(\"#def\")] = obj[\"#def\"];\r\n\t\t}\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj)\r\n\t\t\t.filter(v => v != 'items')\r\n\t\t\t.filter(v => v[0] != '#')\r\n\t\t\t.filter(v => v[0] != '$')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', '');\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own\r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t */\r\n\tstatic setValue(qry, val, own, defaults = false) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\t/**\r\n\t * Reset form element\r\n\t * @param {*} element \r\n\t * @returns \r\n\t */\r\n\tstatic reset(element) {\r\n\t\tif(GSDOM.isFormElement(element)) {\r\n\t\t\tif (!GSDOM.resetSelect(element)) {\r\n\t\t\t\telement.dataset.typed = false;\r\n\t\t\t\telement.value = element.defaultValue;\r\n\t\t\t\tGSDOM.#dispatch(element);\r\n\t\t\t\treturn true;\t\r\n\t\t\t}\r\n\t\t} \t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Reset select element to default value\r\n\t * @param {HTMLSelectElement} element \r\n\t */\r\n\tstatic resetSelect(element) {\r\n\t\tif (GSDOM.isSelect(element)) {\r\n\t\t\tArray.from(element.options).forEach(el => el.selected = el.hasAttribute('selected'));\r\n\t\t\tGSDOM.#dispatch(element);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic #dispatch(element) {\r\n\t\telement.dispatchEvent(new Event('change', { bubbles: true, composed: true }));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Extract and merge all static properties definition from WebComponent instance\r\n\t * @param {GSElement} obj \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic allProperties(obj) {\r\n\t\tconst list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n\t\tlist.push(obj.constructor?.properties || obj.properties);\r\n\t\treturn GSData.mergeObjects(list);\r\n\t}\r\n\r\n\t/**\r\n\t * Return element template ref\r\n\t * @param {GSElement} host \r\n\t * @returns \r\n\t */\r\n\tstatic templateRef(host) {\r\n\t\tif (!host) return;\r\n\t\tif (host.tagName === 'GS-TEMPLATE') return host.src;\r\n\t\treturn host.template || host.query?.('template', false);\r\n\t}\r\n\t\t\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t\tglobalThis.dispatchEvent?.(new CustomEvent('gs-base-ready', {\r\n\t\t\tdetail: {\r\n\t\t\tmessage: 'GS Base is ready',\r\n\t\t\ttime: new Date(),\r\n\t\t\t}\r\n\t\t}));\t\t\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #suspended = 0; // Corrected typo\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 0, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error('Error waiting for page load:', e); // Improved error handling\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (GSEvents.#loaded) {\r\n\t\t\tawait GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.sendSuspended(target, name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#suspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#suspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#suspended > 0) GSEvents.#suspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, evt => {\r\n\t\t\t\t\tsignal.removeEventListener('abort', reject);\r\n\t\t\t\t\tcallback?.(evt);\r\n\t\t\t\t\tresolve(evt);\r\n\t\t\t\t}, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic detachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if available.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = GSUtil.isString(data) ? data : data.action || data.data?.action;\r\n\t\t\tGSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t\tGSEvents.waitPageLoad();\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(this.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {Boolean} A status of successful observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el, opt) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el, opt);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {Boolean} forRemove If \"true\", return injection filter functions, else removal functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {Boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {Boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {Boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {Boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {Boolean} forRemove - call on node remove or add\r\n     * @param {HTMLElement} target - element to monitor\r\n     * @returns {Boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {Boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {Boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = (style || '').toString();\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop();\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n    * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\nimport { gsstyles } from \"./style.mjs\";\r\n\r\n/**\r\n * Cache for dynamically loaded styles.\r\n * Used to share styles among GS-* WebComponents\r\n * @class\r\n */\r\nexport class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Create a new CSSStyleSheet\r\n\t * @param {String} id Unique ID\r\n\t * @returns {CSSStyleSheet} Created instance\r\n\t */\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {String} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\t\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\t\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {String} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {String} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id, style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSID.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(gsstyles);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from './GSDOM.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSDOMObserver } from './GSDOMObserver.mjs';\r\nimport { GSCacheStyles } from './GSCacheStyles.mjs';\r\n\r\nconst adoptedId = Symbol();\r\nconst observer = Symbol();\r\n\r\n/**\r\n * Monitor HTMLStyleElement & HTMLLinkElement (of type stylesheet) for changes.\r\n * Every such element marked with data-adoptable=\"true\" will be cached and\r\n * will trigger gs-adopted event to notify component controller to update adoptableStyleSheet list\r\n */\r\nexport class GSAdoptedEngine {\r\n\r\n  static #timerID = 0;\r\n  static #ID = Date.now();\r\n  static #scheduled = false;\r\n\r\n  static #init() {\r\n    const me = GSAdoptedEngine;\r\n    me.observe(document.head);\r\n    me.#preload();\r\n    me.#timerID = setInterval(() => me.#adopt(), me.timeout);\r\n  }\r\n\r\n  static #clear() {\r\n    const me = GSAdoptedEngine;\r\n    clearInterval(me.#timerID);\r\n    me.#timerID = undefined;\r\n  }\r\n\r\n  static #adopt() {\r\n    const me = GSAdoptedEngine;\r\n    const sheets = me.#adoptable;\r\n    if (sheets.length == 0) return me.#clear();\r\n    sheets.map(s => me.#adoptSheet(s));\r\n    me.update();\r\n  }\r\n\r\n  static update() {\r\n    const me = GSAdoptedEngine;\r\n    if (me.#scheduled) return;\r\n    me.#scheduled = true;\r\n    queueMicrotask(() => {\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          document.adoptedStyleSheets = me.#sorted;\r\n          document.adoptedStyleSheets.id = ++me.#ID;\r\n        } finally {\r\n          me.#scheduled = false;\r\n          globalThis.dispatchEvent(new CustomEvent('gs-adopted'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static #asText(sheet) {\r\n    return Object.values(sheet.cssRules).map(o => o.cssText).join('');\r\n  }\r\n\r\n  static #adoptLink(el) {\r\n    const me = GSAdoptedEngine;\r\n    GSAdoptedEngine.#monitorAttributes(el);\r\n    Array.from(document.styleSheets).filter(s => s.ownerNode === el).map(s => me.#adoptSheet(s));\r\n  }\r\n\r\n  static #adoptSheet(sheet) {\r\n    const me = GSAdoptedEngine;\r\n    const style = me.#asText(sheet);\r\n    return me.#adoptStyle(sheet.ownerNode, style);\r\n  }\r\n\r\n  static #adoptStyle(ownerNode, style) {\r\n    const me = GSAdoptedEngine;\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(style);\r\n    sheet.id = ++me.#ID;\r\n    ownerNode[adoptedId] = sheet.id;\r\n    me.#store(ownerNode, sheet);\r\n    return sheet;\r\n  }\r\n\r\n  static #store(ownerNode, sheet) {\r\n    GSCacheStyles.set(sheet.id, sheet);\r\n  }\r\n\r\n  static #remove(ownerNode, sheet) {\r\n    GSCacheStyles.remove(sheet.id);\r\n    ownerNode[observer]?.disconnect?.();\r\n    ownerNode[observer] = undefined;\r\n  }\r\n\r\n  static get #sorted() {\r\n    return GSCacheStyles.styles;\r\n  }\r\n\r\n  /**\r\n   * List of adoptable styles or links. Filter only those with dataset.adoptable=true\r\n   * @returns {HTMLStyleElement|HTMLLinkElement}\r\n   */\r\n  static get #adoptable() {\r\n    return Object.values(document.styleSheets)\r\n      .filter(o => o.ownerNode)\r\n      .filter(o => o.ownerNode.dataset.adoptable)\r\n      .filter(o => !o.ownerNode[adoptedId]);\r\n  }\r\n\r\n  static #preload() {\r\n    GSDOM.queryAll(document.head, 'link[rel=\"preload\"][as=\"style\"]')\r\n    .forEach(el => {\r\n      el.remove();\r\n      document.head.appendChild(el);\r\n    });\r\n  }\r\n\r\n  static #onAttributeChange(mutationList) {\r\n    mutationList.forEach((mutation) => {\r\n       const id = mutation.target[adoptedId];\r\n       const style = GSCacheStyles.get(id);\r\n       if(style) style.disabled = mutation.target.hasAttribute('disabled');\r\n    });\r\n    GSAdoptedEngine.update();\r\n  }\r\n  \r\n  static #monitorAttributes(element) {\r\n    const me = GSAdoptedEngine;\r\n    const callback = me.#onAttributeChange.bind(me);\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(element, {\r\n      attributeFilter: [\"disabled\"],\r\n      attributeOldValue: true,\r\n      subtree: false,\r\n    });\r\n    return observer;\r\n  }\r\n  \r\n  /**\r\n   * Filter style and link(css) elements which will be shared\r\n   * with all web components. Filter only those marked with data-adoptable\r\n   * @param {HTMLElement} el \r\n   * @returns {Boolean} Return true if monitored element is selected for further processing\r\n   */\r\n  static #onMonitorFilter(el) {\r\n    return (Boolean(el.dataset?.adoptable))\r\n      && (\r\n        (el instanceof HTMLLinkElement && (el.rel === 'stylesheet' || el.as === \"style\"))\r\n        || el instanceof HTMLStyleElement\r\n      );\r\n  }\r\n\r\n  /**\r\n   * When style added to the HTML page, attach it to the WebComponents\r\n   * @param {HTMLStyleElement|HTMLLinkElement} el \r\n   */\r\n  static #onMonitorConnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    if (el instanceof HTMLStyleElement) {\r\n      me.#adoptStyle(el, el.innerText);\r\n      me.update();\r\n    } else if (el instanceof HTMLLinkElement) {\r\n      GSEvents.wait(el, 'load', 0, false).then(e => {\r\n        if (el.rel === 'preload') return el.rel = \"stylesheet\";\r\n        me.#adoptLink(e.target);\r\n        me.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When style removed, remove from adoptable and update\r\n   * @param {HTMLElement} el \r\n   */\r\n  static #onMonitorDisconnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    me.#sorted.filter(o => o.id === el[adoptedId])\r\n          .forEach(o => me.#remove(el, o));\r\n    me.update();\r\n  }\r\n\r\n  /**\r\n   * Observe DOM tree for mutations\r\n   * @param {HTMLElement} owner Root element to watch DOM tree from \r\n   */\r\n  static observe(owner) {\r\n    const me = GSAdoptedEngine;\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorConnect, false, owner);\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorDisconnect, true, owner);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSVersion } from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static ROUTER_URL = globalThis.GS_ROUTER_URL || location.origin;\r\n\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        const rootURL = GSLoader.#defaultURL;\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            GSLoader.TEMPLATE_URL = rootURL;\r\n            globalThis.GS_TEMPLATE_URL = rootURL;\r\n        }\r\n\r\n        if (!globalThis.GS_ROUTER_URL) {\r\n            GSLoader.ROUTER_URL = rootURL;\r\n            globalThis.GS_ROUTER_URL = rootURL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n\r\n    static get #defaultURL() {\r\n        const url = location.href.split('?').pop();\r\n        const seg = url.split('/');\r\n        return url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n    }\r\n\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        //if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        }\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used to load router definition from virtual path\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getRouter(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? GSUtil.toJson(el.innerHTML) : {};\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getRouterURL(def);\r\n        return GSLoader.loadSafe(def, 'GET', null, true);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getRouterURL(url = '') {\r\n        url = url.startsWith('//') ? GSLoader.#routerURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #routerURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#routerPath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #routerPath() {\r\n        return GSLoader.ROUTER_URL ? GSLoader.ROUTER_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP method get|put|post\r\n     * @param {Object} headers HTTP request headers in JSON key/value pairs\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @param {} body Data to send in a request \r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            // TODO - detect if binary\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by its name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve already existing template by name,\r\n\t * or inject a new one if it does not exist already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} tpl Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t// return document.getElementById(tpl.slice(1));\r\n\t\t\treturn GSDOM.query(`template[id=\"${tpl.slice(1)}\"]`, true);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-attribute - toggle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-call - calls a function on a given target (multiple functions supported)\r\n * - data-gs-event - emit event (can bubble or compose)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: \r\n * data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * \r\n * data-gs-target determine element on which to execute,\r\n * if not specified, it means current element\r\n * \r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n        \r\n        event: { attribute: 'data-gs-event' },\r\n        bubbles: { attribute: 'data-gs-bubbles', type: Boolean },\r\n        composed: { attribute: 'data-gs-composed', type: Boolean },\r\n\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        hashed: { attribute: 'data-gs-hashed', type: Boolean },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el) {\r\n        const me = this;\r\n        me.#host =  el.isProxy ? el.self : el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = el.isProxy ? el : GSAttributeHandler.proxify(me.#host);\r\n    }\r\n\r\n    /**\r\n     * Main function to process element data-gs-* attributes\r\n     * @param {Event} e \r\n     */\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    /**\r\n     * Process each individual data-gs-* attribute\r\n     * @param {GSElement} host \r\n     * @param {String|HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleSwap(host, target);\r\n        me.#handleInject(host, target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleEvent(host, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    /**\r\n     * Bind provided value to the form or form element\r\n     * @param {HTMLFormElement|HTMLInputElement} target \r\n     * @param {Event} evt \r\n     * @returns \r\n     */\r\n    #handleBinding(target, evt) {\r\n        const source = evt?.target?.field || evt?.target?.form || evt?.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (!(isField || isForm)) return;\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Trigger 'action' event on target to execute specific function\r\n     * @param {GSElement} target \r\n     */\r\n    #handleAction(target) {\r\n        if (this.action) GSEvents.send(target, 'action', this.action, true, true);\r\n    }\r\n\r\n    /**\r\n     * Set target attribute value\r\n     * @param {HTMLElement} target \r\n     * @returns \r\n     */\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    /**\r\n     * Set value to target propery\r\n     * @param {GSElement} target \r\n     * @returns \r\n     */\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle target css class\r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {*} host \r\n     * @param {*} target \r\n     * @param {*} evt \r\n     * @returns \r\n     */\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)(evt);\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send an event to a target\r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    #handleEvent(host, evt) {\r\n        host.emit(this.event, evt, this.bubbles, this.composed, true);\r\n    }\r\n\r\n    #handleContent(host, target, value, clean = false) {\r\n        const me = this;\r\n        if (value) {\r\n            let src = '';\r\n            const useDef = GSUtil.asBool(value);\r\n            if (useDef) {\r\n                src = GSDOM.fromJsonAsString(me.definition);\r\n            } else {                \r\n                src = me.#toHTML(value);                \r\n            }\r\n\r\n            const content = GSDOM.parse(src, true);\r\n\r\n            if (!useDef) {\r\n                GSAttr.jsonToAttr(me.definition, content);\r\n            }\r\n\r\n            if (clean) { \r\n                target.innerHTML = '';\r\n            }\r\n\r\n            content.dataset.gsHashed = me.hashed;\r\n            me.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Inject HTML to target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleInject(host, target) {\r\n        this.#handleContent(host, target, this.inject, false);\r\n    }\r\n\r\n    /**\r\n     * Swap inner HTML on a target\r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleSwap(host, target) {\r\n        this.#handleContent(host, target, this.swap, true);\r\n    }\r\n\r\n    /**\r\n     * Convert value as URL to a tempalte or as a component name to inject\r\n     * @param {String} value \r\n     * @returns {String}\r\n     */\r\n    #toHTML(value = '') {\r\n        return value.indexOf('/') < 0 ? `<${value}></${value}>` : `<gs-template flat src=\"${value}\"></gs-template>`;\r\n    }\r\n\r\n    /**\r\n     * Load HTML template and apply to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    /**\r\n     * Apply htmltemplate to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} template \r\n     */    \r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    /**\r\n     * Apply html template to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} content \r\n     */    \r\n    #applyContent(host, target, content) {\r\n        if (host?.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    detach(name = 'click') {\r\n        //GSEvents.detachListeners(this.#host);\r\n        const me = this;\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        me.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n        const me = this;\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                //return [GSDOM.root(me.#host)];\r\n                return [me.#host.parentComponent];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n        const list = GSDOM.queryAll(document.body, me.target, false, true).filter(el => el.tagName !== 'GS-ITEM'); \r\n        if (list.length === 0) list.push(me.#host);\r\n        return list;\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get definition() { return this.#proxy[Symbol.for('#def')]; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get event() { return this.#proxy.event; }\r\n    get bubbles() { return this.#proxy.bubbles; }\r\n    get composed() { return this.#proxy.composed; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n    get hashed() { return this.#proxy.hashed; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    /**\r\n     * Is property value JSON\r\n     */\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    /**\r\n     * Is element attribute value JSON\r\n     */\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    /**\r\n     * Wrap any element into data-gs-* handler\r\n     * @param {HTMLElement} el \r\n     * @returns {Proxy}\r\n     */\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    /**\r\n     * Process data-gs-* attributtes on a element\r\n     * @param {HTMLElement} el \r\n     * @param {Event} e \r\n     * @returns \r\n     */\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('data-gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    /**\r\n     * Create a new attribute handler instance\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     * @param {boolean} override If 'false' will skip existing atributes\r\n     */\r\n    static clone(from, to, override = true) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .filter(o => override || !to.hasAttribute(o.attribute))          \r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    /**\r\n     * Check if component is bindable to events\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static isBindable(el) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        return Object.values(def)\r\n            .filter(o => el.hasAttribute(o.attribute))\r\n            .length > 0;\r\n\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBeep class\r\n * @module base/GSBeep\r\n */\r\n\r\n\r\n/**\r\n * A helper class to use browser AudiContext to make tones\r\n * @class\r\n */\r\nexport class GSBeep {\r\n\r\n    static audioCtx = globalThis.AudioContext || globalThis.webkitAudioContext || globalThis.audioContext;\r\n\r\n    /**\r\n     * Helper function to emit a beep sound in the browser using the Web Audio API.\r\n     * \r\n     * @param {number} duration - The duration of the beep sound in milliseconds.\r\n     * @param {number} frequency - The frequency of the beep sound.\r\n     * @param {number} volume - The volume of the beep sound.\r\n     * @param {string} tyoe - The sound type (sine, square, sawtooth, triangle, custom)\r\n     * \r\n     * @returns {Promise} - A promise that resolves when the beep sound is finished.\r\n     */\r\n    static beep(duration = 200, frequency = 440, volume = 1, type = 'sine') {\r\n        return new Promise((resolve, reject) => {\r\n            try{\r\n                if (!GSBeep.isAvailable) return resolve();\r\n                const context = new GSBeep.audioCtx();\r\n                const oscillatorNode = context.createOscillator();\r\n                const gainNode = context.createGain();\r\n                oscillatorNode.connect(gainNode);\r\n\r\n                // Set the oscillator frequency in hertz\r\n                oscillatorNode.frequency.value = frequency;\r\n\r\n                // Set the type of oscillator\r\n                oscillatorNode.type = type;\r\n                gainNode.connect(context.destination);\r\n\r\n                // Set the gain to the volume\r\n                gainNode.gain.value = volume * 0.01;\r\n\r\n                // Start audio with the desired duration\r\n                oscillatorNode.start(context.currentTime);\r\n                oscillatorNode.stop(context.currentTime + duration * 0.001);\r\n\r\n                // Resolve the promise when the sound is finished\r\n                oscillatorNode.onended = () => resolve();                \r\n            }catch(error) {\r\n                reject(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    static get isAvailable() {\r\n        const {isActive, hasBeenActive } =  navigator.userActivation;\r\n        return isActive || hasBeenActive;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promises sequentially\r\n\t * @param {Array<Promise>} ps \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const controller = abortable instanceof AbortController ? abortable : (abortable ? new GSAbortController(timeout) : null);\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        wrap.controller = abortable instanceof AbortController ? abortable : (abortable ? new GSAbortController(timeout) : null);\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n            me.#listeners.delete(o);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport { GSEvent } from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport class GSEventBus {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {String} name EventBus name\r\n     * @param {String} type Event name\r\n     * @param {Object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {String} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {String} name unique buss name\r\n     * @returns {Boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constructor to attach Gesture featuer to an HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {Boolean} swipe Monitor swipe gesture\r\n     * @param {Boolean} tap Monitor tap gesture\r\n     * @param {Boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move: me.#handleTouchMove.bind(me),\r\n            start: me.#handleTouchStart.bind(me),\r\n            end: me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) {\r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 && Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {Number}\r\n     */\r\n    static fingers(e) {\r\n        return e.detail.touches?.length;\r\n    }\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns {GSGesture}\r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport class GSItem extends HTMLElement {\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic properties = {\r\n\t\tactive: { type: Boolean },\r\n\t\tdisabled: { type: Boolean },\r\n\t\tselected: { type: Boolean },\r\n\t\tautofocus: { type: Boolean },\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return template content of GS-ITEM element (if exists)\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tget body() {\r\n\t\tlet tpl = GSAttr.get(this, 'template');\r\n\t\tif (tpl) return `<gs-template flat src=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = this.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item elements\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tget items() {\r\n\t\treturn Array.from(this.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSAttr.get(this, 'name', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent GS-* component\r\n\t */\r\n\tget parentComponent() {\r\n\t\treturn GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n\t}\r\n\t\t\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate that parent element contains only specific childrens\r\n\t * @param {*} own \r\n\t * @param {*} tagName \r\n\t * @returns \r\n\t */\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic collect(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Convert GS-ITEM list to JSON\r\n\t * @param {HTMLElement} root Element containing GS-ITEM childs \r\n\t * @returns {Array} Arary of JSON objects\r\n\t */\r\n\tstatic toJSON(root) {\r\n\t\treturn GSItem.collect(root).map(el => el.asJSON(true));\r\n\t}\r\n\r\n\t/**\r\n\t * Make GS-ITEM attributes JSON compatible \r\n\t * @param {*} root \r\n\t * @param {*} definition \r\n\t * @returns \r\n\t */\r\n    static proxify(root, definition) {        \r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, definition));\r\n    }\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport class GSPopper {\r\n\r\n\t/**\r\n\t * A simple wrapper to get element DOMRect\r\n\t * @param {HTMLElement} el \r\n\t * @returns {DOMRect}\r\n\t */\r\n\tstatic asRect(el) {\r\n\t\treturn el.getBoundingClientRect();\r\n\t}\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = GSPopper.asRect(el);\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = GSPopper.asRect(element);\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tif (!style) return;\r\n\r\n\t\tconst css = {\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '0px',\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.translate = `${obj.x}px ${obj.y}px`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tconst astyle = GSDynamicStyle.dynamicStyle(arrow);\r\n\t\tif (!style) return;\r\n\t\t\r\n\t\tconst css = {\r\n\t\t\tinset: GSPopper.#inset(pos),\r\n\t\t\tposition: 'absolute',\r\n\t\t\tmargin: '0px',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\twidth: 'max-content',\r\n\t\t\theight: 'max-content',\t\t\t\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\t\tastyle.position = 'absolute';\r\n\r\n\t\tconst srect = GSPopper.asRect(source);\r\n\t\tconst arect = GSPopper.asRect(arrow);\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tconst aopt = {\r\n\t\t\ttranslate: `${arr.x}px ${arr.y}px`,\r\n\t\t\ttop: arr.top ? arr.top : '',\r\n\t\t\tleft: arr.left ? arr.left : ''\r\n\t\t}\r\n\r\n\t\tconst opt = {\r\n\t\t\ttranslate : `${obj.x}px ${obj.y}px`\r\n\t\t};\r\n\r\n\t\tObject.assign(style, opt);\r\n\t\tObject.assign(astyle, aopt);\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst opt = {};\r\n\r\n\t\topt.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\topt.left = '';\r\n\t\t\topt.top = '0px';\r\n\t\t\tshift = 0; //pos.isStart ? size : -1 * size;\r\n\t\t\topt.translate = `${shift}px ${arrowPosH / 2}px`;\r\n\t\t} else {\r\n\t\t\topt.top = '';\r\n\t\t\topt.left = '0px';\r\n\t\t\tshift = 0; //pos.isTop ? size : -1 * size;\r\n\t\t\topt.translate = `${arrowPosW}px ${shift}px`;\r\n\t\t}\r\n\r\n\t\tGSDynamicStyle.applyDynamicStyle(arrow, opt);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {\r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSQueryCSS } from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value);\r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n\r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSRouter class\r\n * @module base/GSRouter\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSAttributeHandler } from \"./GSAttributeHandler.mjs\";\r\n\r\n/**\r\n * Class for handling hash based routing.\r\n * Class uses GSAttributeHandler and optional JSON definition to handle routing.\r\n * \r\n * Use globalThis.GS_ROUTER_URL before loading this module to define JSON definition file location\r\n * @Class\r\n */\r\nexport class GSRouter {\r\n\r\n    #logging = true;\r\n    #enabled = false;\r\n    #hashCallback = null;\r\n    #definition = {};\r\n\r\n    constructor() {\r\n        this.#hashCallback = this.#onHashChange.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Loda JSON definition for routing from JSON document.\r\n     * @param {string} url \r\n     * @returns \r\n     */\r\n    async loadDefinition(url) {\r\n        return GSLoader.getRouter(url);\r\n    }\r\n\r\n    /**\r\n     * Initialize routing from provided URL\r\n     * @param {string} url \r\n     * @param {number} wait in ms\r\n     */\r\n    async initialize(url, wait = 0) {\r\n        const me = this;\r\n        if (GSUtil.isStringNonEmpty(url)) {\r\n            me.#definition = await me.loadDefinition(url);\r\n        }\r\n        if (wait > 0) {\r\n            await GSEvents.waitPageLoad(null, null, null, wait);\r\n        }\r\n        me.enable();\r\n        me.#onHashChange();        \r\n    }\r\n\r\n    /**\r\n     * Enable routing\r\n     */\r\n    enable() {\r\n        if (this.#enabled) return;\r\n        GSEvents.on(globalThis, null, 'hashchange', this.#hashCallback);\r\n        this.#enabled = true;\r\n    }\r\n\r\n    /**\r\n     * Disable routing\r\n     */\r\n    disable() {\r\n        GSEvents.off(globalThis, null, 'hashchange', this.#hashCallback);\r\n        this.#enabled = false;\r\n    }\r\n\r\n    /**\r\n     * Register a single route with options\r\n     * @param {string} route Abstract url for a route\r\n     * @param {Object} options \r\n     */\r\n    register(route, options) {\r\n        this.#definition[route] = options;\r\n    }\r\n\r\n    /**\r\n     * Unregister a single route\r\n     * @param {string} route \r\n     */\r\n    unregister(route) {\r\n        delete this.#definition[route];\r\n    }\r\n\r\n    /**\r\n     * Get URL hashbang without hash\r\n     */\r\n    get hash() {\r\n        return location.hash.slice(1);\r\n    }\r\n\r\n    /**\r\n     * Return routing definition object\r\n     */\r\n    get definition() {\r\n        return GSData.deepClone(this.#definition);\r\n    }\r\n\r\n    get log() {\r\n        return this.#logging;\r\n    }\r\n\r\n    set log(val) {\r\n        this.#logging = GSUtil.asBool(val);\r\n    }\r\n\r\n    #onHashChange() {\r\n        const me = this;\r\n        const def = me.#definition[\"#def\"] || {};\r\n        const defaults = me.#definition[\"#defaults\"] || {};\r\n        const route = me.#definition[me.hash];\r\n        if (route) {\r\n            const el = GSDOM.fromJson(Object.assign({}, route, def, defaults));\r\n            el.dataset.gsHashed = true;\r\n            const px = GSAttributeHandler.proxify(el);\r\n            GSAttributeHandler.process(px);\r\n        } else if (me.#logging) {\r\n            GSLog.warn(null, `No routing definition found for: ${me.hash}`);\r\n        }\r\n    }\r\n\r\n    static {\r\n        if (globalThis.GS_DEFINITION_URL) {\r\n            new GSRouter().initialize(globalThis.GS_DEFINITION_URL, globalThis.GS_ROUTER_WAIT);\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTheme class\r\n * @module base/GSTheme\r\n */\r\n\r\n/**\r\n * Switch between dark and light mode\r\n * @Class\r\n */\r\nexport class GSTheme {\r\n\r\n    static #STORAGE = 'gs-theme-mode';\r\n\r\n    /**\r\n     * Changes the theme to 'dark mode' and save settings to local stroage.\r\n     * Basically, replaces/toggles every CSS class that has '-light' class with '-dark'\r\n     * @param {HTMLElement} el \r\n     */\r\n    static darkMode(el) {\r\n        GSTheme.#switch(el, 'light', 'dark');\r\n    }\r\n\r\n    /**\r\n     * Changes the theme to 'light mode' and save settings to local stroage.\r\n     * @param {HTMLElement} el \r\n     */\r\n    static lightMode(el) {\r\n        GSTheme.#switch(el, 'dark', 'light');\r\n    }\r\n\r\n    static #switch(el, from = 'light', to = 'dark') {\r\n\r\n        const root = el || document.body;\r\n\r\n        // TODO  switch dark/light mode ?!??!? \r\n\r\n        // save last state\r\n        GSTheme.theme = to;\r\n    }\r\n\r\n    static get theme() {\r\n        return localStorage.getItem(GSTheme.#STORAGE);\r\n    }\r\n\r\n    static set theme(val) {\r\n        localStorage.setItem(GSTheme.#STORAGE, val);\r\n        window.dispatchEvent(new CustomEvent('gs-theme', { detail: val }));\r\n        const htmlEl = document.head.parentElement;\r\n        if (val) {\r\n            htmlEl.dataset.bsTheme = val;\r\n        } else {\r\n            delete htmlEl.dataset.bsTheme;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get system default theme by media query\r\n     * @returns {String} dark|light \r\n     */\r\n    static getSystemDefaultTheme() {\r\n        const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\r\n        return darkThemeMq.matches ? 'dark' : 'light';\r\n    }\r\n\r\n    static #onTheme(e) {\r\n        const q = new URLSearchParams(location.hash.slice(1));\r\n        GSTheme.theme = q.get('theme');\r\n    }\r\n\r\n    static #setup() {\r\n        window.addEventListener('hashchange', GSTheme.#onTheme)\r\n        let settings = localStorage.getItem(GSTheme.#STORAGE);\r\n        if (settings == null) {\r\n            settings = GSTheme.getSystemDefaultTheme();\r\n        }\r\n\r\n\r\n        if (settings == 'dark') return GSTheme.darkMode();\r\n        if (settings == 'light') return GSTheme.lightMode();\r\n        // TODO switch\r\n\r\n    }\r\n\r\n    static {\r\n        GSTheme.#setup();\r\n        globalThis.GSTheme = GSTheme;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst tree = new BinaryTree(1, 'AB');\r\n\r\ntree.insert(1, 11, 'AC');\r\ntree.insert(1, 12, 'BC');\r\ntree.insert(12, 121, 'BG', { right: true });\r\n\r\n[...tree.preOrderTraversal()].map(x => x.value);\r\n// ['AB', 'AC', 'BC', 'BCG']\r\n\r\n[...tree.inOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB', 'BC', 'BG']\r\n\r\ntree.value;                // 'AB'\r\ntree.hasChildren;          // true\r\n\r\ntree.find(12).isLeaf;           // false\r\ntree.find(121).isLeaf;          // true\r\ntree.find(121).parent.value;    // 'BC'\r\ntree.find(12).left;             // null\r\ntree.find(12).right.value;      // 'BG'\r\n\r\ntree.remove(12);\r\n\r\n[...tree.postOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB']\r\n*/\r\n\r\n/**\r\n * Binary Tree Node data holder\r\n */\r\nexport class BinaryTreeNode {\r\n\r\n    constructor(key, value = key, parent = null) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n\r\n    /**\r\n     * Check if both left and right are empty.\r\n     */\r\n    get isLeaf() {\r\n        return this.left === null && this.right === null;\r\n    }\r\n\r\n    /**\r\n     * Check if node has children\r\n     */\r\n    get hasChildren() {\r\n        return !this.isLeaf;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Binary tree implementation\r\n */\r\nexport class BinaryTree extends BinaryTreeNode {\r\n\r\n    constructor(key, value = key) {\r\n        super(key, value);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in in-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *inOrderTraversal(node = this) {\r\n        if (node.left) yield* this.inOrderTraversal(node.left);\r\n        yield node;\r\n        if (node.right) yield* this.inOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in post-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *postOrderTraversal(node = this) {\r\n        if (node.left) yield* this.postOrderTraversal(node.left);\r\n        if (node.right) yield* this.postOrderTraversal(node.right);\r\n        yield node;\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in pre-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *preOrderTraversal(node = this) {\r\n        yield node;\r\n        if (node.left) yield* this.preOrderTraversal(node.left);\r\n        if (node.right) yield* this.preOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to find the given parent node and \r\n     * insert a new child BinaryTreeNode either as the left or right child, \r\n     * depending on the passed options object.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @param {*} options \r\n     * @returns {boolean} Return true if data inserted\r\n     */\r\n    insert(\r\n        parentNodeKey,\r\n        key,\r\n        value = key,\r\n        { left, right } = { left: true, right: true }\r\n    ) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === parentNodeKey) {\r\n                const canInsertLeft = left && node.left === null;\r\n                const canInsertRight = right && node.right === null;\r\n                if (!canInsertLeft && !canInsertRight) return false;\r\n                if (canInsertLeft) {\r\n                    node.left = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n                if (canInsertRight) {\r\n                    node.right = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to remove a BinaryTreeNode from the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.left.key === key) {\r\n                node.left = null;\r\n                return true;\r\n            }\r\n            if (node.right.key === key) {\r\n                node.right = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to retrieve the given node in the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    find(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new DoublyLinkedList();\r\n\r\nlist.insertFirst(1);\r\nlist.insertFirst(2);\r\nlist.insertFirst(3);\r\nlist.insertLast(4);\r\nlist.insertAt(3, 5);\r\n\r\nlist.size;                      // 5\r\nlist.head.value;                // 3\r\nlist.head.next.value;           // 2\r\nlist.tail.value;                // 4\r\nlist.tail.previous.value;       // 5\r\n[...list].map(e => e.value);    // [3, 2, 1, 5, 4]\r\n\r\nlist.removeAt(1);               // 2\r\nlist.getAt(1).value;            // 1\r\nlist.head.next.value;           // 1\r\n[...list].map(e => e.value);    // [3, 1, 5, 4]\r\n\r\nlist.reverse();\r\n[...list].map(e => e.value);    // [4, 5, 1, 3]\r\n\r\nlist.clear();\r\nlist.size;                      // 0\r\n*/\r\n\r\n/**\r\n *  Linear data structure following doubly linked list order of operations.\r\n */\r\nexport class Node {\r\n\r\n    value = null;\r\n    next = null;\r\n    previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    release() {\r\n        this.value = undefined;\r\n        this.next = undefined;\r\n        this.previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DoublyLinkedList {\r\n\r\n    #nodes = [];\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     */\r\n    get size() {\r\n        return this.#nodes.length;\r\n    }\r\n\r\n    /**\r\n     * First element in the list\r\n     */\r\n    get head() {\r\n        return this.size ? this.#nodes[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Last elemet in the list\r\n     */\r\n    get tail() {\r\n        return this.size ? this.#nodes[this.size - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Create new linked node\r\n     * @param {*} value \r\n     * @param {*} nextNode \r\n     * @param {*} previousNode \r\n     * @returns \r\n     */\r\n    create(value, nextNode, previousNode) {\r\n        return new Node(value, nextNode, previousNode);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the given position in the list\r\n     * @param {*} index \r\n     * @param {*} value \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    insertAt(index, value, safe) {\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index] || null;\r\n        const node = this.create(value, nextNode, previousNode);\r\n\r\n        if (previousNode) previousNode.next = node;\r\n        if (nextNode) nextNode.previous = node;\r\n        this.#nodes.splice(index, 0, node);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the beginning of the list\r\n     * @param {*} value \r\n     */\r\n    insertFirst(value) {\r\n        this.insertAt(0, value);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the end of the list\r\n     * @param {*} value \r\n     */\r\n    insertLast(value) {\r\n        this.insertAt(this.size, value);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data in the given index\r\n     * @param {Number} index \r\n     * @returns \r\n     */\r\n    getAt(index) {\r\n        return this.#nodes[index];\r\n    }\r\n\r\n    indexOf(val) {\r\n        return this.#nodes.indexOf(val);\r\n    }\r\n\r\n    /**\r\n     * Remove the data at the given index\r\n     * @param {*} index \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    removeAt(index, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index + 1] || null;\r\n\r\n        if (previousNode) previousNode.next = nextNode;\r\n        if (nextNode) nextNode.previous = previousNode;\r\n\r\n        return this.#nodes.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    clear(full = true) {\r\n        if (full) this.#nodes.forEach(o => o.release());\r\n        this.#nodes = [];\r\n    }\r\n\r\n    /**\r\n     * Reverse data order\r\n     */\r\n    reverse() {\r\n        this.#nodes = this.#nodes.reduce((acc, { value }) => {\r\n            const nextNode = acc[0] || null;\r\n            const node = new Node(value, nextNode, null);\r\n            if (nextNode) nextNode.previous = node;\r\n            return [node, ...acc];\r\n        }, []);\r\n    }\r\n\r\n    toArray() {\r\n        return this.#nodes.map(e => e.value);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#nodes;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield* this.#nodes;\r\n    }\r\n\r\n    #validate(index, safe = false) {\r\n        const isInvalid = this.#isInvalidIndex(index);\r\n        if (isInvalid) {\r\n            if (safe) {\r\n                console.log(this.#error());\r\n            } else {\r\n                throw new Error(this.#error());\r\n            }\r\n        }\r\n        return !isInvalid;\r\n    }\r\n\r\n    #isInvalidIndex(index) {\r\n        return !Number.isInteger(index) || index < 0 || index > this.size;\r\n    }\r\n\r\n    #error() {\r\n        return `Invalid index. Current length is ${this.size}.`;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        const list = new DoublyLinkedList();\r\n        if (Array.isArray(data)) data.forEach(v => list.insertLast(v));\r\n        return list;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new LinkedList(1);\r\n\r\nlist.append(2).append(3).append(4);\r\n\r\n*/\r\n\r\n/**\r\n * Node data holder\r\n */\r\nexport class LinkedList {\r\n\r\n    #value = null;\r\n    #next = null;\r\n    #previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.#value = value;\r\n        this.#next = next;\r\n        this.#previous = previous;\r\n    }\r\n\r\n    remove() {\r\n        this.#previous.#next = this.#next;\r\n        this.#next.#previous = this.#previous;\r\n        this.#release();\r\n    }\r\n\r\n    /**\r\n     * Append node after \r\n     * @param {*} node \r\n     */\r\n    append(node) {\r\n        node = this.#wrap(node);\r\n        node.#next = this.#next;\r\n        node.#previous = this;\r\n        this.#next = node;\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * Insert node before\r\n     * @param {*} node \r\n     */\r\n    insert(node) {\r\n        node = this.#wrap(node);\r\n        node.#previous = this.#previous;\r\n        node.#next = this;\r\n        this.#previous = node;\r\n        return node;\r\n    }\r\n\r\n    update(val) {\r\n        this.#value = val;\r\n        return this;\r\n    }\r\n\r\n    #wrap(node) {\r\n        return node instanceof LinkedList ? node : new LinkedList(node);\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    #release() {\r\n        this.#value = undefined;\r\n        this.#next = undefined;\r\n        this.#previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#value;\r\n    }\r\n\r\n    get head() {\r\n        return this.previous?.head || this;\r\n    }\r\n\r\n    get tail() {\r\n        return this.next?.tail || this;\r\n    }\r\n\r\n    get next() {\r\n        return this.#next;\r\n    }\r\n\r\n    get previous() {\r\n        return this.#previous;\r\n    }\r\n\r\n    get value() {\r\n        return this.#value;\r\n    }\r\n\r\n    static isNode(val) {\r\n        return val instanceof LinkedList;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        if (!Array.isArray(data)) return null;\r\n        const root = new LinkedList();\r\n        data.reduce((node, val, idx) => idx === 1 ? root.update(node).append((val)) : node.append(val));\r\n        return root;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure following last in, first out (LIFO) order of operations.\r\n */\r\nexport class Stack extends Array {\r\n    \r\n    push(item) {\r\n        this.unshift(item);\r\n    }\r\n\r\n    pop() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure following first in, first out (FIFO) order of operations.\r\n */\r\nexport class Queue extends Array {\r\n    \r\n    enqueue(item) {\r\n        this.push(item);\r\n    }\r\n\r\n    dequeue() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Tree Node data holder\r\n */\r\nexport class Tree {\r\n\r\n    value;\r\n\r\n    #key = null;\r\n    #parent = null;\r\n    #children;\r\n\r\n    #folder = false;\r\n    #level = 0;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        this.#key = key;\r\n        this.#parent = parent;\r\n        this.#folder = value?.leaf === false;\r\n        this.#level = parent ? parent.level + 1 : level;\r\n        this.#children = this.#folder ? [] : undefined;\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Return tree list from root to this node.\r\n     */\r\n    get subtree() {\r\n        return Array.from(this.up(undefined, false, true, true));\r\n    }\r\n\r\n    get levelID() {\r\n        return this.subtree.map(o => o.level).join('.');\r\n    }\r\n\r\n    /**\r\n     * Unique node canonical form\r\n     */\r\n    get nodeID() {\r\n        //if (this.parent?.level < 0) return this.index;\r\n        return this.subtree.map(o => o.index).join('.');\r\n    }\r\n\r\n    get path() {\r\n        return this.subtree.map(o => o.key).join('/');\r\n    }\r\n\r\n    get index() {\r\n        return this.parent?.nodes.indexOf(this) || 0;\r\n    }\r\n\r\n    get size() {\r\n        return this.#children?.length || -1;\r\n    }\r\n\r\n    get level() {\r\n        return this.#level;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Check if #children is empty\r\n     */\r\n    get isLeaf() {\r\n        return !this.#folder;\r\n    }\r\n\r\n    get isFolder() {\r\n        return this.#folder;\r\n    }\r\n\r\n    /**\r\n     * Check if has #childrens\r\n     */\r\n    get hasChildren() {\r\n        return this.#folder && this.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get key() {\r\n        this.#key ??= this.nodeID;\r\n        return this.#key;\r\n    }\r\n\r\n    get nodes() {\r\n        return this.#children;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get parent() {\r\n        return this.#parent;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n    /**\r\n     * Check if there are more siblings \r\n     */\r\n    get hasMore() {\r\n        return this.#parent?.size > this.index + 1;\r\n    }\r\n\r\n    get firstChild() {\r\n        return this.hasMore ? this.#children[0] : undefined;\r\n    }\r\n\r\n    get lastChild() {\r\n        return this.hasMore ? this.#children[this.#children.length - 1] : undefined;\r\n    }\r\n\r\n    get next() {\r\n        return this.down(this, false, false).next().value || this.nextSibling || this.parent?.nextSibling;\r\n    }\r\n\r\n    get previous() {\r\n        const node = this.previousSibling;\r\n        return (node?.hasChildren) ? node.lastChild : node || this.up(this, false, false).next().value;\r\n    }\r\n\r\n    get nextSibling() {\r\n        return this.hasMore ? this.#parent.#children[this.index + 1] : undefined;\r\n    }\r\n\r\n    get previousSibling() {\r\n        return this.index > 0 ? this.#parent.#children[this.index - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Clear all #children\r\n     */\r\n    clear() {\r\n        if (this.#children) {\r\n            this.#children.forEach(o => o.release?.());\r\n            this.#children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally, if called externally, \r\n     * make sure node is removed from parent \r\n     */\r\n    release() {\r\n        this.clear();\r\n        this.#key = null;\r\n        this.value = null;\r\n        this.#parent = null;\r\n    }\r\n\r\n    /**\r\n     * Walk down the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     * @param {Boolean} flat Navigate all nodes out of subtree\r\n     */\r\n    *down(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (node.#children?.length) {\r\n            for (let child of node.#children) {\r\n                yield* this.down(child, values, true, reverse, flat);\r\n            }\r\n        }\r\n        if (flat) {\r\n            const item = node.nextSibling || node.parent.nextSibling;\r\n            if (item) yield* this.down(item, values, true, reverse, flat);\r\n        }\r\n        /*\r\n        */\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk up the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     */\r\n    *up(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (flat) {\r\n            let item = node.previousSibling;\r\n            item = item?.isFolder ? item.lastChild : item;\r\n            if (item) yield* this.up(item, values, true, reverse, flat);\r\n        }        \r\n        if (node.parent) {\r\n            yield* this.up(node.parent, values, true, reverse, flat);\r\n        }\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk through all nodes\r\n     * @param {*} node \r\n     */\r\n    walk = this.down;\r\n\r\n    /**\r\n     * Simulate array function \"forEach\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */\r\n    forEach(callback, flat = false, reverse = false) {\r\n        this.every((node, index) => {\r\n            callback(node, index);\r\n            return true;\r\n        }, flat, reverse);\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"every\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    every(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let sts = true;\r\n        let i = 0;\r\n        for (let node of it) {\r\n            sts = callback(node, i++);\r\n            if (!sts) break;\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"find\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    find(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let i = 0;\r\n        for (let node of it) {\r\n            if (callback(node, i++)) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"filter\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only childrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    filter(callback, flat, reverse) {\r\n        return [...this.#filtered(callback, flat, reverse)];\r\n    }\r\n\r\n    *#filtered(callback, flat, reverse) {\r\n        const it = this.iterate(flat, reverse);\r\n        for (let node of it) {\r\n            let res = callback(node);\r\n            if (res) yield node;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Iterate all nodes\r\n     * @param {boolean} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {boolean} reverse If set, will iterate up the tree\r\n     */\r\n    *iterate(flat, reverse) {\r\n        reverse ? yield* this.up(this, false, false, false, flat) : yield* this.down(this, false, false,  false, flat);\r\n    }\r\n\r\n    /**\r\n     * Add a new Tree to the tree.\r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    append(key, value = key) {\r\n        let newOne = undefined;\r\n        if (key instanceof Tree) {\r\n            key.#parent = this;\r\n            key.#level = this.#level + 1;\r\n            newOne = key;\r\n        } else {\r\n            newOne = new Tree(key, value, this);\r\n        }\r\n        this.#folder = true;\r\n        this.#children ??= [];\r\n        this.#children.push(newOne);\r\n        return newOne;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method and Array.prototype.push() \r\n     * to add a new Tree to the tree.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    insert(parentNodeKey, key, value = key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === parentNodeKey) {\r\n                const newOne = new Tree(key, value, node);\r\n                this.#folder = true;\r\n                this.#children ??= [];\r\n                node.#children.push(newOne);\r\n                return newOne;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove node from tree. If key is set, will search for first node with matching key.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n\r\n        const me = this;\r\n\r\n        if (key) {\r\n            const node = me.findByKey(key);\r\n            node?.remove();\r\n            return node;\r\n        }\r\n\r\n        if (me.isRoot) throw new Error('Root node can\\'t be removed!');\r\n        const node = me.parent;\r\n        const filtered = node.#children.filter(c => c !== me);\r\n        if (filtered.length !== node.#children.length) {\r\n            node.#children = filtered;\r\n            return me;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method to retrieve the given node in the tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    findByKey(key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convert tree into array list\r\n     * @returns \r\n     */\r\n    flatten(values, inclusive, reverse) {\r\n        return [...this.down(this, values, inclusive, reverse)];\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) Tree.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.#children?.map(o => o.toJSON()) || {};\r\n        return this.isLeaf ? { key: this.key, value: this.value } :\r\n            {\r\n                key: this.key,\r\n                value: this.value,\r\n                items: this.#children.map(o => o.toJSON())\r\n            };\r\n    }\r\n\r\n    /**\r\n     * Make node iterable\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.down();\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof Tree;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) throw new Error('Parent required when data is array');\r\n            raw.forEach(o => Tree.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        const tree = new Tree(obj.key, obj, data ? parent : undefined);\r\n        if (hasParent) parent.append(tree);\r\n        if (items) Tree.from(tree, items);\r\n        return tree;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynamic menu etc.\r\n * @Class\r\n */\r\nexport class DataSelector  {\r\n\r\n    static #SELECT = Symbol('select');\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static addSelected(val) {\r\n        if (!val) return false;\r\n\r\n        if (Array.isArray(val)) {\r\n            val[DataSelector.#SELECT] = true;\r\n        } else {\r\n            GSUtil.asArray(val).forEach(o => o[DataSelector.#SELECT] = true);\r\n        }\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    static removeSelected(val) {\r\n        if (!val) return false;\r\n        delete val[DataSelector.#SELECT];\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    static clearSelected(data) {\r\n        const me = this;\r\n        GSUtil.asArray(data).forEach(o => me.removeSelected(o));\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    static getSelected(data = []) {\r\n        const me = this;        \r\n        return me.isSelected(data) || GSUtil.asArray(data).filter(o => me.isSelected(o));\r\n    }\r\n\r\n    /**\r\n     * Check if record id is in list of selected records\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static isSelected(val) {\r\n        return val ? val[DataSelector.#SELECT] === true : false;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    /**\r\n     * Reset the registry\r\n     */\r\n    resetRegistry() {\r\n        this.#handlers.clear();\r\n        this.#map.clear();\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../base/GSID.mjs\";\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { DataSelector } from \"./DataSelector.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynamic menu etc.\r\n * @Class\r\n */\r\nexport class GSAbstractReadWrite extends GSEvent {\r\n\r\n    static #SELECT = Symbol('select');\r\n\r\n    #id = null;\r\n    #processors = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to register\r\n     * @param {object} processor\r\n     */\r\n    addProcessor(processor) {\r\n        if (!processor) return;\r\n        this.#processors ??= new Set();\r\n        this.#processors.add(processor);\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to remove\r\n     * @param {object} processor \r\n     */    \r\n    removeProcessor(processor) {\r\n        if (processor) this.#processors?.delete(processor);\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Generic event dispatcher, can be overriden to controll when to fire event\r\n     * @param {*} owner \r\n     * @param {*} type \r\n     * @param {*} data \r\n     * @param {*} error \r\n     */\r\n    notify(owner, type, data, error) {\r\n        this.emit(error ? 'error' : type, { type: type, error: error, owner: owner, data: data }, true);\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.#processors?.forEach(c => c.postRead?.(data));\r\n            if (data) me.notify(owner, 'read', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'read', data, e);\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.#processors?.forEach(c => c.postWrite?.(data));\r\n            if (result) me.notify(owner, 'write', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'write', data, e);\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        if (!val) return false;\r\n        DataSelector.addSelected(val);\r\n        const me = this;\r\n        me.emit('selection-add', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        if (!val) return false;\r\n        DataSelector.removeSelected(val);\r\n        const me = this;\r\n        me.emit('selection-remove', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        DataSelector.clearSelected(data);\r\n        const me = this;\r\n        me.emit('selection-clear');\r\n        me.emit('select');\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    getSelected(data = []) {\r\n        return DataSelector.getSelected(data);\r\n    }\r\n\r\n    /**\r\n     * Check if record id is in list of selected records\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    isSelected(val) {\r\n        return DataSelector.isSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Get list of selected records.\r\n     * Override in inherited class\r\n     */\r\n    get selected() {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n    /**\r\n     * Reset the abstract read/write handler\r\n     */\r\n    reset() {\r\n        this.#processors = null;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"../base/GSFunction.mjs\";\r\nimport { GSLoader } from \"../base/GSLoader.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSAbstractReadWrite } from \"./AbstractReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #TYPE = \"remote\";\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #key = null;\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically register in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */\r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */\r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return { ...this.#headers };\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = { ...val };\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     */\r\n    get key() {\r\n        return this.#key;\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     * @var {String} \r\n     */\r\n    set key(val) {\r\n        this.#key = val;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */\r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#filter = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#sort = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest', 'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#writer);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Reset the read/write handler\r\n     */\r\n    reset() {\r\n        this.#src = '';\r\n        this.#headers = {};\r\n        this.#reader = 'GET';\r\n        this.#writer = 'POST';\r\n        this.#action = '';\r\n        this.#mode = '';\r\n        this.#key = null;\r\n        this.#skip = 0;\r\n        this.#limit = 0;\r\n        this.#sort = [];\r\n        this.#filter = [];\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSReadWrite.#TYPE, GSReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSData } from \"../base/GSData.mjs\";\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSCachedReadWrite class\r\n * @module base/GSCachedReadWrite\r\n */\r\n\r\n/**\r\n * ReadWrite with cached memory data. \r\n * @Class\r\n */\r\nexport class GSCachedReadWrite extends GSReadWrite {\r\n\r\n    static #TYPE = 'cached';\r\n\r\n    #data = [];\r\n\r\n    #reformat(data = []) {\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        return records;\r\n    }\r\n\r\n    #postFilter(data) {\r\n        const me = this;\r\n        data = GSData.sortData(data, me.sort);        \r\n        let limit = me.limit === 0 ? data.length : me.limit;\r\n        data = data.slice(me.skip, me.skip + limit);\r\n        return data;\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelected(this.#data);\r\n        this.#data = [];\r\n    }\r\n\r\n    append(data) {\r\n        if(!data) return false;\r\n        const me = this;\r\n        data = me.#reformat(data);\r\n        me.#data = me.#data.concat(data);\r\n        return me.#data;\r\n    }\r\n\r\n    remove(data) {\r\n        const me = this;\r\n        me.removeSelected(data);\r\n        me.#data = me.#data.filter(o => o =! data);\r\n        return me.#data;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n\r\n        if (me.#data.length === 0) {\r\n            const data = await super.onRead();\r\n            me.#data = me.#reformat(data);\r\n        }\r\n\r\n        let data = GSData.filterData(me.#data, me.filter, me.fields, me.limit);\r\n        data = me.#postFilter(data);\r\n        return data;\r\n    }\r\n\r\n    async onWrite(owner, data) {\r\n        return this.append(data);        \r\n    }\r\n\r\n    disable() {\r\n        this.#data = [];\r\n        super.disable();\r\n    }\r\n\r\n    set search(val) {\r\n        const me = this;\r\n        me.filter = val ? [{value : val}] : [];\r\n        me.read();\r\n        /*\r\n        let data = GSData.filterData(me.#data, [{value : val}]);\r\n        data = me.#postFilter(data);\r\n        me.notify(me, 'read', data);\r\n        */\r\n    }\r\n\r\n    clearSelected() {\r\n        return super.clearSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return super.getSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSCachedReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Reset the cached read/write handler\r\n     */\r\n    reset() {\r\n        this.clear();\r\n        super.reset();\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSCachedReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSCachedReadWrite.#TYPE, GSCachedReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { Tree } from \"../helpers/Tree.mjs\";\r\n\r\n/**\r\n * A module loading TreeNode class\r\n * @module data/TreeNode\r\n */\r\n\r\n/**\r\n * UI mediator between Tree linked nodes and WebComponents\r\n * @Class\r\n */\r\nexport class TreeNode extends Tree {\r\n\r\n    #multi = false;\r\n    #opened = false;\r\n    #focused = false;\r\n    #selected = false;\r\n    \r\n    #focusedNode = undefined;\r\n    #selectedNode = undefined;\r\n    #controllers = undefined;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        super(key, value, parent, level);\r\n\r\n        if (value?.select === true || (this.multi && parent?.selected)) this.selected = true;\r\n        if (value?.focus === true) this.focused = true;\r\n        if (value?.open === true) this.opened = true;\r\n    }\r\n\r\n    addController(controller) {\r\n        const root = this.root;\r\n        (root.#controllers ??= new Set()).add(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.root.#controllers?.delete(controller);\r\n    }\r\n\r\n    /**\r\n     * Is multi selection available\r\n     */\r\n    get multi() {\r\n        return this.root.#multi === true;\r\n    }\r\n\r\n    set multi(val) {\r\n        this.root.#multi = val === true;\r\n    }\r\n\r\n    get visible() {\r\n        if (this.level < 0) return true;\r\n        return this.parent?.opened;\r\n    }\r\n\r\n    /**\r\n     * select single node, removing seelction flag from all other nodes\r\n     */\r\n    get opened() {\r\n        if (this.level < 0) return true;\r\n        return this.isLeaf ? this.parent?.opened : this.#opened;\r\n    }\r\n\r\n    set opened(val) {\r\n        val = val === true;\r\n        if (val) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus single node, removing focus flag from all other nodes\r\n     */\r\n    get focused() {\r\n        return this.#focused;\r\n    }\r\n\r\n    set focused(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const changed = this.#focused != val;\r\n        const focusedNode = root.focusedNode();\r\n        \r\n        root.#focusedNode = undefined;        \r\n        this.#focused = val;\r\n        if (focusedNode && focusedNode !== this) {\r\n            focusedNode.focused = false;\r\n        }\r\n\r\n        if (val) root.#focusedNode = this;\r\n        if (changed) root.#controllers?.forEach((c) => c.onFocusChanged?.(this));\r\n    }\r\n\r\n    /**\r\n     * Select single or multi node, depending on multi selection flag\r\n     * If single, remove selection flag from all other nodes\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    set selected(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const selectedNode = root.selectedNode();\r\n        const changed = this.#selected != val;\r\n        this.#selected = val;\r\n        if (val) {\r\n            if (selectedNode && selectedNode !== this && !root.multi) {\r\n                selectedNode.selected = false;\r\n            }\r\n            root.#selectedNode = this;\r\n        }\r\n        if (changed) {\r\n            root.#controllers?.forEach((c) => c.onSelectionChanged?.(this, selectedNode));\r\n            if (root.multi) root.#controllers?.forEach((c) => c.onSelectionChanged?.(this.parent, selectedNode));\r\n        } \r\n    }\r\n\r\n    get isPartialySelected() {\r\n        return this.selected && this.hasChildren && this.nodes.length > this.nodes.filter(n => n.selected).length;\r\n    }\r\n\r\n    /* hide from public\r\n    get host() {\r\n        return this[Symbol.for('gs-element')];\r\n    }\r\n\r\n    set host(el) {\r\n        this[Symbol.for('gs-element')] = el;\r\n    }\r\n    */\r\n\r\n    selectAll() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            this.deselectAll();\r\n            this.selected = true;\r\n            return\r\n        }\r\n        this.#selectionFlag(true);\r\n        root.#selectedNode = this;\r\n        root.#controllers?.forEach((c) => c.onSelectAll?.(root));\r\n    }\r\n\r\n    deselectAll() {\r\n        const root = this.root;\r\n        this.#selectionFlag(false);\r\n        root.#selectedNode = undefined;\r\n        root.#controllers?.forEach((c) => c.onDeselectAll?.(root));\r\n    }\r\n\r\n    /**\r\n     * Return last focused node\r\n     * @returns \r\n     */\r\n    focusedNode() {\r\n        const node = this.root.#focusedNode;\r\n        return node?.focused ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * Return last selected node\r\n     * @returns \r\n     */\r\n    selectedNode() {\r\n        const node = this.root.#selectedNode;\r\n        return node?.selected ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * List all selected nodes.\r\n     * @returns \r\n     */\r\n    selectedNodes() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            const node = root.selectedNode()\r\n            return node?.selected ? [node] : [];\r\n        }\r\n        return Array.from(root.walk().filter(o => o.selected));\r\n    }\r\n\r\n    /**\r\n     * Call from external controller data must be refresshed (to notify UI optionally)\r\n     * @param {*} root \r\n     */\r\n    refresh(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onRefresh?.(this));\r\n    }\r\n\r\n    /**\r\n     * Notify controllers about data loading (from async controller)\r\n     * @param {*} root \r\n     */\r\n    loading(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onLoad?.(this));\r\n    }\r\n\r\n    expandAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.expand(root);\r\n        }\r\n    }\r\n\r\n    collapseAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.collapse(root);\r\n        }\r\n    }\r\n\r\n    expand(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        if (!me.parent?.opened) {\r\n            me.parent?.expand(root);\r\n        }\r\n        const update = !me.opened;\r\n        me.#opened = true;\r\n        if (update) me.#expanded(root);\r\n        //me.nodes?.filter( n => !n.opened).forEach(c => c.refresh(root));\r\n        me.nodes?.forEach(c => c.refresh(root));\r\n    }\r\n\r\n    collapse(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        const update = me.#opened || me.parent.#opened;\r\n        me.nodes?.filter(n => n.opened || n.parent.opened).forEach(o => o.collapse(root));\r\n        //me.nodes?.forEach(o => o.collapse(root));\r\n        me.#opened = false;\r\n        if (update) me.#collapsed(root);\r\n    }\r\n\r\n    select(val = true) {\r\n        this.selected = val === true;\r\n    }\r\n\r\n    #expanded(root) {\r\n        root.#controllers?.forEach((c) => c.onExpand?.(this));\r\n    }\r\n\r\n    #collapsed(root) {\r\n        root.#controllers?.forEach((c) => c.onCollapse?.(this));\r\n    }\r\n\r\n    release() {\r\n        if (this.#selected) this.selected = false;\r\n        super.release();\r\n    }\r\n\r\n    append(key, value = key) {\r\n        const me = this;\r\n        const node = super.append(key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onAppend?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    insert(parentNodeKey, key, value = key) {\r\n        const me = this;\r\n        const node = super.insert(parentNodeKey, key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onInsert?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    remove() {\r\n        const node = super.remove();\r\n        if (node) this.root.#controllers?.forEach((c) => c.onInsert?.(node));\r\n        return node;\r\n    }\r\n\r\n    #selectionFlag(val = false) {\r\n        val = val === true\r\n        for (let node of this.walk()) {\r\n            node.selected = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) TreeNode.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.nodes?.map(o => o.toJSON()) || {};\r\n        const obj = Object.assign({\r\n            key: this.key,\r\n            opened: this.#opened,\r\n            focused: this.#focused,\r\n            selected: this.#selected,\r\n            items: undefined\r\n        }, this.value);\r\n        obj.items = this.nodes?.map(o => o.toJSON());\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Reset the tree node\r\n     */\r\n    reset() {\r\n        this.#multi = false;\r\n        this.#opened = false;\r\n        this.#focused = false;\r\n        this.#selected = false;\r\n        this.#focusedNode = undefined;\r\n        this.#selectedNode = undefined;\r\n        this.#controllers = undefined;\r\n    }\r\n\r\n    static get root() {\r\n        return new TreeNode(null, null, null, -1);\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof TreeNode;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) return TreeNode.from(TreeNode.root, raw);\r\n            raw.forEach(o => TreeNode.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        obj.leaf = !Array.isArray(items);\r\n        const tree = new TreeNode(obj.key, obj, data ? parent : undefined);\r\n        if (items) TreeNode.from(tree, items);\r\n        if (hasParent) parent.append(tree);\r\n        return tree;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { TreeNode } from \"./TreeNode.mjs\";\r\n\r\n/**\r\n * A module loading GSTreeReader class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for reading Tree nodes\r\n * @Class\r\n */\r\nexport class GSTreeReader extends GSReadWrite {\r\n\r\n    #data = TreeNode.root;\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    async write(val) {\r\n        throw new Error('Writer not available for TreeReader')\r\n    }\r\n\r\n    async read(owner) {\r\n        const me = this;\r\n        let node = undefined;\r\n        const data = await super.read(owner);\r\n        if (!this.#data) {\r\n            node = TreeNode.from(data);\r\n            this.#data = node;\r\n        } else {\r\n            const parent = me.filter?.length > 0 ? me.#data.findByKey(me.filter[0]) : me.#data;\r\n            parent.clear();\r\n            node = parent.fromJSON(data);\r\n        }\r\n        me.filter = undefined;\r\n        me.notify(owner, 'read', node);\r\n        return node;\r\n    }\r\n\r\n    disable() {\r\n        super.disable();\r\n        this.#data?.release();\r\n    }\r\n\r\n    notify(owner, type, data, error) {\r\n        const isNode = data instanceof TreeNode;\r\n        if (!error && !isNode && type === 'read') return;\r\n        super.notify(owner, type, data, error);\r\n    }\r\n\r\n    /**\r\n     * Called from Tree when node is expanded \r\n     * @param {*} node \r\n     */\r\n    async onExpand(node) {\r\n        if (node.hasChildren) return;\r\n        node.loading();\r\n        this.filter = node.key;\r\n        return await this.read();\r\n    }\r\n\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    /**\r\n     * Reset the tree data\r\n     */\r\n    resetData() {\r\n        this.#data = TreeNode.root;\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSTreeReader} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSTreeReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('tree', GSTreeReader);\r\n    }\r\n\r\n}","// Lit 3.0 Google\r\nconst litUrl = globalThis.GS_LIT_URL || '/bootstrap-lit/assets/lib/lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const Directive = litModule.Directive;\r\nexport const LitElement = litModule.LitElement;\r\nexport const PartType = litModule.PartType;\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const adoptStyles = litModule.adoptStyles;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const createRef = litModule.createRef;\r\nexport const css = litModule.css;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const directive = litModule.directive;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getCompatibleStyle = litModule.getCompatibleStyle;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const guard = litModule.guard;\r\nexport const html = litModule.html;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isServer = litModule.isServer;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const literal = litModule.literal;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const noChange = litModule.noChange;\r\nexport const notEqual = litModule.notEqual;\r\nexport const nothing = litModule.nothing;\r\nexport const range = litModule.range;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const render = litModule.render;\r\nexport const repeat = litModule.repeat;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const staticHtml = litModule.staticHtml;\r\nexport const staticSvg = litModule.staticSvg;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const svg = litModule.svg;\r\nexport const templateContent = litModule.templateContent;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const unsafeStatic = litModule.unsafeStatic;\r\nexport const until = litModule.until;\r\nexport const when = litModule.when;\r\nexport const withStatic = litModule.withStatic;","import { Directive, directive, nothing } from \"../lib.mjs\";\r\n\r\nconst definition = {\r\n    'action': 'gsAction',\r\n    'anchor': 'gsAnchor',\r\n    'attribute': 'gsAttribute',\r\n    'call': 'gsCall',\r\n    'exec': 'gsExec',\r\n    'inject': 'gsInject',\r\n    'property': 'gsProperty',\r\n    'swap': 'gsSwap',\r\n    'target': 'gsTarget',\r\n    'template': 'gsTemplate',\r\n    'toggle': 'gsToggle',\r\n    'trigger': 'gsTrigger',\r\n    'value': 'gsValue',\r\n    'calls':'gsCall',\r\n    'toggles':'gsToggle',\r\n    'timeout':'gsTimeout',\r\n    'triggers':'gsTrigger'\r\n};\r\n\r\nconst template = {\r\n    'gsAction': undefined,\r\n    'gsAnchor': undefined,\r\n    'gsAttribute': undefined,\r\n    'gsCall': undefined,\r\n    'gsExec': undefined,\r\n    'gsInject': undefined,\r\n    'gsProperty': undefined,\r\n    'gsSwap': undefined,\r\n    'gsTarget': undefined,\r\n    'gsTemplate': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTrigger': undefined,\r\n    'gsValue': undefined,\r\n    'gsCall': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTimeout': undefined,\r\n    'gsTrigger': undefined\r\n};\r\n\r\nclass DatasetDirective extends Directive {\r\n\r\n    render(obj) {\r\n        console.log(obj);\r\n        return nothing;\r\n    }\r\n\r\n    update(part, [obj, flat = true]) {\r\n\r\n        if (!obj) return nothing;\r\n        const dataset = part.element.dataset;\r\n        const srcset = obj.dataset || obj;\r\n        const isDataset = srcset instanceof DOMStringMap;\r\n\r\n        if (isDataset) {\r\n            Object.assign(dataset, srcset);\r\n        } \r\n        \r\n        if (flat) this.#remap(dataset, obj);\r\n\r\n        return nothing;\r\n    }\r\n\r\n    #remap(dataset, obj) {\r\n        const opt = Object.assign({}, template);\r\n        const list = Object.entries(obj).filter(v => Object.hasOwn(definition, v[0]));\r\n        if (list.length > 0) {\r\n            list.forEach(kv => opt[definition[kv[0]]] = kv[1]);\r\n            Object.keys(opt)\r\n            .filter(k => opt[k] !== undefined)\r\n            .forEach(k => dataset[k] = opt[k]);\r\n        }\r\n    }\r\n}\r\n\r\nexport const dataset = directive(DatasetDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\n\r\n/**\r\n * Generic object property descriptor getter\r\n * @param {Object} instance \r\n * @returns {PropertyDescriptor}\r\n */\r\nfunction descriptors(instance) {\r\n  return Object.entries(Object.getOwnPropertyDescriptors(instance));\r\n}\r\n\r\n/**\r\n * List of all object property descriptors \r\n * @param {Object} instance Object instance \r\n * @returns {Array<PropertyDescriptor>}\r\n */\r\nfunction listProperties(instance) {\r\n  return descriptors(instance)\r\n    .filter(e => typeof e[1].value !== 'function')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List all object property getters\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGetters(instance) {\r\n  return descriptors(Reflect.getPrototypeOf(instance))\r\n    .filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List of all gettable properties from an object\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGettable(instance) {\r\n  return new Set([...listGetters(instance), ...listProperties(instance)]);\r\n}\r\n\r\n/**\r\n * Parse string literal template into Lit html instance\r\n * @param {*} tpl \r\n * @param {*} params \r\n * @returns {function}\r\n */\r\nexport function literalTemplate(tpl, params) {\r\n  const names = Array.from(listGettable(params));\r\n  const vals = names.map(v => params[v]);\r\n  names.push('html');\r\n  vals.push(html);\r\n  return new Function(...names, `return html\\`${tpl}\\`;`)(...vals);\r\n}","/**\r\n * A clone of classMap directive to support CSS directive.\r\n * Lit classs is not expoed, so we have to clone it and create our own.\r\n */\r\n\r\nimport { Directive, PartType, directive, noChange } from \"../lib.mjs\";\r\n\r\nclass CssMapDirective extends Directive {\r\n\r\n    constructor(partInfo) {\r\n        super(partInfo);\r\n        if (partInfo.type !== PartType.ATTRIBUTE ||\r\n            partInfo.name !== 'css' ||\r\n            partInfo.strings?.length > 2) {\r\n            throw new Error('`classMap()` can only be used in the `css` attribute ' +\r\n                'and must be the only part in the attribute.');\r\n        }\r\n    }\r\n\r\n    render(classInfo) {\r\n        // Add spaces to ensure separation from static classes\r\n        return (' ' +\r\n            Object.keys(classInfo)\r\n                .filter((key) => classInfo[key])\r\n                .join(' ') +\r\n            ' ');\r\n    }\r\n\r\n    update(part, [classInfo]) {\r\n\r\n        // Remember dynamic classes on the first render\r\n        if (this._previousClasses === undefined) {\r\n            this._previousClasses = new Set();\r\n            if (part.strings !== undefined) {\r\n                this._staticClasses = new Set(part.strings\r\n                    .join(' ')\r\n                    .split(/\\s/)\r\n                    .filter((s) => s !== ''));\r\n            }\r\n\r\n            for (const name in classInfo) {\r\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\r\n                    this._previousClasses.add(name);\r\n                }\r\n            }\r\n            return this.render(classInfo);\r\n        }\r\n\r\n        const classList = part.element.classList;\r\n\r\n        // Remove old classes that no longer apply\r\n        for (const name of this._previousClasses) {\r\n            if (!(name in classInfo)) {\r\n                classList.remove(name);\r\n                this._previousClasses.delete(name);\r\n            }\r\n        }\r\n\r\n        // Add or remove classes based on their classMap value\r\n        for (const name in classInfo) {\r\n            // We explicitly want a loose truthy check of `value` because it seems\r\n            // more convenient that '' and 0 are skipped.\r\n            const value = !!classInfo[name];\r\n            if (value !== this._previousClasses.has(name) &&\r\n                !this._staticClasses?.has(name)) {\r\n                if (value) {\r\n                    classList.add(name);\r\n                    this._previousClasses.add(name);\r\n                } else {\r\n                    classList.remove(name);\r\n                    this._previousClasses.delete(name);\r\n                }\r\n            }\r\n        }\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * A directive that applies dynamic CSS classes.\r\n *\r\n * This must be used in the `css` attribute and must be the only part used in\r\n * the attribute. It takes each property in the `classInfo` argument and adds\r\n * the property name to the element's `classList` if the property value is\r\n * truthy; if the property value is falsey, the property name is removed from\r\n * the element's `css`.\r\n *\r\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\r\n * truthy.\r\n *\r\n * @param classInfo\r\n */\r\nexport const cssMap = directive(CssMapDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocapitalizeTypes = ['', 'none', 'off', 'on', 'sentences', 'words', 'characters'];\r\n\r\nexport const autocapitalize = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocapitalizeTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocompleteTypes = ['', 'off', 'on'];\r\n\r\nexport const autocomplete = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocompleteTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocorrectTypes = ['', 'on', 'off'];\r\n\r\nexport const autocorrect = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocorrectTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class ButtonTypes {\r\n\r\n    static values = ['button', 'reset', 'submit'];\r\n\r\n    static is(val) {\r\n        return ButtonTypes.values.includes(val);\r\n    }\r\n\r\n    static isReset(val) {\r\n        return ButtonTypes.values.indexOf(val) === 1;\r\n    }\r\n\r\n    static isSubmit(val) {\r\n        return ButtonTypes.values.indexOf(val) === 2;\r\n    }\r\n} \r\n\r\nexport const buttonType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ButtonTypes.is(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ColorTypes = ['', 'primary', 'secondary', 'dark', 'light', 'info', 'warning', 'danger', 'alert', 'link', 'success'];\r\n\r\nexport const color = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ColorTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'desktop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const InputTypes = [\r\n   { type: 'checkbox', ignore: true},\r\n   { type: 'radio', ignore: true},\r\n   { type: 'switch', ignore: true},\r\n   { type: 'range', ignore: true},\r\n   { type: 'number', native: true},\r\n   { type: 'email', native: true},\r\n   { type: 'url',  native: true},\r\n   { type: 'file', native: true}, \r\n   { type: 'text'},\r\n   { type: 'password'}\r\n];\r\n\r\nexport const inputType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && InputTypes.filter(o => o.type === newVal).length === 1;\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const NavTypes = ['', 'pills', 'tabs', 'underline'];\r\n\r\nexport const nav = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && NavTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val);\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val);\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PlacementTypes {\r\n\r\n    static values = ['center', 'left', 'right', 'start', 'end', 'top', 'bottom'];\r\n\r\n    static includes(val) {\r\n        return PlacementTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        return PlacementTypes.values.indexOf(val) > 4;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = PlacementTypes.values.indexOf(val)\r\n        return idx > 0 && idx < 5;\r\n    }\r\n\r\n    static isCenter(val) {\r\n        return PlacementTypes.values.indexOf(val) === 0;\r\n    }\r\n\r\n    static isBefore(val) {\r\n        return ['left', 'start', 'top'].includes(val);\r\n    }\r\n\r\n    static isAfter(val) {\r\n        return ['right', 'end', 'bottom'].includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const placement = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PlacementTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PositionTypes {\r\n\r\n    static values = ['absolute', 'fixed', 'relative', 'sticky', 'static'];\r\n\r\n    static includes(val) {\r\n        return PositionTypes.values.includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const position = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PositionTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const SizeTypes = { 'default' : '', 'normal': '',  'medium': '', 'small': 'sm', 'large': 'lg', 'big' : 'lg', 'extra' : 'xl' };\r\n\r\nexport const size = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && Object.hasOwn(SizeTypes, newVal);\r\n    }\r\n\r\n};","export const stringArrayConverter = {\r\n    fromAttribute: (value, type) => {\r\n        return (value || '').split(',');\r\n    },\r\n    toAttribute: (value, type) => {\r\n        return (value || []).join(',');\r\n    }\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCacheStyles } from '../base/GSCacheStyles.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time even gs-adopted is triggered by the GSAdoptedEngien class,\r\n * all registerd controller will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to preven dom node polution; \r\n * Style  changes  are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me.#host);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values, isGlobal = false) {\r\n    const me = this;\r\n    let style = null;\r\n    if (isGlobal) {\r\n      style = GSCacheStyles.dynamic;\r\n    } else {\r\n      me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');      \r\n      style = me.#dynamic;\r\n    }    \r\n    if (values === null && style.rules.length > 0 ) return style.removeRule(name);\r\n    return style.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.detach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (!me.#isSelf() && me.#target) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs).forEach(el => el?.remove());\r\n      me.#refs.clear();\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { DataSelector } from \"../data/DataSelector.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n  #selectCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#selectCallback = me.#onSelect.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.filter = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get selected() {\r\n    return this.store?.selected;\r\n  }\r\n\r\n  isSelected(val) {\r\n    return this.#selector.isSelected(val);\r\n  }\r\n\r\n  addSelected(val) {\r\n    return this.#selector.addSelected(val);\r\n  }\r\n  \r\n  removeSelected(val) {\r\n    return this.#selector.removeSelected(val);\r\n  }\r\n\r\n  clearSelected(data) {\r\n    return this.#selector.clearSelected(data);\r\n  }\r\n\r\n  getSelected(data) {\r\n    return GSUtil.asArray(data).filter(o => DataSelector.isSelected(o));\r\n  }\r\n\r\n  get #selector() {\r\n    return this.store || DataSelector;\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    if (storage) {\r\n      storage.on('read', me.#readCallback);\r\n      storage.on('write', me.#writeCallback);\r\n      storage.on('error', me.#errorCallback);\r\n      storage.on('select', me.#selectCallback);\r\n      if (read) storage.read(me.#host);\r\n    }\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    if (storage) {\r\n      storage.off('read', me.#readCallback);\r\n      storage.off('write', me.#writeCallback);\r\n      storage.off('error', me.#errorCallback);\r\n      storage.off('select', me.#selectCallback);\r\n    }\r\n  }\r\n\r\n  #onSelect(e) {\r\n    this.#host.requestUpdate?.();\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for elment move events, properly handling mouse events.\r\n */\r\nexport class ElementMoveController {\r\n\r\n  #host;\r\n  #element;\r\n  #attached = false;\r\n\r\n  #cursorX = 0;\r\n  #cursorY = 0;\r\n\r\n  #mouseUpCallback;\r\n  #mouseDownCallback;\r\n  #mouseMoveCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n    me.#mouseUpCallback = me.#onMouseUp.bind(me);\r\n    me.#mouseDownCallback = me.#onMouseDown.bind(me);\r\n    me.#mouseMoveCallback = me.#onMouseMove.bind(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  attach(element) {\r\n    const me = this;\r\n    if (!me.#attached) {\r\n      me.#element = element;\r\n      me.#attached = true;\r\n      me.#host.attachEvent(me.#element, 'mousedown', me.#mouseDownCallback);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.#cursorX = 0;\r\n    me.#cursorY = 0;\r\n    me.#host.removeEvent(document, 'mouseup', me.#mouseUpCallback);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n  * Call host onStartMove function\r\n  * @param {MouseEvent} e \r\n  */\r\n  #onMouseDown(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n    me.#host.onStartMove?.(e, me.#cursorX, me.#cursorY);\r\n    me.#host.attachEvent(document, 'mouseup', me.#mouseUpCallback, true);\r\n    me.#host.attachEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n   * Remove mousemove listener and call host onEndMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseUp(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n    return me.#host.onEndMove?.(e, me.#cursorX, me.#cursorY);\r\n  }\r\n\r\n  /**\r\n   * Call host onMouseMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseMove(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n\r\n    me.#host.onMouseMove?.(e, me.#cursorX, me.#cursorY);\r\n\r\n    if (me.#cursorX < e.clientX) {\r\n      me.#host.onCursorRight?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorX > e.clientX) {\r\n      me.#host.onCursorLeft?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    if (me.#cursorY < e.clientY) {\r\n      me.#host.onCursorUp?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorY > e.clientY) {\r\n      me.#host.onCursorDown?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #language;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#language = host.language;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#language !== me.#host?.language) {\r\n      me.#language === me.#host?.language;\r\n      me.updateLanguage(me.#language);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#language) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n  static #cache = new Map();\r\n  static #refs = new Set();\r\n\r\n  static get isPrefetch() {\r\n    return globalThis.GS_TEMPLATE_PREFETCH || false;\r\n  }\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  // inherited\r\n  hostConnected() {\r\n    const me = this;\r\n    /* \r\n    if(TemplateController.isPrefetch) {\r\n      me.hostUpdate();\r\n    }\r\n    */\r\n  }\r\n\r\n  // inherited\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  // inherited\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#template) return;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      me.#template = TemplateController.#cache.get(ref);      \r\n      me.#lastRef = ref;\r\n      if (ref && !me.#template) {\r\n        TemplateController.#schedule(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  // inherited\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (me.#template) {\r\n      this.#host.removeController(this);\r\n      me.#host.templateInjected?.();\r\n    } \r\n\r\n  }\r\n\r\n  async #load() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (!ref) return;\r\n    /* prevents double load, but also creates a render issue\r\n    if (TemplateController.#refs.has(ref)) {\r\n      // already scheduled\r\n      return;\r\n    }\r\n    TemplateController.#refs.add(ref);\r\n    */\r\n    let template = null;\r\n    const isTplEl = ref instanceof HTMLTemplateElement;\r\n    const cacheable = GSUtil.isString(ref);\r\n    if (cacheable) {\r\n      template = TemplateController.#cache.get(ref);\r\n    }\r\n    if (!template) {\r\n      try {\r\n        template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n      } catch (err) {\r\n        TemplateController.#refs.delete(ref);\r\n        throw err;\r\n      }\r\n      if (cacheable) {\r\n        TemplateController.#cache.set(ref, template);\r\n      }       \r\n    }\r\n    if (template) {\r\n      me.#template = template;\r\n      me.#host?.requestUpdate();\r\n    }\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    return GSDOM.templateRef(this.#host);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = false));\r\n    }\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle event when template slot changes\r\n */\r\nexport class SlotController {\r\n\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      const me = this;\r\n      const target = me.#host.renderRoot || me.#host;\r\n      me.#host.attachEvent(target, 'slotchange', me.#onSlotChanged.bind(me));\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    #onSlotChanged(e) {\r\n      if (typeof e.target.assignedElements === 'function') {\r\n        e.target.assignedElements().forEach(el => {\r\n          el.onSlotInjected?.(e.target);\r\n        });\r\n      }\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\nimport { SlotController } from './controllers/SlotController.mjs';\r\nimport { GSAttributeHandler } from './base/GSAttributeHandler.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    language: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n  #orientation;\r\n  #localization;\r\n  #dataController;\r\n  #slotController;\r\n  #themes\r\n  #template;\r\n  #content;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.language = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    //me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n    me.#slotController = new SlotController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    const tpl = GSDOM.templateRef(me);\r\n    if (tpl) me.#template = new TemplateController(me);    \r\n    if (me.isBindable) me.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.detachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('storage')) {\r\n      me.#dataController?.hostDisconnected();\r\n      me.#dataController = undefined;\r\n      if (me.storage) {\r\n        me.#dataController = new DataController(me);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when this element injected in some slot\r\n   * @param {*} slot \r\n   */\r\n  onSlotInjected(slot) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return this.renderTemplate();\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : noChange;\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Called when asynchronnous template is injected into component\r\n   */\r\n  templateInjected() {\r\n    \r\n\t}\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to witch to add parsed CSS\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @param {boolean} isGlobal \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value, isGlobal = false) {\r\n    return this.#adopted.style(id, value, isGlobal);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @param {Number} levels - walk limit\r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '', levels = -1) {\r\n    return GSDOM.closest(this, query, levels);\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.language, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    //return this.dataset.gsTarget;\r\n    return GSAttributeHandler.isBindable(this);\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template?.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment ?? '');\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol ?? '');\r\n  }\r\n\r\n  /**\r\n   * Internal attribute set if component is genrated by other components\r\n   */\r\n  get isGenerated() {\r\n    return this.hasAttribute('generated');\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Get instance of internal styles\r\n   */\r\n  get elementStyles() {\r\n    return this.constructor.elementStyles.map(s => Object.values(s).filter(o => o instanceof CSSStyleSheet).pop()).pop();\r\n  }\r\n\r\n  /**\r\n   * Internal shadow styles rule\r\n   * @param {*} name \r\n   * @returns \r\n   */\r\n  cssRule(name) {\r\n    return Array.from(this.elementStyles.rules).filter(r => r.selectorText === name).pop();\r\n  }\r\n\r\n  /**\r\n   * Set dynamic CSS rule \r\n   * See GSIcon hot it is done\r\n   * @param {*} rule \r\n   * @param {*} name \r\n   * @param {*} value \r\n   */\r\n  setCSSProperty(rule, name, value) {\r\n    this.cssRule(rule).style.setProperty(name, value);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    return GSDOM.allProperties(obj);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, opt);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from \"../GSElement.mjs\";\r\n\r\n/**\r\n * Controller for child element navigation / selection / focusing\r\n */\r\nexport class ElementNavigationController {\r\n\r\n  #host;\r\n  #attached;\r\n  #focused;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#attached = false;\r\n  }\r\n\r\n  get circular() {\r\n    return this.#host?.circular === true;\r\n  }\r\n\r\n  get multiple() {\r\n    return this.#host?.multiple === true;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host.active;\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */\r\n  init() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */  \r\n  attach(el) {\r\n    const me = this;\r\n    if (me.#attached) return;\r\n    me.#attached = true;\r\n    me.#host.attachEvent(el, 'keydown', e => me.onKeyDown(e));\r\n    me.#host.attachEvent(el, 'keyup', e => me.onKeyUp(e));\r\n    me.#host.attachEvent(el, 'click', e => me.onClick(e));\r\n    me.#host.attachEvent(el, 'focusin', e => me.onFocusIn(e));\r\n    me.#host.attachEvent(el, 'focusout', e => me.onFocusOut(e));\r\n  }\r\n\r\n  previous() {\r\n    const me = this;\r\n    let el = me.#focused?.previousElementSibling;\r\n    while (el?.disabled) el = el.previousElementSibling;\r\n    if (me.circular && !el) el = me.lastElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  next() {\r\n    const me = this;\r\n    let el = me.#focused?.nextElementSibling;\r\n    while (el?.disabled) el = el.nextElementSibling;\r\n    if (me.circular && !el) el = me.firstElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    const me = this;\r\n    const active = me.selected;\r\n    if (me.multiple) {\r\n      active.forEach(el => {\r\n        el.active = false;\r\n        el.blur();\r\n      });\r\n    } else if (active) {\r\n      active.active = false;\r\n      active.blur();\r\n    }\r\n    me.#focused = undefined;\r\n    me.#host?.emit('group-reset', undefined, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element selected\r\n   * @param {*} el \r\n   */\r\n  #onSelected(el) {\r\n    const me = this;\r\n    me.#host?.onSelected?.(el);\r\n    me.#host?.emit('group-selected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element deselected\r\n   * @param {*} el \r\n   */\r\n  #onDeselected(el) {\r\n    this.#host?.onDeselected?.(el);\r\n    this.#host?.emit('group-deselected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  #onFocused(el) {\r\n    this.#host?.onFocused?.(el);\r\n    this.#host?.emit('group-focused', el, true);\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  #isNavigable(el) {\r\n    return this.#host?.isNavigable ? this.#host?.isNavigable(el) : true;\r\n  }\r\n\r\n  #focus(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    me.#focused = el;\r\n    if (el) {\r\n      me.#onFocused(me.#focused);\r\n    }\r\n  }\r\n\r\n  #toggle(el) {\r\n    if (!el) return;\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    if (el.active) {\r\n      me.#onSelected(el);\r\n    } else {\r\n      me.#onDeselected(el);\r\n    }\r\n  }\r\n\r\n  #select(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n\r\n    const active = me.selected;\r\n    if (active && !me.multiple) {\r\n      active.active = false;\r\n      me.#toggle(active);\r\n    }\r\n\r\n    if (me.multiple) {\r\n      el.active = !el.active;\r\n    } else {\r\n      el.active = true;\r\n    }\r\n    me.#toggle(el);\r\n  }\r\n\r\n  onFocusOut(e) {\r\n    const me = this;\r\n    //if (me.#focused === e.target) me.#focused = undefined;\r\n  }\r\n\r\n  onFocusIn(e) {\r\n    if (!e.target.isNav) return;\r\n    const me = this;\r\n    if(e.relatedTarget?.isNav) {\r\n      me.#focus(e.target)\r\n    } else {\r\n      me.selected?.focus();\r\n    }\r\n\r\n  }\r\n\r\n  onClick(e) {\r\n    const me = this;\r\n    const el = e.composedPath()\r\n    .filter(el => el instanceof GSElement)\r\n    .filter(el => el.parentComponent === me.#host).pop();\r\n    if (!me.#isNavigable(el)) return;\r\n    if (e.ctrlKey) me.reset();\r\n    me.#onDeselected(me.selected);\r\n    me.#select(el);\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    if (!e.target.isNav) return;\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        me.next();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    if (!e.target.isNav) return;\r\n    switch (e.code) {\r\n      case 'Space':\r\n      case 'Enter':\r\n        me.#focused?.click();\r\n        break;\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEventBus } from \"../base/GSEventBus.mjs\";\r\n\r\n/**\r\n * Controller for multiple elements groups\r\n */\r\nexport class GroupController {\r\n\r\n  #host;\r\n\r\n  #busEvent;\r\n  #busCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    if (me.#host.group) {\r\n      me.#busCallback = me.#onBusEvent.bind(me);\r\n      me.#busEvent = GSEventBus.register(me.#host.clazzName);\r\n      me.#busEvent.on(me.#host.group, me.#busCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#busEvent?.off(me.#host.group, me.#busCallback);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  #onBusEvent(e) {\r\n    this.#host.onBusEvent?.(e);\r\n  }\r\n\r\n  notify(data) {\r\n    const me = this;\r\n    me.#busEvent?.emit(me.#host.group, {owner: me.#host, item:data}); \t\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSRouter } from '../base/GSRouter.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSRouterElement extends GSElement {\r\n\r\n  #router = null;\r\n\r\n  static properties = {\r\n    url: {},\r\n    disabled: { type: Boolean },\r\n    logging: { type: Boolean }\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.logging = false;\r\n    this.#router = new GSRouter();\r\n    this.#router.log = false;\r\n  }\r\n\r\n  renderUI() {\r\n    return '';\r\n  }\r\n\r\n  updated(changed) {\r\n    this.#router.log = this.logging;\r\n    if (changed.has('url')) {\r\n      this.#router.initialize(this.url);\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.#router?.disable();\r\n    this.#router = null;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-router');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\n\r\nexport class GSAccordionElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    autoclose: { type: Boolean },\r\n    cssItem: { reflect: true, attribute: 'css-item' },\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    data: { type: Array }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.settings;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n       @notify=\"${me.#onNotify.bind(me)}\"\r\n       @click=\"${me.#onClick}\" \r\n       @keyup=\"${me.#onKeyUp}\" \r\n       class=\"accordion ${classMap(me.renderClass())}\">\r\n       ${this.#renderItems()}\r\n       <slot></slot></div>`\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-accordion-item');\r\n  }\r\n\r\n  get settings() {\r\n    const cfg = this.constructor.properties;\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n  }\r\n\r\n  close() {\r\n    this.#state(false);\r\n  }\r\n\r\n  open() {\r\n    this.#state(true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-accordion-item generated\r\n        .opened=\"${ifDefined(o.disabled === true)}\" \r\n        message=\"${ifDefined(o.message)}\" \r\n        template=\"${ifDefined(o.template)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-accordion-item>`;\r\n    });\r\n  }\r\n\r\n  #state(val = false) {\r\n    this.items.forEach(el => el.opened = val);\r\n    this.notify();\r\n  }\r\n\r\n  #onNotify(e) {\r\n    const me = this;\r\n    if (me.autoclose && e.target.opened) {\r\n      me.items.filter(el => el != e.target).forEach(el => el.opened = false);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const isItemCloser = e?.composedPath()[0]?.matches('.accordion-button');\r\n    if(isItemCloser) e.target.toggle?.();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        e.target.close?.();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.target.open?.();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSAccordionItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    message: { reflect: true, },\r\n    title: { reflect: true, },\r\n    opened: { type: Boolean, reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-ACCORDION';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const owner = me.owner;\r\n    const cssHeader = me.cssHeader || owner?.cssHeader;\r\n    const cssBody = me.cssBody || owner?.cssBody;\r\n    return html`<div class=\"accordion-item ${me.css}\">\r\n             <h2 class=\"accordion-header\">\r\n               <button type=\"button\" \r\n                class=\"accordion-button  ${cssHeader} ${me.opened ? '' : 'collapsed'}\"> \r\n                 ${me.translate(me.title)}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse  ${cssBody} ${me.opened ? 'show' : ''}\">\r\n               <div class=\"accordion-body\">\r\n                   ${me.translate(me.message)}\r\n                   ${me.renderTemplate()}\r\n                   <slot></slot>\r\n               </div>\r\n             </div>      \r\n     </div>`\r\n  }\r\n\r\n  open() {\r\n    this.notify(true);\r\n  }\r\n  \r\n  close() {\r\n    this.notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.notify(!this.opened);\r\n  }\r\n\r\n  notify(val = false) {\r\n    const me = this;\r\n    me.opened = val;\r\n    super.notify();\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-accordion') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSAlertElement extends GSElement {\r\n\r\n    static properties = {\r\n        message: { reflect: true },\r\n        color: { ...color },\r\n        closed: { reflect: true, type: Boolean },\r\n        closable: { reflect: true, type: Boolean },\r\n        delay: { reflect: true, type: Number },\r\n    }\r\n\r\n    #ref;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.delay = 1;\r\n        this.#ref = createRef();\r\n        this.#data = this.#proxify(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div role=\"alert\" dir=\"${ifDefined(me.direction)}\" ${ref(me.#ref)} \r\n            @mouseover=\"${() => me.#pause = true}\"\r\n            @mouseout=\"${() => me.#pause = false}\"\r\n            class=\"alert fade ${classMap(me.renderClass())}\" >\r\n            ${me.#first}\r\n            ${me.renderTemplate()}\r\n            <slot></slot>\r\n            ${me.#second}\r\n        </div>`;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#handleBillboard();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        if (!changed.has('opened')) return;\r\n        this.#handleBillboard();\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': !me.closed,\r\n            'alert-dismissible': me.closable,\r\n            [`alert-${this.color}`]: me.color,\r\n\r\n        }\r\n        return css;\r\n    }\r\n\r\n    open() {\r\n        this.notify(false);\r\n    }\r\n\r\n    close() {\r\n        this.notify(true);\r\n    }\r\n\r\n    toggle() {\r\n        this.notify(!this.closed);\r\n    }\r\n\r\n    notify(val = false) {\r\n        const me = this;\r\n        me.closed = val;\r\n        if (me.closed) setTimeout(() => { me.#ref.value.classList.toggle('d-none', true) }, 250);\r\n        super.notify();\r\n    }\r\n\r\n    get isBillboard() {\r\n        return this.#data?.length > 0;\r\n    }\r\n\r\n    get #message() {\r\n        return this.translate(this.message);\r\n    }\r\n\r\n    get #first() { return this.rtl ? this.#button : this.#message; };\r\n\r\n    get #second() { return this.rtl ? this.#message : this.#button; };\r\n\r\n    get #button() {\r\n        return this.closable ? html`<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"${this.close}\"></button>` : '';\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, {message:{}}));\r\n    }\r\n\r\n    #handleBillboard() {\r\n        const me = this;\r\n        if (me.closed) {\r\n            clearInterval(me.#interval);\r\n            me.#interval = 0;\r\n        } else {\r\n            me.#billboard();\r\n        }        \r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        if (!me.isBillboard) return;\r\n        const items = me.#data;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].message;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].message;\r\n        }, me.delay * 1000);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-alert');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, size, buttonType, ButtonTypes, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSButtonElement extends GSElement {\r\n\r\n  static properties = {\r\n    type: { ...buttonType }, // reset, submit\r\n    size: { ...size }, // small, large, normal\r\n    color: { ...color },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    toggleColor: { ...color, attribute : 'toggle-color' },\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    outline: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    toggling: { type: Boolean },\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    text: {},\r\n    url: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'button';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<button part=\"button\" role=\"button\" ${ref(me.#refEl)}\r\n        dir=\"${ifDefined(me.direction)}\"\r\n        type=\"${ifDefined(me.type)}\" \r\n        class=\"btn ${classMap(me.renderClass())}\" \r\n        title=\"${ifDefined(me.#tooltip)}\"\r\n        ?disabled=${me.disabled}\r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"\r\n        @click=\"${me.#onClick}\">\r\n          ${me.#first} ${me.#second}</button>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n      'focus-ring': document.activeElement === me,\r\n      [`text-${me.text}`]: me.text,\r\n      [`btn-${size}`]: size,\r\n      [`btn-outline-${me.color}`]: me.outline,\r\n      [`btn-${me.color}`]: !me.outline && me.color,\r\n      [`btn-${me.toggleColor}`]: me.active && me.toggleColor,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    if(me.toggling) me.toggle();\r\n    me.iconEl?.animate?.();\r\n    me.#onHref(e)\r\n    if (me.dataset.event) return me.emit(me.dataset.event, null, me.dataset.bubbles, me.dataset.composed, true);\r\n    if (me.isReset) return me.form?.reset();\r\n    if (me.isSubmit) return me.form?.submit();\r\n    me.notify();\r\n  }\r\n\r\n  #onHref(e) {\r\n    const me = this;\r\n    if (!me.url) return;\r\n    if (me.url.startsWith('#')) {\r\n      location.hash = me.url;\r\n    } else {\r\n      location.href = me.url;\r\n    }\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover?.(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover?.(false);\r\n  }\r\n\r\n  get isReset() {\r\n    return ButtonTypes.isReset(this.type);\r\n  }\r\n\r\n  get isSubmit() {\r\n    return ButtonTypes.isSubmit(this.type);\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form, form');\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #tooltip() {\r\n    return this.translate(this.tooltip);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-button');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { unsafeHTML, classMap, html, ifDefined, css } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCalendarElement extends GSElement {\r\n\r\n  static styles = css`.year::-webkit-outer-spin-button,.year::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;} .year {-moz-appearance: textfield;} .day:focus{font-weight: bold;}`\r\n\r\n  static properties = {\r\n    date: {},\r\n    target: {},\r\n    format: { hasChanged: notEmpty },\r\n    editable: { type: Boolean },\r\n    range: { type: Number },\r\n    year: { type: Number },\r\n    month: { type: Number, hasChanged: numGE0 },\r\n    day: { type: Number, hasChanged: numGE0 },\r\n    minYear: { attribute: 'year-min', type: Number },\r\n    maxYear: { attribute: 'year-max', type: Number },\r\n    arrovPrev: { attribute: 'arrow-prev' },\r\n    arrowNext: { attribute: 'arrow-next' },\r\n    cssDays: { attribute: 'css-days' },\r\n    cssToday: { attribute: 'css-today' },\r\n    cssWeeks: { attribute: 'css-weeks' },\r\n    cssMonth: { attribute: 'css-month' },\r\n    cssYear: { attribute: 'css-year' },\r\n    cssNav: { attribute: 'css-nav' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n  }\r\n\r\n  #date;\r\n  #selected;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.#date = new GSDate();\r\n    me.#date.day = 1;\r\n    me.#selected = new GSDate();\r\n    me.#date.language = GSUtil.language;\r\n    me.#selected.language = GSUtil.language;\r\n    \r\n    me.language = GSUtil.language;\r\n    me.day = me.#selected.day;\r\n    me.month = me.#selected.month;\r\n    me.year = me.#selected.year;\r\n    \r\n    me.editable = false;\r\n    me.range = 5;\r\n    me.minYear = 1900;\r\n    me.maxYear = 2100;\r\n    me.arrowPrev = '&#10094;';\r\n    me.arrowNext = '&#10095;';\r\n    me.cssNav = 'btn-light';\r\n    me.cssToday = 'btn-secondary';\r\n    me.cssSelected = 'btn-primary';\r\n    me.cssWeeks = 'fw-bold text-bg-dark';\r\n    me.cssYear = 'form-control fs-5 fw-bold border-0 text-center m-1 p-0';\r\n    me.cssMonth = 'form-control fs-3 fw-bold border-0 text-center m-1 p-0';\r\n  }\r\n\r\n  get date() {\r\n    const me = this;\r\n    //return this.#date.toISOString();\r\n    return new Proxy(this.#date, {\r\n      set(target, prop, value) {\r\n        if (typeof target[prop] != 'function') {\r\n          target[prop] = value;\r\n          me.#update();\r\n        }\r\n        return true;\r\n      },\r\n      get(target, prop, receiver) {\r\n        const value = target[prop];\r\n        if (value instanceof Function) {\r\n          return function (...args) {\r\n            try {\r\n              return value.apply(this === receiver ? target : this, args);\r\n            } finally {\r\n              me.#update();\r\n            }\r\n          };\r\n        }\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  previousMonth() {\r\n    const me = this;\r\n    if (me.month == 0) {\r\n      me.month = 11;\r\n      me.year--;\r\n    } else {\r\n      me.month--;\r\n    }\r\n  }\r\n\r\n  nextMonth() {\r\n    const me = this;\r\n    if (me.month == 11) {\r\n      me.month = 0;\r\n      me.year++;\r\n    } else {\r\n      me.month++;\r\n    }\r\n  }\r\n\r\n  previousYear() {\r\n    this.year--;\r\n  }\r\n\r\n  nextYear() {\r\n    this.year++;\r\n  }\r\n\r\n  formatted(date) {\r\n    const me = this;\r\n    return (date || me.#date).format(me.format, me.language);\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    const date = new GSDate(me.#date);\r\n    me.#updateTarget(date);\r\n    me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#date.day = 1;\r\n    me.#date.month = me.month;\r\n    me.#date.year = me.year;\r\n    me.#date.day = me.day;\r\n    me.#date.language = me.language;\r\n\r\n    const week = GSDate.dayList(true, me.language).map(v => html`<div class=\"col\">${v}</div>`);\r\n    const months = me.#monthsHTML();\r\n    const year = me.#yearHTML();\r\n\r\n    return html`\r\n          <div class=\"container-fluid text-center ${classMap(me.renderClass())}\"\r\n          dir=\"${ifDefined(me.direction)}\"\r\n          @keydown=\"${me.#onKey}\"\r\n          @click=\"${me.#onDay}\">\r\n          <div class=\"row align-items-center ${me.cssHeader} header\">\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.previousMonth}\" class=\"btn ${me.cssNav} arrow prev\">${unsafeHTML(me.arrowPrev)}</a>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  ${months}\r\n                  ${year}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.nextMonth}\" class=\"btn ${me.cssNav} arrow next\">${unsafeHTML(me.arrowNext)}</a>\r\n              </div>\r\n          </div>\r\n          <div class=\"row weeks ${me.cssWeeks}\">${week}</div>\r\n          ${unsafeHTML(me.#daysHTML())}\r\n      </div>`;\r\n  }\r\n\r\n  #updateTarget(date) {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    const tgt = GSDOM.query(document.documentElement, me.target);\r\n    if (!tgt) return;\r\n\r\n    if (tgt instanceof HTMLInputElement) {\r\n      if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n      return tgt.value = me.formatted(date);\r\n    }\r\n    GSDOM.setHTML(tgt, me.formatted(date));\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    me.#selected.day = 1;\r\n    me.#selected.month = me.#date.month;\r\n    me.#selected.year = me.#date.year;\r\n    me.#selected.day = me.#date.day;\r\n    me.#selected.language = me.#date.language;\r\n\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.language = me.#date.language;\r\n  }\r\n\r\n  #isToday(v, date) {\r\n    const me = this;\r\n    return v && GSUtil.asNum(v) === date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n  }\r\n\r\n  #daysHTML() {\r\n    const me = this;\r\n    const today = new GSDate();\r\n    today.language = me.language;\r\n    const list = me.#date.build(me.language);\r\n    const result = list\r\n      .map(v => {\r\n        const c1 = me.#isToday(v, today) ? me.cssToday : '';\r\n        const c2 = me.#isToday(v, me.#selected) ? me.cssSelected : '';\r\n\r\n        const d = v ? `<a tabindex=\"0\" href=\"#\" class=\"btn shadow-none ${c2} ${c1} day\" data-day=\"${v}\">${v}</a>` : ''\r\n        return `<div class=\"col p-0\">${d}</div>`;\r\n      })\r\n      .map((v, i) => {\r\n        if (i === 0) return `<div class=\"row days\">${v}`;\r\n        const isBreak = i % 7 == 0;\r\n        return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n      });\r\n    result.push('</div>');\r\n    return result.join('');\r\n  }\r\n\r\n  #monthsHTML() {\r\n    const me = this;\r\n    const current = me.#date.MMMM;\r\n    const months = GSDate.monthList(false, me.language);\r\n    const list = months.map((v, i) => html`<option value=\"${i}\" selected=${ifDefined(current == v ? true : undefined)}>${v}</option>`);\r\n    return html`<select @change=\"${me.#onMonth}\" name=\"month\" class=\"month ${me.cssMonth}\" value=\"${months.indexOf(current)}\">${list}</select>`;\r\n  }\r\n\r\n  #yearHTML() {\r\n\r\n    const me = this;\r\n\r\n    const options = [];\r\n    let minYear = me.minYear;\r\n    let maxYear = me.maxYear;\r\n\r\n    if (me.range > 0) {\r\n      const year = new GSDate().year;\r\n      minYear = year - me.range;\r\n      maxYear = year + me.range;\r\n      me.#optionsHTML(options, minYear, maxYear);\r\n    }\r\n\r\n    if (!me.editable) {\r\n      return html`<select @change=\"${me.#onYear}\" name=\"year\" class=\"year ${me.cssYear}\" data-gs-min=\"${minYear}\" data-gs-max=\"${maxYear}\">${options}</select>`;\r\n    }\r\n\r\n    const isList = me.editable && me.range && options.length > 0;\r\n    const listID = isList ? GSID.next : null;\r\n    const list = isList ? html`<datalist id=\"${listID}\">${options}</datalist>` : '';\r\n\r\n    return html`<input name=\"year\" \r\n      type=\"number\" \r\n      list=\"${ifDefined(listID)}\"\r\n      class=\"year ${me.cssYear}\" \r\n      @change=\"${me.#onYear}\" \r\n      min=\"${minYear}\" \r\n      max=\"${maxYear}\"\r\n      value=\"${me.#date.getFullYear()}\">\r\n      ${list}`;\r\n  }\r\n\r\n  #optionsHTML(options, minYear = 0, maxYear = 0) {\r\n    const me = this;\r\n    let val = minYear;\r\n    while (val <= maxYear) {\r\n      if (me.editable) {\r\n        options.push(html`<option value=\"${val}\" selected=${ifDefined(val == me.year ? true : undefined)}>`);\r\n      } else {\r\n        options.push(html`<option value=\"${val}\" selected=${ifDefined(val == me.year ? true : undefined)}>${val}</option>`);\r\n      }\r\n      val++;\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  #onDay(e) {\r\n    GSEvents.prevent(e);\r\n    if (!e.target.classList.contains('day')) return;\r\n    const me = this;\r\n    const day = GSUtil.asNum(e.target.dataset.day, me.day);\r\n\r\n    me.#selected.day = 1;\r\n    me.#selected.month = me.month;\r\n    me.#selected.year = me.year;\r\n    me.#selected.day = day;\r\n\r\n    me.day = day;\r\n  }\r\n\r\n  #onMonth(e) {\r\n    this.month = e.target.selectedIndex;\r\n  }\r\n\r\n  #onYear(e) {\r\n    const yearEl = e?.target;\r\n    if (yearEl?.validity.valid) {\r\n      this.year = yearEl.value;\r\n    }\r\n  }\r\n\r\n  #onKey(e) {\r\n    // console.log(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-calendar');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCardElement extends GSElement {\r\n\r\n  static styles = css`.card-header, .card-footer{ background-color: inherit; color: inherit;}`;\r\n\r\n  static properties = {\r\n\r\n    imageStyle: { type: Object, attribute: 'image-style', reflect : true },\r\n\r\n    overlay: { type: Boolean },\r\n    placement: { ...placement },\r\n    align: { ...placement },\r\n\r\n    image: {},\r\n    title: {},\r\n    subtitle: {},\r\n    text: {},\r\n    footer: {},\r\n    header: {},\r\n\r\n    colorText: { attribute: 'color-text' },\r\n    colorBack: { attribute: 'color-back' },\r\n    colorBorder: { attribute: 'color-border' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssSubtitle: { attribute: 'css-subtitle' },\r\n    cssText: { attribute: 'css-text' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssImage: { attribute: 'css-image' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.border = false;\r\n    this.shadow = false;\r\n    this.align = 'start';\r\n    this.placement = 'top';\r\n    this.imageStyle = this.imageStyle || {};\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const content =  me.isVertical ? me.#renderVertical() : me.#renderHorizontal();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"card ${classMap(me.renderClass())}\">${content}</div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return [me.#imageTop, me.#header, me.#body, me.#footer, me.#imageBottom];\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    const start = PlacementTypes.isBefore(me.placement);\r\n    const startClass = start ? 'col-4' : 'col-8';\r\n    const endClass = start ? 'col-8' : 'col-4';\r\n    const startHtml = start ? me.#images : me.#body;\r\n    const endHtml =  start ? me.#body : me.#images;\r\n    return html`<div class=\"row g-0\">\r\n        <div class=\"${startClass}\">\r\n            ${startHtml}\r\n        </div>\r\n        <div class=\"${endClass}\">\r\n          ${endHtml}\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      border: me.border || me.colorBorder,\r\n      [`text-${me.align}`]: me.align,\r\n      [`text-${me.colorText}`]: me.colorText,\r\n      [`bg-${me.colorBack}`]: me.colorBack,\r\n      [`border-${me.colorBorder}`]: me.colorBorder,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return PlacementTypes.isHorizontal(this.placement);\r\n  }\r\n\r\n  get #body() {\r\n    const me = this;\r\n    return html`<div class=\"${me.overlay ? 'card-img-overlay' : 'card-body'} ${me.cssBody}\">\r\n      <h5 class=\"card-title  ${me.cssTitle}\"><slot name=\"title\">${me.translate(me.title)}</slot></h5>\r\n      <h6 class=\"card-subtitle  ${me.cssSubtitle}\"><slot name=\"subtitle\">${me.translate(me.subtitle)}</slot></h6>\r\n      <p class=\"card-text ${me.cssText}\"><slot name=\"text\">${me.translate(me.text)}</slot></p>\r\n      <slot name=\"body\"></slot>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  get #header() {\r\n    return this.overlay ? '' : html`<div class=\"card-header  ${this.cssHeader}\"><slot name=\"header\">${this.header}</slot></div>`;\r\n  }\r\n\r\n  get #footer() {\r\n    return this.overlay ? '' : html`<div class=\"card-footer ${this.cssFooter}\"><slot name=\"footer\">${this.footer}</slot></div>`;\r\n  }\r\n\r\n  get #imageSlot() {\r\n    return html`<slot name=\"image\"></slot>`;\r\n  }\r\n\r\n  get #image() {\r\n    const me = this;\r\n    const css = me.isHorizontal ? 'img-fluid' : 'card-img';\r\n    me.dynamicStyle(me.#styleID, me.imageStyle);\r\n    return html`<img src=\"${me.image}\" class=\"rounded-${me.placement} ${css} ${me.cssImage} ${me.#styleID}\" alt=\"...\">`;\r\n  }\r\n\r\n  get #images() {\r\n    return this.image ? this.#image : this.#imageSlot;\r\n  }\r\n\r\n  get #imageTop() {\r\n    return this.placement === 'top' ? this.#images : '';\r\n  }\r\n\r\n  get #imageBottom() {\r\n    return this.placement === 'bottom' ? this.#images : '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-card');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSCenterElement extends GSElement {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n      class=\"position-absolute top-50 start-50 translate-middle ${classMap(me.renderClass())}\">\r\n    ${me.renderTemplate()}<slot></slot></div>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-center');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenuElement class\r\n * @module components/GSMenuElement\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSMenuElement extends GSElement {\r\n\r\n    static properties = {\r\n        storage: {},\r\n        auto: { type: Boolean, reflect: true },\r\n        opened: { type: Boolean, reflect: true },\r\n        dark: { type: Boolean },\r\n        reverse: { type: Boolean },\r\n        offset: { type: Number },\r\n        data: { type: Array },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {},\r\n        title: {},\r\n        header: {},\r\n        color: {},\r\n        icon: {},\r\n        url: { default: '#' }\r\n    }\r\n\r\n    #menuRef = createRef();\r\n    #styleID = GSID.id;\r\n    #controller = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.offset = 0;\r\n        me.dynamicStyle(me.#styleID);\r\n        me.data = me.#proxify(me);\r\n        me.#controller = new GroupController(this);\r\n    }\r\n\r\n    onBusEvent(e) {\r\n       if (e.detail.owner != this) {\r\n            this.opened = false;\r\n       }\r\n     }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        if (changed.has('opened') && !this.opened) {\r\n            this.#closeSubmenus();\r\n        }\r\n    }\r\n\r\n    updated() {\r\n        this.#updatePosition();\r\n        if (this.opened) {\r\n            this.#controller.notify();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<ul \r\n            ${ref(me.#menuRef)}\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            class=\"dropdown-menu ${classMap(me.renderClass())}\"\r\n            data-gs-class=\"${me.#styleID}\"\r\n            data-menu=\"true\"\r\n            @mouseover=\"${me.#onMouseOver}\"\r\n            @mouseleave=\"${me.#onMouseLeave}\"\r\n            @keydown=\"${me.#onKeyDown}\"\r\n            @click=\"${me.#onClick}\">\r\n            ${me.#items(me.data)}\r\n        </ul>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'submenu': me.dataset.submenu,\r\n            'dropdown-menu-dark': me.dark,\r\n            [me.#styleID]: true,\r\n            'show': me.opened,\r\n            'dropend': !me.reverse,\r\n            'dropstart': me.reverse,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    /**\r\n     * Show at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {HTMLElement} caller\r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n\r\n        const me = this;\r\n        // offset to render under the mouse,\r\n        // important for GSGrid for better UI experience\r\n        const offset = GSUtil.asNum(me.offset, 0);\r\n        let target = caller;\r\n\r\n        if (GSEvents.isMouseOrPointerEvent(x)) {\r\n            const e = x;\r\n            target = e.target;\r\n            y = e.clientY;\r\n            x = e.clientX;\r\n            let offset = GSDOM.offsetParent(me);\r\n            offset = offset ? offset.getBoundingClientRect() : null;\r\n            x = x - (offset?.left || 0);\r\n            y = y - (offset?.top || 0);\r\n        }\r\n\r\n        const cfg = { clientX: x - offset, clientY: y - offset, target: target };\r\n\r\n        requestAnimationFrame(() => {\r\n            const style = {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                left: '0px',\r\n                translate: `${cfg.clientX}px ${cfg.clientY}px`\r\n            };\r\n            const rule = me.dynamicStyle(me.#styleID);\r\n            Object.assign(rule.style, style);\r\n        });\r\n        me.open();\r\n\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    #items(root) {\r\n        const me = this;\r\n        return root.map(el => me.#item(el));\r\n    }\r\n\r\n    #item(el) {\r\n        const me = this;\r\n        const isSub = el.items?.length > 0;\r\n        if (isSub) return me.#renderSubmenu(el);\r\n        if (!(el.header || el.name)) return me.#renderDivider();\r\n        return el.header ? me.#renderHeader(el) : me.#renderMenu(el);\r\n    }\r\n\r\n    #renderHeader(el) {\r\n        return html`<li data-inert=\"true\"><h6 class=\"dropdown-header\">${this.#renderIcon(el)}${el.header}</h6></li>`;\r\n    }\r\n\r\n    #renderDivider() {\r\n        return html`<li data-inert=\"true\"><hr class=\"dropdown-divider\"></li>`;\r\n    }\r\n\r\n    #renderSubmenu(el) {\r\n        const me = this;\r\n        return html`<li>\r\n            <a class=\"dropdown-item dropdown-toggle\" data-toggle=\"true\" href=\"#\">\r\n                <div class=\"d-inline-block w-100\">${me.#renderIcon(el)}${el.name}</div>\r\n            </a>\r\n            <gs-menu auto \r\n                .data=${el.items} \r\n                ?dark=${me.dark} \r\n                ?reverse=\"${me.reverse}\" \r\n                language=\"${ifDefined(me.language)}\" \r\n                data-submenu=\"true\">\r\n            </gs-menu>\r\n        </li>`;\r\n    }\r\n\r\n    #renderIcon(el) {\r\n        return el.icon ? html`<gs-icon css=\"mx-1\" name=\"${el.icon}\"></gs-icon>` : '';\r\n    }\r\n\r\n    #renderMenu(el) {\r\n        return html`<li>\r\n                <gs-button css=\"dropdown-item shadow-none\" \r\n                    ${dataset(el, false)}\r\n                    url=\"${el.url}\"\r\n                    title=\"${el.name}\" \r\n                    language=\"${ifDefined(this.language)}\" \r\n                    icon=\"${ifDefined(el.icon)}\" \r\n                    text=\"${ifDefined(el.color)}\"\r\n                    data-gs-target=\"${ifDefined(el.target || 'self')}\"\r\n                    data-gs-action=\"${ifDefined(el.action)}\">\r\n                </gs-button></li>`;\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSMenuElement.options));\r\n    }\r\n\r\n    #closeSubmenus(menu) {\r\n        GSDOM.queryAll(this.renderRoot, 'gs-menu', false, false)\r\n            .filter(el => el != menu)\r\n            .forEach(el => el.close());\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.key) {\r\n            case 'Escape':\r\n                me.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        submenu?.close();\r\n        if (me.auto) me.close();\r\n    }\r\n\r\n    #onMouseLeave(e) {\r\n        GSEvents.prevent(e);\r\n        if (this.auto) this.close();\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        me.#closeSubmenus(submenu);\r\n        submenu?.open();\r\n    }\r\n\r\n    #toSubmenu(e) {\r\n        const menuItem = e.target.closest('li');\r\n        return menuItem?.querySelector('gs-menu');\r\n    }\r\n\r\n    #updatePosition() {\r\n        const me = this;\r\n        if (!me.opened) return;\r\n        const rule = me.dynamicStyle(me.#styleID);\r\n        if (me.isSubmenu) {\r\n            const opt = { translate: `0px -25px` };\r\n            if (me.reverse) {\r\n                opt.left = 'inherited';\r\n                opt.right = '100%';\r\n            } else {\r\n                opt.right = 'inherited';\r\n                opt.left = '100%';\r\n            }\r\n            Object.assign(rule.style, opt);\r\n        } else {\r\n            rule.style.translate = null;\r\n            const rect = me.#menu.getBoundingClientRect();\r\n            const offset = window.innerWidth - rect.right;\r\n            me.reverse = offset - 5 < 0;\r\n            if (me.reverse) rule.style.translate = `${offset - 2}px`;\r\n        }\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.dataset.submenu;\r\n    }\r\n\r\n    get #menu() {\r\n        return this.#menuRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-menu');\r\n    }\r\n}\r\n","/*GSContextElement\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContextElement class\r\n * @module components/GSContextElement\r\n */\r\n\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for context menu\r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSContextElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        target: {},\r\n        filter: {},\r\n        altContext: { type: Boolean, attribute: 'altcontext' },\r\n        disabled: { type: Boolean },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;        \r\n        me.auto = true;\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n            me.target = \"tbody\";\r\n            me.filter = \"[selected]\";\r\n            me.offset =\"4\";\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', me.close.bind(me));        \r\n        if (!me.slot) me.#attachTarget();\r\n    }\r\n    \r\n    onSlotInjected(slot) {\r\n        this.#attachTarget();\r\n    }\r\n\r\n    #attachTarget() {\r\n        const me = this;        \r\n        const owner = GSDOM.parent(me.assignedSlot || me);\r\n        let targets = me.target ? GSDOM.queryAll(owner, me.target) : [owner];\r\n        if (!targets.length) targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    }\r\n\r\n    #match(e) {\r\n        const me = this;\r\n        return e.composedPath().filter(el => el.matches)\r\n            .filter(el => el.matches(me.filter ? me.filter : me.target));\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        if (e.shiftKey && me.altContext) return;\r\n        const list = me.#match(e);\r\n        if (list.length === 0) return;\r\n        GSEvents.prevent(e);\r\n        me.popup(e);\r\n        return true;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    /**\r\n     * Show submenu at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n        return this.disabled ? false : super.popup(x, y, caller);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-context');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, notEmpty } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\nexport class GSCompareElement extends GSElement {\r\n\r\n  static styles = css`.slider {\r\n         --gs-position : 50%;\r\n          left : var(--gs-position);\r\n          width: 8px;\r\n          height: 100%;\r\n          border-width: 1px;\r\n          cursor: w-resize;\r\n          border-color: darkgray;\r\n          border-style: solid;\r\n          background-color: lightgray;\r\n      }\r\n      .clipper {\r\n        --gs-position : 50%;\r\n        clip-path: inset(0px var(--gs-position) 0px 0px);\r\n      }\r\n    `;\r\n\r\n  static properties = {\r\n    background: { ...color },\r\n    width: { type: Number },\r\n    height: { type: Number },\r\n    before: { hasChanged: notEmpty },\r\n    after: { hasChanged: notEmpty },\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  #elRef = createRef();\r\n  #clipRef = createRef();\r\n  #slideRef = createRef();\r\n\r\n  #mouseController;\r\n  #elPosition;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.width = 0;\r\n    me.height = 0;\r\n    me.dynamicStyle(me.#styleID);\r\n    me.#mouseController = new ElementMoveController(me);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#mouseController.attach(this.#splitter);\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n         dir=\"${ifDefined(me.direction)}\"\r\n         @loaded=\"${me.#onLoad}\" \r\n         @dblclick=\"${me.#onDoubleClick}\"\r\n         data-gs-class=\"${me.#styleID}\"\r\n         class=\"${classMap(me.renderClass())}\">\r\n      <div class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden\"><slot name=\"before\">${me.#before}</slot></div>\r\n      <div ${ref(me.#clipRef)} class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden clipper\"><slot name=\"after\">${me.#after}</slot></div>\r\n      <div ${ref(me.#slideRef)} class=\"slider position-absolute top-0><slot name=\"control\"></slot></div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      \"position-relative\": true,\r\n      \"user-select-none\": true,\r\n      \"d-contents\": me.isAuto,\r\n      \"h-100\": me.isAuto,\r\n      \"w-100\": me.isAuto,\r\n      \"overflow-hidden\": true,\r\n      [`bg-${me.background}`]: me.background,\r\n      [`${me.#styleID}`]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Handles resizing based on mouse move event\r\n   * @param {MouseEvent} e \r\n   */\r\n  onStartMove(e) {\r\n    this.#elPosition = this.#splitter.getBoundingClientRect();\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    const me = this;\r\n    const offset = me.#elPosition.left;\r\n    const width = me.#elPosition.width;\r\n    const pos = GSUtil.range(e.clientX - offset, 0, width);\r\n    const pct = (pos / width) * 100;\r\n    me.#update(pct);\r\n  }\r\n\r\n  get isAuto() {\r\n    return this.width == 0 || this.height == 0;\r\n  }\r\n\r\n  get isFixed() {\r\n    return !this.isAuto;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  get #before() {\r\n    return this.before ? html`<img @load=\"${this.#onLoad}\" src=\"${me.before}\"></img>` : '';\r\n  }\r\n\r\n  get #after() {\r\n    return this.after ? html`<img @load=\"${this.#onLoad}\" src=\"${me.after}\"></img>` : '';\r\n  }\r\n\r\n  get #isAuto() {\r\n    return this.width === 0 || this.height === 0;\r\n  }\r\n\r\n  get #splitter() {\r\n    return this.#elRef.value;\r\n  }\r\n\r\n  get #slider() {\r\n    return this.#slideRef.value;\r\n  }\r\n\r\n  get #clip() {\r\n    return this.#clipRef.value;\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const me = this;\r\n    if (me.#isAuto) {\r\n      const el = e.target;\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n    }\r\n  }\r\n\r\n  #onDoubleClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#update();\r\n    me.#mouseController.reset();\r\n  }\r\n\r\n  #update(pct = 50) {\r\n    const me = this;\r\n    me.#clip.style.setProperty('--gs-position', `${100 - pct}%`);\r\n    me.#slider.style.setProperty('--gs-position', `${pct}%`);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-compare');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\n\r\n/**\r\n * Helper component to enable controller attachment to the GS WebComponent.\r\n * It is used to simplify and separate templates from logic.\r\n */\r\nexport class GSControllerElement extends GSElement {\r\n\r\n  static properties = {\r\n    module: {},\r\n    controller: {},\r\n  }\r\n\r\n  #clazz = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  updated(changes) {\r\n    super.updated(changes);\r\n    const me = this;\r\n    if (me.isConnected && me.isValid) {\r\n      me.#initialize();\r\n    }\r\n  }\r\n\r\n  get isValid() {\r\n    return this.parentElement instanceof GSElement;\r\n  }\r\n\r\n  async #initialize() {\r\n\r\n    const me = this;\r\n    const host = me.parentElement;\r\n\r\n    if (me.#clazz) return;\r\n\r\n    let clazz = globalThis[me.controller];\r\n    if (!clazz && me.module) {\r\n      const url = GSLoader.normalizeURL(me.module);\r\n      const module = await import(url);\r\n      clazz = module[me.controller];\r\n    }\r\n\r\n    if (clazz) {\r\n      new clazz(host);\r\n      me.#clazz = clazz;\r\n      globalThis[me.controller] = clazz;\r\n    }\r\n\r\n  }\r\n\r\n  static {\r\n    this.define('gs-controller');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSCopyrightElement extends GSElement {\r\n\r\n  static properties = {\r\n    year: { reflect: true, type: Number },\r\n    company: { reflect: true },\r\n    url: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    if (!(me.isCompany && me.isYear)) return '';\r\n    const year = new Date().getFullYear();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"${classMap(me.renderClass())}\"><a target=\"_blank\" href=\"${me.url ? me.url : '#'}\"><small>&copy; ${me.company} ${me.year}. - ${year}.</small></a></div>`;\r\n  }\r\n\r\n  get isCompany() {\r\n    return GSUtil.isStringNonEmpty(this.company);\r\n  }\r\n\r\n  get isYear() {\r\n    return GSUtil.isStringNonEmpty(this.year);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-copyright');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSFunction } from '../base/GSFunction.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/verificator.mjs';\r\nimport { GSReadWriteRegistry } from '../data/ReadWriteRegistry.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for easier access to the GSReadWrite/GSTreeReader\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSDataHandler extends GSElement {\r\n\r\n    static properties = {\r\n        storage: { state: true },\r\n        src: { reflect: true },\r\n        action: { reflect: true },\r\n        mode: { reflect: true },\r\n        reader: { reflect: true },\r\n        writer: { reflect: true },\r\n        limit: { type: Number, reflect: true },\r\n        skip: { type: Number, reflect: true },\r\n        filter: { type: Array, reflect: true },\r\n        sort: { type: Array, reflect: true },\r\n        type: {},\r\n        autoload: { type: Boolean },\r\n        autorefresh: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    }\r\n\r\n    #iid = 0;\r\n    #config = null;\r\n    #handler = null;\r\n    #lifoReadRef = null;\r\n    #lifoWriteRef = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        me.autorefresh = 0;\r\n        me.autoload = false;\r\n        me.flat = true;\r\n        me.filter = [];\r\n        me.sort = [];\r\n        me.limit = 0;\r\n        me.skip = 0;\r\n        me.src = '';\r\n        me.type = 'remote';\r\n        me.mode = 'query';\r\n        me.reader = 'GET';\r\n        me.writer = 'POST';\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n          }\r\n        if (!me.isGenerated && !me.id) throw new Error('Element ID is required attribute!');\r\n        GSItem.validate(me, me.tagName);\r\n    }\r\n    \r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        const itemHolder = me.isGenerated && me.childElementCount === 0 ? me.parentComponent : me;\r\n        me.#config = GSItem.proxify(itemHolder, GSData.PROPERTIES);\r\n        me.#initLIFO(true);\r\n        me.#initLIFO(false);\r\n    }\r\n    \r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        me.#handler?.disable();\r\n        me.#handler?.removeProcessor(me);\r\n        me.#lifoReadRef = null;\r\n        me.#lifoWriteRef = null;\r\n        clearTimeout(me.#iid);\r\n    }\r\n    \r\n    firstUpdated() {\r\n        const me = this;\r\n        me.#handler = GSReadWriteRegistry.newHandler(me.type, me.storage, false);\r\n        if (me.#config?.length > 0) me.#handler?.addProcessor(me);\r\n        me.#updateHandler(true);                \r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        const me = this;\r\n        me.#updateHandler();\r\n        if (changed.has('autorefresh')) me.schedule(me.autorefresh);\r\n    }\r\n\r\n    #updateHandler(first = false) {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.key = me.key;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.formatSort(me.sort);\r\n        me.#handler.filter = me.formatFilter(me.filter);\r\n        if (me.autoload) me.read();\r\n        if (first) {\r\n            me.#handler.enable();\r\n            // to prevent double read by this component and table\r\n            if (me.autoload) {\r\n                me.dataController?.read();\r\n            } \r\n        }\r\n    }\r\n\r\n    get isDebug() {\r\n        return this.dataset.gsDebug;\r\n    }\r\n\r\n    get handler() {\r\n        return this.#handler;\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    get isCached() {\r\n        return this.#handler?.type == 'cached';\r\n    }\r\n\r\n    set search(val) {\r\n        if (this.#handler) this.#handler.search = val;\r\n    }\r\n\r\n    get key() {\r\n        return this.#config.filter(o => o.key).map(o => o.name).pop() || null;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    formatFilter(val) {\r\n        val = this.#formated(val);\r\n        return Array.isArray(val) ? val : [];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    formatSort(val) {\r\n        val = this.#formated(val);\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort || [];\r\n    }\r\n\r\n    schedule(time = 0) {\r\n        const me = this;\r\n        time = GSUtil.asNum(time) * 1000;\r\n        clearInterval(me.#iid);\r\n        if (time > 0) me.#iid = setInterval(() => {\r\n            me.read(me);\r\n        }, time);\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data, append = false) {\r\n        return this.#lifoWriteRef(data, append);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return this.#handler?.selected;\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        return this.#handler?.addSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        return this.#handler?.removeSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        return this.#handler?.clearSelected();\r\n    }\r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onDataRead(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data Read: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onDataWrite(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data write: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Process data after receive, before notifying \r\n     * @param {*} data \r\n     */\r\n    postRead(data) {\r\n        const me = this;\r\n        if (!Array.isArray(data)) data = [data];\r\n        data.forEach(r => {\r\n            me.#config.forEach(c => {\r\n                let val = r[c.name];\r\n                if (!GSUtil.isNull(val)) {\r\n                    val = GSData.format(c, val);\r\n                    r[c.name] = val;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onDataError(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data error: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #initLIFO(read = true) {\r\n        const me = this;\r\n        if (read) {\r\n            me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n        } else {\r\n            me.#lifoWriteRef = GSFunction.callOnceLifo(me.#lifoWriteRefCallback, me);\r\n        }\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO(true);\r\n        return me.#lifoCall(true);\r\n    }\r\n\r\n    #lifoWriteRefCallback(data, append) {\r\n        const me = this;\r\n        me.#initLIFO(false);\r\n        return me.#lifoCall(false, data, append);\r\n    }\r\n    \r\n    #lifoCall(read = true, data, append) {\r\n        const me = this;\r\n        me.#verifyHandler();        \r\n        if (read) return me.#handler?.read(me);        \r\n        if (!append) me.#handler.clear();\r\n        return me.#handler?.write(me, data);\r\n    }\r\n\r\n    #formated(val) {\r\n        return GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    static {\r\n        this.define('gs-data-handler');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { size, SizeTypes } from '../properties/size.mjs';\r\n\r\nexport class GSDialogElement extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n  static ALIGN = 'end';\r\n  static CANCEL = 'Cancel';\r\n  static CONFIRM = 'Ok';\r\n\r\n  static #STACK = [];\r\n\r\n  static styles = css`dialog{--bs-modal-width: 500px;width:var(--bs-modal-width);outline:none;}dialog::backdrop{backdrop-filter: blur(4px);}`;\r\n\r\n  static properties = {\r\n\r\n    standard: { reflect: true, type: Boolean },\r\n    opened: { reflect: true, type: Boolean },\r\n    cancelable: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    escapable: { reflect: true, type: Boolean },\r\n    disabled: { reflect: true, type: Boolean },\r\n\r\n    size: size,\r\n\r\n    title: { reflect: true },\r\n    message: { reflect: true },\r\n    cancelText: { reflect: true, attribute: 'text-cancel' },\r\n    confirmText: { reflect: true, attribute: 'text-confirm' },\r\n\r\n    minWidth: { reflect: true, type: Number, attribute: 'min-width' },\r\n    buttonAlign: { reflect: true, attribute: 'button-align' },\r\n\r\n    iconCancel: { reflect: true, attribute: 'icon-cancel' },\r\n    iconConfirm: { reflect: true, attribute: 'icon-confirm' },\r\n\r\n    colorCancel: { attribute: 'color-cancel' },\r\n    colorConfirm: { attribute: 'color-confirm' },\r\n\r\n    cssCancel: { attribute: 'css-cancel' },\r\n    cssConfirm: { attribute: 'css-confirm' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssContent: { attribute: 'css-content' },\r\n\r\n  }\r\n\r\n  #pass = false;\r\n  #styleID = GSID.id;\r\n  #dialogRef = createRef();\r\n  #btnConfirmRef = createRef();\r\n  #btnCancelRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    const clazz = GSDialogElement;\r\n    me.opened = false;\r\n    me.standard = false;\r\n    me.cancelable = false;\r\n    me.closable = false;\r\n    me.escapable = false;\r\n    me.disabled = false;\r\n    me.shadow = false;\r\n    me.rounded = false;\r\n\r\n    me.minWidth = 0;\r\n    me.css = clazz.CSS;\r\n    me.cssTitle = clazz.TITLE_CSS;\r\n    me.cssHeader = clazz.HEADER_CSS;\r\n    me.buttonAlign = clazz.ALIGN;\r\n    me.cancelText = clazz.CANCEL;\r\n    me.confirmText = clazz.CONFIRM;\r\n    me.colorCancel = 'secondary';\r\n    me.colorConfirm = 'primary';\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialogElement.#updateStack();\r\n  }\r\n\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    this.#pass = true;\r\n  }\r\n\r\n  _shouldUpdate(changed) {\r\n    const me = this;\r\n    return me.opened === true || me.#pass;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    const allowed = me.opened === true || me.#pass;\r\n    // initially hidden dialogs rendering are posponed\r\n    if (!allowed) {\r\n      GSUtil.timeout(1000).then(() => {\r\n        queueMicrotask(() => { \r\n          const allowed = me.opened === true || me.#pass;\r\n          if (!allowed) {\r\n            me.#pass = true;\r\n            if (me.isConnected) me.requestUpdate();\r\n          }\r\n        });          \r\n      });\r\n    }\r\n    return allowed;\r\n  }\r\n\r\n  updated(changed) {\r\n    super.updated(changed);\r\n    if (changed.has('opened')) {\r\n      this.#onOpenChanged();\r\n    }\r\n  }\r\n\r\n  #onOpenChanged() {\r\n    const me = this;\r\n    let state = null;\r\n    if (me.opened) {\r\n      GSDialogElement.#STACK.push(me);\r\n      state = 'opening';\r\n      if (me.standard) {\r\n        me.#dialog?.open();\r\n      } else {\r\n        me.#dialog?.showModal();\r\n      }\r\n      me.#focusable()?.focus();\r\n    } else {\r\n      state = 'closing';\r\n      if (me.isHashed) location.hash = '';\r\n      GSDialogElement.#STACK.pop();\r\n      me.#dialog?.close();\r\n    }\r\n    me.notify(true, false, state);\r\n  }\r\n\r\n  #renderConfirm() {\r\n    const me = this;\r\n    if (!me.closable) return '';\r\n    return html`<gs-button  ${ref(me.#btnConfirmRef)} \r\n      @click=\"${me.#onConfirm.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconConfirm)}\"\r\n      language=\"${ifDefined(me.language)}\"\r\n      .disabled=\"${me.disabled}\"  \r\n      css=\"${ifDefined(me.cssConfirm)}\" \r\n      color=\"${ifDefined(me.colorConfirm)}\" \r\n      title=\"${me.confirmText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderCancel() {\r\n    const me = this;\r\n    if (!me.cancelable) return '';\r\n    return html`<gs-button ${ref(me.#btnCancelRef)}\r\n      @click=\"${me.#onCancel.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconCancel)}\"\r\n      language=\"${ifDefined(me.language)}\"\r\n      css=\"${ifDefined(me.cssCancel)}\" \r\n      color=\"${ifDefined(me.colorCancel)}\" \r\n      title=\"${me.cancelText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderFooter() {\r\n    const me = this;\r\n    const isFooter = me.cancelable || me.closable;\r\n    if (!isFooter) return '';\r\n    return html`<div class=\"card-footer d-flex user-select-none justify-content-${me.buttonAlign} ${me.cssFooter}\">\r\n       <slot name=\"actions\"></slot>\r\n      ${me.#renderCancel()} &nbsp;${me.#renderConfirm()}\r\n      </div>`;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const styles = {\r\n      'min-width': me.minWidth > 0 ? `${me.minWidth}px` : undefined\r\n    };\r\n    me.dynamicStyle(me.#styleID, styles);\r\n    return html`\r\n        <dialog tabindex=\"-1\" ${ref(me.#dialogRef)} \r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @close=\"${me.#onCancel.bind(me)}\"\r\n            @cancel=\"${me.#onCancel.bind(me)}\"\r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @form=\"${me.#onForm.bind(me)}\"\r\n            @confirm=\"${me.#onConfirm.bind(me)}\"\r\n            @submit=\"${me.#onSubmit.bind(me)}\"\r\n            class=\"${classMap(me.renderClass())}\">\r\n            <div class=\"card ${me.cssContent}\">\r\n                <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n                  <div class=\"card-title ${me.cssTitle}\">\r\n                    <slot name=\"title\">${me.translate(me.title)}</slot>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body ${me.cssBody}\">\r\n                  <slot name=\"body\">\r\n                  ${me.translate(me.message)}\r\n                  ${me.renderTemplate()}\r\n                  </slot>\r\n                </div>\r\n                ${me.#renderFooter()}\r\n            </div>\r\n            <slot name=\"extra\"></slot>\r\n            <div class=\"toast-container position-fixed\"></slot></div>\r\n        </dialog>`\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'dialog': true,\r\n      'p-0': true,\r\n      'border-0': true,\r\n      [me.#styleID]: true,\r\n      [`modal-${size}`]: size ? true : false\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.closable = closable;\r\n    me.cancelable = cancelable;\r\n    me.escapable = cancelable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('click-action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    return this.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    return this.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    index = GSUtil.asNum(index, 0);\r\n    const me = this;\r\n    me.forms?.forEach?.(f => { f.reset(); f.data = data; });\r\n    const tab = me.tab;\r\n    if (tab && index > -1) tab.index = index;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Retrun true if dialog is opened by hashbang.\r\n   * Used to clear the hashbang on close\r\n   */\r\n  get isHashed() {\r\n    return GSUtil.asBool(this.dataset.gsHashed);\r\n  }\r\n\r\n  get form() {\r\n    return this.query('gs-form', true);\r\n  }\r\n\r\n  get forms() {\r\n    return this.queryAll('gs-form', true);\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('gs-tab', true);\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.#dialogRef.value;\r\n  }\r\n\r\n  get #btnConfirm() {\r\n    return this.#btnConfirmRef.value;\r\n  }\r\n\r\n  get #btnCancel() {\r\n    return this.#btnCancelRef.value;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  #focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#btnCancel;\r\n    if (me.closable) return me.#btnConfirm;\r\n    return me;\r\n  }\r\n\r\n  async #onConfirm(e) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const ret = await Promise.all(me.forms?.map?.(form => form.submit()));\r\n    if (ret.indexOf(false) < 0) me.close();\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.close();\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle injected form events\r\n   * @param {*} e \r\n   */\r\n  #onForm(e) {\r\n    let sts = true;\r\n    const me = this;\r\n    const data = e.detail;\r\n    switch (data.type) {\r\n      case 'submit':\r\n        sts = me.emit('data', data.data, false, false, true);\r\n        if (!sts) GSEvents.prevent(e);\r\n        //me.opened = false;\r\n        break;\r\n      case 'valid':\r\n        me.disabled = data.data === false;\r\n        break;\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  #onSubmit(e) {\r\n    debugger;\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialogElement.#STACK = GSDialogElement.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  /**\r\n   * Return number of dialogs in a stack\r\n   */\r\n  static get size() {\r\n    return GSDialogElement.#STACK.length;\r\n  }\r\n\r\n  static get top() {\r\n    GSDialogElement.#updateStack();\r\n    const size = GSDialogElement.size;\r\n    return size === 0 ? null : GSDialogElement.#STACK[size - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialogElement.#updateStack();\r\n    return Array.from(GSDialogElement.#STACK);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-dialog');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, unsafeHTML, html, ifDefined } from '../lib.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSDrawerElement extends GSElement {\r\n\r\n  static properties = {\r\n    autoclose: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    backdrop: { reflect: true, type: Boolean },\r\n    expanded: { reflect: true, type: Boolean },\r\n    scroll: { reflect: true, type: Boolean },\r\n\r\n    min: { reflect: true, type: Number},\r\n    max: { reflect: true},\r\n    fingers: { reflect: true, type: Number},\r\n    placement: {...placement},\r\n    \r\n    transition: { reflect: true },\r\n    duration: { reflect: true, type: Number },\r\n\r\n    title: { reflect: true},\r\n\r\n    cssTitle: { reflect: true, attribute: \"css-title\"},\r\n    cssHead: { reflect: true, attribute: \"css-head\" },\r\n    cssBody: { reflect: true, attribute: \"css-body\" },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.placement = 'start';\r\n    me.cssTitle = 'fs-5';\r\n    me.transition = 'linear';\r\n    me.duration = 0.2;\r\n    me.min = 0;\r\n    me.max = 'auto';\r\n    me.fingers = 2;\r\n    me.on('mouseleave', me.#onLeave.bind(me));\r\n    me.on('mouseenter', me.#onEnter.bind(me));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`${unsafeHTML(me.#style)}\r\n    <div tabindex=\"-1\" dir=\"${ifDefined(me.direction)}\"\r\n     class=\"offcanvas overflow-hidden anime ${classMap(me.renderClass())}\">\r\n      ${me.#header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        ${me.renderTemplate()}\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>${me.#backdrop}`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': true,\r\n      'anime-open' : me.expanded,\r\n      'anime-close' : !me.expanded,\r\n      [`offcanvas-${me.placement}`]: me.placement,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #style() {\r\n    const me = this;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    return `<style>\r\n    .anime {\r\n      transition-property: ${pos} !important;\r\n      transition-duration: ${me.duration}s  !important;\r\n      transition-timing-function: ${me.transition} !important;\r\n    }\r\n    .anime-open {\r\n        ${pos} : ${me.max}${GSUtil.isNumber(me.max) ? 'px':''} !important;\r\n    }\r\n    .anime-close {\r\n      ${pos} : ${me.min}${GSUtil.isNumber(me.min) ? 'px':''} !important;\r\n    }    \r\n    </style>`;\r\n  }\r\n\r\n  get #backdrop() {\r\n    const me = this;\r\n    if (!me.backdrop) return '';\r\n    return html`<div class=\"offcanvas-backdrop fade ${me.expanded ? 'show' : 'invisible'}\" @click=\"${me.close}\"></div>`;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    return me.closable ? html`<button type=\"button\" class=\"btn-close text-reset\" @click=\"${me.close}\"></button>` : '';\r\n  }\r\n\r\n  get #title() {\r\n    const me = this;\r\n    return me.title ? html`<div class=\"offcanvas-title ${me.cssTitle}\">${me.translate(me.title)}</div>` : '';\r\n  }\r\n\r\n  get #header() {\r\n    const me = this;\r\n    return me.#hasHeader ? html`<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${me.#title}${me.#button}</slot></div>` : '';\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  get #hasHeader() {\r\n    return this.title || this.closable || this.#headSlot;\r\n  }\r\n\r\n  #notify(val) {\r\n    const me = this;\r\n    me.expanded = val == true;\r\n    me.notify();\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  open() {\r\n    this.#notify(true);\r\n  }\r\n\r\n  close() {\r\n    this.#notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.#notify(!this.expanded);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return !this.isVertical;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-drawer');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdownElement class\r\n * @module components/GSDropdownElement\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { cssMap } from '../directives/css-map.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDropdownElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        icon: {},\r\n        text: {...color},\r\n        color: {...color},\r\n        size: {},\r\n        title: {},\r\n        tooltip: {},\r\n        group: {},\r\n        simple: {type:Boolean}\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"dropdown\"  dir=\"${ifDefined(me.direction)}\">\r\n                ${me.#renderButton()}\r\n                ${super.renderUI()}\r\n            </div>`;\r\n    }\r\n\r\n    #buttonClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'btn': true,\r\n            [`btn-${me.color}`] : me.color ? true : false,\r\n            'dropdown-toggle': !me.simple,\r\n            'shadow-none' : true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    #renderButton() {\r\n        const me = this;\r\n        return html`<gs-link css=\"${cssMap(me.#buttonClass())}\"\r\n            url=\"#\"         \r\n            icon=\"${ifDefined(me.icon)}\"\r\n            text=\"${ifDefined(me.text)}\"\r\n            size=\"${ifDefined(me.size)}\"\r\n            title=\"${ifDefined(me.title)}\"\r\n            tooltip=\"${ifDefined(me.tooltip)}\"\r\n            @notify=\"${me.toggle}\">\r\n            </gs-link>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-dropdown');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html, unsafeHTML } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Safe email rendering to protect from spam bots.\r\n */\r\nexport class GSEmailElement extends GSElement {\r\n\r\n  static shadowRootOptions = { mode: 'closed' }\r\n\r\n  static style = css`.e-mail:before {\r\n    content: attr(data-website) \"\\0040\" attr(data-user);\r\n    unicode-bidi: bidi-override;\r\n    direction: rtl;\r\n    }`;\r\n\r\n  static properties = {\r\n    user: { reflect: true },\r\n    domain: { reflect: true },\r\n    dev: { type: Boolean }\r\n  }\r\n\r\n  #user;\r\n  #domain;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  willUpdate(changes) {\r\n    super.willUpdate(changes);\r\n    this.#updateUser();\r\n    this.#updateDomain()\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${unsafeHTML(this.#style)}<a @click=\"${this.#onClick}\" class=\"e-mail\" data-user=\"${this.#user}\" data-website=\"${this.#domain}\"  href=\"mailto://\"></a>`;\r\n  }\r\n\r\n  get #style() {\r\n    return '<style>.e-mail:before { content: attr(data-website) \"\\u0040\" attr(data-user); unicode-bidi: bidi-override; direction: rtl; }</style>';\r\n  }\r\n\r\n  get #url() {\r\n    return `mailto://${GSUtil.reverse(this.dataset.user)}@${GSUtil.reverse(this.dataset.domain)}`;\r\n  }\r\n\r\n  #updateUser() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.user) {\r\n      me.#user = dataset.user || GSUtil.reverse(me.user);\r\n      if (me.dev) dataset.user = me.#user;\r\n      me.user = '';\r\n    }\r\n  }\r\n\r\n  #updateDomain() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.domain) {\r\n      me.#domain = dataset.domain || GSUtil.reverse(me.domain);\r\n      if (me.dev) dataset.domain = me.#domain;\r\n      me.domain = '';\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    window.location.href = me.#url;\r\n    //window.open(me.#url, '_blank');  \r\n  }\r\n\r\n  static {\r\n    this.define('gs-email');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSFormElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    disabled: { type: Boolean },\r\n    data: { type: Object },\r\n\r\n    name: { reflect : true},\r\n    rel: { reflect : true},\r\n    acceptCharset : {reflect : true, attribute: 'accept-charset'},\r\n    autocapitalize: { reflect : true},\r\n    autocomplete: { reflect : true},\r\n\r\n    action: { reflect : true},\r\n    enctype: { reflect : true},\r\n    method: { reflect : true},\r\n    novalidate: { reflect : true, type: Boolean},\r\n    target: { reflect : true},\r\n\r\n    block: { type: Boolean },\r\n    beep: { type: Boolean },\r\n    timeout: { type: Number }\r\n  }\r\n\r\n  #formRef = createRef();\r\n  #lastState = undefined;\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n    this.disabled = false;\r\n    this.method = \"dialog\";\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<form ${ref(me.#formRef)}\r\n      id=\"${ifDefined(me.name)}\"\r\n      name=\"${ifDefined(me.name)}\"\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      @change=\"${me.#onChange}\"\r\n      @blur=\"${me.#onBlur}\"\r\n      @invalid=\"${me.#onInvalid}\"\r\n      @submit=\"${me.submit}\"\r\n      @reset=\"${me.reset}\"\r\n      method=\"${me.method}\"\r\n      \r\n      rel=\"${ifDefined(me.rel)}\"\r\n      acceptCharset=\"${ifDefined(me.acceptCharset)}\"\r\n      autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n      autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n      action=\"${ifDefined(me.action)}\"\r\n      enctype=\"${ifDefined(me.enctype)}\"\r\n      target=\"${ifDefined(me.target)}\"\r\n\r\n      ?novalidate=\"${me.novalidate}\">\r\n      <slot></slot>\r\n    </form>`;\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    me.dataController?.read();\r\n  }\r\n  \r\n  updated(changed) {\r\n    const me = this;\r\n    if (changed.has('disabled')) {\r\n      if (me.disabled) {\r\n        me.disable();\r\n      } else {\r\n        me.enable();\r\n      }\r\n    }\r\n    if (changed.has('data')) {\r\n      if (GSUtil.isNull(me.data)) {\r\n        me.reset();\r\n      } else {\r\n        me.asJSON = Object.assign(me.asJSON, me.data);\r\n      }\r\n    }\r\n  }\r\n\r\n  templateInjected() {\r\n    const me = this;\r\n    me.#doFilter(me.#filterField);\r\n    me.invalid[0]?.focus();\r\n\t}  \r\n\r\n  async reset(e) {\r\n    const me = this;\r\n    const internal = e?.target === me.form;\r\n\r\n    if (internal) {\r\n      me.elements.forEach(el => GSDOM.reset(el));\r\n      await me.dataController?.read(me.asJSON);\r\n    } else {\r\n      me.data = {};\r\n      me.form.reset();\r\n    }\r\n  }\r\n\r\n  async submit(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    if (!me.validate()) return;\r\n    const json = me.asJSON;\r\n    await me.dataController?.write(json);\r\n    const data = { type: 'submit', data: json, source: e, owner : me};\r\n    return me.emit('form', data, true, true, true);\r\n  }\r\n\r\n  #button(type) {\r\n    return this.query(`button[type=\"${type}\"]`, true);\r\n  }\r\n\r\n  get submitButton() {\r\n    return this.#button('submit');\r\n  }\r\n  \r\n  get resetButton() {\r\n    return this.#button('reset');\r\n  }\r\n  \r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n  \r\n  /**\r\n  * Overide native to pickup all form elements, including ones in shadow dom\r\n  */\r\n  get elements() {\r\n    return this.#childrens(true);\r\n  }\r\n\r\n  get fields() {\r\n    return this.elements;\r\n  }\r\n\r\n  get inputs() {\r\n    return this.elements;\r\n  }\r\n\r\n  get invalid() {\r\n    return this.inputs.filter(el => !el.validity.valid);\r\n  }\r\n\r\n  get asJSON() {\r\n    const data = {};\r\n    this.elements.forEach(field => GSDOM.fromElement2Object(field, data));    \r\n    return data;\r\n  }\r\n\r\n  set asJSON(data) {\r\n    const me = this;\r\n    //me.form.reset(); do not use, create a circular calls\r\n    me.elements.forEach(field => GSDOM.fromObject2Element(field, data));    \r\n    me.#doFilter(me.#filterField);\r\n    me.validate();\r\n  }\r\n\r\n  get isValid() {\r\n    return this.elements\r\n      .filter(el => !el.disabled)\r\n      .filter(el => !el.validity.valid).length === 0;\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.form.checkValidity() && \r\n    this.elements\r\n      .filter(el => !el.disabled)\r\n      .filter(el => !el.checkValidity()).length === 0;;\r\n  }\r\n\r\n  reportValidity() {\r\n    this.elements\r\n      .filter(el => !el.disabled)\r\n      .filter(el => !el.validity?.valid)\r\n      .forEach(el => el.reportValidity() );\r\n    return this.form.reportValidity();\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    let isValid = me.checkValidity();\r\n    if (!isValid) me.reportValidity();\r\n    isValid = me.onValidate(isValid);\r\n    me.#toggle(isValid);\r\n    me.#notify(isValid);\r\n    me.invalid[0]?.focus();\r\n    return isValid;\r\n  }\r\n\r\n  disable() {\r\n    GSDOM.disableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  enable() {\r\n    GSDOM.enableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataWrite(data) {\r\n\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  /**\r\n   * Called only if field is valid and changed\r\n   * @param {HTMLInputElement|HTMLSelectElement|HTMLTextAreaElement} el \r\n   */\r\n  onFieldChange(el) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Called only if field is invalid\r\n   * @param {HTMLInputElement|HTMLSelectElement|HTMLTextAreaElement} el \r\n   */\r\n  onFieldInvalid(el) {\r\n\r\n  }\r\n\r\n  onValidate(sts) {\r\n\r\n    return sts;\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    const field = me.#findField(e);\r\n    if(field) me.onFieldInvalid(field);\r\n    me.#toggle(false);\r\n    me.#notify(false);\r\n  }\r\n\r\n  #onBlur(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#toggle(me.isValid);\r\n    me.#notify(me.isValid);\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    const field = me.#findField(e);\r\n    if (field) {\r\n      me.#doFilter(field);\r\n      me.handle(e);\r\n      if (field.validity.valid) me.onFieldChange(field);\r\n    }\r\n    me.#toggle(me.isValid);\r\n    me.#notify(me.isValid);\r\n  }\r\n\r\n  #notify(isValid = false) {\r\n    const me = this;\r\n    if (me.#lastState === isValid) return;\r\n    me.#lastState = isValid;\r\n    const data = { type: 'valid', data: isValid, owner : me};\r\n    me.emit('form', data, true, true);    \r\n  }\r\n\r\n  #toggle(isValid = false) {\r\n    const me = this;\r\n    const btn = me.submitButton;\r\n    if (btn) btn.disabled = !isValid;\r\n  }  \r\n\r\n  #findField(e) {\r\n    if (!(e instanceof Event)) return;\r\n    const me = this;\r\n    let field = e.target;\r\n    if (e.composed) {\r\n      field = e.composedPath()\r\n        .filter(el => me.#isField(el))\r\n        .pop();\r\n    }\r\n    if(!me.#isField(field)) field = me.#findField(e.detail);\r\n    return me.#isField(field) ? field : null;\r\n  }\r\n\r\n  #isField(el) {\r\n    return el?.matches?.('input,select,textarea');\r\n  }\r\n\r\n  /**\r\n   * Filter field disabled status\r\n   * @param {HTMLInputElement} field \r\n   */\r\n  #doFilter(field) {\r\n    \r\n    if(!field) return;\r\n    \r\n    const me = this;\r\n\r\n    const value = me.#fieldValue(field);\r\n    const fldName = me.dataset.gsfDisable;\r\n    const fldVal = me.dataset.gsfValue;\r\n    const matched = fldName && field.name === fldName;\r\n    const flag = matched && value === fldVal;\r\n    if (matched) {\r\n      me.elements\r\n        .filter(el => el.name != fldName)\r\n        .forEach(el => el.disabled = flag);\r\n    } \r\n\r\n  }\r\n\r\n  /**\r\n   * Initialy, field might not be set just yet (if it is selectable),\r\n   * so we need to take valeu fro mgs-item definition\r\n   * @param {*} field \r\n   * @returns \r\n   */\r\n  #fieldValue(field) {\r\n    let value = field.tagName === 'GS-FORM-GROUP' ? field.field?.value : field.value;\r\n    if (field.selectable && GSUtil.isNull(value)) {\r\n      value = GSAttr.get(this.query('gs-item[selected]'), 'value');\r\n    }\r\n    return value;\r\n  }\r\n\r\n  #childrens(shadow = false) {\r\n    return this.queryAll('input,select,output,textarea', shadow);\r\n  }\r\n\r\n  get #filterField() {\r\n    const me = this;\r\n    return me.elements.filter(el => el.name === me.dataset.gsfDisable).pop();\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, unsafeHTML, ifDefined } from '../lib.mjs';\r\nimport { inputType, numGT0, numGE0, autocapitalize, autocorrect, autocomplete } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSFormGroupElement extends GSElement {\r\n\r\n  static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2';\r\n  static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n  static CSS_ICON = 'text-primary me-2 fs-5';\r\n  static ICON = 'info-circle-fill';\r\n\r\n  static #SELECTOPT = {\r\n    name : {},\r\n    value : {},\r\n    selected : {type: Boolean}\r\n  }\r\n\r\n  static properties = {\r\n    icon: {},\r\n    layout: {},\r\n    placement: {},\r\n\r\n    label: {},\r\n    description: {},\r\n    placeholder: {reflect: true},\r\n\r\n    pattern: {},\r\n    mask: {},\r\n    \r\n    form: {},\r\n    wrap: {},\r\n    spellcheck: {},\r\n\r\n    type: { ...inputType },\r\n    name: {},\r\n    list: {},\r\n    accept: {},   \r\n    value: {},\r\n\r\n    lang: {reflect: true},\r\n    title: {reflect: true},\r\n    rows: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    cols: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    step: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    min: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    max: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    minLength: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    maxLength: { type: Number, reflect: true, hasChanged: numGT0 },\r\n\r\n    reverse: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n\r\n    autoid: { type: Boolean },\r\n    autocopy: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    autocapitalize: { ...autocapitalize, reflect: true },\r\n    autocorrect: { ...autocorrect, reflect: true },\r\n    autocomplete: { reflect: true },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    disabled: { type: Boolean, reflect: true },\r\n    checked: { type: Boolean, reflect: true },\r\n    multiple: { type: Boolean, reflect: true },\r\n    reveal: { type: Boolean, reflect: true },\r\n    readonly: { type: Boolean, reflect: true },\r\n    required: { type: Boolean, reflect: true },\r\n\r\n    invalidMessage: {reflect: true, attribute: 'invalid-message' },\r\n\r\n    cellField: { attribute: 'cell-field' },\r\n    cellLabel: { attribute: 'cell-label' },\r\n    cssLabel: { attribute: 'css-label' },\r\n    cssField: { attribute: 'css-field' },\r\n\r\n    block: { type: Boolean },\r\n    beep: { type: Boolean },\r\n    timeout: { type: Number }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #inputRef = createRef();\r\n  #ouptutRef = createRef();\r\n  #patterns = [];\r\n  #options = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.#validateAllowed();\r\n    this.dynamicStyle(this.#styleID);\r\n    this.rows = 0;\r\n    this.cols = 0;\r\n    this.type = 'text';\r\n    this.placement = 'top';\r\n    this.layout = 'horizontal';\r\n    this.invalidMessage = 'Invalid input',\r\n    this.icon = GSFormGroupElement.ICON;\r\n    this.cssLabel = GSFormGroupElement.CSS_LABEL;\r\n    this.cellLabel = GSFormGroupElement.CSS_LABEL_CELL;\r\n  }\r\n  \r\n  connectedCallback() {\r\n    const me = this;\r\n    const form = me.formComponent;\r\n    me.layout = GSAttr.get(form, 'layout', me.layout);\r\n\r\n    if (!me.form && form) me.form = form.name;\r\n\r\n    if (me.selectable) {\r\n      me.#options = GSItem.proxify(me, GSFormGroupElement.#SELECTOPT);\r\n    } else {\r\n      me.#patterns = GSItem.collect(me)\r\n      .filter(el => el.dataset.pattern)\r\n      .map(el => new RegExp(el.dataset.pattern));\r\n    }      \r\n    super.connectedCallback();\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    me.#onRange();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    switch (me.layout) {\r\n      case 'floating': return me.#renderFloating();\r\n      case 'vertical': return me.#renderVertical();\r\n      default: return me.#renderHorizontal();\r\n    }\r\n  }\r\n\r\n\r\n  #renderFloating() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n       <div class=\"form-floating ${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n          ${me.#renderLabel()}\r\n       </div>\r\n       ${me.#renderInfo()}\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n      <div class=\"col-12 text-md-start ${me.cellLabel}\">\r\n          ${me.#renderLabel()}\r\n      </div>\r\n       <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n       </div>\r\n       ${me.#renderInfo()}   \r\n    </div>      \r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row form-group ${classMap(me.renderClass())}\">    \r\n       <slot name=\"header\"></slot>\r\n       ${me.#renderLabelWrap()}\r\n       ${me.#renderField()}\r\n       ${me.#renderInfo()}\r\n       <slot name=\"footer\"></slot>\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderLabel() {\r\n    const me = this;\r\n    return html`<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.translate(me.label)}</label>`;\r\n  }\r\n\r\n  #renderLabelWrap() {\r\n    const me = this;\r\n    return html`<div class=\" text-md-end ${me.cellLabel}\">${me.#renderLabel()}</div>`;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.#isIcon ? html`<gs-icon size=\"5\" css=\"${GSFormGroupElement.CSS_ICON}}\" name=\"${me.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderTooltip() {\r\n    const me = this;\r\n    const tgt = me.#isIcon ? '@parent' : `[name='${me.name}']`;\r\n    return me.description ? html`<gs-tooltip local language=\"${ifDefined(me.language)}\" placement=\"${me.placement}\" title=\"${me.description}\" target=${ifDefined(tgt)}></gs-tooltip>` : '';\r\n  }\r\n\r\n  #renderInfo() {\r\n    const me = this;\r\n    const tooltip = me.#renderTooltip();\r\n    if (tooltip && me.#isIcon) return html`\r\n    <div class=\"col-auto\">\r\n       ${tooltip}\r\n       ${me.#renderIcon()}\r\n    </div>`;\r\n    return tooltip;\r\n  }\r\n\r\n  #renderField() {\r\n    const me = this;\r\n    return html`\r\n    <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n       <slot name=\"body\">${me.#renderInput()}${me.#renderOutput()}</slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderOutput() {\r\n    const me = this;\r\n    if (!me.isRange) return \"\";\r\n    return html`<span ${ref(me.#ouptutRef)} class=\"position-absolute px-1\">${me.value}</span>`;\r\n  }\r\n\r\n  #renderInput() {\r\n\r\n    const me = this;\r\n\r\n    const idattr = me.autoid ? me.name : undefined;\r\n    const val = me.isFieldset ? me.value.split(',') : me.value;\r\n\r\n    if (Array.isArray(val)) {\r\n      const wrap = me.dataset.radioLayout === 'vertical';\r\n      return val.map((it, i) => { return { v: it, id: `${me.name}_${i}` } })\r\n        .map((o, i) => me.#fieldSet(me.name + i, o.v, me.#inputHTML(o.id, me.name, o.v), wrap));\r\n    }\r\n\r\n    if (me.selectable) return me.#selectHTML(idattr, me.name, me.value);\r\n\r\n    if (me.#isTextArea) return me.#textArea(idattr, me.name, me.value);\r\n\r\n    return me.#inputHTML(idattr, me.name, me.value);\r\n  }\r\n\r\n  #fieldSet(id, val, fld, vertical = false) {\r\n    const me = this;\r\n    return vertical ?\r\n      html`<div class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></div>`\r\n      :\r\n      html`<span class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></span>`;\r\n  }\r\n\r\n  #initStyle() {\r\n    const me = this;\r\n    const style = {\r\n      transform: me.reverse && me.isRange ? 'rotateY(180deg)' : ''\r\n    }\r\n    me.dynamicStyle(me.#styleID, style);    \r\n  }\r\n\r\n  #renderOptions() {\r\n    const me = this;\r\n    return me.#options.map( el => html`<option value=\"${el.value}\" ?selected=${el.selected}>${el.name || el.innerText || el.value }</option>`);\r\n  }\r\n\r\n  #selectHTML(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n\r\n    return html`<select ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n        \r\n            name=\"${name}\"             \r\n            form=\"${ifDefined(me.form)}\"\r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\">\r\n            ${me.#renderOptions()}\r\n            </select>`;\r\n  }\r\n\r\n  get #isTextArea() {\r\n    const me = this;\r\n    return (me.rows > 0 || me.cols > 0) && me.type === 'text';\r\n  }\r\n\r\n  get #listHTML() {\r\n    const me = this;\r\n    let list = '';\r\n    if (me.list) {\r\n      const root = me.parentComponent || me.parentElement;\r\n      const el = GSDOM.query(root, `datalist[id=\"${me.list}\"]`, true);\r\n      if (el) list = html`${unsafeHTML(el.outerHTML)}`;\r\n    }\r\n    return list;\r\n  }\r\n\r\n  get #isBlock() {\r\n    return this.block || this.formComponent?.block || false;\r\n  }\r\n\r\n  get #isBeep() {\r\n    return this.beep || this.formComponent?.beep || false;\r\n  }\r\n  \r\n  #timeout() {\r\n    return this.timeout || this.formComponent?.timeout || 0;\r\n  }\r\n\r\n  #textArea(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder, false) : null;\r\n    const title = me.title ? me.translate(me.title, false) : null;\r\n\r\n    return html`<textarea  is=\"gs-ext-text\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)}\r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @invalid=\"${me.#onInvalid.bind(me)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n            cols=\"${me.cols}\"\r\n            rows=\"${me.rows}\"\r\n\r\n            ?block=\"${me.#isBlock}\"\r\n            ?beep=\"${me.#isBeep}\"\r\n            timeout=\"${me.#timeout()}\"\r\n\r\n            spellcheck=\"${ifDefined(me.spellcheck)}\" \r\n            wrap=\"${ifDefined(me.wrap)}\" \r\n            form=\"${ifDefined(me.form)}\" \r\n            name=\"${name}\" \r\n            value=\"${ifDefined(value)}\"\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            title=\"${ifDefined(title)}\"\r\n    \r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus}\"            \r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"      \r\n      ></textarea>`;\r\n  }\r\n\r\n  #inputHTML(id, name, value) {\r\n    const me = this;\r\n    const type = me.isSwitch ? 'checkbox' : me.type;\r\n    let title = me.isRange ? me.value : me.title;\r\n    title = title ? me.translate(me.title, false) : title;\r\n\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder, false) : null;\r\n    const description = me.description ? me.translate(me.description, false) : null;\r\n    \r\n    me.#initStyle();\r\n\r\n    return html`<input is=\"gs-ext-input\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @invalid=\"${me.#onInvalid.bind(me)}\"\r\n        \r\n            name=\"${name}\" \r\n            type=\"${type}\" \r\n            form=\"${ifDefined(me.form)}\"\r\n            value=\"${ifDefined(value)}\"\r\n            title=\"${ifDefined(title)}\"\r\n\r\n            ?block=\"${me.#isBlock}\"\r\n            ?beep=\"${me.#isBeep}\"\r\n            timeout=\"${me.#timeout()}\"\r\n\r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            description=\"${ifDefined(description)}\"\r\n\r\n            .multipattern=\"${ifDefined(me.#patterns)}\"\r\n            mask=\"${ifDefined(me.mask)}\"\r\n            pattern=\"${ifDefined(me.pattern)}\"\r\n            list=\"${ifDefined(me.list)}\"\r\n            accept=\"${ifDefined(me.accept)}\"\r\n             \r\n            step=\"${ifDefined(me.step)}\"\r\n            min=\"${ifDefined(me.min)}\"\r\n            max=\"${ifDefined(me.max)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?multiple=\"${me.multiple}\"\r\n            ?checked=\"${me.checked}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"\r\n            ?reveal=\"${me.reveal}\"\r\n            >${me.#listHTML}`;\r\n  }\r\n\r\n  get #cssField() {\r\n    const me = this;\r\n    if (me.selectable) return 'form-select ms-0';\r\n    if (me.isCheckable) return 'form-check-input ms-0';\r\n    if (me.isRange) return 'form-range';\r\n    return 'form-control';\r\n  }\r\n\r\n  get #cssLabel() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-label';\r\n    if (me.isFloating) return 'ms-2';\r\n    return me.isVertical ? 'form-label' : '';\r\n  }\r\n\r\n  get #cssCheck() {\r\n    const me = this;\r\n    if (me.isCheckable) {\r\n      //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      if (me.isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n      return me.isFieldset ? '' : 'form-check';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get #cellField() {\r\n    const me = this;\r\n    const val = (me.isHorizontal) ? '6' : '11';\r\n    return me.cellField || `col-md-${val} col-sm-${val} col-xs-11`;\r\n  }\r\n\r\n  get #isIcon() {\r\n    return GSUtil.isStringNonEmpty(this.icon);\r\n  }\r\n\r\n  #onRange(e) { \r\n    this.emit('input', e);\r\n  }\r\n\r\n  #onBlur(e) {\r\n    this.emit('blur', e, true, true);\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if (me.isRange) me.value = e.target?.value;\r\n    me.emit('change', e, true, true);\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    this.emit('invalid', e, true, true);\r\n  }\r\n\r\n  #validateAllowed() {\r\n    const me = this;\r\n    const slots = ['header', 'body', 'footer'];\r\n    let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n    if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n    list = Array.from(me.children).filter(el => !el.slot);\r\n    const tagList = ['GS-ITEM', 'DATALIST'];\r\n    const allowed = GSDOM.isAllowed(list, tagList);\r\n    if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n  translate(value = '', sanitize) {\r\n    value = super.translate(value);\r\n    return sanitize? GSUtil.sanitize(value) : value;\r\n  }\r\n\r\n  get isFloating() {\r\n    return this.layout === 'floating';\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.layout === 'horizontal';\r\n  }\r\n\r\n  get isVertical() {\r\n    return this.layout === 'vertical';\r\n  }\r\n\r\n  get isFieldset() {\r\n    const me = this;\r\n    return me.type === 'radio' && me.value?.includes(',');\r\n  }\r\n\r\n  get isCheckable() {\r\n    const me = this;\r\n    return me.isCheck || me.isRadio || me.isSwitch;\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.field?.checked;\r\n  }\r\n\r\n  get isCheck() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get isRadio() {\r\n    return this.type === 'radio';\r\n  }\r\n\r\n  get isSwitch() {\r\n    return this.type === 'switch';\r\n  }\r\n\r\n  get isNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  get isRange() {\r\n    return this.type === 'range';\r\n  }\r\n\r\n  get isText() {\r\n    return this.type === 'text';\r\n  }\r\n\r\n  get isPassword() {\r\n    return this.type === 'passsword';\r\n  }\r\n\r\n  get isEmail() {\r\n    return this.type === 'email';\r\n  }\r\n\r\n  get isURL() {\r\n    return this.type === 'url';\r\n  }\r\n\r\n  get isFile() {\r\n    return this.type === 'file';\r\n  }\r\n\r\n  get field() {\r\n    return this.#inputRef.value;\r\n  }\r\n\r\n  get formComponent() {\r\n    return GSDOM.closest(this, 'gs-form');\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref, repeat } from '../lib.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSFormGroupElement } from './FormGroup.mjs';\r\n\r\n// TODO: Make generic JSON to template generator, \r\n// then create string template and apply it to the lit html function.\r\n// Use all properties exstractor from super components and use type definition for bool proeprties.\r\n// Use xtype(#tagName) to define component type and use it to create component instance.\r\n\r\n/**\r\n * Component is responsible for auto-building gs-form and gs-form-group elements\r\n * from either JSON data or GS-ITEM elements.\r\n */\r\nexport class GSFormPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.#proxify;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const data = me.data || {};\r\n    const items = me.data?.items || [];\r\n    return html`<gs-form ${ref(me.#formRef)}\r\n\r\n      .storage=\"${ifDefined(data.storage)}\" \r\n      ?disabled=${ifDefined(data.disabled)}.\r\n      .data=\"${ifDefined(data.data)}\"\r\n      \r\n      .name=\"${ifDefined(data.name)}\"\r\n      .rel=\"${ifDefined(data.rel)}\"\r\n      .acceptCharset=\"${ifDefined(data.acceptCharset)}\"\r\n      .autocapitalize=\"${ifDefined(data.autocapitalize)}\"\r\n      .autocomplete=\"${ifDefined(data.autocomplete)}\"\r\n\r\n      .action=\"${ifDefined(data.action)}\"\r\n      .enctype=\"${ifDefined(data.enctype)}\"\r\n      .method=\"${ifDefined(data.method)}\"\r\n      ?novalidate=\"${ifDefined(data.novalidate)}\"\r\n      .target=\"${ifDefined(data.target)}\"\r\n\r\n      ?block=\"${ifDefined(data.block)}\"\r\n      ?beep=\"${ifDefined(data.beep)}\"\r\n      .timeout=\"${ifDefined(data.timeout)}\"\r\n\r\n      ?flat=\"${ifDefined(data.flat)}\"\r\n      ?rtl=\"${ifDefined(data.rtl)}\"\r\n      ?hide=\"${ifDefined(data.hide)}\"\r\n      ?padding=\"${ifDefined(data.padding)}\"\r\n      ?margin=\"${ifDefined(data.margin)}\"\r\n      ?rounded=\"${ifDefined(data.rounded)}\"\r\n      ?bordered=\"${ifDefined(data.bordered)}\"\r\n      ?shadow=\"${ifDefined(data.shadow)}\"\r\n      ?keep=\"${ifDefined(data.keep)}\"\r\n      .css=\"${ifDefined(data.css)}\"\r\n      .theme=\"${ifDefined(data.theme)}\"\r\n      .os=\"${ifDefined(data.os)}\"\r\n      .browser=\"${ifDefined(data.browser)}\"\r\n      .language=\"${ifDefined(data.language)}\"\r\n      .environment=\"${ifDefined(data.environment)}\"\r\n      .orientation=\"${ifDefined(data.orientation)}\"\r\n      .protocol=\"${ifDefined(data.protocol)}\"\r\n      .template=\"${ifDefined(data.template)}\"      \r\n      >\r\n      <slot>\r\n        ${repeat(items, (item) => me.#renderFormGroup(me.data, item))}\r\n      </slot>\r\n    </gs-form>`;\r\n  }\r\n\r\n  #renderFormGroup(definition, item) {\r\n    return html`<gs-form-group \r\n      .icon=\"${ifDefined(item.icon)}\"\r\n      .layout=\"${ifDefined(item.layout)}\"\r\n      .placement=\"${ifDefined(item.placement)}\"\r\n\r\n      .label=\"${ifDefined(item.label)}\"\r\n      .description=\"${ifDefined(item.description)}\"\r\n      .placeholder=\"${ifDefined(item.placeholder)}\"\r\n      \r\n      .pattern=\"${ifDefined(item.pattern)}\"\r\n      .mask=\"${ifDefined(item.mask)}\"\r\n\r\n      .form=\"${ifDefined(item.form)}\"\r\n      .formaction=\"${ifDefined(item.formaction)}\"\r\n      .formenctype=\"${ifDefined(item.formenctype)}\"\r\n      .formmethod=\"${ifDefined(item.formmethod)}\"\r\n      .formnovalidate=\"${ifDefined(item.formnovalidate)}\"\r\n      .formtarget=\"${ifDefined(item.formtarget)}\"\r\n      .wrap=\"${ifDefined(item.wrap)}\"\r\n      .spellcheck=\"${ifDefined(item.spellcheck)}\"\r\n\r\n      .type=\"${ifDefined(item.type)}\"\r\n      .name=\"${ifDefined(item.name)}\"\r\n      .list=\"${ifDefined(item.list)}\"\r\n      .accept=\"${ifDefined(item.accept)}\"\r\n      .value=\"${ifDefined(item.value)}\"\r\n      \r\n      .lang=\"${ifDefined(item.lang)}\"\r\n      .title=\"${ifDefined(item.title)}\"\r\n      .cols=\"${ifDefined(item.cols)}\"\r\n      .rows=\"${ifDefined(item.rows)}\"\r\n      .step=\"${ifDefined(item.step)}\"\r\n      .min=\"${ifDefined(item.min)}\"\r\n      .max=\"${ifDefined(item.max)}\"\r\n      .maxlength=\"${ifDefined(item.maxlength)}\"\r\n      .minlength=\"${ifDefined(item.minlength)}\"\r\n\r\n      ?reverse=\"${ifDefined(item.reverse)}\"\r\n      ?selectable=\"${ifDefined(item.selectable)}\"\r\n\r\n      ?autoid=\"${ifDefined(item.autoid)}\"\r\n      ?autocopy=\"${ifDefined(item.autocopy)}\"\r\n      ?autoselect=\"${ifDefined(item.autoselect)}\"\r\n\r\n      .autocapitalize=\"${ifDefined(item.autocapitalize)}\"\r\n      .autocorrect=\"${ifDefined(item.autocorrect)}\"\r\n      .autocomplete=\"${ifDefined(item.autocomplete)}\"\r\n\r\n      ?autofocus=\"${ifDefined(item.autofocus)}\"\r\n      ?autoselect=\"${ifDefined(item.autoselect)}\"\r\n\r\n      ?disabled=\"${ifDefined(item.disabled)}\"\r\n      ?checked=\"${ifDefined(item.checked)}\"\r\n      ?multiple=\"${ifDefined(item.multiple)}\"\r\n      ?reveal=\"${ifDefined(item.reveal)}\"\r\n      ?readonly=\"${ifDefined(item.readonly)}\"\r\n      ?required=\"${ifDefined(item.required)}\"\r\n\r\n      .invalidMessage=\"${ifDefined(item.invalidMessage)}\"  \r\n      \r\n      ?block=\"${ifDefined(item.block || definition.block)}\"\r\n      ?beep=\"${ifDefined(item.beep || definition.beep)}\"\r\n      ?timeout=\"${ifDefined(item.timeout || definition.timeout)}\"\r\n\r\n      ?flat=\"${ifDefined(item.flat)}\"\r\n      ?rtl=\"${ifDefined(item.rtl)}\"\r\n      ?hide=\"${ifDefined(item.hide)}\"\r\n      ?padding=\"${ifDefined(item.padding)}\"\r\n      ?margin=\"${ifDefined(item.margin)}\"\r\n      ?rounded=\"${ifDefined(item.rounded)}\"\r\n      ?bordered=\"${ifDefined(item.bordered)}\"\r\n      ?shadow=\"${ifDefined(item.shadow)}\"\r\n      ?keep=\"${ifDefined(item.keep)}\"\r\n      .css=\"${ifDefined(item.css)}\"\r\n      .theme=\"${ifDefined(item.theme)}\"\r\n      .os=\"${ifDefined(item.os)}\"\r\n      .browser=\"${ifDefined(item.browser)}\"\r\n      .language=\"${ifDefined(item.language || definition.language)}\"\r\n      .environment=\"${ifDefined(item.environment)}\"\r\n      .orientation=\"${ifDefined(item.orientation)}\"\r\n      .protocol=\"${ifDefined(item.protocol)}\"\r\n      .template=\"${ifDefined(item.template)}\">\r\n      </gs-form-group>`;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  get #proxify() {\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, GSFormGroupElement.properties));\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGroupElement class\r\n * @module components/GSGroupElement\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSAttributeHandler } from '../base/GSAttributeHandler.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { ElementNavigationController } from '../controllers/ElementNavigationController.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { classMap, createRef, html, render, ifDefined, ref } from '../lib.mjs';\r\n\r\n/**\r\n * Renderer for grouped elements such as Buttons, Navs, Tabs and lists.\r\n * Components handles grouped elements navigation, selection and focus.\r\n * \r\n * @class\r\n * @extends { GSElement }\r\n */\r\nexport class GSGroupElement extends GSElement {\r\n\r\n  static properties = {\r\n    // multiple lists with single select across \r\n    group : {},\r\n    storage: {},    \r\n    circular: { type: Boolean },\r\n    multiple: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #elRef = createRef();\r\n  #controller;\r\n  #controllerGroup;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.data = me.initData();\r\n    me.#controller = new ElementNavigationController(me);\r\n    me.#controllerGroup = new GroupController(me);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    // allow single setting at the container component to apply to the child\r\n    Array.from(me.children).forEach(it => {\r\n      GSAttributeHandler.clone(me, it, false);\r\n    });\r\n  }  \r\n\r\n\r\n  #prerender() {\r\n    const me = this;\r\n    me.queryAll('[generated]').forEach(el => el.remove());\r\n    if (me.data.length > 0) {\r\n      const items = me.renderItems();\r\n      const tpl = document.createElement('template');\r\n      render(items, tpl);\r\n      Array.of(...tpl.children).forEach(el => GSDOM.appendChild(me, el));\r\n    }\r\n  }\r\n  \r\n  firstUpdated(changed) {\r\n    const me = this;\r\n    me.#controller.init();\r\n    me.#controller.attach(me.#elRef.value);\r\n    super.firstUpdated(changed);\r\n    //me.#prerender();\r\n  }  \r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.#prerender();\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      ${me.renderWrappedUI()}\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedUI(name) {\r\n    const me = this;\r\n    return html`<div \r\n      class=\"${classMap(me.renderWrappedClass())}\">\r\n      <slot name=\"${ifDefined(name)}\"></slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    return {};\r\n  }\r\n\r\n  renderItems() {\r\n    return '';\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSItem);\r\n  }\r\n\r\n  previous() {\r\n    this.#controller.previous();\r\n  }\r\n\r\n  next() {\r\n    this.#controller.next();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    this.#controller.reset();\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  isNavigable(el) {\r\n    return el?.tagName === this.childTagName;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onBusEvent(e) {\r\n    let owner, item;  \r\n    ({owner, item} = e.detail);\r\n    if (owner != this) {\r\n      if (!item?.disabled || owner?.selectable) {\r\n        this.reset();\r\n      }\r\n    }\r\n  }\r\n  \r\n  onSelected(el) {\r\n    this.#controllerGroup.notify(el);\r\n  }\r\n\r\n  get focused() {\r\n    return this.#controller.focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#controller.selected;\r\n  }\r\n\r\n  get childTagName() {\r\n    return '';\r\n  }\r\n    \r\n  get items() {\r\n    const me = this;\r\n    return me.queryAll(me.childTagName);\r\n  }\r\n\r\n  get generated() {\r\n    const me = this;\r\n    return this.queryAll(`${me.childTagName}[generated]`);\r\n  }\r\n\r\n  get active() {\r\n    const me = this;\r\n    if (me.multiple) return me.queryAll(`${me.childTagName}[active]`);\r\n    return me.query(`${me.childTagName}[active]`);\r\n  }\r\n\r\n  settings(el) {\r\n    const tagName = customElements.getName(el)?.toUpperCase() || 'GS-ITEM';\r\n    const cfg = GSElement.allProperties(el);\r\n    const items = Array.from(this.children).filter(e => e.tagName === tagName ).map(el => GSAttr.proxify(el, cfg));\r\n    const active = items.filter(el => el.active);\r\n    active.forEach((el, idx) => el.active = idx === 0);\r\n    return items;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-group');\r\n  }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGT0 } from '../properties/index.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSIconElement extends GSElement {\r\n\r\n  static styles = css`\r\n    :host {\r\n      --gs-icon-super-color : cornflowerblue;\r\n      --gs-icon-content : '';\r\n    }\r\n    i::after {\r\n      top: -8px;\r\n      font-size: 0.7em;\r\n      position: relative;\r\n      content: var(--gs-icon-content);\r\n      content: attr(data-super);\r\n      color: var(--gs-icon-super-color);\r\n    }`;\r\n\r\n  static properties = {\r\n    name: { reflect: true, hasChanged: notEmpty },\r\n    size: { reflect: true, type: Number, hasChanged: numGT0 },\r\n    color: { reflect: true, ...color },\r\n    superColor: { attribute : 'super-color'},\r\n    super: { reflect: true },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    _clicked: { attribute:false},\r\n    _hovered: { attribute:false},\r\n  }\r\n\r\n  #ref = createRef();\r\n  \r\n  constructor() {\r\n    super();\r\n    //this.flat = true;\r\n  }\r\n\r\n  /*\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    this.#embdeded = GSDOM.matches(this.parentComponent, '[icon]');\r\n  }\r\n  */\r\n\r\n  updated(changed) {\r\n    if (changed.has('_clicked')) {\r\n      if (this._clicked) this.#postAnimate();\r\n    } \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.setCSSProperty(':host', '--gs-icon-super-color', me.superColor);\r\n    return html`<i  ${ref(me.#ref)}\r\n       class=\"bi ${classMap(me.renderClass())}\"\r\n       data-super=\"${ifDefined(me.super)}\"\r\n       @click=\"${me.animate}\"\r\n       @mouseover=\"${me.#onMouseOver}\"\r\n       @mouseout=\"${me.#onMouseOut}\"></i>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      [`text-${me.color}`]: me.color,\r\n      [`bi-${me.name}`]: me.name,\r\n      'fs': me.size > 0,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.clickCss]: me._clicked,\r\n      [me.hoverCss]: me._hovered,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  async #postAnimate() {\r\n    const me = this;\r\n    const delay = GSUtil.asNum(me.dataset.delay, 1);\r\n    if (delay > 0) {\r\n      await GSUtil.timeout(delay * 1000);\r\n      me._clicked = false;\r\n    }    \r\n  }\r\n\r\n  #onMouseOver(e) {\r\n    this.hover(true);\r\n  }\r\n\r\n  #onMouseOut(e) {\r\n    this.hover(false);\r\n  }\r\n\r\n  animate() {\r\n    const me = this;\r\n    me._hovered = false;\r\n    me._clicked = true;\r\n  }\r\n\r\n  hover(sts = false) {\r\n    const me = this;\r\n    if (sts) {\r\n      me._clicked = false;\r\n    }\r\n    me._hovered = sts;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-icon');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/index.mjs';\r\n\r\nexport class GSIndentElement extends GSElement {\r\n\r\n  static styles = css`.indent {\r\n      --gs-indent : 10px;\r\n      margin-left: var(--gs-indent);\r\n      margin-right: var(--gs-indent);\r\n    }`;\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    size: { type: Number, hasChanged: numGT0 },\r\n    multiplier: { type: Number, hasChanged: numGT0 }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.size = 1;\r\n    me.multiplier = 10;\r\n  }\r\n\r\n  renderUI() {\r\n    const size = this.size * this.multiplier;\r\n    return html`<span class=\"indent\" style=\"--gs-indent: ${size}px;\"></span>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-indent');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nconst numdef = { reflect: true, type: Number, hasChanged: numGE0 };\r\n\r\nexport class GSImageElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { hasChanged: notEmpty },\r\n    width: numdef,\r\n    height: numdef,\r\n    opacity: numdef,\r\n    invert: numdef,\r\n    grayscale: numdef,\r\n    brightness: numdef,\r\n    blur: numdef,\r\n    contrast: numdef,\r\n    saturate: numdef,\r\n    hue: numdef,\r\n    sepia: numdef,\r\n\r\n    alt: {},\r\n    loading: {}\r\n\r\n  }\r\n\r\n  #imageRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    this.#update();\r\n    return this.src;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<img ${ref(me.#imageRef)} \r\n            @load=\"${me.#onLoad}\"\r\n            src=\"${me.src}\" \r\n            alt=\"${me.alt}\" \r\n            loading=\"${ifDefined(me.loading)}\" \r\n            class=\"${me.#styleID}\" \r\n            data-gs-class=\"${me.#styleID}\">\r\n          </img>`;\r\n  }\r\n\r\n  get complete() {\r\n    return this.#imageRef.value?.complete || false;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  #renderStyle() {\r\n    const me = this;\r\n    const filter = me.#buildFilter();\r\n    const css = {\r\n      width: me.width > 0 ? me.width : undefined,\r\n      height: me.height > 0 ? me.height : undefined,\r\n      filter: filter.length > 0 ? filter.join(' ') : ''\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #buildFilter() {\r\n    const me = this;\r\n    const o = [];\r\n\r\n    if (me.blur > 0) o.push(`blur(${me.blur}px)`);\r\n    if (me.invert > 0) o.push(`invert(${me.invert})`);\r\n    if (me.opacity > 0) o.push(`opacity(${me.opacity})`);\r\n    if (me.contrast > 0) o.push(`contrast(${me.contrast})`);\r\n    if (me.grayscale > 0) o.push(`grayscale(${me.grayscale})`);\r\n    if (me.brightness > 0) o.push(`brightness(${me.brightness})`);\r\n\r\n    if (me.hue > 0) o.push(`hue-rotate(${me.hue}deg)`);\r\n    if (me.sepia > 0) o.push(`sepia(${me.sepia}%)`);\r\n    if (me.saturate > 0) o.push(`saturate(${me.saturate}%)`);\r\n\r\n    return o;\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.filter = me.#buildFilter().join(' ').trim();\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const el = e.target;\r\n    const me = this;\r\n    if (el) {\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n      me.emit('loaded', { width: el.width, height: el.height, element: el }, true);\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-image');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayoutElement\r\n */\r\n\r\nimport { classMap, html, ifDefined, templateContent } from '../lib.mjs';\r\nimport { orientation, OrientationTypes } from '../properties/orientation.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSLayoutElement extends GSElement {\r\n\r\n    static properties = {\r\n        type: { ...orientation }\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        id : {},\r\n        type: {},\r\n        min: { type: Number },\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        resizable: { type: Boolean },\r\n        autofit: { type: Boolean },\r\n        vPos: { attribute: 'h-pos' },\r\n        hPos: { attribute: 'v-pos' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.autofit = true;  \r\n        me.#items(me).map((el, idx, els) => me.#dyncss(el, idx, els, 0));\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if ( this.autofit && GSDOM.root(this) === document.body) document.body.classList.add('vh-100');\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const list = me.#items(me).map((el, idx, els) => me.#build(el, idx, els));\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"d-flex flex-fill w-100 h-100 ${classMap(me.renderClass())}\">${list}</div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const horizontal = OrientationTypes.isHorizontal(me.type);\r\n        return {\r\n            ...super.renderClass(),\r\n            'flex-column': horizontal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #items(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSLayoutElement.options));\r\n    }\r\n\r\n    #resizable(el) {\r\n        return el.size > 0 || el.min > 0 || el.max > 0 || el.resizable;\r\n    }\r\n\r\n    #dyncss(el, idx, els, lev = 0) {\r\n        const me = this;\r\n        me.#items(el.self).map((it, idx, items) => me.#dyncss(it, idx, items, lev+1));\r\n        if(me.#resizable(el)) me.dynamicStyle(`gsd-${lev}-${idx}`);\r\n    }\r\n\r\n    #build(el, idx, els, lev = 0) {\r\n\r\n        const me = this;\r\n        const type = el.self.parentElement.type || 'vertical';\r\n\r\n        const list = me.#items(el.self).map((it, idx, items) => me.#build(it, idx, items, lev+1));\r\n        \r\n        const min = el.min;\r\n        const max = el.max;\r\n        const template = el.template;\r\n        const tplEl = me.#elementTemplate(el);\r\n\r\n        const tc = `#${tplEl?.id}` !== template;\r\n\r\n        const dir = el.type || type || 'vertical';\r\n        const horizontal = OrientationTypes.isHorizontal(dir);\r\n        \r\n        const col = list.length > 0 && horizontal ? 'flex-column' : '';\r\n\r\n        const did = `gsd-${lev}-${idx}`;\r\n        const css = me.#panelCSS(el, col, did);\r\n        const style = me.#panelStyle(el, horizontal);\r\n        me.dynamicStyle(did, style);\r\n\r\n        const slot = el.name ? html`<slot name=\"${el.name}\"></slot>` : '';\r\n        const src = html`<div id=\"${ifDefined(el.id)}\" class=\"d-flex ${classMap(css)}\">\r\n            ${list}\r\n            ${templateContent(tplEl)}\r\n            ${template && tc ? html`<gs-template flat src=\"${template}\"></gs-template>` : ''}\r\n            ${slot}\r\n            </div>`;\r\n\r\n        if (!el.resizable) return src;\r\n\r\n        const resize = (idx === els.length - 1) ? 'end' : 'start';\r\n        const splitter = me.#splitter(min, max, type, resize);\r\n\r\n        if (idx === els.length - 1) return [splitter , src];\r\n        return [src, splitter];\r\n    }\r\n    \r\n    #elementTemplate(el) {\r\n        const tplEl = el.self.firstElementChild;\r\n        return tplEl instanceof HTMLTemplateElement ? tplEl : undefined;\r\n    }\r\n\r\n    #panelCSS(el, col, did) {\r\n\r\n        const resizable = this.#resizable(el);\r\n        const grow = resizable ? '' : 'flex-grow-1';\r\n\r\n        let vpos = el.vPos;\r\n        let hpos = el.hPos;\r\n\r\n        hpos = hpos ? `align-items-${hpos}` : '';\r\n        vpos = vpos ? `justify-content-${vpos}` : '';\r\n\r\n        const css = this.mapCSS(el.css, {\r\n            [did] : resizable,\r\n            [col] : col,\r\n            [grow] : grow,\r\n            [hpos] : hpos,\r\n            [vpos] : vpos\r\n        });\r\n    \r\n        return css;        \r\n    }\r\n\r\n    #panelStyle(el, horizontal) {\r\n        const min = el.size || el.min;\r\n        const max = el.max || el.size;\r\n        const style = {};\r\n        if (horizontal) {\r\n            style['min-height'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-height'] = max > 0 ? `${max}px` : undefined;\r\n        } else {\r\n            style['min-width'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-width'] = max > 0 ? `${max}px` : undefined;\r\n        }\r\n        return style;        \r\n    }\r\n\r\n    #splitter(min, max, dir, resize) {\r\n        return html`<gs-splitter split=\"${dir}\" resize=\"${resize}\" min=\"${min}\" max=\"${max}\"></gs-splitter>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-layout');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSLinklement extends GSElement {\r\n\r\n  static properties = {\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    size: { type: Number },\r\n    text: { ...color },\r\n    color: { ...color },\r\n    url: {},\r\n    ping: {},\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    target: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.url = '#';\r\n    // this.text = 'primary'; // do not set as default -> gs-dropdown\r\n    // this.target = '_blank'; // not used \r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n      <a ${ref(me.#refEl)}  \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        title=\"${ifDefined(me.translate(me.tooltip))}\" \r\n        href=\"${ifDefined(me.url)}\" \r\n        ping=\"${ifDefined(me.ping)}\" \r\n        target=\"${ifDefined(me.target)}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        ?disabled=${me.disabled} \r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"        \r\n        @click=\"${me.#onClick}\">\r\n        ${me.#first}${me.#second}\r\n        </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,      \r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [`text-${me.text}`]: me.text,\r\n      [`bg-${me.color}`]: me.color\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.iconEl?.animate();\r\n    me.notify();\r\n    if (me.url === '#' || GSUtil.isStringEmpty(me.url)) {\r\n      GSEvents.prevent(e);\r\n      me.handle(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon css=\"mx-1\" ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    size=\"${this.size}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  /**\r\n   * Generate clickable link\r\n   * @param {*} options \r\n   * @param {*} css \r\n   * @param {*} before \r\n   * @param {*} after \r\n   * @returns \r\n   */\r\n  static generate(options, css, before, after) {\r\n    const opt = options;\r\n    return html`<a class=\"${classMap(css)}\"\r\n        tabindex=\"0\"    \r\n        ${dataset(opt, true)}\r\n        part=\"${ifDefined(opt.part)}\"\r\n        tooltip=\"${ifDefined(opt.tooltip)}\"\r\n        href=\"${ifDefined(opt.url)}\">        \r\n        ${before || ''}\r\n        ${ifDefined(opt.title)}\r\n        <slot></slot> \r\n        ${after || ''}\r\n    </a>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-link');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\n\r\nexport class GSListElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    selectable: { reflect: true, type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = false;\r\n    this.multiple = false;\r\n    this.selectable = false;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  renderClass() {\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group': true,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    return html`<slot></slot>`;\r\n  }\r\n\r\n  reset() {\r\n    this.items.forEach(el => el.reset());\r\n    this.notify();\r\n  }\r\n\r\n  renderItems() {    \r\n    return this.data.map(o => {\r\n      return html`<gs-list-item generated\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-list-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return super.isNavigable(el) && this.selectable;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-LIST-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSListItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    url: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    size: { type: Number },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true }\r\n  }\r\n\r\n  #initial;\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.binded();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.#initial = this.active;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-LIST';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n        // allow single setting at the gs-list to apply to the child\r\n        // GSAttributeHandler.clone(this.parentComponent, this, false);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<a  tabindex=\"0\" ${ref(me.#refEl)}\r\n       href=\"${ifDefined(me.href)}\" \r\n       target=\"${ifDefined(me.target)}\" \r\n       class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()} \r\n        ${me.#renderSecond()}\r\n        <slot>${me.renderTemplate()}</slot>\r\n      </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.#itemCSS] : true,\r\n      'active': me.active && me.isSelectable()\r\n    }\r\n    return me.mapCSS(me.#itemStatusCSS, css);\r\n  }\r\n\r\n  isSelectable() {\r\n    return !GSUtil.asBool(this.disabled) || GSUtil.asBool(this.parentComponent.selectable);\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.icon ? html`<gs-icon name=\"${me.icon}\" size=\"${me.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderText() {\r\n    return this.title ? html`<span>${this.translate(this.title)}</span>` : html`<slot name=\"title\"></slot>`;\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.rtl ? this.#renderText() : this.#renderIcon();\r\n  }\r\n\r\n  #renderSecond() {\r\n    return this.rtl ? this.#renderIcon() : this.#renderText();\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || this.#initial || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get href() {\r\n    return this.url ? this.url : '#';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #inactiveCSS() {\r\n    return this.parentComponent.dataset?.cssInactive || '';\r\n  }\r\n\r\n  get #itemCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #itemStatusCSS() {\r\n    return this.active && this.isSelectable() ? this.#activeCSS : this.#inactiveCSS;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\n/**\r\n * For debugging purposes for floating element such as popup, popover, menus... \r\n * https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_view/Coordinate_systems\r\n */\r\nexport class GSMouseElement extends GSElement {\r\n\r\n  static properties = {\r\n    pageX: { type: Number },\r\n    pageY: { type: Number },\r\n    screenX: { type: Number },\r\n    screenY: { type: Number },\r\n    clientX: { type: Number },\r\n    clientY: { type: Number },       \r\n    offsetX: { type: Number },       \r\n    offsetY : { type: Number }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.attachEvent(window, 'mousemove', this.#onMouse.bind(this));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    Offset(${me.offsetX}, ${me.offsetY}) \r\n    Viewport(${me.clientX}, ${me.clientY}) \r\n    Page(${me.pageX}, ${me.pageY}) \r\n    Screen(${me.screenX}, ${me.screenY})`;\r\n  }\r\n\r\n  #onMouse(e) {\r\n    const me = this;\r\n    me.offsetX = e.offsetX;\r\n    me.offsetY = e.offsetY;\r\n    me.clientX = e.clientX;\r\n    me.clientY = e.clientY;\r\n    me.pageX = e.pageX;\r\n    me.pageY = e.pageY;\r\n    me.screenX = e.screenX;\r\n    me.screenY = e.screenY;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-mouse');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\n/**\r\n * This component allow moving contained elements acroos UI\r\n */\r\nexport class GSMovableElement extends GSElement {\r\n\r\n  static styles = css`\r\n  :host {\r\n      --gs-width : inherited;\r\n      --gs-height : inherited;\r\n      --gs-min-width: inherited;\r\n      --gs-max-width: inherited;\r\n      --gs-min-height: inherited;\r\n      --gs-max-height: inherited;\r\n  }\r\n  .gs-movable {\r\n    left: var(--mouse-x) !important;\r\n    top: var(--mouse-y) !important;\r\n   }`;\r\n\r\n  static properties = {\r\n    shadow: { type: Boolean},\r\n    border: { type: Boolean},\r\n    color: { reflect: true, ...color }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #refEl = createRef();\r\n  #enabled = false;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    const root = document.documentElement;\r\n    me.attachEvent(root, 'mousemove', me.#onMove.bind(me));\r\n    me.attachEvent(root, 'mousedown', me.#onMouseDown.bind(me));\r\n    me.attachEvent(root, 'mouseup', me.#onMouseUp.bind(me));\r\n  }\r\n\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    Object.assign(rule.style, {cursor: 'move'});\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#refEl)} \r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\"\r\n      @mousedown=\"${() => me.#enabled = true}\"\r\n      @mouseup=\"${() => me.#enabled = false}\">\r\n      <slot></slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'gs-movable' : true,\r\n      [me.#styleID]: true,\r\n      'position-absolute' : true,\r\n      'border' : me.border,\r\n      'shadow-sm' : me.shadow,\r\n      [`text-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #updateCursor(move) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    Object.assign(rule.style, {'user-select': move ? 'none' : ''});\r\n  }\r\n\r\n  #onMove(e) {\r\n    if (this.#enabled) {\r\n      const style = this.#refEl.value.style;\r\n      style?.setProperty('--mouse-x', e.clientX + \"px\");\r\n      style?.setProperty('--mouse-y', e.clientY + \"px\");\r\n    }\r\n  }\r\n\r\n  #onMouseDown(e) {\r\n    this.#updateCursor(true);\r\n  }\r\n\r\n  #onMouseUp(e) {\r\n    this.#updateCursor(false);\r\n  }\r\n\r\n\r\n  static {\r\n    this.define('gs-movable');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { PlacementTypes, nav, placement } from '../properties/index.mjs';\r\n\r\nexport class GSNavElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    type: nav,\r\n    placement: placement,\r\n    vertical: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = true;\r\n    this.multiple = false;\r\n    this.type = 'pills';\r\n    this.placement = 'start';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-nav-item');\r\n  }\r\n  \r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const isBefore = PlacementTypes.isBefore(me.placement);\r\n    const isTab = me.type === 'tabs';\r\n    const css = {\r\n      'nav': true,\r\n      [`nav-${me.type}`]: me.type,\r\n      'flex-column': me.vertical,\r\n      'border-bottom-0': me.vertical,\r\n      'border-end': isTab && isBefore && me.vertical,\r\n      'border-start': isTab && !isBefore && me.vertical,\r\n      [`justify-content-${me.placement}`]: !me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Render items based on data propprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-nav-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-nav-item>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  onFocused(el) {\r\n    // el?.click();\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-NAV-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { NavTypes, PlacementTypes } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSNavItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    disabled: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    active: { type: Boolean, reflect: true },\r\n    tooltip: {} // Add tooltip property\r\n  }\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-NAV';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div class=\"nav-item ${classMap(me.renderClass())}\">${me.#button}</div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    return this.mapCSS(this.#itemsCSS, super.renderClass());\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get isNav() {\r\n    return true;\r\n  }\r\n\r\n  get vertical() {\r\n    return this.parentComponent.vertical || false;\r\n  }\r\n\r\n  get placement() {\r\n    return this.parentComponent.placement;\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #title() {\r\n    return html`<slot>${this.translate(this.title)}</slot>`;\r\n  }\r\n\r\n  get #icon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  get #first() {\r\n    return this.rtl ? this.#title : this.#icon;\r\n  }\r\n\r\n  get #second() {\r\n    return this.rtl ? this.#icon : this.#title;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#buttonCSS, {});\r\n    if (me.active) obj = me.mapCSS(me.#buildCSS + ' ' + me.#activeCSS, obj);\r\n    return html`<a tabindex=\"0\" type=\"button\" role=\"nav\" \r\n     ${ref(me.#refEl)}\r\n     class=\"nav-link ${classMap(obj)}\"\r\n     href=\"${ifDefined(me.url)}\" \r\n     target=\"${ifDefined(me.target)}\"\r\n     title=\"${ifDefined(me.tooltip)}\"> \r\n        ${me.#first} \r\n        ${me.#second}\r\n      </a>`;\r\n  }\r\n\r\n  get #itemsCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #buttonCSS() {\r\n    return this.parentComponent.dataset?.cssButton || '';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #navType() {\r\n    return NavTypes.indexOf(this.parentComponent.type);\r\n  }\r\n\r\n  // fiix for shadowed DOM, parent class=\"nav nav-pills..\" \r\n  // do not cross shadow dom, so item elements does not see CSS\r\n  // we have to simulate\r\n  get #buildCSS() {\r\n    const isVertical = this.vertical;\r\n    const isBefore = PlacementTypes.isBefore(this.placement);\r\n    switch (this.#navType) {\r\n      // pills\r\n      case 1: return 'rounded text-bg-primary';\r\n      // tabs\r\n      case 2:\r\n        if (isVertical) {\r\n          if (isBefore) {\r\n            return 'shadow-none border border-end-0';\r\n          } else {\r\n            return 'shadow-none border border-start-0';\r\n          }\r\n        }\r\n        return 'shadow-none border border-bottom-0';\r\n      // underline\r\n      case 3: return 'shadow-none border-bottom border-3 fw-medium';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { svg, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSOverlayElement extends GSElement {\r\n\r\n    static properties = {\r\n        color: {},\r\n        target: {},\r\n        autoremove: { type: Boolean },\r\n        opened: { type: Boolean },\r\n        opacity: { type: Number },\r\n        padding: { type: Number },\r\n        radius: { type: Number },\r\n    }\r\n\r\n    #styleID = GSID.id;\r\n    #styleID2 = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        //this.color = 'rgb(0,0,0)';\r\n        this.color = '#000';\r\n        this.opacity = 0.7;\r\n        this.padding = 1;\r\n        this.radius = 6;\r\n        this.dynamicStyle(this.#styleID);\r\n        this.dynamicStyle(this.#styleID2);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', () => me.requestUpdate());\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        if (!me.opened) return '';\r\n        const path = me.#path;\r\n        return path ? html`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:space=\"preserve\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\" preserveAspectRatio=\"xMinYMin slice\"\r\n            viewBox=\"0 0 ${window.innerWidth} ${window.innerHeight}\"\r\n            class=\"gs-overlay gs-overlay-animated ${me.#styleID}\"\r\n            @click=\"${me.reset.bind(me)}\">\r\n            ${path}\r\n        </svg>` : '';\r\n    }\r\n\r\n    async firstUpdated(changed) {\r\n        const me = this;\r\n        const opt = {\r\n            fillRule: \"evenodd\",\r\n            clipRule: \"evenodd\",\r\n            strokeLinejoin: \"round\",\r\n            strokeMiterlimit: \"2\",\r\n            zIndex: \"10000\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    get #path() {\r\n        const me = this;\r\n        const el = GSDOM.query(me.target);\r\n        if (!me.target) return '';\r\n        const pathStr = me.#createSVGPathString(el);\r\n        const opt = { fill: me.color, opacity: me.opacity, pointerEvents: 'auto', cursor: 'auto' };\r\n        me.dynamicStyle(me.#styleID2, opt);\r\n        return svg`<path class=\"${me.#styleID2}\"  d=\"${pathStr}\"></path>`;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n\r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n\r\n        const rect = target.getBoundingClientRect();\r\n\r\n        const padding = me.padding;\r\n        const radius = me.radius;\r\n\r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n\r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n\r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n\r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n\r\n        const val = `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n            M${highlightBoxX},${highlightBoxY} \r\n            h${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n            v${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n            h-${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n            v-${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;\r\n        return val.replace(/[\\t\\n]/g, ' ');\r\n    }\r\n\r\n    static {\r\n        this.define('gs-overlay');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, map, range, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { size, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSPagerElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    size: { ...size },\r\n    first: { type: Boolean },\r\n    last: { type: Boolean },\r\n    next: { type: Boolean },\r\n    previous: { type: Boolean },\r\n    pages: { type: Number },\r\n\r\n    labelFirst: { attribute: 'label-first' },\r\n    labelLast: { attribute: 'label-last' },\r\n    labelNext: { attribute: 'label-next' },\r\n    labelPrevious: { attribute: 'label-previous' },\r\n\r\n    cssItem: { attribute: 'css-item' },\r\n\r\n  }\r\n\r\n  #ref = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.pages = 5;\r\n    me.labelFirst = '&laquo;';\r\n    me.labelLast = '&raquo;';\r\n    me.labelNext = '&rsaquo;';\r\n    me.labelPrevious = '&lsaquo;';\r\n    if (me.#isInTable) {\r\n      me.slot = \"extra\";\r\n    }\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const half = Math.floor((me.pages - 1) / 2);\r\n    const page = me.dataController?.page || 0;\r\n    const start = page - half < 1 ? 1 : page - half;\r\n    const end = page > 0 ? page + half : me.pages;\r\n\r\n    return html`<nav \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        @click=\"${me.#onClick}\"\r\n        @keyup=\"${me.#onKeyUp}\"\r\n        @keydown=\"${me.#onKeyDown}\">\r\n        <ul ${ref(me.#ref)} class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()}\r\n        ${me.#renderPrevious()}\r\n        ${map(range(start, end + 1), (i) => me.#renderItem(i, '', '', i  === page))}\r\n        ${me.#renderNext()}\r\n        ${me.#renderLast()}\r\n        </ul></nav>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = me.size ? SizeTypes[me.size] || me.size : '';\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'pagination': true,\r\n      [`pagination-${size}`]: size,\r\n\r\n    }\r\n    return css;\r\n  }\r\n\r\n  updated() {\r\n    const target = this.#ref.value;\r\n    if (target && this.isFocused) {\r\n      target.querySelector('.active > a')?.focus();\r\n    }\r\n  }\r\n\r\n  onDataRead() {\r\n    this.requestUpdate();\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.first ? this.#renderItem(this.labelFirst, 'first', 'First page') : '';\r\n  }\r\n\r\n  #renderLast() {\r\n    return this.last ? this.#renderItem(this.labelLast, 'last', 'Last page') : '';\r\n  }\r\n\r\n  #renderPrevious() {\r\n    return this.previous ? this.#renderItem(this.labelPrevious, 'previous', 'Previous page') : '';\r\n  }\r\n\r\n  #renderNext() {\r\n    return this.next ? this.#renderItem(this.labelNext, 'next', 'Next page') : '';\r\n  }\r\n\r\n  #renderItem(text = '', name = '', title = '', active = false) {\r\n    const me = this;\r\n    text = GSUtil.decodeHTMLEntities(text);\r\n    return html`<li class=\"page-item ${active ? 'active' : ''}\">\r\n              <a class=\"page-link ${this.cssItem}\" \r\n                 name=\"${name}\" \r\n                 title=\"${me.translate(title)}\" \r\n                 href=\"#\">${me.translate(text)}</a>\r\n            </li>`;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const el = this.#toTarget(e, 'a');\r\n    if (!el) return;\r\n\r\n    const ctrl = me.dataController;\r\n    if (!ctrl) return;\r\n\r\n    const val = el.name || el.text;\r\n    me.emit(val, el);\r\n    \r\n    switch (val) {\r\n      case 'first':\r\n        return ctrl.firstPage();\r\n      case 'last':\r\n        return ctrl.lastPage();\r\n      case 'next':\r\n        return ctrl.nextPage();\r\n      case 'previous':\r\n        return ctrl.prevPage();\r\n    }\r\n\r\n    ctrl.page = val;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const current = this.#toTarget(e, 'li');\r\n    let el = null;\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        el = current?.previousElementSibling;\r\n        break;\r\n      case 'ArrowRight':\r\n        el = current?.nextElementSibling;\r\n        break;\r\n    }\r\n    el = el?.querySelector('a');\r\n    el?.focus();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') {\r\n      this.#toTarget(e, 'a')?.click();\r\n    }\r\n  }\r\n\r\n  #toTarget(e, name) {\r\n    const el = e.target.closest(name) || e.target;\r\n    return el.tagName === name.toUpperCase() ? el : undefined;\r\n  }\r\n\r\n  get #isInTable() {\r\n    return this.parentComponent?.tagName === 'GS-TABLE';\r\n  }\r\n  \r\n  static {\r\n    this.define('gs-pagination');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, position } from '../properties/index.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSPopper } from \"../base/GSPopper.mjs\";\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopupElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    position: { ...position },\r\n    trigger: {},\r\n    target: {},\r\n    autoclose: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    opened: { type: Boolean },\r\n    hPos: { type: Number, attribute: 'h-pos' },\r\n    vPos: { type: Number, attribute: 'v-pos' },\r\n    wMin: { type: Number, attribute: 'w-min' },\r\n    wMax: { type: Number, attribute: 'w-max' },\r\n    hMin: { type: Number, attribute: 'h-min' },\r\n    hMax: { type: Number, attribute: 'h-max' },\r\n\r\n  }\r\n\r\n  #caller = null;\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.autofocus = true;\r\n    this.autoclose = true;\r\n    this.trigger = 'click';\r\n    this.position = 'absolute';\r\n    this.placement = 'bottom';\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachTarget(); // Fixed typo: #attachTaraget -> #attachTarget\r\n    me.attachEvent(window, 'resize', me.close.bind(me));\r\n    me.on('mouseleave', me.#onAuto.bind(me));\r\n  }\r\n\r\n  firstUpdated(changedProperties) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#resize();\r\n      me.#reposition();\r\n    });\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#reposition();\r\n    if (me.autofocus) me.focus();\r\n    me.notify();\r\n    me.#postPopup();\r\n  }\r\n\r\n  willUpdate(changedProperties) {\r\n    if (changedProperties.has('opened')) {\r\n      this.#postPopup();\r\n    }\r\n    return super.willUpdate(changedProperties); \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div \r\n      ${ref(me.#panelRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"fade ${classMap(me.renderClass())}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      @keydown=\"${me.#onKeyDown}\">\r\n      ${me.renderTemplate()}\r\n      <slot></slot>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': me.opened,\r\n      //'d-none' : !me.opened,\r\n      [me.#styleID]: true,\r\n      [`position-${me.position}`]: me.position,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  focus() {\r\n    this.query('[tabindex], input, select, textarea, button, a', true)?.focus();\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Show popup at x/y position on the screen\r\n   * @param {Number} x \r\n   * @param {Number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const obj = {\r\n      top: '0px',\r\n      left: '0px',\r\n      translate: `${x}px ${y}px`\r\n    };\r\n    me.#resize(obj);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      case 'Escape':\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    //if (!me.opened) return;\r\n    if (me.vPos || me.hPos) {\r\n      const opt = {\r\n        top: '0px',\r\n        left: '0px',\r\n        translate: `${me.hPos}px ${me.vPos}px`\r\n      };\r\n      const rule = me.dynamicStyle(me.#styleID);\r\n      Object.assign(rule.style, opt);\r\n    } else if (me.target) {\r\n      let target = GSDOM.query(document.documentElement, me.target);\r\n      target = target.renderRoot?.firstElementChild || target;\r\n      GSPopper.popupFixed(me.placement, me.#panel, target);\r\n    }\r\n\r\n  }\r\n\r\n  #resize(obj = {}) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n    if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n    if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n    if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n    Object.assign(rule.style, obj);\r\n  }\r\n\r\n  #onPopup(e) {\r\n    const me = this;\r\n    me.#caller = e;\r\n    if (e instanceof Event) {\r\n      GSEvents.prevent(e);\r\n      me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n    }\r\n\r\n    if (me.placement) {\r\n      GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n      me.opened = true;\r\n      return;\r\n    }\r\n\r\n    let x = e.clientX, y = e.clientY;\r\n    const rect = me.#panel.getBoundingClientRect();\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #postPopup() {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    Object.assign(rule.style, {display: me.opened ? '' : 'none'}); \r\n  }\r\n\r\n  #attachTarget() { // Fixed typo: #attachTaraget -> #attachTarget\r\n    const me = this;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    me.trigger.split(' ').forEach(evt => {\r\n      targets.forEach(target => me.attachEvent(target, evt, me.#onPopup.bind(me)));\r\n    });\r\n  }\r\n\r\n  #onAuto(e) {\r\n    if (this.autoclose) this.close();\r\n  }\r\n\r\n  get #panel() {\r\n    return this.#panelRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-popup');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopoverElement extends GSElement { // Fixed typo: GSPopoverlement -> GSPopoverElement\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    target: {},\r\n    trigger: {},\r\n    title: {},\r\n    content: {},\r\n    opened: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    // added to the GSCacheStyle\r\n    //this.style.position = 'fixed';\r\n    this.placement = 'top';\r\n    this.trigger = 'hover';\r\n    this.content = '';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowID);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n  \r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const head = me.title ? html`<div class=\"popover-header ${me.cssHead}\">${me.translate(me.title)}</div>` : '';\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        data-popper-placement=\"${me.placement}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        data-gs-class=\"${me.#styleID}\" \r\n        role=\"tooltip\">\r\n        <div ${ref(me.#arrowRef)} \r\n          class=\"popover-arrow ${me.#arrowID}\" \r\n          data-gs-class=\"${me.#arrowID}\">\r\n        </div>\r\n        ${head}\r\n        <div class=\"popover-body\">\r\n          ${me.renderTemplate()}\r\n          ${me.content}\r\n          <slot></slot>\r\n        </div>\r\n    </div>            \r\n    `;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'popover': true,\r\n      'bs-popover-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  get isFocusTrigger() {\r\n    return this.trigger.includes('focus');\r\n  }\r\n\r\n  get isHoverTrigger() {\r\n    return this.trigger.includes('hover');\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return GSDOM.query(document.body, me.target);\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const source = me.#panel;\r\n    if (!source) return;\r\n    if (me.opened) {\r\n      GSPopper.popupAbsolute(me.placement, source, me.#ref, me.#arrow);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, {top:'-1000px', left:'-1000px'});\r\n    }\r\n  }\r\n\r\n  // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n  #attachEvents() {\r\n\r\n    const me = this;\r\n    const el = me.#ref;\r\n\r\n    if (me.isHoverTrigger) {\r\n      GSEvents.attach(me, el, 'mouseover', me.open.bind(me));\r\n      GSEvents.attach(me, el, 'mouseleave', me.close.bind(me));\r\n    }\r\n\r\n    if (me.isFocusTrigger) {\r\n      GSEvents.attach(me, el, 'click', me.#onFocus.bind(me));\r\n      GSEvents.attach(me, me.#panel, 'mouseleave', me.close.bind(me));\r\n      GSEvents.attach(me, window, 'click', me.close.bind(me));\r\n    }\r\n\r\n  }\r\n\r\n  #onFocus(e) {\r\n    GSEvents.prevent(e);\r\n    this.toggle();\r\n  }\r\n  \r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-popover');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, classMap, ifDefined } from '../lib.mjs';\r\nimport { literalTemplate } from '../directives/literal.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSProgressElement extends GSElement {\r\n\r\n  static properties = {\r\n    min: { reflect: true, type: Number },\r\n    max: { reflect: true, type: Number },\r\n    step: { reflect: true, type: Number },\r\n    value: { reflect: true, type: Number },\r\n    label: { reflect: true }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.min = 0;\r\n    this.step = 1;\r\n    this.max = 100;\r\n    this.value = 0;\r\n    this.styles = { width: '0%' };\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'progress-bar' : true,\r\n      [me.#styleID] : true\r\n    }\r\n    return css;\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#updateStyle();\r\n    const obj = {min :me.min, max:me.max, step:me.step, value:me.value, percentage:me.percentage};\r\n    return html`\r\n    <div class=\"progress\" @keydown=\"${me.#onKeySelect}\" dir=\"${ifDefined(me.direction)}\">\r\n        <div class=\"${classMap(me.renderClass())}\" \r\n             \r\n             role=\"progressbar\"\r\n             tabindex=\"0\">\r\n             ${literalTemplate(me.label, obj)}\r\n        </div>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    if (changed.has('value')) {\r\n      let val = me.step + changed.get('value');\r\n      val = me.#update(val, val);\r\n      changed.set('value', val);\r\n    }\r\n  }\r\n\r\n  updated(changed) {\r\n    if (changed.has('value')) {\r\n      this.notify();\r\n    }\r\n  }\r\n\r\n  increase(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value + val, me.value);\r\n    return true;\r\n  }\r\n\r\n  decrease(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value - val, me.value);\r\n    return true;\r\n  }\r\n\r\n  get percentage() {\r\n    const me = this;\r\n    return Math.trunc((me.value / me.max) * 100);\r\n  }\r\n\r\n  #updateStyle() {\r\n    const me = this;\r\n    me.styles.width = `${me.percentage}%`;\r\n    me.dynamicStyle(me.#styleID, me.styles);\r\n  }\r\n\r\n  #update(val, old = 0) {\r\n    val = GSUtil.asNum(val, GSUtil.asNum(old));\r\n    const me = this;\r\n    if (val > me.max) val = me.max;\r\n    if (val < me.min) val = me.min;\r\n    return val;\r\n  }\r\n\r\n  #onKeySelect(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp' :\r\n      case 'ArrowRight' :\r\n          return me.increase();\r\n      case 'ArrowLeft' :\r\n      case 'ArrowDown' :\r\n         return me.decrease();\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-progress');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\n\r\nexport class GSSpinnerElement extends GSElement {\r\n\r\n    static styles = css`.spinner-border { border: var(--bs-spinner-border-width) solid currentcolor; border-right-color: transparent; }`;\r\n\r\n    static properties = {\r\n        color: { ...color, reflect: true },\r\n        small: { type: Boolean, reflect: true },\r\n        pulsar: { type: Boolean }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\" role=\"status\"></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"spinner-border\": !me.pulsar,\r\n            \"spinner-grow\": me.pulsar,\r\n            [`text-${me.color}`]: me.color,\r\n            [`spinner-border-sm`]: !me.pulsar && me.small,\r\n            [`spinner-grow-sm`]: me.pulsar && me.small,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-spinner');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitterElement class\r\n * @module components/GSSplitterElement\r\n */\r\n\r\nimport { classMap, createRef, ref, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCSSMap } from '../base/GSCSSMap.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { notEmpty, numGT0, placement } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSSplitterElement extends GSElement {\r\n\r\n    static properties = {\r\n        // Check if splitter use vertical or horizontal splitting\r\n        split: { reflect: true },\r\n        // start|end|top|bottom\r\n        resize: { ...placement, hasChanged: notEmpty },\r\n        size: { type: Number, hasChanged: numGT0 }\r\n    }\r\n\r\n    #cursor = 0;\r\n    #styleID = GSID.id;\r\n    #styleTGT = GSID.id;\r\n    #elRef = createRef();\r\n    #mouseController;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.size = 8;\r\n        me.resize = 'start';\r\n        me.dynamicStyle(me.#styleID);\r\n        me.#load();\r\n        me.#mouseController = new ElementMoveController(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        //this.dynamicStyle(this.#styleTGT, null, true);\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        super.firstUpdated(changed);\r\n        const me = this;\r\n        me.#mouseController.attach(me.#splitter);\r\n        //const shadow = GSDOM.root(me.target) instanceof ShadowRoot;\r\n        //me.dynamicStyle(me.#styleTGT, {}, !shadow);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#elRef)} \r\n            @dblclick=\"${me.#onDoubleClick}\"\r\n            data-gs-class=\"${me.#styleID}\" \r\n            class=\"${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'splitter': true,\r\n            [me.#styleID]: true\r\n        }\r\n        return css;\r\n    }\r\n\r\n    updated(changedProperties) {\r\n        const me = this;\r\n        me.#cssUpdate();\r\n    }\r\n\r\n    /**\r\n    * Lock UI for mouse events to enable resizing over embedded iframes\r\n    * @param {MouseEvent} e \r\n    */\r\n    onStartMove(e) {\r\n        const me = this;\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', { start: true });\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    onMouseMove(e) {\r\n        const me = this;\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Save last position and unlock mouse UI events when resizing finished\r\n     * @param {*} e \r\n     */\r\n    onEndMove(e) {\r\n        const me = this;\r\n        me.#save();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', { stop: true });\r\n    }\r\n\r\n    /**\r\n    * Check if splitter use vertical or hotizontal splitting\r\n    * @returns {Boolean}\r\n    */\r\n    get isVertical() {\r\n        return this.split === 'vertical';\r\n    }\r\n\r\n    get isHorizontal() {\r\n        return !this.isVertical;\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display', 'none')).pop();\r\n        }\r\n        el.classList?.add(me.#styleTGT);\r\n        return el;\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.#elRef.value;\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        return this.target.style;\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n\r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n                .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, true);\r\n                    el.dataset.gsSplitter = true;\r\n                });\r\n        } else {\r\n            me.#lockable\r\n                .filter(el => el.dataset.gsSplitter)\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, false);\r\n                    delete el.dataset.gsSplitter;\r\n                });\r\n        }\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { width: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { height: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        const key = me.isVertical ? 'width' : 'height';\r\n        me.#styleDynamic[key] = val + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { [key]: val + \"px\" }, true);\r\n    }\r\n\r\n    #cssUpdate() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        const opt = {\r\n            [size]: `${me.size}px`,\r\n            [full]: '100%',\r\n            'border-width': '1px',\r\n            cursor: cursor,\r\n            'border-color': 'darkgray',\r\n            'border-style': 'solid',\r\n            'background-color': 'lightgray',\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-splitter');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNavItemElement } from '../NavItem.mjs';\r\n\r\n/**\r\n * Tab component (gs-tab), generate selectable/switchable tabs on a panel\r\n */\r\nexport class GSTabItemElement extends GSNavItemElement {\r\n\r\n  static properties = {\r\n    name: {}\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.#updateCSS + this.css;\r\n  }\r\n\r\n  get #updateCSS() {\r\n    const me = this;\r\n    return me.shouldUpdate() ? GSUtil.normalize(me.parentComponent?.tabCSS) : '';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.parentComponent?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\n\r\n/**\r\n * Container for individual tab; part of tabed panel\r\n */\r\nexport class GSTabPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    name: {},\r\n    template: {},\r\n    active: { type: Boolean, reflect : true }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.active = false;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" \r\n      class=\"${classMap(this.renderClass())}\">\r\n      <slot>\r\n      ${this.template ? html`<gs-template flat src=\"${this.template}\"></gs-template>` : ''}\r\n      </slot></div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tab-pane': true,\r\n      'd-none' : !me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tab-group') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../../base/GSID.mjs';\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { PlacementTypes } from '../../properties/placement.mjs';\r\nimport { GSNavElement } from '../Nav.mjs';\r\n\r\n/**\r\n * Panel with tabs component (gs-tab-group), generate childrens gs-tab and gs-tab-panel \r\n */\r\nexport class GSTabGroupElement extends GSNavElement {\r\n\r\n  static properties = {\r\n    panelCSS: { attribute: 'css-panel' },\r\n    tabCSS: { attribute: 'css-tab' },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n   \r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    // link tabs and panels\r\n    me.items.forEach(el => me.#findPanel(el));\r\n    me.onSelected(me.active);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.items.forEach(el => me.#findPanel(el));\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'd-flex': me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    const me = this;\r\n    const reverse = PlacementTypes.isAfter(me.placement);\r\n    const list = [super.renderWrappedUI('tabs'),\r\n    html`<div class=\"tab-content flex-fill ${me.panelCSS}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <slot name=\"panels\"></slot>\r\n      </div>\r\n      <slot class=\"d-none\"></slot>`];\r\n    return reverse ? list.reverse() : list;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const css = super.renderWrappedClass();\r\n    return me.mapCSS(me.tabCSS, css);\r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    const me = this;\r\n    const tabs =  me.#renderTabs();\r\n    const panels = me.#renderPanels();\r\n    return tabs.concat(...panels);\r\n  }\r\n\r\n  #renderTabs() {    \r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab generated slot=\"tabs\"\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\"    \r\n        title=\"${ifDefined(o.title)}\"\r\n        name=\"${o.name}\"></gs-tab>`;\r\n    });    \r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  #renderPanels() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-panel generated  \r\n        slot=\"panels\" name=\"${o.name}\" \r\n        .active=\"${ifDefined(o.active)}\"\r\n        template=\"${ifDefined(o.template)}\"></gs-tab-panel>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when tab selected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onSelected(el) {\r\n    el?.click();\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = true;\r\n  }\r\n\r\n  /**\r\n   * Callback when tab deselected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onDeselected(el) {\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = false;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-TAB';\r\n  }\r\n\r\n  /**\r\n   * Selected Tab node name is used to find the panel.\r\n   * If panel found, auto-link it with node element\r\n   * @param {GSTabElement} el \r\n   */\r\n  #findPanel(el) {\r\n    if (!el) return null;\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    const generated = me.data?.length > 0;\r\n    let panel = el[key] || me.query(`gs-tab-panel[name=\"${el.name}\"]`, generated);\r\n    if (!el[key]) el[key] = panel;\r\n    return panel;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { DataSelector } from '../data/DataSelector.mjs';\r\n\r\n/**\r\n * A HTML Table renderer for tabular data representation.\r\n * Either use \"storage\" property to point to data handler\r\n * or use simpler form by using \"data\" property.\r\n * \r\n * NOTE: Simpler form currently does not suport data filter.\r\n * Simpler form is only for read-ony static data representation.\r\n */\r\nexport class GSTableElement extends GSElement {\r\n\r\n  static #icons = ['sort-up', 'arrow-down-up', 'sort-down-alt'];\r\n\r\n  static styles = css`th:hover { opacity: 50% !important; }`;\r\n\r\n  static CELLS = {\r\n    align: {},\r\n    width: {},\r\n    width: {},\r\n    css: {},\r\n    title: {},\r\n    colspan: {},\r\n    storage: {},\r\n    ref: {}, // if set; use storage or gs-items to map ref value to virtual field\r\n    list : { type: Boolean }, // if set, use storage record column as a filter\r\n    filter: { type: Boolean },\r\n    hidden: { type: Boolean },\r\n    fixed: { type: Boolean },\r\n    filterType: { attribute: 'filter-type' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    color: { ...color},\r\n    ...GSData.PROPERTIES\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    color: { ...color },\r\n    colorFilter: { ...color, attribute: 'filter-color' },\r\n    colorHead: { ...color, attribute: 'head-color' },\r\n    colorSelect: { ...color, attribute: 'select-color' },\r\n    colorSort: { ...color, attribute: 'sort-color' },\r\n    stripedColumn: { type: Boolean, attribute: 'striped-column' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    divider: { type: Boolean },\r\n    striped: { type: Boolean },\r\n    hover: { type: Boolean },\r\n    small: { type: Boolean },\r\n    grid: { type: Boolean },\r\n    borderless: { type: Boolean },\r\n\r\n    sort: { type: Array, state: true },\r\n    columns: { type: Array, state: true },\r\n    key: { type: Number, state: true },\r\n    data: { type: Array },\r\n    \r\n    datacolumn: { type: Boolean },\r\n    multisort: { type: Boolean },\r\n    multiselect: { type: Boolean },\r\n    protected: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n    toggle: { type: Boolean },\r\n    sortable: { type: Boolean },\r\n  }\r\n\r\n  #config = [];\r\n  #sortOrder = [];\r\n  #auto = false;\r\n\r\n  constructor() {\r\n    super();\r\n    this.headColor = 'secondary';\r\n    this.colorSelect = 'info';\r\n    this.columns = [];    \r\n    this.data = [];\r\n    this.sort = [];\r\n    this.key = 0;\r\n  }\r\n\r\n  get selected() {\r\n    return this.dataController?.selected;\r\n  }\r\n\r\n  set search(val) {\r\n    const me = this;\r\n    if (me.storage && me.dataController) {\r\n      return me.dataController.search = val;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#config = GSItem.proxify(me, GSTableElement.CELLS);\r\n    if (me.columns.length === 0) me.columns = me.#config.map(v => v.name);\r\n    /* TODO - auto storage prevents using plain table with \r\n       columns, data properties programmatically\r\n    if (!me.storage) {      \r\n      me.storage = me.#auto = GSID.next('table-');\r\n    }\r\n    */\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.dataController?.clearSelected(this.data);\r\n    this.data = [];\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'user-select-none': me.protected,\r\n      'table': true,\r\n      'table-sm': me.small,\r\n      'table-hover': me.hover,\r\n      'table-striped': me.striped,\r\n      'table-bordered': me.grid,\r\n      'table-borderless': me.borderless,\r\n      'table-striped-columns': me.stripedColumns,\r\n      [`table-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.dataController?.read();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (me.columns.length != me.sort.length) me.sort = Array(me.columns.length).fill(0);\r\n    if (me.datacolumn && me.data.length > 0) {\r\n      me.columns = me.data[0];\r\n      me.data = me.data.slice(1);\r\n    }\r\n    if (changed.has('multiselect') && !me.multiselect) me.dataController?.clearSelected();\r\n    if (changed.has('selectable') && !me.selectable) me.dataController?.clearSelected();\r\n    if (changed.has('sortable') || changed.has('multisort')) {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [];\r\n    }\r\n\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const headColor = me.colorHead ? `table-${me.colorHead}` : '';\r\n    return html`\r\n      <table  \r\n       dir=\"${ifDefined(me.direction)}\"\r\n       @keyup=\"${me.#onKeyUp}\"\r\n       @keydown=\"${me.#onKeyDown}\"\r\n       class=\"${classMap(me.renderClass())}\">\r\n        <thead class=\"${ifDefined(headColor)}\">\r\n          ${me.#renderFilters()}\r\n          <tr @click=${me.#onSort}>\r\n            ${me.columns.map((entry, index) => me.#renderColumn(entry, index))}\r\n          </tr>\r\n        </thead>\r\n        <tbody @click=${me.#onSelect} @contextmenu=${me.#onSelect} class=\"${me.divider ? 'table-group-divider' : ''}\" role=\"button\">\r\n          ${me.data.map((entry, index) => me.#renderRecord(entry, index))}\r\n          ${me.#renderEmpty()}\r\n        </tbody>\r\n      </table>\r\n      <slot name=\"extra\">${me.#renderHandler()}</slot>\r\n    `;\r\n  }\r\n\r\n  #renderHandler() {\r\n    const me = this;\r\n    return me.#auto ? html`<gs-data-handler type=\"cached\" mode=\"\" id=${me.#auto} generated></gs-data-handler>` : '';\r\n  }\r\n\r\n  onDataRead(data) {\r\n    const me = this;\r\n    me.data = data;\r\n    //me.dataController?.clearSelected();\r\n\r\n    // update filtering\r\n    if (data.length > 0 && me.#hasFilters) {\r\n      me.#config.forEach((entry, index) => {\r\n        entry.columnType = me.#columType(index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear table filters\r\n   */\r\n  clear() {\r\n    this.#input.forEach(el => el.value = '');\r\n    this.dataController?.filter([]);\r\n  }\r\n\r\n  valueAt(row, cell) {\r\n    return this.data.length > row ? this.data[row][cell] : undefined;\r\n  }\r\n\r\n  get #input() {\r\n    return this.queryAll('th > input, th > select', true);\r\n  }\r\n\r\n  get #hasFilters() {\r\n    return this.#config.filter(o => o.filter).length > 0;\r\n  }\r\n\r\n  #columType(index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const cell = me.valueAt(0, me.columns[index]);\r\n    cfg.type = cfg.type || 'text';\r\n    const cfgType = { 'string': 'text', 'currency': 'number', 'timestamp': 'datetime-local' }[cfg.type]\r\n    const dataType = cell instanceof Date ? 'date' : typeof cell;\r\n    return cell ? dataType : cfgType || cfg.type;\r\n  }\r\n\r\n  #renderFilters() {\r\n    const me = this;\r\n    return me.#hasFilters ? html`<tr>${me.columns.map((entry, index) => me.#renderFilter(entry, index))}</tr>` : '';\r\n  }\r\n\r\n  #renderFilter(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (!cfg?.filter) return html`<th></th>`;\r\n\r\n    let mask = undefined;\r\n    const hasSub = cfg.childElementCount > 0;\r\n    const isDate = cfg.columnType === 'date';\r\n    if (isDate) mask = cfg.format || GSUtil.getDateFormat(cfg.language || GSUtil.language);\r\n    const css = `${GSUtil.normalize(me.cssFilter)} ${GSUtil.normalize(cell.cssFilter)}`; \r\n    const color = `text-bg-${GSUtil.normalize(cell.color || me.colorFilter)}`; \r\n    \r\n\r\n    if ((hasSub || cfg.list) && cfg.fixed) {\r\n      return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n          <select is=\"gs-ext-select\" .index=${index}\r\n              class=\"form-select ${css} ${color}\" \r\n              name=\"${cell}\"\r\n              storage=\"${ifDefined(cfg.list ? me.storage : null)}\"\r\n              key=\"${ifDefined(cfg.list ? cfg.name : null)}\"> \r\n              ${me.#renderOption(cfg)}\r\n              </select>\r\n          </th>`;\r\n    }\r\n\r\n    let listid = '';\r\n    let list = undefined;\r\n    if (hasSub || cfg.list) {\r\n      listid = `${me.id}-list-${index}`;\r\n      list = html`<datalist id=\"${listid}\" is=\"gs-ext-datalist\"\r\n              storage=\"${ifDefined(cfg.list ? me.storage : null)}\"\r\n              key=\"${ifDefined(cfg.list ? cfg.name : null)}\"> \r\n              ${me.#renderOption(cfg)}</datalist>`;\r\n    } \r\n\r\n    return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n    <input is=\"gs-ext-input\" .index=${index}\r\n      class=\"form-control ${css} ${color}\" \r\n      mask=\"${ifDefined(mask)}\"\r\n      list=\"${ifDefined(listid)}\"\r\n      name=\"${cell}\" \r\n      placeholder=\"${ifDefined(cfg.title)}\" \r\n      type=\"${cfg.filterType || cfg.columnType}\"\r\n      data-slots=\"${ifDefined(isDate ? 'DMY' : undefined)}\"/>\r\n    ${list}\r\n    </th>`;\r\n  }\r\n\r\n  #renderOption(cfg) {\r\n    if (cfg.childElementCount == 0) return '';\r\n    const sub = GSItem.proxify(cfg);\r\n    return sub.map(el => html`<option value=\"${el.value}\">${cfg.fixed ? el.map : ''}</option>`);\r\n  }\r\n\r\n  #renderColumn(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    const css = `${GSUtil.normalize(me.cssHeader)} ${GSUtil.normalize(cell.cssHeader)}`; \r\n    return html`\r\n      <th .index=${index} class=\"${css}\" \r\n        colspan=\"${ifDefined(cfg?.colspan)}\"\r\n        width=\"${ifDefined(cfg?.width)}\">\r\n        <div class=\"d-flex justify-content-between\"> \r\n          <span>${cfg?.title || cell}</span>\r\n          ${me.#renderIcon(index)}\r\n        </div>\r\n      </th>\r\n    `\r\n  }\r\n\r\n  #renderIcon(index) {\r\n    const me = this;\r\n    if (!me.sortable) return '';\r\n    const icons = GSTableElement.#icons;\r\n    const sortType = me.sort[index];\r\n    const order = me.multisort ? me.#sortOrder.indexOf(index) + 1 : '';\r\n    return html`<gs-icon name=\"${icons[sortType + 1]}\" super=\"${order > 0 ? order : ''}\" color=\"${ifDefined(me.colorSort)}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderRecord(entry, index) {\r\n    const me = this;\r\n    const controller = me.dataController || DataSelector;\r\n    const selected = controller?.isSelected(entry);\r\n    const color = me.colorSelect && selected ? `table-${me.colorSelect}` : '';\r\n    const cells = me.#remapRecord(entry);\r\n    return html`\r\n        <tr .index=${index} class=\"${color}\" tabindex=\"0\" ?selected=${selected}>\r\n          ${cells.map((cell, i) => me.#renderCell(cell, i))}\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  #renderCell(cell, index) {\r\n    const cfg = this.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    return html`<td class=\"text-${cfg?.align}\" colspan=\"${ifDefined(cfg?.colspan)}\" ><span>${cell}</span></td>`;\r\n  }\r\n\r\n  #remapRecord(record) {\r\n    const me = this;\r\n    if (!Array.isArray(record)) record = me.columns.map(v => record[v]);\r\n    return record.map((val, i) => me.#config[i] ? GSData.format(me.#config[i], val) : val);\r\n  }\r\n\r\n  #renderEmpty() {\r\n    const me = this;\r\n    return me.data.length > 0 ?  '' :\r\n    html`<tr data-ignore=\"true\"><td colspan=\"${me.columns.length}\" class=\"text-center fw-bold text-muted\">${me.translate('No Data')}</td></tr>`;\r\n  }\r\n\r\n  #elementTofilter(el) {\r\n    if (!el.value) return undefined;\r\n    const isDate = el.type === 'date';\r\n    const val = isDate ? el.valueAsDate : el.value;\r\n    const cfg = this.#config[el.index];\r\n    return { name: el.name, value: val, language : cfg?.language };\r\n  }\r\n\r\n  #onFilter(e) {\r\n    \r\n    const me = this;\r\n    \r\n    const filter = me.#input\r\n      .map(el => me.#elementTofilter(el))\r\n      .filter(el => el?.value);\r\n\r\n    if (me.storage) {\r\n      me.dataController?.filter(filter);\r\n    } else {\r\n      // TODO keep full data, use sorted\r\n      // GSData.filter(me.data, filter);\r\n    }\r\n  }  \r\n\r\n  #onSort(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.sortable) return;\r\n    \r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const column = e.target.closest('th');\r\n    if (!icon || !column) return;\r\n\r\n    const idx = column.index !== undefined ? column.index : GSDOM.getElementIndex(column);\r\n    const current = me.sort[idx];\r\n    const sortType = current === 1 ? -1 : current + 1;\r\n\r\n    if (me.multisort) {\r\n      if (sortType == 0) {\r\n        me.#sortOrder = me.#sortOrder.filter(v => v != idx);\r\n      } else if (!me.#sortOrder.includes(idx)) {\r\n        me.#sortOrder.push(idx);\r\n      }\r\n    } else {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [idx];\r\n    }\r\n\r\n    me.sort[idx] = sortType;\r\n\r\n    const sort = me.#prepareSorter(me.sort, me.#sortOrder);\r\n\r\n    if (me.storage) {\r\n      me.dataController?.sort(sort);\r\n    } else {\r\n      me.data = GSData.sortData(me.data, sort);\r\n    }\r\n\r\n    me.emit('sort');\r\n  }\r\n\r\n  #prepareSorter(sort, sortOrder) {\r\n    \r\n    const me = this;\r\n\r\n    if (sort.filter(v => v).length === 0) {\r\n      sort = Array(me.columns.length).fill(0);\r\n      sort[me.key] = 1;\r\n    }\r\n\r\n    // if data record is object (not simple array)\r\n    const isComplex = me.data[0] && !Array.isArray(me.data[0]);\r\n\r\n    // sort list \r\n    const list = sort.map((v, i) => v ? { name: isComplex ? me.columns[i] : undefined, col: i, ord: v, idx: sortOrder.indexOf(i) } : null).filter(v => v);\r\n\r\n    // order sort list by idx\r\n    sort = GSData.sortData(list, [{ name: 'idx', ord: 1 }]);\r\n\r\n    return sort;\r\n  }\r\n\r\n  #onSelect(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.selectable) return;\r\n    \r\n    const tr = e.target.tagName === 'TR' ? e.target : e.target.closest('tr');\r\n    if (!tr) return;\r\n    \r\n    // if context menu is attached and right click made\r\n    if (e.button === 2 && !me.query('gs-context')) return;\r\n    \r\n    const controller = me.dataController || DataSelector;\r\n    if (!controller) return;\r\n\r\n    const record = me.data[tr.index];\r\n    const isSelected = controller.isSelected(record);\r\n    if (me.multiselect) {\r\n      if (isSelected) {\r\n        controller.removeSelected(record);\r\n      } else {\r\n        controller.addSelected(record);\r\n      }\r\n    } else if (me.toggle) {\r\n      controller.clearSelected(me.data);\r\n      if (!isSelected) {\r\n        controller.addSelected(record);\r\n      }\r\n    } else {\r\n      controller.clearSelected(me.data);\r\n      controller.addSelected(record);\r\n    }\r\n    me.requestUpdate();\r\n    me.emit('select');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    if (!e.target.matches('tbody tr')) return;\r\n    let el = null;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        el = e.target.previousElementSibling;\r\n        break;\r\n      case 'ArrowDown':\r\n        el = e.target.nextElementSibling;\r\n        break;\r\n    }\r\n\r\n    if (el) {\r\n      el.focus();\r\n      this.emit('focus', el);\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') this.#onSelect(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-table');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport { createRef, ref, classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { stringArrayConverter, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSTagElement}\r\n */\r\nexport default class GSTagElement extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static styles = css`\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n\r\n    static properties = {\r\n        placeholder: {},\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        name: {},\r\n        data: { type: Array },\r\n        values: { type: Array, reflect: true, converter: stringArrayConverter },\r\n        appendable: { type: Boolean },\r\n        color: { ...color },\r\n        closeColor: { ...color, attribute: 'close-color' },\r\n        cssClose: { attribute: 'css-close' },\r\n        cssTag: { attribute: 'css-tag' },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {}\r\n    }\r\n\r\n    #dataListRef = createRef();\r\n    #inputRef = createRef();\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = '';\r\n        this.data = this.#items;\r\n        this.closeColor = 'light';\r\n        this.color = 'primary';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const tags = me.#renderTags();\r\n        return html`\r\n        <div  dir=\"${ifDefined(me.direction)}\" \r\n            class=\"${classMap(me.renderClass())}\"\r\n            @click=\"${me.#onClick.bind(me)}\">\r\n            ${tags}\r\n            <input type=\"text\" \r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            ${ref(me.#inputRef)}\r\n            name=\"${me.name}\" \r\n            list=\"${me.name}_list\"\r\n            class=\"form-control d-flex w-auto flex-grow-1\" \r\n            placeholder=\"${me.#info}\">\r\n            <datalist ${ref(me.#dataListRef)} id=\"${me.name}_list\">${me.#renderList()}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"d-flex\": true,\r\n            \"flex-wrap\": true,\r\n            \"align-items-center\": true,\r\n            \"gap-1 \": true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    get #info() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return me.placeholder ? me.placeholder : alt;\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTagElement.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.data.length >= me.max;\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax || (!optEl && me.appendable == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (!me.values.includes(fld.value)) {\r\n            me.values.push(fld.value);\r\n            fld.value = '';\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const value = tagEl.dataset.value;\r\n        me.values = me.values.filter(v => v != value);\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v));\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        const size = me.size > 0 ? `fs-${me.size}` : '';\r\n        return html`<div class=\"${classMap(me.#tagClass)}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"${classMap(me.#btnClass)}\"></button></div>`;\r\n    }\r\n\r\n    get #tagClass() {\r\n        const me = this;\r\n        const opt = {\r\n            badge: true,\r\n            tag: true,\r\n            [`fs-${me.size}`]: me.size > 0,\r\n            [`text-bg-${me.color}`]: me.color ? true : false\r\n        }\r\n        return me.mapCSS(me.cssTag, opt);\r\n    }\r\n\r\n    get #btnClass() {\r\n        const me = this;\r\n        const opt = {\r\n            'btn-close': true,\r\n            'ms-1': true,\r\n            [`text-bg-${me.closeColor}`]: me.closeColor ? true : false\r\n        }\r\n        return me.mapCSS(me.cssClose, opt);\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        return me.data.map(v => html`<option value=\"${v}\">`);\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el));\r\n    }\r\n\r\n    get #items() {\r\n        return this.#proxify(this).map(el => el.name).filter(v => v ? true : false);\r\n    }\r\n\r\n    get #input() {\r\n        return this.#inputRef.value;\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.#dataListRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-tag');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSTextElement extends GSElement {\r\n\r\n  #text = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.#text = this.innerText;\r\n    this.innerText = \"\";\r\n  }\r\n\r\n  renderUI() {\r\n    return this.translate(this.#text);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-text');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSTooltipElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    title: {},\r\n    target: {},\r\n    opened: { type: Boolean },\r\n    local: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowStyle = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.placement = 'top';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowStyle);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      role=\"tooltip\"\r\n      data-popper-placement=\"${me.placement}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      <div ${ref(me.#arrowRef)} \r\n          class=\"tooltip-arrow ${me.#arrowStyle}\" \r\n          data-gs-class=\"${me.#arrowStyle}\">\r\n      </div>\r\n      <div class=\"tooltip-inner\">${me.translate(me.title)}</div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tooltip': true,\r\n      'bs-tooltip-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  #attachEvents() {\r\n    const me = this;\r\n    me.attachEvent(me.#ref, 'mouseenter', me.open.bind(me));\r\n    me.attachEvent(me.#ref, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const arrowEl = me.#arrow;\r\n    const panelEl = me.#panel;\r\n    if (!panelEl) return;\r\n    if (me.opened) {\r\n      GSPopper.popupFixed(me.placement, panelEl, me.#ref, arrowEl);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, { top: '-1000px', left: '-1000px' });\r\n    }\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return me.local ? me.#refLocal : me.#refGlobal;\r\n    }\r\n  }\r\n\r\n  get #refLocal() {\r\n    const root = GSDOM.root(this);\r\n    return GSDOM.query(root, this.target);\r\n  }\r\n  \r\n  get #refGlobal() {\r\n    return GSDOM.query(document.body, this.target);\r\n  }\r\n\r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-tooltip');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty } from '../properties/index.mjs';\r\n\r\nexport class GSTemplateElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { reflect: true, hasChanged: notEmpty }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    const me = this;\r\n    if (me.flat) {\r\n      me.renderOptions.renderBefore = me;\r\n      return me.parentElement;\r\n    }\r\n    return super.createRenderRoot();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${this.renderTemplate()}`;\r\n  }\r\n\r\n\ttemplateInjected() {\r\n\t\tthis.emit('template-injected', null, true, true);\r\n\t}\r\n\r\n  static {\r\n    this.define('gs-template');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle automatic field value copy and select\r\n */\r\nexport class CopySelectController {\r\n\r\n  #host;\r\n\r\n  #clickCallback;\r\n  #copyCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#clickCallback = me.#onClick.bind(me);\r\n    me.#copyCallback = me.#onCopy.bind(me);\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on?.('click', me.#clickCallback);\r\n    me.#host.on?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host.off?.('click', me.#clickCallback);\r\n    me.#host.off?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  #onCopy() {\r\n    GSUtil.writeToClipboard(this.#host.value);\r\n  }\r\n\r\n  #onClick(e) {\r\n      const me = this;\r\n      if (me.#host.autocopy) GSUtil.writeToClipboard(me.#host.value);\r\n      if (me.#host.autoselect) me.#host.select();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Handle field mask \r\n */\r\nexport class MaskController {\r\n\r\n  static #special = '.^$*+?()[]{}\\|';\r\n\r\n  static #maskType = {\r\n    x: /[0-9a-fA-F]/g,\r\n    n: /[0-9]/g,\r\n    y: /[0-9]/g,\r\n    m: /[0-9]/g,\r\n    d: /[0-9]/g,\r\n    h: /[0-9]/g,\r\n    s: /[0-9]/g,\r\n    '.': /[0-9]/g,\r\n    '#': /[a-zA-Z]/g,\r\n    '*': /[0-9a-zA-Z]/g,\r\n    '_': /./g\r\n  };\r\n\r\n  #back = false;\r\n  #slots;\r\n  #prev;\r\n  #first;\r\n  #accept;\r\n  #pattern;\r\n\r\n  #host;\r\n\r\n  #keyDownCallback;\r\n  #inputCallback;\r\n  #focusCallback;\r\n  #changeCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.initRules();\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    me.#inputCallback = me.#format.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    me.#changeCallback = me.#onChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.initRules();\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n    me.#host.on('input', me.#inputCallback);\r\n    me.#host.on('focus', me.#focusCallback);\r\n    me.#host.on('change', me.#changeCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n    me.#host.off('input', me.#inputCallback);\r\n    me.#host.off('focus', me.#focusCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n  }\r\n\r\n  initRules() {\r\n    const me = this;\r\n    if (!me.pattern) return;\r\n    me.#slots = me.#buildSlots();\r\n    me.#prev = (j => Array.from(me.pattern, (c, i) => me.#slots.has(c) ? j = i + 1 : j))(0);\r\n    me.#first = [...me.pattern].findIndex(c => me.#slots.has(c));\r\n    me.#accept = me.#buildAccept();\r\n    me.#toPattern();\r\n  }\r\n\r\n  checkValidity() {  \r\n    const me = this;  \r\n    let isMatch = true;\r\n    if (me.isValid) {\r\n      isMatch = me.isEmpty || me.isMatch;\r\n      if (!isMatch) me.setCustomValidity('Mask not matched!');\r\n    }\r\n    return me.isValid && isMatch;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n    \r\n  setSelectionRange(i, j) {\r\n    this.#host.setSelectionRange(i, j);\r\n  }\r\n\r\n  select() {\r\n    this.#host.select();\r\n  }\r\n\r\n  get isEmpty() {\r\n    return GSUtil.isStringEmpty(this.raw);\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    const [i, j] = this.#range();\r\n    return this.raw.substring(0, j);\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get pattern() {\r\n    return this.#host.mask;\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get selectionStart() {\r\n    return this.#host.selectionStart;\r\n  }\r\n\r\n  get selectionEnd() {\r\n    return this.#host.selectionEnd;\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.#host.autoselect;\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n\r\n    let isMatch = true;\r\n    if (me.#pattern) {\r\n      me.#pattern.lastIndex = 0;\r\n      isMatch = me.#pattern.test(me.raw);\r\n    }\r\n\r\n    return isMatch;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    this.#back = e.key === \"Backspace\";\r\n  }\r\n\r\n  #onFocus(e) {\r\n    const me = this;\r\n    me.#format();\r\n    if (me.autoselect) me.select();\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.#format();\r\n  }\r\n\r\n  /**\r\n   * If data-slots not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildSlots() {\r\n    const me = this;\r\n    let slots = me.dataset.slots;\r\n    if (!slots) {\r\n      const maskType = MaskController.#maskType;\r\n      slots = [...new Set(me.pattern)]\r\n        .filter(v => maskType[v.toLowerCase()])\r\n        .join('');\r\n    }\r\n    return new Set(slots || \"_\");\r\n  }\r\n\r\n  /**\r\n   * If data-accept not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildAccept() {\r\n    const me = this;\r\n    let accept = me.dataset.accept;\r\n    if (!accept) {\r\n      const maskType = MaskController.#maskType;\r\n      accept = [...new Set(me.pattern)]\r\n        .map(v => maskType[v.toLowerCase()])\r\n        .filter(v => v);\r\n      if (accept.length > 0) {\r\n        const tmp = {};\r\n        accept.forEach(v => tmp[v.src] = v);\r\n        accept = Object.values(tmp);\r\n        return accept.length === 1 ? accept.pop() : accept;\r\n      }\r\n\r\n    }\r\n    return new RegExp(accept || \"\\\\d\", \"g\");\r\n  }\r\n\r\n  #range() {\r\n    const me = this;\r\n    const value = me.raw;\r\n    return [me.selectionStart, me.selectionEnd].map(i => {\r\n      i = me.#clean(value.slice(0, i)).findIndex(c => me.#slots.has(c));\r\n      return i < 0 ? me.#prev[me.#prev.length - 1] : me.#back ? me.#prev[i - 1] || me.#first : i;\r\n    });\r\n  }\r\n\r\n  #format() {\r\n    const me = this;\r\n    const [i, j] = me.#range();\r\n    const val = me.#clean(me.#host.raw);\r\n    me.value = val.join``;\r\n    me.setSelectionRange(i, j);\r\n    me.#back = false;\r\n  }\r\n\r\n  #clean(input) {\r\n    const me = this;\r\n    input = input.match(me.#accept) || [];\r\n    return Array.from(me.pattern, (c, i) => input[i] === c || me.#slots.has(c) ? input.shift() || c : c);\r\n  }\r\n\r\n  #toPattern() {\r\n\r\n    const me = this;\r\n\r\n    if (me.pattern.length === 0) return;\r\n\r\n    const chars = me.pattern.split('');\r\n    const masks = ['^'];\r\n\r\n    const maskType = MaskController.#maskType;\r\n    const special = MaskController.#special;\r\n\r\n    let cnt = 0;\r\n    chars.forEach((v, i) => {\r\n      const m = me.#slots.has(v) ? maskType[v.toLowerCase()] : null;\r\n      if (!m) {\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        cnt = 0;\r\n        if (special.includes(v)) masks.push('\\\\');\r\n        return masks.push(v);\r\n      }\r\n\r\n      chars[i] = new RegExp(m, 'g');\r\n\r\n      if (masks.length === 0) return masks.push(m.source);\r\n\r\n      if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n      if (cnt > 0) masks.push(`{${++cnt}}`);\r\n      cnt = 0;\r\n      masks.push(m.source);\r\n    });\r\n\r\n    if (cnt > 0) masks.push(`{${++cnt}}`);\r\n    masks.push('$');\r\n\r\n    me.#pattern = new RegExp(masks.join(''), 'g');\r\n    // me.#max = me.pattern.length;\r\n    // me.#masks = chars;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle multiple patterns\r\n */\r\nexport class MultipatternController {\r\n\r\n  #host;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n  \r\n  checkValidity() {    \r\n    const me = this;  \r\n    let isMatch = true;\r\n    if (me.isValid) {\r\n      isMatch = me.isEmpty || me.isMatch;\r\n      if (!isMatch) me.setCustomValidity('Pattern not matched!');\r\n    }\r\n    return me.isValid && isMatch;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get patterns() {\r\n    const obj = this.#host.multipattern;\r\n    if (obj instanceof RegExp) return [obj];\r\n    if (Array.isArray(obj)) return obj.filter(o => o instanceof RegExp);\r\n    throw new Error('Invalid multipattern value. Expected RegExp object or array.');\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n    let isMatch = true;\r\n    for (const r of me.patterns) {\r\n      isMatch = r.test(me?.value);\r\n      if (isMatch) break;\r\n    }\r\n   \r\n    return isMatch;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type number to support max length entry\r\n */\r\nexport class NumberController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get maxLength() {\r\n    return GSUtil.asNum(this.#host.maxLength, 0);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n    \r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'number') return me.#onNumberInput(e);\r\n  }\r\n\r\n  #onNumberInput(e) {\r\n    const me = this;\r\n    if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n        me.value = me.value.substring(0, me.maxLength);\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle for input tpye password to support keyboard shortcut for password reveal.\r\n */\r\nexport class PasswordController {\r\n\r\n  #host;\r\n\r\n  #revealing = false;\r\n\r\n  #keyUpCallback;\r\n  #keyDownCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyUpCallback = me.#onKeyUp.bind(me);\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('keyup', me.#keyUpCallback);\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keyup', me.#keyUpCallback);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  get reveal() {\r\n    return this.#host.hasAttribute('reveal');\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  set type(val) {\r\n    if (this.#host) this.#host.type = val;\r\n  }\r\n\r\n  #isReveal(e) {\r\n    return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    const me = this;\r\n    if (e.key === 'Shift' && me.#revealing) {\r\n      me.type = 'password';\r\n    }\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (me.#isReveal(e)) {\r\n      me.#revealing = true;\r\n      me.type = 'text';\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCSSMap } from \"../../../base/GSCSSMap.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type text to support text value changes based on CSS\r\n */\r\nexport class TextController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'text') me.value = me.#updateText(me.value);\r\n  }\r\n\r\n  #updateText(value = '') {\r\n    const map = GSCSSMap.styleValue(this.#host, 'text-transform');\r\n    if (map) value = GSUtil.textTransform(map.value, value);\r\n    return value;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Handle data filtering for options atribute (combo and data lists)\r\n * Changes in one field list, update available selections in another field selections.\r\n */\r\nexport class InteractiveController {\r\n\r\n  #host;\r\n\r\n  #monitorCallback;\r\n  #changeCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#monitorCallback = me.#onMonitor.bind(me);\r\n    me.#changeCallback = me.#onDataChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (list) {\r\n      me.#host.on('blur', me.#blurCallback);\r\n      me.#host.on('change', me.#changeCallback);\r\n      me.#host.attachEvent(me.filter, 'change', me.#monitorCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('blur', me.#blurCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n    me.#host.removeEvent(me.filter, 'change', me.#monitorCallback);\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n      this.#onDataChange();\r\n    }\r\n  }\r\n\r\n  get component() {\r\n    return this.#host\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get list() {\r\n    return this.#host;\r\n  }\r\n\r\n  get filter() {\r\n    const me = this;\r\n    const filter = GSAttr.get(me.#host, 'data-filter');\r\n    return GSDOM.getByID(me.owner, filter);\r\n  }\r\n\r\n  get owner() {\r\n    //return this.#host.owner;\r\n    return this.#host.form || GSDOM.closest(this.#host, 'form');\r\n  }\r\n\r\n  get formElements() {\r\n    return GSDOM.formElements(this.owner, true);\r\n  }\r\n\r\n  get strict() {\r\n    return GSAttr.get(this.#host, 'strict', '');\r\n  }\r\n\r\n  #onBlur(e) {\r\n    if (!this.#isInList()) GSEvents.send(this.#host, 'strict', { ok: false, source: e });\r\n  }\r\n\r\n  #onDataChange(e) {\r\n    const me = this;\r\n    const own = me.owner;\r\n    let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n    let clean = false;\r\n    if (!opt) {\r\n        opt = me.list?.querySelector('option');\r\n        clean = true;\r\n    }\r\n\r\n    const obj = opt?.dataset || {};\r\n    Object.entries(obj).forEach(p => {\r\n        const val = clean ? '' : p[1];\r\n        const key = p[0];\r\n        GSAttr.set(me.#host, `data-${key}`, p[1]);\r\n        if (key === 'id' || key === 'group') return;\r\n\r\n        const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n        const els = Array.from(GSDOM.queryAll(own, filter));\r\n        els.filter(el => el.tagName !== 'OPTION')\r\n            .filter(el => el !== me.#host)\r\n            .filter(el => el !== me.filter)            \r\n            .filter(el => GSAttr.get(el, 'list').length === 0)\r\n            .forEach(el => me.#togleEl(el, key, val))\r\n    });\r\n  }\r\n\r\n  #onMonitor(e) {\r\n    const me = this;\r\n    const list = me.list;\r\n    me.value = '';\r\n    me.#host.disabled = false;\r\n    const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n    const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n    GSDOM.queryAll(list, 'option').forEach(el => me.#togleOption(el, true));\r\n    GSDOM.queryAll(list, filter).forEach(el => me.#togleOption(el, false));\r\n\r\n  }\r\n\r\n  #togleOption(el, value) {\r\n      GSAttr.toggle(el, 'disabled', value);\r\n      GSDOM.toggleClass(el, 'd-none', value);\r\n  }\r\n\r\n  #togleEl(el, key = '', value = '') {\r\n\r\n    const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n    const isMatch = value.length > 0 && data.includes(value);\r\n    const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n\r\n    if (frmel) {\r\n      GSAttr.toggle(el, 'disabled', !isMatch);\r\n    } else {\r\n      isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n    }\r\n\r\n    //this.formElements.forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    GSAttr.set(el, 'data-ignore', isMatch ? null : true);\r\n    GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n  }\r\n\r\n  #isInList() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (!list) return true;\r\n    if (!me.strict) return true;\r\n    if (!list.querySelector('option')) return true;\r\n    const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n    return opt != null;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { InteractiveController } from \"./InteractiveController.mjs\";\r\n\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update available selections in another field selections.\r\n */\r\nexport class ComboController extends InteractiveController {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n  }\r\n\r\n  get list() {\r\n    return this.component;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { InteractiveController } from \"./InteractiveController.mjs\";\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update available selections in another field selections.\r\n */\r\nexport class ListController extends InteractiveController {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n  }\r\n\r\n  get list() {\r\n    const me = this;\r\n    if (me.component.list) return me.component.list;\r\n    const list = GSAttr.get(me.component, 'list');\r\n    return GSDOM.getByID(me.owner, list);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSBeep } from \"../../../base/GSBeep.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Handle for input/testarea to support validity checkups\r\n */\r\nexport class ValidityController {\r\n\r\n  #host;\r\n\r\n  #invalidCallback;\r\n  #blurCallback;\r\n  #changeCallback;\r\n  #focusCallback;\r\n  #inputCallback;\r\n\r\n  #processing;  \r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#processing = false;\r\n    me.#host = host;\r\n    me.#invalidCallback = me.#onInvalid.bind(me);\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#changeCallback = me.#onChange.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on?.('invalid', me.#invalidCallback);\r\n    me.#host.on?.('blur', me.#blurCallback);\r\n    me.#host.on?.('focus', me.#focusCallback);\r\n    me.#host.on?.('change', me.#changeCallback);\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host.off?.('invalid', me.#invalidCallback);\r\n    me.#host.off?.('blur', me.#blurCallback);\r\n    me.#host.off?.('focus', me.#focusCallback);\r\n    me.#host.off?.('change', me.#changeCallback);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  reset() {\r\n    this.setCustomValidity('');\r\n    this.#togglUI(this.isValid);\r\n  }\r\n\r\n  async report() {    \r\n    const me = this;\r\n    if (me.#processing) return;\r\n    me.#processing = true;\r\n    me.reportValidity();\r\n    if (me.isVisible) {\r\n      if (me.block) me.focus();\r\n      if (me.beep && me.isTyped) await me.#beep();\r\n    }\r\n    await GSUtil.timeout(me.timeout);\r\n    me.setCustomValidity(me.isValid ? '' : ' ');\r\n    me.#togglUI(me.isValid);\r\n    me.#processing = false;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.#host.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.#host.reportValidity();\r\n  }\r\n\r\n  focus() {\r\n    return this.#host.focus();\r\n  }\r\n  \r\n  get isTyped() {\r\n    return GSUtil.asBool(this.#host.dataset.typed);\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  get beep() {\r\n    return this.#host.beep;\r\n  }\r\n\r\n  get block() {\r\n    return this.#host.block;\r\n  }\r\n\r\n  get timeout() {\r\n    return this.#host.timeout;\r\n  }\r\n\r\n  get isVisible() {\r\n    return GSDOM.isVisible(this.#host);\r\n  }\r\n\r\n  #onInput(e) {\r\n    this.#host.dataset.typed = true;\r\n    this.#processing = false;\r\n  }\r\n\r\n  #onFocus(e) {\r\n    this.#togglUI(this.isValid);\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    this.report();\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if(me.checkValidity()) {\r\n      me.reset();\r\n    }\r\n  }\r\n\r\n  #onBlur(e) {\r\n    const me = this;\r\n    if (me.isValid) {\r\n      me.reset();\r\n    } else {\r\n      me.checkValidity();\r\n    }\r\n  }\r\n\r\n  #togglUI(isValid) {\r\n    GSDOM.toggleClass(this.#host, 'is-invalid', !isValid);\r\n  }\r\n\r\n  #beep() {\r\n    return GSBeep.beep(100, 1200, 150, 'triangle');\r\n  }\r\n\r\n}  ","\r\nimport { notEqual, defaultConverter } from '../../lib.mjs';\r\n\r\n\r\nconst defaultPropertyDeclaration = {\r\n    attribute: true,\r\n    reflect: false,\r\n    type: String,\r\n    converter: defaultConverter,\r\n    hasChanged: notEqual,\r\n}\r\n\r\nconst attributeToPropertyMap = Symbol();\r\nconst prepare = Symbol();\r\nconst elementProperties = Symbol();\r\nconst finalize = Symbol();\r\nconst finalized = Symbol();\r\n\r\nconst prepareFn = function () {\r\n    const me = this;\r\n    if (Object.getOwnPropertySymbols(me).includes(elementProperties)) return;\r\n    const superCtor = Object.getPrototypeOf(me);\r\n    if (typeof superCtor[finalize] === 'function') superCtor[finalize]();\r\n    me[elementProperties] = new Map(superCtor[elementProperties]);\r\n}\r\n\r\nconst attributeNameForProperty = (name, options) => {\r\n    const attribute = options.attribute;\r\n    return attribute === false\r\n        ? undefined\r\n        : typeof attribute === 'string'\r\n            ? attribute\r\n            : typeof name === 'string'\r\n                ? name.toLowerCase()\r\n                : undefined;\r\n}\r\n\r\n/**\r\n * Reactivity for HTMLInputElement based on Google ltd. Lit ReactiveElement\r\n */\r\nexport class ReactiveInput extends HTMLInputElement {\r\n\r\n    // user defiend \r\n    static properties = {};\r\n    \r\n    static [finalized] = false;\r\n\r\n    #reflectingProperties = undefined;\r\n    #instanceProperties = undefined;\r\n\r\n    #controllers = undefined;\r\n    #updatePromise = undefined;\r\n    #changedProperties = undefined;\r\n    #reflectingProperty = undefined;\r\n\r\n    #hasUpdated = false;\r\n    #isUpdatePending = false;\r\n\r\n    #isConnected = false;\r\n\r\n    /**\r\n     * Returns a list of attributes corresponding to the registered properties.\r\n    */\r\n    static get observedAttributes() {\r\n        Object.defineProperty(ReactiveInput.__proto__, prepare, { value: prepareFn });\r\n        const me = this;\r\n        me[finalize]();\r\n        return me[attributeToPropertyMap] && [...me[attributeToPropertyMap].keys()];\r\n    }\r\n\r\n    static addInitializer(initializer) {\r\n        const me = this;\r\n        me[prepare]();\r\n        me.initializers ??= [].push(initializer);\r\n    }\r\n\r\n    static [finalize]() {\r\n        const me = this;\r\n        //if (Object.hasOwn(me, 'finalized')) return;\r\n        if (me[finalized] === true) return;\r\n        me[finalized] = true;\r\n        me[prepare]();\r\n\r\n        if (Object.hasOwn(me, 'properties')) {\r\n            const props = me.properties;\r\n            const propKeys = [\r\n                ...Object.getOwnPropertyNames(props),\r\n                ...Object.getOwnPropertySymbols(props),\r\n            ];\r\n            for (const p of propKeys) {\r\n                me.createProperty(p, props[p]);\r\n            }\r\n        }\r\n\r\n        // Create the attribute-to-property map\r\n        me[attributeToPropertyMap] = new Map();\r\n        for (const [p, options] of me[elementProperties]) {\r\n            const attr = attributeNameForProperty(p, options);\r\n            if (attr !== undefined) {\r\n                me[attributeToPropertyMap].set(attr, p);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static createProperty(name, options) {\r\n        const me = this;\r\n        if (options.state) options.attribute = false;\r\n        me[prepare]();\r\n        me[elementProperties].set(name, options);\r\n        if (!options.noAccessor) {\r\n            const key = Symbol();\r\n            const descriptor = me.getPropertyDescriptor(name, key, options);\r\n            if (descriptor !== undefined) {\r\n                Object.defineProperty(me.prototype, name, descriptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    static getPropertyDescriptor(name, key, options) {\r\n        const { get, set } = Object.getOwnPropertyDescriptor(this.prototype, name) ?? {\r\n            get() {\r\n                return this[key];\r\n            },\r\n            set(v) {\r\n                this[key] = v;\r\n            },\r\n        }\r\n        return {\r\n            get() {\r\n                return get?.call(this);\r\n            },\r\n            set(value) {\r\n                const me = this;\r\n                const oldValue = get?.call(me);\r\n                set?.call(me, value);\r\n                me.requestUpdate(name, oldValue, options);\r\n            },\r\n            configurable: true,\r\n            enumerable: true,\r\n        }\r\n    }\r\n\r\n    static getPropertyOptions(name) {\r\n        return this[elementProperties].get(name) ?? defaultPropertyDeclaration;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initialize();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.enableUpdating(true);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n        me.#isConnected = true;\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.#isConnected = false;\r\n        this.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        this.#attributeToProperty(name, newValue);\r\n    }\r\n\r\n    // ******************************\r\n    // PUBLIC GETTERS\r\n    // ******************************\r\n\r\n    get hasUpdated() { return this.#hasUpdated; }\r\n    get isUpdatePending() { return this.#isUpdatePending; }\r\n    get renderRoot() { return this; }\r\n\r\n    // ******************************\r\n    // PROTECTED FUNCTIONS \r\n    // ******************************\r\n\r\n    addController(controller) {\r\n        // if (!(controller instanceof ReactiveController)) throw new Error('Argument not instance of ReactiveController');\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.#isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    enableUpdating(requestedUpdate) { }\r\n\r\n    firstUpdated(changedProperties) { }\r\n\r\n    updated(changedProperties) { }\r\n\r\n    getUpdateComplete() { return this.#updatePromise; }\r\n\r\n    scheduleUpdate() { return this.performUpdate(); }\r\n\r\n    shouldUpdate(changedProperties) { return true; }\r\n\r\n    willUpdate(changedProperties) { }\r\n\r\n    update(changedProperties) {\r\n        const me = this;\r\n        // The forEach() expression will only run when when #reflectingProperties is\r\n        // defined, and it returns undefined, setting #reflectingProperties to undefined\r\n        me.#reflectingProperties &&= me.#reflectingProperties.forEach((p) => me.#propertyToAttribute(p, this[p]));\r\n        me.#markUpdated();\r\n    }\r\n\r\n    get updateComplete() {\r\n        return this.getUpdateComplete();\r\n    }\r\n\r\n    requestUpdate(name, oldValue, options) {\r\n        const me = this;\r\n        if (name !== undefined) {\r\n            options ??= (me.constructor).getPropertyOptions(name);\r\n            const hasChanged = options.hasChanged ?? notEqual;\r\n            const newValue = me[name];\r\n            if (hasChanged(newValue, oldValue)) {\r\n                me.#changeProperty(name, oldValue, options);\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (me.#isUpdatePending === false) {\r\n            me.#updatePromise = me.#enqueueUpdate();\r\n        }\r\n    }\r\n\r\n    performUpdate() {\r\n\r\n        const me = this;\r\n        if (!me.#isUpdatePending) return;\r\n\r\n        if (!me.#hasUpdated) {\r\n\r\n            // Mixin instance properties once, if they exist.\r\n            if (me.#instanceProperties) {\r\n                for (const [p, value] of me.#instanceProperties) {\r\n                    this[p] = value;\r\n                }\r\n                me.#instanceProperties = undefined;\r\n            }\r\n\r\n            const elementProps = me.constructor[elementProperties];\r\n            if (elementProps.size > 0) {\r\n                for (const [p, options] of elementProps) {\r\n                    if (\r\n                        options.wrapped === true &&\r\n                        !me.#changedProperties.has(p) &&\r\n                        me[p] !== undefined\r\n                    ) {\r\n                        me.#changeProperty(p, this[p], options);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let shouldUpdate = false;\r\n        const changedProperties = me.#changedProperties;\r\n        try {\r\n            shouldUpdate = me.shouldUpdate(changedProperties);\r\n            if (shouldUpdate) {\r\n                me.willUpdate(changedProperties);\r\n                me.#controllers?.forEach((c) => c.hostUpdate?.());\r\n                me.update(changedProperties);\r\n            } else {\r\n                me.#markUpdated();\r\n            }\r\n        } catch (e) {\r\n            shouldUpdate = false;\r\n            me.#markUpdated();\r\n            throw e;\r\n        }\r\n\r\n        if (shouldUpdate) {\r\n            me.#didUpdate(changedProperties);\r\n        }\r\n    }\r\n\r\n    // ******************************\r\n    // PRIVATE FUNCTIONS \r\n    // ******************************\r\n\r\n    #didUpdate(changedProperties) {\r\n        const me = this;\r\n        me.#controllers?.forEach((c) => c.hostUpdated?.());\r\n        if (!me.#hasUpdated) {\r\n            me.#hasUpdated = true;\r\n            me.firstUpdated(changedProperties);\r\n        }\r\n        me.updated(changedProperties);\r\n    }\r\n\r\n    #markUpdated() {\r\n        const me = this;\r\n        me.#changedProperties = new Map();\r\n        me.#isUpdatePending = false;\r\n    }\r\n\r\n    async #enqueueUpdate() {\r\n        const me = this;\r\n        me.#isUpdatePending = true;\r\n        try {\r\n            await me.#updatePromise;\r\n        } catch (e) {\r\n            Promise.reject(e);\r\n        }\r\n        const result = me.scheduleUpdate();\r\n\r\n        if (result != null) {\r\n            await result;\r\n        }\r\n        return !me.#isUpdatePending;\r\n    }\r\n\r\n    #changeProperty(name, oldValue, options) {\r\n        const me = this;\r\n        if (!me.#changedProperties.has(name)) {\r\n            me.#changedProperties.set(name, oldValue);\r\n        }\r\n\r\n        if (options.reflect === true && me.#reflectingProperty !== name) {\r\n            (me.#reflectingProperties ??= new Set()).add(name);\r\n        }\r\n    }\r\n\r\n    #attributeToProperty(name, value) {\r\n        const me = this;\r\n        const ctor = me.constructor;\r\n        const propName = (ctor[attributeToPropertyMap]).get(name);\r\n        if (propName !== undefined && me.#reflectingProperty !== propName) {\r\n            const options = ctor.getPropertyOptions(propName);\r\n            const converter =\r\n                typeof options.converter === 'function'\r\n                    ? { fromAttribute: options.converter }\r\n                    : options.converter?.fromAttribute !== undefined\r\n                        ? options.converter\r\n                        : defaultConverter;\r\n            // mark state reflecting\r\n            me.#reflectingProperty = propName;\r\n            me[propName] = converter?.fromAttribute(value, options.type);\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #propertyToAttribute(name, value) {\r\n        const me = this;\r\n        const elementProps = me.constructor[elementProperties];\r\n        const options = elementProps?.get(name);\r\n        const attr = attributeNameForProperty(name, options);\r\n        if (attr !== undefined && options.reflect === true) {\r\n            const converter =\r\n                (options.converter)?.toAttribute !==\r\n                    undefined\r\n                    ? (options.converter)\r\n                    : defaultConverter;\r\n            const attrValue = converter?.toAttribute(value, options.type);\r\n\r\n            me.#reflectingProperty = name;\r\n            if (attrValue == null) {\r\n                me.removeAttribute(attr);\r\n            } else {\r\n                me.setAttribute(attr, attrValue);\r\n            }\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #saveInstanceProperties() {\r\n        const me = this;\r\n        const instanceProperties = new Map();\r\n        const elementProps = me.constructor[elementProperties];\r\n        for (const p of elementProps.keys()) {\r\n            if (Object.hasOwn(me, p)) {\r\n                instanceProperties.set(p, me[p]);\r\n                delete me[p];\r\n            }\r\n        }\r\n        if (instanceProperties.size > 0) {\r\n            me.#instanceProperties = instanceProperties;\r\n        }\r\n    }\r\n\r\n    #initialize() {\r\n        const me = this;\r\n        me.#updatePromise = new Promise((res) => me.enableUpdating = res);\r\n        me.#changedProperties = new Map();\r\n        me.#saveInstanceProperties();\r\n        me.requestUpdate();\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { ComboController } from \"./controllers/ComboController.mjs\";\r\nimport { DataController } from \"../../controllers/DataController.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { GSData } from \"../../base/GSData.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    #data = [];\r\n    #isConnected = false;\r\n    #controllers = undefined;\r\n    #comboController = undefined;\r\n    #dataController = undefined;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#comboController ??= new ComboController(this);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n        this.#controllers?.forEach((c) => c.hostUpdated?.());\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        const data = me.form?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        if (me.storage) me.#dataController ??= new DataController(me);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n        me.#isConnected = true;\r\n        me.on('reset', me.#onReset);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#isConnected = false;\r\n        me.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n        GSEvents.detachListeners(me);\r\n    }\r\n        \r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.#isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity();\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get form() {\r\n        return this.closest('gs-form');\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n    reset() {\r\n        GSDOM.resetSelect(this);\r\n    }\r\n\r\n    /**\r\n     * Find closest top element by CSS selector\r\n     * @param {String} query \r\n     * @returns {HTMLElement}\r\n     */\r\n    closest(query = '') {\r\n        return GSDOM.closest(this, query);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    #onReset(e) {\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * For DataController read callback\r\n     * \r\n     * @param {Array} data \r\n     */\r\n    onDataRead(data = []) {\r\n        const me = this;\r\n        const key = me.key;\r\n        me.#data = GSData.mergeArrays(data.map(o => o[key]), me.#data.map(o => o.value))\r\n               .map(v => {return {text:v, value:v}});;    \r\n        me.apply(me.#data);\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage');\r\n    }\r\n\r\n    /**\r\n     * Storage records key to use to generate unique list\r\n     */\r\n    get key() {\r\n        return GSAttr.get(this, 'key', 0);\r\n    }    \r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSLog } from \"../../base/GSLog.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { DataController } from \"../../controllers/DataController.mjs\";\r\nimport { GSData } from \"../../base/GSData.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    #data = [];\r\n    #isConnected = false;\r\n    #controllers = undefined;\r\n    #dataController = undefined;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n        this.#controllers?.forEach((c) => c.hostUpdated?.());\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        if (me.storage) me.#dataController ??= new DataController(me);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n        me.#isConnected = true;\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#isConnected = false;\r\n        me.#controllers?.forEach((c) => c.hostDisconnected?.());        \r\n        GSEvents.detachListeners(me);\r\n    }\r\n   \r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.#isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }    \r\n        \r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        try {\r\n            const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n            this.apply(data);\r\n        } catch (error) {\r\n            console.error('Failed to load data:', error);\r\n            GSLog.error(this, error);\r\n        }\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = { value: o };\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        if (o.text) {\r\n            seg.push('>')\r\n            seg.push(o.text);\r\n            seg.push('</option>')\r\n        } else {\r\n            seg.push('>')\r\n        }\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * For DataController read callback\r\n     * \r\n     * @param {Array} data \r\n     */\r\n    onDataRead(data = []) {\r\n        const me = this;\r\n        const key = me.key;\r\n        me.#data = GSData.mergeArrays(data.map(o => o[key]), me.#data.map(o => o.value))\r\n               .map(v => {return {value:v}});        \r\n        me.apply(me.#data);\r\n    }   \r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage');\r\n    }\r\n\r\n    /**\r\n     * Storage records key to use to generate unique list\r\n     */\r\n    get key() {\r\n        return GSAttr.get(this, 'key', 0);\r\n    }    \r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSData } from '../../base/GSData.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\nimport { AdoptedController } from '../../controllers/AdoptedController.mjs';\r\nimport { AttributeController } from '../../controllers/AttributeController.mjs';\r\nimport { CopySelectController } from './controllers/CopySelectController.mjs';\r\nimport { MaskController } from './controllers/MaskController.mjs';\r\nimport { MultipatternController } from './controllers/MultipatternController.mjs';\r\nimport { PasswordController } from './controllers/PasswordController.mjs';\r\nimport { NumberController } from './controllers/NumberController.mjs';\r\nimport { TextController } from './controllers/TextController.mjs';\r\nimport { ListController } from './controllers/ListController.mjs';\r\n\r\nimport { ReactiveInput } from './ReactiveInput.mjs';\r\nimport { ValidityController } from './controllers/ValidityController.mjs';\r\n\r\n/**\r\n * Extended HTMLInputElement with controllers support\r\n * adding various features such as masked input support \r\n */\r\nexport class GSInputElement extends ReactiveInput {\r\n\r\n  static properties = {\r\n    autocopy: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    autoselect: { type: Boolean },\r\n    reveal: { type: Boolean },\r\n    mask: { reflect: true },\r\n    multipattern: { type : Object},\r\n\r\n    block: { type: Boolean },\r\n    beep: { type: Boolean },\r\n    timeout: { type: Number }\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n\r\n  #copyselect;\r\n  #maskController;\r\n  #multiPatternController;\r\n  #passwordController;\r\n  #numberController;\r\n  #textController;\r\n  #listController;\r\n  #validityController;\r\n\r\n  constructor() {\r\n    super();\r\n    this.block = false;\r\n    this.beep = false;\r\n    this.timeout = 0;\r\n    this.#copyselect = new CopySelectController(this);\r\n    this.#validityController = new ValidityController(this);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.detachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n\r\n    if (changed.has('mask') && me.mask && me.type === 'text') {\r\n      me.placeholder = me.mask;\r\n      me.#maskController ??= new MaskController(me);\r\n    }\r\n\r\n    if (changed.has('multipattern')) {\r\n      const isMulti = Array.isArray(me.multipattern) && me.multipattern.length > 0;\r\n      const isType = ['text', 'password'].includes(me.type);\r\n      if (isMulti && isType) {\r\n        me.#multiPatternController ??= new MultipatternController(me);\r\n      }\r\n    }\r\n\r\n    if (me.list) {\r\n      me.#listController ??= new ListController(me);\r\n    }\r\n\r\n    switch (me.type) {\r\n      case 'text':\r\n        me.#textController ??= new TextController(me);\r\n        break;\r\n      case 'password':\r\n        me.#passwordController ??= new PasswordController(me);\r\n        break;\r\n      case 'number':\r\n        me.#numberController ??= new NumberController(me);\r\n        break;\r\n    }\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    if (me.autofocus) me.focus();    \r\n    const data = me.formComponent?.data;\r\n    if (data) GSDOM.fromObject2Element(me, data);\r\n    me.checkValidity();\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value) {\r\n    this.#adopted ??= new AdoptedController(me);\r\n    return this.#adopted.style(id, value);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  checkValidity() {\r\n    const me = this;\r\n    me.#validityController.reset();\r\n    super.checkValidity();\r\n    me.#multiPatternController?.checkValidity();\r\n    me.#maskController?.checkValidity();\r\n    super.checkValidity();\r\n    return me.validity.valid;\r\n  }\r\n\r\n  reportValidity() {\r\n    super.reportValidity();\r\n    this.#validityController.report();\r\n  }\r\n\r\n  reset() {\r\n    GSDOM.reset(this);\r\n  }\r\n\r\n  get formComponent() {\r\n    return this.closest('gs-form');\r\n  }\r\n\r\n  get owner() {\r\n    const own = GSDOM.root(this);\r\n    return GSDOM.unwrap(own);\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  get raw() {\r\n    return super.value;\r\n  }\r\n\r\n  get value() {\r\n    return this.#maskController ? this.#maskController.value : super.value;\r\n  }\r\n\r\n  set value(val) {\r\n    super.value = this.mask === val ? '' : val;\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSInputElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   */\r\n  static define(name, clazz) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, { extends: 'input' });\r\n    }\r\n  }\r\n\r\n  static {\r\n    GSInputElement.define('gs-ext-input', GSInputElement);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { CopySelectController } from \"./controllers/CopySelectController.mjs\";\r\nimport { ValidityController } from \"./controllers/ValidityController.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <textarea is=\"gs-ext-text\"></textarea>\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLTextAreaElement}\r\n */\r\nexport class GSTextArea extends HTMLTextAreaElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-text', GSTextArea, { extends: 'textarea' });\r\n        Object.seal(GSTextArea);\r\n    }\r\n\r\n    #isConnected = false;\r\n    #controllers = undefined;\r\n\r\n    #copyselect;\r\n    #validityController;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#copyselect = new CopySelectController(this);\r\n        this.#validityController = new ValidityController(this);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        this.#controllers?.forEach((c) => c.hostUpdated?.());\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        const data = me.form?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n        me.#isConnected = true;\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#isConnected = false;\r\n        me.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n        GSEvents.detachListeners(me);\r\n    }\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.#isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    checkValidity() {\r\n        const me = this;\r\n        me.#validityController.reset();\r\n        return super.checkValidity();\r\n    }\r\n\r\n    reportValidity() {\r\n        super.reportValidity();\r\n        this.#validityController.report();\r\n    }\r\n\r\n    reset() {\r\n        GSDOM.reset(this);\r\n    }\r\n    \r\n    get block() {\r\n        return this.hasAttribute('block');\r\n    }\r\n\r\n    get beep() {\r\n        return this.hasAttribute('beep');\r\n    }\r\n\r\n    get timeout() {\r\n        return GSAttr.getAsNum(this, 'timeout', 0);\r\n    }\r\n\r\n    set block(val = false) {\r\n        GSAttr.toggle(this, 'block', val);\r\n    }\r\n\r\n    set beep(val = false) {\r\n        GSAttr.toggle(this, 'beep', val);\r\n    }\r\n\r\n    set timeout(val = 0) {\r\n        return GSAttr.setAsNum(this, 'timeout', val);\r\n    }\r\n\r\n    get form() {\r\n        return this.closest('gs-form');\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n    /**\r\n     * Find closest top element by CSS selector\r\n     * @param {String} query \r\n     * @returns {HTMLElement}\r\n     */\r\n    closest(query = '') {\r\n        return GSDOM.closest(this, query);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        this.value = await GSLoader.loadSafe(url, 'GET', null, true);\r\n    }\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined, repeat } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSBreadcrumbElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n    color: { ...color },\r\n    divider: { reflect: true },\r\n    spacing: { reflect: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.spacing = 1;\r\n    me.divider = 'chevron-right';\r\n    me.#updateChildren();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#updateChildren();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<nav part=\"base\" class=\"breadcrumb\" @click=\"${me.#onClick}\" dir=\"${ifDefined(me.direction)}\"><slot>\r\n      ${repeat(me.data || [], (item) => item, (item) => html`\r\n        <gs-breadcrumb-item  \r\n        href=\"${item.href}\"\r\n        color=\"${item.color}\"\r\n        .data=${item}     \r\n        .active=${item.active}\r\n        .divider=\"${item.divider || me.divider}\"\r\n        .spacing=\"${item.spacing || me.spacing}\">\r\n          ${item.$text}\r\n        </gs-breadcrumb-item>\r\n      `)}\r\n    </slot></nav>`;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #updateChildren() {\r\n    const me = this;\r\n    me.queryAll('gs-breadcrumb-item').forEach(el => {\r\n      el.divider = me.divider;\r\n      el.spacing = me.spacing;\r\n      el.color = me.color;\r\n    });\r\n  }\r\n\r\n  #onClick(e) {\r\n    const el = e.target.closest('gs-bradcrumb-item');\r\n    el?.handle(e);\r\n  } \r\n\r\n  static {\r\n    this.define('gs-breadcrumb');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSBreadcrumbItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    color: { ...color },\r\n    data: { state: true, type: Object },\r\n    active: { reflect: true, type: Boolean },\r\n    divider: { state: true, type: Boolean },\r\n    spacing: { state: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div part=\"base\" class=\"breadcrumb-item ${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <span part=\"prefix\"><slot name=\"prefix\"></slot></span>        \r\n        ${me.#label}\r\n        <span part=\"suffix\"><slot name=\"suffix\"></slot></span>\r\n        <span part=\"separator\"><slot name=\"separator\">${me.#separator}</slot></span>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #label() {\r\n    const me = this;\r\n    if (me.active) return html`<slot></slot>`;\r\n    me.data.url = me.data.url || me.href;\r\n    me.data.part = 'label';\r\n    return GSLinklement.generate(me.data, {})\r\n  }\r\n\r\n  get #separator() {\r\n    const me = this;\r\n    return me.nextElementSibling && me.divider ? html`<gs-icon size=\"7\" color=\"${me.color}\" css=\"mx-${me.spacing}\" name=\"${me.divider}\"></gs-icon>` : '';\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.query('a', true), e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-breadcrumb-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport { classMap, createRef, ref, css, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSAttachment } from './Attachment.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSFileBoxElement extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    static properties = {\r\n        cssList: { attribute: 'css-list' },\r\n        cssLabel: { attribute: 'css-label' },\r\n        cssInput: { attribute: 'css-input' },\r\n\r\n        multiple: { reflect: true, type: Boolean },\r\n        directory: { reflect: true, type: Boolean },\r\n        name: {},\r\n        title: {},\r\n        accept: {},\r\n        filter: {},\r\n        maxFileSize: { reflect: true, attribute: 'max-file-size', type: Number }, // New property\r\n    }\r\n\r\n    #listEl = createRef();\r\n    #fileEl = createRef();\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = GSFileBoxElement.CSS;\r\n        this.cssInput = 'd-none';\r\n        this.multiple = true;\r\n        this.title = GSFileBoxElement.TITLE;\r\n        this.filter = '^image\\/(gif|png|jpeg)$'\r\n        this.directory = false;\r\n        this.maxFileSize = 0; // Default to 0, meaning no limit\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div part=\"border\" class=\"${classMap(me.renderClass())}\"\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @click=\"${me.#onClick}\"\r\n            @dragenter=\"${me.#onDragenter}\"\r\n            @dragover=\"${me.#onDragenter}\"\r\n            @dragleave=\"${me.#onDragleave}\"\r\n            @drop=\"${me.#onDrop}\"\r\n            @paste=\"${me.#onPaste}\"\r\n            @change=\"${me.#onChange}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.translate(me.title)}</label>\r\n            <input ${ref(me.#fileEl)}  part=\"input\" \r\n                type=\"file\" accept=\"${me.accept}\" \r\n                class=\"${me.cssInput}\" \r\n                name=\"${me.name}\" \r\n                id=\"${me.name}\" \r\n                ${me.multiple ? \"multiple\" : \"\"} \r\n                ${me.directory ? \"directory webkitdirectory\" : \"\"}>\r\n            <pre ${ref(me.#listEl)} part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    get listEl() {\r\n        return this.#listEl.value;\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.#fileEl.value;\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        // Filter out files that exceed the maxFileSize\r\n        const validAttachments = me.maxFileSize > 0 \r\n            ? attachments.filter(a => a.file.size <= me.maxFileSize)\r\n            : attachments;\r\n\r\n        const accepted = me.emit('accept', { attachments: validAttachments }, true, false, true);\r\n        if (accepted && validAttachments.length) {\r\n            me.#accept(validAttachments);\r\n            me.emit('accepted', { attachments: validAttachments }, true);\r\n        }\r\n    }\r\n\r\n    static styles = css`\r\n        .dash {\r\n            border-style: var(--gs-fieldbox-border, dashed) !important;\r\n            border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n        }\r\n        input[type=file] {\r\n            color : var(--gs-fieldbox-color, transparent);\r\n        } \r\n        input[type=file]::file-selector-button {}             \r\n        input[type=file]::file-selector-button:hover {}`;\r\n\r\n    static {\r\n        this.define('gs-filebox');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/TimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSTimeFormat extends GSElement {\r\n\r\n    static properties = {\r\n        interval: {reflect:true, type:Number},\r\n        language: {reflect:true},\r\n    }\r\n\r\n    #id = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.interval = 1;\r\n        this.language = GSUtil.language;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const date = new Date();\r\n        return date.toLocaleTimeString(this.language);\r\n    }    \r\n\r\n    start() {\r\n        const me = this;\r\n        if (me.interval >0 && me.#id === 0) {\r\n            me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n        } else {\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n        this.#id = 0;\r\n    }\r\n    \r\n    #update() {\r\n       requestAnimationFrame(() => this.requestUpdate());\r\n    }\r\n\r\n    static {\r\n        this.define('gs-time-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/DateFormat\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDate } from '../../base/GSDate.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSDateFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        format: {},\r\n        language: {},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = navigator.language;\r\n        this.value = new Date();\r\n    }\r\n\r\n    renderUI() {\r\n        return this.result;\r\n    }    \r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.date;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.language, me.dataset).format(val);\r\n    }\r\n\r\n    get date() {\r\n        const me = this;\r\n        const o = Date.parse(me.value || new Date());\r\n        const date = new GSDate(o);\r\n        date.language = me.language;\r\n        return date;\r\n    }\r\n\r\n\r\n    static {\r\n        this.define('gs-date-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/YearFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSYearFormat extends GSElement {\r\n\r\n    static properties = {\r\n        offset: {type :Number},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n    }\r\n\r\n    renderUI() {\r\n        return this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        this.define('gs-year-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/CurrencyFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSCurrencyFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        currency: {},\r\n        language: {},\r\n    }\r\n\r\n    renderUI() {\r\n        return this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.language, me.#options).format(me.value);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-currency-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCacheStyles } from \"../../base/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepElement class\r\n * @module components/steps/GSStepElement\r\n */\r\n\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepElement extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-primary';\r\n    static COMPLETED = 'text-bg-secondary';\r\n\r\n    static ICON_CSS = 'border rounded-circle fs-1';\r\n    static TITLE_CSS = 'mb-0 fs-6 mt-3 fw-bold';\r\n\r\n    static properties = {\r\n        title: {},\r\n        icon: {},\r\n        color: {},\r\n        iconCSS: { attribute: 'icon-css' },\r\n        titleCSS: { attribute: 'title-css' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const clazz = GSStepElement;\r\n        this.icon = clazz.INACTIVE;\r\n        this.iconCSS = clazz.ICON_CSS;\r\n        this.titleCSS = clazz.TITLE_CSS;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"step d-block w-100 text-center mb-4\"  dir=\"${ifDefined(me.direction)}\">\r\n            <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color || GSStepElement.INACTIVE}\">\r\n                    ${me.#renderIcon()}\r\n                </div>\r\n            </div>\r\n            <div class=\"step-title ${me.titleCSS}\">${me.translate(me.title)}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    #renderIcon() {\r\n        return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-step');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepsElement class\r\n * @module components/steps/GSStepsElement\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSStepStyle } from \"./StepStyle.mjs\";\r\nimport GSStepElement from './Step.mjs';\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepsElement extends GSElement {\r\n\r\n    static CSS = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n\r\n    #index = -1;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldUpdate(changedProperties) { \r\n        return this.steps.length > 0;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\"><slot></slot></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        return this.mapCSS(GSStepsElement.CSS, super.renderClass());\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get length() {\r\n        return this.steps.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length - 1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isLast) return false;\r\n        if (me.#index > - 1) me.current.color = GSStepElement.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStepElement.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStepElement.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStepElement.SELECTED;\r\n        });\r\n    }\r\n\r\n    static {\r\n        GSStepStyle.style;\r\n        this.define('gs-steps', GSStepsElement);\r\n    }\r\n\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSAttr } from '../../base/GSAttr.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\n\r\nexport class GSNotificationElement extends GSElement {\r\n\r\n    static TOP_START = \"position-fixed top-0 start-0\";\r\n    static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n    static TOP_END = \"position-fixed top-0 end-0\";\r\n\r\n    static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n    static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n    static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n    \r\n    static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n    static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n    static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n    static DEFAULT = GSNotificationElement.BOTTOM_END;\r\n\r\n    static properties = {\r\n        position: { reflect: true },\r\n        native: { reflect: true, type: Boolean }\r\n    };\r\n\r\n    #list = new Set();\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = 'p-3';\r\n        this.position = GSNotificationElement.DEFAULT;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n            class=\"toast-container z-10k ${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        return me.mapCSS(me.#positionCSS, super.renderClass());\r\n    }    \r\n\r\n    get #positionCSS() {\r\n        const clazz = GSNotificationElement;\r\n        const val = this.position || clazz.DEFAULT;\r\n        return val.indexOf('_') > 0 && clazz[val] ? clazz[val] : val;\r\n    }\r\n\r\n    clear() {\r\n        this.queryAll('gs-toast').forEach(el => el.dismiss());\r\n    }\r\n\r\n    info(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n    }\r\n\r\n    success(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n    }\r\n\r\n    warn(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n    }\r\n\r\n    danger(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n    }\r\n\r\n    primary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n    }\r\n\r\n    secondary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n    }\r\n\r\n    dark(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n    }\r\n\r\n    light(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n    }\r\n\r\n    /**\r\n     * Main function to show notification. \r\n     * It has support for Bootstrap based and web based notifications.\r\n     * \r\n     * @async\r\n     * @param {String} title Notification title\r\n     * @param {String} message Notification message\r\n     * @param {String} css CSS styling (web only)\r\n     * @param {Boolean} closable Can user close it (web only)\r\n     * @param {Number} timeout Timeout after which to close notification  (default 2 sec)\r\n     * @param {Number} delay Timeout after which to show notification (default 1 sec)\r\n     * @param {Object} options Options for native Notification\r\n     * @returns {Promise<Notification|GSToast>}\r\n     */\r\n    async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n        if (!message) return;\r\n        const me = this;\r\n        if (me.native) {\r\n            let sts = await GSNotificationElement.requestPermission();\r\n            if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n            if (sts) return sts;\r\n        }\r\n        return me.#showWeb(title, message, css, closable, timeout, delay);\r\n    }\r\n\r\n    #showWeb(title, message, css, closable, timeout, delay) {\r\n        const me = this;\r\n        const tpl = `<gs-toast css=\"${css}\"  opened ${closable ? 'closable' : ''} timeout=\"${timeout}\"  delay=\"${delay}\" message=\"${message}\" title=\"${title}\" language=\"${me.language}\" ></gs-toast>`;\r\n        const el = GSDOM.parse(tpl, true);\r\n        requestAnimationFrame(async () => {\r\n            await me.#delay(delay);\r\n            const toast = me.#dialogToast;\r\n            if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n            toast.appendChild(el);\r\n        });\r\n        return el;\r\n    }\r\n\r\n    async #showNative(title, message, timeout, delay, options = {}) {\r\n        const me = this;\r\n        await me.#delay(delay);\r\n        options.body = options.body || message;\r\n        const notification = new Notification(title, options);\r\n        me.#list.add(notification);\r\n        const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n        notification.addEventListener('close', callback);\r\n        if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n        return notification;\r\n    }\r\n\r\n    get #dialogToast() {\r\n        const dlg = customElements.get('gs-dialog')?.top;\r\n        return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n    }\r\n\r\n    async #delay(delay = 0) {\r\n        if (GSUtil.isNumber(delay) && delay > 0) await GSUtil.timeout(delay * 1000);\r\n    }\r\n\r\n    #clearNative() {\r\n        const me = this;\r\n        me.notification.close();\r\n        me.owner.#list.delete(me.notification);\r\n        if (me.notification.iid) clearTimeout(me.notification.iid);\r\n    }\r\n\r\n    /**\r\n     * Clear all triggered notifications\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n        me.#list.forEach(nn => nn.close());\r\n        me.#list.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is supported\r\n     * @returns {Boolean} \r\n     */\r\n    static get isNativeSupported() {\r\n        return \"Notification\" in self;\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is allowed\r\n     * @returns {Boolean} \r\n     */\r\n    static get isGranted() {\r\n        return Notification.permission === \"granted\";\r\n    }\r\n\r\n    /**\r\n     * Request useage for browser native notification\r\n     * \r\n     * @async\r\n     * @returns {Promise<boolean>} Return granted status\r\n     */\r\n    static async requestPermission() {\r\n        const clazz = GSNotificationElement;\r\n        if (!clazz.isNativeSupported) return false;\r\n        if (!clazz.isGranted) await Notification.requestPermission();\r\n        return clazz.isGranted;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-notification');\r\n    }\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNotificationElement } from './Notification.mjs';\r\n\r\nexport class GSToastElement extends GSElement {\r\n\r\n    static properties = {\r\n        closable: { reflect: true, type: Boolean },\r\n        opened: { reflect: true, type: Boolean },\r\n        message: { reflect: true },\r\n        title: { reflect: true },\r\n        delay: { reflect: true, type: Number },\r\n        timeout: { reflect: true, type: Number }\r\n    }\r\n\r\n    #pending = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.timeout = 2;\r\n        me.delay = 2;\r\n        me.auto = true; \r\n    }\r\n\r\n    shouldUpdate(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.delay > 0 && me.opened && visibilityChange) {\r\n            me.#pending = true;\r\n            me.#pendingUpdate();\r\n        }\r\n        return me.#validParent && (!me.#pending);\r\n    }\r\n\r\n    #isVisibilityChanged(changedProperties) {\r\n        return changedProperties.has('opened');\r\n    }\r\n\r\n    async #pendingUpdate() {\r\n        const me = this;\r\n        await GSUtil.timeout(me.delay * 1000);\r\n        me.#pending = false;\r\n        me.requestUpdate();\r\n    }\r\n\r\n    async updated(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.timeout > 0 && me.opened) {\r\n            await GSUtil.timeout(me.timeout * 1000);\r\n            me.opened = false;\r\n        } else if (visibilityChange && !me.opened) { \r\n            me.remove();\r\n        };\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return me.title ? me.#renderWithHeader() : me.#renderSimple();\r\n    }\r\n\r\n    #renderWithHeader() {\r\n        const me = this;\r\n        return html`\r\n        <div dir=\"${ifDefined(me.direction)}\"\r\n            class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n            <div class=\"toast-header\">\r\n                ${me.translate(me.title)}\r\n                <slot name=\"header\"></slot>\r\n                ${me.closable ? me.#button : ''}\r\n            </div>\r\n            <div class=\"toast-body\">\r\n                ${me.translate(me.message)}\r\n                <slot name=\"body\"></slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    #renderSimple() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.translate(me.message)}\r\n              <slot name=\"body\"></slot>\r\n              </div>\r\n              ${me.closable ? me.#button : ''}\r\n          </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': me.opened,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    dismiss() {\r\n        this.opened = false;\r\n    }\r\n\r\n    get #button() {\r\n        const me = this;\r\n        return html`<button type=\"button\" class=\"btn-close me-2 m-auto\" @click=\"${me.dismiss}\"></button>`;\r\n    }\r\n\r\n    get #validParent() {\r\n        const isToast = GSDOM.hasClass(this.parentElement, 'toast-container');\r\n        const isNotify = this.parentElement instanceof GSNotificationElement;\r\n        return isToast || isNotify;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-toast');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller managing data tree navigation.\r\n * Controller is added to every gs-tree-node and \r\n * reacts on Tree node changes to update UI\r\n */\r\nexport class AbstractTreeController {\r\n\r\n    #host;\r\n    #node;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        host.addController(me);\r\n    }\r\n    \r\n    hostConnected() {\r\n        const me = this;\r\n        me.#node = me.#host.node;\r\n        me.#addNodeController(me);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        const me = this;\r\n        me.#removeNodeController(me);\r\n        me.#host.removeController(me);\r\n    }\r\n\r\n    // before rendering\r\n    hostUpdate() {\r\n        const me = this;\r\n        const oldNode = me.#node;\r\n        me.#node = me.#host.node;\r\n        if (oldNode != me.#node) {\r\n            me.#removeNodeController(me);\r\n            me.#addNodeController(me);\r\n        }\r\n    }\r\n\r\n    // link Tree node callbacks with controller and component\r\n    #addNodeController(controller) {\r\n        this.#host.node?.addController?.(controller);\r\n    }\r\n\r\n    // unlink Tree node callbacks with controller and component\r\n    #removeNodeController(controller) {\r\n        this.#node?.removeController?.(controller);\r\n    }\r\n\r\n    host(node) {\r\n        return node[Symbol.for('gs-element')] || this.#host;\r\n    }\r\n\r\n    match(node) {\r\n        const host = this.host(node);\r\n        return host?.node === node;\r\n    }\r\n\r\n    get store() {\r\n        return this.#host.dataController?.store;\r\n    }\r\n\r\n    requestUpdate(node) {\r\n        if (this.match(node)) this.host(node).requestUpdate();\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { AbstractTreeController } from './AbstractTreeController.mjs';\r\n\r\n/**\r\n * Controller managing data TreeNode callbacks to reflect UI.\r\n */\r\nexport class TreeController extends AbstractTreeController {\r\n\r\n    constructor(host) {\r\n        super(host);\r\n    }\r\n\r\n    #toggleState(node, state = false) {\r\n        const el = this.host(node);\r\n        if (el) el.loading = state;\r\n    }\r\n\r\n    // Tree controller callbacks\r\n    onLoad(node) {\r\n        this.#toggleState(node, true);\r\n    }\r\n\r\n    onRefresh(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onAppend(node, addedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onInsert(node, insertedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onExpand(node) {\r\n        const store = this.store;\r\n        if (store) {\r\n            store.onExpand(node);\r\n        } else {\r\n            this.requestUpdate(node);\r\n        }\r\n    }\r\n\r\n    onCollapse(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onFocusChanged(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onSelectionChanged(node, selectedNode) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onRemove(node) {\r\n        if (this.match(node)) this.host(node).remove();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../../lib.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSTreeItemElement extends GSElement {\r\n\r\n  /*\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n    */\r\n\r\n  static properties = {\r\n    loading: { state: true },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('node')) this.node[Symbol.for('gs-element')] = this;\r\n  }\r\n\r\n  updated() {\r\n    if (this.focused) this.query('a')?.focus();\r\n    this.dataset.visible = this.visible;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const opt = me.value || {};\r\n    opt.tooltip = me.translate(opt.tooltip)\r\n    opt.title = me.translate(opt.title)\r\n    const before = me.loading ? me.#renderSpinner(node.level) : me.#renderIcon(node.level);\r\n    return GSLinklement.generate(opt, me.renderClass(), before);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const opt = {\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      'user-select-none  ': true,\r\n      'border-0': me.#border ? false : true,\r\n      'gs-hide': !me.visible\r\n    };\r\n    return me.mapCSS(me.#cssFocus, me.mapCSS(me.#cssSelected, opt, me.selected && !me.multiselect), me.focused);\r\n  }\r\n\r\n  /**\r\n   * Toggle folder\r\n   */\r\n  toggle() {\r\n    this.opened ? this.close() : this.open();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open() {\r\n    this.#status(true);\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   */\r\n  close() {\r\n    this.#status(false);\r\n  }\r\n\r\n  /**\r\n   * Toggle selection state\r\n   */\r\n  toggleSelection() {\r\n    this.select(!this.selected);\r\n  }\r\n\r\n  focus(val = true) {\r\n    if (val) super.focus();\r\n    this.focused = val == true;\r\n  }\r\n\r\n  select(val = true) {\r\n    this.selected = val == true;\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.#link, e);\r\n    /*\r\n    const me = this;\r\n    const isIcon = e.target.tagName === 'GS-ICON';\r\n    if (me.multiselect && isIcon) {\r\n      me.toggleSelection();\r\n    } else {\r\n      GSAttributeHandler.process(me.#link, e);\r\n    }\r\n    */\r\n  }\r\n\r\n  get #link() {\r\n    return this.query('a');\r\n  }\r\n\r\n  get isLeaf() {\r\n    return this.node?.isLeaf;\r\n  }\r\n\r\n  get isFolder() {\r\n    return !this.isLeaf;\r\n  }\r\n\r\n  get key() {\r\n    return this.node?.key;\r\n  }\r\n\r\n  get value() {\r\n    return this.node?.value || {};\r\n  }\r\n\r\n  get level() {\r\n    return this.node?.level || -1;\r\n  }\r\n\r\n  get focused() {\r\n    return this.node?.focused;\r\n  }\r\n\r\n  get visible() {\r\n    const parent = this.parent;\r\n    return parent?.opened || parent?.level === -1;\r\n  }\r\n\r\n  get parent() {\r\n    return this.node?.parent;\r\n  }\r\n\r\n  get parentItem() {\r\n    const item = this.parent?.[Symbol.for('gs-element')];\r\n    return item instanceof GSTreeItemElement ? item : undefined;\r\n  }\r\n\r\n  set focused(val) {\r\n    val = val === true;\r\n    this.node.focused = val;\r\n  }\r\n\r\n  get selected() {\r\n    return this.node?.selected;\r\n  }\r\n\r\n  set selected(val) {\r\n    val = val === true;\r\n    const me = this;\r\n    if (me.isFolder && me.owner.leaf) val = false;\r\n\r\n    if (me.multiselect) {\r\n      if (val) {\r\n        me.node.selectAll();\r\n      } else {\r\n        me.node.deselectAll();\r\n      }\r\n    } else {\r\n      me.node.selected = val;\r\n    }\r\n  }\r\n\r\n  get opened() {\r\n    return this.node?.opened;\r\n  }\r\n\r\n  set opened(val) {\r\n    this.#status(val === true);\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tree');\r\n  }\r\n\r\n  get multiselect() {\r\n    return this.owner.multiselect;\r\n  }\r\n\r\n  get #cssFocus() { return this.owner.cssFocus || 'focus-ring'; }\r\n  get #cssSelected() { return this.owner.cssSelected || 'active'; }\r\n  get #cssCheck() { return this.owner.cssCheck || ''; }\r\n  get #checkColor() { return this.owner.checkColor || 'secondary'; }\r\n  get #checkColorSelected() { return this.owner.checkColorSelected || 'primary'; }\r\n\r\n  get #border() {\r\n    return this.value?.border === true || this.owner.border === true;\r\n  }\r\n\r\n  get #icon() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const data = me.value;\r\n    const ui = me.owner;\r\n    let itemIco = data.icon || ui.itemIcon;\r\n    if (node.isFolder) itemIco = node.opened ? (data.openIcon || ui.openIcon) : (data.closeIcon || ui.closeIcon);\r\n    return itemIco;\r\n  }\r\n\r\n  #renderIndent(level) {\r\n    return html`<gs-indent size=\"${level}\"></gs-indent>`;\r\n  }\r\n\r\n  #renderSpinner(level) {\r\n    return html`${this.#renderIndent(level)}<gs-spinner small></gs-spinner>`;\r\n  }\r\n\r\n  #renderIcon(level) {\r\n    return html`${this.#renderIndent(level)}${this.#renderMulti()}<gs-icon size=\"5\" name=\"${this.#icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderMulti() {\r\n    const me = this;\r\n    if (!me.multiselect) return '';\r\n    const color = me.selected ? me.#checkColorSelected : me.#checkColor;\r\n    const icon = me.node.isPartialySelected ? 'dash-square-fill' : me.selected ? 'check-square-fill' : 'square';\r\n    return html`<gs-icon size=\"6\" data-type=\"state\" \r\n                css=\"me-1 text-${color} ${me.#cssCheck}\"\r\n                name=\"${icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #status(val = false) {\r\n    const me = this;\r\n    if (me.node?.isFolder) {\r\n      me.node.opened = val;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, css, createRef, ref, repeat, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { TreeController } from './controllers/TreeController.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSTreeElement extends GSElement {\r\n\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n\r\n  static shared = {\r\n    itemIcon: { attribute: 'icon-item' },\r\n    closeIcon: { attribute: 'icon-close' },\r\n    openIcon: { attribute: 'icon-open' },\r\n    cssCheck: { attribute: 'css-check' },\r\n    cssFocus: { attribute: 'css-focus' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    checkColor: { attribute: 'check-color', ...color },\r\n    checkColorSelected: { attribute: 'check-color-selected', ...color },\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode },\r\n    border: { type: Boolean, reflect: true },\r\n    guide: { type: Boolean, reflect: true },\r\n    leaf: { type: Boolean, reflect: true },\r\n    multiselect: { type: Boolean, reflect: true },\r\n    circular: { type: Boolean, reflect: true },\r\n    ...GSTreeElement.shared\r\n  }\r\n\r\n  // GS-ITEM attributes mapping\r\n  static options = {\r\n    ...GSTreeElement.shared,\r\n    css: {},\r\n    icon: {},\r\n    color: {},\r\n    title: {},\r\n    tooltip: {},\r\n    opened: { type: Boolean },\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  #queued = false;\r\n  #listRef = createRef();\r\n\r\n  #controller = null;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.leaf = false;\r\n    me.multiselect = false;\r\n    me.data = GSDOM.toJson(me, true, true).items;\r\n    me.node = new TreeNode(null, { '#tagName': this.tagName }, null, -1);\r\n    me.itemIcon = 'file-earmark';\r\n    me.closeIcon = 'folder'; // caret-right; chevron-right\r\n    me.openIcon = 'folder2-open'; // caret-down; chevron-down\r\n    me.cssSelected = 'active'; // fw-bold\r\n    me.cssFocus = 'focus-ring';\r\n    me.node[Symbol.for('gs-element')] = me;\r\n    me.#controller = new TreeController(me);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n          class=\"treeview ${classMap(me.renderClass())}\"          \r\n          @click=\"${me.#onClick}\"\r\n          @keydown=\"${me.#onKeyDown}\"\r\n          @keyup=\"${me.#onKeyUp}\">\r\n          <div class=\"list-group\" ${ref(me.#listRef)}>\r\n          ${repeat(me.node.walk(me.node, false, false), (node) => node.key, (node) => html`\r\n            <gs-tree-item .node=\"${node}\"></gs-tree-item>\r\n          `)}\r\n          </div>    \r\n        </div>`;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data') && me.data && !me.#queued) {\r\n      me.#queued = true;\r\n      queueMicrotask(() => {\r\n        me.node.clear();\r\n        me.node.fromJSON(me.data);\r\n        me.#queued = false;\r\n        me.requestUpdate();\r\n      });\r\n    }\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('multiselect') && !this.multiselect) this.node?.deselectAll();\r\n    this.node.multi = this.multiselect;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    if (data instanceof TreeNode) {\r\n      if (data.root !== this.node) this.node = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n\r\n  next(expand = false) {\r\n    const me = this;\r\n    let item = me.nextItem;\r\n    if (!item & me.circular) item = me.#first;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (expand && me.focused?.isFolder) me.focused.open();\r\n    }\r\n    return me.focused;\r\n  }\r\n\r\n  previous(collapse = false) {\r\n    const me = this;\r\n    let item = me.previousItem;\r\n    if (!item & me.circular) item = me.#last;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (item.isFolder && collapse) item.close();\r\n    }\r\n    return me.focused;\r\n\r\n  }\r\n\r\n  expandAll() {\r\n    this.node?.expandAll();\r\n  }\r\n\r\n  collapseAll() {\r\n    this.node?.collapseAll();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open(path) {\r\n    const me = this;\r\n    me.focused?.open();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   * TODO - path navigation\r\n   */\r\n  close(path) {\r\n    const me = this;\r\n    me.focused?.close();\r\n  }\r\n\r\n  clear() {\r\n    this.node?.clear();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  reload() {\r\n    this.clear();\r\n    this.dataController?.read();\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host(this.node.selectedNodes());\r\n  }\r\n\r\n  get focused() {\r\n    return this.#host(this.node.focusedNode());\r\n  }\r\n\r\n  /**\r\n   * Previous visible ge-node-item\r\n   */\r\n  get previousItem() {\r\n    return this.focused?.node.find(n => n?.visible, true, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  /**\r\n   * Next visible ge-node-item\r\n   */\r\n  get nextItem() {\r\n    return this.focused?.node.find(n => n?.visible, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  get #list() {\r\n    return this.#listRef.value;\r\n  }\r\n\r\n  get #first() {\r\n    return this.#list.firstElementChild;\r\n  }\r\n\r\n  get #last() {\r\n    return this.#list.lastElementChild;\r\n  }\r\n\r\n  #host(node) {\r\n    if (Array.isArray(node)) {\r\n      return node.map(n =>n[Symbol.for('gs-element')]).filter( n=> n);\r\n    }\r\n    return node?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  #onClick(e) {\r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const isIcon = icon?.dataset.type === 'state';\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!el.node) return;\r\n\r\n    const me = this;\r\n\r\n    if (me.multiselect) {\r\n      if (isIcon) el.toggleSelection();\r\n    } else {\r\n      el.select(true);\r\n    }\r\n\r\n    const expandable = (me.multiselect && !isIcon) || (!me.multiselect);\r\n    if (el.isFolder && expandable) el.toggle();\r\n\r\n    el.focus();\r\n    el.handle(e);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    const me = this;\r\n    const el = me.focused;\r\n    if (!el) return;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n        me.next();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (el.isFolder) {\r\n          if (el.opened) {\r\n            me.close();\r\n          } else {\r\n            (el.parentItem || el)?.focus();\r\n          }\r\n        } else {\r\n          me.previous();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if (el.isFolder && !el.opened) {\r\n          me.open();\r\n        } else {\r\n          me.next();\r\n        }\r\n        break;\r\n      case 'Enter':\r\n          if (el.isFolder) {\r\n            el.toggle();\r\n          }        \r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!(el?.node)) return;\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        el.handle(e);\r\n        break;\r\n      case 'Tab':\r\n        el.focus();\r\n        break;\r\n      case 'Space':\r\n        el.select(this.multiselect ? !el.selected : true);\r\n        el.focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading ServiceWorkkerElement class\r\n * @module components/ServiceWorkkerElement\r\n */\r\n\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\n/**\r\n * An easy way to register a service worker in the browser.\r\n * @class\r\n * @extends { GSlement }\r\n */\r\nexport class ServiceWorkkerElement extends GSElement {\r\n\r\n    static properties = {\r\n        src: {},\r\n        scope: {},\r\n        module: { type: Boolean, default: false },\r\n        trace: { type: Boolean, reflect: true, default: false },\r\n        disabled: { type: Boolean, reflect: true, default: false }\r\n    }\r\n\r\n    #registration = false\r\n    #workerMessage = null;\r\n    #messageChannel = null;\r\n\r\n    #nocache = false;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#workerMessage = me.#onWorkerMessage.bind(me);\r\n        me.#load();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#unload();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('trace')) {\r\n            me.#ServiceWorkerTraceUpdate();\r\n        }\r\n        if (changed.has('disabled')) {\r\n            me.disabled ? me.#unload() : me.#load();\r\n        }\r\n        super.willUpdate(changed);\r\n    }\r\n\r\n    /**\r\n     * Returns true if the service worker is available in the browser and the src is a valid URL.\r\n     */\r\n    get available() {\r\n        const me = this;\r\n        return 'serviceWorker' in navigator && me.src && GSUtil.isURL(me.src);\r\n    }\r\n\r\n    /**\r\n     * Returns the service worker registration object.\r\n     */\r\n    get registration() {\r\n        return this.#registration;\r\n    }\r\n\r\n    /**\r\n     * Request the service worker to clear its cache.\r\n     * @returns \r\n     */\r\n    clearCache() {\r\n        return this.postMessage(\"CLEAR_CACHE\");\r\n    }\r\n\r\n    /**\r\n     * Send a message to the service worker.\r\n     * @param {*} message The message to send to the service worker.\r\n     * @returns {boolean} Returns true if the message was sent, false if the service worker is not active or not registered.\r\n     */\r\n    postMessage(message) {\r\n        const me = this;\r\n        const sts = GSUtil.nonNull(message) && me.isLoaded;\r\n        if (sts) {\r\n            if (me.#messageChannel) {\r\n                me.#messageChannel.port1.postMessage(message);\r\n            } else {\r\n                me.#registration?.active?.postMessage(message);\r\n            }\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Method to handle messages from the service worker.\r\n     * Override this method to handle messages from the service worker.\r\n     * The default implementation does nothing.\r\n     * @param {Event} event \r\n     * @returns {boolean} Return false to stop the event propagation, true to continue.\r\n     */\r\n    onMessage(event) {\r\n        me.#trace('ServiceWorker message received:', event);\r\n        return true;\r\n    }\r\n\r\n    #onWorkerMessage = (event) => {\r\n        const me = this;\r\n        if (event.data) {\r\n            if (me.onMessage(event)) {\r\n                me.emit('message', event.data, true, true, true);\r\n            }\r\n        } else {\r\n            me.#trace('ServiceWorker message is empty:', event);\r\n        }\r\n    }\r\n\r\n    #initChannel() {\r\n        const me = this;\r\n        if (me.#registration?.active) {\r\n            me.#messageChannel = new MessageChannel();\r\n            me.#messageChannel.port1.onmessage = me.#workerMessage;\r\n            me.#ServiceWorkerTraceUpdate();\r\n            me.#registration.active.postMessage('INIT_PORT', [me.#messageChannel.port2]);\r\n            //me.emit('activated', isActive, true, true, true);\r\n        }\r\n    }\r\n\r\n    #ServiceWorkerTraceUpdate() {\r\n        const me = this;\r\n        me.#registration?.active?.postMessage(me.trace ? 'TRACE_ON' : 'TRACE_OFF');\r\n    }\r\n\r\n    // Show a notification to the user that a new version of the app is available\r\n    async #invokeServiceWorkerUpdateFlow(registration) {\r\n        return registration?.waiting?.postMessage('NOTIFICATION_WAITING');\r\n    }\r\n\r\n    // detect Service Worker update available and wait for it to become installed\r\n    #monitorServiceWorkerUpdate(registration) {\r\n        const me = this;\r\n        registration.addEventListener('updatefound', () => {\r\n            // wait until the new Service worker is actually installed (ready to take over)\r\n            registration.installing?.addEventListener('statechange', () => {\r\n                if (registration.waiting) {\r\n                    // if there's an existing controller (previous Service Worker), show the prompt\r\n                    if (navigator.serviceWorker.controller) {\r\n                        me.#invokeServiceWorkerUpdateFlow(registration);\r\n                    } else {\r\n                        // otherwise it's the first install, nothing to do\r\n                        me.#trace('Service Worker initialized for the first time');\r\n                    }\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    // detect controller change and refresh the page\r\n    #monitorController() {\r\n        let refreshing = false;\r\n        navigator.serviceWorker.addEventListener('controllerchange', () => {\r\n            if (!refreshing) {\r\n                window.location.reload();\r\n                refreshing = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    async #unload() {\r\n        const me = this;\r\n        GSLoader.NO_CACHE = me.#nocache;\r\n        if (me.disabled) {\r\n            await me.#registration?.unregister();\r\n        }\r\n        me.#messageChannel?.port1.close();\r\n        me.#messageChannel?.port2.close();\r\n        me.#messageChannel = null;\r\n        me.#registration = null;\r\n    }\r\n\r\n    // Load the service worker\r\n    async #load() {\r\n        const me = this;\r\n        if (me.disabled) return;\r\n        me.#nocache = GSLoader.NO_CACHE;\r\n        GSLoader.NO_CACHE = false;\r\n\r\n        if (!me.available) {\r\n            console.warn('Service Worker is not available in this browser or src is not valid.');\r\n            return;\r\n        }        \r\n        try {\r\n            const opt = me.scope ? { scope: me.scope } : {};\r\n            if (me.module) opt.type = 'module';\r\n            me.#registration = await navigator.serviceWorker.register(me.src, opt);\r\n            me.#trace('ServiceWorker registration started:', me.#registration);\r\n\r\n            me.#monitorController();\r\n            me.#invokeServiceWorkerUpdateFlow(me.#registration);\r\n            me.#monitorServiceWorkerUpdate(me.#registration);\r\n            me.#initChannel(me.#registration);\r\n\r\n            me.#trace('ServiceWorker registration successful with scope: ', me.#registration.scope);\r\n\r\n        } catch (error) {\r\n            me.#registration = false;\r\n            console.error('Service Worker registration failed:', error);\r\n        }\r\n        me.emit('loaded', me.isLoaded, true, true, true);\r\n    }\r\n\r\n    #trace(message, data = '') {\r\n        if (this.trace) {\r\n            console.log(message, data);\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-service-worker');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\n\r\nexport class GSChartElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/bootstrap-lit';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        config: {},\r\n        storage: {},\r\n        height: { type: Number },\r\n        width: { type: Number },\r\n        data: { type: Array },\r\n        options: { type: Object },\r\n    }\r\n\r\n    #canvasRef = createRef();\r\n    #chart = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.height = 0;\r\n        this.width = 0;\r\n        GSChartElement.#init();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#waitInit();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    shouldUpdate(changed) {\r\n        return GSChartElement.#isChart;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#render();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        const me = this;\r\n        if (changed.has('url') || changed.has('config')) me.#render();\r\n        if (changed.has('data') || changed.has('options')) me.#renderData(me.data, me.options);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<canvas ${ref(me.#canvasRef)} \r\n                class=\"${classMap(me.renderClass())}\"\r\n                width=\"${ifDefined(me.width > 0 ? me.width : false)}\" \r\n                height=\"${ifDefined(me.height > 0 ? me.height : false)}\" >\r\n            </canvas>`;\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.#canvasRef.value;\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    refresh() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    updateChart(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n        const me = this;\r\n        try {\r\n            const options = await GSLoader.loadSafe(me.config, 'GET', null, true, {});\r\n            const data = await GSLoader.loadSafe(me.url, 'GET', null, true, []);\r\n            me.data = data;\r\n            me.options = options;\r\n        } catch (error) {\r\n            GSLog.error(null, error);\r\n        }\r\n    }\r\n\r\n    #renderData(data, options) {\r\n        const me = this;\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChartElement.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => o.data = sets.length === 1 ? data : data[i] || []);\r\n\r\n        if (me.#chart) return me.updateChart(opt);\r\n\r\n        const ctx = me.canvas?.getContext('2d');\r\n        if (ctx) {\r\n            me.#chart = new GSChartElement.#Chart(ctx, opt);\r\n        } else {\r\n            GSLog.error(null, 'Failed to get canvas context');\r\n        }\r\n    }\r\n\r\n    async #waitInit() {\r\n        if (!GSChartElement.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        this.requestUpdate();\r\n    }\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    static async #init() {\r\n        const me = GSChartElement;\r\n        if (me.URL_LIB === false) return;\r\n        if (me.#isChart || me.#initializing) return;\r\n        me.#initializing = true;\r\n        try {\r\n            const origin = GSChartElement.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);\r\n            me.#Chart = Chart;\r\n            me.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            me.#initializing = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert DOM tree into a JSON structure\r\n     * \r\n     * @param {HTMLElement} obj HTML element instance to convert\r\n     * @param {string} name DOM attribute name for object key\r\n     * @param {string} value DOM attribute name for object value\r\n     * @param {string} type DOM attribute name for object type\r\n     * @returns {object}\r\n     */\r\n    static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n        if (!(el instanceof HTMLElement)) return {};\r\n\r\n        const nameV = el.getAttribute(name);\r\n        const valV = el.getAttribute(value);\r\n        const typeV = el.getAttribute(type);\r\n\r\n        let obj = null;\r\n\r\n        switch (typeV) {\r\n            case 'array':\r\n                obj = [];\r\n                break;\r\n            case 'object':\r\n                obj = {};\r\n                break;\r\n            default:\r\n                return GSChartElement.#toType(valV, typeV);\r\n        }\r\n\r\n        const childs = Array.from(el.children);\r\n        const isArray = typeV === 'array';\r\n        const isObject = typeV === 'object';\r\n\r\n        childs.forEach(el => {\r\n            const _nam = el.getAttribute(name);\r\n            if (isArray) {\r\n                obj.push(GSChart.toJson(el, name, value, type));\r\n            } else if (isObject) {\r\n                const tmp = GSChartElement.toJson(el, name, value, type);\r\n                obj[_nam] = tmp;\r\n            } else {\r\n                const _val = el.getAttribute(value);\r\n                const _typ = el.getAttribute(type);\r\n                obj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    static #toType(val, type) {\r\n        switch (type) {\r\n            case 'boolean': return val === 'true';\r\n            case 'number': return parseFloat(val);\r\n            default: return val\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-chart');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        try {\r\n            const data = await GSLoader.load(me.url);\r\n            if (!data) throw new Error(`Code URL ${me.url} unreachable!`);\r\n            me.#data = data;\r\n            me.#onHighlight(data);\r\n        } catch (error) {\r\n            GSDOM.setHTML(me.#code, error.message);\r\n        }\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        try {\r\n            const response = me.#worker;\r\n            const blob = new Blob([response], { type: 'application/javascript' });\r\n            const blobURL = URL.createObjectURL(blob);\r\n            const worker = new Worker(blobURL);\r\n            worker.onmessage = me.#onMessage.bind(me);\r\n            worker.postMessage({ data: data, url: blobURL, append: append });\r\n        } catch (error) {\r\n            GSDOM.setHTML(me.#code, error.message);\r\n        }\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSMarkdownElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        history: { type: Number },\r\n        maxHeight: { type: Number, attribute: 'max-height' },\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        this.history = 10;\r\n        this.dynamicStyle(this.#styleID);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const me = this;\r\n        await me.#initLib();\r\n        if (globalThis.showdown) {\r\n            const opt = { tasklists: true, tables: true };\r\n            me.#converter = new globalThis.showdown.Converter(opt);\r\n            super.connectedCallback();\r\n        }\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('url')) {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url);\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const height = me.maxHeight > 0 ? `${me.maxHeight}px;` : false;\r\n        const opt = { 'max-height': height }\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        return html`<div ${ref(me.#containerRef)} class=\"overflow-auto ${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [me.#styleID] : true,\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        me.#onURL(url);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n\r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n\r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });\r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n            GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n\r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list = GSDOM.queryAll(me.#container, qry);\r\n        requestAnimationFrame(() => list.forEach(el => GSDOM.toggleClass(el, css)) );\r\n    }\r\n\r\n    #handleLinks() {\r\n        const me = this;\r\n        const links = GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n            .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')))\r\n            .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n            .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/'))\r\n            .forEach(el => GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me)));\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        if (me.#cache.length === 0 ) return me.#first;\r\n        const url = me.#cache.pop();\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if (me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdownElement.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-markdown');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSMonacoElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #editor = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = '';\r\n        this.theme = 'vs-dark';\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonacoElement.#init();\r\n        super.connectedCallback();\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.#onMonacoReady();\r\n        super.firstUpdated();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        if (changed.has('theme')) me.#onTheme(me.theme);\r\n        if (changed.has('target')) me.#onTarget(me.target);\r\n        if (changed.has('url')) me.#onURL(me.url);\r\n        if (changed.has('language')) me.#onLanguage(me.language);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#containerRef)} class=\"${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        return this.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    get owner() {\r\n        return this.parentElement;\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        try {\r\n            const data = url ? await GSLoader.load(url) : null;\r\n            if (!data) throw new Error(`Code URL ${url} unreachable!`);\r\n            me.code = '';\r\n            me.#onLanguage(me.language);\r\n            me.code = data;\r\n        } catch (error) {\r\n            me.code = error.message;\r\n        }\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n\r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner?.getBoundingClientRect();\r\n            if (rect) {\r\n                me.#editor.layout({ width: rect.width, height: rect.height });\r\n            }\r\n        });\r\n    }\r\n\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    static #initialized;\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonacoElement.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        const url = GSMonacoElement.URL_LIB;\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${url}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${url}'};\r\n                importScripts('${url}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({\r\n                paths: { 'vs': `${GSMonacoElement.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false }\r\n            });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static async #init() {\r\n        const me = GSMonacoElement;\r\n        if (me.#initialized) return;\r\n        me.#initEnv();\r\n        await me.#initLib();\r\n        await me.#initMonaco();\r\n        me.#initialized = true;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-monaco');\r\n    }\r\n\r\n}"],"names":["GSVersion","version","build","gsstyles","GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSUtil$1","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Date","Boolean","value","toString","val","trim","toLowerCase","str","obj","replace","x","g","split","reverse","join","word","toUpperCase","slice","map","i","capitalize","constructor","o","Array","isArray","isBool","isDate","isNumber","isString","min","max","Math","match","isNull","dft","language","sep","numberSeparator","extractNumber","replaceAll","url","test","startsWith","endsWith","pattern","charset","floor","random","length","navigator","languages","flags","RegExp","isStringEmpty","undefined","Intl","NumberFormat","format","DateTimeFormat","string","reg","keys","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","separator","filter","capitalizeAll","tpl","params","names","vals","values","Function","text","textArea","document","createElement","innerHTML","isStringNonEmpty","window","forEach","a","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","result","permissions","query","state","clipboard","writeText","readText","GSFunction$1","GSFunction","isFunction","includes","own","isFunctionDefined","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","from","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSID","prefx","next","s","l","h","charCodeAt","isProxy","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","attributes","host","opt","recursive","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","children","proxify","safe","unsafe","dflt","default","multi","hasAttribute","toStringArray","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","first","getDay","mondayFirst","isMondayFirst","days","repeat","push","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","d","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","m","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","k","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Locale","weekInfo","firstDay","charAt","toLocaleString","size","isLowercase","hour","hour12","pop","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","getDateFormat","regex","getFormattedDateRegex","parseFormattedDate","groups","y","Y","valueOf","GSData","currency","extract","key","Set","b","every","index","toSorted","compareArrays","second","advanced","arr","indexOf","list","it","cfg","toType","rule","toRegex","childElementCount","querySelector","fmt","style","fields","limit","sts","rec","filterRecord","isPrimitive","filterSimple","filterComplex","filterValue","primitive","found","flt","toCheck","matchDate","matchNumber","op","toLocaleLowerCase","local","toLocaleDateString","iso","toISOString","operator","sort","sortPair","ord","idx","col","v1","v2","compare","order","compareNum","compareString","compareBool","s1","s2","localeCompare","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","partial","r","readFromProperty","readFromObject","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","wrap","appendChild","link","slot","isText","tagName","FORMEL","shadow","queryAll","HTMLButtonElement","hasClass","ownClazz","inheritance","pel","HTMLSelectElement","HTMLSlotElement","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","parentAll","childAll","child","parentElement","offsetParent","c","ShadowRoot","HTMLBodyElement","root","getByID","documentElement","walk","qry","levels","proxy","res","receiver","sanitize","sanitizer","setHTML","Document","textContent","requestAnimationFrame","toggleClass","contains","unwrap","querySelectorAll","defaults","valueAsNumber","selectedOptions","checked","defaultValue","getValue","styleValue","textTransform","ignore","checkValidity","fromElement2Object","fromObject2Element","objectPathExist","fromValue","writeToOject","toValue","plain","definitions","innerText","props","allProperties","getAsNum","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","for","sub","location","hash","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","CLEANUP1","whiteList","asState","isAllowed","toValidationError","allowElement","allowTag","fetch","ok","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","isFormElement","resetSelect","typed","dispatch","isSelect","options","selected","dispatchEvent","Event","bubbles","composed","properties","mergeObjects","template","CustomEvent","detail","message","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","callFunction","sendSuspended","once","chained","suspended","removeEventListener","unlisten","toSignal","internal","evt","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","cancelable","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","delete","removeListener","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","rid","waitAnimationFrame","onResize","attach","waitPageLoad","GSAbortController","AbortController","super","abort","clearInterval","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","isFunctions","getFilter","exec","create","GSDynamicStyle","deleteRule","getRule","setRule","sync","insertRule","updateRule","isImportant","setProperty","source","dynamicStyleSheetByID","dynamicStyleSheet","gsClass","dynamicRule","dynamicRuleByID","dynamicStyle","assign","dynamicStyleByID","GSCacheStyles","store","dynamic","styles","adopt","adoptedId","GSAdoptedEngine","now","preload","timerID","setInterval","sheets","adoptable","adoptSheet","update","scheduled","sorted","ID","cssText","monitorAttributes","ownerNode","adoptStyle","disconnect","mutationList","onAttributeChange","attributeFilter","attributeOldValue","HTMLLinkElement","rel","as","HTMLStyleElement","then","adoptLink","registerFilter","onMonitorFilter","onMonitorConnect","onMonitorDisconnect","init","GSLoader","GS_TEMPLATE_URL","origin","GS_ROUTER_URL","rootURL","defaultURL","TEMPLATE_URL","ROUTER_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","UNIQUE","searchParams","append","level","isHTML","getRouterURL","loadSafe","routerURL","normalizeURL","routerPath","getTemplateURL","templateURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GSTemplateCache","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSAttributeHandler","anchor","call","inject","property","swap","trigger","hashed","calls","toggles","triggers","handle","targets","handleTarget","handleBinding","handleAction","handleSwap","handleInject","handleAttribute","handleProperty","handleToggle","handleTrigger","handleEvent","handleCall","handleExec","handleTemplate","field","form","isForm","HTMLFormElement","isField","toObject","isAttributeJSON","jsonToAttr","toggleAttribute","isPropertyJSON","toggleProperty","tout","symbol","emit","handleContent","clean","useDef","definition","toHTML","gsHashed","applyContent","applyTemplate","clone","insertAdjacent","detach","off","parentComponent","DEFINITION","override","GSBeep","AudioContext","webkitAudioContext","audioContext","duration","frequency","volume","isAvailable","audioCtx","oscillatorNode","createOscillator","gainNode","createGain","connect","destination","gain","start","currentTime","stop","onended","isActive","hasBeenActive","userActivation","GSEnvironment","isMobile","userAgentData","mobile","userAgent","isDesktop","isWebkit","protocol","strVal","brands","brand","strAgt","isEdge","isDevice","platform","screen","otype","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","ps","p","GSEvent","EventTarget","listeners","listener","abortable","controller","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSItem","autofocus","validate","GSElement","tags","collect","GS_LOCALIZATION_LANGUAGE","lang","GSLocalization","GSLocalizationImpl","queue","queued","GS_LOCALIZATION_URL","translate","deft","getLanguage","texthash","reset","promises","loadWait","sequential","Pragma","isDefault","hk","details","GSPopper","asRect","sx","scrollX","sy","scrollY","top","bottom","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","arrow","pos","fromPlacement","isPlacementValid","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","aopt","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","applyDynamicStyle","GSQueryCSS","object","GSQuery","instance","GSRouter","enabled","hashCallback","onHashChange","getRouter","loadDefinition","enable","disable","route","unregister","deepClone","fromJson","px","process","GS_DEFINITION_URL","initialize","GS_ROUTER_WAIT","GSTheme","switch","theme","STORAGE","htmlEl","bsTheme","matchMedia","q","URLSearchParams","onTheme","settings","getSystemDefaultTheme","darkMode","lightMode","setup","BinaryTreeNode","isLeaf","hasChildren","isRoot","BinaryTree","inOrderTraversal","postOrderTraversal","preOrderTraversal","insert","parentNodeKey","canInsertLeft","canInsertRight","find","Node","previous","release","toJSON","DoublyLinkedList","tail","previousNode","insertAt","splice","insertFirst","insertLast","getAt","removeAt","acc","toArray","iterator","isInvalid","isInvalidIndex","isInteger","LinkedList","Stack","item","unshift","peek","isEmpty","Queue","enqueue","dequeue","Tree","folder","leaf","up","levelID","nodeID","isFolder","hasMore","firstChild","lastChild","down","previousSibling","inclusive","flat","iterate","filtered","dr","newOne","findByKey","flatten","fromJSON","raw","hasParent","DataSelector","SELECT","asArray","removeSelected","isSelected","GSReadWriteRegistryImpl","handlers","INTERNAL","addHandler","removeHandler","getHandler","newHandler","verify","rw","resetRegistry","GSReadWriteRegistry","GSAbstractReadWrite","processors","addProcessor","processor","removeProcessor","isRegistered","notify","onRead","postRead","onWrite","postWrite","addSelected","clearSelected","getSelected","GSReadWrite","reader","writer","mode","skip","TYPE","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCachedReadWrite","reformat","records","postFilter","sortData","filterData","search","read","TreeNode","opened","focused","focusedNode","selectedNode","controllers","select","focus","open","addController","removeController","visible","expand","collapse","changed","onFocusChanged","onSelectionChanged","isPartialySelected","selectAll","deselectAll","selectionFlag","onSelectAll","onDeselectAll","selectedNodes","refresh","onRefresh","loading","onLoad","expandAll","collapseAll","expanded","collapsed","onExpand","onCollapse","onAppend","onInsert","GSTreeReader","resetData","litUrl","GS_LIT_URL","litModule","ReactiveController","ReactiveElement","AsyncDirective","AsyncReplaceDirective","CSSResult","Directive","LitElement","PartType","TemplateResultType","UnsafeHTMLDirective","UntilDirective","_$LE","_$LH","adoptStyles","asyncAppend","asyncReplace","choose","classMap","clearPart","createRef","defaultConverter","directive","getCommittedValue","getCompatibleStyle","getDirectiveClass","guard","ifDefined","insertPart","isCompiledTemplateResult","isDirectiveResult","isServer","isSingleExpression","isTemplateResult","keyed","literal","live","noChange","notEqual","nothing","range","ref","removePart","render","setChildPartValue","setCommittedValue","staticHtml","staticSvg","styleMap","supportsAdoptingStyleSheets","svg","templateContent","unsafeCSS","unsafeHTML","unsafeSVG","unsafeStatic","until","when","withStatic","gsAction","gsAnchor","gsAttribute","gsCall","gsExec","gsInject","gsProperty","gsSwap","gsTarget","gsTemplate","gsToggle","gsTrigger","gsValue","gsTimeout","DatasetDirective","part","srcset","DOMStringMap","remap","hasOwn","descriptors","getOwnPropertyDescriptors","listProperties","listGetters","getPrototypeOf","literalTemplate","listGettable","cssMap","CssMapDirective","partInfo","ATTRIBUTE","strings","classInfo","_previousClasses","_staticClasses","notEmpty","newVal","oldVal","numGT0","numGE0","numLT0","numLE0","AutocapitalizeTypes","autocapitalize","hasChanged","AutocompleteTypes","autocomplete","AutocorrectTypes","autocorrect","ButtonTypes","buttonType","is","ColorTypes","color","EnvironmentTypes","environment","InputTypes","inputType","NavTypes","nav","OrientationTypes","PlacementTypes","PositionTypes","ProtocolTypes","SizeTypes","normal","medium","small","large","big","extra","stringArrayConverter","fromAttribute","toAttribute","AdoptedController","hostConnected","hostDisconnected","isGlobal","rules","removeRule","renderRoot","onAdopted","AttributeController","eventName","onNotify","isFormEl","ContentController","refs","removeContent","hostUpdated","isSelf","contentRef","renderOptions","renderBefore","previousElementSibling","keep","DataController","readCallback","writeCallback","errorCallback","selectCallback","onSelect","write","storeID","firstPage","page","lastPage","nextPage","prevPage","storage","requestUpdate","onDataRead","onDataWrite","onDataError","ElementMoveController","attached","cursorX","cursorY","mouseUpCallback","mouseDownCallback","mouseMoveCallback","onMouseUp","onMouseDown","onMouseMove","attachEvent","removeEvent","onStartMove","onEndMove","onCursorRight","onCursorLeft","onCursorUp","onCursorDown","LocalizationController","hostUpdate","updateLanguage","updateLanguageExt","langauge","onLanguage","OrientationController","hosts","onOrientation","TemplateController","lastRef","isPrefetch","GS_TEMPLATE_PREFETCH","templateRef","schedule","templateInjected","isTplEl","cacheable","err","tasks","task","finally","ThemeController","updateTheme","updateThemeExt","SlotController","onSlotChanged","assignedElements","onSlotInjected","rtl","reflect","hide","rounded","bordered","onready","os","browser","adopted","uiHandler","localization","dataController","slotController","themes","attributeChangedCallback","oldValue","newValue","connectedCallback","isBindable","binded","disconnectedCallback","detachListeners","createRenderRoot","firstUpdated","willUpdate","isAllowRender","renderUI","renderTemplate","renderClass","border","mapCSS","flag","waitEvent","direction","isFocused","isValidEnvironment","isValidBrowser","isValidOS","isValidProtocol","isValidOrientation","isGenerated","elementStyles","cssRule","setCSSProperty","ElementNavigationController","circular","multiple","onKeyUp","onClick","onFocusIn","onFocusOut","lastElementChild","blur","onSelected","onDeselected","onFocused","isNavigable","isNav","relatedTarget","composedPath","GroupController","busEvent","busCallback","onBusEvent","GSRouterElement","router","updated","GSAccordionElement","autoclose","cssItem","cssHeader","cssBody","renderItems","close","isItemCloser","GSAccordionItemElement","shouldUpdate","changedProperties","component","GSAlertElement","closed","closable","pause","interval","handleBillboard","show","isBillboard","button","billboard","GSButtonElement","clickCss","hoverCss","toggleColor","outline","toggling","icon","tooltip","refEl","refIco","onMouseOver","onMouseOut","iconEl","animate","onHref","isReset","isSubmit","submit","hover","iconHtml","renderIcon","GSCalendarElement","editable","minYear","maxYear","arrovPrev","arrowNext","cssDays","cssToday","cssWeeks","cssMonth","cssYear","cssNav","cssSelected","arrowPrev","previousMonth","nextMonth","previousYear","nextYear","formatted","updateTarget","week","dayList","months","monthsHTML","yearHTML","onKey","onDay","daysHTML","tgt","HTMLInputElement","valueAsDate","isToday","today","c1","c2","current","monthList","onMonth","optionsHTML","onYear","isList","listID","selectedIndex","yearEl","validity","valid","GSCardElement","imageStyle","overlay","align","image","subtitle","footer","header","colorText","colorBack","colorBorder","cssTitle","cssSubtitle","cssFooter","cssImage","styleID","isVertical","renderVertical","renderHorizontal","imageTop","imageBottom","isBefore","startClass","endClass","startHtml","images","endHtml","isHorizontal","imageSlot","GSCenterElement","GSMenuElement","auto","dark","menuRef","closeSubmenus","updatePosition","onMouseLeave","submenu","dropend","dropstart","popup","caller","isMouseOrPointerEvent","renderSubmenu","renderHeader","renderMenu","renderDivider","menu","toSubmenu","menuItem","isSubmenu","innerWidth","GSContextElement","isInTable","attachTarget","assignedSlot","onPopup","GSCompareElement","background","before","after","elRef","clipRef","slideRef","mouseController","elPosition","splitter","onDoubleClick","isAuto","pct","isFixed","slider","clip","GSControllerElement","module","changes","GSCopyrightElement","company","isCompany","isYear","GSDataHandler","autoload","autorefresh","config","handler","lifoReadRef","lifoWriteRef","itemHolder","PROPERTIES","initLIFO","updateHandler","formatSort","formatFilter","isDebug","gsDebug","isCached","formated","save","verifyHandler","callOnceLifo","lifoReadRefCallback","lifoWriteRefCallback","lifoCall","GSDialogElement","standard","escapable","cancelText","confirmText","minWidth","buttonAlign","iconCancel","iconConfirm","colorCancel","colorConfirm","cssCancel","cssConfirm","cssContent","pass","dialogRef","btnConfirmRef","btnCancelRef","CSS","TITLE_CSS","HEADER_CSS","ALIGN","CANCEL","CONFIRM","updateStack","_shouldUpdate","allowed","onOpenChanged","STACK","dialog","showModal","focusable","isHashed","renderConfirm","onConfirm","renderCancel","onCancel","renderFooter","onForm","onSubmit","info","confirm","prompt","forms","f","tab","btnConfirm","btnCancel","QUERY_INPUT","isVisible","GSDrawerElement","backdrop","scroll","fingers","transition","cssHead","onLeave","onEnter","hasHeader","headSlot","GSDropdownElement","simple","renderButton","buttonClass","btn","GSEmailElement","user","domain","dev","updateUser","updateDomain","GSFormElement","acceptCharset","enctype","novalidate","block","beep","formRef","lastState","onChange","onBlur","onInvalid","doFilter","filterField","elements","submitButton","resetButton","childrens","inputs","reportValidity","onValidate","disableInput","enableInput","onFieldChange","onFieldInvalid","findField","fieldValue","fldName","gsfDisable","fldVal","gsfValue","matched","selectable","GSFormGroupElement","layout","label","description","placeholder","mask","spellcheck","rows","cols","step","minLength","maxLength","autoid","autocopy","autoselect","reveal","readonly","required","invalidMessage","cellField","cellLabel","cssLabel","cssField","inputRef","ouptutRef","patterns","validateAllowed","ICON","CSS_LABEL","CSS_LABEL_CELL","formComponent","SELECTOPT","onRange","renderFloating","cssCheck","renderInput","renderOutput","renderLabel","renderInfo","renderLabelWrap","renderField","isIcon","CSS_ICON","renderTooltip","isRange","idattr","isFieldset","radioLayout","fieldSet","inputHTML","selectHTML","isTextArea","fld","vertical","initStyle","listHTML","outerHTML","isBlock","isBeep","isSwitch","isCheckable","isFloating","slots","tagList","isCheck","isRadio","isChecked","isPassword","isEmail","isURL","GSFormPanelElement","renderFormGroup","formaction","formenctype","formmethod","formnovalidate","formtarget","maxlength","minlength","GSGroupElement","controllerGroup","initData","prerender","of","renderWrappedUI","renderWrappedClass","childTagName","generated","getName","GSIconElement","superColor","_clicked","_hovered","postAnimate","fs","GSIndentElement","multiplier","numdef","GSImageElement","invert","grayscale","brightness","contrast","saturate","hue","sepia","alt","imageRef","complete","renderStyle","buildFilter","GSLayoutElement","resizable","autofit","vPos","hPos","els","dyncss","horizontal","lev","tplEl","elementTemplate","tc","dir","did","panelCSS","panelStyle","resize","grow","vpos","hpos","GSLinklement","ping","GSListElement","GSListItemElement","initial","renderFirst","renderSecond","itemCSS","isSelectable","itemStatusCSS","renderText","activeCSS","cssActive","inactiveCSS","cssInactive","GSMouseElement","pageX","pageY","screenX","screenY","offsetX","offsetY","onMouse","GSMovableElement","onMove","cursor","updateCursor","GSNavElement","isTab","GSNavItemElement","itemsCSS","buttonCSS","buildCSS","cssButton","navType","GSOverlayElement","autoremove","radius","styleID2","innerHeight","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathStr","createSVGPathString","fill","pointerEvents","windowX","windowY","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPagerElement","pages","labelFirst","labelLast","labelNext","labelPrevious","half","renderPrevious","renderItem","renderNext","renderLast","pagination","decodeHTMLEntities","toTarget","ctrl","GSPopupElement","wMin","wMax","hMin","hMax","panelRef","onAuto","reposition","postPopup","popupFixed","panel","overflowH","overflowV","GSPopoverElement","arrowRef","arrowID","attachEvents","popover","fade","isFocusTrigger","isHoverTrigger","popupAbsolute","onFocus","GSProgressElement","updateStyle","percentage","onKeySelect","increase","decrease","trunc","old","GSSpinnerElement","pulsar","GSSplitterElement","styleTGT","cssUpdate","lock","updateMouse","isPreceeding","isStyleValue","styleDynamic","lockable","csize","cls","gsSplitter","updateX","updateY","dx","GSTabItemElement","updateCSS","tabCSS","GSTabPanelElement","GSTabGroupElement","findPanel","isAfter","tabs","renderTabs","panels","renderPanels","GSTableElement","colspan","hidden","fixed","filterType","cssFilter","colorFilter","colorHead","colorSelect","colorSort","stripedColumn","divider","striped","grid","borderless","columns","datacolumn","multisort","multiselect","protected","sortable","sortOrder","headColor","CELLS","table","stripedColumns","renderFilters","onSort","entry","renderColumn","renderRecord","renderEmpty","renderHandler","columnType","columType","input","valueAt","row","cell","cfgType","timestamp","dataType","renderFilter","hasSub","onFilter","renderOption","listid","icons","sortType","cells","remapRecord","renderCell","record","elementTofilter","column","getElementIndex","prepareSorter","isComplex","tr","GSTagElement","converter","appendable","closeColor","cssClose","cssTag","dataListRef","renderTags","onInput","renderList","updateTag","KEYS","srcElement","removeTag","addTag","isMax","datalist","optEl","tagEl","renderTag","tagClass","btnClass","badge","GSTextElement","GSTooltipElement","arrowStyle","arrowEl","panelEl","refLocal","refGlobal","GSTemplateElement","CopySelectController","clickCallback","copyCallback","onCopy","writeToClipboard","MaskController","_","back","prev","keyDownCallback","inputCallback","focusCallback","changeCallback","initRules","j","buildSlots","findIndex","buildAccept","toPattern","isMatch","setCustomValidity","setSelectionRange","substring","selectionStart","selectionEnd","lastIndex","maskType","chars","masks","special","MultipatternController","multipattern","NumberController","onNumberInput","PasswordController","revealing","keyUpCallback","isReveal","altKey","TextController","updateText","InteractiveController","monitorCallback","blurCallback","onMonitor","onDataChange","hasUpdated","formElements","strict","isInList","togleEl","dataGroup","togleOption","isButtonElement","ComboController","ListController","ValidityController","invalidCallback","processing","togglUI","isTyped","report","defaultPropertyDeclaration","attributeToPropertyMap","prepare","elementProperties","finalize","finalized","prepareFn","getOwnPropertySymbols","superCtor","attributeNameForProperty","ReactiveInput","reflectingProperties","instanceProperties","updatePromise","reflectingProperty","isUpdatePending","observedAttributes","initializer","initializers","propKeys","getOwnPropertyNames","createProperty","noAccessor","descriptor","getPropertyDescriptor","prototype","configurable","enumerable","enableUpdating","attributeToProperty","requestedUpdate","getUpdateComplete","scheduleUpdate","performUpdate","propertyToAttribute","markUpdated","updateComplete","getPropertyOptions","changeProperty","enqueueUpdate","elementProps","wrapped","didUpdate","ctor","propName","attrValue","saveInstanceProperties","GSComboExt","comboController","setIf","onReset","objToHTML","mergeArrays","GSDataListExt","HTMLDataListElement","GSInputElement","copyselect","maskController","multiPatternController","passwordController","numberController","textController","listController","validityController","isMulti","isType","GSTextArea","HTMLTextAreaElement","GSBreadcrumbElement","spacing","updateChildren","$text","GSBreadcrumbItemElement","generate","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBoxElement","cssList","cssInput","maxFileSize","listEl","fileEl","dragging","TITLE","onDragenter","onDragleave","onDrop","onPaste","dataTransfer","hasFile","dropEffect","clipboardData","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","validAttachments","GSTimeFormat","toLocaleTimeString","GSDateFormat","GSYearFormat","GSCurrencyFormat","GSStepStyle","GSStepElement","iconCSS","titleCSS","INACTIVE","ICON_CSS","GSStepsElement","steps","isFirst","isLast","COMPLETED","SELECTED","GSNotificationElement","BOTTOM_END","DEFAULT","positionCSS","dismiss","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","dlg","nn","isNativeSupported","isGranted","permission","GSToastElement","pending","visibilityChange","isVisibilityChanged","pendingUpdate","validParent","renderWithHeader","renderSimple","isToast","isNotify","AbstractTreeController","addNodeController","removeNodeController","oldNode","TreeController","toggleState","addedNode","insertedNode","onRemove","GSTreeItemElement","renderSpinner","cssFocus","status","toggleSelection","parentItem","checkColor","checkColorSelected","ui","itemIco","itemIcon","openIcon","closeIcon","renderIndent","renderMulti","GSTreeElement","guide","shared","listRef","nextItem","previousItem","reload","expandable","ServiceWorkkerElement","scope","trace","registration","workerMessage","messageChannel","nocache","onWorkerMessage","unload","ServiceWorkerTraceUpdate","available","clearCache","postMessage","nonNull","isLoaded","port1","onMessage","initChannel","MessageChannel","onmessage","port2","waiting","monitorServiceWorkerUpdate","installing","serviceWorker","invokeServiceWorkerUpdateFlow","monitorController","refreshing","GSChartElement","URL_LIB","GS_URL_CHART","canvasRef","chart","waitInit","destroy","isChart","renderData","canvas","updateChart","div","toBase64Image","quality","sets","datasets","ctx","getContext","Chart","initializing","registerables","nameV","valV","typeV","childs","isObject","_nam","GSChart","_val","_typ","GSHighlightElement","GS_URL_HLJS","codeRef","onTarget","onURL","onHighlight","hasLangauge","highlight","injectCSS","terminate","response","worker","blobURL","Worker","langs","GSMarkdownElement","GS_URL_MARKDOWN","history","maxHeight","containerRef","initLib","showdown","tasklists","tables","Converter","toCache","fromCache","container","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","script","GSMonacoElement","GS_URL_MONACO","editor","onMonacoReady","monaco","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","automaticLayout","minimap","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","paths","vs","initialized","initEnv","initMonaco"],"mappings":"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"}