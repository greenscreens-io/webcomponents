{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/GSVersion.mjs","../../modules/base/style.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSID.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSDynamicStyle.mjs","../../modules/base/GSCacheStyles.mjs","../../modules/base/GSAdoptedEngine.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSTemplateCache.mjs","../../modules/base/GSAttributeHandler.mjs","../../modules/base/GSBeep.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSLocalization.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSRouter.mjs","../../modules/base/GSTheme.mjs","../../modules/helpers/Stack.mjs","../../modules/helpers/Queue.mjs","../../modules/helpers/BinaryTree.mjs","../../modules/helpers/DoublyLinkedList.mjs","../../modules/helpers/Tree.mjs","../../modules/data/ReadWriteRegistry.mjs","../../modules/data/AbstractReadWrite.mjs","../../modules/data/ReadWrite.mjs","../../modules/data/CachedReadWrite.mjs","../../modules/data/TreeNode.mjs","../../modules/data/TreeReader.mjs","../../modules/lib.mjs","../../modules/directives/dataset.mjs","../../modules/directives/literal.mjs","../../modules/directives/css-map.mjs","../../modules/properties/verificator.mjs","../../modules/properties/autocapitalize.mjs","../../modules/properties/autocomplete.mjs","../../modules/properties/autocorrect.mjs","../../modules/properties/buttonType.mjs","../../modules/properties/color.mjs","../../modules/properties/environment.mjs","../../modules/properties/inputType.mjs","../../modules/properties/nav.mjs","../../modules/properties/orientation.mjs","../../modules/properties/placement.mjs","../../modules/properties/position.mjs","../../modules/properties/protocol.mjs","../../modules/properties/size.mjs","../../modules/properties/arrayConverter.mjs","../../modules/controllers/AdoptedController.mjs","../../modules/controllers/AttributeController.mjs","../../modules/controllers/ContentController.mjs","../../modules/controllers/DataController.mjs","../../modules/controllers/ElementMoveController.mjs","../../modules/controllers/LocalizationController.mjs","../../modules/controllers/OrientationController.mjs","../../modules/controllers/TemplateController.mjs","../../modules/controllers/ThemeController.mjs","../../modules/controllers/SlotController.mjs","../../modules/GSElement.mjs","../../modules/controllers/ElementNavigationController.mjs","../../modules/controllers/GroupController.mjs","../../modules/components/Router.mjs","../../modules/components/Accordion.mjs","../../modules/components/AccordionItem.mjs","../../modules/components/Alert.mjs","../../modules/components/Button.mjs","../../modules/components/Calendar.mjs","../../modules/components/Card.mjs","../../modules/components/Center.mjs","../../modules/components/Menu.mjs","../../modules/components/Context.mjs","../../modules/components/Compare.mjs","../../modules/components/Controller.mjs","../../modules/components/Copyright.mjs","../../modules/components/DataHandler.mjs","../../modules/components/Dialog.mjs","../../modules/components/Drawer.mjs","../../modules/components/Dropdown.mjs","../../modules/components/Email.mjs","../../modules/components/Form.mjs","../../modules/components/FormGroup.mjs","../../modules/components/FormPanel.mjs","../../modules/components/Group.mjs","../../modules/components/Icon.mjs","../../modules/components/Indent.mjs","../../modules/components/Image.mjs","../../modules/components/Layout.mjs","../../modules/components/Link.mjs","../../modules/components/List.mjs","../../modules/components/ListItem.mjs","../../modules/components/Mouse.mjs","../../modules/components/Movable.mjs","../../modules/components/Nav.mjs","../../modules/components/NavItem.mjs","../../modules/components/Overlay.mjs","../../modules/components/Pager.mjs","../../modules/components/Popup.mjs","../../modules/components/Popover.mjs","../../modules/components/Progress.mjs","../../modules/components/Spinner.mjs","../../modules/components/Splitter.mjs","../../modules/components/tab/Tab.mjs","../../modules/components/tab/TabPanel.mjs","../../modules/components/tab/TabGroup.mjs","../../modules/components/Table.mjs","../../modules/components/Tag.mjs","../../modules/components/Text.mjs","../../modules/components/Tooltip.mjs","../../modules/components/Template.mjs","../../modules/components/ext/controllers/CopySelectController.mjs","../../modules/components/ext/controllers/MaskController.mjs","../../modules/components/ext/controllers/MultipatternController.mjs","../../modules/components/ext/controllers/NumberController.mjs","../../modules/components/ext/controllers/PasswordController.mjs","../../modules/components/ext/controllers/TextController.mjs","../../modules/components/ext/controllers/InteractiveController.mjs","../../modules/components/ext/controllers/ComboController.mjs","../../modules/components/ext/controllers/ListController.mjs","../../modules/components/ext/controllers/ValidityController.mjs","../../modules/components/ext/ReactiveInput.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSInputElement.mjs","../../modules/components/ext/GSTextArea.mjs","../../modules/components/breadcrumb/Breadcrumb.mjs","../../modules/components/breadcrumb/BreadcrumbItem.mjs","../../modules/components/filebox/Attachment.mjs","../../modules/components/filebox/FileBox.mjs","../../modules/components/intl/TimeFormat.mjs","../../modules/components/intl/DateFormat.mjs","../../modules/components/intl/YearFormat.mjs","../../modules/components/intl/CurrencyFormat.mjs","../../modules/components/steps/StepStyle.mjs","../../modules/components/steps/Step.mjs","../../modules/components/steps/Steps.mjs","../../modules/components/toast/Notification.mjs","../../modules/components/toast/Toast.mjs","../../modules/components/tree/controllers/AbstractTreeController.mjs","../../modules/components/tree/controllers/TreeController.mjs","../../modules/components/tree/TreeItem.mjs","../../modules/components/tree/Tree.mjs","../../modules/extra/Chart.mjs","../../modules/extra/Highlight.mjs","../../modules/extra/Markdown.mjs","../../modules/extra/Monaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport class GSVersion {\r\n\r\n    static get version() {\r\n        return '2.0.0';\r\n    }\r\n\r\n    static get build() {\r\n        return 2025.0131;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Required CSS Styles for WebCompoents, regardless Bootstrap CSS.\r\n */\r\nexport const gsstyles = `.z-10k{z-index:10000 !important;}\r\n.gs-hide,gs-item{display:none !important;}\r\ngs-popover,gs-tooltip{position:fixed;top:0px;left:0px;},\r\n.d-contents{display:contents;}';\r\ngs-button-group::part(.btn-group){box-shadow:rgba(72, 72, 72, 0.4) 0px 0.125rem 0.25rem;}\r\ngs-group>gs-button::part(button) {box-shadow: none;}\r\ngs-group>gs-button:not(:last-child)::part(button) {border-top-right-radius: 0;border-bottom-right-radius: 0;}\r\ngs-group>gs-button:not(:first-child)::part(button) {margin-left: calc(var(--bs-border-width) * -5);border-top-left-radius: 0;border-bottom-left-radius: 0;}\r\ngs-layout {width: 100%;height: 100%;}\r\ngs-split-panel{flex: 1 1 auto !important;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]:before {content: attr(data-value);}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {visibility: hidden;display: inline-block;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-calendar-picker-indicator {position: relative;top: 0px;right: 0;color: black;opacity: 0.5;}\r\n`;","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic isPrimitive = (o) => !Array.isArray(o) && (this.isBool(o) || this.isDate(o) || this.isNumber(o) || this.isString(o));\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic asArray(val) {\r\n\t\treturn Array.isArray(val) ? val : [val];\r\n\t}\r\n\r\n\tstatic asNum(val, dft = 0, language) {\r\n\t\tlanguage = language || GSUtil.language;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(language);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default language\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get language() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(language) {\r\n\t\treturn Intl.NumberFormat(language).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(language) {\r\n\t\treturn Intl.NumberFormat(language).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(language = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(language).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t};\r\n\t\tconst reg = /[&<>\"'/]/ig;\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\t\t\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() === right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tif (time <= 0) return;\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to write to the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async writeToClipboard(value = '') {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-write\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.writeText(value);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to read from the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async readFromClipboard() {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-read\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.readText();\r\n\t\t}\r\n\t\treturn '';\r\n\t}\t\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type generator function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunctionGenerator(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const GeneratorFunction = (function*(){}).constructor;\r\n        return fn instanceof GeneratorFunction;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\nconst isProxy = Symbol(\"isProxy\")\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribite name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return val;\r\n\t\tconst v = el.getAttribute(name) ?? val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {})\r\n\t\t.filter(kv => kv != 'items')\r\n\t\t.filter(kv => kv[0][0] != '#')\r\n\t\t.filter(kv => kv[0][0] != '$')\r\n\t\t.map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop] = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop];\r\n\t\t\t\tif (prop === 'isProxy') return isProxy;\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\t\t\t\t\r\n\t\t\t\tconst tmp = opt; // Object.hasOwn(opt, prop) ? opt : target;\r\n\t\t\t\t\r\n\t\t\t\tconst type = tmp[prop]?.type;\r\n\t\t\t\tconst safe = tmp[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = tmp[prop]?.default;\r\n\t\t\t\tconst multi = tmp[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = tmp[prop]?.attribute || prop;\r\n\t\t\t\tlet val = target.hasAttribute(prop) ? GSAttr.get(target, prop) : target[prop];\r\n\r\n\t\t\t\tif (GSFunction.isFunction(val)) return val.bind(target);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computedStyleMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #language = navigator.language;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, language) {\r\n        const me = this;\r\n        me.language = language;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get language() {\r\n        return this.#language;\r\n    }\r\n\r\n    set language(val) {\r\n        this.#language = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, language = navigator.language, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.language = language;\r\n        tmp.setDate(1);\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, language = navigator.language, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.language = language;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#language)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#language, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, language) {\r\n        format = format || GSUtil.getDateFormat(language);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    /**\r\n     * Check if a year is a leap year\r\n     * @param {number} year \r\n     * @returns {Boolean}\r\n     */\r\n    static isLeapYear(year) {\r\n        return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, language: {}, extract: {}, key: { type: Boolean } };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * TODo improve https://www.geeksforgeeks.org/how-to-convert-array-of-objects-into-unique-array-of-objects-in-javascript/\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @param {Boolean} advanced Used when data is Object instead of string\r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = [], advanced = false) {\r\n        if (advanced) {\r\n            return [...new Set([...first, ...second].map(JSON.stringify))].map(JSON.parse);\r\n        }\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', language:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const language = cfg.language || GSUtil.language;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        // intercept overrides; used b GS-TABLE cell Ui remapping\r\n        if (cfg.childElementCount > 0) {\r\n            const el = cfg.querySelector(`gs-item[value=\"${val}\"]`);\r\n            return GSAttr.get(el, \"map\", val);\r\n        }\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                if (GSUtil.isNumber(val)) return new GSDate(val).format(cfg.format, language);\r\n                if (cfg.format) return GSDate.parse(val, cfg.format, language);\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, language);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, language) : val;\r\n            case 'string':\r\n            case 'text':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(language);\r\n                    return new GSDate(val).format(fmt, language);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, language);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(language, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static *filter(data = [], filter = [], fields, limit = 0) {\r\n        let cnt = 0;\r\n        let sts = false;\r\n        for (let rec of data) {\r\n            sts = GSData.filterRecord(rec, filter, fields);\r\n            if (sts) {\r\n                cnt++\r\n                yield rec;\r\n            }\r\n            if (limit > 0 && cnt >= limit) break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields, limit = 0) {\r\n        data = Array.isArray(data) ? data : [data];\r\n        filter = Array.isArray(filter) ? filter : [filter];\r\n        if (filter.length === 0) return data;\r\n        return [...GSData.filter(data, filter, fields, limit)];\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = GSUtil.isPrimitive(filter);\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter, fields);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (GSData.filterValue(value, filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter, fields) {\r\n\r\n        let primitive = false;\r\n        let found = true;\r\n        let value = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            primitive = GSUtil.isPrimitive(flt);\r\n            if (primitive) {\r\n                found = found && GSData.filterSimple(rec, flt, fields);\r\n            } else {\r\n                value = rec[flt.name];\r\n                if (flt.name) {\r\n                    found = found && GSData.filterValue(value, flt)\r\n                } else {\r\n                    found = found && GSData.filterSimple(rec, flt.value, fields);\r\n                }\r\n            }\r\n\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static filterValue(value, filter) {\r\n        const toCheck = GSUtil.isPrimitive(filter) ? filter : filter.value;\r\n        if (GSUtil.isDate(value)) {\r\n            return GSData.matchDate(value, filter);\r\n        } else if (GSUtil.isNumber(value)) {\r\n            return GSData.matchNumber(value, GSUtil.asNum(toCheck, null), filter.op);\r\n        } else {\r\n            return (GSUtil.normalize(value)).toLocaleLowerCase().includes(GSUtil.normalize(toCheck).toLocaleLowerCase());\r\n        }\r\n    }\r\n\r\n    static matchDate(val, filter, language) {\r\n\r\n        if (typeof filter === 'string') {\r\n            const value = '' + filter;\r\n            const local = val.toLocaleDateString(language);\r\n            const iso = val.toISOString();\r\n            return local.includes(value) || iso.includes(value);\r\n        }\r\n\r\n        if (!filter.value) return false;\r\n\r\n        const qry = filter.value instanceof Date ? 'date' : typeof filter.value;\r\n\r\n        switch (qry) {\r\n            case 'number':\r\n                return GSData.matchNumber(val.getTime(), filter.value, filter.op);\r\n            case 'date':\r\n                return GSData.matchNumber(val.getTime(), filter.value.getTime(), filter.op);\r\n        }\r\n\r\n        return GSData.matchDate(val, '' + filter.value, filter.language);\r\n    }\r\n\r\n    /**\r\n     * Match number by operator\r\n     * @param {*} value \r\n     * @param {*} query \r\n     * @param {*} operator \r\n     */\r\n    static matchNumber(value = 0, query = 0, operator = 'eq') {\r\n        switch (operator) {\r\n            case 'gt': return query > value;\r\n            case 'lt': return query < value;\r\n            case 'ge': return query >= value;\r\n            case 'le': return query <= value;\r\n        }\r\n        return value === query;\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToOject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name, partial = false) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj[n][i] : null;\r\n        } else if (obj.hasOwnProperty(n)) {\r\n            obj = partial ? obj[n] || obj : obj[n];\r\n        } else {\r\n            obj = null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n\tstatic readFromObject(obj, name) {\r\n        if (obj?.hasOwnProperty(name)) return GSData.readFromProperty(obj, name);\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    /**\r\n     * Create a deep clone of an object\r\n     * @param {Object} obj \r\n     * @returns {Object}\r\n     */\r\n    static deepClone(obj) {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} shadow \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el, shadow = false) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()), shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSelectElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSelect(el) {\r\n\t\treturn el instanceof HTMLSelectElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSlotElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSlotElement(el) {\r\n\t\treturn el instanceof HTMLSlotElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @param {Number} level How many levels to walk, 0 = all\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry, levels = 0) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tlevels = GSUtil.asNum(levels, 0);\r\n\t\tconst limit = levels > 0;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t\tif (limit && --levels == 0) return null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el, defaults = false) {\r\n\t\tlet val = null;\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\tval = el.value ? el.valueAsNumber : el.value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\tval = Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value') && el.value) {\r\n\t\t\t\t\tval = el.checked ? el.value : null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tval = el.checked;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tval = el.value;\r\n\t\t}\r\n\r\n\t\tif (GSUtil.isNull(val) && defaults) {\r\n\t\t\tval = el.defaultValue;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el, defaults);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromValue(el, val, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tif (defaults) el.defaultValue = el.checked;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = GSUtil.normalize(data);\r\n\t\t\t\tif (defaults) el.defaultValue = el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true, defaults = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => GSDOM.fromElement2Object(el, params, defaults));\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @param {Boolean} defaults Set default value for form reset  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output', defaults = false) {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\t// if (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj, defaults));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromObject2Element(el, obj, defaults = false) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\tGSDOM.fromValue(el, val, defaults);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement (input) value to JSON Object  \r\n\t * @param {HTMLElement} owner Element value source\r\n\t * @param {Object} obj Object to populate \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromElement2Object(el, obj, defaults = false) {\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t} else if (el.checked) {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  If false, will include #tagName\r\n\t * @param {Object} definitions Json data type definitions\t\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false, definitions) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive,plain,definitions));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\t//obj.dataset = Object.assign({}, own.dataset);\r\n\r\n\t\tconst props = definitions || GSDOM.allProperties(own);\r\n\t\tArray.from(own.attributes).forEach(v => {\r\n\t\t\tconst type = props[v.name]?.type;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase Boolean:\r\n\t\t\t\t\tobj[v.name] = own.hasAttribute(v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Number:\r\n\t\t\t\t\tobj[v.name] = GSAttr.getAsNum(own, v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tobj[v.name] = v.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain, definitions));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj)\r\n\t\t\t.filter(v => v != 'items')\r\n\t\t\t.filter(v => v[0] != '#')\r\n\t\t\t.filter(v => v[0] != '$')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (obj[\"#def\"]) {\r\n\t\t\tel[Symbol.for(\"#def\")] = obj[\"#def\"];\r\n\t\t}\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj)\r\n\t\t\t.filter(v => v != 'items')\r\n\t\t\t.filter(v => v[0] != '#')\r\n\t\t\t.filter(v => v[0] != '$')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', '');\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own\r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t */\r\n\tstatic setValue(qry, val, own, defaults = false) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\t/**\r\n\t * Extract and merge all static properties definition from WebComponent instance\r\n\t * @param {GSElement} obj \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic allProperties(obj) {\r\n\t\tconst list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n\t\tlist.push(obj.constructor?.properties || obj.properties);\r\n\t\treturn GSData.mergeObjects(list);\r\n\t}\r\n\r\n\t/**\r\n\t * Return element template ref\r\n\t * @param {GSElement} host \r\n\t * @returns \r\n\t */\r\n\tstatic templateRef(host) {\r\n\t\tif (!host) return;\r\n\t\tif (host.tagName === 'GS-TEMPLATE') return host.src;\r\n\t\treturn host.template || host.query?.('template', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Reset form element\r\n\t * @param {*} element \r\n\t * @returns \r\n\t */\r\n\tstatic reset(element) {\r\n\t\tif(GSDOM.isFormElement(element)) {\r\n\t\t\tif (!GSDOM.resetSelect(element)) {\r\n\t\t\t\telement.dataset.typed = false;\r\n\t\t\t\telement.value = element.defaultValue;\r\n\t\t\t\tGSDOM.#dispatch(element);\r\n\t\t\t\treturn true;\t\r\n\t\t\t}\r\n\t\t} \t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Reset select element to default value\r\n\t * @param {HTMLSelectElement} element \r\n\t */\r\n\tstatic resetSelect(element) {\r\n\t\tif (GSDOM.isSelect(element)) {\r\n\t\t\tArray.from(element.options).forEach(el => el.selected = el.hasAttribute('selected'));\r\n\t\t\tGSDOM.#dispatch(element);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic #dispatch(element) {\r\n\t\telement.dispatchEvent(new Event('change', { bubbles: true, composed: true }));\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t\tglobalThis.dispatchEvent?.(new CustomEvent('gs-base-ready', {\r\n\t\t\tdetail: {\r\n\t\t\tmessage: 'GS Base is ready',\r\n\t\t\ttime: new Date(),\r\n\t\t\t}\r\n\t\t}));\t\t\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #suspended = 0; // Corrected typo\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 0, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error('Error waiting for page load:', e); // Improved error handling\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (GSEvents.#loaded) {\r\n\t\t\tawait GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.sendSuspended(target, name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#suspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#suspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#suspended > 0) GSEvents.#suspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, evt => {\r\n\t\t\t\t\tsignal.removeEventListener('abort', reject);\r\n\t\t\t\t\tcallback?.(evt);\r\n\t\t\t\t\tresolve(evt);\r\n\t\t\t\t}, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic detachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if available.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = GSUtil.isString(data) ? data : data.action || data.data?.action;\r\n\t\t\tGSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t\tGSEvents.waitPageLoad();\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(this.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {Boolean} A status of successful observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el, opt) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el, opt);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {Boolean} forRemove If \"true\", return injection filter functions, else removal functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {Boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {Boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {Boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {Boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {Boolean} forRemove - call on node remove or add\r\n     * @param {HTMLElement} target - element to monitor\r\n     * @returns {Boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {Boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {Boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = (style || '').toString();\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop();\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n    * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\nimport { gsstyles } from \"./style.mjs\";\r\n\r\n/**\r\n * Cache for dynamically loaded styles.\r\n * Used to share styles among GS-* WebComponents\r\n * @class\r\n */\r\nexport class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Create a new CSSStyleSheet\r\n\t * @param {String} id Unique ID\r\n\t * @returns {CSSStyleSheet} Created instance\r\n\t */\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {String} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\t\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\t\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {String} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {String} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id, style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSID.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(gsstyles);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from './GSDOM.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSDOMObserver } from './GSDOMObserver.mjs';\r\nimport { GSCacheStyles } from './GSCacheStyles.mjs';\r\n\r\nconst adoptedId = Symbol();\r\nconst observer = Symbol();\r\n\r\n/**\r\n * Monitor HTMLStyleElement & HTMLLinkElement (of type stylesheet) for changes.\r\n * Every such element marked with data-adoptable=\"true\" will be cached and\r\n * will trigger gs-adopted event to notify component controller to update adoptableStyleSheet list\r\n */\r\nexport class GSAdoptedEngine {\r\n\r\n  static #timerID = 0;\r\n  static #ID = Date.now();\r\n  static #scheduled = false;\r\n\r\n  static #init() {\r\n    const me = GSAdoptedEngine;\r\n    me.observe(document.head);\r\n    me.#preload();\r\n    me.#timerID = setInterval(() => me.#adopt(), me.timeout);\r\n  }\r\n\r\n  static #clear() {\r\n    const me = GSAdoptedEngine;\r\n    clearInterval(me.#timerID);\r\n    me.#timerID = undefined;\r\n  }\r\n\r\n  static #adopt() {\r\n    const me = GSAdoptedEngine;\r\n    const sheets = me.#adoptable;\r\n    if (sheets.length == 0) return me.#clear();\r\n    sheets.map(s => me.#adoptSheet(s));\r\n    me.update();\r\n  }\r\n\r\n  static update() {\r\n    const me = GSAdoptedEngine;\r\n    if (me.#scheduled) return;\r\n    me.#scheduled = true;\r\n    queueMicrotask(() => {\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          document.adoptedStyleSheets = me.#sorted;\r\n          document.adoptedStyleSheets.id = ++me.#ID;\r\n        } finally {\r\n          me.#scheduled = false;\r\n          globalThis.dispatchEvent(new CustomEvent('gs-adopted'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static #asText(sheet) {\r\n    return Object.values(sheet.cssRules).map(o => o.cssText).join('');\r\n  }\r\n\r\n  static #adoptLink(el) {\r\n    const me = GSAdoptedEngine;\r\n    GSAdoptedEngine.#monitorAttributes(el);\r\n    Array.from(document.styleSheets).filter(s => s.ownerNode === el).map(s => me.#adoptSheet(s));\r\n  }\r\n\r\n  static #adoptSheet(sheet) {\r\n    const me = GSAdoptedEngine;\r\n    const style = me.#asText(sheet);\r\n    return me.#adoptStyle(sheet.ownerNode, style);\r\n  }\r\n\r\n  static #adoptStyle(ownerNode, style) {\r\n    const me = GSAdoptedEngine;\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(style);\r\n    sheet.id = ++me.#ID;\r\n    ownerNode[adoptedId] = sheet.id;\r\n    me.#store(ownerNode, sheet);\r\n    return sheet;\r\n  }\r\n\r\n  static #store(ownerNode, sheet) {\r\n    GSCacheStyles.set(sheet.id, sheet);\r\n  }\r\n\r\n  static #remove(ownerNode, sheet) {\r\n    GSCacheStyles.remove(sheet.id);\r\n    ownerNode[observer]?.disconnect?.();\r\n    ownerNode[observer] = undefined;\r\n  }\r\n\r\n  static get #sorted() {\r\n    return GSCacheStyles.styles;\r\n  }\r\n\r\n  /**\r\n   * List of adoptable styles or links. Filter only those with dataset.adoptable=true\r\n   * @returns {HTMLStyleElement|HTMLLinkElement}\r\n   */\r\n  static get #adoptable() {\r\n    return Object.values(document.styleSheets)\r\n      .filter(o => o.ownerNode)\r\n      .filter(o => o.ownerNode.dataset.adoptable)\r\n      .filter(o => !o.ownerNode[adoptedId]);\r\n  }\r\n\r\n  static #preload() {\r\n    GSDOM.queryAll(document.head, 'link[rel=\"preload\"][as=\"style\"]')\r\n    .forEach(el => {\r\n      el.remove();\r\n      document.head.appendChild(el);\r\n    });\r\n  }\r\n\r\n  static #onAttributeChange(mutationList) {\r\n    mutationList.forEach((mutation) => {\r\n       const id = mutation.target[adoptedId];\r\n       const style = GSCacheStyles.get(id);\r\n       if(style) style.disabled = mutation.target.hasAttribute('disabled');\r\n    });\r\n    GSAdoptedEngine.update();\r\n  }\r\n  \r\n  static #monitorAttributes(element) {\r\n    const me = GSAdoptedEngine;\r\n    const callback = me.#onAttributeChange.bind(me);\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(element, {\r\n      attributeFilter: [\"disabled\"],\r\n      attributeOldValue: true,\r\n      subtree: false,\r\n    });\r\n    return observer;\r\n  }\r\n  \r\n  /**\r\n   * Filter style and link(css) elements which will be shared\r\n   * with all web components. Filter only those marked with data-adoptable\r\n   * @param {HTMLElement} el \r\n   * @returns {Boolean} Return true if monitored element is selected for further processing\r\n   */\r\n  static #onMonitorFilter(el) {\r\n    return (Boolean(el.dataset?.adoptable))\r\n      && (\r\n        (el instanceof HTMLLinkElement && (el.rel === 'stylesheet' || el.as === \"style\"))\r\n        || el instanceof HTMLStyleElement\r\n      );\r\n  }\r\n\r\n  /**\r\n   * When style added to the HTML page, attach it to the WebComponents\r\n   * @param {HTMLStyleElement|HTMLLinkElement} el \r\n   */\r\n  static #onMonitorConnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    if (el instanceof HTMLStyleElement) {\r\n      me.#adoptStyle(el, el.innerText);\r\n      me.update();\r\n    } else if (el instanceof HTMLLinkElement) {\r\n      GSEvents.wait(el, 'load', 0, false).then(e => {\r\n        if (el.rel === 'preload') return el.rel = \"stylesheet\";\r\n        me.#adoptLink(e.target);\r\n        me.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When style removed, remove from adoptable and update\r\n   * @param {HTMLElement} el \r\n   */\r\n  static #onMonitorDisconnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    me.#sorted.filter(o => o.id === el[adoptedId])\r\n          .forEach(o => me.#remove(el, o));\r\n    me.update();\r\n  }\r\n\r\n  /**\r\n   * Observe DOM tree for mutations\r\n   * @param {HTMLElement} owner Root element to watch DOM tree from \r\n   */\r\n  static observe(owner) {\r\n    const me = GSAdoptedEngine;\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorConnect, false, owner);\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorDisconnect, true, owner);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSVersion } from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static ROUTER_URL = globalThis.GS_ROUTER_URL || location.origin;\r\n\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        const rootURL = GSLoader.#defaultURL;\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            GSLoader.TEMPLATE_URL = rootURL;\r\n            globalThis.GS_TEMPLATE_URL = rootURL;\r\n        }\r\n\r\n        if (!globalThis.GS_ROUTER_URL) {\r\n            GSLoader.ROUTER_URL = rootURL;\r\n            globalThis.GS_ROUTER_URL = rootURL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n\r\n    static get #defaultURL() {\r\n        const url = location.href.split('?').pop();\r\n        const seg = url.split('/');\r\n        return url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n    }\r\n\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        //if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        }\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used to load router definition from virtual path\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getRouter(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? GSUtil.toJson(el.innerHTML) : {};\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getRouterURL(def);\r\n        return GSLoader.loadSafe(def, 'GET', null, true);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getRouterURL(url = '') {\r\n        url = url.startsWith('//') ? GSLoader.#routerURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #routerURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#routerPath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #routerPath() {\r\n        return GSLoader.ROUTER_URL ? GSLoader.ROUTER_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP method get|put|post\r\n     * @param {Object} headers HTTP request headers in JSON key/value pairs\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @param {} body Data to send in a request \r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            // TODO - detect if binary\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by its name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve already existing template by name,\r\n\t * or inject a new one if it does not exist already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} tpl Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t// return document.getElementById(tpl.slice(1));\r\n\t\t\treturn GSDOM.query(`template[id=\"${tpl.slice(1)}\"]`, true);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-attribute - toggle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-call - calls a function on a given target (multiple functions supported)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: \r\n * data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * \r\n * data-gs-target determine element on which to execute,\r\n * if not specified, it means current element\r\n * \r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        hashed: { attribute: 'data-gs-hashed', type: Boolean },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el) {\r\n        const me = this;\r\n        me.#host =  el.isProxy ? el.self : el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = el.isProxy ? el : GSAttributeHandler.proxify(me.#host);\r\n    }\r\n\r\n    /**\r\n     * Main function to process element data-gs-* attributes\r\n     * @param {Event} e \r\n     */\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    /**\r\n     * Process each individual data-gs-* attribute\r\n     * @param {GSElement} host \r\n     * @param {String|HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleSwap(host, target);\r\n        me.#handleInject(host, target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    /**\r\n     * Bind provided value to the form or form element\r\n     * @param {HTMLFormElement|HTMLInputElement} target \r\n     * @param {Event} evt \r\n     * @returns \r\n     */\r\n    #handleBinding(target, evt) {\r\n        const source = evt?.target?.field || evt?.target?.form || evt?.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (!(isField || isForm)) return;\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Trigger 'action' event on target to execute specific function\r\n     * @param {GSElement} target \r\n     */\r\n    #handleAction(target) {\r\n        if (this.action) GSEvents.send(target, 'action', this.action, true, true);\r\n    }\r\n\r\n    /**\r\n     * Set target attribute value\r\n     * @param {HTMLElement} target \r\n     * @returns \r\n     */\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    /**\r\n     * Set value to target propery\r\n     * @param {GSElement} target \r\n     * @returns \r\n     */\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle target css class\r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {*} host \r\n     * @param {*} target \r\n     * @param {*} evt \r\n     * @returns \r\n     */\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)(evt);\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send an event to a target\r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    #handleContent(host, target, value, clean = false) {\r\n        const me = this;\r\n        if (value) {\r\n            let src = '';\r\n            const useDef = GSUtil.asBool(value);\r\n            if (useDef) {\r\n                src = GSDOM.fromJsonAsString(me.definition);\r\n            } else {                \r\n                src = me.#toHTML(value);                \r\n            }\r\n\r\n            const content = GSDOM.parse(src, true);\r\n\r\n            if (!useDef) {\r\n                GSAttr.jsonToAttr(me.definition, content);\r\n            }\r\n\r\n            if (clean) { \r\n                target.innerHTML = '';\r\n            }\r\n\r\n            content.dataset.gsHashed = me.hashed;\r\n            me.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Inject HTML to target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleInject(host, target) {\r\n        this.#handleContent(host, target, this.inject, false);\r\n    }\r\n\r\n    /**\r\n     * Swap inner HTML on a target\r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleSwap(host, target) {\r\n        this.#handleContent(host, target, this.swap, true);\r\n    }\r\n\r\n    /**\r\n     * Convert value as URL to a tempalte or as a component name to inject\r\n     * @param {String} value \r\n     * @returns {String}\r\n     */\r\n    #toHTML(value = '') {\r\n        return value.indexOf('/') < 0 ? `<${value}></${value}>` : `<gs-template flat src=\"${value}\"></gs-template>`;\r\n    }\r\n\r\n    /**\r\n     * Load HTML template and apply to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    /**\r\n     * Apply htmltemplate to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} template \r\n     */    \r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    /**\r\n     * Apply html template to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} content \r\n     */    \r\n    #applyContent(host, target, content) {\r\n        if (host?.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    detach(name = 'click') {\r\n        //GSEvents.detachListeners(this.#host);\r\n        const me = this;\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        me.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n        const me = this;\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                //return [GSDOM.root(me.#host)];\r\n                return [me.#host.parentComponent];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n        const list = GSDOM.queryAll(document.body, me.target, false, true).filter(el => el.tagName !== 'GS-ITEM'); \r\n        if (list.length === 0) list.push(me.#host);\r\n        return list;\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get definition() { return this.#proxy[Symbol.for('#def')]; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n    get hashed() { return this.#proxy.hashed; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    /**\r\n     * Is property value JSON\r\n     */\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    /**\r\n     * Is element attribute value JSON\r\n     */\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    /**\r\n     * Wrap any element into data-gs-* handler\r\n     * @param {HTMLElement} el \r\n     * @returns {Proxy}\r\n     */\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    /**\r\n     * Process data-gs-* attributtes on a element\r\n     * @param {HTMLElement} el \r\n     * @param {Event} e \r\n     * @returns \r\n     */\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('data-gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    /**\r\n     * Create a new attribute handler instance\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     * @param {boolean} override If 'false' will skip existing atributes\r\n     */\r\n    static clone(from, to, override = true) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .filter(o => override || !to.hasAttribute(o.attribute))          \r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    /**\r\n     * Check if component is bindable to events\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static isBindable(el) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        return Object.values(def)\r\n            .filter(o => el.hasAttribute(o.attribute))\r\n            .length > 0;\r\n\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBeep class\r\n * @module base/GSBeep\r\n */\r\n\r\n\r\n/**\r\n * A helper class to use browser AudiContext to make tones\r\n * @class\r\n */\r\nexport class GSBeep {\r\n\r\n    static audioCtx = globalThis.AudioContext || globalThis.webkitAudioContext || globalThis.audioContext;\r\n\r\n    /**\r\n     * Helper function to emit a beep sound in the browser using the Web Audio API.\r\n     * \r\n     * @param {number} duration - The duration of the beep sound in milliseconds.\r\n     * @param {number} frequency - The frequency of the beep sound.\r\n     * @param {number} volume - The volume of the beep sound.\r\n     * @param {string} tyoe - The sound type (sine, square, sawtooth, triangle, custom)\r\n     * \r\n     * @returns {Promise} - A promise that resolves when the beep sound is finished.\r\n     */\r\n    static beep(duration = 200, frequency = 440, volume = 1, type = 'sine') {\r\n        return new Promise((resolve, reject) => {\r\n            try{\r\n                if (!GSBeep.isAvailable) return resolve();\r\n                const context = new GSBeep.audioCtx();\r\n                const oscillatorNode = context.createOscillator();\r\n                const gainNode = context.createGain();\r\n                oscillatorNode.connect(gainNode);\r\n\r\n                // Set the oscillator frequency in hertz\r\n                oscillatorNode.frequency.value = frequency;\r\n\r\n                // Set the type of oscillator\r\n                oscillatorNode.type = type;\r\n                gainNode.connect(context.destination);\r\n\r\n                // Set the gain to the volume\r\n                gainNode.gain.value = volume * 0.01;\r\n\r\n                // Start audio with the desired duration\r\n                oscillatorNode.start(context.currentTime);\r\n                oscillatorNode.stop(context.currentTime + duration * 0.001);\r\n\r\n                // Resolve the promise when the sound is finished\r\n                oscillatorNode.onended = () => resolve();                \r\n            }catch(error) {\r\n                reject(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    static get isAvailable() {\r\n        const {isActive, hasBeenActive } =  navigator.userActivation;\r\n        return isActive || hasBeenActive;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promises sequentially\r\n\t * @param {Array<Promise>} ps \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const controller = abortable instanceof AbortController ? abortable : (abortable ? new GSAbortController(timeout) : null);\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        wrap.controller = abortable instanceof AbortController ? abortable : (abortable ? new GSAbortController(timeout) : null);\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n            me.#listeners.delete(o);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport { GSEvent } from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport class GSEventBus {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {String} name EventBus name\r\n     * @param {String} type Event name\r\n     * @param {Object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {String} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {String} name unique buss name\r\n     * @returns {Boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constructor to attach Gesture featuer to an HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {Boolean} swipe Monitor swipe gesture\r\n     * @param {Boolean} tap Monitor tap gesture\r\n     * @param {Boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move: me.#handleTouchMove.bind(me),\r\n            start: me.#handleTouchStart.bind(me),\r\n            end: me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) {\r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 && Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {Number}\r\n     */\r\n    static fingers(e) {\r\n        return e.detail.touches?.length;\r\n    }\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns {GSGesture}\r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport class GSItem extends HTMLElement {\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic properties = {\r\n\t\tactive: { type: Boolean },\r\n\t\tdisabled: { type: Boolean },\r\n\t\tselected: { type: Boolean },\r\n\t\tautofocus: { type: Boolean },\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return template content of GS-ITEM element (if exists)\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tget body() {\r\n\t\tlet tpl = GSAttr.get(this, 'template');\r\n\t\tif (tpl) return `<gs-template flat src=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = this.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item elements\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tget items() {\r\n\t\treturn Array.from(this.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSAttr.get(this, 'name', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent GS-* component\r\n\t */\r\n\tget parentComponent() {\r\n\t\treturn GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n\t}\r\n\t\t\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate that parent element contains only specific childrens\r\n\t * @param {*} own \r\n\t * @param {*} tagName \r\n\t * @returns \r\n\t */\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic collect(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Convert GS-ITEM list to JSON\r\n\t * @param {HTMLElement} root Element containing GS-ITEM childs \r\n\t * @returns {Array} Arary of JSON objects\r\n\t */\r\n\tstatic toJSON(root) {\r\n\t\treturn GSItem.collect(root).map(el => el.asJSON(true));\r\n\t}\r\n\r\n\t/**\r\n\t * Make GS-ITEM attributes JSON compatible \r\n\t * @param {*} root \r\n\t * @param {*} definition \r\n\t * @returns \r\n\t */\r\n    static proxify(root, definition) {        \r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, definition));\r\n    }\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport class GSPopper {\r\n\r\n\t/**\r\n\t * A simple wrapper to get element DOMRect\r\n\t * @param {HTMLElement} el \r\n\t * @returns {DOMRect}\r\n\t */\r\n\tstatic asRect(el) {\r\n\t\treturn el.getBoundingClientRect();\r\n\t}\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = GSPopper.asRect(el);\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = GSPopper.asRect(element);\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tif (!style) return;\r\n\r\n\t\tconst css = {\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '0px',\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.translate = `${obj.x}px ${obj.y}px`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tconst astyle = GSDynamicStyle.dynamicStyle(arrow);\r\n\t\tif (!style) return;\r\n\t\t\r\n\t\tconst css = {\r\n\t\t\tinset: GSPopper.#inset(pos),\r\n\t\t\tposition: 'absolute',\r\n\t\t\tmargin: '0px',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\twidth: 'max-content',\r\n\t\t\theight: 'max-content',\t\t\t\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\t\tastyle.position = 'absolute';\r\n\r\n\t\tconst srect = GSPopper.asRect(source);\r\n\t\tconst arect = GSPopper.asRect(arrow);\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tconst aopt = {\r\n\t\t\ttranslate: `${arr.x}px ${arr.y}px`,\r\n\t\t\ttop: arr.top ? arr.top : '',\r\n\t\t\tleft: arr.left ? arr.left : ''\r\n\t\t}\r\n\r\n\t\tconst opt = {\r\n\t\t\ttranslate : `${obj.x}px ${obj.y}px`\r\n\t\t};\r\n\r\n\t\tObject.assign(style, opt);\r\n\t\tObject.assign(astyle, aopt);\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst opt = {};\r\n\r\n\t\topt.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\topt.left = '';\r\n\t\t\topt.top = '0px';\r\n\t\t\tshift = 0; //pos.isStart ? size : -1 * size;\r\n\t\t\topt.translate = `${shift}px ${arrowPosH / 2}px`;\r\n\t\t} else {\r\n\t\t\topt.top = '';\r\n\t\t\topt.left = '0px';\r\n\t\t\tshift = 0; //pos.isTop ? size : -1 * size;\r\n\t\t\topt.translate = `${arrowPosW}px ${shift}px`;\r\n\t\t}\r\n\r\n\t\tGSDynamicStyle.applyDynamicStyle(arrow, opt);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {\r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSQueryCSS } from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value);\r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n\r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSRouter class\r\n * @module base/GSRouter\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSAttributeHandler } from \"./GSAttributeHandler.mjs\";\r\n\r\n/**\r\n * Class for handling hash based routing.\r\n * Class uses GSAttributeHandler and optional JSON definition to handle routing.\r\n * \r\n * Use globalThis.GS_ROUTER_URL before loading this module to define JSON definition file location\r\n * @Class\r\n */\r\nexport class GSRouter {\r\n\r\n    #logging = true;\r\n    #enabled = false;\r\n    #hashCallback = null;\r\n    #definition = {};\r\n\r\n    constructor() {\r\n        this.#hashCallback = this.#onHashChange.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Loda JSON definition for routing from JSON document.\r\n     * @param {string} url \r\n     * @returns \r\n     */\r\n    async loadDefinition(url) {\r\n        return GSLoader.getRouter(url);\r\n    }\r\n\r\n    /**\r\n     * Initialize routing from provided URL\r\n     * @param {string} url \r\n     * @param {number} wait in ms\r\n     */\r\n    async initialize(url, wait = 0) {\r\n        const me = this;\r\n        if (GSUtil.isStringNonEmpty(url)) {\r\n            me.#definition = await me.loadDefinition(url);\r\n        }\r\n        if (wait > 0) {\r\n            await GSEvents.waitPageLoad(null, null, null, wait);\r\n        }\r\n        me.enable();\r\n        me.#onHashChange();        \r\n    }\r\n\r\n    /**\r\n     * Enable routing\r\n     */\r\n    enable() {\r\n        if (this.#enabled) return;\r\n        GSEvents.on(globalThis, null, 'hashchange', this.#hashCallback);\r\n        this.#enabled = true;\r\n    }\r\n\r\n    /**\r\n     * Disable routing\r\n     */\r\n    disable() {\r\n        GSEvents.off(globalThis, null, 'hashchange', this.#hashCallback);\r\n        this.#enabled = false;\r\n    }\r\n\r\n    /**\r\n     * Register a single route with options\r\n     * @param {string} route Abstract url for a route\r\n     * @param {Object} options \r\n     */\r\n    register(route, options) {\r\n        this.#definition[route] = options;\r\n    }\r\n\r\n    /**\r\n     * Unregister a single route\r\n     * @param {string} route \r\n     */\r\n    unregister(route) {\r\n        delete this.#definition[route];\r\n    }\r\n\r\n    /**\r\n     * Get URL hashbang without hash\r\n     */\r\n    get hash() {\r\n        return location.hash.slice(1);\r\n    }\r\n\r\n    /**\r\n     * Return routing definition object\r\n     */\r\n    get definition() {\r\n        return GSData.deepClone(this.#definition);\r\n    }\r\n\r\n    get log() {\r\n        return this.#logging;\r\n    }\r\n\r\n    set log(val) {\r\n        this.#logging = GSUtil.asBool(val);\r\n    }\r\n\r\n    #onHashChange() {\r\n        const me = this;\r\n        const def = me.#definition[\"#def\"] || {};\r\n        const defaults = me.#definition[\"#defaults\"] || {};\r\n        const route = me.#definition[me.hash];\r\n        if (route) {\r\n            const el = GSDOM.fromJson(Object.assign({}, route, def, defaults));\r\n            el.dataset.gsHashed = true;\r\n            const px = GSAttributeHandler.proxify(el);\r\n            GSAttributeHandler.process(px);\r\n        } else if (me.#logging) {\r\n            GSLog.warn(null, `No routing definition found for: ${me.hash}`);\r\n        }\r\n    }\r\n\r\n    static {\r\n        if (globalThis.GS_DEFINITION_URL) {\r\n            new GSRouter().initialize(globalThis.GS_DEFINITION_URL, globalThis.GS_ROUTER_WAIT);\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTheme class\r\n * @module base/GSTheme\r\n */\r\n\r\n/**\r\n * Switch between dark and light mode\r\n * @Class\r\n */\r\nexport class GSTheme {\r\n\r\n    static #STORAGE = 'gs-theme-mode';\r\n\r\n    /**\r\n     * Changes the theme to 'dark mode' and save settings to local stroage.\r\n     * Basically, replaces/toggles every CSS class that has '-light' class with '-dark'\r\n     * @param {HTMLElement} el \r\n     */\r\n    static darkMode(el) {\r\n        GSTheme.#switch(el, 'light', 'dark');\r\n    }\r\n\r\n    /**\r\n     * Changes the theme to 'light mode' and save settings to local stroage.\r\n     * @param {HTMLElement} el \r\n     */\r\n    static lightMode(el) {\r\n        GSTheme.#switch(el, 'dark', 'light');\r\n    }\r\n\r\n    static #switch(el, from = 'light', to = 'dark') {\r\n\r\n        const root = el || document.body;\r\n\r\n        // TODO  switch dark/light mode ?!??!? \r\n\r\n        // save last state\r\n        GSTheme.theme = to;\r\n    }\r\n\r\n    static get theme() {\r\n        return localStorage.getItem(GSTheme.#STORAGE);\r\n    }\r\n\r\n    static set theme(val) {\r\n        localStorage.setItem(GSTheme.#STORAGE, val);\r\n        window.dispatchEvent(new CustomEvent('gs-theme', { detail: val }));\r\n        const htmlEl = document.head.parentElement;\r\n        if (val) {\r\n            htmlEl.dataset.bsTheme = val;\r\n        } else {\r\n            delete htmlEl.dataset.bsTheme;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get system default theme by media query\r\n     * @returns {String} dark|light \r\n     */\r\n    static getSystemDefaultTheme() {\r\n        const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\r\n        return darkThemeMq.matches ? 'dark' : 'light';\r\n    }\r\n\r\n    static #onTheme(e) {\r\n        const q = new URLSearchParams(location.hash.slice(1));\r\n        GSTheme.theme = q.get('theme');\r\n    }\r\n\r\n    static #setup() {\r\n        window.addEventListener('hashchange', GSTheme.#onTheme)\r\n        let settings = localStorage.getItem(GSTheme.#STORAGE);\r\n        if (settings == null) {\r\n            settings = GSTheme.getSystemDefaultTheme();\r\n        }\r\n\r\n\r\n        if (settings == 'dark') return GSTheme.darkMode();\r\n        if (settings == 'light') return GSTheme.lightMode();\r\n        // TODO switch\r\n\r\n    }\r\n\r\n    static {\r\n        GSTheme.#setup();\r\n        globalThis.GSTheme = GSTheme;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure following last in, first out (LIFO) order of operations.\r\n */\r\nexport class Stack extends Array {\r\n    \r\n    push(item) {\r\n        this.unshift(item);\r\n    }\r\n\r\n    pop() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure following first in, first out (FIFO) order of operations.\r\n */\r\nexport class Queue extends Array {\r\n    \r\n    enqueue(item) {\r\n        this.push(item);\r\n    }\r\n\r\n    dequeue() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst tree = new BinaryTree(1, 'AB');\r\n\r\ntree.insert(1, 11, 'AC');\r\ntree.insert(1, 12, 'BC');\r\ntree.insert(12, 121, 'BG', { right: true });\r\n\r\n[...tree.preOrderTraversal()].map(x => x.value);\r\n// ['AB', 'AC', 'BC', 'BCG']\r\n\r\n[...tree.inOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB', 'BC', 'BG']\r\n\r\ntree.value;                // 'AB'\r\ntree.hasChildren;          // true\r\n\r\ntree.find(12).isLeaf;           // false\r\ntree.find(121).isLeaf;          // true\r\ntree.find(121).parent.value;    // 'BC'\r\ntree.find(12).left;             // null\r\ntree.find(12).right.value;      // 'BG'\r\n\r\ntree.remove(12);\r\n\r\n[...tree.postOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB']\r\n*/\r\n\r\n/**\r\n * Binary Tree Node data holder\r\n */\r\nexport class BinaryTreeNode {\r\n\r\n    constructor(key, value = key, parent = null) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n\r\n    /**\r\n     * Check if both left and right are empty.\r\n     */\r\n    get isLeaf() {\r\n        return this.left === null && this.right === null;\r\n    }\r\n\r\n    /**\r\n     * Check if node has children\r\n     */\r\n    get hasChildren() {\r\n        return !this.isLeaf;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Binary tree implementation\r\n */\r\nexport class BinaryTree extends BinaryTreeNode {\r\n\r\n    constructor(key, value = key) {\r\n        super(key, value);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in in-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *inOrderTraversal(node = this) {\r\n        if (node.left) yield* this.inOrderTraversal(node.left);\r\n        yield node;\r\n        if (node.right) yield* this.inOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in post-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *postOrderTraversal(node = this) {\r\n        if (node.left) yield* this.postOrderTraversal(node.left);\r\n        if (node.right) yield* this.postOrderTraversal(node.right);\r\n        yield node;\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in pre-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *preOrderTraversal(node = this) {\r\n        yield node;\r\n        if (node.left) yield* this.preOrderTraversal(node.left);\r\n        if (node.right) yield* this.preOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to find the given parent node and \r\n     * insert a new child BinaryTreeNode either as the left or right child, \r\n     * depending on the passed options object.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @param {*} options \r\n     * @returns {boolean} Return true if data inserted\r\n     */\r\n    insert(\r\n        parentNodeKey,\r\n        key,\r\n        value = key,\r\n        { left, right } = { left: true, right: true }\r\n    ) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === parentNodeKey) {\r\n                const canInsertLeft = left && node.left === null;\r\n                const canInsertRight = right && node.right === null;\r\n                if (!canInsertLeft && !canInsertRight) return false;\r\n                if (canInsertLeft) {\r\n                    node.left = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n                if (canInsertRight) {\r\n                    node.right = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to remove a BinaryTreeNode from the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.left.key === key) {\r\n                node.left = null;\r\n                return true;\r\n            }\r\n            if (node.right.key === key) {\r\n                node.right = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to retrieve the given node in the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    find(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new DoublyLinkedList();\r\n\r\nlist.insertFirst(1);\r\nlist.insertFirst(2);\r\nlist.insertFirst(3);\r\nlist.insertLast(4);\r\nlist.insertAt(3, 5);\r\n\r\nlist.size;                      // 5\r\nlist.head.value;                // 3\r\nlist.head.next.value;           // 2\r\nlist.tail.value;                // 4\r\nlist.tail.previous.value;       // 5\r\n[...list].map(e => e.value);    // [3, 2, 1, 5, 4]\r\n\r\nlist.removeAt(1);               // 2\r\nlist.getAt(1).value;            // 1\r\nlist.head.next.value;           // 1\r\n[...list].map(e => e.value);    // [3, 1, 5, 4]\r\n\r\nlist.reverse();\r\n[...list].map(e => e.value);    // [4, 5, 1, 3]\r\n\r\nlist.clear();\r\nlist.size;                      // 0\r\n*/\r\n\r\n/**\r\n *  Linear data structure following doubly linked list order of operations.\r\n */\r\nexport class Node {\r\n\r\n    value = null;\r\n    next = null;\r\n    previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    release() {\r\n        this.value = undefined;\r\n        this.next = undefined;\r\n        this.previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DoublyLinkedList {\r\n\r\n    #nodes = [];\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     */\r\n    get size() {\r\n        return this.#nodes.length;\r\n    }\r\n\r\n    /**\r\n     * First element in the list\r\n     */\r\n    get head() {\r\n        return this.size ? this.#nodes[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Last elemet in the list\r\n     */\r\n    get tail() {\r\n        return this.size ? this.#nodes[this.size - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Create new linked node\r\n     * @param {*} value \r\n     * @param {*} nextNode \r\n     * @param {*} previousNode \r\n     * @returns \r\n     */\r\n    create(value, nextNode, previousNode) {\r\n        return new Node(value, nextNode, previousNode);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the given position in the list\r\n     * @param {*} index \r\n     * @param {*} value \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    insertAt(index, value, safe) {\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index] || null;\r\n        const node = this.create(value, nextNode, previousNode);\r\n\r\n        if (previousNode) previousNode.next = node;\r\n        if (nextNode) nextNode.previous = node;\r\n        this.#nodes.splice(index, 0, node);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the beginning of the list\r\n     * @param {*} value \r\n     */\r\n    insertFirst(value) {\r\n        this.insertAt(0, value);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the end of the list\r\n     * @param {*} value \r\n     */\r\n    insertLast(value) {\r\n        this.insertAt(this.size, value);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data in the given index\r\n     * @param {Number} index \r\n     * @returns \r\n     */\r\n    getAt(index) {\r\n        return this.#nodes[index];\r\n    }\r\n\r\n    indexOf(val) {\r\n        return this.#nodes.indexOf(val);\r\n    }\r\n\r\n    /**\r\n     * Remove the data at the given index\r\n     * @param {*} index \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    removeAt(index, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index + 1] || null;\r\n\r\n        if (previousNode) previousNode.next = nextNode;\r\n        if (nextNode) nextNode.previous = previousNode;\r\n\r\n        return this.#nodes.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    clear(full = true) {\r\n        if (full) this.#nodes.forEach(o => o.release());\r\n        this.#nodes = [];\r\n    }\r\n\r\n    /**\r\n     * Reverse data order\r\n     */\r\n    reverse() {\r\n        this.#nodes = this.#nodes.reduce((acc, { value }) => {\r\n            const nextNode = acc[0] || null;\r\n            const node = new Node(value, nextNode, null);\r\n            if (nextNode) nextNode.previous = node;\r\n            return [node, ...acc];\r\n        }, []);\r\n    }\r\n\r\n    toArray() {\r\n        return this.#nodes.map(e => e.value);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#nodes;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield* this.#nodes;\r\n    }\r\n\r\n    #validate(index, safe = false) {\r\n        const isInvalid = this.#isInvalidIndex(index);\r\n        if (isInvalid) {\r\n            if (safe) {\r\n                console.log(this.#error());\r\n            } else {\r\n                throw new Error(this.#error());\r\n            }\r\n        }\r\n        return !isInvalid;\r\n    }\r\n\r\n    #isInvalidIndex(index) {\r\n        return !Number.isInteger(index) || index < 0 || index > this.size;\r\n    }\r\n\r\n    #error() {\r\n        return `Invalid index. Current length is ${this.size}.`;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        const list = new DoublyLinkedList();\r\n        if (Array.isArray(data)) data.forEach(v => list.insertLast(v));\r\n        return list;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Tree Node data holder\r\n */\r\nexport class Tree {\r\n\r\n    value;\r\n\r\n    #key = null;\r\n    #parent = null;\r\n    #children;\r\n\r\n    #folder = false;\r\n    #level = 0;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        this.#key = key;\r\n        this.#parent = parent;\r\n        this.#folder = value?.leaf === false;\r\n        this.#level = parent ? parent.level + 1 : level;\r\n        this.#children = this.#folder ? [] : undefined;\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Return tree list from root to this node.\r\n     */\r\n    get subtree() {\r\n        return Array.from(this.up(undefined, false, true, true));\r\n    }\r\n\r\n    get levelID() {\r\n        return this.subtree.map(o => o.level).join('.');\r\n    }\r\n\r\n    /**\r\n     * Unique node canonical form\r\n     */\r\n    get nodeID() {\r\n        //if (this.parent?.level < 0) return this.index;\r\n        return this.subtree.map(o => o.index).join('.');\r\n    }\r\n\r\n    get path() {\r\n        return this.subtree.map(o => o.key).join('/');\r\n    }\r\n\r\n    get index() {\r\n        return this.parent?.nodes.indexOf(this) || 0;\r\n    }\r\n\r\n    get size() {\r\n        return this.#children?.length || -1;\r\n    }\r\n\r\n    get level() {\r\n        return this.#level;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Check if #children is empty\r\n     */\r\n    get isLeaf() {\r\n        return !this.#folder;\r\n    }\r\n\r\n    get isFolder() {\r\n        return this.#folder;\r\n    }\r\n\r\n    /**\r\n     * Check if has #childrens\r\n     */\r\n    get hasChildren() {\r\n        return this.#folder && this.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get key() {\r\n        this.#key ??= this.nodeID;\r\n        return this.#key;\r\n    }\r\n\r\n    get nodes() {\r\n        return this.#children;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get parent() {\r\n        return this.#parent;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n    /**\r\n     * Check if there are more siblings \r\n     */\r\n    get hasMore() {\r\n        return this.#parent?.size > this.index + 1;\r\n    }\r\n\r\n    get firstChild() {\r\n        return this.hasMore ? this.#children[0] : undefined;\r\n    }\r\n\r\n    get lastChild() {\r\n        return this.hasMore ? this.#children[this.#children.length - 1] : undefined;\r\n    }\r\n\r\n    get next() {\r\n        return this.down(this, false, false).next().value || this.nextSibling || this.parent?.nextSibling;\r\n    }\r\n\r\n    get previous() {\r\n        const node = this.previousSibling;\r\n        return (node?.hasChildren) ? node.lastChild : node || this.up(this, false, false).next().value;\r\n    }\r\n\r\n    get nextSibling() {\r\n        return this.hasMore ? this.#parent.#children[this.index + 1] : undefined;\r\n    }\r\n\r\n    get previousSibling() {\r\n        return this.index > 0 ? this.#parent.#children[this.index - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Clear all #children\r\n     */\r\n    clear() {\r\n        if (this.#children) {\r\n            this.#children.forEach(o => o.release?.());\r\n            this.#children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally, if called externally, \r\n     * make sure node is removed from parent \r\n     */\r\n    release() {\r\n        this.clear();\r\n        this.#key = null;\r\n        this.value = null;\r\n        this.#parent = null;\r\n    }\r\n\r\n    /**\r\n     * Walk down the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     * @param {Boolean} flat Navigate all nodes out of subtree\r\n     */\r\n    *down(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (node.#children?.length) {\r\n            for (let child of node.#children) {\r\n                yield* this.down(child, values, true, reverse, flat);\r\n            }\r\n        }\r\n        if (flat) {\r\n            const item = node.nextSibling || node.parent.nextSibling;\r\n            if (item) yield* this.down(item, values, true, reverse, flat);\r\n        }\r\n        /*\r\n        */\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk up the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     */\r\n    *up(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (flat) {\r\n            let item = node.previousSibling;\r\n            item = item?.isFolder ? item.lastChild : item;\r\n            if (item) yield* this.up(item, values, true, reverse, flat);\r\n        }        \r\n        if (node.parent) {\r\n            yield* this.up(node.parent, values, true, reverse, flat);\r\n        }\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk through all nodes\r\n     * @param {*} node \r\n     */\r\n    walk = this.down;\r\n\r\n    /**\r\n     * Simulate array function \"forEach\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */\r\n    forEach(callback, flat = false, reverse = false) {\r\n        this.every((node, index) => {\r\n            callback(node, index);\r\n            return true;\r\n        }, flat, reverse);\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"every\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    every(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let sts = true;\r\n        let i = 0;\r\n        for (let node of it) {\r\n            sts = callback(node, i++);\r\n            if (!sts) break;\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"find\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    find(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let i = 0;\r\n        for (let node of it) {\r\n            if (callback(node, i++)) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"filter\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only childrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    filter(callback, flat, reverse) {\r\n        return [...this.#filtered(callback, flat, reverse)];\r\n    }\r\n\r\n    *#filtered(callback, flat, reverse) {\r\n        const it = this.iterate(flat, reverse);\r\n        for (let node of it) {\r\n            let res = callback(node);\r\n            if (res) yield node;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Iterate all nodes\r\n     * @param {boolean} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {boolean} reverse If set, will iterate up the tree\r\n     */\r\n    *iterate(flat, reverse) {\r\n        reverse ? yield* this.up(this, false, false, false, flat) : yield* this.down(this, false, false,  false, flat);\r\n    }\r\n\r\n    /**\r\n     * Add a new Tree to the tree.\r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    append(key, value = key) {\r\n        let newOne = undefined;\r\n        if (key instanceof Tree) {\r\n            key.#parent = this;\r\n            key.#level = this.#level + 1;\r\n            newOne = key;\r\n        } else {\r\n            newOne = new Tree(key, value, this);\r\n        }\r\n        this.#folder = true;\r\n        this.#children ??= [];\r\n        this.#children.push(newOne);\r\n        return newOne;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method and Array.prototype.push() \r\n     * to add a new Tree to the tree.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    insert(parentNodeKey, key, value = key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === parentNodeKey) {\r\n                const newOne = new Tree(key, value, node);\r\n                this.#folder = true;\r\n                this.#children ??= [];\r\n                node.#children.push(newOne);\r\n                return newOne;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove node from tree. If key is set, will search for first node with matching key.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n\r\n        const me = this;\r\n\r\n        if (key) {\r\n            const node = me.findByKey(key);\r\n            node?.remove();\r\n            return node;\r\n        }\r\n\r\n        if (me.isRoot) throw new Error('Root node can\\'t be removed!');\r\n        const node = me.parent;\r\n        const filtered = node.#children.filter(c => c !== me);\r\n        if (filtered.length !== node.#children.length) {\r\n            node.#children = filtered;\r\n            return me;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method to retrieve the given node in the tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    findByKey(key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convert tree into array list\r\n     * @returns \r\n     */\r\n    flatten(values, inclusive, reverse) {\r\n        return [...this.down(this, values, inclusive, reverse)];\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) Tree.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.#children?.map(o => o.toJSON()) || {};\r\n        return this.isLeaf ? { key: this.key, value: this.value } :\r\n            {\r\n                key: this.key,\r\n                value: this.value,\r\n                items: this.#children.map(o => o.toJSON())\r\n            };\r\n    }\r\n\r\n    /**\r\n     * Make node iterable\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.down();\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof Tree;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) throw new Error('Parent required when data is array');\r\n            raw.forEach(o => Tree.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        const tree = new Tree(obj.key, obj, data ? parent : undefined);\r\n        if (hasParent) parent.append(tree);\r\n        if (items) Tree.from(tree, items);\r\n        return tree;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    /**\r\n     * Reset the registry\r\n     */\r\n    resetRegistry() {\r\n        this.#handlers.clear();\r\n        this.#map.clear();\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../base/GSID.mjs\";\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynamic menu etc.\r\n * @Class\r\n */\r\nexport class GSAbstractReadWrite extends GSEvent {\r\n\r\n    static #SELECT = Symbol('select');\r\n\r\n    #id = null;\r\n    #processors = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to register\r\n     * @param {object} processor\r\n     */\r\n    addProcessor(processor) {\r\n        if (!processor) return;\r\n        this.#processors ??= new Set();\r\n        this.#processors.add(processor);\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to remove\r\n     * @param {object} processor \r\n     */    \r\n    removeProcessor(processor) {\r\n        if (processor) this.#processors?.delete(processor);\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Generic event dispatcher, can be overriden to controll when to fire event\r\n     * @param {*} owner \r\n     * @param {*} type \r\n     * @param {*} data \r\n     * @param {*} error \r\n     */\r\n    notify(owner, type, data, error) {\r\n        this.emit(error ? 'error' : type, { type: type, error: error, owner: owner, data: data }, true);\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.#processors?.forEach(c => c.postRead?.(data));\r\n            if (data) me.notify(owner, 'read', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'read', data, e);\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.#processors?.forEach(c => c.postWrite?.(data));\r\n            if (result) me.notify(owner, 'write', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'write', data, e);\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        if (!val) return false;\r\n        GSUtil.asArray(val).forEach(o => o[GSAbstractReadWrite.#SELECT] = true);\r\n        const me = this;\r\n        me.emit('selection-add', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        if (!val) return false;\r\n        delete val[GSAbstractReadWrite.#SELECT];\r\n        const me = this;\r\n        me.emit('selection-remove', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        const me = this;\r\n        GSUtil.asArray(data).forEach(o => me.removeSelected(o));\r\n        me.emit('selection-clear');\r\n        me.emit('select');\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    getSelected(data = []) {\r\n        const me = this;        \r\n        return GSUtil.asArray(data).filter(o => me.isSelected(o));\r\n    }\r\n\r\n    /**\r\n     * Check if record id is in list of selected records\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    isSelected(val) {\r\n        return val ? val[GSAbstractReadWrite.#SELECT] === true : false;\r\n    }\r\n\r\n    /**\r\n     * Get list of selected records.\r\n     * Override in inherited class\r\n     */\r\n    get selected() {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n    /**\r\n     * Reset the abstract read/write handler\r\n     */\r\n    reset() {\r\n        this.#processors = null;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"../base/GSFunction.mjs\";\r\nimport { GSLoader } from \"../base/GSLoader.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSAbstractReadWrite } from \"./AbstractReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #TYPE = \"remote\";\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #key = null;\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically register in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */\r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */\r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return { ...this.#headers };\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = { ...val };\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     */\r\n    get key() {\r\n        return this.#key;\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     * @var {String} \r\n     */\r\n    set key(val) {\r\n        this.#key = val;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */\r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#filter = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#sort = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest', 'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#writer);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Reset the read/write handler\r\n     */\r\n    reset() {\r\n        this.#src = '';\r\n        this.#headers = {};\r\n        this.#reader = 'GET';\r\n        this.#writer = 'POST';\r\n        this.#action = '';\r\n        this.#mode = '';\r\n        this.#key = null;\r\n        this.#skip = 0;\r\n        this.#limit = 0;\r\n        this.#sort = [];\r\n        this.#filter = [];\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSReadWrite.#TYPE, GSReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSData } from \"../base/GSData.mjs\";\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSCachedReadWrite class\r\n * @module base/GSCachedReadWrite\r\n */\r\n\r\n/**\r\n * ReadWrite with cached memory data. \r\n * @Class\r\n */\r\nexport class GSCachedReadWrite extends GSReadWrite {\r\n\r\n    static #TYPE = 'cached';\r\n\r\n    #data = [];\r\n\r\n    #reformat(data = []) {\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        return records;\r\n    }\r\n\r\n    #postFilter(data) {\r\n        const me = this;\r\n        data = GSData.sortData(data, me.sort);        \r\n        let limit = me.limit === 0 ? data.length : me.limit;\r\n        data = data.slice(me.skip, me.skip + limit);\r\n        return data;\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelected(this.#data);\r\n        this.#data = [];\r\n    }\r\n\r\n    append(data) {\r\n        if(!data) return false;\r\n        const me = this;\r\n        data = me.#reformat(data);\r\n        me.#data = me.#data.concat(data);\r\n        return me.#data;\r\n    }\r\n\r\n    remove(data) {\r\n        const me = this;\r\n        me.removeSelected(data);\r\n        me.#data = me.#data.filter(o => o =! data);\r\n        return me.#data;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n\r\n        if (me.#data.length === 0) {\r\n            const data = await super.onRead();\r\n            me.#data = me.#reformat(data);\r\n        }\r\n\r\n        let data = GSData.filterData(me.#data, me.filter, me.fields, me.limit);\r\n        data = me.#postFilter(data);\r\n        return data;\r\n    }\r\n\r\n    async onWrite(owner, data) {\r\n        return this.append(data);        \r\n    }\r\n\r\n    disable() {\r\n        this.#data = [];\r\n        super.disable();\r\n    }\r\n\r\n    set search(val) {\r\n        const me = this;\r\n        me.filter = val ? [{value : val}] : [];\r\n        me.read();\r\n        /*\r\n        let data = GSData.filterData(me.#data, [{value : val}]);\r\n        data = me.#postFilter(data);\r\n        me.notify(me, 'read', data);\r\n        */\r\n    }\r\n\r\n    clearSelected() {\r\n        return super.clearSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return super.getSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSCachedReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Reset the cached read/write handler\r\n     */\r\n    reset() {\r\n        this.clear();\r\n        super.reset();\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSCachedReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSCachedReadWrite.#TYPE, GSCachedReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { Tree } from \"../helpers/Tree.mjs\";\r\n\r\n/**\r\n * A module loading TreeNode class\r\n * @module data/TreeNode\r\n */\r\n\r\n/**\r\n * UI mediator between Tree linked nodes and WebComponents\r\n * @Class\r\n */\r\nexport class TreeNode extends Tree {\r\n\r\n    #multi = false;\r\n    #opened = false;\r\n    #focused = false;\r\n    #selected = false;\r\n    \r\n    #focusedNode = undefined;\r\n    #selectedNode = undefined;\r\n    #controllers = undefined;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        super(key, value, parent, level);\r\n\r\n        if (value?.select === true || (this.multi && parent?.selected)) this.selected = true;\r\n        if (value?.focus === true) this.focused = true;\r\n        if (value?.open === true) this.opened = true;\r\n    }\r\n\r\n    addController(controller) {\r\n        const root = this.root;\r\n        (root.#controllers ??= new Set()).add(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.root.#controllers?.delete(controller);\r\n    }\r\n\r\n    /**\r\n     * Is multi selection available\r\n     */\r\n    get multi() {\r\n        return this.root.#multi === true;\r\n    }\r\n\r\n    set multi(val) {\r\n        this.root.#multi = val === true;\r\n    }\r\n\r\n    get visible() {\r\n        if (this.level < 0) return true;\r\n        return this.parent?.opened;\r\n    }\r\n\r\n    /**\r\n     * select single node, removing seelction flag from all other nodes\r\n     */\r\n    get opened() {\r\n        if (this.level < 0) return true;\r\n        return this.isLeaf ? this.parent?.opened : this.#opened;\r\n    }\r\n\r\n    set opened(val) {\r\n        val = val === true;\r\n        if (val) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus single node, removing focus flag from all other nodes\r\n     */\r\n    get focused() {\r\n        return this.#focused;\r\n    }\r\n\r\n    set focused(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const changed = this.#focused != val;\r\n        const focusedNode = root.focusedNode();\r\n        \r\n        root.#focusedNode = undefined;        \r\n        this.#focused = val;\r\n        if (focusedNode && focusedNode !== this) {\r\n            focusedNode.focused = false;\r\n        }\r\n\r\n        if (val) root.#focusedNode = this;\r\n        if (changed) root.#controllers?.forEach((c) => c.onFocusChanged?.(this));\r\n    }\r\n\r\n    /**\r\n     * Select single or multi node, depending on multi selection flag\r\n     * If single, remove selection flag from all other nodes\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    set selected(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const selectedNode = root.selectedNode();\r\n        const changed = this.#selected != val;\r\n        this.#selected = val;\r\n        if (val) {\r\n            if (selectedNode && selectedNode !== this && !root.multi) {\r\n                selectedNode.selected = false;\r\n            }\r\n            root.#selectedNode = this;\r\n        }\r\n        if (changed) {\r\n            root.#controllers?.forEach((c) => c.onSelectionChanged?.(this, selectedNode));\r\n            if (root.multi) root.#controllers?.forEach((c) => c.onSelectionChanged?.(this.parent, selectedNode));\r\n        } \r\n    }\r\n\r\n    get isPartialySelected() {\r\n        return this.selected && this.hasChildren && this.nodes.length > this.nodes.filter(n => n.selected).length;\r\n    }\r\n\r\n    /* hide from public\r\n    get host() {\r\n        return this[Symbol.for('gs-element')];\r\n    }\r\n\r\n    set host(el) {\r\n        this[Symbol.for('gs-element')] = el;\r\n    }\r\n    */\r\n\r\n    selectAll() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            this.deselectAll();\r\n            this.selected = true;\r\n            return\r\n        }\r\n        this.#selectionFlag(true);\r\n        root.#selectedNode = this;\r\n        root.#controllers?.forEach((c) => c.onSelectAll?.(root));\r\n    }\r\n\r\n    deselectAll() {\r\n        const root = this.root;\r\n        this.#selectionFlag(false);\r\n        root.#selectedNode = undefined;\r\n        root.#controllers?.forEach((c) => c.onDeselectAll?.(root));\r\n    }\r\n\r\n    /**\r\n     * Return last focused node\r\n     * @returns \r\n     */\r\n    focusedNode() {\r\n        const node = this.root.#focusedNode;\r\n        return node?.focused ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * Return last selected node\r\n     * @returns \r\n     */\r\n    selectedNode() {\r\n        const node = this.root.#selectedNode;\r\n        return node?.selected ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * List all selected nodes.\r\n     * @returns \r\n     */\r\n    selectedNodes() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            const node = root.selectedNode()\r\n            return node?.selected ? [node] : [];\r\n        }\r\n        return Array.from(root.walk().filter(o => o.selected));\r\n    }\r\n\r\n    /**\r\n     * Call from external controller data must be refresshed (to notify UI optionally)\r\n     * @param {*} root \r\n     */\r\n    refresh(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onRefresh?.(this));\r\n    }\r\n\r\n    /**\r\n     * Notify controllers about data loading (from async controller)\r\n     * @param {*} root \r\n     */\r\n    loading(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onLoad?.(this));\r\n    }\r\n\r\n    expandAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.expand(root);\r\n        }\r\n    }\r\n\r\n    collapseAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.collapse(root);\r\n        }\r\n    }\r\n\r\n    expand(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        if (!me.parent?.opened) {\r\n            me.parent?.expand(root);\r\n        }\r\n        const update = !me.opened;\r\n        me.#opened = true;\r\n        if (update) me.#expanded(root);\r\n        //me.nodes?.filter( n => !n.opened).forEach(c => c.refresh(root));\r\n        me.nodes?.forEach(c => c.refresh(root));\r\n    }\r\n\r\n    collapse(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        const update = me.#opened || me.parent.#opened;\r\n        me.nodes?.filter(n => n.opened || n.parent.opened).forEach(o => o.collapse(root));\r\n        //me.nodes?.forEach(o => o.collapse(root));\r\n        me.#opened = false;\r\n        if (update) me.#collapsed(root);\r\n    }\r\n\r\n    select(val = true) {\r\n        this.selected = val === true;\r\n    }\r\n\r\n    #expanded(root) {\r\n        root.#controllers?.forEach((c) => c.onExpand?.(this));\r\n    }\r\n\r\n    #collapsed(root) {\r\n        root.#controllers?.forEach((c) => c.onCollapse?.(this));\r\n    }\r\n\r\n    release() {\r\n        if (this.#selected) this.selected = false;\r\n        super.release();\r\n    }\r\n\r\n    append(key, value = key) {\r\n        const me = this;\r\n        const node = super.append(key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onAppend?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    insert(parentNodeKey, key, value = key) {\r\n        const me = this;\r\n        const node = super.insert(parentNodeKey, key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onInsert?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    remove() {\r\n        const node = super.remove();\r\n        if (node) this.root.#controllers?.forEach((c) => c.onInsert?.(node));\r\n        return node;\r\n    }\r\n\r\n    #selectionFlag(val = false) {\r\n        val = val === true\r\n        for (let node of this.walk()) {\r\n            node.selected = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) TreeNode.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.nodes?.map(o => o.toJSON()) || {};\r\n        const obj = Object.assign({\r\n            key: this.key,\r\n            opened: this.#opened,\r\n            focused: this.#focused,\r\n            selected: this.#selected,\r\n            items: undefined\r\n        }, this.value);\r\n        obj.items = this.nodes?.map(o => o.toJSON());\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Reset the tree node\r\n     */\r\n    reset() {\r\n        this.#multi = false;\r\n        this.#opened = false;\r\n        this.#focused = false;\r\n        this.#selected = false;\r\n        this.#focusedNode = undefined;\r\n        this.#selectedNode = undefined;\r\n        this.#controllers = undefined;\r\n    }\r\n\r\n    static get root() {\r\n        return new TreeNode(null, null, null, -1);\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof TreeNode;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) return TreeNode.from(TreeNode.root, raw);\r\n            raw.forEach(o => TreeNode.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        obj.leaf = !Array.isArray(items);\r\n        const tree = new TreeNode(obj.key, obj, data ? parent : undefined);\r\n        if (items) TreeNode.from(tree, items);\r\n        if (hasParent) parent.append(tree);\r\n        return tree;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { TreeNode } from \"./TreeNode.mjs\";\r\n\r\n/**\r\n * A module loading GSTreeReader class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for reading Tree nodes\r\n * @Class\r\n */\r\nexport class GSTreeReader extends GSReadWrite {\r\n\r\n    #data = TreeNode.root;\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    async write(val) {\r\n        throw new Error('Writer not available for TreeReader')\r\n    }\r\n\r\n    async read(owner) {\r\n        const me = this;\r\n        let node = undefined;\r\n        const data = await super.read(owner);\r\n        if (!this.#data) {\r\n            node = TreeNode.from(data);\r\n            this.#data = node;\r\n        } else {\r\n            const parent = me.filter?.length > 0 ? me.#data.findByKey(me.filter[0]) : me.#data;\r\n            parent.clear();\r\n            node = parent.fromJSON(data);\r\n        }\r\n        me.filter = undefined;\r\n        me.notify(owner, 'read', node);\r\n        return node;\r\n    }\r\n\r\n    disable() {\r\n        super.disable();\r\n        this.#data?.release();\r\n    }\r\n\r\n    notify(owner, type, data, error) {\r\n        const isNode = data instanceof TreeNode;\r\n        if (!error && !isNode && type === 'read') return;\r\n        super.notify(owner, type, data, error);\r\n    }\r\n\r\n    /**\r\n     * Called from Tree when node is expanded \r\n     * @param {*} node \r\n     */\r\n    async onExpand(node) {\r\n        if (node.hasChildren) return;\r\n        node.loading();\r\n        this.filter = node.key;\r\n        return await this.read();\r\n    }\r\n\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    /**\r\n     * Reset the tree data\r\n     */\r\n    resetData() {\r\n        this.#data = TreeNode.root;\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSTreeReader} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSTreeReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('tree', GSTreeReader);\r\n    }\r\n\r\n}","// Lit 3.0 Google\r\nconst litUrl = globalThis.GS_LIT_URL || '/bootstrap-lit/assets/lib/lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const Directive = litModule.Directive;\r\nexport const LitElement = litModule.LitElement;\r\nexport const PartType = litModule.PartType;\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const adoptStyles = litModule.adoptStyles;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const createRef = litModule.createRef;\r\nexport const css = litModule.css;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const directive = litModule.directive;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getCompatibleStyle = litModule.getCompatibleStyle;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const guard = litModule.guard;\r\nexport const html = litModule.html;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isServer = litModule.isServer;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const literal = litModule.literal;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const noChange = litModule.noChange;\r\nexport const notEqual = litModule.notEqual;\r\nexport const nothing = litModule.nothing;\r\nexport const range = litModule.range;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const render = litModule.render;\r\nexport const repeat = litModule.repeat;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const staticHtml = litModule.staticHtml;\r\nexport const staticSvg = litModule.staticSvg;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const svg = litModule.svg;\r\nexport const templateContent = litModule.templateContent;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const unsafeStatic = litModule.unsafeStatic;\r\nexport const until = litModule.until;\r\nexport const when = litModule.when;\r\nexport const withStatic = litModule.withStatic;","import { Directive, directive, nothing } from \"../lib.mjs\";\r\n\r\nconst definition = {\r\n    'action': 'gsAction',\r\n    'anchor': 'gsAnchor',\r\n    'attribute': 'gsAttribute',\r\n    'call': 'gsCall',\r\n    'exec': 'gsExec',\r\n    'inject': 'gsInject',\r\n    'property': 'gsProperty',\r\n    'swap': 'gsSwap',\r\n    'target': 'gsTarget',\r\n    'template': 'gsTemplate',\r\n    'toggle': 'gsToggle',\r\n    'trigger': 'gsTrigger',\r\n    'value': 'gsValue',\r\n    'calls':'gsCall',\r\n    'toggles':'gsToggle',\r\n    'timeout':'gsTimeout',\r\n    'triggers':'gsTrigger'\r\n};\r\n\r\nconst template = {\r\n    'gsAction': undefined,\r\n    'gsAnchor': undefined,\r\n    'gsAttribute': undefined,\r\n    'gsCall': undefined,\r\n    'gsExec': undefined,\r\n    'gsInject': undefined,\r\n    'gsProperty': undefined,\r\n    'gsSwap': undefined,\r\n    'gsTarget': undefined,\r\n    'gsTemplate': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTrigger': undefined,\r\n    'gsValue': undefined,\r\n    'gsCall': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTimeout': undefined,\r\n    'gsTrigger': undefined\r\n};\r\n\r\nclass DatasetDirective extends Directive {\r\n\r\n    render(obj) {\r\n        console.log(obj);\r\n        return nothing;\r\n    }\r\n\r\n    update(part, [obj, flat = true]) {\r\n\r\n        if (!obj) return nothing;\r\n        const dataset = part.element.dataset;\r\n        const srcset = obj.dataset || obj;\r\n        const isDataset = srcset instanceof DOMStringMap;\r\n\r\n        if (isDataset) {\r\n            Object.assign(dataset, srcset);\r\n        } \r\n        \r\n        if (flat) this.#remap(dataset, obj);\r\n\r\n        return nothing;\r\n    }\r\n\r\n    #remap(dataset, obj) {\r\n        const opt = Object.assign({}, template);\r\n        const list = Object.entries(obj).filter(v => Object.hasOwn(definition, v[0]));\r\n        if (list.length > 0) {\r\n            list.forEach(kv => opt[definition[kv[0]]] = kv[1]);\r\n            Object.keys(opt)\r\n            .filter(k => opt[k] !== undefined)\r\n            .forEach(k => dataset[k] = opt[k]);\r\n        }\r\n    }\r\n}\r\n\r\nexport const dataset = directive(DatasetDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\n\r\n/**\r\n * Generic object property descriptor getter\r\n * @param {Object} instance \r\n * @returns {PropertyDescriptor}\r\n */\r\nfunction descriptors(instance) {\r\n  return Object.entries(Object.getOwnPropertyDescriptors(instance));\r\n}\r\n\r\n/**\r\n * List of all object property descriptors \r\n * @param {Object} instance Object instance \r\n * @returns {Array<PropertyDescriptor>}\r\n */\r\nfunction listProperties(instance) {\r\n  return descriptors(instance)\r\n    .filter(e => typeof e[1].value !== 'function')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List all object property getters\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGetters(instance) {\r\n  return descriptors(Reflect.getPrototypeOf(instance))\r\n    .filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List of all gettable properties from an object\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGettable(instance) {\r\n  return new Set([...listGetters(instance), ...listProperties(instance)]);\r\n}\r\n\r\n/**\r\n * Parse string literal template into Lit html instance\r\n * @param {*} tpl \r\n * @param {*} params \r\n * @returns {function}\r\n */\r\nexport function literalTemplate(tpl, params) {\r\n  const names = Array.from(listGettable(params));\r\n  const vals = names.map(v => params[v]);\r\n  names.push('html');\r\n  vals.push(html);\r\n  return new Function(...names, `return html\\`${tpl}\\`;`)(...vals);\r\n}","/**\r\n * A clone of classMap directive to support CSS directive.\r\n * Lit classs is not expoed, so we have to clone it and create our own.\r\n */\r\n\r\nimport { Directive, PartType, directive, noChange } from \"../lib.mjs\";\r\n\r\nclass CssMapDirective extends Directive {\r\n\r\n    constructor(partInfo) {\r\n        super(partInfo);\r\n        if (partInfo.type !== PartType.ATTRIBUTE ||\r\n            partInfo.name !== 'css' ||\r\n            partInfo.strings?.length > 2) {\r\n            throw new Error('`classMap()` can only be used in the `css` attribute ' +\r\n                'and must be the only part in the attribute.');\r\n        }\r\n    }\r\n\r\n    render(classInfo) {\r\n        // Add spaces to ensure separation from static classes\r\n        return (' ' +\r\n            Object.keys(classInfo)\r\n                .filter((key) => classInfo[key])\r\n                .join(' ') +\r\n            ' ');\r\n    }\r\n\r\n    update(part, [classInfo]) {\r\n\r\n        // Remember dynamic classes on the first render\r\n        if (this._previousClasses === undefined) {\r\n            this._previousClasses = new Set();\r\n            if (part.strings !== undefined) {\r\n                this._staticClasses = new Set(part.strings\r\n                    .join(' ')\r\n                    .split(/\\s/)\r\n                    .filter((s) => s !== ''));\r\n            }\r\n\r\n            for (const name in classInfo) {\r\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\r\n                    this._previousClasses.add(name);\r\n                }\r\n            }\r\n            return this.render(classInfo);\r\n        }\r\n\r\n        const classList = part.element.classList;\r\n\r\n        // Remove old classes that no longer apply\r\n        for (const name of this._previousClasses) {\r\n            if (!(name in classInfo)) {\r\n                classList.remove(name);\r\n                this._previousClasses.delete(name);\r\n            }\r\n        }\r\n\r\n        // Add or remove classes based on their classMap value\r\n        for (const name in classInfo) {\r\n            // We explicitly want a loose truthy check of `value` because it seems\r\n            // more convenient that '' and 0 are skipped.\r\n            const value = !!classInfo[name];\r\n            if (value !== this._previousClasses.has(name) &&\r\n                !this._staticClasses?.has(name)) {\r\n                if (value) {\r\n                    classList.add(name);\r\n                    this._previousClasses.add(name);\r\n                } else {\r\n                    classList.remove(name);\r\n                    this._previousClasses.delete(name);\r\n                }\r\n            }\r\n        }\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * A directive that applies dynamic CSS classes.\r\n *\r\n * This must be used in the `css` attribute and must be the only part used in\r\n * the attribute. It takes each property in the `classInfo` argument and adds\r\n * the property name to the element's `classList` if the property value is\r\n * truthy; if the property value is falsey, the property name is removed from\r\n * the element's `css`.\r\n *\r\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\r\n * truthy.\r\n *\r\n * @param classInfo\r\n */\r\nexport const cssMap = directive(CssMapDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocapitalizeTypes = ['', 'none', 'off', 'on', 'sentences', 'words', 'characters'];\r\n\r\nexport const autocapitalize = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocapitalizeTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocompleteTypes = ['', 'off', 'on'];\r\n\r\nexport const autocomplete = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocompleteTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocorrectTypes = ['', 'on', 'off'];\r\n\r\nexport const autocorrect = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocorrectTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class ButtonTypes {\r\n\r\n    static values = ['button', 'reset', 'submit'];\r\n\r\n    static is(val) {\r\n        return ButtonTypes.values.includes(val);\r\n    }\r\n\r\n    static isReset(val) {\r\n        return ButtonTypes.values.indexOf(val) === 1;\r\n    }\r\n\r\n    static isSubmit(val) {\r\n        return ButtonTypes.values.indexOf(val) === 2;\r\n    }\r\n} \r\n\r\nexport const buttonType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ButtonTypes.is(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ColorTypes = ['', 'primary', 'secondary', 'dark', 'light', 'info', 'warning', 'danger', 'alert', 'link', 'success'];\r\n\r\nexport const color = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ColorTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'desktop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const InputTypes = [\r\n   { type: 'checkbox', ignore: true},\r\n   { type: 'radio', ignore: true},\r\n   { type: 'switch', ignore: true},\r\n   { type: 'range', ignore: true},\r\n   { type: 'number', native: true},\r\n   { type: 'email', native: true},\r\n   { type: 'url',  native: true},\r\n   { type: 'file', native: true}, \r\n   { type: 'text'},\r\n   { type: 'password'}\r\n];\r\n\r\nexport const inputType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && InputTypes.filter(o => o.type === newVal).length === 1;\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const NavTypes = ['', 'pills', 'tabs', 'underline'];\r\n\r\nexport const nav = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && NavTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val);\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val);\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PlacementTypes {\r\n\r\n    static values = ['center', 'left', 'right', 'start', 'end', 'top', 'bottom'];\r\n\r\n    static includes(val) {\r\n        return PlacementTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        return PlacementTypes.values.indexOf(val) > 4;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = PlacementTypes.values.indexOf(val)\r\n        return idx > 0 && idx < 5;\r\n    }\r\n\r\n    static isCenter(val) {\r\n        return PlacementTypes.values.indexOf(val) === 0;\r\n    }\r\n\r\n    static isBefore(val) {\r\n        return ['left', 'start', 'top'].includes(val);\r\n    }\r\n\r\n    static isAfter(val) {\r\n        return ['right', 'end', 'bottom'].includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const placement = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PlacementTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PositionTypes {\r\n\r\n    static values = ['absolute', 'fixed', 'relative', 'sticky', 'static'];\r\n\r\n    static includes(val) {\r\n        return PositionTypes.values.includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const position = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PositionTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const SizeTypes = { 'default' : '', 'normal': '',  'medium': '', 'small': 'sm', 'large': 'lg', 'big' : 'lg', 'extra' : 'xl' };\r\n\r\nexport const size = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && Object.hasOwn(SizeTypes, newVal);\r\n    }\r\n\r\n};","export const stringArrayConverter = {\r\n    fromAttribute: (value, type) => {\r\n        return (value || '').split(',');\r\n    },\r\n    toAttribute: (value, type) => {\r\n        return (value || []).join(',');\r\n    }\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCacheStyles } from '../base/GSCacheStyles.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time even gs-adopted is triggered by the GSAdoptedEngien class,\r\n * all registerd controller will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to preven dom node polution; \r\n * Style  changes  are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me.#host);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values, isGlobal = false) {\r\n    const me = this;\r\n    let style = null;\r\n    if (isGlobal) {\r\n      style = GSCacheStyles.dynamic;\r\n    } else {\r\n      me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');      \r\n      style = me.#dynamic;\r\n    }    \r\n    if (values === null && style.rules.length > 0 ) return style.removeRule(name);\r\n    return style.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.detach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (!me.#isSelf() && me.#target) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs).forEach(el => el?.remove());\r\n      me.#refs.clear();\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n  #selectCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#selectCallback = me.#onSelect.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async relink(read = true) {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#listen(read);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.filter = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get selected() {\r\n    return this.store?.selected;\r\n  }\r\n\r\n  isSelected(val) {\r\n    return this.store?.isSelected(val);\r\n  }\r\n\r\n  addSelected(val) {\r\n    return this.store?.addSelected(val);\r\n  }\r\n  \r\n  removeSelected(val) {\r\n    return this.store?.removeSelected(val);\r\n  }\r\n\r\n  clearSelected(data) {\r\n    return this.store?.clearSelected(data);\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    storage?.on('read', me.#readCallback);\r\n    storage?.on('write', me.#writeCallback);\r\n    storage?.on('error', me.#errorCallback);\r\n    storage?.on('select', me.#selectCallback);\r\n    if (read) storage.read(me.#host);\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    storage?.off('read', me.#readCallback);\r\n    storage?.off('write', me.#writeCallback);\r\n    storage?.off('error', me.#errorCallback);\r\n    storage?.off('select', me.#selectCallback);\r\n  }\r\n\r\n  #onSelect(e) {\r\n    this.#host.requestUpdate?.();\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for elment move events, properly handling mouse events.\r\n */\r\nexport class ElementMoveController {\r\n\r\n  #host;\r\n  #element;\r\n  #attached = false;\r\n\r\n  #cursorX = 0;\r\n  #cursorY = 0;\r\n\r\n  #mouseUpCallback;\r\n  #mouseDownCallback;\r\n  #mouseMoveCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n    me.#mouseUpCallback = me.#onMouseUp.bind(me);\r\n    me.#mouseDownCallback = me.#onMouseDown.bind(me);\r\n    me.#mouseMoveCallback = me.#onMouseMove.bind(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  attach(element) {\r\n    const me = this;\r\n    if (!me.#attached) {\r\n      me.#element = element;\r\n      me.#attached = true;\r\n      me.#host.attachEvent(me.#element, 'mousedown', me.#mouseDownCallback);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.#cursorX = 0;\r\n    me.#cursorY = 0;\r\n    me.#host.removeEvent(document, 'mouseup', me.#mouseUpCallback);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n  * Call host onStartMove function\r\n  * @param {MouseEvent} e \r\n  */\r\n  #onMouseDown(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n    me.#host.onStartMove?.(e, me.#cursorX, me.#cursorY);\r\n    me.#host.attachEvent(document, 'mouseup', me.#mouseUpCallback, true);\r\n    me.#host.attachEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n   * Remove mousemove listener and call host onEndMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseUp(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n    return me.#host.onEndMove?.(e, me.#cursorX, me.#cursorY);\r\n  }\r\n\r\n  /**\r\n   * Call host onMouseMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseMove(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n\r\n    me.#host.onMouseMove?.(e, me.#cursorX, me.#cursorY);\r\n\r\n    if (me.#cursorX < e.clientX) {\r\n      me.#host.onCursorRight?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorX > e.clientX) {\r\n      me.#host.onCursorLeft?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    if (me.#cursorY < e.clientY) {\r\n      me.#host.onCursorUp?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorY > e.clientY) {\r\n      me.#host.onCursorDown?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #language;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#language = host.language;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#language !== me.#host?.language) {\r\n      me.#language === me.#host?.language;\r\n      me.updateLanguage(me.#language);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#language) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n  static #cache = new Map();\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  // inherited\r\n  hostConnected() {\r\n\r\n  }\r\n\r\n  // inherited\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  // inherited\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#template) return;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      me.#template = TemplateController.#cache.get(ref);      \r\n      me.#lastRef = ref;\r\n      if (ref && !me.#template) TemplateController.#schedule(this);\r\n    }\r\n  }\r\n\r\n  // inherited\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (me.#template) {\r\n      this.#host.removeController(this);\r\n      me.#host.templateInjected?.();\r\n    } \r\n\r\n  }\r\n\r\n  async #load() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (!ref) return;\r\n    let template = null;\r\n    const isTplEl = ref instanceof HTMLTemplateElement;\r\n    const cacheable = GSUtil.isString(ref);\r\n    if (cacheable) {\r\n      template = TemplateController.#cache.get(ref);\r\n    }\r\n    if (!template) {\r\n      template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n      if (cacheable) {\r\n        TemplateController.#cache.set(ref, template);\r\n      }       \r\n    }\r\n    if (template) {\r\n      me.#template = template;\r\n      me.#host.requestUpdate();\r\n    }\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    return GSDOM.templateRef(this.#host);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = false));\r\n    }\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle event when template slot changes\r\n */\r\nexport class SlotController {\r\n\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      const me = this;\r\n      const target = me.#host.renderRoot || me.#host;\r\n      me.#host.attachEvent(target, 'slotchange', me.#onSlotChanged.bind(me));\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    #onSlotChanged(e) {\r\n      if (typeof e.target.assignedElements === 'function') {\r\n        e.target.assignedElements().forEach(el => {\r\n          el.onSlotInjected?.(e.target);\r\n        });\r\n      }\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\nimport { SlotController } from './controllers/SlotController.mjs';\r\nimport { GSAttributeHandler } from './base/GSAttributeHandler.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    language: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n  #orientation;\r\n  #localization;\r\n  #dataController;\r\n  #slotController;\r\n  #themes\r\n  #template;\r\n  #content;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.language = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    //me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n    me.#slotController = new SlotController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    const tpl = GSDOM.templateRef(me);\r\n    if (tpl) me.#template = new TemplateController(me);    \r\n    if (me.isBindable) me.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.detachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('storage')) {\r\n      if (me.storage) {\r\n        me.#dataController ??= new DataController(me);\r\n        me.#dataController.relink?.();\r\n      } else {\r\n        me.#dataController?.hostDisconnected();\r\n        me.#dataController = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when this element injected in some slot\r\n   * @param {*} slot \r\n   */\r\n  onSlotInjected(slot) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return this.renderTemplate();\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : noChange;\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Called when asynchronnous template is injected into component\r\n   */\r\n  templateInjected() {\r\n    \r\n\t}\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to witch to add parsed CSS\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @param {boolean} isGlobal \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value, isGlobal = false) {\r\n    return this.#adopted.style(id, value, isGlobal);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @param {Number} levels - walk limit\r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '', levels = -1) {\r\n    return GSDOM.closest(this, query, levels);\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.language, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    //return this.dataset.gsTarget;\r\n    return GSAttributeHandler.isBindable(this);\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template?.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment ?? '');\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol ?? '');\r\n  }\r\n\r\n  /**\r\n   * Internal attribute set if component is genrated by other components\r\n   */\r\n  get isGenerated() {\r\n    return this.hasAttribute('generated');\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Get instance of internal styles\r\n   */\r\n  get elementStyles() {\r\n    return this.constructor.elementStyles.map(s => Object.values(s).filter(o => o instanceof CSSStyleSheet).pop()).pop();\r\n  }\r\n\r\n  /**\r\n   * Internal shadow styles rule\r\n   * @param {*} name \r\n   * @returns \r\n   */\r\n  cssRule(name) {\r\n    return Array.from(this.elementStyles.rules).filter(r => r.selectorText === name).pop();\r\n  }\r\n\r\n  /**\r\n   * Set dynamic CSS rule \r\n   * See GSIcon hot it is done\r\n   * @param {*} rule \r\n   * @param {*} name \r\n   * @param {*} value \r\n   */\r\n  setCSSProperty(rule, name, value) {\r\n    this.cssRule(rule).style.setProperty(name, value);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    return GSDOM.allProperties(obj);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, opt);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from \"../GSElement.mjs\";\r\n\r\n/**\r\n * Controller for child element navigation / selection / focusing\r\n */\r\nexport class ElementNavigationController {\r\n\r\n  #host;\r\n  #attached;\r\n  #focused;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#attached = false;\r\n  }\r\n\r\n  get circular() {\r\n    return this.#host?.circular === true;\r\n  }\r\n\r\n  get multiple() {\r\n    return this.#host?.multiple === true;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host.active;\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */\r\n  init() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */  \r\n  attach(el) {\r\n    const me = this;\r\n    if (me.#attached) return;\r\n    me.#attached = true;\r\n    me.#host.attachEvent(el, 'keydown', e => me.onKeyDown(e));\r\n    me.#host.attachEvent(el, 'keyup', e => me.onKeyUp(e));\r\n    me.#host.attachEvent(el, 'click', e => me.onClick(e));\r\n    me.#host.attachEvent(el, 'focusin', e => me.onFocusIn(e));\r\n    me.#host.attachEvent(el, 'focusout', e => me.onFocusOut(e));\r\n  }\r\n\r\n  previous() {\r\n    const me = this;\r\n    let el = me.#focused?.previousElementSibling;\r\n    while (el?.disabled) el = el.previousElementSibling;\r\n    if (me.circular && !el) el = me.lastElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  next() {\r\n    const me = this;\r\n    let el = me.#focused?.nextElementSibling;\r\n    while (el?.disabled) el = el.nextElementSibling;\r\n    if (me.circular && !el) el = me.firstElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    const me = this;\r\n    const active = me.selected;\r\n    if (me.multiple) {\r\n      active.forEach(el => {\r\n        el.active = false;\r\n        el.blur();\r\n      });\r\n    } else if (active) {\r\n      active.active = false;\r\n      active.blur();\r\n    }\r\n    me.#focused = undefined;\r\n    me.#host?.emit('group-reset', undefined, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element selected\r\n   * @param {*} el \r\n   */\r\n  #onSelected(el) {\r\n    const me = this;\r\n    me.#host?.onSelected?.(el);\r\n    me.#host?.emit('group-selected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element deselected\r\n   * @param {*} el \r\n   */\r\n  #onDeselected(el) {\r\n    this.#host?.onDeselected?.(el);\r\n    this.#host?.emit('group-deselected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  #onFocused(el) {\r\n    this.#host?.onFocused?.(el);\r\n    this.#host?.emit('group-focused', el, true);\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  #isNavigable(el) {\r\n    return this.#host?.isNavigable ? this.#host?.isNavigable(el) : true;\r\n  }\r\n\r\n  #focus(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    me.#focused = el;\r\n    if (el) {\r\n      me.#onFocused(me.#focused);\r\n    }\r\n  }\r\n\r\n  #toggle(el) {\r\n    if (!el) return;\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    if (el.active) {\r\n      me.#onSelected(el);\r\n    } else {\r\n      me.#onDeselected(el);\r\n    }\r\n  }\r\n\r\n  #select(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n\r\n    const active = me.selected;\r\n    if (active && !me.multiple) {\r\n      active.active = false;\r\n      me.#toggle(active);\r\n    }\r\n\r\n    if (me.multiple) {\r\n      el.active = !el.active;\r\n    } else {\r\n      el.active = true;\r\n    }\r\n    me.#toggle(el);\r\n  }\r\n\r\n  onFocusOut(e) {\r\n    const me = this;\r\n    //if (me.#focused === e.target) me.#focused = undefined;\r\n  }\r\n\r\n  onFocusIn(e) {\r\n    if (!e.target.isNav) return;\r\n    const me = this;\r\n    if(e.relatedTarget?.isNav) {\r\n      me.#focus(e.target)\r\n    } else {\r\n      me.selected?.focus();\r\n    }\r\n\r\n  }\r\n\r\n  onClick(e) {\r\n    const me = this;\r\n    const el = e.composedPath()\r\n    .filter(el => el instanceof GSElement)\r\n    .filter(el => el.parentComponent === me.#host).pop();\r\n    if (!me.#isNavigable(el)) return;\r\n    if (e.ctrlKey) me.reset();\r\n    me.#onDeselected(me.selected);\r\n    me.#select(el);\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    if (!e.target.isNav) return;\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        me.next();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    if (!e.target.isNav) return;\r\n    switch (e.code) {\r\n      case 'Space':\r\n      case 'Enter':\r\n        me.#focused?.click();\r\n        break;\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEventBus } from \"../base/GSEventBus.mjs\";\r\n\r\n/**\r\n * Controller for multiple elements groups\r\n */\r\nexport class GroupController {\r\n\r\n  #host;\r\n\r\n  #busEvent;\r\n  #busCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    if (me.#host.group) {\r\n      me.#busCallback = me.#onBusEvent.bind(me);\r\n      me.#busEvent = GSEventBus.register(me.#host.clazzName);\r\n      me.#busEvent.on(me.#host.group, me.#busCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#busEvent?.off(me.#host.group, me.#busCallback);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  #onBusEvent(e) {\r\n    this.#host.onBusEvent?.(e);\r\n  }\r\n\r\n  notify(data) {\r\n    const me = this;\r\n    me.#busEvent?.emit(me.#host.group, {owner: me.#host, item:data}); \t\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSRouter } from '../base/GSRouter.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSRouterElement extends GSElement {\r\n\r\n  #router = null;\r\n\r\n  static properties = {\r\n    url: {},\r\n    disabled: { type: Boolean },\r\n    logging: { type: Boolean }\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.logging = false;\r\n    this.#router = new GSRouter();\r\n    this.#router.log = false;\r\n  }\r\n\r\n  renderUI() {\r\n    return '';\r\n  }\r\n\r\n  updated(changed) {\r\n    this.#router.log = this.logging;\r\n    if (changed.has('url')) {\r\n      this.#router.initialize(this.url);\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.#router?.disable();\r\n    this.#router = null;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-router');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\n\r\nexport class GSAccordionElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    autoclose: { type: Boolean },\r\n    cssItem: { reflect: true, attribute: 'css-item' },\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    data: { type: Array }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.settings;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n       @notify=\"${me.#onNotify.bind(me)}\"\r\n       @click=\"${me.#onClick}\" \r\n       @keyup=\"${me.#onKeyUp}\" \r\n       class=\"accordion ${classMap(me.renderClass())}\">\r\n       ${this.#renderItems()}\r\n       <slot></slot></div>`\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-accordion-item');\r\n  }\r\n\r\n  get settings() {\r\n    const cfg = this.constructor.properties;\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n  }\r\n\r\n  close() {\r\n    this.#state(false);\r\n  }\r\n\r\n  open() {\r\n    this.#state(true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-accordion-item generated\r\n        .opened=\"${ifDefined(o.disabled === true)}\" \r\n        message=\"${ifDefined(o.message)}\" \r\n        template=\"${ifDefined(o.template)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-accordion-item>`;\r\n    });\r\n  }\r\n\r\n  #state(val = false) {\r\n    this.items.forEach(el => el.opened = val);\r\n    this.notify();\r\n  }\r\n\r\n  #onNotify(e) {\r\n    const me = this;\r\n    if (me.autoclose && e.target.opened) {\r\n      me.items.filter(el => el != e.target).forEach(el => el.opened = false);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const isItemCloser = e?.composedPath()[0]?.matches('.accordion-button');\r\n    if(isItemCloser) e.target.toggle?.();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        e.target.close?.();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.target.open?.();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSAccordionItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    message: { reflect: true, },\r\n    title: { reflect: true, },\r\n    opened: { type: Boolean, reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-ACCORDION';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const owner = me.owner;\r\n    const cssHeader = me.cssHeader || owner?.cssHeader;\r\n    const cssBody = me.cssBody || owner?.cssBody;\r\n    return html`<div class=\"accordion-item ${me.css}\">\r\n             <h2 class=\"accordion-header\">\r\n               <button type=\"button\" \r\n                class=\"accordion-button  ${cssHeader} ${me.opened ? '' : 'collapsed'}\"> \r\n                 ${me.translate(me.title)}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse  ${cssBody} ${me.opened ? 'show' : ''}\">\r\n               <div class=\"accordion-body\">\r\n                   ${me.translate(me.message)}\r\n                   ${me.renderTemplate()}\r\n                   <slot></slot>\r\n               </div>\r\n             </div>      \r\n     </div>`\r\n  }\r\n\r\n  open() {\r\n    this.notify(true);\r\n  }\r\n  \r\n  close() {\r\n    this.notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.notify(!this.opened);\r\n  }\r\n\r\n  notify(val = false) {\r\n    const me = this;\r\n    me.opened = val;\r\n    super.notify();\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-accordion') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSAlertElement extends GSElement {\r\n\r\n    static properties = {\r\n        message: { reflect: true },\r\n        color: { ...color },\r\n        closed: { reflect: true, type: Boolean },\r\n        closable: { reflect: true, type: Boolean },\r\n        delay: { reflect: true, type: Number },\r\n    }\r\n\r\n    #ref;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.delay = 1;\r\n        this.#ref = createRef();\r\n        this.#data = this.#proxify(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div role=\"alert\" dir=\"${ifDefined(me.direction)}\" ${ref(me.#ref)} \r\n            @mouseover=\"${() => me.#pause = true}\"\r\n            @mouseout=\"${() => me.#pause = false}\"\r\n            class=\"alert fade ${classMap(me.renderClass())}\" >\r\n            ${me.#first}\r\n            ${me.renderTemplate()}\r\n            <slot></slot>\r\n            ${me.#second}\r\n        </div>`;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#handleBillboard();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        if (!changed.has('opened')) return;\r\n        this.#handleBillboard();\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': !me.closed,\r\n            'alert-dismissible': me.closable,\r\n            [`alert-${this.color}`]: me.color,\r\n\r\n        }\r\n        return css;\r\n    }\r\n\r\n    open() {\r\n        this.notify(false);\r\n    }\r\n\r\n    close() {\r\n        this.notify(true);\r\n    }\r\n\r\n    toggle() {\r\n        this.notify(!this.closed);\r\n    }\r\n\r\n    notify(val = false) {\r\n        const me = this;\r\n        me.closed = val;\r\n        if (me.closed) setTimeout(() => { me.#ref.value.classList.toggle('d-none', true) }, 250);\r\n        super.notify();\r\n    }\r\n\r\n    get isBillboard() {\r\n        return this.#data?.length > 0;\r\n    }\r\n\r\n    get #message() {\r\n        return this.translate(this.message);\r\n    }\r\n\r\n    get #first() { return this.rtl ? this.#button : this.#message; };\r\n\r\n    get #second() { return this.rtl ? this.#message : this.#button; };\r\n\r\n    get #button() {\r\n        return this.closable ? html`<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"${this.close}\"></button>` : '';\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, {message:{}}));\r\n    }\r\n\r\n    #handleBillboard() {\r\n        const me = this;\r\n        if (me.closed) {\r\n            clearInterval(me.#interval);\r\n            me.#interval = 0;\r\n        } else {\r\n            me.#billboard();\r\n        }        \r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        if (!me.isBillboard) return;\r\n        const items = me.#data;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].message;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].message;\r\n        }, me.delay * 1000);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-alert');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, size, buttonType, ButtonTypes, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSButtonElement extends GSElement {\r\n\r\n  static properties = {\r\n    type: { ...buttonType }, // reset, submit\r\n    size: { ...size }, // small, large, normal\r\n    color: { ...color },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    toggleColor: { ...color, attribute : 'toggle-color' },\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    outline: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    toggling: { type: Boolean },\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    text: {},\r\n    url: {},\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'button';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<button part=\"button\" role=\"button\" ${ref(me.#refEl)}\r\n        dir=\"${ifDefined(me.direction)}\"\r\n        type=\"${ifDefined(me.type)}\" \r\n        class=\"btn ${classMap(me.renderClass())}\" \r\n        title=\"${ifDefined(me.#tooltip)}\"\r\n        ?disabled=${me.disabled}\r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"\r\n        @click=\"${me.#onClick}\">\r\n          ${me.#first} ${me.#second}</button>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n      'focus-ring': document.activeElement === me,\r\n      [`text-${me.text}`]: me.text,\r\n      [`btn-${size}`]: size,\r\n      [`btn-outline-${me.color}`]: me.outline,\r\n      [`btn-${me.color}`]: !me.outline && me.color,\r\n      [`btn-${me.toggleColor}`]: me.active && me.toggleColor,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    if(me.toggling) me.toggle();\r\n    me.iconEl?.animate();\r\n    me.#onHref(e)\r\n    if (me.isReset) return me.form?.reset();\r\n    if (me.isSubmit) return me.form?.submit();\r\n    me.notify();\r\n  }\r\n\r\n  #onHref(e) {\r\n    const me = this;\r\n    if (!me.url) return;\r\n    if (me.url.startsWith('#')) {\r\n      location.hash = me.url;\r\n    } else {\r\n      location.href = me.url;\r\n    }\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get isReset() {\r\n    return ButtonTypes.isReset(this.type);\r\n  }\r\n\r\n  get isSubmit() {\r\n    return ButtonTypes.isSubmit(this.type);\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form, form');\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #tooltip() {\r\n    return this.translate(this.tooltip);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-button');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { unsafeHTML, classMap, html, ifDefined, css } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCalendarElement extends GSElement {\r\n\r\n  static styles = css`.year::-webkit-outer-spin-button,.year::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;} .year {-moz-appearance: textfield;} .day:focus{font-weight: bold;}`\r\n\r\n  static properties = {\r\n    date: {},\r\n    target: {},\r\n    format: { hasChanged: notEmpty },\r\n    editable: { type: Boolean },\r\n    range: { type: Number },\r\n    year: { type: Number },\r\n    month: { type: Number, hasChanged: numGE0 },\r\n    day: { type: Number, hasChanged: numGE0 },\r\n    minYear: { attribute: 'year-min', type: Number },\r\n    maxYear: { attribute: 'year-max', type: Number },\r\n    arrovPrev: { attribute: 'arrow-prev' },\r\n    arrowNext: { attribute: 'arrow-next' },\r\n    cssDays: { attribute: 'css-days' },\r\n    cssToday: { attribute: 'css-today' },\r\n    cssWeeks: { attribute: 'css-weeks' },\r\n    cssMonth: { attribute: 'css-month' },\r\n    cssYear: { attribute: 'css-year' },\r\n    cssNav: { attribute: 'css-nav' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n  }\r\n\r\n  #date;\r\n  #selected;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.#date = new GSDate();\r\n    me.#date.day = 1;\r\n    me.#selected = new GSDate();\r\n    me.#date.language = GSUtil.language;\r\n    me.#selected.language = GSUtil.language;\r\n    \r\n    me.language = GSUtil.language;\r\n    me.day = me.#selected.day;\r\n    me.month = me.#selected.month;\r\n    me.year = me.#selected.year;\r\n    \r\n    me.editable = false;\r\n    me.range = 5;\r\n    me.minYear = 1900;\r\n    me.maxYear = 2100;\r\n    me.arrowPrev = '&#10094;';\r\n    me.arrowNext = '&#10095;';\r\n    me.cssNav = 'btn-light';\r\n    me.cssToday = 'btn-secondary';\r\n    me.cssSelected = 'btn-primary';\r\n    me.cssWeeks = 'fw-bold text-bg-dark';\r\n    me.cssYear = 'form-control fs-5 fw-bold border-0 text-center m-1 p-0';\r\n    me.cssMonth = 'form-control fs-3 fw-bold border-0 text-center m-1 p-0';\r\n  }\r\n\r\n  get date() {\r\n    const me = this;\r\n    //return this.#date.toISOString();\r\n    return new Proxy(this.#date, {\r\n      set(target, prop, value) {\r\n        if (typeof target[prop] != 'function') {\r\n          target[prop] = value;\r\n          me.#update();\r\n        }\r\n        return true;\r\n      },\r\n      get(target, prop, receiver) {\r\n        const value = target[prop];\r\n        if (value instanceof Function) {\r\n          return function (...args) {\r\n            try {\r\n              return value.apply(this === receiver ? target : this, args);\r\n            } finally {\r\n              me.#update();\r\n            }\r\n          };\r\n        }\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  previousMonth() {\r\n    const me = this;\r\n    if (me.month == 0) {\r\n      me.month = 11;\r\n      me.year--;\r\n    } else {\r\n      me.month--;\r\n    }\r\n  }\r\n\r\n  nextMonth() {\r\n    const me = this;\r\n    if (me.month == 11) {\r\n      me.month = 0;\r\n      me.year++;\r\n    } else {\r\n      me.month++;\r\n    }\r\n  }\r\n\r\n  previousYear() {\r\n    this.year--;\r\n  }\r\n\r\n  nextYear() {\r\n    this.year++;\r\n  }\r\n\r\n  formatted(date) {\r\n    const me = this;\r\n    return (date || me.#date).format(me.format, me.language);\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    const date = new GSDate(me.#date);\r\n    me.#updateTarget(date);\r\n    me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#date.day = 1;\r\n    me.#date.month = me.month;\r\n    me.#date.year = me.year;\r\n    me.#date.day = me.day;\r\n    me.#date.language = me.language;\r\n\r\n    const week = GSDate.dayList(true, me.language).map(v => html`<div class=\"col\">${v}</div>`);\r\n    const months = me.#monthsHTML();\r\n    const year = me.#yearHTML();\r\n\r\n    return html`\r\n          <div class=\"container-fluid text-center ${classMap(me.renderClass())}\"\r\n          dir=\"${ifDefined(me.direction)}\"\r\n          @keydown=\"${me.#onKey}\"\r\n          @click=\"${me.#onDay}\">\r\n          <div class=\"row align-items-center ${me.cssHeader} header\">\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.previousMonth}\" class=\"btn ${me.cssNav} arrow prev\">${unsafeHTML(me.arrowPrev)}</a>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  ${months}\r\n                  ${year}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.nextMonth}\" class=\"btn ${me.cssNav} arrow next\">${unsafeHTML(me.arrowNext)}</a>\r\n              </div>\r\n          </div>\r\n          <div class=\"row weeks ${me.cssWeeks}\">${week}</div>\r\n          ${unsafeHTML(me.#daysHTML())}\r\n      </div>`;\r\n  }\r\n\r\n  #updateTarget(date) {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    const tgt = GSDOM.query(document.documentElement, me.target);\r\n    if (!tgt) return;\r\n\r\n    if (tgt instanceof HTMLInputElement) {\r\n      if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n      return tgt.value = me.formatted(date);\r\n    }\r\n    GSDOM.setHTML(tgt, me.formatted(date));\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    me.#selected.day = 1;\r\n    me.#selected.month = me.#date.month;\r\n    me.#selected.year = me.#date.year;\r\n    me.#selected.day = me.#date.day;\r\n    me.#selected.language = me.#date.language;\r\n\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.language = me.#date.language;\r\n  }\r\n\r\n  #isToday(v, date) {\r\n    const me = this;\r\n    return v && GSUtil.asNum(v) === date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n  }\r\n\r\n  #daysHTML() {\r\n    const me = this;\r\n    const today = new GSDate();\r\n    today.language = me.language;\r\n    const list = me.#date.build(me.language);\r\n    const result = list\r\n      .map(v => {\r\n        const c1 = me.#isToday(v, today) ? me.cssToday : '';\r\n        const c2 = me.#isToday(v, me.#selected) ? me.cssSelected : '';\r\n\r\n        const d = v ? `<a tabindex=\"0\" href=\"#\" class=\"btn shadow-none ${c2} ${c1} day\" data-day=\"${v}\">${v}</a>` : ''\r\n        return `<div class=\"col p-0\">${d}</div>`;\r\n      })\r\n      .map((v, i) => {\r\n        if (i === 0) return `<div class=\"row days\">${v}`;\r\n        const isBreak = i % 7 == 0;\r\n        return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n      });\r\n    result.push('</div>');\r\n    return result.join('');\r\n  }\r\n\r\n  #monthsHTML() {\r\n    const me = this;\r\n    const current = me.#date.MMMM;\r\n    const months = GSDate.monthList(false, me.language);\r\n    const list = months.map((v, i) => html`<option value=\"${i}\" selected=${ifDefined(current == v ? true : undefined)}>${v}</option>`);\r\n    return html`<select @change=\"${me.#onMonth}\" name=\"month\" class=\"month ${me.cssMonth}\" value=\"${months.indexOf(current)}\">${list}</select>`;\r\n  }\r\n\r\n  #yearHTML() {\r\n\r\n    const me = this;\r\n\r\n    const options = [];\r\n    let minYear = me.minYear;\r\n    let maxYear = me.maxYear;\r\n\r\n    if (me.range > 0) {\r\n      const year = new GSDate().year;\r\n      minYear = year - me.range;\r\n      maxYear = year + me.range;\r\n      me.#optionsHTML(options, minYear, maxYear);\r\n    }\r\n\r\n    if (!me.editable) {\r\n      return html`<select @change=\"${me.#onYear}\" name=\"year\" class=\"year ${me.cssYear}\" data-gs-min=\"${minYear}\" data-gs-max=\"${maxYear}\">${options}</select>`;\r\n    }\r\n\r\n    const isList = me.editable && me.range && options.length > 0;\r\n    const listID = isList ? GSID.next : null;\r\n    const list = isList ? html`<datalist id=\"${listID}\">${options}</datalist>` : '';\r\n\r\n    return html`<input name=\"year\" \r\n      type=\"number\" \r\n      list=\"${ifDefined(listID)}\"\r\n      class=\"year ${me.cssYear}\" \r\n      @change=\"${me.#onYear}\" \r\n      min=\"${minYear}\" \r\n      max=\"${maxYear}\"\r\n      value=\"${me.#date.getFullYear()}\">\r\n      ${list}`;\r\n  }\r\n\r\n  #optionsHTML(options, minYear = 0, maxYear = 0) {\r\n    const me = this;\r\n    let val = minYear;\r\n    while (val <= maxYear) {\r\n      if (me.editable) {\r\n        options.push(html`<option value=\"${val}\" selected=${ifDefined(val == me.year ? true : undefined)}>`);\r\n      } else {\r\n        options.push(html`<option value=\"${val}\" selected=${ifDefined(val == me.year ? true : undefined)}>${val}</option>`);\r\n      }\r\n      val++;\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  #onDay(e) {\r\n    GSEvents.prevent(e);\r\n    if (!e.target.classList.contains('day')) return;\r\n    const me = this;\r\n    const day = GSUtil.asNum(e.target.dataset.day, me.day);\r\n\r\n    me.#selected.day = 1;\r\n    me.#selected.month = me.month;\r\n    me.#selected.year = me.year;\r\n    me.#selected.day = day;\r\n\r\n    me.day = day;\r\n  }\r\n\r\n  #onMonth(e) {\r\n    this.month = e.target.selectedIndex;\r\n  }\r\n\r\n  #onYear(e) {\r\n    const yearEl = e?.target;\r\n    if (yearEl?.validity.valid) {\r\n      this.year = yearEl.value;\r\n    }\r\n  }\r\n\r\n  #onKey(e) {\r\n    // console.log(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-calendar');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCardElement extends GSElement {\r\n\r\n  static styles = css`.card-header, .card-footer{ background-color: inherit; color: inherit;}`;\r\n\r\n  static properties = {\r\n\r\n    imageStyle: { type: Object, attribute: 'image-style', reflect : true },\r\n\r\n    overlay: { type: Boolean },\r\n    placement: { ...placement },\r\n    align: { ...placement },\r\n\r\n    image: {},\r\n    title: {},\r\n    subtitle: {},\r\n    text: {},\r\n    footer: {},\r\n    header: {},\r\n\r\n    colorText: { attribute: 'color-text' },\r\n    colorBack: { attribute: 'color-back' },\r\n    colorBorder: { attribute: 'color-border' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssSubtitle: { attribute: 'css-subtitle' },\r\n    cssText: { attribute: 'css-text' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssImage: { attribute: 'css-image' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.border = false;\r\n    this.shadow = false;\r\n    this.align = 'start';\r\n    this.placement = 'top';\r\n    this.imageStyle = this.imageStyle || {};\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const content =  me.isVertical ? me.#renderVertical() : me.#renderHorizontal();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"card ${classMap(me.renderClass())}\">${content}</div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return [me.#imageTop, me.#header, me.#body, me.#footer, me.#imageBottom];\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    const start = PlacementTypes.isBefore(me.placement);\r\n    const startClass = start ? 'col-4' : 'col-8';\r\n    const endClass = start ? 'col-8' : 'col-4';\r\n    const startHtml = start ? me.#images : me.#body;\r\n    const endHtml =  start ? me.#body : me.#images;\r\n    return html`<div class=\"row g-0\">\r\n        <div class=\"${startClass}\">\r\n            ${startHtml}\r\n        </div>\r\n        <div class=\"${endClass}\">\r\n          ${endHtml}\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      border: me.border || me.colorBorder,\r\n      [`text-${me.align}`]: me.align,\r\n      [`text-${me.colorText}`]: me.colorText,\r\n      [`bg-${me.colorBack}`]: me.colorBack,\r\n      [`border-${me.colorBorder}`]: me.colorBorder,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return PlacementTypes.isHorizontal(this.placement);\r\n  }\r\n\r\n  get #body() {\r\n    const me = this;\r\n    return html`<div class=\"${me.overlay ? 'card-img-overlay' : 'card-body'} ${me.cssBody}\">\r\n      <h5 class=\"card-title  ${me.cssTitle}\"><slot name=\"title\">${me.translate(me.title)}</slot></h5>\r\n      <h6 class=\"card-subtitle  ${me.cssSubtitle}\"><slot name=\"subtitle\">${me.translate(me.subtitle)}</slot></h6>\r\n      <p class=\"card-text ${me.cssText}\"><slot name=\"text\">${me.translate(me.text)}</slot></p>\r\n      <slot name=\"body\"></slot>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  get #header() {\r\n    return this.overlay ? '' : html`<div class=\"card-header  ${this.cssHeader}\"><slot name=\"header\">${this.header}</slot></div>`;\r\n  }\r\n\r\n  get #footer() {\r\n    return this.overlay ? '' : html`<div class=\"card-footer ${this.cssFooter}\"><slot name=\"footer\">${this.footer}</slot></div>`;\r\n  }\r\n\r\n  get #imageSlot() {\r\n    return html`<slot name=\"image\"></slot>`;\r\n  }\r\n\r\n  get #image() {\r\n    const me = this;\r\n    const css = me.isHorizontal ? 'img-fluid' : 'card-img';\r\n    me.dynamicStyle(me.#styleID, me.imageStyle);\r\n    return html`<img src=\"${me.image}\" class=\"rounded-${me.placement} ${css} ${me.cssImage} ${me.#styleID}\" alt=\"...\">`;\r\n  }\r\n\r\n  get #images() {\r\n    return this.image ? this.#image : this.#imageSlot;\r\n  }\r\n\r\n  get #imageTop() {\r\n    return this.placement === 'top' ? this.#images : '';\r\n  }\r\n\r\n  get #imageBottom() {\r\n    return this.placement === 'bottom' ? this.#images : '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-card');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSCenterElement extends GSElement {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n      class=\"position-absolute top-50 start-50 translate-middle ${classMap(me.renderClass())}\">\r\n    ${me.renderTemplate()}<slot></slot></div>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-center');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenuElement class\r\n * @module components/GSMenuElement\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSMenuElement extends GSElement {\r\n\r\n    static properties = {\r\n        storage: {},\r\n        auto: { type: Boolean, reflect: true },\r\n        opened: { type: Boolean, reflect: true },\r\n        dark: { type: Boolean },\r\n        reverse: { type: Boolean },\r\n        offset: { type: Number },\r\n        data: { type: Array },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {},\r\n        title: {},\r\n        header: {},\r\n        color: {},\r\n        icon: {},\r\n        url: { default: '#' }\r\n    }\r\n\r\n    #menuRef = createRef();\r\n    #styleID = GSID.id;\r\n    #controller = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.offset = 0;\r\n        me.dynamicStyle(me.#styleID);\r\n        me.data = me.#proxify(me);\r\n        me.#controller = new GroupController(this);\r\n    }\r\n\r\n    onBusEvent(e) {\r\n       if (e.detail.owner != this) {\r\n            this.opened = false;\r\n       }\r\n     }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        if (changed.has('opened') && !this.opened) {\r\n            this.#closeSubmenus();\r\n        }\r\n    }\r\n\r\n    updated() {\r\n        this.#updatePosition();\r\n        if (this.opened) {\r\n            this.#controller.notify();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<ul \r\n            ${ref(me.#menuRef)}\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            class=\"dropdown-menu ${classMap(me.renderClass())}\"\r\n            data-gs-class=\"${me.#styleID}\"\r\n            data-menu=\"true\"\r\n            @mouseover=\"${me.#onMouseOver}\"\r\n            @mouseleave=\"${me.#onMouseLeave}\"\r\n            @keydown=\"${me.#onKeyDown}\"\r\n            @click=\"${me.#onClick}\">\r\n            ${me.#items(me.data)}\r\n        </ul>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'submenu': me.dataset.submenu,\r\n            'dropdown-menu-dark': me.dark,\r\n            [me.#styleID]: true,\r\n            'show': me.opened,\r\n            'dropend': !me.reverse,\r\n            'dropstart': me.reverse,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    /**\r\n     * Show at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {HTMLElement} caller\r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n\r\n        const me = this;\r\n        // offset to render under the mouse,\r\n        // important for GSGrid for better UI experience\r\n        const offset = GSUtil.asNum(me.offset, 0);\r\n        let target = caller;\r\n\r\n        if (GSEvents.isMouseOrPointerEvent(x)) {\r\n            const e = x;\r\n            target = e.target;\r\n            y = e.clientY;\r\n            x = e.clientX;\r\n            let offset = GSDOM.offsetParent(me);\r\n            offset = offset ? offset.getBoundingClientRect() : null;\r\n            x = x - (offset?.left || 0);\r\n            y = y - (offset?.top || 0);\r\n        }\r\n\r\n        const cfg = { clientX: x - offset, clientY: y - offset, target: target };\r\n\r\n        requestAnimationFrame(() => {\r\n            const style = {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                left: '0px',\r\n                translate: `${cfg.clientX}px ${cfg.clientY}px`\r\n            };\r\n            const rule = me.dynamicStyle(me.#styleID);\r\n            Object.assign(rule.style, style);\r\n        });\r\n        me.open();\r\n\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    #items(root) {\r\n        const me = this;\r\n        return root.map(el => me.#item(el));\r\n    }\r\n\r\n    #item(el) {\r\n        const me = this;\r\n        const isSub = el.items?.length > 0;\r\n        if (isSub) return me.#renderSubmenu(el);\r\n        if (!(el.header || el.name)) return me.#renderDivider();\r\n        return el.header ? me.#renderHeader(el) : me.#renderMenu(el);\r\n    }\r\n\r\n    #renderHeader(el) {\r\n        return html`<li data-inert=\"true\"><h6 class=\"dropdown-header\">${this.#renderIcon(el)}${el.header}</h6></li>`;\r\n    }\r\n\r\n    #renderDivider() {\r\n        return html`<li data-inert=\"true\"><hr class=\"dropdown-divider\"></li>`;\r\n    }\r\n\r\n    #renderSubmenu(el) {\r\n        const me = this;\r\n        return html`<li>\r\n            <a class=\"dropdown-item dropdown-toggle\" data-toggle=\"true\" href=\"#\">\r\n                <div class=\"d-inline-block w-100\">${me.#renderIcon(el)}${el.name}</div>\r\n            </a>\r\n            <gs-menu auto \r\n                .data=${el.items} \r\n                ?dark=${me.dark} \r\n                ?reverse=\"${me.reverse}\" \r\n                language=\"${ifDefined(me.language)}\" \r\n                data-submenu=\"true\">\r\n            </gs-menu>\r\n        </li>`;\r\n    }\r\n\r\n    #renderIcon(el) {\r\n        return el.icon ? html`<gs-icon css=\"mx-1\" name=\"${el.icon}\"></gs-icon>` : '';\r\n    }\r\n\r\n    #renderMenu(el) {\r\n        return html`<li>\r\n                <gs-button css=\"dropdown-item shadow-none\" \r\n                    ${dataset(el, false)}\r\n                    url=\"${el.url}\"\r\n                    title=\"${el.name}\" \r\n                    language=\"${ifDefined(this.language)}\" \r\n                    icon=\"${ifDefined(el.icon)}\" \r\n                    text=\"${ifDefined(el.color)}\"\r\n                    data-gs-target=\"${ifDefined(el.target || 'self')}\"\r\n                    data-gs-action=\"${ifDefined(el.action)}\">\r\n                </gs-button></li>`;\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSMenuElement.options));\r\n    }\r\n\r\n    #closeSubmenus(menu) {\r\n        GSDOM.queryAll(this.renderRoot, 'gs-menu', false, false)\r\n            .filter(el => el != menu)\r\n            .forEach(el => el.close());\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.key) {\r\n            case 'Escape':\r\n                me.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        submenu?.close();\r\n        if (me.auto) me.close();\r\n    }\r\n\r\n    #onMouseLeave(e) {\r\n        GSEvents.prevent(e);\r\n        if (this.auto) this.close();\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        me.#closeSubmenus(submenu);\r\n        submenu?.open();\r\n    }\r\n\r\n    #toSubmenu(e) {\r\n        const menuItem = e.target.closest('li');\r\n        return menuItem?.querySelector('gs-menu');\r\n    }\r\n\r\n    #updatePosition() {\r\n        const me = this;\r\n        if (!me.opened) return;\r\n        const rule = me.dynamicStyle(me.#styleID);\r\n        if (me.isSubmenu) {\r\n            const opt = { translate: `0px -25px` };\r\n            if (me.reverse) {\r\n                opt.left = 'inherited';\r\n                opt.right = '100%';\r\n            } else {\r\n                opt.right = 'inherited';\r\n                opt.left = '100%';\r\n            }\r\n            Object.assign(rule.style, opt);\r\n        } else {\r\n            rule.style.translate = null;\r\n            const rect = me.#menu.getBoundingClientRect();\r\n            const offset = window.innerWidth - rect.right;\r\n            me.reverse = offset - 5 < 0;\r\n            if (me.reverse) rule.style.translate = `${offset - 2}px`;\r\n        }\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.dataset.submenu;\r\n    }\r\n\r\n    get #menu() {\r\n        return this.#menuRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-menu');\r\n    }\r\n}\r\n","/*GSContextElement\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContextElement class\r\n * @module components/GSContextElement\r\n */\r\n\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for context menu\r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSContextElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        target: {},\r\n        filter: {},\r\n        altContext: { type: Boolean, attribute: 'altcontext' },\r\n        disabled: { type: Boolean },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;        \r\n        me.auto = true;\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n            me.target = \"tbody\";\r\n            me.filter = \"[selected]\";\r\n            me.offset =\"4\";\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', me.close.bind(me));        \r\n        if (!me.slot) me.#attachTarget();\r\n    }\r\n    \r\n    onSlotInjected(slot) {\r\n        this.#attachTarget();\r\n    }\r\n\r\n    #attachTarget() {\r\n        const me = this;        \r\n        const owner = GSDOM.parent(me.assignedSlot || me);\r\n        let targets = me.target ? GSDOM.queryAll(owner, me.target) : [owner];\r\n        if (!targets.length) targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    }\r\n\r\n    #match(e) {\r\n        const me = this;\r\n        return e.composedPath().filter(el => el.matches)\r\n            .filter(el => el.matches(me.filter ? me.filter : me.target));\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        if (e.shiftKey && me.altContext) return;\r\n        const list = me.#match(e);\r\n        if (list.length === 0) return;\r\n        GSEvents.prevent(e);\r\n        me.popup(e);\r\n        return true;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    /**\r\n     * Show submenu at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n        return this.disabled ? false : super.popup(x, y, caller);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-context');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, notEmpty } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\nexport class GSCompareElement extends GSElement {\r\n\r\n  static styles = css`.slider {\r\n         --gs-position : 50%;\r\n          left : var(--gs-position);\r\n          width: 8px;\r\n          height: 100%;\r\n          border-width: 1px;\r\n          cursor: w-resize;\r\n          border-color: darkgray;\r\n          border-style: solid;\r\n          background-color: lightgray;\r\n      }\r\n      .clipper {\r\n        --gs-position : 50%;\r\n        clip-path: inset(0px var(--gs-position) 0px 0px);\r\n      }\r\n    `;\r\n\r\n  static properties = {\r\n    background: { ...color },\r\n    width: { type: Number },\r\n    height: { type: Number },\r\n    before: { hasChanged: notEmpty },\r\n    after: { hasChanged: notEmpty },\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  #elRef = createRef();\r\n  #clipRef = createRef();\r\n  #slideRef = createRef();\r\n\r\n  #mouseController;\r\n  #elPosition;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.width = 0;\r\n    me.height = 0;\r\n    me.dynamicStyle(me.#styleID);\r\n    me.#mouseController = new ElementMoveController(me);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#mouseController.attach(this.#splitter);\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n         dir=\"${ifDefined(me.direction)}\"\r\n         @loaded=\"${me.#onLoad}\" \r\n         @dblclick=\"${me.#onDoubleClick}\"\r\n         data-gs-class=\"${me.#styleID}\"\r\n         class=\"${classMap(me.renderClass())}\">\r\n      <div class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden\"><slot name=\"before\">${me.#before}</slot></div>\r\n      <div ${ref(me.#clipRef)} class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden clipper\"><slot name=\"after\">${me.#after}</slot></div>\r\n      <div ${ref(me.#slideRef)} class=\"slider position-absolute top-0><slot name=\"control\"></slot></div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      \"position-relative\": true,\r\n      \"user-select-none\": true,\r\n      \"d-contents\": me.isAuto,\r\n      \"h-100\": me.isAuto,\r\n      \"w-100\": me.isAuto,\r\n      \"overflow-hidden\": true,\r\n      [`bg-${me.background}`]: me.background,\r\n      [`${me.#styleID}`]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Handles resizing based on mouse move event\r\n   * @param {MouseEvent} e \r\n   */\r\n  onStartMove(e) {\r\n    this.#elPosition = this.#splitter.getBoundingClientRect();\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    const me = this;\r\n    const offset = me.#elPosition.left;\r\n    const width = me.#elPosition.width;\r\n    const pos = GSUtil.range(e.clientX - offset, 0, width);\r\n    const pct = (pos / width) * 100;\r\n    me.#update(pct);\r\n  }\r\n\r\n  get isAuto() {\r\n    return this.width == 0 || this.height == 0;\r\n  }\r\n\r\n  get isFixed() {\r\n    return !this.isAuto;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  get #before() {\r\n    return this.before ? html`<img @load=\"${this.#onLoad}\" src=\"${me.before}\"></img>` : '';\r\n  }\r\n\r\n  get #after() {\r\n    return this.after ? html`<img @load=\"${this.#onLoad}\" src=\"${me.after}\"></img>` : '';\r\n  }\r\n\r\n  get #isAuto() {\r\n    return this.width === 0 || this.height === 0;\r\n  }\r\n\r\n  get #splitter() {\r\n    return this.#elRef.value;\r\n  }\r\n\r\n  get #slider() {\r\n    return this.#slideRef.value;\r\n  }\r\n\r\n  get #clip() {\r\n    return this.#clipRef.value;\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const me = this;\r\n    if (me.#isAuto) {\r\n      const el = e.target;\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n    }\r\n  }\r\n\r\n  #onDoubleClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#update();\r\n    me.#mouseController.reset();\r\n  }\r\n\r\n  #update(pct = 50) {\r\n    const me = this;\r\n    me.#clip.style.setProperty('--gs-position', `${100 - pct}%`);\r\n    me.#slider.style.setProperty('--gs-position', `${pct}%`);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-compare');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\n\r\n/**\r\n * Helper component to enable controller attachment to the GS WebComponent.\r\n * It is used to simplify and separate templates from logic.\r\n */\r\nexport class GSControllerElement extends GSElement {\r\n\r\n  static properties = {\r\n    module: {},\r\n    controller: {},\r\n  }\r\n\r\n  #clazz = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  updated(changes) {\r\n    super.updated(changes);\r\n    const me = this;\r\n    if (me.isConnected && me.isValid) {\r\n      me.#initialize();\r\n    }\r\n  }\r\n\r\n  get isValid() {\r\n    return this.parentElement instanceof GSElement;\r\n  }\r\n\r\n  async #initialize() {\r\n\r\n    const me = this;\r\n    const host = me.parentElement;\r\n\r\n    if (me.#clazz) return;\r\n\r\n    let clazz = globalThis[me.controller];\r\n    if (!clazz && me.module) {\r\n      const url = GSLoader.normalizeURL(me.module);\r\n      const module = await import(url);\r\n      clazz = module[me.controller];\r\n    }\r\n\r\n    if (clazz) {\r\n      new clazz(host);\r\n      me.#clazz = clazz;\r\n      globalThis[me.controller] = clazz;\r\n    }\r\n\r\n  }\r\n\r\n  static {\r\n    this.define('gs-controller');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSCopyrightElement extends GSElement {\r\n\r\n  static properties = {\r\n    year: { reflect: true, type: Number },\r\n    company: { reflect: true },\r\n    url: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    if (!(me.isCompany && me.isYear)) return '';\r\n    const year = new Date().getFullYear();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"${classMap(me.renderClass())}\"><a target=\"_blank\" href=\"${me.url ? me.url : '#'}\"><small>&copy; ${me.company} ${me.year}. - ${year}.</small></a></div>`;\r\n  }\r\n\r\n  get isCompany() {\r\n    return GSUtil.isStringNonEmpty(this.company);\r\n  }\r\n\r\n  get isYear() {\r\n    return GSUtil.isStringNonEmpty(this.year);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-copyright');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSFunction } from '../base/GSFunction.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/verificator.mjs';\r\nimport { GSReadWriteRegistry } from '../data/ReadWriteRegistry.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for easier access to the GSReadWrite/GSTreeReader\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSDataHandler extends GSElement {\r\n\r\n    static properties = {\r\n        storage: { state: true },\r\n        src: { reflect: true },\r\n        action: { reflect: true },\r\n        mode: { reflect: true },\r\n        reader: { reflect: true },\r\n        writer: { reflect: true },\r\n        limit: { type: Number, reflect: true },\r\n        skip: { type: Number, reflect: true },\r\n        filter: { type: Array, reflect: true },\r\n        sort: { type: Array, reflect: true },\r\n        type: {},\r\n        autoload: { type: Boolean },\r\n        autorefresh: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    }\r\n\r\n    #iid = 0;\r\n    #config = null;\r\n    #handler = null;\r\n    #lifoReadRef = null;\r\n    #lifoWriteRef = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        me.autorefresh = 0;\r\n        me.autoload = false;\r\n        me.flat = true;\r\n        me.filter = [];\r\n        me.sort = [];\r\n        me.limit = 0;\r\n        me.skip = 0;\r\n        me.src = '';\r\n        me.type = 'remote';\r\n        me.mode = 'query';\r\n        me.reader = 'GET';\r\n        me.writer = 'POST';\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n          }\r\n        if (!me.isGenerated && !me.id) throw new Error('Element ID is required attribute!');\r\n        GSItem.validate(me, me.tagName);\r\n    }\r\n    \r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        const itemHolder = me.isGenerated && me.childElementCount === 0 ? me.parentComponent : me;\r\n        me.#config = GSItem.proxify(itemHolder, GSData.PROPERTIES);\r\n        me.#initLIFO(true);\r\n        me.#initLIFO(false);\r\n    }\r\n    \r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        me.#handler?.disable();\r\n        me.#handler?.removeProcessor(me);\r\n        me.#lifoReadRef = null;\r\n        me.#lifoWriteRef = null;\r\n        clearTimeout(me.#iid);\r\n    }\r\n    \r\n    firstUpdated() {\r\n        const me = this;\r\n        me.#handler = GSReadWriteRegistry.newHandler(me.type, me.storage, false);\r\n        if (me.#config?.length > 0) me.#handler?.addProcessor(me);\r\n        me.#updateHandler();\r\n        me.#handler?.enable();\r\n        me.dataController?.read();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        const me = this;\r\n        me.#updateHandler();\r\n        if (changed.has('autorefresh')) me.schedule(me.autorefresh);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.key = me.key;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.formatSort(me.sort);\r\n        me.#handler.filter = me.formatFilter(me.filter);\r\n        if (me.autoload) me.read();\r\n    }\r\n\r\n    get isDebug() {\r\n        return this.dataset.gsDebug;\r\n    }\r\n\r\n    get handler() {\r\n        return this.#handler;\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    get isCached() {\r\n        return this.#handler?.type == 'cached';\r\n    }\r\n\r\n    set search(val) {\r\n        if (this.#handler) this.#handler.search = val;\r\n    }\r\n\r\n    get key() {\r\n        return this.#config.filter(o => o.key).map(o => o.name).pop() || null;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    formatFilter(val) {\r\n        val = this.#formated(val);\r\n        return Array.isArray(val) ? val : [];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    formatSort(val) {\r\n        val = this.#formated(val);\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort || [];\r\n    }\r\n\r\n    schedule(time = 0) {\r\n        const me = this;\r\n        time = GSUtil.asNum(time) * 1000;\r\n        clearInterval(me.#iid);\r\n        if (time > 0) me.#iid = setInterval(() => {\r\n            me.read(me);\r\n        }, time);\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data, append = false) {\r\n        return this.#lifoWriteRef(data, append);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return this.#handler?.selected;\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        return this.#handler?.addSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        return this.#handler?.removeSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        return this.#handler?.clearSelected();\r\n    }\r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onDataRead(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data Read: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onDataWrite(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data write: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Process data after receive, before notifying \r\n     * @param {*} data \r\n     */\r\n    postRead(data) {\r\n        const me = this;\r\n        if (!Array.isArray(data)) data = [data];\r\n        data.forEach(r => {\r\n            me.#config.forEach(c => {\r\n                let val = r[c.name];\r\n                if (!GSUtil.isNull(val)) {\r\n                    val = GSData.format(c, val);\r\n                    r[c.name] = val;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onDataError(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data error: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #initLIFO(read = true) {\r\n        const me = this;\r\n        if (read) {\r\n            me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n        } else {\r\n            me.#lifoWriteRef = GSFunction.callOnceLifo(me.#lifoWriteRefCallback, me);\r\n        }\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO(true);\r\n        return me.#lifoCall(true);\r\n    }\r\n\r\n    #lifoWriteRefCallback(data, append) {\r\n        const me = this;\r\n        me.#initLIFO(false);\r\n        return me.#lifoCall(false, data, append);\r\n    }\r\n    \r\n    #lifoCall(read = true, data, append) {\r\n        const me = this;\r\n        me.#verifyHandler();        \r\n        if (read) return me.#handler?.read(me);        \r\n        if (!append) me.#handler.clear();\r\n        return me.#handler?.write(me, data);\r\n    }\r\n\r\n    #formated(val) {\r\n        return GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    static {\r\n        this.define('gs-data-handler');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { size, SizeTypes } from '../properties/size.mjs';\r\n\r\nexport class GSDialogElement extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n  static ALIGN = 'end';\r\n  static CANCEL = 'Cancel';\r\n  static CONFIRM = 'Ok';\r\n\r\n  static #STACK = [];\r\n\r\n  static styles = css`dialog{--bs-modal-width: 500px;width:var(--bs-modal-width);outline:none;}dialog::backdrop{backdrop-filter: blur(4px);}`;\r\n\r\n  static properties = {\r\n\r\n    standard: { reflect: true, type: Boolean },\r\n    opened: { reflect: true, type: Boolean },\r\n    cancelable: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    escapable: { reflect: true, type: Boolean },\r\n    disabled: { reflect: true, type: Boolean },\r\n\r\n    size : size,\r\n\r\n    title: { reflect: true },\r\n    message: { reflect: true },\r\n    cancelText: { reflect: true, attribute:'text-cancel' },\r\n    confirmText: { reflect: true, attribute:'text-confirm'},\r\n\r\n    minWidth: { reflect: true, type: Number, attribute: 'min-width' },\r\n    buttonAlign: { reflect: true, attribute: 'button-align' },\r\n\r\n    iconCancel: { reflect: true, attribute: 'icon-cancel' },\r\n    iconConfirm: { reflect: true, attribute: 'icon-confirm' },\r\n\r\n    colorCancel: { attribute: 'color-cancel' },\r\n    colorConfirm: { attribute: 'color-confirm' },\r\n\r\n    cssCancel: { attribute: 'css-cancel' },\r\n    cssConfirm: { attribute: 'css-confirm' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssContent: { attribute: 'css-content' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #dialogRef = createRef();\r\n  #btnConfirmRef = createRef();\r\n  #btnCancelRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    const clazz = GSDialogElement;\r\n    me.opened = false;\r\n    me.standard = false;\r\n    me.cancelable = false;\r\n    me.closable = false;\r\n    me.escapable = false;\r\n    me.disabled = false;\r\n    me.shadow = false;\r\n    me.rounded = false;\r\n\r\n    me.minWidth = 0;\r\n    me.css = clazz.CSS;\r\n    me.cssTitle = clazz.TITLE_CSS;\r\n    me.cssHeader = clazz.HEADER_CSS;\r\n    me.buttonAlign = clazz.ALIGN;\r\n    me.cancelText = clazz.CANCEL;\r\n    me.confirmText = clazz.CONFIRM;\r\n    me.colorCancel = 'secondary';\r\n    me.colorConfirm = 'primary';\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialogElement.#updateStack();\r\n  }\r\n\r\n  updated(changed) {\r\n    super.updated(changed);\r\n    if (changed.has('opened')) {\r\n      this.#onOpenChanged();\r\n    }\r\n  }\r\n\r\n  #onOpenChanged() {\r\n    const me = this;\r\n    let state = null;\r\n    if (me.opened) {\r\n      GSDialogElement.#STACK.push(me);\r\n      state = 'opening';\r\n      if (me.standard) {\r\n        me.#dialog?.open();\r\n      } else {\r\n        me.#dialog?.showModal();\r\n      }\r\n      me.#focusable()?.focus();\r\n    } else {\r\n      state = 'closing';\r\n      if (me.isHashed) location.hash = '';\r\n      GSDialogElement.#STACK.pop();\r\n      me.#dialog?.close();\r\n    }\r\n    me.notify(true, false, state);\r\n  }\r\n\r\n  #renderConfirm() {\r\n    const me = this;\r\n    if (!me.closable) return '';\r\n    return html`<gs-button  ${ref(me.#btnConfirmRef)} \r\n      @click=\"${me.#onConfirm.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconConfirm)}\"\r\n      language=\"${ifDefined(me.language)}\"\r\n      .disabled=\"${me.disabled}\"  \r\n      css=\"${ifDefined(me.cssConfirm)}\" \r\n      color=\"${ifDefined(me.colorConfirm)}\" \r\n      title=\"${me.confirmText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderCancel() {\r\n    const me = this;\r\n    if (!me.cancelable) return '';\r\n    return html`<gs-button ${ref(me.#btnCancelRef)}\r\n      @click=\"${me.#onCancel.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconCancel)}\"\r\n      language=\"${ifDefined(me.language)}\"\r\n      css=\"${ifDefined(me.cssCancel)}\" \r\n      color=\"${ifDefined(me.colorCancel)}\" \r\n      title=\"${me.cancelText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderFooter() {\r\n    const me = this;\r\n    const isFooter = me.cancelable || me.closable;\r\n    if (!isFooter) return '';\r\n    return html`<div class=\"card-footer d-flex user-select-none justify-content-${me.buttonAlign} ${me.cssFooter}\">\r\n      ${me.#renderCancel()} &nbsp;${me.#renderConfirm()}\r\n      </div>`;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const styles = { \r\n      'min-width': me.minWidth > 0 ? `${me.minWidth}px` : undefined \r\n    };\r\n    me.dynamicStyle(me.#styleID, styles);\r\n    return html`\r\n        <dialog tabindex=\"-1\" ${ref(me.#dialogRef)} \r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @close=\"${me.#onCancel.bind(me)}\"\r\n            @cancel=\"${me.#onCancel.bind(me)}\"\r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @form=\"${me.#onForm.bind(me)}\"\r\n            @submit=\"${me.#onSubmit.bind(me)}\"\r\n            class=\"${classMap(me.renderClass())}\">\r\n            <div class=\"card ${me.cssContent}\">\r\n                <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n                  <div class=\"card-title ${me.cssTitle}\">\r\n                    <slot name=\"title\">${me.translate(me.title)}</slot>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body ${me.cssBody}\">\r\n                  <slot name=\"body\">\r\n                  ${me.translate(me.message)}\r\n                  ${me.renderTemplate()}\r\n                  </slot>\r\n                </div>\r\n                ${me.#renderFooter()}\r\n            </div>\r\n            <slot name=\"extra\"></slot>\r\n            <div class=\"toast-container position-fixed\"></slot></div>\r\n        </dialog>`\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'dialog': true,\r\n      'p-0': true,\r\n      'border-0': true,\r\n      [me.#styleID]: true,\r\n      [`modal-${size}`]: size ? true : false\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.closable = closable;\r\n    me.cancelable = cancelable;\r\n    me.escapable = cancelable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('click-action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    return this.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    return this.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    index = GSUtil.asNum(index, 0);\r\n    const me = this;\r\n    me.forms?.forEach?.(f => { f.reset(); f.data = data; });\r\n    const tab = me.tab;\r\n    if (tab && index > -1) tab.index = index;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Retrun true if dialog is opened by hashbang.\r\n   * Used to clear the hashbang on close\r\n   */\r\n  get isHashed() {\r\n    return GSUtil.asBool(this.dataset.gsHashed);\r\n  }\r\n\r\n  get form() {\r\n    return this.query('gs-form', true);\r\n  }\r\n\r\n  get forms() {\r\n    return this.queryAll('gs-form', true);\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('gs-tab', true);\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.#dialogRef.value;\r\n  }\r\n\r\n  get #btnConfirm() {\r\n    return this.#btnConfirmRef.value;\r\n  }\r\n\r\n  get #btnCancel() {\r\n    return this.#btnCancelRef.value;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  #focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#btnCancel;\r\n    if (me.closable) return me.#btnConfirm;\r\n    return me;\r\n  }\r\n\r\n  async #onConfirm(e) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const ret = await Promise.all(me.forms?.map?.(form => form.submit()));\r\n    if (ret.indexOf(false) < 0) me.close();\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.close();\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle injected form events\r\n   * @param {*} e \r\n   */\r\n  #onForm(e) {\r\n    let  sts = true;\r\n    const me = this;\r\n    const data = e.detail;\r\n    switch (data.type) {\r\n      case 'submit':\r\n        sts = me.emit('data', data.data, false, false, true);\r\n        if (!sts) GSEvents.prevent(e);\r\n        //me.opened = false;\r\n        break;\r\n      case 'valid':\r\n        me.disabled = data.data === false;     \r\n        break;\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  #onSubmit(e) {\r\n    debugger;\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialogElement.#STACK = GSDialogElement.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  /**\r\n   * Return number of dialogs in a stack\r\n   */\r\n  static get size() {\r\n    return GSDialogElement.#STACK.length;\r\n  }\r\n\r\n  static get top() {\r\n    GSDialogElement.#updateStack();\r\n    const size = GSDialogElement.size;\r\n    return size === 0 ? null :  GSDialogElement.#STACK[size - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialogElement.#updateStack();\r\n    return Array.from(GSDialogElement.#STACK);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-dialog');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, unsafeHTML, html, ifDefined } from '../lib.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSDrawerElement extends GSElement {\r\n\r\n  static properties = {\r\n    autoclose: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    backdrop: { reflect: true, type: Boolean },\r\n    expanded: { reflect: true, type: Boolean },\r\n    scroll: { reflect: true, type: Boolean },\r\n\r\n    min: { reflect: true, type: Number},\r\n    max: { reflect: true},\r\n    fingers: { reflect: true, type: Number},\r\n    placement: {...placement},\r\n    \r\n    transition: { reflect: true },\r\n    duration: { reflect: true, type: Number },\r\n\r\n    title: { reflect: true},\r\n\r\n    cssTitle: { reflect: true, attribute: \"css-title\"},\r\n    cssHead: { reflect: true, attribute: \"css-head\" },\r\n    cssBody: { reflect: true, attribute: \"css-body\" },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.placement = 'start';\r\n    me.cssTitle = 'fs-5';\r\n    me.transition = 'linear';\r\n    me.duration = 0.2;\r\n    me.min = 0;\r\n    me.max = 'auto';\r\n    me.fingers = 2;\r\n    me.on('mouseleave', me.#onLeave.bind(me));\r\n    me.on('mouseenter', me.#onEnter.bind(me));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`${unsafeHTML(me.#style)}\r\n    <div tabindex=\"-1\" dir=\"${ifDefined(me.direction)}\"\r\n     class=\"offcanvas overflow-hidden anime ${classMap(me.renderClass())}\">\r\n      ${me.#header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        ${me.renderTemplate()}\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>${me.#backdrop}`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': true,\r\n      'anime-open' : me.expanded,\r\n      'anime-close' : !me.expanded,\r\n      [`offcanvas-${me.placement}`]: me.placement,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #style() {\r\n    const me = this;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    return `<style>\r\n    .anime {\r\n      transition-property: ${pos} !important;\r\n      transition-duration: ${me.duration}s  !important;\r\n      transition-timing-function: ${me.transition} !important;\r\n    }\r\n    .anime-open {\r\n        ${pos} : ${me.max}${GSUtil.isNumber(me.max) ? 'px':''} !important;\r\n    }\r\n    .anime-close {\r\n      ${pos} : ${me.min}${GSUtil.isNumber(me.min) ? 'px':''} !important;\r\n    }    \r\n    </style>`;\r\n  }\r\n\r\n  get #backdrop() {\r\n    const me = this;\r\n    if (!me.backdrop) return '';\r\n    return html`<div class=\"offcanvas-backdrop fade ${me.expanded ? 'show' : 'invisible'}\" @click=\"${me.close}\"></div>`;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    return me.closable ? html`<button type=\"button\" class=\"btn-close text-reset\" @click=\"${me.close}\"></button>` : '';\r\n  }\r\n\r\n  get #title() {\r\n    const me = this;\r\n    return me.title ? html`<div class=\"offcanvas-title ${me.cssTitle}\">${me.translate(me.title)}</div>` : '';\r\n  }\r\n\r\n  get #header() {\r\n    const me = this;\r\n    return me.#hasHeader ? html`<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${me.#title}${me.#button}</slot></div>` : '';\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  get #hasHeader() {\r\n    return this.title || this.closable || this.#headSlot;\r\n  }\r\n\r\n  #notify(val) {\r\n    const me = this;\r\n    me.expanded = val == true;\r\n    me.notify();\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  open() {\r\n    this.#notify(true);\r\n  }\r\n\r\n  close() {\r\n    this.#notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.#notify(!this.expanded);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return !this.isVertical;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-drawer');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdownElement class\r\n * @module components/GSDropdownElement\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { cssMap } from '../directives/css-map.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDropdownElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        icon: {},\r\n        text: {...color},\r\n        color: {...color},\r\n        size: {},\r\n        title: {},\r\n        tooltip: {},\r\n        group: {},\r\n        simple: {type:Boolean}\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"dropdown\"  dir=\"${ifDefined(me.direction)}\">\r\n                ${me.#renderButton()}\r\n                ${super.renderUI()}\r\n            </div>`;\r\n    }\r\n\r\n    #buttonClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'btn': true,\r\n            [`btn-${me.color}`] : me.color ? true : false,\r\n            'dropdown-toggle': !me.simple,\r\n            'shadow-none' : true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    #renderButton() {\r\n        const me = this;\r\n        return html`<gs-link css=\"${cssMap(me.#buttonClass())}\"\r\n            url=\"#\"         \r\n            icon=\"${ifDefined(me.icon)}\"\r\n            text=\"${ifDefined(me.text)}\"\r\n            size=\"${ifDefined(me.size)}\"\r\n            title=\"${ifDefined(me.title)}\"\r\n            tooltip=\"${ifDefined(me.tooltip)}\"\r\n            @notify=\"${me.toggle}\">\r\n            </gs-link>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-dropdown');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html, unsafeHTML } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Safe email rendering to protect from spam bots.\r\n */\r\nexport class GSEmailElement extends GSElement {\r\n\r\n  static shadowRootOptions = { mode: 'closed' }\r\n\r\n  static style = css`.e-mail:before {\r\n    content: attr(data-website) \"\\0040\" attr(data-user);\r\n    unicode-bidi: bidi-override;\r\n    direction: rtl;\r\n    }`;\r\n\r\n  static properties = {\r\n    user: { reflect: true },\r\n    domain: { reflect: true },\r\n    dev: { type: Boolean }\r\n  }\r\n\r\n  #user;\r\n  #domain;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  willUpdate(changes) {\r\n    super.willUpdate(changes);\r\n    this.#updateUser();\r\n    this.#updateDomain()\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${unsafeHTML(this.#style)}<a @click=\"${this.#onClick}\" class=\"e-mail\" data-user=\"${this.#user}\" data-website=\"${this.#domain}\"  href=\"mailto://\"></a>`;\r\n  }\r\n\r\n  get #style() {\r\n    return '<style>.e-mail:before { content: attr(data-website) \"\\u0040\" attr(data-user); unicode-bidi: bidi-override; direction: rtl; }</style>';\r\n  }\r\n\r\n  get #url() {\r\n    return `mailto://${GSUtil.reverse(this.dataset.user)}@${GSUtil.reverse(this.dataset.domain)}`;\r\n  }\r\n\r\n  #updateUser() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.user) {\r\n      me.#user = dataset.user || GSUtil.reverse(me.user);\r\n      if (me.dev) dataset.user = me.#user;\r\n      me.user = '';\r\n    }\r\n  }\r\n\r\n  #updateDomain() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.domain) {\r\n      me.#domain = dataset.domain || GSUtil.reverse(me.domain);\r\n      if (me.dev) dataset.domain = me.#domain;\r\n      me.domain = '';\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    window.location.href = me.#url;\r\n    //window.open(me.#url, '_blank');  \r\n  }\r\n\r\n  static {\r\n    this.define('gs-email');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSFormElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    disabled: { type: Boolean },\r\n    data: { type: Object },\r\n\r\n    name: { reflect : true},\r\n    rel: { reflect : true},\r\n    acceptCharset : {reflect : true, attribute: 'accept-charset'},\r\n    autocapitalize: { reflect : true},\r\n    autocomplete: { reflect : true},\r\n\r\n    action: { reflect : true},\r\n    enctype: { reflect : true},\r\n    method: { reflect : true},\r\n    novalidate: { reflect : true, type: Boolean},\r\n    target: { reflect : true},\r\n\r\n    block: { type: Boolean },\r\n    beep: { type: Boolean },\r\n    timeout: { type: Number }\r\n  }\r\n\r\n  #formRef = createRef();\r\n  #lastState = undefined;\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n    this.disabled = false;\r\n    this.method = \"dialog\";\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<form ${ref(me.#formRef)}\r\n      id=\"${ifDefined(me.name)}\"\r\n      name=\"${ifDefined(me.name)}\"\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      @change=\"${me.#onChange}\"\r\n      @blur=\"${me.#onBlur}\"\r\n      @invalid=\"${me.#onInvalid}\"\r\n      @submit=\"${me.submit}\"\r\n      @reset=\"${me.reset}\"\r\n      method=\"${me.method}\"\r\n      \r\n      rel=\"${ifDefined(me.rel)}\"\r\n      acceptCharset=\"${ifDefined(me.acceptCharset)}\"\r\n      autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n      autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n      action=\"${ifDefined(me.action)}\"\r\n      enctype=\"${ifDefined(me.enctype)}\"\r\n      target=\"${ifDefined(me.target)}\"\r\n\r\n      ?novalidate=\"${me.novalidate}\">\r\n      <slot></slot>\r\n    </form>`;\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    me.dataController?.read();\r\n  }\r\n  \r\n  updated(changed) {\r\n    const me = this;\r\n    if (changed.has('disabled')) {\r\n      if (me.disabled) {\r\n        me.disable();\r\n      } else {\r\n        me.enable();\r\n      }\r\n    }\r\n    if (changed.has('data')) {\r\n      if (GSUtil.isNull(me.data)) {\r\n        me.reset();\r\n      } else {\r\n        me.asJSON = Object.assign(me.asJSON, me.data);\r\n      }\r\n    }\r\n  }\r\n\r\n  templateInjected() {\r\n    const me = this;\r\n    me.#doFilter(me.#filterField);\r\n    me.invalid[0]?.focus();\r\n\t}  \r\n\r\n  async reset(e) {\r\n    const me = this;\r\n    const internal = e?.target === me.form;\r\n\r\n    if (internal) {\r\n      me.elements.forEach(el => GSDOM.reset(el));\r\n      await me.dataController?.read(me.asJSON);\r\n    } else {\r\n      me.data = {};\r\n      me.form.reset();\r\n    }\r\n  }\r\n\r\n  async submit(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    if (!me.validate()) return;\r\n    const json = me.asJSON;\r\n    await me.dataController?.write(json);\r\n    const data = { type: 'submit', data: json, source: e, owner : me};\r\n    return me.emit('form', data, true, true, true);\r\n  }\r\n\r\n  #button(type) {\r\n    return this.query(`button[type=\"${type}\"]`, true);\r\n  }\r\n\r\n  get submitButton() {\r\n    return this.#button('submit');\r\n  }\r\n  \r\n  get resetButton() {\r\n    return this.#button('reset');\r\n  }\r\n  \r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n  \r\n  /**\r\n  * Overide native to pickup all form elements, including ones in shadow dom\r\n  */\r\n  get elements() {\r\n    return this.#childrens(true);\r\n  }\r\n\r\n  get fields() {\r\n    return this.elements;\r\n  }\r\n\r\n  get inputs() {\r\n    return this.elements;\r\n  }\r\n\r\n  get invalid() {\r\n    return this.inputs.filter(el => !el.validity.valid);\r\n  }\r\n\r\n  get asJSON() {\r\n    const data = {};\r\n    this.elements.forEach(field => GSDOM.fromElement2Object(field, data));    \r\n    return data;\r\n  }\r\n\r\n  set asJSON(data) {\r\n    const me = this;\r\n    //me.form.reset(); do not use, create a circular calls\r\n    me.elements.forEach(field => GSDOM.fromObject2Element(field, data));    \r\n    me.#doFilter(me.#filterField);\r\n    me.validate();\r\n  }\r\n\r\n  get isValid() {\r\n    return this.elements\r\n      .filter(el => !el.disabled)\r\n      .filter(el => !el.validity.valid).length === 0;\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.form.checkValidity() && \r\n    this.elements\r\n      .filter(el => !el.disabled)\r\n      .filter(el => !el.checkValidity()).length === 0;;\r\n  }\r\n\r\n  reportValidity() {\r\n    this.elements\r\n      .filter(el => !el.disabled)\r\n      .filter(el => !el.validity?.valid)\r\n      .forEach(el => el.reportValidity() );\r\n    return this.form.reportValidity();\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    let isValid = me.checkValidity();\r\n    if (!isValid) me.reportValidity();\r\n    isValid = me.onValidate(isValid);\r\n    me.#toggle(isValid);\r\n    me.#notify(isValid);\r\n    me.invalid[0]?.focus();\r\n    return isValid;\r\n  }\r\n\r\n  disable() {\r\n    GSDOM.disableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  enable() {\r\n    GSDOM.enableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataWrite(data) {\r\n\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  /**\r\n   * Called only if field is valid and changed\r\n   * @param {HTMLInputElement|HTMLSelectElement|HTMLTextAreaElement} el \r\n   */\r\n  onFieldChange(el) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Called only if field is invalid\r\n   * @param {HTMLInputElement|HTMLSelectElement|HTMLTextAreaElement} el \r\n   */\r\n  onFieldInvalid(el) {\r\n\r\n  }\r\n\r\n  onValidate(sts) {\r\n\r\n    return sts;\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    const field = me.#findField(e);\r\n    if(field) me.onFieldInvalid(field);\r\n    me.#toggle(false);\r\n    me.#notify(false);\r\n  }\r\n\r\n  #onBlur(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#toggle(me.isValid);\r\n    me.#notify(me.isValid);\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    const field = me.#findField(e);\r\n    if (field) {\r\n      me.#doFilter(field);\r\n      me.handle(e);\r\n      if (field.validity.valid) me.onFieldChange(field);\r\n    }\r\n    me.#toggle(me.isValid);\r\n  }\r\n\r\n  #notify(isValid = false) {\r\n    const me = this;\r\n    if (me.#lastState === isValid) return;\r\n    me.#lastState = isValid;\r\n    const data = { type: 'valid', data: isValid, owner : me};\r\n    me.emit('form', data, true, true);    \r\n  }\r\n\r\n  #toggle(isValid = false) {\r\n    const me = this;\r\n    const btn = me.submitButton;\r\n    if (btn) btn.disabled = !isValid;\r\n  }  \r\n\r\n  #findField(e) {\r\n    if (!(e instanceof Event)) return;\r\n    const me = this;\r\n    let field = e.target;\r\n    if (e.composed) {\r\n      field = e.composedPath()\r\n        .filter(el => me.#isField(el))\r\n        .pop();\r\n    }\r\n    if(!me.#isField(field)) field = me.#findField(e.detail);\r\n    return me.#isField(field) ? field : null;\r\n  }\r\n\r\n  #isField(el) {\r\n    return el?.matches?.('input,select,textarea');\r\n  }\r\n\r\n  /**\r\n   * Filter field disabled status\r\n   * @param {HTMLInputElement} field \r\n   */\r\n  #doFilter(field) {\r\n    \r\n    if(!field) return;\r\n    \r\n    const me = this;\r\n\r\n    const value = me.#fieldValue(field);\r\n    const fldName = me.dataset.gsfDisable;\r\n    const fldVal = me.dataset.gsfValue;\r\n    const matched = fldName && field.name === fldName;\r\n    const flag = matched && value === fldVal;\r\n    if (matched) {\r\n      me.elements\r\n        .filter(el => el.name != fldName)\r\n        .forEach(el => el.disabled = flag);\r\n    } \r\n\r\n  }\r\n\r\n  /**\r\n   * Initialy, field might not be set just yet (if it is selectable),\r\n   * so we need to take valeu fro mgs-item definition\r\n   * @param {*} field \r\n   * @returns \r\n   */\r\n  #fieldValue(field) {\r\n    let value = field.tagName === 'GS-FORM-GROUP' ? field.field?.value : field.value;\r\n    if (field.selectable && GSUtil.isNull(value)) {\r\n      value = GSAttr.get(this.query('gs-item[selected]'), 'value');\r\n    }\r\n    return value;\r\n  }\r\n\r\n  #childrens(shadow = false) {\r\n    return this.queryAll('input,select,output,textarea', shadow);\r\n  }\r\n\r\n  get #filterField() {\r\n    const me = this;\r\n    return me.elements.filter(el => el.name === me.dataset.gsfDisable).pop();\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, unsafeHTML, ifDefined } from '../lib.mjs';\r\nimport { inputType, numGT0, numGE0, autocapitalize, autocorrect, autocomplete } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSFormGroupElement extends GSElement {\r\n\r\n  static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2';\r\n  static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n  static CSS_ICON = 'text-primary me-2 fs-5';\r\n  static ICON = 'info-circle-fill';\r\n\r\n  static #SELECTOPT = {\r\n    name : {},\r\n    value : {},\r\n    selected : {type: Boolean}\r\n  }\r\n\r\n  static properties = {\r\n    icon: {},\r\n    layout: {},\r\n    placement: {},\r\n\r\n    label: {},\r\n    description: {},\r\n    placeholder: {reflect: true},\r\n\r\n    pattern: {},\r\n    mask: {},\r\n    \r\n    form: {},\r\n    wrap: {},\r\n    spellcheck: {},\r\n\r\n    type: { ...inputType },\r\n    name: {},\r\n    list: {},\r\n    accept: {},   \r\n    value: {},\r\n\r\n    lang: {reflect: true},\r\n    title: {reflect: true},\r\n    rows: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    cols: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    step: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    min: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    max: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    minLength: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    maxLength: { type: Number, reflect: true, hasChanged: numGT0 },\r\n\r\n    reverse: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n\r\n    autoid: { type: Boolean },\r\n    autocopy: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    autocapitalize: { ...autocapitalize, reflect: true },\r\n    autocorrect: { ...autocorrect, reflect: true },\r\n    autocomplete: { reflect: true },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    disabled: { type: Boolean, reflect: true },\r\n    checked: { type: Boolean, reflect: true },\r\n    multiple: { type: Boolean, reflect: true },\r\n    reveal: { type: Boolean, reflect: true },\r\n    readonly: { type: Boolean, reflect: true },\r\n    required: { type: Boolean, reflect: true },\r\n\r\n    invalidMessage: {reflect: true, attribute: 'invalid-message' },\r\n\r\n    cellField: { attribute: 'cell-field' },\r\n    cellLabel: { attribute: 'cell-label' },\r\n    cssLabel: { attribute: 'css-label' },\r\n    cssField: { attribute: 'css-field' },\r\n\r\n    block: { type: Boolean },\r\n    beep: { type: Boolean },\r\n    timeout: { type: Number }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #inputRef = createRef();\r\n  #ouptutRef = createRef();\r\n  #patterns = [];\r\n  #options = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.#validateAllowed();\r\n    this.dynamicStyle(this.#styleID);\r\n    this.rows = 0;\r\n    this.cols = 0;\r\n    this.type = 'text';\r\n    this.placement = 'top';\r\n    this.layout = 'horizontal';\r\n    this.invalidMessage = 'Invalid input',\r\n    this.icon = GSFormGroupElement.ICON;\r\n    this.cssLabel = GSFormGroupElement.CSS_LABEL;\r\n    this.cellLabel = GSFormGroupElement.CSS_LABEL_CELL;\r\n  }\r\n  \r\n  connectedCallback() {\r\n    const me = this;\r\n    const form = me.formComponent;\r\n    me.layout = GSAttr.get(form, 'layout', me.layout);\r\n\r\n    if (!me.form && form) me.form = form.name;\r\n\r\n    if (me.selectable) {\r\n      me.#options = GSItem.proxify(me, GSFormGroupElement.#SELECTOPT);\r\n    } else {\r\n      me.#patterns = GSItem.collect(me)\r\n      .filter(el => el.dataset.pattern)\r\n      .map(el => new RegExp(el.dataset.pattern));\r\n    }      \r\n    super.connectedCallback();\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    me.#onRange();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    switch (me.layout) {\r\n      case 'floating': return me.#renderFloating();\r\n      case 'vertical': return me.#renderVertical();\r\n      default: return me.#renderHorizontal();\r\n    }\r\n  }\r\n\r\n\r\n  #renderFloating() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n       <div class=\"form-floating ${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n          ${me.#renderLabel()}\r\n       </div>\r\n       ${me.#renderInfo()}\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n      <div class=\"col-12 text-md-start ${me.cellLabel}\">\r\n          ${me.#renderLabel()}\r\n      </div>\r\n       <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n       </div>\r\n       ${me.#renderInfo()}   \r\n    </div>      \r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row form-group ${classMap(me.renderClass())}\">    \r\n       <slot name=\"header\"></slot>\r\n       ${me.#renderLabelWrap()}\r\n       ${me.#renderField()}\r\n       ${me.#renderInfo()}\r\n       <slot name=\"footer\"></slot>\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderLabel() {\r\n    const me = this;\r\n    return html`<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.translate(me.label)}</label>`;\r\n  }\r\n\r\n  #renderLabelWrap() {\r\n    const me = this;\r\n    return html`<div class=\" text-md-end ${me.cellLabel}\">${me.#renderLabel()}</div>`;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.#isIcon ? html`<gs-icon size=\"5\" css=\"${GSFormGroupElement.CSS_ICON}}\" name=\"${me.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderTooltip() {\r\n    const me = this;\r\n    const tgt = me.#isIcon ? '@parent' : `[name='${me.name}']`;\r\n    return me.description ? html`<gs-tooltip local language=\"${ifDefined(me.language)}\" placement=\"${me.placement}\" title=\"${me.description}\" target=${ifDefined(tgt)}></gs-tooltip>` : '';\r\n  }\r\n\r\n  #renderInfo() {\r\n    const me = this;\r\n    const tooltip = me.#renderTooltip();\r\n    if (tooltip && me.#isIcon) return html`\r\n    <div class=\"col-auto\">\r\n       ${tooltip}\r\n       ${me.#renderIcon()}\r\n    </div>`;\r\n    return tooltip;\r\n  }\r\n\r\n  #renderField() {\r\n    const me = this;\r\n    return html`\r\n    <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n       <slot name=\"body\">${me.#renderInput()}${me.#renderOutput()}</slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderOutput() {\r\n    const me = this;\r\n    if (!me.isRange) return \"\";\r\n    return html`<span ${ref(me.#ouptutRef)} class=\"position-absolute px-1\">${me.value}</span>`;\r\n  }\r\n\r\n  #renderInput() {\r\n\r\n    const me = this;\r\n\r\n    const idattr = me.autoid ? me.name : undefined;\r\n    const val = me.isFieldset ? me.value.split(',') : me.value;\r\n\r\n    if (Array.isArray(val)) {\r\n      const wrap = me.dataset.radioLayout === 'vertical';\r\n      return val.map((it, i) => { return { v: it, id: `${me.name}_${i}` } })\r\n        .map((o, i) => me.#fieldSet(me.name + i, o.v, me.#inputHTML(o.id, me.name, o.v), wrap));\r\n    }\r\n\r\n    if (me.selectable) return me.#selectHTML(idattr, me.name, me.value);\r\n\r\n    if (me.#isTextArea) return me.#textArea(idattr, me.name, me.value);\r\n\r\n    return me.#inputHTML(idattr, me.name, me.value);\r\n  }\r\n\r\n  #fieldSet(id, val, fld, vertical = false) {\r\n    const me = this;\r\n    return vertical ?\r\n      html`<div class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></div>`\r\n      :\r\n      html`<span class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></span>`;\r\n  }\r\n\r\n  #initStyle() {\r\n    const me = this;\r\n    const style = {\r\n      transform: me.reverse && me.isRange ? 'rotateY(180deg)' : ''\r\n    }\r\n    me.dynamicStyle(me.#styleID, style);    \r\n  }\r\n\r\n  #renderOptions() {\r\n    const me = this;\r\n    return me.#options.map( el => html`<option value=\"${el.value}\" ?selected=${el.selected}>${el.name || el.innerText || el.value }</option>`);\r\n  }\r\n\r\n  #selectHTML(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n\r\n    return html`<select ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n        \r\n            name=\"${name}\"             \r\n            form=\"${ifDefined(me.form)}\"\r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\">\r\n            ${me.#renderOptions()}\r\n            </select>`;\r\n  }\r\n\r\n  get #isTextArea() {\r\n    const me = this;\r\n    return (me.rows > 0 || me.cols > 0) && me.type === 'text';\r\n  }\r\n\r\n  get #listHTML() {\r\n    const me = this;\r\n    let list = '';\r\n    if (me.list) {\r\n      const root = me.parentComponent || me.parentElement;\r\n      const el = GSDOM.query(root, `datalist[id=\"${me.list}\"]`, true);\r\n      if (el) list = html`${unsafeHTML(el.outerHTML)}`;\r\n    }\r\n    return list;\r\n  }\r\n\r\n  get #isBlock() {\r\n    return this.block || this.formComponent?.block || false;\r\n  }\r\n\r\n  get #isBeep() {\r\n    return this.beep || this.formComponent?.beep || false;\r\n  }\r\n  \r\n  #timeout() {\r\n    return this.timeout || this.formComponent?.timeout || 0;\r\n  }\r\n\r\n  #textArea(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder) : null;\r\n    const title = me.title ? me.translate(me.title) : null;\r\n\r\n    return html`<textarea  is=\"gs-ext-text\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)}\r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @invalid=\"${me.#onInvalid.bind(me)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n            cols=\"${me.cols}\"\r\n            rows=\"${me.rows}\"\r\n\r\n            ?block=\"${me.#isBlock}\"\r\n            ?beep=\"${me.#isBeep}\"\r\n            timeout=\"${me.#timeout()}\"\r\n\r\n            spellcheck=\"${ifDefined(me.spellcheck)}\" \r\n            wrap=\"${ifDefined(me.wrap)}\" \r\n            form=\"${ifDefined(me.form)}\" \r\n            name=\"${name}\" \r\n            value=\"${ifDefined(value)}\"\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            title=\"${ifDefined(title)}\"\r\n    \r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus}\"            \r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"      \r\n      ></textarea>`;\r\n  }\r\n\r\n  #inputHTML(id, name, value) {\r\n    const me = this;\r\n    const type = me.isSwitch ? 'checkbox' : me.type;\r\n    let title = me.isRange ? me.value : me.title;\r\n    title = title ? me.translate(me.title) : title;\r\n\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder) : null;\r\n    const description = me.description ? me.translate(me.description) : null;\r\n    \r\n    me.#initStyle();\r\n\r\n    return html`<input is=\"gs-ext-input\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @invalid=\"${me.#onInvalid.bind(me)}\"\r\n        \r\n            name=\"${name}\" \r\n            type=\"${type}\" \r\n            form=\"${ifDefined(me.form)}\"\r\n            value=\"${ifDefined(value)}\"\r\n            title=\"${ifDefined(title)}\"\r\n\r\n            ?block=\"${me.#isBlock}\"\r\n            ?beep=\"${me.#isBeep}\"\r\n            timeout=\"${me.#timeout()}\"\r\n\r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            description=\"${ifDefined(description)}\"\r\n\r\n            .multipattern=\"${ifDefined(me.#patterns)}\"\r\n            mask=\"${ifDefined(me.mask)}\"\r\n            pattern=\"${ifDefined(me.pattern)}\"\r\n            list=\"${ifDefined(me.list)}\"\r\n            accept=\"${ifDefined(me.accept)}\"\r\n             \r\n            step=\"${ifDefined(me.step)}\"\r\n            min=\"${ifDefined(me.min)}\"\r\n            max=\"${ifDefined(me.max)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?multiple=\"${me.multiple}\"\r\n            ?checked=\"${me.checked}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"\r\n            ?reveal=\"${me.reveal}\"\r\n            >${me.#listHTML}`;\r\n  }\r\n\r\n  get #cssField() {\r\n    const me = this;\r\n    if (me.selectable) return 'form-select ms-0';\r\n    if (me.isCheckable) return 'form-check-input ms-0';\r\n    if (me.isRange) return 'form-range';\r\n    return 'form-control';\r\n  }\r\n\r\n  get #cssLabel() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-label';\r\n    if (me.isFloating) return 'ms-2';\r\n    return me.isVertical ? 'form-label' : '';\r\n  }\r\n\r\n  get #cssCheck() {\r\n    const me = this;\r\n    if (me.isCheckable) {\r\n      //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      if (me.isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n      return me.isFieldset ? '' : 'form-check';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get #cellField() {\r\n    const me = this;\r\n    const val = (me.isHorizontal) ? '6' : '11';\r\n    return me.cellField || `col-md-${val} col-sm-${val} col-xs-11`;\r\n  }\r\n\r\n  get #isIcon() {\r\n    return GSUtil.isStringNonEmpty(this.icon);\r\n  }\r\n\r\n  #onRange(e) { \r\n    this.emit('input', e);\r\n  }\r\n\r\n  #onBlur(e) {\r\n    this.emit('blur', e, true, true);\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if (me.isRange) me.value = e.target?.value;\r\n    me.emit('change', e, true, true);\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    this.emit('invalid', e, true, true);\r\n  }\r\n\r\n  #validateAllowed() {\r\n    const me = this;\r\n    const slots = ['header', 'body', 'footer'];\r\n    let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n    if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n    list = Array.from(me.children).filter(el => !el.slot);\r\n    const tagList = ['GS-ITEM', 'DATALIST'];\r\n    const allowed = GSDOM.isAllowed(list, tagList);\r\n    if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n  get isFloating() {\r\n    return this.layout === 'floating';\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.layout === 'horizontal';\r\n  }\r\n\r\n  get isVertical() {\r\n    return this.layout === 'vertical';\r\n  }\r\n\r\n  get isFieldset() {\r\n    const me = this;\r\n    return me.type === 'radio' && me.value?.includes(',');\r\n  }\r\n\r\n  get isCheckable() {\r\n    const me = this;\r\n    return me.isCheck || me.isRadio || me.isSwitch;\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.field?.checked;\r\n  }\r\n\r\n  get isCheck() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get isRadio() {\r\n    return this.type === 'radio';\r\n  }\r\n\r\n  get isSwitch() {\r\n    return this.type === 'switch';\r\n  }\r\n\r\n  get isNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  get isRange() {\r\n    return this.type === 'range';\r\n  }\r\n\r\n  get isText() {\r\n    return this.type === 'text';\r\n  }\r\n\r\n  get isPassword() {\r\n    return this.type === 'passsword';\r\n  }\r\n\r\n  get isEmail() {\r\n    return this.type === 'email';\r\n  }\r\n\r\n  get isURL() {\r\n    return this.type === 'url';\r\n  }\r\n\r\n  get isFile() {\r\n    return this.type === 'file';\r\n  }\r\n\r\n  get field() {\r\n    return this.#inputRef.value;\r\n  }\r\n\r\n  get formComponent() {\r\n    return GSDOM.closest(this, 'gs-form');\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref, repeat } from '../lib.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSFormGroupElement } from './FormGroup.mjs';\r\n\r\n// TODO: Make generic JSON to template generator, \r\n// then create string template and apply it to the lit html function.\r\n// Use all properties exstractor from super components and use type definition for bool proeprties.\r\n// Use xtype(#tagName) to define component type and use it to create component instance.\r\n\r\n/**\r\n * Component is responsible for auto-building gs-form and gs-form-group elements\r\n * from either JSON data or GS-ITEM elements.\r\n */\r\nexport class GSFormPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.#proxify;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const data = me.data || {};\r\n    const items = me.data?.items || [];\r\n    return html`<gs-form ${ref(me.#formRef)}\r\n\r\n      .storage=\"${ifDefined(data.storage)}\" \r\n      ?disabled=${ifDefined(data.disabled)}.\r\n      .data=\"${ifDefined(data.data)}\"\r\n      \r\n      .name=\"${ifDefined(data.name)}\"\r\n      .rel=\"${ifDefined(data.rel)}\"\r\n      .acceptCharset=\"${ifDefined(data.acceptCharset)}\"\r\n      .autocapitalize=\"${ifDefined(data.autocapitalize)}\"\r\n      .autocomplete=\"${ifDefined(data.autocomplete)}\"\r\n\r\n      .action=\"${ifDefined(data.action)}\"\r\n      .enctype=\"${ifDefined(data.enctype)}\"\r\n      .method=\"${ifDefined(data.method)}\"\r\n      ?novalidate=\"${ifDefined(data.novalidate)}\"\r\n      .target=\"${ifDefined(data.target)}\"\r\n\r\n      ?block=\"${ifDefined(data.block)}\"\r\n      ?beep=\"${ifDefined(data.beep)}\"\r\n      .timeout=\"${ifDefined(data.timeout)}\"\r\n\r\n      ?flat=\"${ifDefined(data.flat)}\"\r\n      ?rtl=\"${ifDefined(data.rtl)}\"\r\n      ?hide=\"${ifDefined(data.hide)}\"\r\n      ?padding=\"${ifDefined(data.padding)}\"\r\n      ?margin=\"${ifDefined(data.margin)}\"\r\n      ?rounded=\"${ifDefined(data.rounded)}\"\r\n      ?bordered=\"${ifDefined(data.bordered)}\"\r\n      ?shadow=\"${ifDefined(data.shadow)}\"\r\n      ?keep=\"${ifDefined(data.keep)}\"\r\n      .css=\"${ifDefined(data.css)}\"\r\n      .theme=\"${ifDefined(data.theme)}\"\r\n      .os=\"${ifDefined(data.os)}\"\r\n      .browser=\"${ifDefined(data.browser)}\"\r\n      .language=\"${ifDefined(data.language)}\"\r\n      .environment=\"${ifDefined(data.environment)}\"\r\n      .orientation=\"${ifDefined(data.orientation)}\"\r\n      .protocol=\"${ifDefined(data.protocol)}\"\r\n      .template=\"${ifDefined(data.template)}\"      \r\n      >\r\n      <slot>\r\n        ${repeat(items, (item) => me.#renderFormGroup(me.data, item))}\r\n      </slot>\r\n    </gs-form>`;\r\n  }\r\n\r\n  #renderFormGroup(definition, item) {\r\n    return html`<gs-form-group \r\n      .icon=\"${ifDefined(item.icon)}\"\r\n      .layout=\"${ifDefined(item.layout)}\"\r\n      .placement=\"${ifDefined(item.placement)}\"\r\n\r\n      .label=\"${ifDefined(item.label)}\"\r\n      .description=\"${ifDefined(item.description)}\"\r\n      .placeholder=\"${ifDefined(item.placeholder)}\"\r\n      \r\n      .pattern=\"${ifDefined(item.pattern)}\"\r\n      .mask=\"${ifDefined(item.mask)}\"\r\n\r\n      .form=\"${ifDefined(item.form)}\"\r\n      .formaction=\"${ifDefined(item.formaction)}\"\r\n      .formenctype=\"${ifDefined(item.formenctype)}\"\r\n      .formmethod=\"${ifDefined(item.formmethod)}\"\r\n      .formnovalidate=\"${ifDefined(item.formnovalidate)}\"\r\n      .formtarget=\"${ifDefined(item.formtarget)}\"\r\n      .wrap=\"${ifDefined(item.wrap)}\"\r\n      .spellcheck=\"${ifDefined(item.spellcheck)}\"\r\n\r\n      .type=\"${ifDefined(item.type)}\"\r\n      .name=\"${ifDefined(item.name)}\"\r\n      .list=\"${ifDefined(item.list)}\"\r\n      .accept=\"${ifDefined(item.accept)}\"\r\n      .value=\"${ifDefined(item.value)}\"\r\n      \r\n      .lang=\"${ifDefined(item.lang)}\"\r\n      .title=\"${ifDefined(item.title)}\"\r\n      .cols=\"${ifDefined(item.cols)}\"\r\n      .rows=\"${ifDefined(item.rows)}\"\r\n      .step=\"${ifDefined(item.step)}\"\r\n      .min=\"${ifDefined(item.min)}\"\r\n      .max=\"${ifDefined(item.max)}\"\r\n      .maxlength=\"${ifDefined(item.maxlength)}\"\r\n      .minlength=\"${ifDefined(item.minlength)}\"\r\n\r\n      ?reverse=\"${ifDefined(item.reverse)}\"\r\n      ?selectable=\"${ifDefined(item.selectable)}\"\r\n\r\n      ?autoid=\"${ifDefined(item.autoid)}\"\r\n      ?autocopy=\"${ifDefined(item.autocopy)}\"\r\n      ?autoselect=\"${ifDefined(item.autoselect)}\"\r\n\r\n      .autocapitalize=\"${ifDefined(item.autocapitalize)}\"\r\n      .autocorrect=\"${ifDefined(item.autocorrect)}\"\r\n      .autocomplete=\"${ifDefined(item.autocomplete)}\"\r\n\r\n      ?autofocus=\"${ifDefined(item.autofocus)}\"\r\n      ?autoselect=\"${ifDefined(item.autoselect)}\"\r\n\r\n      ?disabled=\"${ifDefined(item.disabled)}\"\r\n      ?checked=\"${ifDefined(item.checked)}\"\r\n      ?multiple=\"${ifDefined(item.multiple)}\"\r\n      ?reveal=\"${ifDefined(item.reveal)}\"\r\n      ?readonly=\"${ifDefined(item.readonly)}\"\r\n      ?required=\"${ifDefined(item.required)}\"\r\n\r\n      .invalidMessage=\"${ifDefined(item.invalidMessage)}\"  \r\n      \r\n      ?block=\"${ifDefined(item.block || definition.block)}\"\r\n      ?beep=\"${ifDefined(item.beep || definition.beep)}\"\r\n      ?timeout=\"${ifDefined(item.timeout || definition.timeout)}\"\r\n\r\n      ?flat=\"${ifDefined(item.flat)}\"\r\n      ?rtl=\"${ifDefined(item.rtl)}\"\r\n      ?hide=\"${ifDefined(item.hide)}\"\r\n      ?padding=\"${ifDefined(item.padding)}\"\r\n      ?margin=\"${ifDefined(item.margin)}\"\r\n      ?rounded=\"${ifDefined(item.rounded)}\"\r\n      ?bordered=\"${ifDefined(item.bordered)}\"\r\n      ?shadow=\"${ifDefined(item.shadow)}\"\r\n      ?keep=\"${ifDefined(item.keep)}\"\r\n      .css=\"${ifDefined(item.css)}\"\r\n      .theme=\"${ifDefined(item.theme)}\"\r\n      .os=\"${ifDefined(item.os)}\"\r\n      .browser=\"${ifDefined(item.browser)}\"\r\n      .language=\"${ifDefined(item.language || definition.language)}\"\r\n      .environment=\"${ifDefined(item.environment)}\"\r\n      .orientation=\"${ifDefined(item.orientation)}\"\r\n      .protocol=\"${ifDefined(item.protocol)}\"\r\n      .template=\"${ifDefined(item.template)}\">\r\n      </gs-form-group>`;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  get #proxify() {\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, GSFormGroupElement.properties));\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGroupElement class\r\n * @module components/GSGroupElement\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSAttributeHandler } from '../base/GSAttributeHandler.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { ElementNavigationController } from '../controllers/ElementNavigationController.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { classMap, createRef, html, render, ifDefined, ref } from '../lib.mjs';\r\n\r\n/**\r\n * Renderer for grouped elements such as Buttons, Navs, Tabs and lists.\r\n * Components handles grouped elements navigation, selection and focus.\r\n * \r\n * @class\r\n * @extends { GSElement }\r\n */\r\nexport class GSGroupElement extends GSElement {\r\n\r\n  static properties = {\r\n    // multiple lists with single select across \r\n    group : {},\r\n    storage: {},    \r\n    circular: { type: Boolean },\r\n    multiple: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #elRef = createRef();\r\n  #controller;\r\n  #controllerGroup;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.data = me.initData();\r\n    me.#controller = new ElementNavigationController(me);\r\n    me.#controllerGroup = new GroupController(me);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    // allow single setting at the container component to apply to the child\r\n    Array.from(me.children).forEach(it => {\r\n      GSAttributeHandler.clone(me, it, false);\r\n    });\r\n  }  \r\n\r\n\r\n  #prerender() {\r\n    const me = this;\r\n    me.queryAll('[generated]').forEach(el => el.remove());\r\n    if (me.data.length > 0) {\r\n      const items = me.renderItems();\r\n      const tpl = document.createElement('template');\r\n      render(items, tpl);\r\n      Array.of(...tpl.children).forEach(el => GSDOM.appendChild(me, el));\r\n    }\r\n  }\r\n  \r\n  firstUpdated(changed) {\r\n    const me = this;\r\n    me.#controller.init();\r\n    me.#controller.attach(me.#elRef.value);\r\n    super.firstUpdated(changed);\r\n    //me.#prerender();\r\n  }  \r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.#prerender();\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      ${me.renderWrappedUI()}\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedUI(name) {\r\n    const me = this;\r\n    return html`<div \r\n      class=\"${classMap(me.renderWrappedClass())}\">\r\n      <slot name=\"${ifDefined(name)}\"></slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    return {};\r\n  }\r\n\r\n  renderItems() {\r\n    return '';\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSItem);\r\n  }\r\n\r\n  previous() {\r\n    this.#controller.previous();\r\n  }\r\n\r\n  next() {\r\n    this.#controller.next();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    this.#controller.reset();\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  isNavigable(el) {\r\n    return el?.tagName === this.childTagName;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onBusEvent(e) {\r\n    let owner, item;  \r\n    ({owner, item} = e.detail);\r\n    if (owner != this) {\r\n      if (!item?.disabled || owner?.selectable) {\r\n        this.reset();\r\n      }\r\n    }\r\n  }\r\n  \r\n  onSelected(el) {\r\n    this.#controllerGroup.notify(el);\r\n  }\r\n\r\n  get focused() {\r\n    return this.#controller.focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#controller.selected;\r\n  }\r\n\r\n  get childTagName() {\r\n    return '';\r\n  }\r\n    \r\n  get items() {\r\n    const me = this;\r\n    return me.queryAll(me.childTagName);\r\n  }\r\n\r\n  get generated() {\r\n    const me = this;\r\n    return this.queryAll(`${me.childTagName}[generated]`);\r\n  }\r\n\r\n  get active() {\r\n    const me = this;\r\n    if (me.multiple) return me.queryAll(`${me.childTagName}[active]`);\r\n    return me.query(`${me.childTagName}[active]`);\r\n  }\r\n\r\n  settings(el) {\r\n    const tagName = customElements.getName(el)?.toUpperCase() || 'GS-ITEM';\r\n    const cfg = GSElement.allProperties(el);\r\n    const items = Array.from(this.children).filter(e => e.tagName === tagName ).map(el => GSAttr.proxify(el, cfg));\r\n    const active = items.filter(el => el.active);\r\n    active.forEach((el, idx) => el.active = idx === 0);\r\n    return items;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-group');\r\n  }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGT0 } from '../properties/index.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSIconElement extends GSElement {\r\n\r\n  static styles = css`\r\n    :host {\r\n      --gs-icon-super-color : cornflowerblue;\r\n      --gs-icon-content : '';\r\n    }\r\n    i::after {\r\n      top: -8px;\r\n      font-size: 0.7em;\r\n      position: relative;\r\n      content: var(--gs-icon-content);\r\n      content: attr(data-super);\r\n      color: var(--gs-icon-super-color);\r\n    }`;\r\n\r\n  static properties = {\r\n    name: { reflect: true, hasChanged: notEmpty },\r\n    size: { reflect: true, type: Number, hasChanged: numGT0 },\r\n    color: { reflect: true, ...color },\r\n    superColor: { attribute : 'super-color'},\r\n    super: { reflect: true },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    _clicked: { attribute:false},\r\n    _hovered: { attribute:false},\r\n  }\r\n\r\n  #ref = createRef();\r\n  \r\n  constructor() {\r\n    super();\r\n    //this.flat = true;\r\n  }\r\n\r\n  /*\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    this.#embdeded = GSDOM.matches(this.parentComponent, '[icon]');\r\n  }\r\n  */\r\n\r\n  updated(changed) {\r\n    if (changed.has('_clicked')) {\r\n      if (this._clicked) this.#postAnimate();\r\n    } \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.setCSSProperty(':host', '--gs-icon-super-color', me.superColor);\r\n    return html`<i  ${ref(me.#ref)}\r\n       class=\"bi ${classMap(me.renderClass())}\"\r\n       data-super=\"${ifDefined(me.super)}\"\r\n       @click=\"${me.animate}\"\r\n       @mouseover=\"${me.#onMouseOver}\"\r\n       @mouseout=\"${me.#onMouseOut}\"></i>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      [`text-${me.color}`]: me.color,\r\n      [`bi-${me.name}`]: me.name,\r\n      'fs': me.size > 0,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.clickCss]: me._clicked,\r\n      [me.hoverCss]: me._hovered,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  async #postAnimate() {\r\n    const me = this;\r\n    const delay = GSUtil.asNum(me.dataset.delay, 1);\r\n    if (delay > 0) {\r\n      await GSUtil.timeout(delay * 1000);\r\n      me._clicked = false;\r\n    }    \r\n  }\r\n\r\n  #onMouseOver(e) {\r\n    this.hover(true);\r\n  }\r\n\r\n  #onMouseOut(e) {\r\n    this.hover(false);\r\n  }\r\n\r\n  animate() {\r\n    const me = this;\r\n    me._hovered = false;\r\n    me._clicked = true;\r\n  }\r\n\r\n  hover(sts = false) {\r\n    const me = this;\r\n    if (sts) {\r\n      me._clicked = false;\r\n    }\r\n    me._hovered = sts;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-icon');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/index.mjs';\r\n\r\nexport class GSIndentElement extends GSElement {\r\n\r\n  static styles = css`.indent {\r\n      --gs-indent : 10px;\r\n      margin-left: var(--gs-indent);\r\n      margin-right: var(--gs-indent);\r\n    }`;\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    size: { type: Number, hasChanged: numGT0 },\r\n    multiplier: { type: Number, hasChanged: numGT0 }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.size = 1;\r\n    me.multiplier = 10;\r\n  }\r\n\r\n  renderUI() {\r\n    const size = this.size * this.multiplier;\r\n    return html`<span class=\"indent\" style=\"--gs-indent: ${size}px;\"></span>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-indent');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nconst numdef = { reflect: true, type: Number, hasChanged: numGE0 };\r\n\r\nexport class GSImageElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { hasChanged: notEmpty },\r\n    width: numdef,\r\n    height: numdef,\r\n    opacity: numdef,\r\n    invert: numdef,\r\n    grayscale: numdef,\r\n    brightness: numdef,\r\n    blur: numdef,\r\n    contrast: numdef,\r\n    saturate: numdef,\r\n    hue: numdef,\r\n    sepia: numdef,\r\n\r\n    alt: {},\r\n    loading: {}\r\n\r\n  }\r\n\r\n  #imageRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    this.#update();\r\n    return this.src;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<img ${ref(me.#imageRef)} \r\n            @load=\"${me.#onLoad}\"\r\n            src=\"${me.src}\" \r\n            alt=\"${me.alt}\" \r\n            loading=\"${ifDefined(me.loading)}\" \r\n            class=\"${me.#styleID}\" \r\n            data-gs-class=\"${me.#styleID}\">\r\n          </img>`;\r\n  }\r\n\r\n  get complete() {\r\n    return this.#imageRef.value?.complete || false;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  #renderStyle() {\r\n    const me = this;\r\n    const filter = me.#buildFilter();\r\n    const css = {\r\n      width: me.width > 0 ? me.width : undefined,\r\n      height: me.height > 0 ? me.height : undefined,\r\n      filter: filter.length > 0 ? filter.join(' ') : ''\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #buildFilter() {\r\n    const me = this;\r\n    const o = [];\r\n\r\n    if (me.blur > 0) o.push(`blur(${me.blur}px)`);\r\n    if (me.invert > 0) o.push(`invert(${me.invert})`);\r\n    if (me.opacity > 0) o.push(`opacity(${me.opacity})`);\r\n    if (me.contrast > 0) o.push(`contrast(${me.contrast})`);\r\n    if (me.grayscale > 0) o.push(`grayscale(${me.grayscale})`);\r\n    if (me.brightness > 0) o.push(`brightness(${me.brightness})`);\r\n\r\n    if (me.hue > 0) o.push(`hue-rotate(${me.hue}deg)`);\r\n    if (me.sepia > 0) o.push(`sepia(${me.sepia}%)`);\r\n    if (me.saturate > 0) o.push(`saturate(${me.saturate}%)`);\r\n\r\n    return o;\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.filter = me.#buildFilter().join(' ').trim();\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const el = e.target;\r\n    const me = this;\r\n    if (el) {\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n      me.emit('loaded', { width: el.width, height: el.height, element: el }, true);\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-image');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayoutElement\r\n */\r\n\r\nimport { classMap, html, ifDefined, templateContent } from '../lib.mjs';\r\nimport { orientation, OrientationTypes } from '../properties/orientation.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSLayoutElement extends GSElement {\r\n\r\n    static properties = {\r\n        type: { ...orientation }\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        id : {},\r\n        type: {},\r\n        min: { type: Number },\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        resizable: { type: Boolean },\r\n        autofit: { type: Boolean },\r\n        vPos: { attribute: 'h-pos' },\r\n        hPos: { attribute: 'v-pos' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.autofit = true;  \r\n        me.#items(me).map((el, idx, els) => me.#dyncss(el, idx, els, 0));\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if ( this.autofit && GSDOM.root(this) === document.body) document.body.classList.add('vh-100');\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const list = me.#items(me).map((el, idx, els) => me.#build(el, idx, els));\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"d-flex flex-fill w-100 h-100 ${classMap(me.renderClass())}\">${list}</div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const horizontal = OrientationTypes.isHorizontal(me.type);\r\n        return {\r\n            ...super.renderClass(),\r\n            'flex-column': horizontal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #items(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSLayoutElement.options));\r\n    }\r\n\r\n    #resizable(el) {\r\n        return el.size > 0 || el.min > 0 || el.max > 0 || el.resizable;\r\n    }\r\n\r\n    #dyncss(el, idx, els, lev = 0) {\r\n        const me = this;\r\n        me.#items(el.self).map((it, idx, items) => me.#dyncss(it, idx, items, lev+1));\r\n        if(me.#resizable(el)) me.dynamicStyle(`gsd-${lev}-${idx}`);\r\n    }\r\n\r\n    #build(el, idx, els, lev = 0) {\r\n\r\n        const me = this;\r\n        const type = el.self.parentElement.type || 'vertical';\r\n\r\n        const list = me.#items(el.self).map((it, idx, items) => me.#build(it, idx, items, lev+1));\r\n        \r\n        const min = el.min;\r\n        const max = el.max;\r\n        const template = el.template;\r\n        const tplEl = me.#elementTemplate(el);\r\n\r\n        const tc = `#${tplEl?.id}` !== template;\r\n\r\n        const dir = el.type || type || 'vertical';\r\n        const horizontal = OrientationTypes.isHorizontal(dir);\r\n        \r\n        const col = list.length > 0 && horizontal ? 'flex-column' : '';\r\n\r\n        const did = `gsd-${lev}-${idx}`;\r\n        const css = me.#panelCSS(el, col, did);\r\n        const style = me.#panelStyle(el, horizontal);\r\n        me.dynamicStyle(did, style);\r\n\r\n        const slot = el.name ? html`<slot name=\"${el.name}\"></slot>` : '';\r\n        const src = html`<div id=\"${ifDefined(el.id)}\" class=\"d-flex ${classMap(css)}\">\r\n            ${list}\r\n            ${templateContent(tplEl)}\r\n            ${template && tc ? html`<gs-template flat src=\"${template}\"></gs-template>` : ''}\r\n            ${slot}\r\n            </div>`;\r\n\r\n        if (!el.resizable) return src;\r\n\r\n        const resize = (idx === els.length - 1) ? 'end' : 'start';\r\n        const splitter = me.#splitter(min, max, type, resize);\r\n\r\n        if (idx === els.length - 1) return [splitter , src];\r\n        return [src, splitter];\r\n    }\r\n    \r\n    #elementTemplate(el) {\r\n        const tplEl = el.self.firstElementChild;\r\n        return tplEl instanceof HTMLTemplateElement ? tplEl : undefined;\r\n    }\r\n\r\n    #panelCSS(el, col, did) {\r\n\r\n        const resizable = this.#resizable(el);\r\n        const grow = resizable ? '' : 'flex-grow-1';\r\n\r\n        let vpos = el.vPos;\r\n        let hpos = el.hPos;\r\n\r\n        hpos = hpos ? `align-items-${hpos}` : '';\r\n        vpos = vpos ? `justify-content-${vpos}` : '';\r\n\r\n        const css = this.mapCSS(el.css, {\r\n            [did] : resizable,\r\n            [col] : col,\r\n            [grow] : grow,\r\n            [hpos] : hpos,\r\n            [vpos] : vpos\r\n        });\r\n    \r\n        return css;        \r\n    }\r\n\r\n    #panelStyle(el, horizontal) {\r\n        const min = el.size || el.min;\r\n        const max = el.max || el.size;\r\n        const style = {};\r\n        if (horizontal) {\r\n            style['min-height'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-height'] = max > 0 ? `${max}px` : undefined;\r\n        } else {\r\n            style['min-width'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-width'] = max > 0 ? `${max}px` : undefined;\r\n        }\r\n        return style;        \r\n    }\r\n\r\n    #splitter(min, max, dir, resize) {\r\n        return html`<gs-splitter split=\"${dir}\" resize=\"${resize}\" min=\"${min}\" max=\"${max}\"></gs-splitter>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-layout');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSLinklement extends GSElement {\r\n\r\n  static properties = {\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    size: { type: Number },\r\n    text: { ...color },\r\n    color: { ...color },\r\n    url: {},\r\n    ping: {},\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    target: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.url = '#';\r\n    // this.text = 'primary'; // do not set as default -> gs-dropdown\r\n    // this.target = '_blank'; // not used \r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n      <a ${ref(me.#refEl)}  \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        title=\"${ifDefined(me.translate(me.tooltip))}\" \r\n        href=\"${ifDefined(me.url)}\" \r\n        ping=\"${ifDefined(me.ping)}\" \r\n        target=\"${ifDefined(me.target)}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        ?disabled=${me.disabled} \r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"        \r\n        @click=\"${me.#onClick}\">\r\n        ${me.#first}${me.#second}\r\n        </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,      \r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [`text-${me.text}`]: me.text,\r\n      [`bg-${me.color}`]: me.color\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.iconEl?.animate();\r\n    me.notify();\r\n    if (me.url === '#' || GSUtil.isStringEmpty(me.url)) {\r\n      GSEvents.prevent(e);\r\n      me.handle(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon css=\"mx-1\" ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    size=\"${this.size}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  /**\r\n   * Generate clickable link\r\n   * @param {*} options \r\n   * @param {*} css \r\n   * @param {*} before \r\n   * @param {*} after \r\n   * @returns \r\n   */\r\n  static generate(options, css, before, after) {\r\n    const opt = options;\r\n    return html`<a class=\"${classMap(css)}\"\r\n        tabindex=\"0\"    \r\n        ${dataset(opt, true)}\r\n        part=\"${ifDefined(opt.part)}\"\r\n        tooltip=\"${ifDefined(opt.tooltip)}\"\r\n        href=\"${ifDefined(opt.url)}\">        \r\n        ${before || ''}\r\n        ${ifDefined(opt.title)}\r\n        <slot></slot> \r\n        ${after || ''}\r\n    </a>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-link');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\n\r\nexport class GSListElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    selectable: { reflect: true, type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = false;\r\n    this.multiple = false;\r\n    this.selectable = false;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  renderClass() {\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group': true,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    return html`<slot></slot>`;\r\n  }\r\n\r\n  reset() {\r\n    this.items.forEach(el => el.reset());\r\n    this.notify();\r\n  }\r\n\r\n  renderItems() {    \r\n    return this.data.map(o => {\r\n      return html`<gs-list-item generated\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-list-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return super.isNavigable(el) && this.selectable;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-LIST-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSListItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    url: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    size: { type: Number },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true }\r\n  }\r\n\r\n  #initial;\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.binded();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.#initial = this.active;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-LIST';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n        // allow single setting at the gs-list to apply to the child\r\n        // GSAttributeHandler.clone(this.parentComponent, this, false);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<a  tabindex=\"0\" ${ref(me.#refEl)}\r\n       href=\"${ifDefined(me.href)}\" \r\n       target=\"${ifDefined(me.target)}\" \r\n       class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()} \r\n        ${me.#renderSecond()}\r\n        <slot>${me.renderTemplate()}</slot>\r\n      </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.#itemCSS] : true,\r\n      'active': me.active && me.isSelectable()\r\n    }\r\n    return me.mapCSS(me.#itemStatusCSS, css);\r\n  }\r\n\r\n  isSelectable() {\r\n    return !GSUtil.asBool(this.disabled) || GSUtil.asBool(this.parentComponent.selectable);\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.icon ? html`<gs-icon name=\"${me.icon}\" size=\"${me.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderText() {\r\n    return this.title ? html`<span>${this.translate(this.title)}</span>` : html`<slot name=\"title\"></slot>`;\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.rtl ? this.#renderText() : this.#renderIcon();\r\n  }\r\n\r\n  #renderSecond() {\r\n    return this.rtl ? this.#renderIcon() : this.#renderText();\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || this.#initial || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get href() {\r\n    return this.url ? this.url : '#';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #inactiveCSS() {\r\n    return this.parentComponent.dataset?.cssInactive || '';\r\n  }\r\n\r\n  get #itemCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #itemStatusCSS() {\r\n    return this.active && this.isSelectable() ? this.#activeCSS : this.#inactiveCSS;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\n/**\r\n * For debugging purposes for floating element such as popup, popover, menus... \r\n * https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_view/Coordinate_systems\r\n */\r\nexport class GSMouseElement extends GSElement {\r\n\r\n  static properties = {\r\n    pageX: { type: Number },\r\n    pageY: { type: Number },\r\n    screenX: { type: Number },\r\n    screenY: { type: Number },\r\n    clientX: { type: Number },\r\n    clientY: { type: Number },       \r\n    offsetX: { type: Number },       \r\n    offsetY : { type: Number }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.attachEvent(window, 'mousemove', this.#onMouse.bind(this));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    Offset(${me.offsetX}, ${me.offsetY}) \r\n    Viewport(${me.clientX}, ${me.clientY}) \r\n    Page(${me.pageX}, ${me.pageY}) \r\n    Screen(${me.screenX}, ${me.screenY})`;\r\n  }\r\n\r\n  #onMouse(e) {\r\n    const me = this;\r\n    me.offsetX = e.offsetX;\r\n    me.offsetY = e.offsetY;\r\n    me.clientX = e.clientX;\r\n    me.clientY = e.clientY;\r\n    me.pageX = e.pageX;\r\n    me.pageY = e.pageY;\r\n    me.screenX = e.screenX;\r\n    me.screenY = e.screenY;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-mouse');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\n/**\r\n * This component allow moving contained elements acroos UI\r\n */\r\nexport class GSMovableElement extends GSElement {\r\n\r\n  static styles = css`\r\n  :host {\r\n      --gs-width : inherited;\r\n      --gs-height : inherited;\r\n      --gs-min-width: inherited;\r\n      --gs-max-width: inherited;\r\n      --gs-min-height: inherited;\r\n      --gs-max-height: inherited;\r\n  }\r\n  .gs-movable {\r\n    left: var(--mouse-x) !important;\r\n    top: var(--mouse-y) !important;\r\n   }`;\r\n\r\n  static properties = {\r\n    shadow: { type: Boolean},\r\n    border: { type: Boolean},\r\n    color: { reflect: true, ...color }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #refEl = createRef();\r\n  #enabled = false;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    const root = document.documentElement;\r\n    me.attachEvent(root, 'mousemove', me.#onMove.bind(me));\r\n    me.attachEvent(root, 'mousedown', me.#onMouseDown.bind(me));\r\n    me.attachEvent(root, 'mouseup', me.#onMouseUp.bind(me));\r\n  }\r\n\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    Object.assign(rule.style, {cursor: 'move'});\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#refEl)} \r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\"\r\n      @mousedown=\"${() => me.#enabled = true}\"\r\n      @mouseup=\"${() => me.#enabled = false}\">\r\n      <slot></slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'gs-movable' : true,\r\n      [me.#styleID]: true,\r\n      'position-absolute' : true,\r\n      'border' : me.border,\r\n      'shadow-sm' : me.shadow,\r\n      [`text-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #updateCursor(move) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    Object.assign(rule.style, {'user-select': move ? 'none' : ''});\r\n  }\r\n\r\n  #onMove(e) {\r\n    if (this.#enabled) {\r\n      const style = this.#refEl.value.style;\r\n      style?.setProperty('--mouse-x', e.clientX + \"px\");\r\n      style?.setProperty('--mouse-y', e.clientY + \"px\");\r\n    }\r\n  }\r\n\r\n  #onMouseDown(e) {\r\n    this.#updateCursor(true);\r\n  }\r\n\r\n  #onMouseUp(e) {\r\n    this.#updateCursor(false);\r\n  }\r\n\r\n\r\n  static {\r\n    this.define('gs-movable');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { PlacementTypes, nav, placement } from '../properties/index.mjs';\r\n\r\nexport class GSNavElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    type: nav,\r\n    placement: placement,\r\n    vertical: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = true;\r\n    this.multiple = false;\r\n    this.type = 'pills';\r\n    this.placement = 'start';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-nav-item');\r\n  }\r\n  \r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const isBefore = PlacementTypes.isBefore(me.placement);\r\n    const isTab = me.type === 'tabs';\r\n    const css = {\r\n      'nav': true,\r\n      [`nav-${me.type}`]: me.type,\r\n      'flex-column': me.vertical,\r\n      'border-bottom-0': me.vertical,\r\n      'border-end': isTab && isBefore && me.vertical,\r\n      'border-start': isTab && !isBefore && me.vertical,\r\n      [`justify-content-${me.placement}`]: !me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Render items based on data propprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-nav-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-nav-item>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  onFocused(el) {\r\n    // el?.click();\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-NAV-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { NavTypes, PlacementTypes } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSNavItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    disabled: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    active: { type: Boolean, reflect: true },\r\n    tooltip: {} // Add tooltip property\r\n  }\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-NAV';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div class=\"nav-item ${classMap(me.renderClass())}\">${me.#button}</div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    return this.mapCSS(this.#itemsCSS, super.renderClass());\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get isNav() {\r\n    return true;\r\n  }\r\n\r\n  get vertical() {\r\n    return this.parentComponent.vertical || false;\r\n  }\r\n\r\n  get placement() {\r\n    return this.parentComponent.placement;\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #title() {\r\n    return html`<slot>${this.translate(this.title)}</slot>`;\r\n  }\r\n\r\n  get #icon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  get #first() {\r\n    return this.rtl ? this.#title : this.#icon;\r\n  }\r\n\r\n  get #second() {\r\n    return this.rtl ? this.#icon : this.#title;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#buttonCSS, {});\r\n    if (me.active) obj = me.mapCSS(me.#buildCSS + ' ' + me.#activeCSS, obj);\r\n    return html`<a tabindex=\"0\" type=\"button\" role=\"nav\" \r\n     ${ref(me.#refEl)}\r\n     class=\"nav-link ${classMap(obj)}\"\r\n     href=\"${ifDefined(me.url)}\" \r\n     target=\"${ifDefined(me.target)}\"\r\n     title=\"${ifDefined(me.tooltip)}\"> \r\n        ${me.#first} \r\n        ${me.#second}\r\n      </a>`;\r\n  }\r\n\r\n  get #itemsCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #buttonCSS() {\r\n    return this.parentComponent.dataset?.cssButton || '';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #navType() {\r\n    return NavTypes.indexOf(this.parentComponent.type);\r\n  }\r\n\r\n  // fiix for shadowed DOM, parent class=\"nav nav-pills..\" \r\n  // do not cross shadow dom, so item elements does not see CSS\r\n  // we have to simulate\r\n  get #buildCSS() {\r\n    const isVertical = this.vertical;\r\n    const isBefore = PlacementTypes.isBefore(this.placement);\r\n    switch (this.#navType) {\r\n      // pills\r\n      case 1: return 'rounded text-bg-primary';\r\n      // tabs\r\n      case 2:\r\n        if (isVertical) {\r\n          if (isBefore) {\r\n            return 'shadow-none border border-end-0';\r\n          } else {\r\n            return 'shadow-none border border-start-0';\r\n          }\r\n        }\r\n        return 'shadow-none border border-bottom-0';\r\n      // underline\r\n      case 3: return 'shadow-none border-bottom border-3 fw-medium';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { svg, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSOverlayElement extends GSElement {\r\n\r\n    static properties = {\r\n        color: {},\r\n        target: {},\r\n        autoremove: { type: Boolean },\r\n        opened: { type: Boolean },\r\n        opacity: { type: Number },\r\n        padding: { type: Number },\r\n        radius: { type: Number },\r\n    }\r\n\r\n    #styleID = GSID.id;\r\n    #styleID2 = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        //this.color = 'rgb(0,0,0)';\r\n        this.color = '#000';\r\n        this.opacity = 0.7;\r\n        this.padding = 1;\r\n        this.radius = 6;\r\n        this.dynamicStyle(this.#styleID);\r\n        this.dynamicStyle(this.#styleID2);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', () => me.requestUpdate());\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        if (!me.opened) return '';\r\n        const path = me.#path;\r\n        return path ? html`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:space=\"preserve\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\" preserveAspectRatio=\"xMinYMin slice\"\r\n            viewBox=\"0 0 ${window.innerWidth} ${window.innerHeight}\"\r\n            class=\"gs-overlay gs-overlay-animated ${me.#styleID}\"\r\n            @click=\"${me.reset.bind(me)}\">\r\n            ${path}\r\n        </svg>` : '';\r\n    }\r\n\r\n    async firstUpdated(changed) {\r\n        const me = this;\r\n        const opt = {\r\n            fillRule: \"evenodd\",\r\n            clipRule: \"evenodd\",\r\n            strokeLinejoin: \"round\",\r\n            strokeMiterlimit: \"2\",\r\n            zIndex: \"10000\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    get #path() {\r\n        const me = this;\r\n        const el = GSDOM.query(me.target);\r\n        if (!me.target) return '';\r\n        const pathStr = me.#createSVGPathString(el);\r\n        const opt = { fill: me.color, opacity: me.opacity, pointerEvents: 'auto', cursor: 'auto' };\r\n        me.dynamicStyle(me.#styleID2, opt);\r\n        return svg`<path class=\"${me.#styleID2}\"  d=\"${pathStr}\"></path>`;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n\r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n\r\n        const rect = target.getBoundingClientRect();\r\n\r\n        const padding = me.padding;\r\n        const radius = me.radius;\r\n\r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n\r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n\r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n\r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n\r\n        const val = `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n            M${highlightBoxX},${highlightBoxY} \r\n            h${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n            v${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n            h-${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n            v-${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;\r\n        return val.replace(/[\\t\\n]/g, ' ');\r\n    }\r\n\r\n    static {\r\n        this.define('gs-overlay');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, map, range, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { size, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSPagerElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    size: { ...size },\r\n    first: { type: Boolean },\r\n    last: { type: Boolean },\r\n    next: { type: Boolean },\r\n    previous: { type: Boolean },\r\n    pages: { type: Number },\r\n\r\n    labelFirst: { attribute: 'label-first' },\r\n    labelLast: { attribute: 'label-last' },\r\n    labelNext: { attribute: 'label-next' },\r\n    labelPrevious: { attribute: 'label-previous' },\r\n\r\n    cssItem: { attribute: 'css-item' },\r\n\r\n  }\r\n\r\n  #ref = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.pages = 5;\r\n    me.labelFirst = '&laquo;';\r\n    me.labelLast = '&raquo;';\r\n    me.labelNext = '&rsaquo;';\r\n    me.labelPrevious = '&lsaquo;';\r\n    if (me.#isInTable) {\r\n      me.slot = \"extra\";\r\n    }\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const half = Math.floor((me.pages - 1) / 2);\r\n    const page = me.dataController?.page || 0;\r\n    const start = page - half < 1 ? 1 : page - half;\r\n    const end = page > 0 ? page + half : me.pages;\r\n\r\n    return html`<nav \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        @click=\"${me.#onClick}\"\r\n        @keyup=\"${me.#onKeyUp}\"\r\n        @keydown=\"${me.#onKeyDown}\">\r\n        <ul ${ref(me.#ref)} class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()}\r\n        ${me.#renderPrevious()}\r\n        ${map(range(start, end + 1), (i) => me.#renderItem(i, '', '', i  === page))}\r\n        ${me.#renderNext()}\r\n        ${me.#renderLast()}\r\n        </ul></nav>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = me.size ? SizeTypes[me.size] || me.size : '';\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'pagination': true,\r\n      [`pagination-${size}`]: size,\r\n\r\n    }\r\n    return css;\r\n  }\r\n\r\n  updated() {\r\n    const target = this.#ref.value;\r\n    if (target && this.isFocused) {\r\n      target.querySelector('.active > a')?.focus();\r\n    }\r\n  }\r\n\r\n  onDataRead() {\r\n    this.requestUpdate();\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.first ? this.#renderItem(this.labelFirst, 'first', 'First page') : '';\r\n  }\r\n\r\n  #renderLast() {\r\n    return this.last ? this.#renderItem(this.labelLast, 'last', 'Last page') : '';\r\n  }\r\n\r\n  #renderPrevious() {\r\n    return this.previous ? this.#renderItem(this.labelPrevious, 'previous', 'Previous page') : '';\r\n  }\r\n\r\n  #renderNext() {\r\n    return this.next ? this.#renderItem(this.labelNext, 'next', 'Next page') : '';\r\n  }\r\n\r\n  #renderItem(text = '', name = '', title = '', active = false) {\r\n    const me = this;\r\n    text = GSUtil.decodeHTMLEntities(text);\r\n    return html`<li class=\"page-item ${active ? 'active' : ''}\">\r\n              <a class=\"page-link ${this.cssItem}\" \r\n                 name=\"${name}\" \r\n                 title=\"${me.translate(title)}\" \r\n                 href=\"#\">${me.translate(text)}</a>\r\n            </li>`;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const el = this.#toTarget(e, 'a');\r\n    if (!el) return;\r\n\r\n    const ctrl = me.dataController;\r\n    if (!ctrl) return;\r\n\r\n    const val = el.name || el.text;\r\n    me.emit(val, el);\r\n    \r\n    switch (val) {\r\n      case 'first':\r\n        return ctrl.firstPage();\r\n      case 'last':\r\n        return ctrl.lastPage();\r\n      case 'next':\r\n        return ctrl.nextPage();\r\n      case 'previous':\r\n        return ctrl.prevPage();\r\n    }\r\n\r\n    ctrl.page = val;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const current = this.#toTarget(e, 'li');\r\n    let el = null;\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        el = current?.previousElementSibling;\r\n        break;\r\n      case 'ArrowRight':\r\n        el = current?.nextElementSibling;\r\n        break;\r\n    }\r\n    el = el?.querySelector('a');\r\n    el?.focus();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') {\r\n      this.#toTarget(e, 'a')?.click();\r\n    }\r\n  }\r\n\r\n  #toTarget(e, name) {\r\n    const el = e.target.closest(name) || e.target;\r\n    return el.tagName === name.toUpperCase() ? el : undefined;\r\n  }\r\n\r\n  get #isInTable() {\r\n    return this.parentComponent?.tagName === 'GS-TABLE';\r\n  }\r\n  \r\n  static {\r\n    this.define('gs-pagination');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, position } from '../properties/index.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSPopper } from \"../base/GSPopper.mjs\";\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopupElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    position: { ...position },\r\n    trigger: {},\r\n    target: {},\r\n    autoclose: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    opened: { type: Boolean },\r\n    hPos: { type: Number, attribute: 'h-pos' },\r\n    vPos: { type: Number, attribute: 'v-pos' },\r\n    wMin: { type: Number, attribute: 'w-min' },\r\n    wMax: { type: Number, attribute: 'w-max' },\r\n    hMin: { type: Number, attribute: 'h-min' },\r\n    hMax: { type: Number, attribute: 'h-max' },\r\n\r\n  }\r\n\r\n  #caller = null;\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.autofocus = true;\r\n    this.autoclose = true;\r\n    this.trigger = 'click';\r\n    this.position = 'absolute';\r\n    this.placement = 'bottom';\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachTarget(); // Fixed typo: #attachTaraget -> #attachTarget\r\n    me.attachEvent(window, 'resize', me.close.bind(me));\r\n    me.on('mouseleave', me.#onAuto.bind(me));\r\n  }\r\n\r\n  firstUpdated(changedProperties) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#resize();\r\n      me.#reposition();\r\n    });\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#reposition();\r\n    if (me.autofocus) me.focus();\r\n    me.notify();\r\n    me.#postPopup();\r\n  }\r\n\r\n  willUpdate(changedProperties) {\r\n    if (changedProperties.has('opened')) {\r\n      this.#postPopup();\r\n    }\r\n    return super.willUpdate(changedProperties); \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div \r\n      ${ref(me.#panelRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"fade ${classMap(me.renderClass())}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      @keydown=\"${me.#onKeyDown}\">\r\n      ${me.renderTemplate()}\r\n      <slot></slot>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': me.opened,\r\n      //'d-none' : !me.opened,\r\n      [me.#styleID]: true,\r\n      [`position-${me.position}`]: me.position,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  focus() {\r\n    this.query('[tabindex], input, select, textarea, button, a', true)?.focus();\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Show popup at x/y position on the screen\r\n   * @param {Number} x \r\n   * @param {Number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const obj = {\r\n      top: '0px',\r\n      left: '0px',\r\n      translate: `${x}px ${y}px`\r\n    };\r\n    me.#resize(obj);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      case 'Escape':\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    //if (!me.opened) return;\r\n    if (me.vPos || me.hPos) {\r\n      const opt = {\r\n        top: '0px',\r\n        left: '0px',\r\n        translate: `${me.hPos}px ${me.vPos}px`\r\n      };\r\n      const rule = me.dynamicStyle(me.#styleID);\r\n      Object.assign(rule.style, opt);\r\n    } else if (me.target) {\r\n      let target = GSDOM.query(document.documentElement, me.target);\r\n      target = target.renderRoot?.firstElementChild || target;\r\n      GSPopper.popupFixed(me.placement, me.#panel, target);\r\n    }\r\n\r\n  }\r\n\r\n  #resize(obj = {}) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n    if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n    if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n    if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n    Object.assign(rule.style, obj);\r\n  }\r\n\r\n  #onPopup(e) {\r\n    const me = this;\r\n    me.#caller = e;\r\n    if (e instanceof Event) {\r\n      GSEvents.prevent(e);\r\n      me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n    }\r\n\r\n    if (me.placement) {\r\n      GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n      me.opened = true;\r\n      return;\r\n    }\r\n\r\n    let x = e.clientX, y = e.clientY;\r\n    const rect = me.#panel.getBoundingClientRect();\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #postPopup() {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    Object.assign(rule.style, {display: me.opened ? '' : 'none'}); \r\n  }\r\n\r\n  #attachTarget() { // Fixed typo: #attachTaraget -> #attachTarget\r\n    const me = this;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    me.trigger.split(' ').forEach(evt => {\r\n      targets.forEach(target => me.attachEvent(target, evt, me.#onPopup.bind(me)));\r\n    });\r\n  }\r\n\r\n  #onAuto(e) {\r\n    if (this.autoclose) this.close();\r\n  }\r\n\r\n  get #panel() {\r\n    return this.#panelRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-popup');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopoverElement extends GSElement { // Fixed typo: GSPopoverlement -> GSPopoverElement\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    target: {},\r\n    trigger: {},\r\n    title: {},\r\n    content: {},\r\n    opened: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    // added to the GSCacheStyle\r\n    //this.style.position = 'fixed';\r\n    this.placement = 'top';\r\n    this.trigger = 'hover';\r\n    this.content = '';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowID);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n  \r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const head = me.title ? html`<div class=\"popover-header ${me.cssHead}\">${me.translate(me.title)}</div>` : '';\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        data-popper-placement=\"${me.placement}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        data-gs-class=\"${me.#styleID}\" \r\n        role=\"tooltip\">\r\n        <div ${ref(me.#arrowRef)} \r\n          class=\"popover-arrow ${me.#arrowID}\" \r\n          data-gs-class=\"${me.#arrowID}\">\r\n        </div>\r\n        ${head}\r\n        <div class=\"popover-body\">\r\n          ${me.renderTemplate()}\r\n          ${me.content}\r\n          <slot></slot>\r\n        </div>\r\n    </div>            \r\n    `;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'popover': true,\r\n      'bs-popover-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  get isFocusTrigger() {\r\n    return this.trigger.includes('focus');\r\n  }\r\n\r\n  get isHoverTrigger() {\r\n    return this.trigger.includes('hover');\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return GSDOM.query(document.body, me.target);\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const source = me.#panel;\r\n    if (!source) return;\r\n    if (me.opened) {\r\n      GSPopper.popupAbsolute(me.placement, source, me.#ref, me.#arrow);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, {top:'-1000px', left:'-1000px'});\r\n    }\r\n  }\r\n\r\n  // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n  #attachEvents() {\r\n\r\n    const me = this;\r\n    const el = me.#ref;\r\n\r\n    if (me.isHoverTrigger) {\r\n      GSEvents.attach(me, el, 'mouseover', me.open.bind(me));\r\n      GSEvents.attach(me, el, 'mouseleave', me.close.bind(me));\r\n    }\r\n\r\n    if (me.isFocusTrigger) {\r\n      GSEvents.attach(me, el, 'click', me.#onFocus.bind(me));\r\n      GSEvents.attach(me, me.#panel, 'mouseleave', me.close.bind(me));\r\n      GSEvents.attach(me, window, 'click', me.close.bind(me));\r\n    }\r\n\r\n  }\r\n\r\n  #onFocus(e) {\r\n    GSEvents.prevent(e);\r\n    this.toggle();\r\n  }\r\n  \r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-popover');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, classMap, ifDefined } from '../lib.mjs';\r\nimport { literalTemplate } from '../directives/literal.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSProgressElement extends GSElement {\r\n\r\n  static properties = {\r\n    min: { reflect: true, type: Number },\r\n    max: { reflect: true, type: Number },\r\n    step: { reflect: true, type: Number },\r\n    value: { reflect: true, type: Number },\r\n    label: { reflect: true }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.min = 0;\r\n    this.step = 1;\r\n    this.max = 100;\r\n    this.value = 0;\r\n    this.styles = { width: '0%' };\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'progress-bar' : true,\r\n      [me.#styleID] : true\r\n    }\r\n    return css;\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#updateStyle();\r\n    const obj = {min :me.min, max:me.max, step:me.step, value:me.value, percentage:me.percentage};\r\n    return html`\r\n    <div class=\"progress\" @keydown=\"${me.#onKeySelect}\" dir=\"${ifDefined(me.direction)}\">\r\n        <div class=\"${classMap(me.renderClass())}\" \r\n             \r\n             role=\"progressbar\"\r\n             tabindex=\"0\">\r\n             ${literalTemplate(me.label, obj)}\r\n        </div>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    if (changed.has('value')) {\r\n      let val = me.step + changed.get('value');\r\n      val = me.#update(val, val);\r\n      changed.set('value', val);\r\n    }\r\n  }\r\n\r\n  updated(changed) {\r\n    if (changed.has('value')) {\r\n      this.notify();\r\n    }\r\n  }\r\n\r\n  increase(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value + val, me.value);\r\n    return true;\r\n  }\r\n\r\n  decrease(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value - val, me.value);\r\n    return true;\r\n  }\r\n\r\n  get percentage() {\r\n    const me = this;\r\n    return Math.trunc((me.value / me.max) * 100);\r\n  }\r\n\r\n  #updateStyle() {\r\n    const me = this;\r\n    me.styles.width = `${me.percentage}%`;\r\n    me.dynamicStyle(me.#styleID, me.styles);\r\n  }\r\n\r\n  #update(val, old = 0) {\r\n    val = GSUtil.asNum(val, GSUtil.asNum(old));\r\n    const me = this;\r\n    if (val > me.max) val = me.max;\r\n    if (val < me.min) val = me.min;\r\n    return val;\r\n  }\r\n\r\n  #onKeySelect(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp' :\r\n      case 'ArrowRight' :\r\n          return me.increase();\r\n      case 'ArrowLeft' :\r\n      case 'ArrowDown' :\r\n         return me.decrease();\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-progress');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\n\r\nexport class GSSpinnerElement extends GSElement {\r\n\r\n    static styles = css`.spinner-border { border: var(--bs-spinner-border-width) solid currentcolor; border-right-color: transparent; }`;\r\n\r\n    static properties = {\r\n        color: { ...color, reflect: true },\r\n        small: { type: Boolean, reflect: true },\r\n        pulsar: { type: Boolean }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\" role=\"status\"></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"spinner-border\": !me.pulsar,\r\n            \"spinner-grow\": me.pulsar,\r\n            [`text-${me.color}`]: me.color,\r\n            [`spinner-border-sm`]: !me.pulsar && me.small,\r\n            [`spinner-grow-sm`]: me.pulsar && me.small,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-spinner');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitterElement class\r\n * @module components/GSSplitterElement\r\n */\r\n\r\nimport { classMap, createRef, ref, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCSSMap } from '../base/GSCSSMap.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { notEmpty, numGT0, placement } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSSplitterElement extends GSElement {\r\n\r\n    static properties = {\r\n        // Check if splitter use vertical or horizontal splitting\r\n        split: { reflect: true },\r\n        // start|end|top|bottom\r\n        resize: { ...placement, hasChanged: notEmpty },\r\n        size: { type: Number, hasChanged: numGT0 }\r\n    }\r\n\r\n    #cursor = 0;\r\n    #styleID = GSID.id;\r\n    #styleTGT = GSID.id;\r\n    #elRef = createRef();\r\n    #mouseController;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.size = 8;\r\n        me.resize = 'start';\r\n        me.dynamicStyle(me.#styleID);\r\n        me.#load();\r\n        me.#mouseController = new ElementMoveController(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        //this.dynamicStyle(this.#styleTGT, null, true);\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        super.firstUpdated(changed);\r\n        const me = this;\r\n        me.#mouseController.attach(me.#splitter);\r\n        //const shadow = GSDOM.root(me.target) instanceof ShadowRoot;\r\n        //me.dynamicStyle(me.#styleTGT, {}, !shadow);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#elRef)} \r\n            @dblclick=\"${me.#onDoubleClick}\"\r\n            data-gs-class=\"${me.#styleID}\" \r\n            class=\"${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'splitter': true,\r\n            [me.#styleID]: true\r\n        }\r\n        return css;\r\n    }\r\n\r\n    updated(changedProperties) {\r\n        const me = this;\r\n        me.#cssUpdate();\r\n    }\r\n\r\n    /**\r\n    * Lock UI for mouse events to enable resizing over embedded iframes\r\n    * @param {MouseEvent} e \r\n    */\r\n    onStartMove(e) {\r\n        const me = this;\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', { start: true });\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    onMouseMove(e) {\r\n        const me = this;\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Save last position and unlock mouse UI events when resizing finished\r\n     * @param {*} e \r\n     */\r\n    onEndMove(e) {\r\n        const me = this;\r\n        me.#save();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', { stop: true });\r\n    }\r\n\r\n    /**\r\n    * Check if splitter use vertical or hotizontal splitting\r\n    * @returns {Boolean}\r\n    */\r\n    get isVertical() {\r\n        return this.split === 'vertical';\r\n    }\r\n\r\n    get isHorizontal() {\r\n        return !this.isVertical;\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display', 'none')).pop();\r\n        }\r\n        el.classList?.add(me.#styleTGT);\r\n        return el;\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.#elRef.value;\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        return this.target.style;\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n\r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n                .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, true);\r\n                    el.dataset.gsSplitter = true;\r\n                });\r\n        } else {\r\n            me.#lockable\r\n                .filter(el => el.dataset.gsSplitter)\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, false);\r\n                    delete el.dataset.gsSplitter;\r\n                });\r\n        }\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { width: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { height: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        const key = me.isVertical ? 'width' : 'height';\r\n        me.#styleDynamic[key] = val + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { [key]: val + \"px\" }, true);\r\n    }\r\n\r\n    #cssUpdate() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        const opt = {\r\n            [size]: `${me.size}px`,\r\n            [full]: '100%',\r\n            'border-width': '1px',\r\n            cursor: cursor,\r\n            'border-color': 'darkgray',\r\n            'border-style': 'solid',\r\n            'background-color': 'lightgray',\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-splitter');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNavItemElement } from '../NavItem.mjs';\r\n\r\n/**\r\n * Tab component (gs-tab), generate selectable/switchable tabs on a panel\r\n */\r\nexport class GSTabItemElement extends GSNavItemElement {\r\n\r\n  static properties = {\r\n    name: {}\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.#updateCSS + this.css;\r\n  }\r\n\r\n  get #updateCSS() {\r\n    const me = this;\r\n    return me.shouldUpdate() ? GSUtil.normalize(me.parentComponent?.tabCSS) : '';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.parentComponent?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\n\r\n/**\r\n * Container for individual tab; part of tabed panel\r\n */\r\nexport class GSTabPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    name: {},\r\n    template: {},\r\n    active: { type: Boolean, reflect : true }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.active = false;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" \r\n      class=\"${classMap(this.renderClass())}\">\r\n      <slot>\r\n      ${this.template ? html`<gs-template flat src=\"${this.template}\"></gs-template>` : ''}\r\n      </slot></div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tab-pane': true,\r\n      'd-none' : !me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tab-group') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../../base/GSID.mjs';\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { PlacementTypes } from '../../properties/placement.mjs';\r\nimport { GSNavElement } from '../Nav.mjs';\r\n\r\n/**\r\n * Panel with tabs component (gs-tab-group), generate childrens gs-tab and gs-tab-panel \r\n */\r\nexport class GSTabGroupElement extends GSNavElement {\r\n\r\n  static properties = {\r\n    panelCSS: { attribute: 'css-panel' },\r\n    tabCSS: { attribute: 'css-tab' },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n   \r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    // link tabs and panels\r\n    me.items.forEach(el => me.#findPanel(el));\r\n    me.onSelected(me.active);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.items.forEach(el => me.#findPanel(el));\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'd-flex': me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    const me = this;\r\n    const reverse = PlacementTypes.isAfter(me.placement);\r\n    const list = [super.renderWrappedUI('tabs'),\r\n    html`<div class=\"tab-content flex-fill ${me.panelCSS}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <slot name=\"panels\"></slot>\r\n      </div>\r\n      <slot class=\"d-none\"></slot>`];\r\n    return reverse ? list.reverse() : list;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const css = super.renderWrappedClass();\r\n    return me.mapCSS(me.tabCSS, css);\r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    const me = this;\r\n    const tabs =  me.#renderTabs();\r\n    const panels = me.#renderPanels();\r\n    return tabs.concat(...panels);\r\n  }\r\n\r\n  #renderTabs() {    \r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab generated slot=\"tabs\"\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\"    \r\n        title=\"${ifDefined(o.title)}\"\r\n        name=\"${o.name}\"></gs-tab>`;\r\n    });    \r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  #renderPanels() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-panel generated  \r\n        slot=\"panels\" name=\"${o.name}\" \r\n        .active=\"${ifDefined(o.active)}\"\r\n        template=\"${ifDefined(o.template)}\"></gs-tab-panel>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when tab selected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onSelected(el) {\r\n    el?.click();\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = true;\r\n  }\r\n\r\n  /**\r\n   * Callback when tab deselected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onDeselected(el) {\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = false;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-TAB';\r\n  }\r\n\r\n  /**\r\n   * Selected Tab node name is used to find the panel.\r\n   * If panel found, auto-link it with node element\r\n   * @param {GSTabElement} el \r\n   */\r\n  #findPanel(el) {\r\n    if (!el) return null;\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    const generated = me.data?.length > 0;\r\n    let panel = el[key] || me.query(`gs-tab-panel[name=\"${el.name}\"]`, generated);\r\n    if (!el[key]) el[key] = panel;\r\n    return panel;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * A HTML Table renderer for tabular data representation.\r\n * Either use \"storage\" property to point to data handler\r\n * or use simpler form by using \"data\" property.\r\n * \r\n * NOTE: Simpler form currently does not suport data filter.\r\n * Simpler form is only for read-ony static data representation.\r\n */\r\nexport class GSTableElement extends GSElement {\r\n\r\n  static #icons = ['sort-up', 'arrow-down-up', 'sort-down-alt'];\r\n\r\n  static styles = css`th:hover { opacity: 50% !important; }`;\r\n\r\n  static CELLS = {\r\n    align: {},\r\n    width: {},\r\n    width: {},\r\n    css: {},\r\n    title: {},\r\n    colspan: {},\r\n    storage: {},\r\n    ref: {}, // if set; use storage or gs-items to map ref value to virtual field\r\n    list : { type: Boolean }, // if set, use storage record column as a filter\r\n    filter: { type: Boolean },\r\n    hidden: { type: Boolean },\r\n    fixed: { type: Boolean },\r\n    filterType: { attribute: 'filter-type' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    color: { ...color},\r\n    ...GSData.PROPERTIES\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    color: { ...color },\r\n    colorFilter: { ...color, attribute: 'filter-color' },\r\n    colorHead: { ...color, attribute: 'head-color' },\r\n    colorSelect: { ...color, attribute: 'select-color' },\r\n    colorSort: { ...color, attribute: 'sort-color' },\r\n    stripedColumn: { type: Boolean, attribute: 'striped-column' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    divider: { type: Boolean },\r\n    striped: { type: Boolean },\r\n    hover: { type: Boolean },\r\n    small: { type: Boolean },\r\n    grid: { type: Boolean },\r\n    borderless: { type: Boolean },\r\n\r\n    sort: { type: Array, state: true },\r\n    columns: { type: Array, state: true },\r\n    key: { type: Number, state: true },\r\n    data: { type: Array },\r\n    \r\n    datacolumn: { type: Boolean },\r\n    multisort: { type: Boolean },\r\n    multiselect: { type: Boolean },\r\n    protected: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n    toggle: { type: Boolean },\r\n    sortable: { type: Boolean },\r\n  }\r\n\r\n  #config = [];\r\n  #sortOrder = [];\r\n  #auto = false;\r\n\r\n  constructor() {\r\n    super();\r\n    this.headColor = 'secondary';\r\n    this.colorSelect = 'info';\r\n    this.columns = [];    \r\n    this.data = [];\r\n    this.sort = [];\r\n    this.key = 0;\r\n  }\r\n\r\n  get selected() {\r\n    return this.dataController?.selected;\r\n  }\r\n\r\n  set search(val) {\r\n    const me = this;\r\n    if (me.storage && me.dataController) {\r\n      return me.dataController.search = val;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#config = GSItem.proxify(me, GSTableElement.CELLS);\r\n    if (me.columns.length === 0) me.columns = me.#config.map(v => v.name);\r\n    /* TODO - auto storage prevents using plain table with \r\n       columns, data properties programmatically\r\n    if (!me.storage) {      \r\n      me.storage = me.#auto = GSID.next('table-');\r\n    }\r\n    */\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.dataController?.clearSelected(this.data);\r\n    this.data = [];\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'user-select-none': me.protected,\r\n      'table': true,\r\n      'table-sm': me.small,\r\n      'table-hover': me.hover,\r\n      'table-striped': me.striped,\r\n      'table-bordered': me.grid,\r\n      'table-borderless': me.borderless,\r\n      'table-striped-columns': me.stripedColumns,\r\n      [`table-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.dataController?.read();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (me.columns.length != me.sort.length) me.sort = Array(me.columns.length).fill(0);\r\n    if (me.datacolumn && me.data.length > 0) {\r\n      me.columns = me.data[0];\r\n      me.data = me.data.slice(1);\r\n    }\r\n    if (changed.has('multiselect') && !me.multiselect) me.dataController?.clearSelected();\r\n    if (changed.has('selectable') && !me.selectable) me.dataController?.clearSelected();\r\n    if (changed.has('sortable') || changed.has('multisort')) {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [];\r\n    }\r\n\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const headColor = me.colorHead ? `table-${me.colorHead}` : '';\r\n    return html`\r\n      <table  \r\n       dir=\"${ifDefined(me.direction)}\"\r\n       @keyup=\"${me.#onKeyUp}\"\r\n       @keydown=\"${me.#onKeyDown}\"\r\n       class=\"${classMap(me.renderClass())}\">\r\n        <thead class=\"${ifDefined(headColor)}\">\r\n          ${me.#renderFilters()}\r\n          <tr @click=${me.#onSort}>\r\n            ${me.columns.map((entry, index) => me.#renderColumn(entry, index))}\r\n          </tr>\r\n        </thead>\r\n        <tbody @click=${me.#onSelect} @contextmenu=${me.#onSelect} class=\"${me.divider ? 'table-group-divider' : ''}\" role=\"button\">\r\n          ${me.data.map((entry, index) => me.#renderRecord(entry, index))}\r\n          ${me.#renderEmpty()}\r\n        </tbody>\r\n      </table>\r\n      <slot name=\"extra\">${me.#renderHandler()}</slot>\r\n    `;\r\n  }\r\n\r\n  #renderHandler() {\r\n    const me = this;\r\n    return me.#auto ? html`<gs-data-handler type=\"cached\" mode=\"\" id=${me.#auto} generated></gs-data-handler>` : '';\r\n  }\r\n\r\n  onDataRead(data) {\r\n    const me = this;\r\n    me.data = data;\r\n    //me.dataController?.clearSelected();\r\n\r\n    // update filtering\r\n    if (data.length > 0 && me.#hasFilters) {\r\n      me.#config.forEach((entry, index) => {\r\n        entry.columnType = me.#columType(index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear table filters\r\n   */\r\n  clear() {\r\n    this.#input.forEach(el => el.value = '');\r\n    this.dataController?.filter([]);\r\n  }\r\n\r\n  valueAt(row, cell) {\r\n    return this.data.length > row ? this.data[row][cell] : undefined;\r\n  }\r\n\r\n  get #input() {\r\n    return this.queryAll('th > input, th > select', true);\r\n  }\r\n\r\n  get #hasFilters() {\r\n    return this.#config.filter(o => o.filter).length > 0;\r\n  }\r\n\r\n  #columType(index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const cell = me.valueAt(0, me.columns[index]);\r\n    cfg.type = cfg.type || 'text';\r\n    const cfgType = { 'string': 'text', 'currency': 'number', 'timestamp': 'datetime-local' }[cfg.type]\r\n    const dataType = cell instanceof Date ? 'date' : typeof cell;\r\n    return cell ? dataType : cfgType || cfg.type;\r\n  }\r\n\r\n  #renderFilters() {\r\n    const me = this;\r\n    return me.#hasFilters ? html`<tr>${me.columns.map((entry, index) => me.#renderFilter(entry, index))}</tr>` : '';\r\n  }\r\n\r\n  #renderFilter(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (!cfg?.filter) return html`<th></th>`;\r\n\r\n    let mask = undefined;\r\n    const hasSub = cfg.childElementCount > 0;\r\n    const isDate = cfg.columnType === 'date';\r\n    if (isDate) mask = cfg.format || GSUtil.getDateFormat(cfg.language || GSUtil.language);\r\n    const css = `${GSUtil.normalize(me.cssFilter)} ${GSUtil.normalize(cell.cssFilter)}`; \r\n    const color = `text-bg-${GSUtil.normalize(cell.color || me.colorFilter)}`; \r\n    \r\n\r\n    if ((hasSub || cfg.list) && cfg.fixed) {\r\n      return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n          <select is=\"gs-ext-select\" .index=${index}\r\n              class=\"form-select ${css} ${color}\" \r\n              name=\"${cell}\"\r\n              storage=\"${ifDefined(cfg.list ? me.storage : null)}\"\r\n              key=\"${ifDefined(cfg.list ? cfg.name : null)}\"> \r\n              ${me.#renderOption(cfg)}\r\n              </select>\r\n          </th>`;\r\n    }\r\n\r\n    let listid = '';\r\n    let list = undefined;\r\n    if (hasSub || cfg.list) {\r\n      listid = `${me.id}-list-${index}`;\r\n      list = html`<datalist id=\"${listid}\" is=\"gs-ext-datalist\"\r\n              storage=\"${ifDefined(cfg.list ? me.storage : null)}\"\r\n              key=\"${ifDefined(cfg.list ? cfg.name : null)}\"> \r\n              ${me.#renderOption(cfg)}</datalist>`;\r\n    } \r\n\r\n    return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n    <input is=\"gs-ext-input\" .index=${index}\r\n      class=\"form-control ${css} ${color}\" \r\n      mask=\"${ifDefined(mask)}\"\r\n      list=\"${ifDefined(listid)}\"\r\n      name=\"${cell}\" \r\n      placeholder=\"${ifDefined(cfg.title)}\" \r\n      type=\"${cfg.filterType || cfg.columnType}\"\r\n      data-slots=\"${ifDefined(isDate ? 'DMY' : undefined)}\"/>\r\n    ${list}\r\n    </th>`;\r\n  }\r\n\r\n  #renderOption(cfg) {\r\n    if (cfg.childElementCount == 0) return '';\r\n    const sub = GSItem.proxify(cfg);\r\n    return sub.map(el => html`<option value=\"${el.value}\">${cfg.fixed ? el.map : ''}</option>`);\r\n  }\r\n\r\n  #renderColumn(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    const css = `${GSUtil.normalize(me.cssHeader)} ${GSUtil.normalize(cell.cssHeader)}`; \r\n    return html`\r\n      <th .index=${index} class=\"${css}\" \r\n        colspan=\"${ifDefined(cfg?.colspan)}\"\r\n        width=\"${ifDefined(cfg?.width)}\">\r\n        <div class=\"d-flex justify-content-between\"> \r\n          <span>${cfg?.title || cell}</span>\r\n          ${me.#renderIcon(index)}\r\n        </div>\r\n      </th>\r\n    `\r\n  }\r\n\r\n  #renderIcon(index) {\r\n    const me = this;\r\n    if (!me.sortable) return '';\r\n    const icons = GSTableElement.#icons;\r\n    const sortType = me.sort[index];\r\n    const order = me.multisort ? me.#sortOrder.indexOf(index) + 1 : '';\r\n    return html`<gs-icon name=\"${icons[sortType + 1]}\" super=\"${order > 0 ? order : ''}\" color=\"${ifDefined(me.colorSort)}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderRecord(entry, index) {\r\n    const me = this;\r\n    const selected = me.dataController?.isSelected(entry);\r\n    const color = me.colorSelect && selected ? `table-${me.colorSelect}` : '';\r\n    const cells = me.#remapRecord(entry);\r\n    return html`\r\n        <tr .index=${index} class=\"${color}\" tabindex=\"0\" ?selected=${selected}>\r\n          ${cells.map((cell, i) => me.#renderCell(cell, i))}\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  #renderCell(cell, index) {\r\n    const cfg = this.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    return html`<td class=\"text-${cfg?.align}\" colspan=\"${ifDefined(cfg?.colspan)}\" ><span>${cell}</span></td>`;\r\n  }\r\n\r\n  #remapRecord(record) {\r\n    const me = this;\r\n    if (!Array.isArray(record)) record = me.columns.map(v => record[v]);\r\n    return record.map((val, i) => me.#config[i] ? GSData.format(me.#config[i], val) : val);\r\n  }\r\n\r\n  #renderEmpty() {\r\n    const me = this;\r\n    return me.data.length > 0 ?  '' :\r\n    html`<tr data-ignore=\"true\"><td colspan=\"${me.columns.length}\" class=\"text-center fw-bold text-muted\">${me.translate('No Data')}</td></tr>`;\r\n  }\r\n\r\n  #elementTofilter(el) {\r\n    if (!el.value) return undefined;\r\n    const isDate = el.type === 'date';\r\n    const val = isDate ? el.valueAsDate : el.value;\r\n    const cfg = this.#config[el.index];\r\n    return { name: el.name, value: val, language : cfg?.language };\r\n  }\r\n\r\n  #onFilter(e) {\r\n    \r\n    const me = this;\r\n    \r\n    const filter = me.#input\r\n      .map(el => me.#elementTofilter(el))\r\n      .filter(el => el?.value);\r\n\r\n    if (me.storage) {\r\n      me.dataController?.filter(filter);\r\n    } else {\r\n      // TODO keep full data, use sorted\r\n      // GSData.filter(me.data, filter);\r\n    }\r\n  }  \r\n\r\n  #onSort(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.sortable) return;\r\n    \r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const column = e.target.closest('th');\r\n    if (!icon || !column) return;\r\n\r\n    const idx = column.index !== undefined ? column.index : GSDOM.getElementIndex(column);\r\n    const current = me.sort[idx];\r\n    const sortType = current === 1 ? -1 : current + 1;\r\n\r\n    if (me.multisort) {\r\n      if (sortType == 0) {\r\n        me.#sortOrder = me.#sortOrder.filter(v => v != idx);\r\n      } else if (!me.#sortOrder.includes(idx)) {\r\n        me.#sortOrder.push(idx);\r\n      }\r\n    } else {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [idx];\r\n    }\r\n\r\n    me.sort[idx] = sortType;\r\n\r\n    const sort = me.#prepareSorter(me.sort, me.#sortOrder);\r\n\r\n    if (me.storage) {\r\n      me.dataController?.sort(sort);\r\n    } else {\r\n      me.data = GSData.sortData(me.data, sort);\r\n    }\r\n\r\n    me.emit('sort');\r\n  }\r\n\r\n  #prepareSorter(sort, sortOrder) {\r\n    \r\n    const me = this;\r\n\r\n    if (sort.filter(v => v).length === 0) {\r\n      sort = Array(me.columns.length).fill(0);\r\n      sort[me.key] = 1;\r\n    }\r\n\r\n    // if data record is object (not simple array)\r\n    const isComplex = me.data[0] && !Array.isArray(me.data[0]);\r\n\r\n    // sort list \r\n    const list = sort.map((v, i) => v ? { name: isComplex ? me.columns[i] : undefined, col: i, ord: v, idx: sortOrder.indexOf(i) } : null).filter(v => v);\r\n\r\n    // order sort list by idx\r\n    sort = GSData.sortData(list, [{ name: 'idx', ord: 1 }]);\r\n\r\n    return sort;\r\n  }\r\n\r\n  #onSelect(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.selectable) return;\r\n    \r\n    const tr = e.target.tagName === 'TR' ? e.target : e.target.closest('tr');\r\n    if (!tr) return;\r\n    \r\n    // if context menu is attached and right click made\r\n    if (e.button === 2 && !me.query('gs-context')) return;\r\n    \r\n    const controller = me.dataController;\r\n    if (!controller) return;\r\n\r\n    const record = me.data[tr.index];\r\n    const isSelected = controller.isSelected(record);\r\n    if (me.multiselect) {\r\n      if (isSelected) {\r\n        controller.removeSelected(record);\r\n      } else {\r\n        controller.addSelected(record);\r\n      }\r\n    } else if (me.toggle) {\r\n      if (isSelected) {\r\n        controller.clearSelected(me.data);\r\n      } else {\r\n        controller.addSelected(record);\r\n      }\r\n    } else {\r\n      controller.clearSelected(me.data);\r\n      controller.addSelected(record);\r\n    }\r\n    me.emit('select');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    if (!e.target.matches('tbody tr')) return;\r\n    let el = null;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        el = e.target.previousElementSibling;\r\n        break;\r\n      case 'ArrowDown':\r\n        el = e.target.nextElementSibling;\r\n        break;\r\n    }\r\n\r\n    if (el) {\r\n      el.focus();\r\n      this.emit('focus', el);\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') this.#onSelect(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-table');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport { createRef, ref, classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { stringArrayConverter, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSTagElement}\r\n */\r\nexport default class GSTagElement extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static styles = css`\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n\r\n    static properties = {\r\n        placeholder: {},\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        name: {},\r\n        data: { type: Array },\r\n        values: { type: Array, reflect: true, converter: stringArrayConverter },\r\n        appendable: { type: Boolean },\r\n        color: { ...color },\r\n        closeColor: { ...color, attribute: 'close-color' },\r\n        cssClose: { attribute: 'css-close' },\r\n        cssTag: { attribute: 'css-tag' },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {}\r\n    }\r\n\r\n    #dataListRef = createRef();\r\n    #inputRef = createRef();\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = '';\r\n        this.data = this.#items;\r\n        this.closeColor = 'light';\r\n        this.color = 'primary';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const tags = me.#renderTags();\r\n        return html`\r\n        <div  dir=\"${ifDefined(me.direction)}\" \r\n            class=\"${classMap(me.renderClass())}\"\r\n            @click=\"${me.#onClick.bind(me)}\">\r\n            ${tags}\r\n            <input type=\"text\" \r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            ${ref(me.#inputRef)}\r\n            name=\"${me.name}\" \r\n            list=\"${me.name}_list\"\r\n            class=\"form-control d-flex w-auto flex-grow-1\" \r\n            placeholder=\"${me.#info}\">\r\n            <datalist ${ref(me.#dataListRef)} id=\"${me.name}_list\">${me.#renderList()}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"d-flex\": true,\r\n            \"flex-wrap\": true,\r\n            \"align-items-center\": true,\r\n            \"gap-1 \": true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    get #info() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return me.placeholder ? me.placeholder : alt;\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTagElement.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.data.length >= me.max;\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax || (!optEl && me.appendable == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (!me.values.includes(fld.value)) {\r\n            me.values.push(fld.value);\r\n            fld.value = '';\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const value = tagEl.dataset.value;\r\n        me.values = me.values.filter(v => v != value);\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v));\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        const size = me.size > 0 ? `fs-${me.size}` : '';\r\n        return html`<div class=\"${classMap(me.#tagClass)}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"${classMap(me.#btnClass)}\"></button></div>`;\r\n    }\r\n\r\n    get #tagClass() {\r\n        const me = this;\r\n        const opt = {\r\n            badge: true,\r\n            tag: true,\r\n            [`fs-${me.size}`]: me.size > 0,\r\n            [`text-bg-${me.color}`]: me.color ? true : false\r\n        }\r\n        return me.mapCSS(me.cssTag, opt);\r\n    }\r\n\r\n    get #btnClass() {\r\n        const me = this;\r\n        const opt = {\r\n            'btn-close': true,\r\n            'ms-1': true,\r\n            [`text-bg-${me.closeColor}`]: me.closeColor ? true : false\r\n        }\r\n        return me.mapCSS(me.cssClose, opt);\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        return me.data.map(v => html`<option value=\"${v}\">`);\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el));\r\n    }\r\n\r\n    get #items() {\r\n        return this.#proxify(this).map(el => el.name).filter(v => v ? true : false);\r\n    }\r\n\r\n    get #input() {\r\n        return this.#inputRef.value;\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.#dataListRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-tag');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSTextElement extends GSElement {\r\n\r\n  #text = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.#text = this.innerText;\r\n    this.innerText = \"\";\r\n  }\r\n\r\n  renderUI() {\r\n    return this.translate(this.#text);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-text');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSTooltipElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    title: {},\r\n    target: {},\r\n    opened: { type: Boolean },\r\n    local: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowStyle = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.placement = 'top';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowStyle);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      role=\"tooltip\"\r\n      data-popper-placement=\"${me.placement}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      <div ${ref(me.#arrowRef)} \r\n          class=\"tooltip-arrow ${me.#arrowStyle}\" \r\n          data-gs-class=\"${me.#arrowStyle}\">\r\n      </div>\r\n      <div class=\"tooltip-inner\">${me.translate(me.title)}</div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tooltip': true,\r\n      'bs-tooltip-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  #attachEvents() {\r\n    const me = this;\r\n    me.attachEvent(me.#ref, 'mouseenter', me.open.bind(me));\r\n    me.attachEvent(me.#ref, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const arrowEl = me.#arrow;\r\n    const panelEl = me.#panel;\r\n    if (!panelEl) return;\r\n    if (me.opened) {\r\n      GSPopper.popupFixed(me.placement, panelEl, me.#ref, arrowEl);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, { top: '-1000px', left: '-1000px' });\r\n    }\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return me.local ? me.#refLocal : me.#refGlobal;\r\n    }\r\n  }\r\n\r\n  get #refLocal() {\r\n    const root = GSDOM.root(this);\r\n    return GSDOM.query(root, this.target);\r\n  }\r\n  \r\n  get #refGlobal() {\r\n    return GSDOM.query(document.body, this.target);\r\n  }\r\n\r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-tooltip');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty } from '../properties/index.mjs';\r\n\r\nexport class GSTemplateElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { reflect: true, hasChanged: notEmpty }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    const me = this;\r\n    if (me.flat) {\r\n      me.renderOptions.renderBefore = me;\r\n      return me.parentElement;\r\n    }\r\n    return super.createRenderRoot();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${this.renderTemplate()}`;\r\n  }\r\n\r\n\ttemplateInjected() {\r\n\t\tthis.emit('template-injected', null, true, true);\r\n\t}\r\n\r\n  static {\r\n    this.define('gs-template');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle automatic field value copy and select\r\n */\r\nexport class CopySelectController {\r\n\r\n  #host;\r\n\r\n  #clickCallback;\r\n  #copyCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#clickCallback = me.#onClick.bind(me);\r\n    me.#copyCallback = me.#onCopy.bind(me);\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on?.('click', me.#clickCallback);\r\n    me.#host.on?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host.off?.('click', me.#clickCallback);\r\n    me.#host.off?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  #onCopy() {\r\n    GSUtil.writeToClipboard(this.#host.value);\r\n  }\r\n\r\n  #onClick(e) {\r\n      const me = this;\r\n      if (me.#host.autocopy) GSUtil.writeToClipboard(me.#host.value);\r\n      if (me.#host.autoselect) me.#host.select();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Handle field mask \r\n */\r\nexport class MaskController {\r\n\r\n  static #special = '.^$*+?()[]{}\\|';\r\n\r\n  static #maskType = {\r\n    x: /[0-9a-fA-F]/g,\r\n    n: /[0-9]/g,\r\n    y: /[0-9]/g,\r\n    m: /[0-9]/g,\r\n    d: /[0-9]/g,\r\n    h: /[0-9]/g,\r\n    s: /[0-9]/g,\r\n    '.': /[0-9]/g,\r\n    '#': /[a-zA-Z]/g,\r\n    '*': /[0-9a-zA-Z]/g,\r\n    '_': /./g\r\n  };\r\n\r\n  #back = false;\r\n  #slots;\r\n  #prev;\r\n  #first;\r\n  #accept;\r\n  #pattern;\r\n\r\n  #host;\r\n\r\n  #keyDownCallback;\r\n  #inputCallback;\r\n  #focusCallback;\r\n  #changeCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.initRules();\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    me.#inputCallback = me.#format.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    me.#changeCallback = me.#onChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.initRules();\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n    me.#host.on('input', me.#inputCallback);\r\n    me.#host.on('focus', me.#focusCallback);\r\n    me.#host.on('change', me.#changeCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n    me.#host.off('input', me.#inputCallback);\r\n    me.#host.off('focus', me.#focusCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n  }\r\n\r\n  initRules() {\r\n    const me = this;\r\n    if (!me.pattern) return;\r\n    me.#slots = me.#buildSlots();\r\n    me.#prev = (j => Array.from(me.pattern, (c, i) => me.#slots.has(c) ? j = i + 1 : j))(0);\r\n    me.#first = [...me.pattern].findIndex(c => me.#slots.has(c));\r\n    me.#accept = me.#buildAccept();\r\n    me.#toPattern();\r\n  }\r\n\r\n  checkValidity() {  \r\n    const me = this;  \r\n    let isMatch = true;\r\n    if (me.isValid) {\r\n      isMatch = me.isEmpty || me.isMatch;\r\n      if (!isMatch) me.setCustomValidity('Mask not matched!');\r\n    }\r\n    return me.isValid && isMatch;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n    \r\n  setSelectionRange(i, j) {\r\n    this.#host.setSelectionRange(i, j);\r\n  }\r\n\r\n  select() {\r\n    this.#host.select();\r\n  }\r\n\r\n  get isEmpty() {\r\n    return GSUtil.isStringEmpty(this.raw);\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    const [i, j] = this.#range();\r\n    return this.raw.substring(0, j);\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get pattern() {\r\n    return this.#host.mask;\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get selectionStart() {\r\n    return this.#host.selectionStart;\r\n  }\r\n\r\n  get selectionEnd() {\r\n    return this.#host.selectionEnd;\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.#host.autoselect;\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n\r\n    let isMatch = true;\r\n    if (me.#pattern) {\r\n      me.#pattern.lastIndex = 0;\r\n      isMatch = me.#pattern.test(me.raw);\r\n    }\r\n\r\n    return isMatch;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    this.#back = e.key === \"Backspace\";\r\n  }\r\n\r\n  #onFocus(e) {\r\n    const me = this;\r\n    me.#format();\r\n    if (me.autoselect) me.select();\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.#format();\r\n  }\r\n\r\n  /**\r\n   * If data-slots not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildSlots() {\r\n    const me = this;\r\n    let slots = me.dataset.slots;\r\n    if (!slots) {\r\n      const maskType = MaskController.#maskType;\r\n      slots = [...new Set(me.pattern)]\r\n        .filter(v => maskType[v.toLowerCase()])\r\n        .join('');\r\n    }\r\n    return new Set(slots || \"_\");\r\n  }\r\n\r\n  /**\r\n   * If data-accept not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildAccept() {\r\n    const me = this;\r\n    let accept = me.dataset.accept;\r\n    if (!accept) {\r\n      const maskType = MaskController.#maskType;\r\n      accept = [...new Set(me.pattern)]\r\n        .map(v => maskType[v.toLowerCase()])\r\n        .filter(v => v);\r\n      if (accept.length > 0) {\r\n        const tmp = {};\r\n        accept.forEach(v => tmp[v.src] = v);\r\n        accept = Object.values(tmp);\r\n        return accept.length === 1 ? accept.pop() : accept;\r\n      }\r\n\r\n    }\r\n    return new RegExp(accept || \"\\\\d\", \"g\");\r\n  }\r\n\r\n  #range() {\r\n    const me = this;\r\n    const value = me.raw;\r\n    return [me.selectionStart, me.selectionEnd].map(i => {\r\n      i = me.#clean(value.slice(0, i)).findIndex(c => me.#slots.has(c));\r\n      return i < 0 ? me.#prev[me.#prev.length - 1] : me.#back ? me.#prev[i - 1] || me.#first : i;\r\n    });\r\n  }\r\n\r\n  #format() {\r\n    const me = this;\r\n    const [i, j] = me.#range();\r\n    const val = me.#clean(me.#host.raw);\r\n    me.value = val.join``;\r\n    me.setSelectionRange(i, j);\r\n    me.#back = false;\r\n  }\r\n\r\n  #clean(input) {\r\n    const me = this;\r\n    input = input.match(me.#accept) || [];\r\n    return Array.from(me.pattern, (c, i) => input[i] === c || me.#slots.has(c) ? input.shift() || c : c);\r\n  }\r\n\r\n  #toPattern() {\r\n\r\n    const me = this;\r\n\r\n    if (me.pattern.length === 0) return;\r\n\r\n    const chars = me.pattern.split('');\r\n    const masks = ['^'];\r\n\r\n    const maskType = MaskController.#maskType;\r\n    const special = MaskController.#special;\r\n\r\n    let cnt = 0;\r\n    chars.forEach((v, i) => {\r\n      const m = me.#slots.has(v) ? maskType[v.toLowerCase()] : null;\r\n      if (!m) {\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        cnt = 0;\r\n        if (special.includes(v)) masks.push('\\\\');\r\n        return masks.push(v);\r\n      }\r\n\r\n      chars[i] = new RegExp(m, 'g');\r\n\r\n      if (masks.length === 0) return masks.push(m.source);\r\n\r\n      if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n      if (cnt > 0) masks.push(`{${++cnt}}`);\r\n      cnt = 0;\r\n      masks.push(m.source);\r\n    });\r\n\r\n    if (cnt > 0) masks.push(`{${++cnt}}`);\r\n    masks.push('$');\r\n\r\n    me.#pattern = new RegExp(masks.join(''), 'g');\r\n    // me.#max = me.pattern.length;\r\n    // me.#masks = chars;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle multiple patterns\r\n */\r\nexport class MultipatternController {\r\n\r\n  #host;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n  \r\n  checkValidity() {    \r\n    const me = this;  \r\n    let isMatch = true;\r\n    if (me.isValid) {\r\n      isMatch = me.isEmpty || me.isMatch;\r\n      if (!isMatch) me.setCustomValidity('Pattern not matched!');\r\n    }\r\n    return me.isValid && isMatch;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get patterns() {\r\n    const obj = this.#host.multipattern;\r\n    if (obj instanceof RegExp) return [obj];\r\n    if (Array.isArray(obj)) return obj.filter(o => o instanceof RegExp);\r\n    throw new Error('Invalid multipattern value. Expected RegExp object or array.');\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n    let isMatch = true;\r\n    for (const r of me.patterns) {\r\n      isMatch = r.test(me?.value);\r\n      if (isMatch) break;\r\n    }\r\n   \r\n    return isMatch;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type number to support max length entry\r\n */\r\nexport class NumberController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get maxLength() {\r\n    return GSUtil.asNum(this.#host.maxLength, 0);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n    \r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'number') return me.#onNumberInput(e);\r\n  }\r\n\r\n  #onNumberInput(e) {\r\n    const me = this;\r\n    if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n        me.value = me.value.substring(0, me.maxLength);\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle for input tpye password to support keyboard shortcut for password reveal.\r\n */\r\nexport class PasswordController {\r\n\r\n  #host;\r\n\r\n  #revealing = false;\r\n\r\n  #keyUpCallback;\r\n  #keyDownCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyUpCallback = me.#onKeyUp.bind(me);\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('keyup', me.#keyUpCallback);\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keyup', me.#keyUpCallback);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  get reveal() {\r\n    return this.#host.hasAttribute('reveal');\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  set type(val) {\r\n    if (this.#host) this.#host.type = val;\r\n  }\r\n\r\n  #isReveal(e) {\r\n    return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    const me = this;\r\n    if (e.key === 'Shift' && me.#revealing) {\r\n      me.type = 'password';\r\n    }\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (me.#isReveal(e)) {\r\n      me.#revealing = true;\r\n      me.type = 'text';\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCSSMap } from \"../../../base/GSCSSMap.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type text to support text value changes based on CSS\r\n */\r\nexport class TextController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'text') me.value = me.#updateText(me.value);\r\n  }\r\n\r\n  #updateText(value = '') {\r\n    const map = GSCSSMap.styleValue(this.#host, 'text-transform');\r\n    if (map) value = GSUtil.textTransform(map.value, value);\r\n    return value;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Handle data filtering for options atribute (combo and data lists)\r\n * Changes in one field list, update available selections in another field selections.\r\n */\r\nexport class InteractiveController {\r\n\r\n  #host;\r\n\r\n  #monitorCallback;\r\n  #changeCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#monitorCallback = me.#onMonitor.bind(me);\r\n    me.#changeCallback = me.#onDataChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (list) {\r\n      me.#host.on('blur', me.#blurCallback);\r\n      me.#host.on('change', me.#changeCallback);\r\n      me.#host.attachEvent(me.filter, 'change', me.#monitorCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('blur', me.#blurCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n    me.#host.removeEvent(me.filter, 'change', me.#monitorCallback);\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n      this.#onDataChange();\r\n    }\r\n  }\r\n\r\n  get component() {\r\n    return this.#host\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get list() {\r\n    return this.#host;\r\n  }\r\n\r\n  get filter() {\r\n    const me = this;\r\n    const filter = GSAttr.get(me.#host, 'data-filter');\r\n    return GSDOM.getByID(me.owner, filter);\r\n  }\r\n\r\n  get owner() {\r\n    //return this.#host.owner;\r\n    return this.#host.form || GSDOM.closest(this.#host, 'form');\r\n  }\r\n\r\n  get formElements() {\r\n    return GSDOM.formElements(this.owner, true);\r\n  }\r\n\r\n  get strict() {\r\n    return GSAttr.get(this.#host, 'strict', '');\r\n  }\r\n\r\n  #onBlur(e) {\r\n    if (!this.#isInList()) GSEvents.send(this.#host, 'strict', { ok: false, source: e });\r\n  }\r\n\r\n  #onDataChange(e) {\r\n    const me = this;\r\n    const own = me.owner;\r\n    let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n    let clean = false;\r\n    if (!opt) {\r\n        opt = me.list?.querySelector('option');\r\n        clean = true;\r\n    }\r\n\r\n    const obj = opt?.dataset || {};\r\n    Object.entries(obj).forEach(p => {\r\n        const val = clean ? '' : p[1];\r\n        const key = p[0];\r\n        GSAttr.set(me.#host, `data-${key}`, p[1]);\r\n        if (key === 'id' || key === 'group') return;\r\n\r\n        const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n        const els = Array.from(GSDOM.queryAll(own, filter));\r\n        els.filter(el => el.tagName !== 'OPTION')\r\n            .filter(el => el !== me.#host)\r\n            .filter(el => el !== me.filter)            \r\n            .filter(el => GSAttr.get(el, 'list').length === 0)\r\n            .forEach(el => me.#togleEl(el, key, val))\r\n    });\r\n  }\r\n\r\n  #onMonitor(e) {\r\n    const me = this;\r\n    const list = me.list;\r\n    me.value = '';\r\n    me.#host.disabled = false;\r\n    const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n    const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n    GSDOM.queryAll(list, 'option').forEach(el => me.#togleOption(el, true));\r\n    GSDOM.queryAll(list, filter).forEach(el => me.#togleOption(el, false));\r\n\r\n  }\r\n\r\n  #togleOption(el, value) {\r\n      GSAttr.toggle(el, 'disabled', value);\r\n      GSDOM.toggleClass(el, 'd-none', value);\r\n  }\r\n\r\n  #togleEl(el, key = '', value = '') {\r\n\r\n    const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n    const isMatch = value.length > 0 && data.includes(value);\r\n    const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n\r\n    if (frmel) {\r\n      GSAttr.toggle(el, 'disabled', !isMatch);\r\n    } else {\r\n      isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n    }\r\n\r\n    this.formElements.forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n  }\r\n\r\n  #isInList() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (!list) return true;\r\n    if (!me.strict) return true;\r\n    if (!list.querySelector('option')) return true;\r\n    const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n    return opt != null;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { InteractiveController } from \"./InteractiveController.mjs\";\r\n\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update available selections in another field selections.\r\n */\r\nexport class ComboController extends InteractiveController {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n  }\r\n\r\n  get list() {\r\n    return this.component;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { InteractiveController } from \"./InteractiveController.mjs\";\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update available selections in another field selections.\r\n */\r\nexport class ListController extends InteractiveController {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n  }\r\n\r\n  get list() {\r\n    const me = this;\r\n    if (me.component.list) return me.component.list;\r\n    const list = GSAttr.get(me.component, 'list');\r\n    return GSDOM.getByID(me.owner, list);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSBeep } from \"../../../base/GSBeep.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Handle for input/testarea to support validity checkups\r\n */\r\nexport class ValidityController {\r\n\r\n  #host;\r\n\r\n  #invalidCallback;\r\n  #blurCallback;\r\n  #changeCallback;\r\n  #focusCallback;\r\n  #inputCallback;\r\n\r\n  #processing;  \r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#processing = false;\r\n    me.#host = host;\r\n    me.#invalidCallback = me.#onInvalid.bind(me);\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#changeCallback = me.#onChange.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on?.('invalid', me.#invalidCallback);\r\n    me.#host.on?.('blur', me.#blurCallback);\r\n    me.#host.on?.('focus', me.#focusCallback);\r\n    me.#host.on?.('change', me.#changeCallback);\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host.off?.('invalid', me.#invalidCallback);\r\n    me.#host.off?.('blur', me.#blurCallback);\r\n    me.#host.off?.('focus', me.#focusCallback);\r\n    me.#host.off?.('change', me.#changeCallback);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  reset() {\r\n    this.setCustomValidity('');\r\n    this.#togglUI(this.isValid);\r\n  }\r\n\r\n  async report() {    \r\n    const me = this;\r\n    if (me.#processing) return;\r\n    me.#processing = true;\r\n    me.reportValidity();\r\n    if (me.isVisible) {\r\n      if (me.block) me.focus();\r\n      if (me.beep && me.isTyped) await me.#beep();\r\n    }\r\n    await GSUtil.timeout(me.timeout);\r\n    me.setCustomValidity(me.isValid ? '' : ' ');\r\n    me.#togglUI(me.isValid);\r\n    me.#processing = false;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.#host.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.#host.reportValidity();\r\n  }\r\n\r\n  focus() {\r\n    return this.#host.focus();\r\n  }\r\n  \r\n  get isTyped() {\r\n    return GSUtil.asBool(this.#host.dataset.typed);\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  get beep() {\r\n    return this.#host.beep;\r\n  }\r\n\r\n  get block() {\r\n    return this.#host.block;\r\n  }\r\n\r\n  get timeout() {\r\n    return this.#host.timeout;\r\n  }\r\n\r\n  get isVisible() {\r\n    return GSDOM.isVisible(this.#host);\r\n  }\r\n\r\n  #onInput(e) {\r\n    this.#host.dataset.typed = true;\r\n    this.#processing = false;\r\n  }\r\n\r\n  #onFocus(e) {\r\n    this.#togglUI(this.isValid);\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    this.report();\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if(me.checkValidity()) {\r\n      me.reset();\r\n    }\r\n  }\r\n\r\n  #onBlur(e) {\r\n    const me = this;\r\n    if (me.isValid) {\r\n      me.reset();\r\n    } else {\r\n      me.checkValidity();\r\n    }\r\n  }\r\n\r\n  #togglUI(isValid) {\r\n    GSDOM.toggleClass(this.#host, 'is-invalid', !isValid);\r\n  }\r\n\r\n  #beep() {\r\n    return GSBeep.beep(100, 1200, 150, 'triangle');\r\n  }\r\n\r\n}  ","\r\nimport { notEqual, defaultConverter } from '../../lib.mjs';\r\n\r\n\r\nconst defaultPropertyDeclaration = {\r\n    attribute: true,\r\n    reflect: false,\r\n    type: String,\r\n    converter: defaultConverter,\r\n    hasChanged: notEqual,\r\n}\r\n\r\nconst attributeToPropertyMap = Symbol();\r\nconst prepare = Symbol();\r\nconst elementProperties = Symbol();\r\nconst finalize = Symbol();\r\nconst finalized = Symbol();\r\n\r\nconst prepareFn = function () {\r\n    const me = this;\r\n    if (Object.getOwnPropertySymbols(me).includes(elementProperties)) return;\r\n    const superCtor = Object.getPrototypeOf(me);\r\n    if (typeof superCtor[finalize] === 'function') superCtor[finalize]();\r\n    me[elementProperties] = new Map(superCtor[elementProperties]);\r\n}\r\n\r\nconst attributeNameForProperty = (name, options) => {\r\n    const attribute = options.attribute;\r\n    return attribute === false\r\n        ? undefined\r\n        : typeof attribute === 'string'\r\n            ? attribute\r\n            : typeof name === 'string'\r\n                ? name.toLowerCase()\r\n                : undefined;\r\n}\r\n\r\n/**\r\n * Reactivity for HTMLInputElement based on Google ltd. Lit ReactiveElement\r\n */\r\nexport class ReactiveInput extends HTMLInputElement {\r\n\r\n    // user defiend \r\n    static properties = {};\r\n    \r\n    static [finalized] = false;\r\n\r\n    #reflectingProperties = undefined;\r\n    #instanceProperties = undefined;\r\n\r\n    #controllers = undefined;\r\n    #updatePromise = undefined;\r\n    #changedProperties = undefined;\r\n    #reflectingProperty = undefined;\r\n\r\n    #hasUpdated = false;\r\n    #isUpdatePending = false;\r\n\r\n    #isConnected = false;\r\n\r\n    /**\r\n     * Returns a list of attributes corresponding to the registered properties.\r\n    */\r\n    static get observedAttributes() {\r\n        Object.defineProperty(ReactiveInput.__proto__, prepare, { value: prepareFn });\r\n        const me = this;\r\n        me[finalize]();\r\n        return me[attributeToPropertyMap] && [...me[attributeToPropertyMap].keys()];\r\n    }\r\n\r\n    static addInitializer(initializer) {\r\n        const me = this;\r\n        me[prepare]();\r\n        me.initializers ??= [].push(initializer);\r\n    }\r\n\r\n    static [finalize]() {\r\n        const me = this;\r\n        //if (Object.hasOwn(me, 'finalized')) return;\r\n        if (me[finalized] === true) return;\r\n        me[finalized] = true;\r\n        me[prepare]();\r\n\r\n        if (Object.hasOwn(me, 'properties')) {\r\n            const props = me.properties;\r\n            const propKeys = [\r\n                ...Object.getOwnPropertyNames(props),\r\n                ...Object.getOwnPropertySymbols(props),\r\n            ];\r\n            for (const p of propKeys) {\r\n                me.createProperty(p, props[p]);\r\n            }\r\n        }\r\n\r\n        // Create the attribute-to-property map\r\n        me[attributeToPropertyMap] = new Map();\r\n        for (const [p, options] of me[elementProperties]) {\r\n            const attr = attributeNameForProperty(p, options);\r\n            if (attr !== undefined) {\r\n                me[attributeToPropertyMap].set(attr, p);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static createProperty(name, options) {\r\n        const me = this;\r\n        if (options.state) options.attribute = false;\r\n        me[prepare]();\r\n        me[elementProperties].set(name, options);\r\n        if (!options.noAccessor) {\r\n            const key = Symbol();\r\n            const descriptor = me.getPropertyDescriptor(name, key, options);\r\n            if (descriptor !== undefined) {\r\n                Object.defineProperty(me.prototype, name, descriptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    static getPropertyDescriptor(name, key, options) {\r\n        const { get, set } = Object.getOwnPropertyDescriptor(this.prototype, name) ?? {\r\n            get() {\r\n                return this[key];\r\n            },\r\n            set(v) {\r\n                this[key] = v;\r\n            },\r\n        }\r\n        return {\r\n            get() {\r\n                return get?.call(this);\r\n            },\r\n            set(value) {\r\n                const me = this;\r\n                const oldValue = get?.call(me);\r\n                set?.call(me, value);\r\n                me.requestUpdate(name, oldValue, options);\r\n            },\r\n            configurable: true,\r\n            enumerable: true,\r\n        }\r\n    }\r\n\r\n    static getPropertyOptions(name) {\r\n        return this[elementProperties].get(name) ?? defaultPropertyDeclaration;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initialize();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.enableUpdating(true);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n        me.#isConnected = true;\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.#isConnected = false;\r\n        this.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        this.#attributeToProperty(name, newValue);\r\n    }\r\n\r\n    // ******************************\r\n    // PUBLIC GETTERS\r\n    // ******************************\r\n\r\n    get hasUpdated() { return this.#hasUpdated; }\r\n    get isUpdatePending() { return this.#isUpdatePending; }\r\n    get renderRoot() { return this; }\r\n\r\n    // ******************************\r\n    // PROTECTED FUNCTIONS \r\n    // ******************************\r\n\r\n    addController(controller) {\r\n        // if (!(controller instanceof ReactiveController)) throw new Error('Argument not instance of ReactiveController');\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.#isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    enableUpdating(requestedUpdate) { }\r\n\r\n    firstUpdated(changedProperties) { }\r\n\r\n    updated(changedProperties) { }\r\n\r\n    getUpdateComplete() { return this.#updatePromise; }\r\n\r\n    scheduleUpdate() { return this.performUpdate(); }\r\n\r\n    shouldUpdate(changedProperties) { return true; }\r\n\r\n    willUpdate(changedProperties) { }\r\n\r\n    update(changedProperties) {\r\n        const me = this;\r\n        // The forEach() expression will only run when when #reflectingProperties is\r\n        // defined, and it returns undefined, setting #reflectingProperties to undefined\r\n        me.#reflectingProperties &&= me.#reflectingProperties.forEach((p) => me.#propertyToAttribute(p, this[p]));\r\n        me.#markUpdated();\r\n    }\r\n\r\n    get updateComplete() {\r\n        return this.getUpdateComplete();\r\n    }\r\n\r\n    requestUpdate(name, oldValue, options) {\r\n        const me = this;\r\n        if (name !== undefined) {\r\n            options ??= (me.constructor).getPropertyOptions(name);\r\n            const hasChanged = options.hasChanged ?? notEqual;\r\n            const newValue = me[name];\r\n            if (hasChanged(newValue, oldValue)) {\r\n                me.#changeProperty(name, oldValue, options);\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (me.#isUpdatePending === false) {\r\n            me.#updatePromise = me.#enqueueUpdate();\r\n        }\r\n    }\r\n\r\n    performUpdate() {\r\n\r\n        const me = this;\r\n        if (!me.#isUpdatePending) return;\r\n\r\n        if (!me.#hasUpdated) {\r\n\r\n            // Mixin instance properties once, if they exist.\r\n            if (me.#instanceProperties) {\r\n                for (const [p, value] of me.#instanceProperties) {\r\n                    this[p] = value;\r\n                }\r\n                me.#instanceProperties = undefined;\r\n            }\r\n\r\n            const elementProps = me.constructor[elementProperties];\r\n            if (elementProps.size > 0) {\r\n                for (const [p, options] of elementProps) {\r\n                    if (\r\n                        options.wrapped === true &&\r\n                        !me.#changedProperties.has(p) &&\r\n                        me[p] !== undefined\r\n                    ) {\r\n                        me.#changeProperty(p, this[p], options);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let shouldUpdate = false;\r\n        const changedProperties = me.#changedProperties;\r\n        try {\r\n            shouldUpdate = me.shouldUpdate(changedProperties);\r\n            if (shouldUpdate) {\r\n                me.willUpdate(changedProperties);\r\n                me.#controllers?.forEach((c) => c.hostUpdate?.());\r\n                me.update(changedProperties);\r\n            } else {\r\n                me.#markUpdated();\r\n            }\r\n        } catch (e) {\r\n            shouldUpdate = false;\r\n            me.#markUpdated();\r\n            throw e;\r\n        }\r\n\r\n        if (shouldUpdate) {\r\n            me.#didUpdate(changedProperties);\r\n        }\r\n    }\r\n\r\n    // ******************************\r\n    // PRIVATE FUNCTIONS \r\n    // ******************************\r\n\r\n    #didUpdate(changedProperties) {\r\n        const me = this;\r\n        me.#controllers?.forEach((c) => c.hostUpdated?.());\r\n        if (!me.#hasUpdated) {\r\n            me.#hasUpdated = true;\r\n            me.firstUpdated(changedProperties);\r\n        }\r\n        me.updated(changedProperties);\r\n    }\r\n\r\n    #markUpdated() {\r\n        const me = this;\r\n        me.#changedProperties = new Map();\r\n        me.#isUpdatePending = false;\r\n    }\r\n\r\n    async #enqueueUpdate() {\r\n        const me = this;\r\n        me.#isUpdatePending = true;\r\n        try {\r\n            await me.#updatePromise;\r\n        } catch (e) {\r\n            Promise.reject(e);\r\n        }\r\n        const result = me.scheduleUpdate();\r\n\r\n        if (result != null) {\r\n            await result;\r\n        }\r\n        return !me.#isUpdatePending;\r\n    }\r\n\r\n    #changeProperty(name, oldValue, options) {\r\n        const me = this;\r\n        if (!me.#changedProperties.has(name)) {\r\n            me.#changedProperties.set(name, oldValue);\r\n        }\r\n\r\n        if (options.reflect === true && me.#reflectingProperty !== name) {\r\n            (me.#reflectingProperties ??= new Set()).add(name);\r\n        }\r\n    }\r\n\r\n    #attributeToProperty(name, value) {\r\n        const me = this;\r\n        const ctor = me.constructor;\r\n        const propName = (ctor[attributeToPropertyMap]).get(name);\r\n        if (propName !== undefined && me.#reflectingProperty !== propName) {\r\n            const options = ctor.getPropertyOptions(propName);\r\n            const converter =\r\n                typeof options.converter === 'function'\r\n                    ? { fromAttribute: options.converter }\r\n                    : options.converter?.fromAttribute !== undefined\r\n                        ? options.converter\r\n                        : defaultConverter;\r\n            // mark state reflecting\r\n            me.#reflectingProperty = propName;\r\n            me[propName] = converter?.fromAttribute(value, options.type);\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #propertyToAttribute(name, value) {\r\n        const me = this;\r\n        const elementProps = me.constructor[elementProperties];\r\n        const options = elementProps?.get(name);\r\n        const attr = attributeNameForProperty(name, options);\r\n        if (attr !== undefined && options.reflect === true) {\r\n            const converter =\r\n                (options.converter)?.toAttribute !==\r\n                    undefined\r\n                    ? (options.converter)\r\n                    : defaultConverter;\r\n            const attrValue = converter?.toAttribute(value, options.type);\r\n\r\n            me.#reflectingProperty = name;\r\n            if (attrValue == null) {\r\n                me.removeAttribute(attr);\r\n            } else {\r\n                me.setAttribute(attr, attrValue);\r\n            }\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #saveInstanceProperties() {\r\n        const me = this;\r\n        const instanceProperties = new Map();\r\n        const elementProps = me.constructor[elementProperties];\r\n        for (const p of elementProps.keys()) {\r\n            if (Object.hasOwn(me, p)) {\r\n                instanceProperties.set(p, me[p]);\r\n                delete me[p];\r\n            }\r\n        }\r\n        if (instanceProperties.size > 0) {\r\n            me.#instanceProperties = instanceProperties;\r\n        }\r\n    }\r\n\r\n    #initialize() {\r\n        const me = this;\r\n        me.#updatePromise = new Promise((res) => me.enableUpdating = res);\r\n        me.#changedProperties = new Map();\r\n        me.#saveInstanceProperties();\r\n        me.requestUpdate();\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { ComboController } from \"./controllers/ComboController.mjs\";\r\nimport { DataController } from \"../../controllers/DataController.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { GSData } from \"../../base/GSData.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    #data = [];\r\n    #isConnected = false;\r\n    #controllers = undefined;\r\n    #comboController = undefined;\r\n    #dataController = undefined;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#comboController ??= new ComboController(this);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n        this.#controllers?.forEach((c) => c.hostUpdated?.());\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        const data = me.form?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        if (me.storage) me.#dataController ??= new DataController(me);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n        me.#isConnected = true;\r\n        me.on('reset', me.#onReset);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#isConnected = false;\r\n        me.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n        GSEvents.detachListeners(me);\r\n    }\r\n        \r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.#isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity();\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get form() {\r\n        return this.closest('gs-form');\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n    reset() {\r\n        GSDOM.resetSelect(this);\r\n    }\r\n\r\n    /**\r\n     * Find closest top element by CSS selector\r\n     * @param {String} query \r\n     * @returns {HTMLElement}\r\n     */\r\n    closest(query = '') {\r\n        return GSDOM.closest(this, query);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    #onReset(e) {\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * For DataController read callback\r\n     * \r\n     * @param {Array} data \r\n     */\r\n    onDataRead(data = []) {\r\n        const me = this;\r\n        const key = me.key;\r\n        me.#data = GSData.mergeArrays(data.map(o => o[key]), me.#data.map(o => o.value))\r\n               .map(v => {return {text:v, value:v}});;    \r\n        me.apply(me.#data);\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage');\r\n    }\r\n\r\n    /**\r\n     * Storage records key to use to generate unique list\r\n     */\r\n    get key() {\r\n        return GSAttr.get(this, 'key', 0);\r\n    }    \r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSLog } from \"../../base/GSLog.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { DataController } from \"../../controllers/DataController.mjs\";\r\nimport { GSData } from \"../../base/GSData.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    #data = [];\r\n    #isConnected = false;\r\n    #controllers = undefined;\r\n    #dataController = undefined;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n        this.#controllers?.forEach((c) => c.hostUpdated?.());\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        if (me.storage) me.#dataController ??= new DataController(me);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n        me.#isConnected = true;\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#isConnected = false;\r\n        me.#controllers?.forEach((c) => c.hostDisconnected?.());        \r\n        GSEvents.detachListeners(me);\r\n    }\r\n   \r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.#isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }    \r\n        \r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        try {\r\n            const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n            this.apply(data);\r\n        } catch (error) {\r\n            console.error('Failed to load data:', error);\r\n            GSLog.error(this, error);\r\n        }\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = { value: o };\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        if (o.text) {\r\n            seg.push('>')\r\n            seg.push(o.text);\r\n            seg.push('</option>')\r\n        } else {\r\n            seg.push('>')\r\n        }\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * For DataController read callback\r\n     * \r\n     * @param {Array} data \r\n     */\r\n    onDataRead(data = []) {\r\n        const me = this;\r\n        const key = me.key;\r\n        me.#data = GSData.mergeArrays(data.map(o => o[key]), me.#data.map(o => o.value))\r\n               .map(v => {return {value:v}});        \r\n        me.apply(me.#data);\r\n    }   \r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage');\r\n    }\r\n\r\n    /**\r\n     * Storage records key to use to generate unique list\r\n     */\r\n    get key() {\r\n        return GSAttr.get(this, 'key', 0);\r\n    }    \r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSData } from '../../base/GSData.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\nimport { AdoptedController } from '../../controllers/AdoptedController.mjs';\r\nimport { AttributeController } from '../../controllers/AttributeController.mjs';\r\nimport { CopySelectController } from './controllers/CopySelectController.mjs';\r\nimport { MaskController } from './controllers/MaskController.mjs';\r\nimport { MultipatternController } from './controllers/MultipatternController.mjs';\r\nimport { PasswordController } from './controllers/PasswordController.mjs';\r\nimport { NumberController } from './controllers/NumberController.mjs';\r\nimport { TextController } from './controllers/TextController.mjs';\r\nimport { ListController } from './controllers/ListController.mjs';\r\n\r\nimport { ReactiveInput } from './ReactiveInput.mjs';\r\nimport { ValidityController } from './controllers/ValidityController.mjs';\r\n\r\n/**\r\n * Extended HTMLInputElement with controllers support\r\n * adding various features such as masked input support \r\n */\r\nexport class GSInputElement extends ReactiveInput {\r\n\r\n  static properties = {\r\n    autocopy: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    autoselect: { type: Boolean },\r\n    reveal: { type: Boolean },\r\n    mask: { reflect: true },\r\n    multipattern: { type : Object},\r\n\r\n    block: { type: Boolean },\r\n    beep: { type: Boolean },\r\n    timeout: { type: Number }\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n\r\n  #copyselect;\r\n  #maskController;\r\n  #multiPatternController;\r\n  #passwordController;\r\n  #numberController;\r\n  #textController;\r\n  #listController;\r\n  #validityController;\r\n\r\n  constructor() {\r\n    super();\r\n    this.block = false;\r\n    this.beep = false;\r\n    this.timeout = 0;\r\n    this.#copyselect = new CopySelectController(this);\r\n    this.#validityController = new ValidityController(this);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.detachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n\r\n    if (changed.has('mask') && me.mask && me.type === 'text') {\r\n      me.placeholder = me.mask;\r\n      me.#maskController ??= new MaskController(me);\r\n    }\r\n\r\n    if (changed.has('multipattern')) {\r\n      const isMulti = Array.isArray(me.multipattern) && me.multipattern.length > 0;\r\n      const isType = ['text', 'password'].includes(me.type);\r\n      if (isMulti && isType) {\r\n        me.#multiPatternController ??= new MultipatternController(me);\r\n      }\r\n    }\r\n\r\n    if (me.list) {\r\n      me.#listController ??= new ListController(me);\r\n    }\r\n\r\n    switch (me.type) {\r\n      case 'text':\r\n        me.#textController ??= new TextController(me);\r\n        break;\r\n      case 'password':\r\n        me.#passwordController ??= new PasswordController(me);\r\n        break;\r\n      case 'number':\r\n        me.#numberController ??= new NumberController(me);\r\n        break;\r\n    }\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    if (me.autofocus) me.focus();    \r\n    const data = me.formComponent?.data;\r\n    if (data) GSDOM.fromObject2Element(me, data);\r\n    me.checkValidity();\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value) {\r\n    this.#adopted ??= new AdoptedController(me);\r\n    return this.#adopted.style(id, value);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  checkValidity() {\r\n    const me = this;\r\n    me.#validityController.reset();\r\n    super.checkValidity();\r\n    me.#multiPatternController?.checkValidity();\r\n    me.#maskController?.checkValidity();\r\n    super.checkValidity();\r\n    return me.validity.valid;\r\n  }\r\n\r\n  reportValidity() {\r\n    super.reportValidity();\r\n    this.#validityController.report();\r\n  }\r\n\r\n  reset() {\r\n    GSDOM.reset(this);\r\n  }\r\n\r\n  get formComponent() {\r\n    return this.closest('gs-form');\r\n  }\r\n\r\n  get owner() {\r\n    const own = GSDOM.root(this);\r\n    return GSDOM.unwrap(own);\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  get raw() {\r\n    return super.value;\r\n  }\r\n\r\n  get value() {\r\n    return this.#maskController ? this.#maskController.value : super.value;\r\n  }\r\n\r\n  set value(val) {\r\n    super.value = this.mask === val ? '' : val;\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSInputElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   */\r\n  static define(name, clazz) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, { extends: 'input' });\r\n    }\r\n  }\r\n\r\n  static {\r\n    GSInputElement.define('gs-ext-input', GSInputElement);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { CopySelectController } from \"./controllers/CopySelectController.mjs\";\r\nimport { ValidityController } from \"./controllers/ValidityController.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <textarea is=\"gs-ext-text\"></textarea>\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLTextAreaElement}\r\n */\r\nexport class GSTextArea extends HTMLTextAreaElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-text', GSTextArea, { extends: 'textarea' });\r\n        Object.seal(GSTextArea);\r\n    }\r\n\r\n    #isConnected = false;\r\n    #controllers = undefined;\r\n\r\n    #copyselect;\r\n    #validityController;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#copyselect = new CopySelectController(this);\r\n        this.#validityController = new ValidityController(this);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        this.#controllers?.forEach((c) => c.hostUpdated?.());\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        const data = me.form?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n        me.#isConnected = true;\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#isConnected = false;\r\n        me.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n        GSEvents.detachListeners(me);\r\n    }\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.#isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    checkValidity() {\r\n        const me = this;\r\n        me.#validityController.reset();\r\n        return super.checkValidity();\r\n    }\r\n\r\n    reportValidity() {\r\n        super.reportValidity();\r\n        this.#validityController.report();\r\n    }\r\n\r\n    reset() {\r\n        GSDOM.reset(this);\r\n    }\r\n    \r\n    get block() {\r\n        return this.hasAttribute('block');\r\n    }\r\n\r\n    get beep() {\r\n        return this.hasAttribute('beep');\r\n    }\r\n\r\n    get timeout() {\r\n        return GSAttr.getAsNum(this, 'timeout', 0);\r\n    }\r\n\r\n    set block(val = false) {\r\n        GSAttr.toggle(this, 'block', val);\r\n    }\r\n\r\n    set beep(val = false) {\r\n        GSAttr.toggle(this, 'beep', val);\r\n    }\r\n\r\n    set timeout(val = 0) {\r\n        return GSAttr.setAsNum(this, 'timeout', val);\r\n    }\r\n\r\n    get form() {\r\n        return this.closest('gs-form');\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n    /**\r\n     * Find closest top element by CSS selector\r\n     * @param {String} query \r\n     * @returns {HTMLElement}\r\n     */\r\n    closest(query = '') {\r\n        return GSDOM.closest(this, query);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        this.value = await GSLoader.loadSafe(url, 'GET', null, true);\r\n    }\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined, repeat } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSBreadcrumbElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n    color: { ...color },\r\n    divider: { reflect: true },\r\n    spacing: { reflect: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.spacing = 1;\r\n    me.divider = 'chevron-right';\r\n    me.#updateChildren();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#updateChildren();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<nav part=\"base\" class=\"breadcrumb\" @click=\"${me.#onClick}\" dir=\"${ifDefined(me.direction)}\"><slot>\r\n      ${repeat(me.data || [], (item) => item, (item) => html`\r\n        <gs-breadcrumb-item  \r\n        href=\"${item.href}\"\r\n        color=\"${item.color}\"\r\n        .data=${item}     \r\n        .active=${item.active}\r\n        .divider=\"${item.divider || me.divider}\"\r\n        .spacing=\"${item.spacing || me.spacing}\">\r\n          ${item.$text}\r\n        </gs-breadcrumb-item>\r\n      `)}\r\n    </slot></nav>`;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #updateChildren() {\r\n    const me = this;\r\n    me.queryAll('gs-breadcrumb-item').forEach(el => {\r\n      el.divider = me.divider;\r\n      el.spacing = me.spacing;\r\n      el.color = me.color;\r\n    });\r\n  }\r\n\r\n  #onClick(e) {\r\n    const el = e.target.closest('gs-bradcrumb-item');\r\n    el?.handle(e);\r\n  } \r\n\r\n  static {\r\n    this.define('gs-breadcrumb');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSBreadcrumbItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    color: { ...color },\r\n    data: { state: true, type: Object },\r\n    active: { reflect: true, type: Boolean },\r\n    divider: { state: true, type: Boolean },\r\n    spacing: { state: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div part=\"base\" class=\"breadcrumb-item ${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <span part=\"prefix\"><slot name=\"prefix\"></slot></span>        \r\n        ${me.#label}\r\n        <span part=\"suffix\"><slot name=\"suffix\"></slot></span>\r\n        <span part=\"separator\"><slot name=\"separator\">${me.#separator}</slot></span>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #label() {\r\n    const me = this;\r\n    if (me.active) return html`<slot></slot>`;\r\n    me.data.url = me.data.url || me.href;\r\n    me.data.part = 'label';\r\n    return GSLinklement.generate(me.data, {})\r\n  }\r\n\r\n  get #separator() {\r\n    const me = this;\r\n    return me.nextElementSibling && me.divider ? html`<gs-icon size=\"7\" color=\"${me.color}\" css=\"mx-${me.spacing}\" name=\"${me.divider}\"></gs-icon>` : '';\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.query('a', true), e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-breadcrumb-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport { classMap, createRef, ref, css, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSAttachment } from './Attachment.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSFileBoxElement extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    static properties = {\r\n        cssList: { attribute: 'css-list' },\r\n        cssLabel: { attribute: 'css-label' },\r\n        cssInput: { attribute: 'css-input' },\r\n\r\n        multiple: { reflect: true, type: Boolean },\r\n        directory: { reflect: true, type: Boolean },\r\n        name: {},\r\n        title: {},\r\n        accept: {},\r\n        filter: {},\r\n        maxFileSize: { reflect: true, attribute: 'max-file-size', type: Number }, // New property\r\n    }\r\n\r\n    #listEl = createRef();\r\n    #fileEl = createRef();\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = GSFileBoxElement.CSS;\r\n        this.cssInput = 'd-none';\r\n        this.multiple = true;\r\n        this.title = GSFileBoxElement.TITLE;\r\n        this.filter = '^image\\/(gif|png|jpeg)$'\r\n        this.directory = false;\r\n        this.maxFileSize = 0; // Default to 0, meaning no limit\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div part=\"border\" class=\"${classMap(me.renderClass())}\"\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @click=\"${me.#onClick}\"\r\n            @dragenter=\"${me.#onDragenter}\"\r\n            @dragover=\"${me.#onDragenter}\"\r\n            @dragleave=\"${me.#onDragleave}\"\r\n            @drop=\"${me.#onDrop}\"\r\n            @paste=\"${me.#onPaste}\"\r\n            @change=\"${me.#onChange}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.translate(me.title)}</label>\r\n            <input ${ref(me.#fileEl)}  part=\"input\" \r\n                type=\"file\" accept=\"${me.accept}\" \r\n                class=\"${me.cssInput}\" \r\n                name=\"${me.name}\" \r\n                id=\"${me.name}\" \r\n                ${me.multiple ? \"multiple\" : \"\"} \r\n                ${me.directory ? \"directory webkitdirectory\" : \"\"}>\r\n            <pre ${ref(me.#listEl)} part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    get listEl() {\r\n        return this.#listEl.value;\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.#fileEl.value;\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        // Filter out files that exceed the maxFileSize\r\n        const validAttachments = me.maxFileSize > 0 \r\n            ? attachments.filter(a => a.file.size <= me.maxFileSize)\r\n            : attachments;\r\n\r\n        const accepted = me.emit('accept', { attachments: validAttachments }, true, false, true);\r\n        if (accepted && validAttachments.length) {\r\n            me.#accept(validAttachments);\r\n            me.emit('accepted', { attachments: validAttachments }, true);\r\n        }\r\n    }\r\n\r\n    static styles = css`\r\n        .dash {\r\n            border-style: var(--gs-fieldbox-border, dashed) !important;\r\n            border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n        }\r\n        input[type=file] {\r\n            color : var(--gs-fieldbox-color, transparent);\r\n        } \r\n        input[type=file]::file-selector-button {}             \r\n        input[type=file]::file-selector-button:hover {}`;\r\n\r\n    static {\r\n        this.define('gs-filebox');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/TimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSTimeFormat extends GSElement {\r\n\r\n    static properties = {\r\n        interval: {reflect:true, type:Number},\r\n        language: {reflect:true},\r\n    }\r\n\r\n    #id = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.interval = 1;\r\n        this.language = GSUtil.language;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const date = new Date();\r\n        return date.toLocaleTimeString(this.language);\r\n    }    \r\n\r\n    start() {\r\n        const me = this;\r\n        if (me.interval >0 && me.#id === 0) {\r\n            me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n        } else {\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n        this.#id = 0;\r\n    }\r\n    \r\n    #update() {\r\n       requestAnimationFrame(() => this.requestUpdate());\r\n    }\r\n\r\n    static {\r\n        this.define('gs-time-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/DateFormat\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDate } from '../../base/GSDate.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSDateFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        format: {},\r\n        language: {},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = navigator.language;\r\n        this.value = new Date();\r\n    }\r\n\r\n    renderUI() {\r\n        return this.result;\r\n    }    \r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.date;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.language, me.dataset).format(val);\r\n    }\r\n\r\n    get date() {\r\n        const me = this;\r\n        const o = Date.parse(me.value || new Date());\r\n        const date = new GSDate(o);\r\n        date.language = me.language;\r\n        return date;\r\n    }\r\n\r\n\r\n    static {\r\n        this.define('gs-date-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/YearFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSYearFormat extends GSElement {\r\n\r\n    static properties = {\r\n        offset: {type :Number},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n    }\r\n\r\n    renderUI() {\r\n        return this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        this.define('gs-year-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/CurrencyFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSCurrencyFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        currency: {},\r\n        language: {},\r\n    }\r\n\r\n    renderUI() {\r\n        return this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.language, me.#options).format(me.value);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-currency-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCacheStyles } from \"../../base/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepElement class\r\n * @module components/steps/GSStepElement\r\n */\r\n\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepElement extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-primary';\r\n    static COMPLETED = 'text-bg-secondary';\r\n\r\n    static ICON_CSS = 'border rounded-circle fs-1';\r\n    static TITLE_CSS = 'mb-0 fs-6 mt-3 fw-bold';\r\n\r\n    static properties = {\r\n        title: {},\r\n        icon: {},\r\n        color: {},\r\n        iconCSS: { attribute: 'icon-css' },\r\n        titleCSS: { attribute: 'title-css' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const clazz = GSStepElement;\r\n        this.icon = clazz.INACTIVE;\r\n        this.iconCSS = clazz.ICON_CSS;\r\n        this.titleCSS = clazz.TITLE_CSS;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"step d-block w-100 text-center mb-4\"  dir=\"${ifDefined(me.direction)}\">\r\n            <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color || GSStepElement.INACTIVE}\">\r\n                    ${me.#renderIcon()}\r\n                </div>\r\n            </div>\r\n            <div class=\"step-title ${me.titleCSS}\">${me.translate(me.title)}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    #renderIcon() {\r\n        return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-step');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepsElement class\r\n * @module components/steps/GSStepsElement\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSStepStyle } from \"./StepStyle.mjs\";\r\nimport GSStepElement from './Step.mjs';\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepsElement extends GSElement {\r\n\r\n    static CSS = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n\r\n    #index = -1;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldUpdate(changedProperties) { \r\n        return this.steps.length > 0;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\"><slot></slot></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        return this.mapCSS(GSStepsElement.CSS, super.renderClass());\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get length() {\r\n        return this.steps.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length - 1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isLast) return false;\r\n        if (me.#index > - 1) me.current.color = GSStepElement.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStepElement.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStepElement.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStepElement.SELECTED;\r\n        });\r\n    }\r\n\r\n    static {\r\n        GSStepStyle.style;\r\n        this.define('gs-steps', GSStepsElement);\r\n    }\r\n\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSAttr } from '../../base/GSAttr.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\n\r\nexport class GSNotificationElement extends GSElement {\r\n\r\n    static TOP_START = \"position-fixed top-0 start-0\";\r\n    static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n    static TOP_END = \"position-fixed top-0 end-0\";\r\n\r\n    static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n    static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n    static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n    \r\n    static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n    static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n    static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n    static DEFAULT = GSNotificationElement.BOTTOM_END;\r\n\r\n    static properties = {\r\n        position: { reflect: true },\r\n        native: { reflect: true, type: Boolean }\r\n    };\r\n\r\n    #list = new Set();\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = 'p-3';\r\n        this.position = GSNotificationElement.DEFAULT;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n            class=\"toast-container z-10k ${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        return me.mapCSS(me.#positionCSS, super.renderClass());\r\n    }    \r\n\r\n    get #positionCSS() {\r\n        const clazz = GSNotificationElement;\r\n        const val = this.position || clazz.DEFAULT;\r\n        return val.indexOf('_') > 0 && clazz[val] ? clazz[val] : val;\r\n    }\r\n\r\n    clear() {\r\n        this.queryAll('gs-toast').forEach(el => el.dismiss());\r\n    }\r\n\r\n    info(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n    }\r\n\r\n    success(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n    }\r\n\r\n    warn(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n    }\r\n\r\n    danger(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n    }\r\n\r\n    primary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n    }\r\n\r\n    secondary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n    }\r\n\r\n    dark(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n    }\r\n\r\n    light(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n    }\r\n\r\n    /**\r\n     * Main function to show notification. \r\n     * It has support for Bootstrap based and web based notifications.\r\n     * \r\n     * @async\r\n     * @param {String} title Notification title\r\n     * @param {String} message Notification message\r\n     * @param {String} css CSS styling (web only)\r\n     * @param {Boolean} closable Can user close it (web only)\r\n     * @param {Number} timeout Timeout after which to close notification  (default 2 sec)\r\n     * @param {Number} delay Timeout after which to show notification (default 1 sec)\r\n     * @param {Object} options Options for native Notification\r\n     * @returns {Promise<Notification|GSToast>}\r\n     */\r\n    async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n        if (!message) return;\r\n        const me = this;\r\n        if (me.native) {\r\n            let sts = await GSNotificationElement.requestPermission();\r\n            if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n            if (sts) return sts;\r\n        }\r\n        return me.#showWeb(title, message, css, closable, timeout, delay);\r\n    }\r\n\r\n    #showWeb(title, message, css, closable, timeout, delay) {\r\n        const me = this;\r\n        const tpl = `<gs-toast css=\"${css}\"  opened ${closable ? 'closable' : ''} timeout=\"${timeout}\"  delay=\"${delay}\" message=\"${message}\" title=\"${title}\" language=\"${me.language}\" ></gs-toast>`;\r\n        const el = GSDOM.parse(tpl, true);\r\n        requestAnimationFrame(async () => {\r\n            await me.#delay(delay);\r\n            const toast = me.#dialogToast;\r\n            if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n            toast.appendChild(el);\r\n        });\r\n        return el;\r\n    }\r\n\r\n    async #showNative(title, message, timeout, delay, options = {}) {\r\n        const me = this;\r\n        await me.#delay(delay);\r\n        options.body = options.body || message;\r\n        const notification = new Notification(title, options);\r\n        me.#list.add(notification);\r\n        const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n        notification.addEventListener('close', callback);\r\n        if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n        return notification;\r\n    }\r\n\r\n    get #dialogToast() {\r\n        const dlg = customElements.get('gs-dialog')?.top;\r\n        return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n    }\r\n\r\n    async #delay(delay = 0) {\r\n        if (GSUtil.isNumber(delay) && delay > 0) await GSUtil.timeout(delay * 1000);\r\n    }\r\n\r\n    #clearNative() {\r\n        const me = this;\r\n        me.notification.close();\r\n        me.owner.#list.delete(me.notification);\r\n        if (me.notification.iid) clearTimeout(me.notification.iid);\r\n    }\r\n\r\n    /**\r\n     * Clear all triggered notifications\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n        me.#list.forEach(nn => nn.close());\r\n        me.#list.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is supported\r\n     * @returns {Boolean} \r\n     */\r\n    static get isNativeSupported() {\r\n        return \"Notification\" in self;\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is allowed\r\n     * @returns {Boolean} \r\n     */\r\n    static get isGranted() {\r\n        return Notification.permission === \"granted\";\r\n    }\r\n\r\n    /**\r\n     * Request useage for browser native notification\r\n     * \r\n     * @async\r\n     * @returns {Promise<boolean>} Return granted status\r\n     */\r\n    static async requestPermission() {\r\n        const clazz = GSNotificationElement;\r\n        if (!clazz.isNativeSupported) return false;\r\n        if (!clazz.isGranted) await Notification.requestPermission();\r\n        return clazz.isGranted;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-notification');\r\n    }\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNotificationElement } from './Notification.mjs';\r\n\r\nexport class GSToastElement extends GSElement {\r\n\r\n    static properties = {\r\n        closable: { reflect: true, type: Boolean },\r\n        opened: { reflect: true, type: Boolean },\r\n        message: { reflect: true },\r\n        title: { reflect: true },\r\n        delay: { reflect: true, type: Number },\r\n        timeout: { reflect: true, type: Number }\r\n    }\r\n\r\n    #pending = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.timeout = 2;\r\n        me.delay = 2;\r\n        me.auto = true; \r\n    }\r\n\r\n    shouldUpdate(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.delay > 0 && me.opened && visibilityChange) {\r\n            me.#pending = true;\r\n            me.#pendingUpdate();\r\n        }\r\n        return me.#validParent && (!me.#pending);\r\n    }\r\n\r\n    #isVisibilityChanged(changedProperties) {\r\n        return changedProperties.has('opened');\r\n    }\r\n\r\n    async #pendingUpdate() {\r\n        const me = this;\r\n        await GSUtil.timeout(me.delay * 1000);\r\n        me.#pending = false;\r\n        me.requestUpdate();\r\n    }\r\n\r\n    async updated(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.timeout > 0 && me.opened) {\r\n            await GSUtil.timeout(me.timeout * 1000);\r\n            me.opened = false;\r\n        } else if (visibilityChange && !me.opened) { \r\n            me.remove();\r\n        };\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return me.title ? me.#renderWithHeader() : me.#renderSimple();\r\n    }\r\n\r\n    #renderWithHeader() {\r\n        const me = this;\r\n        return html`\r\n        <div dir=\"${ifDefined(me.direction)}\"\r\n            class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n            <div class=\"toast-header\">\r\n                ${me.translate(me.title)}\r\n                <slot name=\"header\"></slot>\r\n                ${me.closable ? me.#button : ''}\r\n            </div>\r\n            <div class=\"toast-body\">\r\n                ${me.translate(me.message)}\r\n                <slot name=\"body\"></slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    #renderSimple() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.translate(me.message)}\r\n              <slot name=\"body\"></slot>\r\n              </div>\r\n              ${me.closable ? me.#button : ''}\r\n          </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': me.opened,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    dismiss() {\r\n        this.opened = false;\r\n    }\r\n\r\n    get #button() {\r\n        const me = this;\r\n        return html`<button type=\"button\" class=\"btn-close me-2 m-auto\" @click=\"${me.dismiss}\"></button>`;\r\n    }\r\n\r\n    get #validParent() {\r\n        const isToast = GSDOM.hasClass(this.parentElement, 'toast-container');\r\n        const isNotify = this.parentElement instanceof GSNotificationElement;\r\n        return isToast || isNotify;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-toast');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller managing data tree navigation.\r\n * Controller is added to every gs-tree-node and \r\n * reacts on Tree node changes to update UI\r\n */\r\nexport class AbstractTreeController {\r\n\r\n    #host;\r\n    #node;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        host.addController(me);\r\n    }\r\n    \r\n    hostConnected() {\r\n        const me = this;\r\n        me.#node = me.#host.node;\r\n        me.#addNodeController(me);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        const me = this;\r\n        me.#removeNodeController(me);\r\n        me.#host.removeController(me);\r\n    }\r\n\r\n    // before rendering\r\n    hostUpdate() {\r\n        const me = this;\r\n        const oldNode = me.#node;\r\n        me.#node = me.#host.node;\r\n        if (oldNode != me.#node) {\r\n            me.#removeNodeController(me);\r\n            me.#addNodeController(me);\r\n        }\r\n    }\r\n\r\n    // link Tree node callbacks with controller and component\r\n    #addNodeController(controller) {\r\n        this.#host.node?.addController?.(controller);\r\n    }\r\n\r\n    // unlink Tree node callbacks with controller and component\r\n    #removeNodeController(controller) {\r\n        this.#node?.removeController?.(controller);\r\n    }\r\n\r\n    host(node) {\r\n        return node[Symbol.for('gs-element')] || this.#host;\r\n    }\r\n\r\n    match(node) {\r\n        const host = this.host(node);\r\n        return host?.node === node;\r\n    }\r\n\r\n    get store() {\r\n        return this.#host.dataController?.store;\r\n    }\r\n\r\n    requestUpdate(node) {\r\n        if (this.match(node)) this.host(node).requestUpdate();\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { AbstractTreeController } from './AbstractTreeController.mjs';\r\n\r\n/**\r\n * Controller managing data TreeNode callbacks to reflect UI.\r\n */\r\nexport class TreeController extends AbstractTreeController {\r\n\r\n    constructor(host) {\r\n        super(host);\r\n    }\r\n\r\n    #toggleState(node, state = false) {\r\n        const el = this.host(node);\r\n        if (el) el.loading = state;\r\n    }\r\n\r\n    // Tree controller callbacks\r\n    onLoad(node) {\r\n        this.#toggleState(node, true);\r\n    }\r\n\r\n    onRefresh(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onAppend(node, addedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onInsert(node, insertedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onExpand(node) {\r\n        const store = this.store;\r\n        if (store) {\r\n            store.onExpand(node);\r\n        } else {\r\n            this.requestUpdate(node);\r\n        }\r\n    }\r\n\r\n    onCollapse(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onFocusChanged(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onSelectionChanged(node, selectedNode) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onRemove(node) {\r\n        if (this.match(node)) this.host(node).remove();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../../lib.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSTreeItemElement extends GSElement {\r\n\r\n  /*\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n    */\r\n\r\n  static properties = {\r\n    loading: { state: true },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('node')) this.node[Symbol.for('gs-element')] = this;\r\n  }\r\n\r\n  updated() {\r\n    if (this.focused) this.query('a')?.focus();\r\n    this.dataset.visible = this.visible;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const opt = me.value || {};\r\n    opt.tooltip = me.translate(opt.tooltip)\r\n    opt.title = me.translate(opt.title)\r\n    const before = me.loading ? me.#renderSpinner(node.level) : me.#renderIcon(node.level);\r\n    return GSLinklement.generate(opt, me.renderClass(), before);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const opt = {\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      'user-select-none  ': true,\r\n      'border-0': me.#border ? false : true,\r\n      'gs-hide': !me.visible\r\n    };\r\n    return me.mapCSS(me.#cssFocus, me.mapCSS(me.#cssSelected, opt, me.selected && !me.multiselect), me.focused);\r\n  }\r\n\r\n  /**\r\n   * Toggle folder\r\n   */\r\n  toggle() {\r\n    this.opened ? this.close() : this.open();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open() {\r\n    this.#status(true);\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   */\r\n  close() {\r\n    this.#status(false);\r\n  }\r\n\r\n  /**\r\n   * Toggle selection state\r\n   */\r\n  toggleSelection() {\r\n    this.select(!this.selected);\r\n  }\r\n\r\n  focus(val = true) {\r\n    if (val) super.focus();\r\n    this.focused = val == true;\r\n  }\r\n\r\n  select(val = true) {\r\n    this.selected = val == true;\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.#link, e);\r\n    /*\r\n    const me = this;\r\n    const isIcon = e.target.tagName === 'GS-ICON';\r\n    if (me.multiselect && isIcon) {\r\n      me.toggleSelection();\r\n    } else {\r\n      GSAttributeHandler.process(me.#link, e);\r\n    }\r\n    */\r\n  }\r\n\r\n  get #link() {\r\n    return this.query('a');\r\n  }\r\n\r\n  get isLeaf() {\r\n    return this.node?.isLeaf;\r\n  }\r\n\r\n  get isFolder() {\r\n    return !this.isLeaf;\r\n  }\r\n\r\n  get key() {\r\n    return this.node?.key;\r\n  }\r\n\r\n  get value() {\r\n    return this.node?.value || {};\r\n  }\r\n\r\n  get level() {\r\n    return this.node?.level || -1;\r\n  }\r\n\r\n  get focused() {\r\n    return this.node?.focused;\r\n  }\r\n\r\n  get visible() {\r\n    const parent = this.parent;\r\n    return parent?.opened || parent?.level === -1;\r\n  }\r\n\r\n  get parent() {\r\n    return this.node?.parent;\r\n  }\r\n\r\n  get parentItem() {\r\n    const item = this.parent?.[Symbol.for('gs-element')];\r\n    return item instanceof GSTreeItemElement ? item : undefined;\r\n  }\r\n\r\n  set focused(val) {\r\n    val = val === true;\r\n    this.node.focused = val;\r\n  }\r\n\r\n  get selected() {\r\n    return this.node?.selected;\r\n  }\r\n\r\n  set selected(val) {\r\n    val = val === true;\r\n    const me = this;\r\n    if (me.isFolder && me.owner.leaf) val = false;\r\n\r\n    if (me.multiselect) {\r\n      if (val) {\r\n        me.node.selectAll();\r\n      } else {\r\n        me.node.deselectAll();\r\n      }\r\n    } else {\r\n      me.node.selected = val;\r\n    }\r\n  }\r\n\r\n  get opened() {\r\n    return this.node?.opened;\r\n  }\r\n\r\n  set opened(val) {\r\n    this.#status(val === true);\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tree');\r\n  }\r\n\r\n  get multiselect() {\r\n    return this.owner.multiselect;\r\n  }\r\n\r\n  get #cssFocus() { return this.owner.cssFocus || 'focus-ring'; }\r\n  get #cssSelected() { return this.owner.cssSelected || 'active'; }\r\n  get #cssCheck() { return this.owner.cssCheck || ''; }\r\n  get #checkColor() { return this.owner.checkColor || 'secondary'; }\r\n  get #checkColorSelected() { return this.owner.checkColorSelected || 'primary'; }\r\n\r\n  get #border() {\r\n    return this.value?.border === true || this.owner.border === true;\r\n  }\r\n\r\n  get #icon() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const data = me.value;\r\n    const ui = me.owner;\r\n    let itemIco = data.icon || ui.itemIcon;\r\n    if (node.isFolder) itemIco = node.opened ? (data.openIcon || ui.openIcon) : (data.closeIcon || ui.closeIcon);\r\n    return itemIco;\r\n  }\r\n\r\n  #renderIndent(level) {\r\n    return html`<gs-indent size=\"${level}\"></gs-indent>`;\r\n  }\r\n\r\n  #renderSpinner(level) {\r\n    return html`${this.#renderIndent(level)}<gs-spinner small></gs-spinner>`;\r\n  }\r\n\r\n  #renderIcon(level) {\r\n    return html`${this.#renderIndent(level)}${this.#renderMulti()}<gs-icon size=\"5\" name=\"${this.#icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderMulti() {\r\n    const me = this;\r\n    if (!me.multiselect) return '';\r\n    const color = me.selected ? me.#checkColorSelected : me.#checkColor;\r\n    const icon = me.node.isPartialySelected ? 'dash-square-fill' : me.selected ? 'check-square-fill' : 'square';\r\n    return html`<gs-icon size=\"6\" data-type=\"state\" \r\n                css=\"me-1 text-${color} ${me.#cssCheck}\"\r\n                name=\"${icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #status(val = false) {\r\n    const me = this;\r\n    if (me.node?.isFolder) {\r\n      me.node.opened = val;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, css, createRef, ref, repeat, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { TreeController } from './controllers/TreeController.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSTreeElement extends GSElement {\r\n\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n\r\n  static shared = {\r\n    itemIcon: { attribute: 'icon-item' },\r\n    closeIcon: { attribute: 'icon-close' },\r\n    openIcon: { attribute: 'icon-open' },\r\n    cssCheck: { attribute: 'css-check' },\r\n    cssFocus: { attribute: 'css-focus' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    checkColor: { attribute: 'check-color', ...color },\r\n    checkColorSelected: { attribute: 'check-color-selected', ...color },\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode },\r\n    border: { type: Boolean, reflect: true },\r\n    guide: { type: Boolean, reflect: true },\r\n    leaf: { type: Boolean, reflect: true },\r\n    multiselect: { type: Boolean, reflect: true },\r\n    circular: { type: Boolean, reflect: true },\r\n    ...GSTreeElement.shared\r\n  }\r\n\r\n  // GS-ITEM attributes mapping\r\n  static options = {\r\n    ...GSTreeElement.shared,\r\n    css: {},\r\n    icon: {},\r\n    color: {},\r\n    title: {},\r\n    tooltip: {},\r\n    opened: { type: Boolean },\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  #queued = false;\r\n  #listRef = createRef();\r\n\r\n  #controller = null;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.leaf = false;\r\n    me.multiselect = false;\r\n    me.data = GSDOM.toJson(me, true, true).items;\r\n    me.node = new TreeNode(null, { '#tagName': this.tagName }, null, -1);\r\n    me.itemIcon = 'file-earmark';\r\n    me.closeIcon = 'folder'; // caret-right; chevron-right\r\n    me.openIcon = 'folder2-open'; // caret-down; chevron-down\r\n    me.cssSelected = 'active'; // fw-bold\r\n    me.cssFocus = 'focus-ring';\r\n    me.node[Symbol.for('gs-element')] = me;\r\n    me.#controller = new TreeController(me);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n          class=\"treeview ${classMap(me.renderClass())}\"          \r\n          @click=\"${me.#onClick}\"\r\n          @keydown=\"${me.#onKeyDown}\"\r\n          @keyup=\"${me.#onKeyUp}\">\r\n          <div class=\"list-group\" ${ref(me.#listRef)}>\r\n          ${repeat(me.node.walk(me.node, false, false), (node) => node.key, (node) => html`\r\n            <gs-tree-item .node=\"${node}\"></gs-tree-item>\r\n          `)}\r\n          </div>    \r\n        </div>`;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data') && me.data && !me.#queued) {\r\n      me.#queued = true;\r\n      queueMicrotask(() => {\r\n        me.node.clear();\r\n        me.node.fromJSON(me.data);\r\n        me.#queued = false;\r\n        me.requestUpdate();\r\n      });\r\n    }\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('multiselect') && !this.multiselect) this.node?.deselectAll();\r\n    this.node.multi = this.multiselect;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    if (data instanceof TreeNode) {\r\n      if (data.root !== this.node) this.node = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n\r\n  next(expand = false) {\r\n    const me = this;\r\n    let item = me.nextItem;\r\n    if (!item & me.circular) item = me.#first;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (expand && me.focused?.isFolder) me.focused.open();\r\n    }\r\n    return me.focused;\r\n  }\r\n\r\n  previous(collapse = false) {\r\n    const me = this;\r\n    let item = me.previousItem;\r\n    if (!item & me.circular) item = me.#last;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (item.isFolder && collapse) item.close();\r\n    }\r\n    return me.focused;\r\n\r\n  }\r\n\r\n  expandAll() {\r\n    this.node?.expandAll();\r\n  }\r\n\r\n  collapseAll() {\r\n    this.node?.collapseAll();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open(path) {\r\n    const me = this;\r\n    me.focused?.open();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   * TODO - path navigation\r\n   */\r\n  close(path) {\r\n    const me = this;\r\n    me.focused?.close();\r\n  }\r\n\r\n  clear() {\r\n    this.node?.clear();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  reload() {\r\n    this.clear();\r\n    this.dataController?.read();\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host(this.node.selectedNodes());\r\n  }\r\n\r\n  get focused() {\r\n    return this.#host(this.node.focusedNode());\r\n  }\r\n\r\n  /**\r\n   * Previous visible ge-node-item\r\n   */\r\n  get previousItem() {\r\n    return this.focused?.node.find(n => n?.visible, true, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  /**\r\n   * Next visible ge-node-item\r\n   */\r\n  get nextItem() {\r\n    return this.focused?.node.find(n => n?.visible, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  get #list() {\r\n    return this.#listRef.value;\r\n  }\r\n\r\n  get #first() {\r\n    return this.#list.firstElementChild;\r\n  }\r\n\r\n  get #last() {\r\n    return this.#list.lastElementChild;\r\n  }\r\n\r\n  #host(node) {\r\n    if (Array.isArray(node)) {\r\n      return node.map(n =>n[Symbol.for('gs-element')]).filter( n=> n);\r\n    }\r\n    return node?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  #onClick(e) {\r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const isIcon = icon?.dataset.type === 'state';\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!el.node) return;\r\n\r\n    const me = this;\r\n\r\n    if (me.multiselect) {\r\n      if (isIcon) el.toggleSelection();\r\n    } else {\r\n      el.select(true);\r\n    }\r\n\r\n    const expandable = (me.multiselect && !isIcon) || (!me.multiselect);\r\n    if (el.isFolder && expandable) el.toggle();\r\n\r\n    el.focus();\r\n    el.handle(e);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    const me = this;\r\n    const el = me.focused;\r\n    if (!el) return;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n        me.next();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (el.isFolder) {\r\n          if (el.opened) {\r\n            me.close();\r\n          } else {\r\n            (el.parentItem || el)?.focus();\r\n          }\r\n        } else {\r\n          me.previous();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if (el.isFolder && !el.opened) {\r\n          me.open();\r\n        } else {\r\n          me.next();\r\n        }\r\n        break;\r\n      case 'Enter':\r\n          if (el.isFolder) {\r\n            el.toggle();\r\n          }        \r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!(el?.node)) return;\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        el.handle(e);\r\n        break;\r\n      case 'Tab':\r\n        el.focus();\r\n        break;\r\n      case 'Space':\r\n        el.select(this.multiselect ? !el.selected : true);\r\n        el.focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\n\r\nexport class GSChartElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/bootstrap-lit';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        config: {},\r\n        storage: {},\r\n        height: { type: Number },\r\n        width: { type: Number },\r\n        data: { type: Array },\r\n        options: { type: Object },\r\n    }\r\n\r\n    #canvasRef = createRef();\r\n    #chart = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.height = 0;\r\n        this.width = 0;\r\n        GSChartElement.#init();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#waitInit();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    shouldUpdate(changed) {\r\n        return GSChartElement.#isChart;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#render();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        const me = this;\r\n        if (changed.has('url') || changed.has('config')) me.#render();\r\n        if (changed.has('data') || changed.has('options')) me.#renderData(me.data, me.options);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<canvas ${ref(me.#canvasRef)} \r\n                class=\"${classMap(me.renderClass())}\"\r\n                width=\"${ifDefined(me.width > 0 ? me.width : false)}\" \r\n                height=\"${ifDefined(me.height > 0 ? me.height : false)}\" >\r\n            </canvas>`;\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.#canvasRef.value;\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    refresh() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    updateChart(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n        const me = this;\r\n        try {\r\n            const options = await GSLoader.loadSafe(me.config, 'GET', null, true, {});\r\n            const data = await GSLoader.loadSafe(me.url, 'GET', null, true, []);\r\n            me.data = data;\r\n            me.options = options;\r\n        } catch (error) {\r\n            GSLog.error(null, error);\r\n        }\r\n    }\r\n\r\n    #renderData(data, options) {\r\n        const me = this;\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChartElement.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => o.data = sets.length === 1 ? data : data[i] || []);\r\n\r\n        if (me.#chart) return me.updateChart(opt);\r\n\r\n        const ctx = me.canvas?.getContext('2d');\r\n        if (ctx) {\r\n            me.#chart = new GSChartElement.#Chart(ctx, opt);\r\n        } else {\r\n            GSLog.error(null, 'Failed to get canvas context');\r\n        }\r\n    }\r\n\r\n    async #waitInit() {\r\n        if (!GSChartElement.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        this.requestUpdate();\r\n    }\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    static async #init() {\r\n        const me = GSChartElement;\r\n        if (me.URL_LIB === false) return;\r\n        if (me.#isChart || me.#initializing) return;\r\n        me.#initializing = true;\r\n        try {\r\n            const origin = GSChartElement.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);\r\n            me.#Chart = Chart;\r\n            me.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            me.#initializing = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert DOM tree into a JSON structure\r\n     * \r\n     * @param {HTMLElement} obj HTML element instance to convert\r\n     * @param {string} name DOM attribute name for object key\r\n     * @param {string} value DOM attribute name for object value\r\n     * @param {string} type DOM attribute name for object type\r\n     * @returns {object}\r\n     */\r\n    static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n        if (!(el instanceof HTMLElement)) return {};\r\n\r\n        const nameV = el.getAttribute(name);\r\n        const valV = el.getAttribute(value);\r\n        const typeV = el.getAttribute(type);\r\n\r\n        let obj = null;\r\n\r\n        switch (typeV) {\r\n            case 'array':\r\n                obj = [];\r\n                break;\r\n            case 'object':\r\n                obj = {};\r\n                break;\r\n            default:\r\n                return GSChartElement.#toType(valV, typeV);\r\n        }\r\n\r\n        const childs = Array.from(el.children);\r\n        const isArray = typeV === 'array';\r\n        const isObject = typeV === 'object';\r\n\r\n        childs.forEach(el => {\r\n            const _nam = el.getAttribute(name);\r\n            if (isArray) {\r\n                obj.push(GSChart.toJson(el, name, value, type));\r\n            } else if (isObject) {\r\n                const tmp = GSChartElement.toJson(el, name, value, type);\r\n                obj[_nam] = tmp;\r\n            } else {\r\n                const _val = el.getAttribute(value);\r\n                const _typ = el.getAttribute(type);\r\n                obj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    static #toType(val, type) {\r\n        switch (type) {\r\n            case 'boolean': return val === 'true';\r\n            case 'number': return parseFloat(val);\r\n            default: return val\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-chart');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        try {\r\n            const data = await GSLoader.load(me.url);\r\n            if (!data) throw new Error(`Code URL ${me.url} unreachable!`);\r\n            me.#data = data;\r\n            me.#onHighlight(data);\r\n        } catch (error) {\r\n            GSDOM.setHTML(me.#code, error.message);\r\n        }\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        try {\r\n            const response = me.#worker;\r\n            const blob = new Blob([response], { type: 'application/javascript' });\r\n            const blobURL = URL.createObjectURL(blob);\r\n            const worker = new Worker(blobURL);\r\n            worker.onmessage = me.#onMessage.bind(me);\r\n            worker.postMessage({ data: data, url: blobURL, append: append });\r\n        } catch (error) {\r\n            GSDOM.setHTML(me.#code, error.message);\r\n        }\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSMarkdownElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        history: { type: Number },\r\n        maxHeight: { type: Number, attribute: 'max-height' },\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        this.history = 10;\r\n        this.dynamicStyle(this.#styleID);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const me = this;\r\n        await me.#initLib();\r\n        if (globalThis.showdown) {\r\n            const opt = { tasklists: true, tables: true };\r\n            me.#converter = new globalThis.showdown.Converter(opt);\r\n            super.connectedCallback();\r\n        }\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('url')) {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url);\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const height = me.maxHeight > 0 ? `${me.maxHeight}px;` : false;\r\n        const opt = { 'max-height': height }\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        return html`<div ${ref(me.#containerRef)} class=\"overflow-auto ${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [me.#styleID] : true,\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        me.#onURL(url);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n\r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n\r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });\r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n            GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n\r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list = GSDOM.queryAll(me.#container, qry);\r\n        requestAnimationFrame(() => list.forEach(el => GSDOM.toggleClass(el, css)) );\r\n    }\r\n\r\n    #handleLinks() {\r\n        const me = this;\r\n        const links = GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n            .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')))\r\n            .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n            .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/'))\r\n            .forEach(el => GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me)));\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        if (me.#cache.length === 0 ) return me.#first;\r\n        const url = me.#cache.pop();\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if (me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdownElement.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-markdown');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSMonacoElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #editor = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = '';\r\n        this.theme = 'vs-dark';\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonacoElement.#init();\r\n        super.connectedCallback();\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.#onMonacoReady();\r\n        super.firstUpdated();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        if (changed.has('theme')) me.#onTheme(me.theme);\r\n        if (changed.has('target')) me.#onTarget(me.target);\r\n        if (changed.has('url')) me.#onURL(me.url);\r\n        if (changed.has('language')) me.#onLanguage(me.language);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#containerRef)} class=\"${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        return this.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    get owner() {\r\n        return this.parentElement;\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        try {\r\n            const data = url ? await GSLoader.load(url) : null;\r\n            if (!data) throw new Error(`Code URL ${url} unreachable!`);\r\n            me.code = '';\r\n            me.#onLanguage(me.language);\r\n            me.code = data;\r\n        } catch (error) {\r\n            me.code = error.message;\r\n        }\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n\r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner?.getBoundingClientRect();\r\n            if (rect) {\r\n                me.#editor.layout({ width: rect.width, height: rect.height });\r\n            }\r\n        });\r\n    }\r\n\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    static #initialized;\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonacoElement.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        const url = GSMonacoElement.URL_LIB;\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${url}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${url}'};\r\n                importScripts('${url}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({\r\n                paths: { 'vs': `${GSMonacoElement.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false }\r\n            });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static async #init() {\r\n        const me = GSMonacoElement;\r\n        if (me.#initialized) return;\r\n        me.#initEnv();\r\n        await me.#initLib();\r\n        await me.#initMonaco();\r\n        me.#initialized = true;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-monaco');\r\n    }\r\n\r\n}"],"names":["GSVersion","version","build","gsstyles","GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSUtil$1","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Date","Boolean","value","toString","val","trim","toLowerCase","str","obj","replace","x","g","split","reverse","join","word","toUpperCase","slice","map","i","capitalize","constructor","o","Array","isArray","isBool","isDate","isNumber","isString","min","max","Math","match","dft","language","sep","numberSeparator","extractNumber","replaceAll","url","test","startsWith","endsWith","pattern","charset","floor","random","length","navigator","languages","flags","RegExp","isStringEmpty","undefined","Intl","NumberFormat","format","DateTimeFormat","string","isNull","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","separator","filter","capitalizeAll","tpl","params","names","keys","vals","values","Function","text","textArea","document","createElement","innerHTML","isStringNonEmpty","window","forEach","a","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","result","permissions","query","state","clipboard","writeText","readText","GSFunction$1","GSFunction","isFunction","includes","own","isFunctionDefined","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","from","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSID","prefx","next","s","l","h","charCodeAt","isProxy","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","attributes","host","opt","recursive","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","children","proxify","safe","unsafe","dflt","default","multi","hasAttribute","toStringArray","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","first","getDay","mondayFirst","isMondayFirst","days","repeat","push","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","d","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","m","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","k","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Locale","weekInfo","firstDay","charAt","toLocaleString","size","isLowercase","hour","hour12","pop","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","getDateFormat","regex","getFormattedDateRegex","parseFormattedDate","groups","y","Y","valueOf","GSData","currency","extract","key","Set","b","every","index","toSorted","compareArrays","second","advanced","arr","indexOf","list","it","cfg","toType","rule","toRegex","childElementCount","querySelector","fmt","style","fields","limit","sts","rec","filterRecord","isPrimitive","filterSimple","filterComplex","filterValue","primitive","found","flt","toCheck","matchDate","matchNumber","op","toLocaleLowerCase","local","toLocaleDateString","iso","toISOString","operator","sort","sortPair","ord","idx","col","v1","v2","compare","order","compareNum","compareString","compareBool","s1","s2","localeCompare","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","partial","r","readFromProperty","readFromObject","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","wrap","appendChild","link","slot","isText","tagName","FORMEL","shadow","queryAll","HTMLButtonElement","hasClass","ownClazz","inheritance","pel","HTMLSelectElement","HTMLSlotElement","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","parentAll","childAll","child","parentElement","offsetParent","c","ShadowRoot","HTMLBodyElement","root","getByID","documentElement","walk","qry","levels","proxy","res","receiver","sanitize","sanitizer","setHTML","Document","textContent","requestAnimationFrame","toggleClass","contains","unwrap","querySelectorAll","defaults","valueAsNumber","selectedOptions","checked","defaultValue","getValue","styleValue","textTransform","ignore","checkValidity","fromElement2Object","fromObject2Element","objectPathExist","fromValue","writeToOject","toValue","plain","definitions","innerText","props","allProperties","getAsNum","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","for","sub","location","hash","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","CLEANUP1","whiteList","asState","isAllowed","toValidationError","allowElement","allowTag","fetch","ok","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","properties","mergeObjects","template","isFormElement","resetSelect","typed","dispatch","isSelect","options","selected","dispatchEvent","Event","bubbles","composed","CustomEvent","detail","message","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","callFunction","sendSuspended","once","chained","suspended","removeEventListener","unlisten","toSignal","internal","evt","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","cancelable","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","delete","removeListener","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","rid","waitAnimationFrame","onResize","attach","waitPageLoad","GSAbortController","AbortController","super","abort","clearInterval","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","isFunctions","getFilter","exec","create","GSDynamicStyle","deleteRule","getRule","setRule","sync","insertRule","updateRule","isImportant","setProperty","source","dynamicStyleSheetByID","dynamicStyleSheet","gsClass","dynamicRule","dynamicRuleByID","dynamicStyle","assign","dynamicStyleByID","GSCacheStyles","store","dynamic","styles","adopt","adoptedId","GSAdoptedEngine","now","preload","timerID","setInterval","sheets","adoptable","adoptSheet","update","scheduled","sorted","ID","cssText","monitorAttributes","ownerNode","adoptStyle","disconnect","mutationList","onAttributeChange","attributeFilter","attributeOldValue","HTMLLinkElement","rel","as","HTMLStyleElement","then","adoptLink","registerFilter","onMonitorFilter","onMonitorConnect","onMonitorDisconnect","init","GSLoader","GS_TEMPLATE_URL","origin","GS_ROUTER_URL","rootURL","defaultURL","TEMPLATE_URL","ROUTER_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","UNIQUE","searchParams","append","level","isHTML","getRouterURL","loadSafe","routerURL","normalizeURL","routerPath","getTemplateURL","templateURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GSTemplateCache","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSAttributeHandler","anchor","call","inject","property","swap","trigger","hashed","calls","toggles","triggers","handle","targets","handleTarget","handleBinding","handleAction","handleSwap","handleInject","handleAttribute","handleProperty","handleToggle","handleTrigger","handleCall","handleExec","handleTemplate","field","form","isForm","HTMLFormElement","isField","toObject","isAttributeJSON","jsonToAttr","toggleAttribute","isPropertyJSON","toggleProperty","tout","symbol","handleContent","clean","useDef","definition","toHTML","gsHashed","applyContent","applyTemplate","clone","insertAdjacent","detach","off","parentComponent","DEFINITION","override","GSBeep","AudioContext","webkitAudioContext","audioContext","duration","frequency","volume","isAvailable","audioCtx","oscillatorNode","createOscillator","gainNode","createGain","connect","destination","gain","start","currentTime","stop","onended","isActive","hasBeenActive","userActivation","GSEnvironment","isMobile","userAgentData","mobile","userAgent","isDesktop","isWebkit","protocol","strVal","brands","brand","strAgt","isEdge","isDevice","platform","screen","otype","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","ps","p","GSEvent","EventTarget","listeners","listener","abortable","controller","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSItem","autofocus","validate","GSElement","tags","collect","GS_LOCALIZATION_LANGUAGE","lang","GSLocalization","GSLocalizationImpl","queue","queued","GS_LOCALIZATION_URL","translate","deft","getLanguage","texthash","reset","promises","loadWait","sequential","Pragma","isDefault","hk","details","GSPopper","asRect","sx","scrollX","sy","scrollY","top","bottom","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","arrow","pos","fromPlacement","isPlacementValid","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","aopt","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","applyDynamicStyle","GSQueryCSS","object","GSQuery","instance","GSRouter","enabled","hashCallback","onHashChange","getRouter","loadDefinition","enable","disable","route","unregister","deepClone","fromJson","px","process","GS_DEFINITION_URL","initialize","GS_ROUTER_WAIT","GSTheme","switch","theme","STORAGE","htmlEl","bsTheme","matchMedia","q","URLSearchParams","onTheme","settings","getSystemDefaultTheme","darkMode","lightMode","setup","Stack","item","unshift","peek","isEmpty","Queue","enqueue","dequeue","BinaryTreeNode","isLeaf","hasChildren","isRoot","BinaryTree","inOrderTraversal","postOrderTraversal","preOrderTraversal","insert","parentNodeKey","canInsertLeft","canInsertRight","find","Node","previous","release","toJSON","DoublyLinkedList","tail","previousNode","insertAt","splice","insertFirst","insertLast","getAt","removeAt","acc","toArray","iterator","isInvalid","isInvalidIndex","isInteger","Tree","folder","leaf","up","levelID","nodeID","isFolder","hasMore","firstChild","lastChild","down","previousSibling","inclusive","flat","iterate","filtered","ir","newOne","findByKey","flatten","fromJSON","raw","hasParent","GSReadWriteRegistryImpl","handlers","INTERNAL","addHandler","removeHandler","getHandler","newHandler","verify","rw","resetRegistry","GSReadWriteRegistry","GSAbstractReadWrite","processors","addProcessor","processor","removeProcessor","isRegistered","notify","onRead","postRead","onWrite","postWrite","addSelected","asArray","SELECT","removeSelected","clearSelected","getSelected","isSelected","GSReadWrite","reader","writer","mode","skip","TYPE","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCachedReadWrite","reformat","records","postFilter","sortData","filterData","search","read","TreeNode","opened","focused","focusedNode","selectedNode","controllers","select","focus","open","addController","removeController","visible","expand","collapse","changed","onFocusChanged","onSelectionChanged","isPartialySelected","selectAll","deselectAll","selectionFlag","onSelectAll","onDeselectAll","selectedNodes","refresh","onRefresh","loading","onLoad","expandAll","collapseAll","expanded","collapsed","onExpand","onCollapse","onAppend","onInsert","GSTreeReader","resetData","litUrl","GS_LIT_URL","litModule","ReactiveController","ReactiveElement","AsyncDirective","AsyncReplaceDirective","CSSResult","Directive","LitElement","PartType","TemplateResultType","UnsafeHTMLDirective","UntilDirective","_$LE","_$LH","adoptStyles","asyncAppend","asyncReplace","choose","classMap","clearPart","createRef","defaultConverter","directive","getCommittedValue","getCompatibleStyle","getDirectiveClass","guard","ifDefined","insertPart","isCompiledTemplateResult","isDirectiveResult","isServer","isSingleExpression","isTemplateResult","keyed","literal","live","noChange","notEqual","nothing","range","ref","removePart","render","setChildPartValue","setCommittedValue","staticHtml","staticSvg","styleMap","supportsAdoptingStyleSheets","svg","templateContent","unsafeCSS","unsafeHTML","unsafeSVG","unsafeStatic","until","when","withStatic","gsAction","gsAnchor","gsAttribute","gsCall","gsExec","gsInject","gsProperty","gsSwap","gsTarget","gsTemplate","gsToggle","gsTrigger","gsValue","gsTimeout","DatasetDirective","part","srcset","DOMStringMap","remap","hasOwn","descriptors","getOwnPropertyDescriptors","listProperties","listGetters","getPrototypeOf","literalTemplate","listGettable","cssMap","CssMapDirective","partInfo","ATTRIBUTE","strings","classInfo","_previousClasses","_staticClasses","notEmpty","newVal","oldVal","numGT0","numGE0","numLT0","numLE0","AutocapitalizeTypes","autocapitalize","hasChanged","AutocompleteTypes","autocomplete","AutocorrectTypes","autocorrect","ButtonTypes","buttonType","is","ColorTypes","color","EnvironmentTypes","environment","InputTypes","inputType","NavTypes","nav","OrientationTypes","PlacementTypes","PositionTypes","ProtocolTypes","SizeTypes","normal","medium","small","large","big","extra","stringArrayConverter","fromAttribute","toAttribute","AdoptedController","hostConnected","hostDisconnected","isGlobal","rules","removeRule","renderRoot","onAdopted","AttributeController","eventName","onNotify","isFormEl","ContentController","refs","removeContent","hostUpdated","isSelf","contentRef","renderOptions","renderBefore","previousElementSibling","keep","DataController","readCallback","writeCallback","errorCallback","selectCallback","onSelect","write","storeID","firstPage","page","lastPage","nextPage","prevPage","storage","requestUpdate","onDataRead","onDataWrite","onDataError","ElementMoveController","attached","cursorX","cursorY","mouseUpCallback","mouseDownCallback","mouseMoveCallback","onMouseUp","onMouseDown","onMouseMove","attachEvent","removeEvent","onStartMove","onEndMove","onCursorRight","onCursorLeft","onCursorUp","onCursorDown","LocalizationController","hostUpdate","updateLanguage","updateLanguageExt","langauge","onLanguage","OrientationController","hosts","onOrientation","TemplateController","lastRef","templateRef","schedule","templateInjected","isTplEl","cacheable","tasks","task","finally","ThemeController","updateTheme","updateThemeExt","SlotController","onSlotChanged","assignedElements","onSlotInjected","rtl","reflect","hide","rounded","bordered","onready","os","browser","adopted","uiHandler","localization","dataController","slotController","themes","attributeChangedCallback","oldValue","newValue","connectedCallback","isBindable","binded","disconnectedCallback","detachListeners","createRenderRoot","firstUpdated","willUpdate","relink","isAllowRender","renderUI","renderTemplate","renderClass","border","mapCSS","flag","waitEvent","direction","isFocused","isValidEnvironment","isValidBrowser","isValidOS","isValidProtocol","isValidOrientation","isGenerated","elementStyles","cssRule","setCSSProperty","ElementNavigationController","circular","multiple","onKeyUp","onClick","onFocusIn","onFocusOut","lastElementChild","blur","onSelected","onDeselected","onFocused","isNavigable","isNav","relatedTarget","composedPath","GroupController","busEvent","busCallback","onBusEvent","GSRouterElement","router","updated","GSAccordionElement","autoclose","cssItem","cssHeader","cssBody","renderItems","close","isItemCloser","GSAccordionItemElement","shouldUpdate","changedProperties","component","GSAlertElement","closed","closable","pause","interval","handleBillboard","show","isBillboard","button","billboard","GSButtonElement","clickCss","hoverCss","toggleColor","outline","toggling","icon","tooltip","refEl","refIco","onMouseOver","onMouseOut","iconEl","animate","onHref","isReset","isSubmit","submit","hover","iconHtml","renderIcon","GSCalendarElement","editable","minYear","maxYear","arrovPrev","arrowNext","cssDays","cssToday","cssWeeks","cssMonth","cssYear","cssNav","cssSelected","arrowPrev","previousMonth","nextMonth","previousYear","nextYear","formatted","updateTarget","week","dayList","months","monthsHTML","yearHTML","onKey","onDay","daysHTML","tgt","HTMLInputElement","valueAsDate","isToday","today","c1","c2","current","monthList","onMonth","optionsHTML","onYear","isList","listID","selectedIndex","yearEl","validity","valid","GSCardElement","imageStyle","overlay","align","image","subtitle","footer","header","colorText","colorBack","colorBorder","cssTitle","cssSubtitle","cssFooter","cssImage","styleID","isVertical","renderVertical","renderHorizontal","imageTop","imageBottom","isBefore","startClass","endClass","startHtml","images","endHtml","isHorizontal","imageSlot","GSCenterElement","GSMenuElement","auto","dark","menuRef","closeSubmenus","updatePosition","onMouseLeave","submenu","dropend","dropstart","popup","caller","isMouseOrPointerEvent","renderSubmenu","renderHeader","renderMenu","renderDivider","menu","toSubmenu","menuItem","isSubmenu","innerWidth","GSContextElement","isInTable","attachTarget","assignedSlot","onPopup","GSCompareElement","background","before","after","elRef","clipRef","slideRef","mouseController","elPosition","splitter","onDoubleClick","isAuto","pct","isFixed","slider","clip","GSControllerElement","module","changes","GSCopyrightElement","company","isCompany","isYear","GSDataHandler","autoload","autorefresh","config","handler","lifoReadRef","lifoWriteRef","itemHolder","PROPERTIES","initLIFO","updateHandler","formatSort","formatFilter","isDebug","gsDebug","isCached","formated","save","verifyHandler","callOnceLifo","lifoReadRefCallback","lifoWriteRefCallback","lifoCall","GSDialogElement","standard","escapable","cancelText","confirmText","minWidth","buttonAlign","iconCancel","iconConfirm","colorCancel","colorConfirm","cssCancel","cssConfirm","cssContent","dialogRef","btnConfirmRef","btnCancelRef","CSS","TITLE_CSS","HEADER_CSS","ALIGN","CANCEL","CONFIRM","updateStack","onOpenChanged","STACK","dialog","showModal","focusable","isHashed","renderConfirm","onConfirm","renderCancel","onCancel","renderFooter","onForm","onSubmit","info","confirm","prompt","forms","f","tab","btnConfirm","btnCancel","QUERY_INPUT","isVisible","GSDrawerElement","backdrop","scroll","fingers","transition","cssHead","onLeave","onEnter","hasHeader","headSlot","GSDropdownElement","simple","renderButton","buttonClass","btn","GSEmailElement","user","domain","dev","updateUser","updateDomain","GSFormElement","acceptCharset","enctype","novalidate","block","beep","formRef","lastState","onChange","onBlur","onInvalid","doFilter","filterField","elements","submitButton","resetButton","childrens","inputs","reportValidity","onValidate","disableInput","enableInput","onFieldChange","onFieldInvalid","findField","fieldValue","fldName","gsfDisable","fldVal","gsfValue","matched","selectable","GSFormGroupElement","layout","label","description","placeholder","mask","spellcheck","rows","cols","step","minLength","maxLength","autoid","autocopy","autoselect","reveal","readonly","required","invalidMessage","cellField","cellLabel","cssLabel","cssField","inputRef","ouptutRef","patterns","validateAllowed","ICON","CSS_LABEL","CSS_LABEL_CELL","formComponent","SELECTOPT","onRange","renderFloating","cssCheck","renderInput","renderOutput","renderLabel","renderInfo","renderLabelWrap","renderField","isIcon","CSS_ICON","renderTooltip","isRange","idattr","isFieldset","radioLayout","fieldSet","inputHTML","selectHTML","isTextArea","fld","vertical","initStyle","listHTML","outerHTML","isBlock","isBeep","isSwitch","isCheckable","isFloating","slots","tagList","isCheck","isRadio","isChecked","isPassword","isEmail","isURL","GSFormPanelElement","renderFormGroup","formaction","formenctype","formmethod","formnovalidate","formtarget","maxlength","minlength","GSGroupElement","controllerGroup","initData","prerender","of","renderWrappedUI","renderWrappedClass","childTagName","generated","getName","GSIconElement","superColor","_clicked","_hovered","postAnimate","fs","GSIndentElement","multiplier","numdef","GSImageElement","invert","grayscale","brightness","contrast","saturate","hue","sepia","alt","imageRef","complete","renderStyle","buildFilter","GSLayoutElement","resizable","autofit","vPos","hPos","els","dyncss","horizontal","lev","tplEl","elementTemplate","tc","dir","did","panelCSS","panelStyle","resize","grow","vpos","hpos","GSLinklement","ping","GSListElement","GSListItemElement","initial","renderFirst","renderSecond","itemCSS","isSelectable","itemStatusCSS","renderText","activeCSS","cssActive","inactiveCSS","cssInactive","GSMouseElement","pageX","pageY","screenX","screenY","offsetX","offsetY","onMouse","GSMovableElement","onMove","cursor","updateCursor","GSNavElement","isTab","GSNavItemElement","itemsCSS","buttonCSS","buildCSS","cssButton","navType","GSOverlayElement","autoremove","radius","styleID2","innerHeight","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathStr","createSVGPathString","fill","pointerEvents","windowX","windowY","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPagerElement","pages","labelFirst","labelLast","labelNext","labelPrevious","half","renderPrevious","renderItem","renderNext","renderLast","pagination","decodeHTMLEntities","toTarget","ctrl","GSPopupElement","wMin","wMax","hMin","hMax","panelRef","onAuto","reposition","postPopup","popupFixed","panel","overflowH","overflowV","GSPopoverElement","arrowRef","arrowID","attachEvents","popover","fade","isFocusTrigger","isHoverTrigger","popupAbsolute","onFocus","GSProgressElement","updateStyle","percentage","onKeySelect","increase","decrease","trunc","old","GSSpinnerElement","pulsar","GSSplitterElement","styleTGT","cssUpdate","lock","updateMouse","isPreceeding","isStyleValue","styleDynamic","lockable","csize","cls","gsSplitter","updateX","updateY","dx","GSTabItemElement","updateCSS","tabCSS","GSTabPanelElement","GSTabGroupElement","findPanel","isAfter","tabs","renderTabs","panels","renderPanels","GSTableElement","colspan","hidden","fixed","filterType","cssFilter","colorFilter","colorHead","colorSelect","colorSort","stripedColumn","divider","striped","grid","borderless","columns","datacolumn","multisort","multiselect","protected","sortable","sortOrder","headColor","CELLS","table","stripedColumns","renderFilters","onSort","entry","renderColumn","renderRecord","renderEmpty","renderHandler","columnType","columType","input","valueAt","row","cell","cfgType","timestamp","dataType","renderFilter","hasSub","onFilter","renderOption","listid","icons","sortType","cells","remapRecord","renderCell","record","elementTofilter","column","getElementIndex","prepareSorter","isComplex","tr","GSTagElement","converter","appendable","closeColor","cssClose","cssTag","dataListRef","renderTags","onInput","renderList","updateTag","KEYS","srcElement","removeTag","addTag","isMax","datalist","optEl","tagEl","renderTag","tagClass","btnClass","badge","GSTextElement","GSTooltipElement","arrowStyle","arrowEl","panelEl","refLocal","refGlobal","GSTemplateElement","CopySelectController","clickCallback","copyCallback","onCopy","writeToClipboard","MaskController","_","back","prev","keyDownCallback","inputCallback","focusCallback","changeCallback","initRules","j","buildSlots","findIndex","buildAccept","toPattern","isMatch","setCustomValidity","setSelectionRange","substring","selectionStart","selectionEnd","lastIndex","maskType","chars","masks","special","MultipatternController","multipattern","NumberController","onNumberInput","PasswordController","revealing","keyUpCallback","isReveal","altKey","TextController","updateText","InteractiveController","monitorCallback","blurCallback","onMonitor","onDataChange","hasUpdated","formElements","strict","isInList","togleEl","dataGroup","togleOption","isButtonElement","ComboController","ListController","ValidityController","invalidCallback","processing","togglUI","isTyped","report","defaultPropertyDeclaration","attributeToPropertyMap","prepare","elementProperties","finalize","finalized","prepareFn","getOwnPropertySymbols","superCtor","attributeNameForProperty","ReactiveInput","reflectingProperties","instanceProperties","updatePromise","reflectingProperty","isUpdatePending","observedAttributes","initializer","initializers","propKeys","getOwnPropertyNames","createProperty","noAccessor","descriptor","getPropertyDescriptor","prototype","configurable","enumerable","enableUpdating","attributeToProperty","requestedUpdate","getUpdateComplete","scheduleUpdate","performUpdate","propertyToAttribute","markUpdated","updateComplete","getPropertyOptions","changeProperty","enqueueUpdate","elementProps","wrapped","didUpdate","ctor","propName","attrValue","saveInstanceProperties","GSComboExt","comboController","setIf","onReset","objToHTML","mergeArrays","GSDataListExt","HTMLDataListElement","GSInputElement","copyselect","maskController","multiPatternController","passwordController","numberController","textController","listController","validityController","isMulti","isType","GSTextArea","HTMLTextAreaElement","GSBreadcrumbElement","spacing","updateChildren","$text","GSBreadcrumbItemElement","generate","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBoxElement","cssList","cssInput","maxFileSize","listEl","fileEl","dragging","TITLE","onDragenter","onDragleave","onDrop","onPaste","dataTransfer","hasFile","dropEffect","clipboardData","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","validAttachments","GSTimeFormat","toLocaleTimeString","GSDateFormat","GSYearFormat","GSCurrencyFormat","GSStepStyle","GSStepElement","iconCSS","titleCSS","INACTIVE","ICON_CSS","GSStepsElement","steps","isFirst","isLast","COMPLETED","SELECTED","GSNotificationElement","BOTTOM_END","DEFAULT","positionCSS","dismiss","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","dlg","nn","isNativeSupported","isGranted","permission","GSToastElement","pending","visibilityChange","isVisibilityChanged","pendingUpdate","validParent","renderWithHeader","renderSimple","isToast","isNotify","AbstractTreeController","addNodeController","removeNodeController","oldNode","TreeController","toggleState","addedNode","insertedNode","onRemove","GSTreeItemElement","renderSpinner","cssFocus","status","toggleSelection","parentItem","checkColor","checkColorSelected","ui","itemIco","itemIcon","openIcon","closeIcon","renderIndent","renderMulti","GSTreeElement","guide","shared","listRef","nextItem","previousItem","reload","expandable","GSChartElement","URL_LIB","GS_URL_CHART","canvasRef","chart","waitInit","destroy","isChart","renderData","canvas","updateChart","div","toBase64Image","quality","sets","datasets","ctx","getContext","Chart","initializing","registerables","nameV","valV","typeV","childs","isObject","_nam","GSChart","_val","_typ","GSHighlightElement","GS_URL_HLJS","codeRef","onTarget","onURL","onHighlight","hasLangauge","highlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMarkdownElement","GS_URL_MARKDOWN","history","maxHeight","containerRef","initLib","showdown","tasklists","tables","Converter","toCache","fromCache","container","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","script","GSMonacoElement","GS_URL_MONACO","editor","onMonacoReady","monaco","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","automaticLayout","minimap","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","paths","vs","initialized","initEnv","initMonaco"],"mappings":"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"}