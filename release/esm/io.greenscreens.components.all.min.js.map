{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/GSVersion.mjs","../../modules/base/style.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSID.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSDynamicStyle.mjs","../../modules/base/GSCacheStyles.mjs","../../modules/base/GSAdoptedEngine.mjs","../../modules/base/GSBeep.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSLocalization.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSTemplateCache.mjs","../../modules/base/GSTheme.mjs","../../modules/base/GSAttributeHandler.mjs","../../modules/helpers/Stack.mjs","../../modules/helpers/Queue.mjs","../../modules/helpers/BinaryTree.mjs","../../modules/helpers/DoublyLinkedList.mjs","../../modules/helpers/Tree.mjs","../../modules/data/ReadWriteRegistry.mjs","../../modules/data/AbstractReadWrite.mjs","../../modules/data/ReadWrite.mjs","../../modules/data/CachedReadWrite.mjs","../../modules/data/TreeNode.mjs","../../modules/data/TreeReader.mjs","../../modules/lib.mjs","../../modules/directives/dataset.mjs","../../modules/directives/literal.mjs","../../modules/directives/css-map.mjs","../../modules/properties/verificator.mjs","../../modules/properties/autocapitalize.mjs","../../modules/properties/autocomplete.mjs","../../modules/properties/autocorrect.mjs","../../modules/properties/buttonType.mjs","../../modules/properties/color.mjs","../../modules/properties/environment.mjs","../../modules/properties/inputType.mjs","../../modules/properties/nav.mjs","../../modules/properties/orientation.mjs","../../modules/properties/placement.mjs","../../modules/properties/position.mjs","../../modules/properties/protocol.mjs","../../modules/properties/size.mjs","../../modules/properties/arrayConverter.mjs","../../modules/controllers/AdoptedController.mjs","../../modules/controllers/AttributeController.mjs","../../modules/controllers/ContentController.mjs","../../modules/controllers/DataController.mjs","../../modules/controllers/ElementMoveController.mjs","../../modules/controllers/LocalizationController.mjs","../../modules/controllers/OrientationController.mjs","../../modules/controllers/TemplateController.mjs","../../modules/controllers/ThemeController.mjs","../../modules/controllers/SlotController.mjs","../../modules/GSElement.mjs","../../modules/controllers/ElementNavigationController.mjs","../../modules/controllers/GroupController.mjs","../../modules/components/Accordion.mjs","../../modules/components/AccordionItem.mjs","../../modules/components/Alert.mjs","../../modules/components/Button.mjs","../../modules/components/Calendar.mjs","../../modules/components/Card.mjs","../../modules/components/Center.mjs","../../modules/components/Menu.mjs","../../modules/components/Context.mjs","../../modules/components/Compare.mjs","../../modules/components/Controller.mjs","../../modules/components/Copyright.mjs","../../modules/components/DataHandler.mjs","../../modules/components/Dialog.mjs","../../modules/components/Drawer.mjs","../../modules/components/Dropdown.mjs","../../modules/components/Email.mjs","../../modules/components/Form.mjs","../../modules/components/FormGroup.mjs","../../modules/components/FormPanel.mjs","../../modules/components/Group.mjs","../../modules/components/Icon.mjs","../../modules/components/Indent.mjs","../../modules/components/Image.mjs","../../modules/components/Layout.mjs","../../modules/components/Link.mjs","../../modules/components/List.mjs","../../modules/components/ListItem.mjs","../../modules/components/Nav.mjs","../../modules/components/NavItem.mjs","../../modules/components/Overlay.mjs","../../modules/components/Pager.mjs","../../modules/components/Popup.mjs","../../modules/components/Progress.mjs","../../modules/components/Spinner.mjs","../../modules/components/Splitter.mjs","../../modules/components/tab/Tab.mjs","../../modules/components/tab/TabPanel.mjs","../../modules/components/tab/TabGroup.mjs","../../modules/components/Table.mjs","../../modules/components/Tag.mjs","../../modules/components/Text.mjs","../../modules/components/Tooltip.mjs","../../modules/components/Template.mjs","../../modules/components/ext/controllers/CopySelectController.mjs","../../modules/components/ext/controllers/MaskController.mjs","../../modules/components/ext/controllers/MultipatternController.mjs","../../modules/components/ext/controllers/NumberController.mjs","../../modules/components/ext/controllers/PasswordController.mjs","../../modules/components/ext/controllers/TextController.mjs","../../modules/components/ext/controllers/ListController.mjs","../../modules/components/ext/controllers/ValidityController.mjs","../../modules/components/ext/ReactiveInput.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSInputElement.mjs","../../modules/components/ext/GSTextArea.mjs","../../modules/components/breadcrumb/Breadcrumb.mjs","../../modules/components/breadcrumb/BreadcrumbItem.mjs","../../modules/components/filebox/Attachment.mjs","../../modules/components/filebox/FileBox.mjs","../../modules/components/intl/TimeFormat.mjs","../../modules/components/intl/DateFormat.mjs","../../modules/components/intl/YearFormat.mjs","../../modules/components/intl/CurrencyFormat.mjs","../../modules/components/steps/StepStyle.mjs","../../modules/components/steps/Step.mjs","../../modules/components/steps/Steps.mjs","../../modules/components/toast/Notification.mjs","../../modules/components/toast/Toast.mjs","../../modules/components/tree/controllers/AbstractTreeController.mjs","../../modules/components/tree/controllers/TreeController.mjs","../../modules/components/tree/TreeItem.mjs","../../modules/components/tree/Tree.mjs","../../modules/extra/Chart.mjs","../../modules/extra/Highlight.mjs","../../modules/extra/Markdown.mjs","../../modules/extra/Monaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport class GSVersion {\r\n\r\n    static get version() {\r\n        return '2.0.0';\r\n    }\r\n\r\n    static get build() {\r\n        return 2025.0131;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Required CSS Styles for WebCompoents, regardless Bootstrap CSS.\r\n */\r\nexport const gsstyles = `.z-10k{z-index:10000 !important;}\r\n.gs-hide,gs-item{display:none !important;}\r\ngs-popover,gs-tooltip{position:fixed;top:0px;left:0px;},\r\n.d-contents{display:contents;}';\r\ngs-button-group::part(.btn-group){box-shadow:rgba(72, 72, 72, 0.4) 0px 0.125rem 0.25rem;}\r\ngs-group>gs-button::part(button) {box-shadow: none;}\r\ngs-group>gs-button:not(:last-child)::part(button) {border-top-right-radius: 0;border-bottom-right-radius: 0;}\r\ngs-group>gs-button:not(:first-child)::part(button) {margin-left: calc(var(--bs-border-width) * -5);border-top-left-radius: 0;border-bottom-left-radius: 0;}\r\ngs-layout {width: 100%;height: 100%;}\r\ngs-split-panel{flex: 1 1 auto !important;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]:before {content: attr(data-value);}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {visibility: hidden;display: inline-block;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-calendar-picker-indicator {position: relative;top: 0px;right: 0;color: black;opacity: 0.5;}\r\n`;","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic isPrimitive = (o) => !Array.isArray(o) && (this.isBool(o) || this.isDate(o) || this.isNumber(o) || this.isString(o));\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic asArray(val) {\r\n\t\treturn Array.isArray(val) ? val : [val];\r\n\t}\r\n\r\n\tstatic asNum(val, dft = 0, language) {\r\n\t\tlanguage = language || GSUtil.language;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(language);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default language\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get language() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(language) {\r\n\t\treturn Intl.NumberFormat(language).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(language) {\r\n\t\treturn Intl.NumberFormat(language).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(language = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(language).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t};\r\n\t\tconst reg = /[&<>\"'/]/ig;\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\t\t\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() === right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tif (time <= 0) return;\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to write to the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async writeToClipboard(value = '') {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-write\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.writeText(value);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to read from the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async readFromClipboard() {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-read\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.readText();\r\n\t\t}\r\n\t\treturn '';\r\n\t}\t\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type generator function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunctionGenerator(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const GeneratorFunction = (function*(){}).constructor;\r\n        return fn instanceof GeneratorFunction;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribite name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return val;\r\n\t\tconst v = el.getAttribute(name) ?? val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop];\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\t\t\t\t\r\n\t\t\t\tconst tmp = opt; // Object.hasOwn(opt, prop) ? opt : target;\r\n\t\t\t\t\r\n\t\t\t\tconst type = tmp[prop]?.type;\r\n\t\t\t\tconst safe = tmp[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = tmp[prop]?.default;\r\n\t\t\t\tconst multi = tmp[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = tmp[prop]?.attribute || prop;\r\n\t\t\t\tconst val = target.hasAttribute(prop) ? GSAttr.get(target, prop) : target[prop];\r\n\r\n\t\t\t\tif (GSFunction.isFunction(val)) return val.bind(target);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computedStyleMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #language = navigator.language;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, language) {\r\n        const me = this;\r\n        me.language = language;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get language() {\r\n        return this.#language;\r\n    }\r\n\r\n    set language(val) {\r\n        this.#language = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, language = navigator.language, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.language = language;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, language = navigator.language, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.language = language;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#language)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#language, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, language) {\r\n        format = format || GSUtil.getDateFormat(language);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    /**\r\n     * Check if a year is a leap year\r\n     * @param {number} year \r\n     * @returns {Boolean}\r\n     */\r\n    static isLeapYear(year) {\r\n        return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, language: {}, extract: {}, key: { type: Boolean } };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', language:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const language = cfg.language || GSUtil.language;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        // intercept overrides; used b GS-TABLE cell Ui remapping\r\n        if (cfg.childElementCount > 0) {\r\n            const el = cfg.querySelector(`gs-item[value=\"${val}\"]`);\r\n            return GSAttr.get(el, \"map\", val);\r\n        }\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, language);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, language) : val;\r\n            case 'string':\r\n            case 'text':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(language);\r\n                    return new GSDate(val).format(fmt, language);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, language);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(language, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static *filter(data = [], filter = [], fields, limit = 0) {\r\n        let cnt = 0;\r\n        let sts = false;\r\n        for (let rec of data) {\r\n            sts = GSData.filterRecord(rec, filter, fields);\r\n            if (sts) {\r\n                cnt++\r\n                yield rec;\r\n            }\r\n            if (limit > 0 && cnt >= limit) break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields, limit = 0) {\r\n        data = Array.isArray(data) ? data : [data];\r\n        filter = Array.isArray(filter) ? filter : [filter];\r\n        if (filter.length === 0) return data;\r\n        return [...GSData.filter(data, filter, fields, limit)];\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = GSUtil.isPrimitive(filter);\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter, fields);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (GSData.filterValue(value, filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter, fields) {\r\n\r\n        let primitive = false;\r\n        let found = true;\r\n        let value = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            primitive = GSUtil.isPrimitive(flt);\r\n            if (primitive) {\r\n                found = found && GSData.filterSimple(rec, flt, fields);\r\n            } else {\r\n                value = rec[flt.name];\r\n                if (flt.name) {\r\n                    found = found && GSData.filterValue(value, flt)\r\n                } else {\r\n                    found = found && GSData.filterSimple(rec, flt.value, fields);\r\n                }\r\n            }\r\n\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static filterValue(value, filter) {\r\n        const toCheck = GSUtil.isPrimitive(filter) ? filter : filter.value;\r\n        if (GSUtil.isDate(value)) {\r\n            return GSData.matchDate(value, filter);\r\n        } else if (GSUtil.isNumber(value)) {\r\n            return GSData.matchNumber(value, GSUtil.asNum(toCheck, null), filter.op);\r\n        } else {\r\n            return (GSUtil.normalize(value)).toLocaleLowerCase().includes(GSUtil.normalize(toCheck).toLocaleLowerCase());\r\n        }\r\n    }\r\n\r\n    static matchDate(val, filter, language) {\r\n\r\n        if (typeof filter === 'string') {\r\n            const value = '' + filter;\r\n            const local = val.toLocaleDateString(language);\r\n            const iso = val.toISOString();\r\n            return local.includes(value) || iso.includes(value);\r\n        }\r\n\r\n        if (!filter.value) return false;\r\n\r\n        const qry = filter.value instanceof Date ? 'date' : typeof filter.value;\r\n\r\n        switch (qry) {\r\n            case 'number':\r\n                return GSData.matchNumber(val.getTime(), filter.value, filter.op);\r\n            case 'date':\r\n                return GSData.matchNumber(val.getTime(), filter.value.getTime(), filter.op);\r\n        }\r\n\r\n        return GSData.matchDate(val, '' + filter.value, filter.language);\r\n    }\r\n\r\n    /**\r\n     * Match number by operator\r\n     * @param {*} value \r\n     * @param {*} query \r\n     * @param {*} operator \r\n     */\r\n    static matchNumber(value = 0, query = 0, operator = 'eq') {\r\n        switch (operator) {\r\n            case 'gt': return query > value;\r\n            case 'lt': return query < value;\r\n            case 'ge': return query >= value;\r\n            case 'le': return query <= value;\r\n        }\r\n        return value === query;\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToOject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name, partial = false) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj[n][i] : null;\r\n        } else if (obj.hasOwnProperty(n)) {\r\n            obj = partial ? obj[n] || obj : obj[n];\r\n        } else {\r\n            obj = null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n\tstatic readFromObject(obj, name) {\r\n        if (obj?.hasOwnProperty(name)) return GSData.readFromProperty(obj, name);\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    /**\r\n     * Create a deep clone of an object\r\n     * @param {Object} obj \r\n     * @returns {Object}\r\n     */\r\n    static deepClone(obj) {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} shadow \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el, shadow = false) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()), shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSelectElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSelect(el) {\r\n\t\treturn el instanceof HTMLSelectElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSlotElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSlotElement(el) {\r\n\t\treturn el instanceof HTMLSlotElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @param {Number} level How many levels to wal, 0 = all\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry, levels = 0) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tlevels = GSUtil.asNum(levels, 0);\r\n\t\tconst limit = levels > 0;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t\tif (limit && --levels == 0) return null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el, defaults = false) {\r\n\t\tlet val = null;\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\tval = el.value ? el.valueAsNumber : el.value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\tval = Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value') && el.value) {\r\n\t\t\t\t\tval = el.checked ? el.value : null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tval = el.checked;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tval = el.value;\r\n\t\t}\r\n\r\n\t\tif (GSUtil.isNull(val) && defaults) {\r\n\t\t\tval = el.defaultValue;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el, defaults);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromValue(el, val, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tif (defaults) el.defaultValue = el.checked;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = GSUtil.normalize(data);\r\n\t\t\t\tif (defaults) el.defaultValue = el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true, defaults = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => GSDOM.fromElement2Object(el, params, defaults));\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @param {Boolean} defaults Set default value for form reset  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output', defaults = false) {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\t// if (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj, defaults));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromObject2Element(el, obj, defaults = false) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\tGSDOM.fromValue(el, val, defaults);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement (input) value to JSON Object  \r\n\t * @param {HTMLElement} owner Element value source\r\n\t * @param {Object} obj Object to populate \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromElement2Object(el, obj, defaults = false) {\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t} else if (el.checked) {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\tconst props = GSDOM.allProperties(own);\r\n\t\tArray.from(own.attributes).forEach(v => {\r\n\t\t\tconst type = props[v.name]?.type;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase Boolean:\r\n\t\t\t\t\tobj[v.name] = own.hasAttribute(v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Number:\r\n\t\t\t\t\tobj[v.name] = GSAttr.getAsNum(own, v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tobj[v.name] = v.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', '');\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own\r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t */\r\n\tstatic setValue(qry, val, own, defaults = false) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\t/**\r\n\t * Extract and merge all static properties definition from WebComponent instance\r\n\t * @param {GSElement} obj \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic allProperties(obj) {\r\n\t\tconst list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n\t\tlist.push(obj.constructor?.properties || obj.properties);\r\n\t\treturn GSData.mergeObjects(list);\r\n\t}\r\n\r\n\t/**\r\n\t * Return element template ref\r\n\t * @param {GSElement} host \r\n\t * @returns \r\n\t */\r\n\tstatic templateRef(host) {\r\n\t\tif (!host) return;\r\n\t\tif (host.tagName === 'GS-TEMPLATE') return host.src;\r\n\t\treturn host.template || host.query?.('template', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Reset form element\r\n\t * @param {*} element \r\n\t * @returns \r\n\t */\r\n\tstatic reset(element) {\r\n\t\tif(GSDOM.isFormElement(element)) {\r\n\t\t\tif (!GSDOM.resetSelect(element)) {\r\n\t\t\t\telement.dataset.typed = false;\r\n\t\t\t\telement.value = element.defaultValue;\r\n\t\t\t\tGSDOM.#dispatch(element);\r\n\t\t\t\treturn true;\t\r\n\t\t\t}\r\n\t\t} \t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Reset select element to default value\r\n\t * @param {HTMLSelectElement} element \r\n\t */\r\n\tstatic resetSelect(element) {\r\n\t\tif (GSDOM.isSelect(element)) {\r\n\t\t\tArray.from(element.options).forEach(el => el.selected = el.hasAttribute('selected'));\r\n\t\t\tGSDOM.#dispatch(element);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic #dispatch(element) {\r\n\t\telement.dispatchEvent(new Event('change', { bubbles: true, composed: true }));\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t\tglobalThis.dispatchEvent?.(new CustomEvent('gs-base-ready', {\r\n\t\t\tdetail: {\r\n\t\t\tmessage: 'GS Base is ready',\r\n\t\t\ttime: new Date(),\r\n\t\t\t}\r\n\t\t}));\t\t\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #suspended = 0; // Corrected typo\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error('Error waiting for page load:', e); // Improved error handling\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#suspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#suspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#suspended > 0) GSEvents.#suspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic detachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if available.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = GSUtil.isString(data) ? data : data.action || data.data?.action;\r\n\t\t\tGSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(this.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {Boolean} A status of successful observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el, opt) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el, opt);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {Boolean} forRemove If \"true\", return injection filter functions, else removal functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {Boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {Boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {Boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {Boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {Boolean} forRemove - call on node remove or add\r\n     * @param {HTMLElement} target - element to monitor\r\n     * @returns {Boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {Boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {Boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = (style || '').toString();\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop();\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n    * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\nimport { gsstyles } from \"./style.mjs\";\r\n\r\n/**\r\n * Cache for dynamically loaded styles.\r\n * Used to share styles among GS-* WebComponents\r\n * @class\r\n */\r\nexport class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Create a new CSSStyleSheet\r\n\t * @param {String} id Unique ID\r\n\t * @returns {CSSStyleSheet} Created instance\r\n\t */\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {String} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\t\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\t\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {String} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {String} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id, style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSID.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(gsstyles);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from './GSDOM.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSDOMObserver } from './GSDOMObserver.mjs';\r\nimport { GSCacheStyles } from './GSCacheStyles.mjs';\r\n\r\nconst adoptedId = Symbol();\r\nconst observer = Symbol();\r\n\r\n/**\r\n * Monitor HTMLStyleElement & HTMLLinkElement (of type stylesheet) for changes.\r\n * Every such element marked with data-adoptable=\"true\" will be cached and\r\n * will trigger gs-adopted event to notify component controller to update adoptableStyleSheet list\r\n */\r\nexport class GSAdoptedEngine {\r\n\r\n  static #timerID = 0;\r\n  static #ID = Date.now();\r\n  static #scheduled = false;\r\n\r\n  static #init() {\r\n    const me = GSAdoptedEngine;\r\n    me.observe(document.head);\r\n    me.#preload();\r\n    me.#timerID = setInterval(() => me.#adopt(), me.timeout);\r\n  }\r\n\r\n  static #clear() {\r\n    const me = GSAdoptedEngine;\r\n    clearInterval(me.#timerID);\r\n    me.#timerID = undefined;\r\n  }\r\n\r\n  static #adopt() {\r\n    const me = GSAdoptedEngine;\r\n    const sheets = me.#adoptable;\r\n    if (sheets.length == 0) return me.#clear();\r\n    sheets.map(s => me.#adoptSheet(s));\r\n    me.update();\r\n  }\r\n\r\n  static update() {\r\n    const me = GSAdoptedEngine;\r\n    if (me.#scheduled) return;\r\n    me.#scheduled = true;\r\n    queueMicrotask(() => {\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          document.adoptedStyleSheets = me.#sorted;\r\n          document.adoptedStyleSheets.id = ++me.#ID;\r\n        } finally {\r\n          me.#scheduled = false;\r\n          globalThis.dispatchEvent(new CustomEvent('gs-adopted'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static #asText(sheet) {\r\n    return Object.values(sheet.cssRules).map(o => o.cssText).join('');\r\n  }\r\n\r\n  static #adoptLink(el) {\r\n    const me = GSAdoptedEngine;\r\n    GSAdoptedEngine.#monitorAttributes(el);\r\n    Array.from(document.styleSheets).filter(s => s.ownerNode === el).map(s => me.#adoptSheet(s));\r\n  }\r\n\r\n  static #adoptSheet(sheet) {\r\n    const me = GSAdoptedEngine;\r\n    const style = me.#asText(sheet);\r\n    return me.#adoptStyle(sheet.ownerNode, style);\r\n  }\r\n\r\n  static #adoptStyle(ownerNode, style) {\r\n    const me = GSAdoptedEngine;\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(style);\r\n    sheet.id = ++me.#ID;\r\n    ownerNode[adoptedId] = sheet.id;\r\n    me.#store(ownerNode, sheet);\r\n    return sheet;\r\n  }\r\n\r\n  static #store(ownerNode, sheet) {\r\n    GSCacheStyles.set(sheet.id, sheet);\r\n  }\r\n\r\n  static #remove(ownerNode, sheet) {\r\n    GSCacheStyles.remove(sheet.id);\r\n    ownerNode[observer]?.disconnect?.();\r\n    ownerNode[observer] = undefined;\r\n  }\r\n\r\n  static get #sorted() {\r\n    return GSCacheStyles.styles;\r\n  }\r\n\r\n  /**\r\n   * List of adoptable styles or links. Filter only those with dataset.adoptable=true\r\n   * @returns {HTMLStyleElement|HTMLLinkElement}\r\n   */\r\n  static get #adoptable() {\r\n    return Object.values(document.styleSheets)\r\n      .filter(o => o.ownerNode)\r\n      .filter(o => o.ownerNode.dataset.adoptable)\r\n      .filter(o => !o.ownerNode[adoptedId]);\r\n  }\r\n\r\n  static #preload() {\r\n    GSDOM.queryAll(document.head, 'link[rel=\"preload\"][as=\"style\"]')\r\n    .forEach(el => {\r\n      el.remove();\r\n      document.head.appendChild(el);\r\n    });\r\n  }\r\n\r\n  static #onAttributeChange(mutationList) {\r\n    mutationList.forEach((mutation) => {\r\n       const id = mutation.target[adoptedId];\r\n       const style = GSCacheStyles.get(id);\r\n       if(style) style.disabled = mutation.target.hasAttribute('disabled');\r\n    });\r\n    GSAdoptedEngine.update();\r\n  }\r\n  \r\n  static #monitorAttributes(element) {\r\n    const me = GSAdoptedEngine;\r\n    const callback = me.#onAttributeChange.bind(me);\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(element, {\r\n      attributeFilter: [\"disabled\"],\r\n      attributeOldValue: true,\r\n      subtree: false,\r\n    });\r\n    return observer;\r\n  }\r\n  \r\n  /**\r\n   * Filter style and link(css) elements which will be shared\r\n   * with all web components. Filter only those marked with data-adoptable\r\n   * @param {HTMLElement} el \r\n   * @returns {Boolean} Return true if monitored element is selected for further processing\r\n   */\r\n  static #onMonitorFilter(el) {\r\n    return (Boolean(el.dataset?.adoptable))\r\n      && (\r\n        (el instanceof HTMLLinkElement && (el.rel === 'stylesheet' || el.as === \"style\"))\r\n        || el instanceof HTMLStyleElement\r\n      );\r\n  }\r\n\r\n  /**\r\n   * When style added to the HTML page, attach it to the WebComponents\r\n   * @param {HTMLStyleElement|HTMLLinkElement} el \r\n   */\r\n  static #onMonitorConnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    if (el instanceof HTMLStyleElement) {\r\n      me.#adoptStyle(el, el.innerText);\r\n      me.update();\r\n    } else if (el instanceof HTMLLinkElement) {\r\n      GSEvents.wait(el, 'load', 0, false).then(e => {\r\n        if (el.rel === 'preload') return el.rel = \"stylesheet\";\r\n        me.#adoptLink(e.target);\r\n        me.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When style removed, remove from adoptable and update\r\n   * @param {HTMLElement} el \r\n   */\r\n  static #onMonitorDisconnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    me.#sorted.filter(o => o.id === el[adoptedId])\r\n          .forEach(o => me.#remove(el, o));\r\n    me.update();\r\n  }\r\n\r\n  /**\r\n   * Observe DOM tree for mutations\r\n   * @param {HTMLElement} owner Root element to watch DOM tree from \r\n   */\r\n  static observe(owner) {\r\n    const me = GSAdoptedEngine;\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorConnect, false, owner);\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorDisconnect, true, owner);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBeep class\r\n * @module base/GSBeep\r\n */\r\n\r\n\r\n/**\r\n * A helper class to use browser AudiContext to make tones\r\n * @class\r\n */\r\nexport class GSBeep {\r\n\r\n    static audioCtx = globalThis.AudioContext || globalThis.webkitAudioContext || globalThis.audioContext;\r\n\r\n    /**\r\n     * Helper function to emit a beep sound in the browser using the Web Audio API.\r\n     * \r\n     * @param {number} duration - The duration of the beep sound in milliseconds.\r\n     * @param {number} frequency - The frequency of the beep sound.\r\n     * @param {number} volume - The volume of the beep sound.\r\n     * @param {string} tyoe - The sound type (sine, square, sawtooth, triangle, custom)\r\n     * \r\n     * @returns {Promise} - A promise that resolves when the beep sound is finished.\r\n     */\r\n    static beep(duration = 200, frequency = 440, volume = 1, type = 'sine') {\r\n        return new Promise((resolve, reject) => {\r\n            try{\r\n                if (!GSBeep.isAvailable) return resolve();\r\n                const context = new GSBeep.audioCtx();\r\n                const oscillatorNode = context.createOscillator();\r\n                const gainNode = context.createGain();\r\n                oscillatorNode.connect(gainNode);\r\n\r\n                // Set the oscillator frequency in hertz\r\n                oscillatorNode.frequency.value = frequency;\r\n\r\n                // Set the type of oscillator\r\n                oscillatorNode.type = type;\r\n                gainNode.connect(context.destination);\r\n\r\n                // Set the gain to the volume\r\n                gainNode.gain.value = volume * 0.01;\r\n\r\n                // Start audio with the desired duration\r\n                oscillatorNode.start(context.currentTime);\r\n                oscillatorNode.stop(context.currentTime + duration * 0.001);\r\n\r\n                // Resolve the promise when the sound is finished\r\n                oscillatorNode.onended = () => resolve();                \r\n            }catch(error) {\r\n                reject(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    static get isAvailable() {\r\n        const {isActive, hasBeenActive } =  navigator.userActivation;\r\n        return isActive || hasBeenActive;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promises sequentially\r\n\t * @param {Array<Promise>} ps \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const controller = abortable instanceof AbortController ? abortable : (abortable ? new GSAbortController(timeout) : null);\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        wrap.controller = abortable instanceof AbortController ? abortable : (abortable ? new GSAbortController(timeout) : null);\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n            me.#listeners.delete(o);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport { GSEvent } from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport class GSEventBus {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {String} name EventBus name\r\n     * @param {String} type Event name\r\n     * @param {Object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {String} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {String} name unique buss name\r\n     * @returns {Boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constructor to attach Gesture featuer to an HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {Boolean} swipe Monitor swipe gesture\r\n     * @param {Boolean} tap Monitor tap gesture\r\n     * @param {Boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move: me.#handleTouchMove.bind(me),\r\n            start: me.#handleTouchStart.bind(me),\r\n            end: me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) {\r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 && Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {Number}\r\n     */\r\n    static fingers(e) {\r\n        return e.detail.touches?.length;\r\n    }\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns {GSGesture}\r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport class GSItem extends HTMLElement {\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic properties = {\r\n\t\tactive: { type: Boolean },\r\n\t\tdisabled: { type: Boolean },\r\n\t\tautofocus: { type: Boolean },\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return template content of GS-ITEM element (if exists)\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tget body() {\r\n\t\tlet tpl = GSAttr.get(this, 'template');\r\n\t\tif (tpl) return `<gs-template flat src=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = this.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item elements\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tget items() {\r\n\t\treturn Array.from(this.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSAttr.get(this, 'name', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent GS-* component\r\n\t */\r\n\tget parentComponent() {\r\n\t\treturn GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n\t}\r\n\t\t\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate that parent element contains only specific childrens\r\n\t * @param {*} own \r\n\t * @param {*} tagName \r\n\t * @returns \r\n\t */\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic collect(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Convert GS-ITEM list to JSON\r\n\t * @param {HTMLElement} root Element containing GS-ITEM childs \r\n\t * @returns {Array} Arary of JSON objects\r\n\t */\r\n\tstatic toJSON(root) {\r\n\t\treturn GSItem.collect(root).map(el => el.asJSON(true));\r\n\t}\r\n\r\n\t/**\r\n\t * Make GS-ITEM attributes JSON compatible \r\n\t * @param {*} root \r\n\t * @param {*} definition \r\n\t * @returns \r\n\t */\r\n    static proxify(root, definition) {        \r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, definition));\r\n    }\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSVersion } from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        //if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        }\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport class GSPopper {\r\n\r\n\t/**\r\n\t * A simple wrapper to get element DOMRect\r\n\t * @param {HTMLElement} el \r\n\t * @returns {DOMRect}\r\n\t */\r\n\tstatic asRect(el) {\r\n\t\treturn el.getBoundingClientRect();\r\n\t}\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = GSPopper.asRect(el);\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = GSPopper.asRect(element);\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\r\n\t\tconst css = {\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '0px',\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.translate = `${obj.x}px ${obj.y}px`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tconst astyle = GSDynamicStyle.dynamicStyle(arrow);\r\n\r\n\t\tconst css = {\r\n\t\t\tinset: GSPopper.#inset(pos),\r\n\t\t\tposition: 'absolute',\r\n\t\t\tmargin: '0px',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\twidth: 'max-content',\r\n\t\t\theight: 'max-content',\t\t\t\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\t\tastyle.position = 'absolute';\r\n\r\n\t\tconst srect = GSPopper.asRect(source);\r\n\t\tconst arect = GSPopper.asRect(arrow);\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tconst aopt = {\r\n\t\t\ttranslate: `${arr.x}px ${arr.y}px`,\r\n\t\t\ttop: arr.top ? arr.top : '',\r\n\t\t\tleft: arr.left ? arr.left : ''\r\n\t\t}\r\n\r\n\t\tconst opt = {\r\n\t\t\ttranslate : `${obj.x}px ${obj.y}px`\r\n\t\t};\r\n\r\n\t\tObject.assign(style, opt);\r\n\t\tObject.assign(astyle, aopt);\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst opt = {};\r\n\r\n\t\topt.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\topt.left = '';\r\n\t\t\topt.top = '0px';\r\n\t\t\tshift = 0; //pos.isStart ? size : -1 * size;\r\n\t\t\topt.translate = `${shift}px ${arrowPosH / 2}px`;\r\n\t\t} else {\r\n\t\t\topt.top = '';\r\n\t\t\topt.left = '0px';\r\n\t\t\tshift = 0; //pos.isTop ? size : -1 * size;\r\n\t\t\topt.translate = `${arrowPosW}px ${shift}px`;\r\n\t\t}\r\n\r\n\t\tGSDynamicStyle.applyDynamicStyle(arrow, opt);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {\r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSQueryCSS } from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value);\r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n\r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by its name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve already existing template by name,\r\n\t * or inject a new one if it does not exist already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} tpl Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t// return document.getElementById(tpl.slice(1));\r\n\t\t\treturn GSDOM.query(`template[id=\"${tpl.slice(1)}\"]`, true);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTheme class\r\n * @module base/GSTheme\r\n */\r\n\r\n/**\r\n * Switch between dark and light mode\r\n * @Class\r\n */\r\nexport class GSTheme {\r\n\r\n    static #STORAGE = 'gs-theme-mode';\r\n\r\n    /**\r\n     * Changes the theme to 'dark mode' and save settings to local stroage.\r\n     * Basically, replaces/toggles every CSS class that has '-light' class with '-dark'\r\n     * @param {HTMLElement} el \r\n     */\r\n    static darkMode(el) {\r\n        GSTheme.#switch(el, 'light', 'dark');\r\n    }\r\n\r\n    /**\r\n     * Changes the theme to 'light mode' and save settings to local stroage.\r\n     * @param {HTMLElement} el \r\n     */\r\n    static lightMode(el) {\r\n        GSTheme.#switch(el, 'dark', 'light');\r\n    }\r\n\r\n    static #switch(el, from = 'light', to = 'dark') {\r\n\r\n        const root = el || document.body;\r\n\r\n        // TODO  switch dark/light mode ?!??!? \r\n\r\n        // save last state\r\n        GSTheme.theme = to;\r\n    }\r\n\r\n    static get theme() {\r\n        return localStorage.getItem(GSTheme.#STORAGE);\r\n    }\r\n\r\n    static set theme(val) {\r\n        localStorage.setItem(GSTheme.#STORAGE, val);\r\n        window.dispatchEvent(new CustomEvent('gs-theme', { detail: val }));\r\n        const htmlEl = document.head.parentElement;\r\n        if (val) {\r\n            htmlEl.dataset.bsTheme = val;\r\n        } else {\r\n            delete htmlEl.dataset.bsTheme;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get system default theme by media query\r\n     * @returns {String} dark|light \r\n     */\r\n    static getSystemDefaultTheme() {\r\n        const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\r\n        return darkThemeMq.matches ? 'dark' : 'light';\r\n    }\r\n\r\n    static #onTheme(e) {\r\n        const q = new URLSearchParams(location.hash.slice(1));\r\n        GSTheme.theme = q.get('theme');\r\n    }\r\n\r\n    static #setup() {\r\n        window.addEventListener('hashchange', GSTheme.#onTheme)\r\n        let settings = localStorage.getItem(GSTheme.#STORAGE);\r\n        if (settings == null) {\r\n            settings = GSTheme.getSystemDefaultTheme();\r\n        }\r\n\r\n\r\n        if (settings == 'dark') return GSTheme.darkMode();\r\n        if (settings == 'light') return GSTheme.lightMode();\r\n        // TODO switch\r\n\r\n    }\r\n\r\n    static {\r\n        GSTheme.#setup();\r\n        globalThis.GSTheme = GSTheme;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-attribute - toggle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-call - calls a function on a given target (multipel functions supported)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: \r\n * data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * \r\n * data-gs-target determine element on which to execute,\r\n * if not specified, it means current element\r\n * \r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el) {\r\n        const me = this;\r\n        me.#host = el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = GSAttributeHandler.proxify(me.#host);\r\n    }\r\n\r\n    /**\r\n     * Main function to process element data-gs-* attributes\r\n     * @param {Event} e \r\n     */\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    /**\r\n     * Process each individual data-gs-* attribute\r\n     * @param {GSElement} host \r\n     * @param {String|HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleSwap(target);\r\n        me.#handleInject(host, target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    /**\r\n     * Bind provided value to the form or form element\r\n     * @param {HTMLFormElement|HTMLInputElement} target \r\n     * @param {Event} evt \r\n     * @returns \r\n     */\r\n    #handleBinding(target, evt) {\r\n        const source = evt.target.field || evt.target.form || evt.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (!(isField || isForm)) return;\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Trigger 'action' event on target to execute specific function\r\n     * @param {GSElement} target \r\n     */\r\n    #handleAction(target) {\r\n        if (this.action) GSEvents.send(target, 'action', this.action, true, true);\r\n    }\r\n\r\n    /**\r\n     * Set target attribute value\r\n     * @param {HTMLElement} target \r\n     * @returns \r\n     */\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    /**\r\n     * Set value to target propery\r\n     * @param {GSElement} target \r\n     * @returns \r\n     */\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle target css class\r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {*} host \r\n     * @param {*} target \r\n     * @param {*} evt \r\n     * @returns \r\n     */\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)();\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send an event to a target\r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    /**\r\n     * Inject HTML to target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleInject(host, target) {\r\n        if (this.inject) {\r\n            const src = this.#toHTML(this.inject);\r\n            const content = GSDOM.parse(src, true);\r\n            this.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Swap inner HTML on a target\r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleSwap(target) {\r\n        if (this.swap) target.innerHTML =  this.#toHTML(this.swap);\r\n    }\r\n\r\n    /**\r\n     * Convert value as URL to a tempalte or as a component name to inject\r\n     * @param {String} value \r\n     * @returns {String}\r\n     */\r\n    #toHTML(value = '') {\r\n        return value.indexOf('/') < 0 ? `<${value}></${value}>` : `<gs-template flat src=\"${value}\"></gs-template>`;\r\n    }\r\n\r\n    /**\r\n     * Load HTML template and apply to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    /**\r\n     * Apply htmltemplate to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} template \r\n     */    \r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    /**\r\n     * Apply html template to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} content \r\n     */    \r\n    #applyContent(host, target, content) {\r\n        if (host.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    detach(name = 'click') {\r\n        //GSEvents.detachListeners(this.#host);\r\n        const me = this;\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        me.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n        const me = this;\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                //return [GSDOM.root(me.#host)];\r\n                return [me.#host.parentComponent];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n        const list = GSDOM.queryAll(document.body, me.target, false, true).filter(el => el.tagName !== 'GS-ITEM'); \r\n        if (list.length === 0) list.push(me.#host);\r\n        return list;\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    /**\r\n     * Is property value JSON\r\n     */\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    /**\r\n     * Is element attribute value JSON\r\n     */\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    /**\r\n     * Wrap any element into data-gs-* handler\r\n     * @param {HTMLElement} el \r\n     * @returns {Proxy}\r\n     */\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    /**\r\n     * Process data-gs-* attributtes on a element\r\n     * @param {HTMLElement} el \r\n     * @param {Event} e \r\n     * @returns \r\n     */\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    /**\r\n     * Create a new attribute handler instance\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     * @param {boolean} override If 'false' will skip existing atributes\r\n     */\r\n    static clone(from, to, override = true) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .filter(o => override || !to.hasAttribute(o.attribute))          \r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    /**\r\n     * Check if component is bindable to events\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static isBindable(el) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        return Object.values(def)\r\n            .filter(o => el.hasAttribute(o.attribute))\r\n            .length > 0;\r\n\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure following last in, first out (LIFO) order of operations.\r\n */\r\nexport class Stack extends Array {\r\n    \r\n    push(item) {\r\n        this.unshift(item);\r\n    }\r\n\r\n    pop() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure following first in, first out (FIFO) order of operations.\r\n */\r\nexport class Queue extends Array {\r\n    \r\n    enqueue(item) {\r\n        this.push(item);\r\n    }\r\n\r\n    dequeue() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst tree = new BinaryTree(1, 'AB');\r\n\r\ntree.insert(1, 11, 'AC');\r\ntree.insert(1, 12, 'BC');\r\ntree.insert(12, 121, 'BG', { right: true });\r\n\r\n[...tree.preOrderTraversal()].map(x => x.value);\r\n// ['AB', 'AC', 'BC', 'BCG']\r\n\r\n[...tree.inOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB', 'BC', 'BG']\r\n\r\ntree.value;                // 'AB'\r\ntree.hasChildren;          // true\r\n\r\ntree.find(12).isLeaf;           // false\r\ntree.find(121).isLeaf;          // true\r\ntree.find(121).parent.value;    // 'BC'\r\ntree.find(12).left;             // null\r\ntree.find(12).right.value;      // 'BG'\r\n\r\ntree.remove(12);\r\n\r\n[...tree.postOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB']\r\n*/\r\n\r\n/**\r\n * Binary Tree Node data holder\r\n */\r\nexport class BinaryTreeNode {\r\n\r\n    constructor(key, value = key, parent = null) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n\r\n    /**\r\n     * Check if both left and right are empty.\r\n     */\r\n    get isLeaf() {\r\n        return this.left === null && this.right === null;\r\n    }\r\n\r\n    /**\r\n     * Check if node has children\r\n     */\r\n    get hasChildren() {\r\n        return !this.isLeaf;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Binary tree implementation\r\n */\r\nexport class BinaryTree extends BinaryTreeNode {\r\n\r\n    constructor(key, value = key) {\r\n        super(key, value);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in in-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *inOrderTraversal(node = this) {\r\n        if (node.left) yield* this.inOrderTraversal(node.left);\r\n        yield node;\r\n        if (node.right) yield* this.inOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in post-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *postOrderTraversal(node = this) {\r\n        if (node.left) yield* this.postOrderTraversal(node.left);\r\n        if (node.right) yield* this.postOrderTraversal(node.right);\r\n        yield node;\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in pre-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *preOrderTraversal(node = this) {\r\n        yield node;\r\n        if (node.left) yield* this.preOrderTraversal(node.left);\r\n        if (node.right) yield* this.preOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to find the given parent node and \r\n     * insert a new child BinaryTreeNode either as the left or right child, \r\n     * depending on the passed options object.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @param {*} options \r\n     * @returns {boolean} Return true if data inserted\r\n     */\r\n    insert(\r\n        parentNodeKey,\r\n        key,\r\n        value = key,\r\n        { left, right } = { left: true, right: true }\r\n    ) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === parentNodeKey) {\r\n                const canInsertLeft = left && node.left === null;\r\n                const canInsertRight = right && node.right === null;\r\n                if (!canInsertLeft && !canInsertRight) return false;\r\n                if (canInsertLeft) {\r\n                    node.left = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n                if (canInsertRight) {\r\n                    node.right = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to remove a BinaryTreeNode from the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.left.key === key) {\r\n                node.left = null;\r\n                return true;\r\n            }\r\n            if (node.right.key === key) {\r\n                node.right = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to retrieve the given node in the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    find(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new DoublyLinkedList();\r\n\r\nlist.insertFirst(1);\r\nlist.insertFirst(2);\r\nlist.insertFirst(3);\r\nlist.insertLast(4);\r\nlist.insertAt(3, 5);\r\n\r\nlist.size;                      // 5\r\nlist.head.value;                // 3\r\nlist.head.next.value;           // 2\r\nlist.tail.value;                // 4\r\nlist.tail.previous.value;       // 5\r\n[...list].map(e => e.value);    // [3, 2, 1, 5, 4]\r\n\r\nlist.removeAt(1);               // 2\r\nlist.getAt(1).value;            // 1\r\nlist.head.next.value;           // 1\r\n[...list].map(e => e.value);    // [3, 1, 5, 4]\r\n\r\nlist.reverse();\r\n[...list].map(e => e.value);    // [4, 5, 1, 3]\r\n\r\nlist.clear();\r\nlist.size;                      // 0\r\n*/\r\n\r\n/**\r\n *  Linear data structure following doubly linked list order of operations.\r\n */\r\nexport class Node {\r\n\r\n    value = null;\r\n    next = null;\r\n    previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    release() {\r\n        this.value = undefined;\r\n        this.next = undefined;\r\n        this.previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DoublyLinkedList {\r\n\r\n    #nodes = [];\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     */\r\n    get size() {\r\n        return this.#nodes.length;\r\n    }\r\n\r\n    /**\r\n     * First element in the list\r\n     */\r\n    get head() {\r\n        return this.size ? this.#nodes[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Last elemet in the list\r\n     */\r\n    get tail() {\r\n        return this.size ? this.#nodes[this.size - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Create new linked node\r\n     * @param {*} value \r\n     * @param {*} nextNode \r\n     * @param {*} previousNode \r\n     * @returns \r\n     */\r\n    create(value, nextNode, previousNode) {\r\n        return new Node(value, nextNode, previousNode);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the given position in the list\r\n     * @param {*} index \r\n     * @param {*} value \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    insertAt(index, value, safe) {\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index] || null;\r\n        const node = this.create(value, nextNode, previousNode);\r\n\r\n        if (previousNode) previousNode.next = node;\r\n        if (nextNode) nextNode.previous = node;\r\n        this.#nodes.splice(index, 0, node);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the beginning of the list\r\n     * @param {*} value \r\n     */\r\n    insertFirst(value) {\r\n        this.insertAt(0, value);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the end of the list\r\n     * @param {*} value \r\n     */\r\n    insertLast(value) {\r\n        this.insertAt(this.size, value);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data in the given index\r\n     * @param {Number} index \r\n     * @returns \r\n     */\r\n    getAt(index) {\r\n        return this.#nodes[index];\r\n    }\r\n\r\n    indexOf(val) {\r\n        return this.#nodes.indexOf(val);\r\n    }\r\n\r\n    /**\r\n     * Remove the data at the given index\r\n     * @param {*} index \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    removeAt(index, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index + 1] || null;\r\n\r\n        if (previousNode) previousNode.next = nextNode;\r\n        if (nextNode) nextNode.previous = previousNode;\r\n\r\n        return this.#nodes.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    clear(full = true) {\r\n        if (full) this.#nodes.forEach(o => o.release());\r\n        this.#nodes = [];\r\n    }\r\n\r\n    /**\r\n     * Reverse data order\r\n     */\r\n    reverse() {\r\n        this.#nodes = this.#nodes.reduce((acc, { value }) => {\r\n            const nextNode = acc[0] || null;\r\n            const node = new Node(value, nextNode, null);\r\n            if (nextNode) nextNode.previous = node;\r\n            return [node, ...acc];\r\n        }, []);\r\n    }\r\n\r\n    toArray() {\r\n        return this.#nodes.map(e => e.value);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#nodes;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield* this.#nodes;\r\n    }\r\n\r\n    #validate(index, safe = false) {\r\n        const isInvalid = this.#isInvalidIndex(index);\r\n        if (isInvalid) {\r\n            if (safe) {\r\n                console.log(this.#error());\r\n            } else {\r\n                throw new Error(this.#error());\r\n            }\r\n        }\r\n        return !isInvalid;\r\n    }\r\n\r\n    #isInvalidIndex(index) {\r\n        return !Number.isInteger(index) || index < 0 || index > this.size;\r\n    }\r\n\r\n    #error() {\r\n        return `Invalid index. Current length is ${this.size}.`;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        const list = new DoublyLinkedList();\r\n        if (Array.isArray(data)) data.forEach(v => list.insertLast(v));\r\n        return list;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Tree Node data holder\r\n */\r\nexport class Tree {\r\n\r\n    value;\r\n\r\n    #key = null;\r\n    #parent = null;\r\n    #children;\r\n\r\n    #folder = false;\r\n    #level = 0;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        this.#key = key;\r\n        this.#parent = parent;\r\n        this.#folder = value?.leaf === false;\r\n        this.#level = parent ? parent.level + 1 : level;\r\n        this.#children = this.#folder ? [] : undefined;\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Return tree list from root to this node.\r\n     * TODO: Refactor when iterator \"map\" become available\r\n     */\r\n    get subtree() {\r\n        return Array.from(this.up(undefined, false, true, true));\r\n    }\r\n\r\n    get levelID() {\r\n        return this.subtree.map(o => o.level).join('.');\r\n    }\r\n\r\n    /**\r\n     * Unique node canonical form\r\n     */\r\n    get nodeID() {\r\n        //if (this.parent?.level < 0) return this.index;\r\n        return this.subtree.map(o => o.index).join('.');\r\n    }\r\n\r\n    get path() {\r\n        return this.subtree.map(o => o.key).join('/');\r\n    }\r\n\r\n    get index() {\r\n        return this.parent?.nodes.indexOf(this) || 0;\r\n    }\r\n\r\n    get size() {\r\n        return this.#children?.length || -1;\r\n    }\r\n\r\n    get level() {\r\n        return this.#level;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Check if #children is empty\r\n     */\r\n    get isLeaf() {\r\n        return !this.#folder;\r\n    }\r\n\r\n    get isFolder() {\r\n        return this.#folder;\r\n    }\r\n\r\n    /**\r\n     * Check if has #childrens\r\n     */\r\n    get hasChildren() {\r\n        return this.#folder && this.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get key() {\r\n        this.#key ??= this.nodeID;\r\n        return this.#key;\r\n    }\r\n\r\n    get nodes() {\r\n        return this.#children;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get parent() {\r\n        return this.#parent;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n    /**\r\n     * Check if there are more siblings \r\n     */\r\n    get hasMore() {\r\n        return this.#parent?.size > this.index + 1;\r\n    }\r\n\r\n    get firstChild() {\r\n        return this.hasMore ? this.#children[0] : undefined;\r\n    }\r\n\r\n    get lastChild() {\r\n        return this.hasMore ? this.#children[this.#children.length - 1] : undefined;\r\n    }\r\n\r\n    get next() {\r\n        return this.down(this, false, false).next().value || this.nextSibling || this.parent?.nextSibling;\r\n    }\r\n\r\n    get previous() {\r\n        const node = this.previousSibling;\r\n        return (node?.hasChildren) ? node.lastChild : node || this.up(this, false, false).next().value;\r\n    }\r\n\r\n    get nextSibling() {\r\n        return this.hasMore ? this.#parent.#children[this.index + 1] : undefined;\r\n    }\r\n\r\n    get previousSibling() {\r\n        return this.index > 0 ? this.#parent.#children[this.index - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Clear all #children\r\n     */\r\n    clear() {\r\n        if (this.#children) {\r\n            this.#children.forEach(o => o.release?.());\r\n            this.#children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally, if called externally, \r\n     * make sure node is removed from parent \r\n     */\r\n    release() {\r\n        this.clear();\r\n        this.#key = null;\r\n        this.value = null;\r\n        this.#parent = null;\r\n    }\r\n\r\n    /**\r\n     * Walk down the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     * @param {Boolean} flat Navigate all nodes out of subtree\r\n     */\r\n    *down(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (node.#children?.length) {\r\n            for (let child of node.#children) {\r\n                yield* this.down(child, values, true, reverse, flat);\r\n            }\r\n        }\r\n        if (flat) {\r\n            const item = node.nextSibling || node.parent.nextSibling;\r\n            if (item) yield* this.down(item, values, true, reverse, flat);\r\n        }\r\n        /*\r\n        */\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk up the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     */\r\n    *up(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (flat) {\r\n            let item = node.previousSibling;\r\n            item = item?.isFolder ? item.lastChild : item;\r\n            if (item) yield* this.up(item, values, true, reverse, flat);\r\n        }        \r\n        if (node.parent) {\r\n            yield* this.up(node.parent, values, true, reverse, flat);\r\n        }\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk through all nodes\r\n     * @param {*} node \r\n     */\r\n    walk = this.down;\r\n\r\n    /**\r\n     * Simulate array function \"forEach\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */\r\n    forEach(callback, flat = false, reverse = false) {\r\n        this.every((node, index) => {\r\n            callback(node, index);\r\n            return true;\r\n        }, flat, reverse);\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"every\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    every(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let sts = true;\r\n        let i = 0;\r\n        for (let node of it) {\r\n            sts = callback(node, i++);\r\n            if (!sts) break;\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"find\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    find(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let i = 0;\r\n        for (let node of it) {\r\n            if (callback(node, i++)) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"filter\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only childrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    filter(callback, flat, reverse) {\r\n        return [...this.#filtered(callback, flat, reverse)];\r\n    }\r\n\r\n    *#filtered(callback, flat, reverse) {\r\n        const it = this.iterate(flat, reverse);\r\n        for (let node of it) {\r\n            let res = callback(node);\r\n            if (res) yield node;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Iterate all nodes\r\n     * @param {boolean} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {boolean} reverse If set, will iterate up the tree\r\n     */\r\n    *iterate(flat, reverse) {\r\n        reverse ? yield* this.up(this, false, false, false, flat) : yield* this.down(this, false, false,  false, flat);\r\n    }\r\n\r\n    /**\r\n     * Add a new Tree to the tree.\r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    append(key, value = key) {\r\n        let newOne = undefined;\r\n        if (key instanceof Tree) {\r\n            key.#parent = this;\r\n            key.#level = this.#level + 1;\r\n            newOne = key;\r\n        } else {\r\n            newOne = new Tree(key, value, this);\r\n        }\r\n        this.#folder = true;\r\n        this.#children ??= [];\r\n        this.#children.push(newOne);\r\n        return newOne;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method and Array.prototype.push() \r\n     * to add a new Tree to the tree.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    insert(parentNodeKey, key, value = key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === parentNodeKey) {\r\n                const newOne = new Tree(key, value, node);\r\n                this.#folder = true;\r\n                this.#children ??= [];\r\n                node.#children.push(newOne);\r\n                return newOne;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove node from tree. If key is set, will search for first node with matching key.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n\r\n        const me = this;\r\n\r\n        if (key) {\r\n            const node = me.findByKey(key);\r\n            node?.remove();\r\n            return node;\r\n        }\r\n\r\n        if (me.isRoot) throw new Error('Root node can\\'t be removed!');\r\n        const node = me.parent;\r\n        const filtered = node.#children.filter(c => c !== me);\r\n        if (filtered.length !== node.#children.length) {\r\n            node.#children = filtered;\r\n            return me;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method to retrieve the given node in the tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    findByKey(key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convert tree into array list\r\n     * @returns \r\n     */\r\n    flatten(values, inclusive, reverse) {\r\n        return [...this.down(this, values, inclusive, reverse)];\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) Tree.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.#children?.map(o => o.toJSON()) || {};\r\n        return this.isLeaf ? { key: this.key, value: this.value } :\r\n            {\r\n                key: this.key,\r\n                value: this.value,\r\n                items: this.#children.map(o => o.toJSON())\r\n            };\r\n    }\r\n\r\n    /**\r\n     * Make node iterable\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.down();\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof Tree;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) throw new Error('Parent required when data is array');\r\n            raw.forEach(o => Tree.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        const tree = new Tree(obj.key, obj, data ? parent : undefined);\r\n        if (hasParent) parent.append(tree);\r\n        if (items) Tree.from(tree, items);\r\n        return tree;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    /**\r\n     * Reset the registry\r\n     */\r\n    resetRegistry() {\r\n        this.#handlers.clear();\r\n        this.#map.clear();\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../base/GSID.mjs\";\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynamic menu etc.\r\n * @Class\r\n */\r\nexport class GSAbstractReadWrite extends GSEvent {\r\n\r\n    static #SELECT = Symbol('select');\r\n\r\n    #id = null;\r\n    #processors = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to register\r\n     * @param {object} processor\r\n     */\r\n    addProcessor(processor) {\r\n        if (!processor) return;\r\n        this.#processors ??= new Set();\r\n        this.#processors.add(processor);\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to remove\r\n     * @param {object} processor \r\n     */    \r\n    removeProcessor(processor) {\r\n        if (processor) this.#processors?.delete(processor);\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Generic event dispatcher, can be overriden to controll when to fire event\r\n     * @param {*} owner \r\n     * @param {*} type \r\n     * @param {*} data \r\n     * @param {*} error \r\n     */\r\n    notify(owner, type, data, error) {\r\n        this.emit(error ? 'error' : type, { type: type, error: error, owner: owner, data: data }, true);\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.#processors?.forEach(c => c.postRead?.(data));\r\n            if (data) me.notify(owner, 'read', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'read', data, e);\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.#processors?.forEach(c => c.postWrite?.(data));\r\n            if (result) me.notify(owner, 'write', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'write', data, e);\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        if (!val) return false;\r\n        GSUtil.asArray(val).forEach(o => o[GSAbstractReadWrite.#SELECT] = true);\r\n        const me = this;\r\n        me.emit('selection-add', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        if (!val) return false;\r\n        delete val[GSAbstractReadWrite.#SELECT];\r\n        const me = this;\r\n        me.emit('selection-remove', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        const me = this;\r\n        GSUtil.asArray(data).forEach(o => me.removeSelected(o));\r\n        me.emit('selection-clear');\r\n        me.emit('select');\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    getSelected(data = []) {\r\n        const me = this;        \r\n        return GSUtil.asArray(data).filter(o => me.isSelected(o));\r\n    }\r\n\r\n    /**\r\n     * Check if record id is in list of selected records\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    isSelected(val) {\r\n        return val ? val[GSAbstractReadWrite.#SELECT] === true : false;\r\n    }\r\n\r\n    /**\r\n     * Get list of selected records.\r\n     * Override in inherited class\r\n     */\r\n    get selected() {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n    /**\r\n     * Reset the abstract read/write handler\r\n     */\r\n    reset() {\r\n        this.#processors = null;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"../base/GSFunction.mjs\";\r\nimport { GSLoader } from \"../base/GSLoader.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSAbstractReadWrite } from \"./AbstractReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #TYPE = \"remote\";\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #key = null;\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically register in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */\r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */\r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return { ...this.#headers };\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = { ...val };\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     */\r\n    get key() {\r\n        return this.#key;\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     * @var {String} \r\n     */\r\n    set key(val) {\r\n        this.#key = val;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */\r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#filter = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#sort = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest', 'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#writer);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Reset the read/write handler\r\n     */\r\n    reset() {\r\n        this.#src = '';\r\n        this.#headers = {};\r\n        this.#reader = 'GET';\r\n        this.#writer = 'POST';\r\n        this.#action = '';\r\n        this.#mode = '';\r\n        this.#key = null;\r\n        this.#skip = 0;\r\n        this.#limit = 0;\r\n        this.#sort = [];\r\n        this.#filter = [];\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSReadWrite.#TYPE, GSReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSData } from \"../base/GSData.mjs\";\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSCachedReadWrite class\r\n * @module base/GSCachedReadWrite\r\n */\r\n\r\n/**\r\n * ReadWrite with cached memory data. \r\n * @Class\r\n */\r\nexport class GSCachedReadWrite extends GSReadWrite {\r\n\r\n    static #TYPE = 'cached';\r\n\r\n    #data = [];\r\n\r\n    #reformat(data = []) {\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        return records;\r\n    }\r\n\r\n    #postFilter(data) {\r\n        const me = this;\r\n        data = GSData.sortData(data, me.sort);        \r\n        let limit = me.limit === 0 ? data.length : me.limit;\r\n        data = data.slice(me.skip, me.skip + limit);\r\n        return data;\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelected(this.#data);\r\n        this.#data = [];\r\n    }\r\n\r\n    append(data) {\r\n        if(!data) return false;\r\n        const me = this;\r\n        data = me.#reformat(data);\r\n        me.#data = me.#data.concat(data);\r\n        return me.#data;\r\n    }\r\n\r\n    remove(data) {\r\n        const me = this;\r\n        me.removeSelected(data);\r\n        me.#data = me.#data.filter(o => o =! data);\r\n        return me.#data;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n\r\n        if (me.#data.length === 0) {\r\n            const data = await super.onRead();\r\n            me.#data = me.#reformat(data);\r\n        }\r\n\r\n        let data = GSData.filterData(me.#data, me.filter, me.fields, me.limit);\r\n        data = me.#postFilter(data);\r\n        return data;\r\n    }\r\n\r\n    async onWrite(owner, data) {\r\n        return this.append(data);        \r\n    }\r\n\r\n    disable() {\r\n        this.#data = [];\r\n        super.disable();\r\n    }\r\n\r\n    set search(val) {\r\n        const me = this;\r\n        me.filter = val ? [{value : val}] : [];\r\n        me.read();\r\n        /*\r\n        let data = GSData.filterData(me.#data, [{value : val}]);\r\n        data = me.#postFilter(data);\r\n        me.notify(me, 'read', data);\r\n        */\r\n    }\r\n\r\n    clearSelected() {\r\n        return super.clearSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return super.getSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSCachedReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Reset the cached read/write handler\r\n     */\r\n    reset() {\r\n        this.clear();\r\n        super.reset();\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSCachedReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSCachedReadWrite.#TYPE, GSCachedReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { Tree } from \"../helpers/Tree.mjs\";\r\n\r\n/**\r\n * A module loading TreeNode class\r\n * @module data/TreeNode\r\n */\r\n\r\n/**\r\n * UI mediator between Tree linked nodes and WebComponents\r\n * @Class\r\n */\r\nexport class TreeNode extends Tree {\r\n\r\n    #multi = false;\r\n    #opened = false;\r\n    #focused = false;\r\n    #selected = false;\r\n    \r\n    #focusedNode = undefined;\r\n    #selectedNode = undefined;\r\n    #controllers = undefined;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        super(key, value, parent, level);\r\n\r\n        if (value?.select === true || (this.multi && parent?.selected)) this.selected = true;\r\n        if (value?.focus === true) this.focused = true;\r\n        if (value?.open === true) this.opened = true;\r\n    }\r\n\r\n    addController(controller) {\r\n        const root = this.root;\r\n        (root.#controllers ??= new Set()).add(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.root.#controllers?.delete(controller);\r\n    }\r\n\r\n    /**\r\n     * Is multi selection available\r\n     */\r\n    get multi() {\r\n        return this.root.#multi === true;\r\n    }\r\n\r\n    set multi(val) {\r\n        this.root.#multi = val === true;\r\n    }\r\n\r\n    get visible() {\r\n        if (this.level < 0) return true;\r\n        return this.parent?.opened;\r\n    }\r\n\r\n    /**\r\n     * select single node, removing seelction flag from all other nodes\r\n     */\r\n    get opened() {\r\n        if (this.level < 0) return true;\r\n        return this.isLeaf ? this.parent?.opened : this.#opened;\r\n    }\r\n\r\n    set opened(val) {\r\n        val = val === true;\r\n        if (val) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus single node, removing focus flag from all other nodes\r\n     */\r\n    get focused() {\r\n        return this.#focused;\r\n    }\r\n\r\n    set focused(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const changed = this.#focused != val;\r\n        const focusedNode = root.focusedNode();\r\n        \r\n        root.#focusedNode = undefined;        \r\n        this.#focused = val;\r\n        if (focusedNode && focusedNode !== this) {\r\n            focusedNode.focused = false;\r\n        }\r\n\r\n        if (val) root.#focusedNode = this;\r\n        if (changed) root.#controllers?.forEach((c) => c.onFocusChanged?.(this));\r\n    }\r\n\r\n    /**\r\n     * Select single or multi node, depending on multi selection flag\r\n     * If single, remove selection flag from all other nodes\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    set selected(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const selectedNode = root.selectedNode();\r\n        const changed = this.#selected != val;\r\n        this.#selected = val;\r\n        if (val) {\r\n            if (selectedNode && selectedNode !== this && !root.multi) {\r\n                selectedNode.selected = false;\r\n            }\r\n            root.#selectedNode = this;\r\n        }\r\n        if (changed) {\r\n            root.#controllers?.forEach((c) => c.onSelectionChanged?.(this, selectedNode));\r\n            if (root.multi) root.#controllers?.forEach((c) => c.onSelectionChanged?.(this.parent, selectedNode));\r\n        } \r\n    }\r\n\r\n    get isPartialySelected() {\r\n        return this.selected && this.hasChildren && this.nodes.length > this.nodes.filter(n => n.selected).length;\r\n    }\r\n\r\n    /* hide from public\r\n    get host() {\r\n        return this[Symbol.for('gs-element')];\r\n    }\r\n\r\n    set host(el) {\r\n        this[Symbol.for('gs-element')] = el;\r\n    }\r\n    */\r\n\r\n    selectAll() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            this.deselectAll();\r\n            this.selected = true;\r\n            return\r\n        }\r\n        this.#selectionFlag(true);\r\n        root.#selectedNode = this;\r\n        root.#controllers?.forEach((c) => c.onSelectAll?.(root));\r\n    }\r\n\r\n    deselectAll() {\r\n        const root = this.root;\r\n        this.#selectionFlag(false);\r\n        root.#selectedNode = undefined;\r\n        root.#controllers?.forEach((c) => c.onDeselectAll?.(root));\r\n    }\r\n\r\n    /**\r\n     * Return last focused node\r\n     * @returns \r\n     */\r\n    focusedNode() {\r\n        const node = this.root.#focusedNode;\r\n        return node?.focused ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * Return last selected node\r\n     * @returns \r\n     */\r\n    selectedNode() {\r\n        const node = this.root.#selectedNode;\r\n        return node?.selected ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * List all selected nodes.\r\n     * TODO; refactor when Iterator.filter become available \r\n     * @returns \r\n     */\r\n    selectedNodes() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            const node = root.selectedNode()\r\n            return node?.selected ? [node] : [];\r\n        }\r\n        const result = [];\r\n        for (let node of root.walk()) {\r\n            if (node.selected) result.push(node);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Call from external controller data must be refresshed (to notify UI optionally)\r\n     * @param {*} root \r\n     */\r\n    refresh(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onRefresh?.(this));\r\n    }\r\n\r\n    /**\r\n     * Notify controllers about data loading (from async controller)\r\n     * @param {*} root \r\n     */\r\n    loading(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onLoad?.(this));\r\n    }\r\n\r\n    expandAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.expand(root);\r\n        }\r\n    }\r\n\r\n    collapseAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.collapse(root);\r\n        }\r\n    }\r\n\r\n    expand(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        if (!me.parent?.opened) {\r\n            me.parent?.expand(root);\r\n        }\r\n        const update = !me.opened;\r\n        me.#opened = true;\r\n        if (update) me.#expanded(root);\r\n        //me.nodes?.filter( n => !n.opened).forEach(c => c.refresh(root));\r\n        me.nodes?.forEach(c => c.refresh(root));\r\n    }\r\n\r\n    collapse(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        const update = me.#opened || me.parent.#opened;\r\n        me.nodes?.filter(n => n.opened || n.parent.opened).forEach(o => o.collapse(root));\r\n        //me.nodes?.forEach(o => o.collapse(root));\r\n        me.#opened = false;\r\n        if (update) me.#collapsed(root);\r\n    }\r\n\r\n    select(val = true) {\r\n        this.selected = val === true;\r\n    }\r\n\r\n    #expanded(root) {\r\n        root.#controllers?.forEach((c) => c.onExpand?.(this));\r\n    }\r\n\r\n    #collapsed(root) {\r\n        root.#controllers?.forEach((c) => c.onCollapse?.(this));\r\n    }\r\n\r\n    release() {\r\n        if (this.#selected) this.selected = false;\r\n        super.release();\r\n    }\r\n\r\n    append(key, value = key) {\r\n        const me = this;\r\n        const node = super.append(key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onAppend?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    insert(parentNodeKey, key, value = key) {\r\n        const me = this;\r\n        const node = super.insert(parentNodeKey, key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onInsert?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    remove() {\r\n        const node = super.remove();\r\n        if (node) this.root.#controllers?.forEach((c) => c.onInsert?.(node));\r\n        return node;\r\n    }\r\n\r\n    #selectionFlag(val = false) {\r\n        val = val === true\r\n        for (let node of this.walk()) {\r\n            node.selected = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) TreeNode.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.nodes?.map(o => o.toJSON()) || {};\r\n        const obj = Object.assign({\r\n            key: this.key,\r\n            opened: this.#opened,\r\n            focused: this.#focused,\r\n            selected: this.#selected,\r\n            items: undefined\r\n        }, this.value);\r\n        obj.items = this.nodes?.map(o => o.toJSON());\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Reset the tree node\r\n     */\r\n    reset() {\r\n        this.#multi = false;\r\n        this.#opened = false;\r\n        this.#focused = false;\r\n        this.#selected = false;\r\n        this.#focusedNode = undefined;\r\n        this.#selectedNode = undefined;\r\n        this.#controllers = undefined;\r\n    }\r\n\r\n    static get root() {\r\n        return new TreeNode(null, null, null, -1);\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof TreeNode;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) return TreeNode.from(TreeNode.root, raw);\r\n            raw.forEach(o => TreeNode.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        obj.leaf = !Array.isArray(items);\r\n        const tree = new TreeNode(obj.key, obj, data ? parent : undefined);\r\n        if (items) TreeNode.from(tree, items);\r\n        if (hasParent) parent.append(tree);\r\n        return tree;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { TreeNode } from \"./TreeNode.mjs\";\r\n\r\n/**\r\n * A module loading GSTreeReader class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for reading Tree nodes\r\n * @Class\r\n */\r\nexport class GSTreeReader extends GSReadWrite {\r\n\r\n    #data = TreeNode.root;\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    async write(val) {\r\n        throw new Error('Writer not available for TreeReader')\r\n    }\r\n\r\n    async read(owner) {\r\n        const me = this;\r\n        let node = undefined;\r\n        const data = await super.read(owner);\r\n        if (!this.#data) {\r\n            node = TreeNode.from(data);\r\n            this.#data = node;\r\n        } else {\r\n            const parent = me.filter?.length > 0 ? me.#data.findByKey(me.filter[0]) : me.#data;\r\n            parent.clear();\r\n            node = parent.fromJSON(data);\r\n        }\r\n        me.filter = undefined;\r\n        me.notify(owner, 'read', node);\r\n        return node;\r\n    }\r\n\r\n    disable() {\r\n        super.disable();\r\n        this.#data?.release();\r\n    }\r\n\r\n    notify(owner, type, data, error) {\r\n        const isNode = data instanceof TreeNode;\r\n        if (!error && !isNode && type === 'read') return;\r\n        super.notify(owner, type, data, error);\r\n    }\r\n\r\n    /**\r\n     * Called from Tree when node is expanded \r\n     * @param {*} node \r\n     */\r\n    async onExpand(node) {\r\n        if (node.hasChildren) return;\r\n        node.loading();\r\n        this.filter = node.key;\r\n        return await this.read();\r\n    }\r\n\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    /**\r\n     * Reset the tree data\r\n     */\r\n    resetData() {\r\n        this.#data = TreeNode.root;\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSTreeReader} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSTreeReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('tree', GSTreeReader);\r\n    }\r\n\r\n}","// Lit 3.0 Google\r\nconst litUrl = globalThis.GS_LIT_URL || '/bootstrap-lit/assets/lib/lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const Directive = litModule.Directive;\r\nexport const LitElement = litModule.LitElement;\r\nexport const PartType = litModule.PartType;\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const adoptStyles = litModule.adoptStyles;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const createRef = litModule.createRef;\r\nexport const css = litModule.css;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const directive = litModule.directive;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getCompatibleStyle = litModule.getCompatibleStyle;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const guard = litModule.guard;\r\nexport const html = litModule.html;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isServer = litModule.isServer;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const literal = litModule.literal;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const noChange = litModule.noChange;\r\nexport const notEqual = litModule.notEqual;\r\nexport const nothing = litModule.nothing;\r\nexport const range = litModule.range;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const render = litModule.render;\r\nexport const repeat = litModule.repeat;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const staticHtml = litModule.staticHtml;\r\nexport const staticSvg = litModule.staticSvg;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const svg = litModule.svg;\r\nexport const templateContent = litModule.templateContent;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const unsafeStatic = litModule.unsafeStatic;\r\nexport const until = litModule.until;\r\nexport const when = litModule.when;\r\nexport const withStatic = litModule.withStatic;","import { Directive, directive, nothing } from \"../lib.mjs\";\r\n\r\nconst definition = {\r\n    'action': 'gsAction',\r\n    'anchor': 'gsAnchor',\r\n    'attribute': 'gsAttribute',\r\n    'call': 'gsCall',\r\n    'exec': 'gsExec',\r\n    'inject': 'gsInject',\r\n    'property': 'gsProperty',\r\n    'swap': 'gsSwap',\r\n    'target': 'gsTarget',\r\n    'template': 'gsTemplate',\r\n    'toggle': 'gsToggle',\r\n    'trigger': 'gsTrigger',\r\n    'value': 'gsValue'\r\n};\r\n\r\nconst template = {\r\n    'gsAction': undefined,\r\n    'gsAnchor': undefined,\r\n    'gsAttribute': undefined,\r\n    'gsCall': undefined,\r\n    'gsExec': undefined,\r\n    'gsInject': undefined,\r\n    'gsProperty': undefined,\r\n    'gsSwap': undefined,\r\n    'gsTarget': undefined,\r\n    'gsTemplate': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTrigger': undefined,\r\n    'gsValue': undefined\r\n};\r\n\r\nclass DatasetDirective extends Directive {\r\n\r\n    render(obj) {\r\n        console.log(obj);\r\n        return nothing;\r\n    }\r\n\r\n    update(part, [obj, flat = true]) {\r\n\r\n        if (!obj) return nothing;\r\n\r\n        const dataset = part.element.dataset;\r\n        const srcset = obj.dataset || obj;\r\n        const isDataset = srcset instanceof DOMStringMap;\r\n\r\n        if (isDataset) {\r\n            Object.assign(dataset, srcset);\r\n        } \r\n        \r\n        if (flat) this.#remap(dataset, obj);\r\n\r\n        return nothing;\r\n    }\r\n\r\n    #remap(dataset, obj) {\r\n        const opt = Object.assign({}, template);\r\n        const list = Object.entries(obj).filter(v => Object.hasOwn(definition, v[0]));\r\n        if (list.length > 0) {\r\n            list.forEach(kv => opt[definition[kv[0]]] = kv[1]);\r\n            Object.assign(dataset, opt);\r\n        }\r\n    }\r\n}\r\n\r\nexport const dataset = directive(DatasetDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\n\r\n/**\r\n * Generic object property descriptor getter\r\n * @param {Object} instance \r\n * @returns {PropertyDescriptor}\r\n */\r\nfunction descriptors(instance) {\r\n  return Object.entries(Object.getOwnPropertyDescriptors(instance));\r\n}\r\n\r\n/**\r\n * List of all object property descriptors \r\n * @param {Object} instance Object instance \r\n * @returns {Array<PropertyDescriptor>}\r\n */\r\nfunction listProperties(instance) {\r\n  return descriptors(instance)\r\n    .filter(e => typeof e[1].value !== 'function')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List all object property getters\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGetters(instance) {\r\n  return descriptors(Reflect.getPrototypeOf(instance))\r\n    .filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List of all gettable properties from an object\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGettable(instance) {\r\n  return new Set([...listGetters(instance), ...listProperties(instance)]);\r\n}\r\n\r\n/**\r\n * Parse string literal template into Lit html instance\r\n * @param {*} tpl \r\n * @param {*} params \r\n * @returns {function}\r\n */\r\nexport function literalTemplate(tpl, params) {\r\n  const names = Array.from(listGettable(params));\r\n  const vals = names.map(v => params[v]);\r\n  names.push('html');\r\n  vals.push(html);\r\n  return new Function(...names, `return html\\`${tpl}\\`;`)(...vals);\r\n}","/**\r\n * A clone of classMap directive to support CSS directive.\r\n * Lit classs is not expoed, so we have to clone it and create our own.\r\n */\r\n\r\nimport { Directive, PartType, directive, noChange } from \"../lib.mjs\";\r\n\r\nclass CssMapDirective extends Directive {\r\n\r\n    constructor(partInfo) {\r\n        super(partInfo);\r\n        if (partInfo.type !== PartType.ATTRIBUTE ||\r\n            partInfo.name !== 'css' ||\r\n            partInfo.strings?.length > 2) {\r\n            throw new Error('`classMap()` can only be used in the `css` attribute ' +\r\n                'and must be the only part in the attribute.');\r\n        }\r\n    }\r\n\r\n    render(classInfo) {\r\n        // Add spaces to ensure separation from static classes\r\n        return (' ' +\r\n            Object.keys(classInfo)\r\n                .filter((key) => classInfo[key])\r\n                .join(' ') +\r\n            ' ');\r\n    }\r\n\r\n    update(part, [classInfo]) {\r\n\r\n        // Remember dynamic classes on the first render\r\n        if (this._previousClasses === undefined) {\r\n            this._previousClasses = new Set();\r\n            if (part.strings !== undefined) {\r\n                this._staticClasses = new Set(part.strings\r\n                    .join(' ')\r\n                    .split(/\\s/)\r\n                    .filter((s) => s !== ''));\r\n            }\r\n\r\n            for (const name in classInfo) {\r\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\r\n                    this._previousClasses.add(name);\r\n                }\r\n            }\r\n            return this.render(classInfo);\r\n        }\r\n\r\n        const classList = part.element.classList;\r\n\r\n        // Remove old classes that no longer apply\r\n        for (const name of this._previousClasses) {\r\n            if (!(name in classInfo)) {\r\n                classList.remove(name);\r\n                this._previousClasses.delete(name);\r\n            }\r\n        }\r\n\r\n        // Add or remove classes based on their classMap value\r\n        for (const name in classInfo) {\r\n            // We explicitly want a loose truthy check of `value` because it seems\r\n            // more convenient that '' and 0 are skipped.\r\n            const value = !!classInfo[name];\r\n            if (value !== this._previousClasses.has(name) &&\r\n                !this._staticClasses?.has(name)) {\r\n                if (value) {\r\n                    classList.add(name);\r\n                    this._previousClasses.add(name);\r\n                } else {\r\n                    classList.remove(name);\r\n                    this._previousClasses.delete(name);\r\n                }\r\n            }\r\n        }\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * A directive that applies dynamic CSS classes.\r\n *\r\n * This must be used in the `css` attribute and must be the only part used in\r\n * the attribute. It takes each property in the `classInfo` argument and adds\r\n * the property name to the element's `classList` if the property value is\r\n * truthy; if the property value is falsey, the property name is removed from\r\n * the element's `css`.\r\n *\r\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\r\n * truthy.\r\n *\r\n * @param classInfo\r\n */\r\nexport const cssMap = directive(CssMapDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocapitalizeTypes = ['', 'none', 'off', 'on', 'sentences', 'words', 'characters'];\r\n\r\nexport const autocapitalize = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocapitalizeTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocompleteTypes = ['', 'off', 'on'];\r\n\r\nexport const autocomplete = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocompleteTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocorrectTypes = ['', 'on', 'off'];\r\n\r\nexport const autocorrect = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocorrectTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class ButtonTypes {\r\n\r\n    static values = ['button', 'reset', 'submit'];\r\n\r\n    static is(val) {\r\n        return ButtonTypes.values.includes(val);\r\n    }\r\n\r\n    static isReset(val) {\r\n        return ButtonTypes.values.indexOf(val) === 1;\r\n    }\r\n\r\n    static isSubmit(val) {\r\n        return ButtonTypes.values.indexOf(val) === 2;\r\n    }\r\n} \r\n\r\nexport const buttonType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ButtonTypes.is(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ColorTypes = ['', 'primary', 'secondary', 'dark', 'light', 'info', 'warning', 'danger', 'alert', 'link', 'success'];\r\n\r\nexport const color = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ColorTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'desktop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const InputTypes = [\r\n   { type: 'checkbox', ignore: true},\r\n   { type: 'radio', ignore: true},\r\n   { type: 'switch', ignore: true},\r\n   { type: 'range', ignore: true},\r\n   { type: 'number', native: true},\r\n   { type: 'email', native: true},\r\n   { type: 'url',  native: true},\r\n   { type: 'file', native: true}, \r\n   { type: 'text'},\r\n   { type: 'password'}\r\n];\r\n\r\nexport const inputType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && InputTypes.filter(o => o.type === newVal).length === 1;\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const NavTypes = ['', 'pills', 'tabs', 'underline'];\r\n\r\nexport const nav = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && NavTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val);\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val);\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PlacementTypes {\r\n\r\n    static values = ['center', 'left', 'right', 'start', 'end', 'top', 'bottom'];\r\n\r\n    static includes(val) {\r\n        return PlacementTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        return PlacementTypes.values.indexOf(val) > 4;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = PlacementTypes.values.indexOf(val)\r\n        return idx > 0 && idx < 5;\r\n    }\r\n\r\n    static isCenter(val) {\r\n        return PlacementTypes.values.indexOf(val) === 0;\r\n    }\r\n\r\n    static isBefore(val) {\r\n        return ['left', 'start', 'top'].includes(val);\r\n    }\r\n\r\n    static isAfter(val) {\r\n        return ['right', 'end', 'bottom'].includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const placement = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PlacementTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PositionTypes {\r\n\r\n    static values = ['absolute', 'fixed', 'relative', 'sticky', 'static'];\r\n\r\n    static includes(val) {\r\n        return PositionTypes.values.includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const position = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PositionTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const SizeTypes = { 'default' : '', 'normal': '',  'medium': '', 'small': 'sm', 'large': 'lg', 'big' : 'lg', 'extra' : 'xl' };\r\n\r\nexport const size = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && Object.hasOwn(SizeTypes, newVal);\r\n    }\r\n\r\n};","export const stringArrayConverter = {\r\n    fromAttribute: (value, type) => {\r\n        return (value || '').split(',');\r\n    },\r\n    toAttribute: (value, type) => {\r\n        return (value || []).join(',');\r\n    }\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCacheStyles } from '../base/GSCacheStyles.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time even gs-adopted is triggered by the GSAdoptedEngien class,\r\n * all registerd controller will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to preven dom node polution; \r\n * Style  changes  are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me.#host);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values, isGlobal = false) {\r\n    const me = this;\r\n    let style = null;\r\n    if (isGlobal) {\r\n      style = GSCacheStyles.dynamic;\r\n    } else {\r\n      me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');      \r\n      style = me.#dynamic;\r\n    }    \r\n    if (values === null && style.rules.length > 0 ) return style.removeRule(name);\r\n    return style.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.detach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (!me.#isSelf() && me.#target) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs).forEach(el => el?.remove());\r\n      me.#refs.clear();\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n  #selectCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#selectCallback = me.#onSelect.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async relink(read = true) {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#listen(read);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.filter = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get selected() {\r\n    return this.store?.selected;\r\n  }\r\n\r\n  isSelected(val) {\r\n    return this.store?.isSelected(val);\r\n  }\r\n\r\n  addSelected(val) {\r\n    return this.store?.addSelected(val);\r\n  }\r\n  \r\n  removeSelected(val) {\r\n    return this.store?.removeSelected(val);\r\n  }\r\n\r\n  clearSelected(data) {\r\n    return this.store?.clearSelected(data);\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    storage?.on('read', me.#readCallback);\r\n    storage?.on('write', me.#writeCallback);\r\n    storage?.on('error', me.#errorCallback);\r\n    storage?.on('select', me.#selectCallback);\r\n    if (read) storage.read(me.#host);\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    storage?.off('read', me.#readCallback);\r\n    storage?.off('write', me.#writeCallback);\r\n    storage?.off('error', me.#errorCallback);\r\n    storage?.off('select', me.#selectCallback);\r\n  }\r\n\r\n  #onSelect(e) {\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for elment move events, properly handling mouse events.\r\n */\r\nexport class ElementMoveController {\r\n\r\n  #host;\r\n  #element;\r\n  #attached = false;\r\n\r\n  #cursorX = 0;\r\n  #cursorY = 0;\r\n\r\n  #mouseUpCallback;\r\n  #mouseDownCallback;\r\n  #mouseMoveCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n    me.#mouseUpCallback = me.#onMouseUp.bind(me);\r\n    me.#mouseDownCallback = me.#onMouseDown.bind(me);\r\n    me.#mouseMoveCallback = me.#onMouseMove.bind(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  attach(element) {\r\n    const me = this;\r\n    if (!me.#attached) {\r\n      me.#element = element;\r\n      me.#attached = true;\r\n      me.#host.attachEvent(me.#element, 'mousedown', me.#mouseDownCallback);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.#cursorX = 0;\r\n    me.#cursorY = 0;\r\n    me.#host.removeEvent(document, 'mouseup', me.#mouseUpCallback);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n  * Call host onStartMove function\r\n  * @param {MouseEvent} e \r\n  */\r\n  #onMouseDown(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n    me.#host.onStartMove?.(e, me.#cursorX, me.#cursorY);\r\n    me.#host.attachEvent(document, 'mouseup', me.#mouseUpCallback, true);\r\n    me.#host.attachEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n   * Remove mousemove listener and call host onEndMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseUp(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n    return me.#host.onEndMove?.(e, me.#cursorX, me.#cursorY);\r\n  }\r\n\r\n  /**\r\n   * Call host onMouseMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseMove(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n\r\n    me.#host.onMouseMove?.(e, me.#cursorX, me.#cursorY);\r\n\r\n    if (me.#cursorX < e.clientX) {\r\n      me.#host.onCursorRight?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorX > e.clientX) {\r\n      me.#host.onCursorLeft?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    if (me.#cursorY < e.clientY) {\r\n      me.#host.onCursorUp?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorY > e.clientY) {\r\n      me.#host.onCursorDown?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #language;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#language = host.language;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#language !== me.#host?.language) {\r\n      me.#language === me.#host?.language;\r\n      me.updateLanguage(me.#language);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#language) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n  static #cache = new Map();\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  // inherited\r\n  hostConnected() {\r\n\r\n  }\r\n\r\n  // inherited\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  // inherited\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#template) return;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      me.#template = TemplateController.#cache.get(ref);      \r\n      me.#lastRef = ref;\r\n      if (ref && !me.#template) TemplateController.#schedule(this);\r\n    }\r\n  }\r\n\r\n  // inherited\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (me.#template) {\r\n      this.#host.removeController(this);\r\n      me.#host.templateInjected?.();\r\n    } \r\n\r\n  }\r\n\r\n  async #load() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (!ref) return;\r\n    let template = null;\r\n    const isTplEl = ref instanceof HTMLTemplateElement;\r\n    const cacheable = GSUtil.isString(ref);\r\n    if (cacheable) {\r\n      template = TemplateController.#cache.get(ref);\r\n    }\r\n    if (!template) {\r\n      template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n      if (cacheable) {\r\n        TemplateController.#cache.set(ref, template);\r\n      }       \r\n    }\r\n    if (template) {\r\n      me.#template = template;\r\n      me.#host.requestUpdate();\r\n    }\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    return GSDOM.templateRef(this.#host);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = false));\r\n    }\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle event when template slot changes\r\n */\r\nexport class SlotController {\r\n\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      const me = this;\r\n      const target = me.#host.renderRoot || me.#host;\r\n      me.#host.attachEvent(target, 'slotchange', me.#onSlotChanged.bind(me));\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    #onSlotChanged(e) {\r\n      if (typeof e.target.assignedElements === 'function') {\r\n        e.target.assignedElements().forEach(el => {\r\n          el.onSlotInjected?.(e.target);\r\n        });\r\n      }\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\nimport { SlotController } from './controllers/SlotController.mjs';\r\nimport { GSAttributeHandler } from './base/GSAttributeHandler.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    language: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n  #orientation;\r\n  #localization;\r\n  #dataController;\r\n  #slotController;\r\n  #themes\r\n  #template;\r\n  #content;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.language = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    //me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n    me.#slotController = new SlotController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    const tpl = GSDOM.templateRef(me);\r\n    if (tpl) me.#template = new TemplateController(me);    \r\n    if (me.isBindable) me.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.detachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('storage')) {\r\n      if (me.storage) {\r\n        me.#dataController ??= new DataController(me);\r\n        me.#dataController.relink?.();\r\n      } else {\r\n        me.#dataController?.hostDisconnected();\r\n        me.#dataController = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when this element injected in some slot\r\n   * @param {*} slot \r\n   */\r\n  onSlotInjected(slot) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return this.renderTemplate();\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : noChange;\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Called when asynchronnous template is injected into component\r\n   */\r\n  templateInjected() {\r\n    \r\n\t}\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to witch to add parsed CSS\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @param {boolean} isGlobal \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value, isGlobal = false) {\r\n    return this.#adopted.style(id, value, isGlobal);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @param {Number} levels - walk limit\r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '', levels = -1) {\r\n    return GSDOM.closest(this, query, levels);\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.language, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    //return this.dataset.gsTarget;\r\n    return GSAttributeHandler.isBindable(this);\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template?.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment ?? '');\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol ?? '');\r\n  }\r\n\r\n  /**\r\n   * Internal attribute set if component is genrated by other components\r\n   */\r\n  get isGenerated() {\r\n    return this.hasAttribute('generated');\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Get instance of internal styles\r\n   */\r\n  get elementStyles() {\r\n    return this.constructor.elementStyles.map(s => Object.values(s).filter(o => o instanceof CSSStyleSheet).pop()).pop();\r\n  }\r\n\r\n  /**\r\n   * Internal shadow styles rule\r\n   * @param {*} name \r\n   * @returns \r\n   */\r\n  cssRule(name) {\r\n    return Array.from(this.elementStyles.rules).filter(r => r.selectorText === name).pop();\r\n  }\r\n\r\n  /**\r\n   * Set dynamic CSS rule \r\n   * See GSIcon hot it is done\r\n   * @param {*} rule \r\n   * @param {*} name \r\n   * @param {*} value \r\n   */\r\n  setCSSProperty(rule, name, value) {\r\n    this.cssRule(rule).style.setProperty(name, value);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    return GSDOM.allProperties(obj);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, opt);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from \"../GSElement.mjs\";\r\n\r\n/**\r\n * Controller for child element navigation / selection / focusing\r\n */\r\nexport class ElementNavigationController {\r\n\r\n  #host;\r\n  #attached;\r\n  #focused;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#attached = false;\r\n  }\r\n\r\n  get circular() {\r\n    return this.#host?.circular === true;\r\n  }\r\n\r\n  get multiple() {\r\n    return this.#host?.multiple === true;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host.active;\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */\r\n  init() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */  \r\n  attach(el) {\r\n    const me = this;\r\n    if (me.#attached) return;\r\n    me.#attached = true;\r\n    me.#host.attachEvent(el, 'keydown', e => me.onKeyDown(e));\r\n    me.#host.attachEvent(el, 'keyup', e => me.onKeyUp(e));\r\n    me.#host.attachEvent(el, 'click', e => me.onClick(e));\r\n    me.#host.attachEvent(el, 'focusin', e => me.onFocusIn(e));\r\n    me.#host.attachEvent(el, 'focusout', e => me.onFocusOut(e));\r\n  }\r\n\r\n  previous() {\r\n    const me = this;\r\n    let el = me.#focused?.previousElementSibling;\r\n    while (el?.disabled) el = el.previousElementSibling;\r\n    if (me.circular && !el) el = me.lastElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  next() {\r\n    const me = this;\r\n    let el = me.#focused?.nextElementSibling;\r\n    while (el?.disabled) el = el.nextElementSibling;\r\n    if (me.circular && !el) el = me.firstElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    const me = this;\r\n    const active = me.selected;\r\n    if (me.multiple) {\r\n      active.forEach(el => {\r\n        el.active = false;\r\n        el.blur();\r\n      });\r\n    } else if (active) {\r\n      active.active = false;\r\n      active.blur();\r\n    }\r\n    me.#focused = undefined;\r\n    me.#host?.emit('group-reset', undefined, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element selected\r\n   * @param {*} el \r\n   */\r\n  #onSelected(el) {\r\n    const me = this;\r\n    me.#host?.onSelected?.(el);\r\n    me.#host?.emit('group-selected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element deselected\r\n   * @param {*} el \r\n   */\r\n  #onDeselected(el) {\r\n    this.#host?.onDeselected?.(el);\r\n    this.#host?.emit('group-deselected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  #onFocused(el) {\r\n    this.#host?.onFocused?.(el);\r\n    this.#host?.emit('group-focused', el, true);\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  #isNavigable(el) {\r\n    return this.#host?.isNavigable ? this.#host?.isNavigable(el) : true;\r\n  }\r\n\r\n  #focus(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    me.#focused = el;\r\n    if (el) {\r\n      me.#onFocused(me.#focused);\r\n    }\r\n  }\r\n\r\n  #toggle(el) {\r\n    if (!el) return;\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    if (el.active) {\r\n      me.#onSelected(el);\r\n    } else {\r\n      me.#onDeselected(el);\r\n    }\r\n  }\r\n\r\n  #select(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n\r\n    const active = me.selected;\r\n    if (active && !me.multiple) {\r\n      active.active = false;\r\n      me.#toggle(active);\r\n    }\r\n\r\n    if (me.multiple) {\r\n      el.active = !el.active;\r\n    } else {\r\n      el.active = true;\r\n    }\r\n    me.#toggle(el);\r\n  }\r\n\r\n  onFocusOut(e) {\r\n    const me = this;\r\n    //if (me.#focused === e.target) me.#focused = undefined;\r\n  }\r\n\r\n  onFocusIn(e) {\r\n    if (!e.target.isNav) return;\r\n    const me = this;\r\n    if(e.relatedTarget?.isNav) {\r\n      me.#focus(e.target)\r\n    } else {\r\n      me.selected?.focus();\r\n    }\r\n\r\n  }\r\n\r\n  onClick(e) {\r\n    const me = this;\r\n    const el = e.composedPath()\r\n    .filter(el => el instanceof GSElement)\r\n    .filter(el => el.parentComponent === me.#host).pop();\r\n    if (!me.#isNavigable(el)) return;\r\n    if (e.ctrlKey) me.reset();\r\n    me.#onDeselected(me.selected);\r\n    me.#select(el);\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    if (!e.target.isNav) return;\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        me.next();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    if (!e.target.isNav) return;\r\n    switch (e.code) {\r\n      case 'Space':\r\n      case 'Enter':\r\n        me.#focused?.click();\r\n        break;\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEventBus } from \"../base/GSEventBus.mjs\";\r\n\r\n/**\r\n * Controller for multiple elements groups\r\n */\r\nexport class GroupController {\r\n\r\n  #host;\r\n\r\n  #busEvent;\r\n  #busCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    if (me.#host.group) {\r\n      me.#busCallback = me.#onBusEvent.bind(me);\r\n      me.#busEvent = GSEventBus.register(me.#host.clazzName);\r\n      me.#busEvent.on(me.#host.group, me.#busCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#busEvent?.off(me.#host.group, me.#busCallback);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  #onBusEvent(e) {\r\n    this.#host.onBusEvent?.(e);\r\n  }\r\n\r\n  notify(data) {\r\n    const me = this;\r\n    me.#busEvent?.emit(me.#host.group, {owner: me.#host, item:data}); \t\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\n\r\nexport class GSAccordionElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    autoclose: { type: Boolean },\r\n    cssItem: { reflect: true, attribute: 'css-item' },\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    data: { type: Array }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.settings;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n       @notify=\"${me.#onNotify.bind(me)}\"\r\n       @click=\"${me.#onClick}\" \r\n       @keyup=\"${me.#onKeyUp}\" \r\n       class=\"accordion ${classMap(me.renderClass())}\">\r\n       ${this.#renderItems()}\r\n       <slot></slot></div>`\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-accordion-item');\r\n  }\r\n\r\n  get settings() {\r\n    const cfg = this.constructor.properties;\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n  }\r\n\r\n  close() {\r\n    this.#state(false);\r\n  }\r\n\r\n  open() {\r\n    this.#state(true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-accordion-item generated\r\n        .opened=\"${ifDefined(o.disabled === true)}\" \r\n        message=\"${ifDefined(o.message)}\" \r\n        template=\"${ifDefined(o.template)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-accordion-item>`;\r\n    });\r\n  }\r\n\r\n  #state(val = false) {\r\n    this.items.forEach(el => el.opened = val);\r\n    this.notify();\r\n  }\r\n\r\n  #onNotify(e) {\r\n    const me = this;\r\n    if (me.autoclose && e.target.opened) {\r\n      me.items.filter(el => el != e.target).forEach(el => el.opened = false);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const isItemCloser = e?.composedPath()[0]?.matches('.accordion-button');\r\n    if(isItemCloser) e.target.toggle?.();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        e.target.close?.();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.target.open?.();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSAccordionItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    message: { reflect: true, },\r\n    title: { reflect: true, },\r\n    opened: { type: Boolean, reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-ACCORDION';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const owner = me.owner;\r\n    const cssHeader = me.cssHeader || owner?.cssHeader;\r\n    const cssBody = me.cssBody || owner?.cssBody;\r\n    return html`<div class=\"accordion-item ${me.css}\">\r\n             <h2 class=\"accordion-header\">\r\n               <button type=\"button\" \r\n                class=\"accordion-button  ${cssHeader} ${me.opened ? '' : 'collapsed'}\"> \r\n                 ${me.translate(me.title)}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse  ${cssBody} ${me.opened ? 'show' : ''}\">\r\n               <div class=\"accordion-body\">\r\n                   ${me.translate(me.message)}\r\n                   ${me.renderTemplate()}\r\n                   <slot></slot>\r\n               </div>\r\n             </div>      \r\n     </div>`\r\n  }\r\n\r\n  open() {\r\n    this.notify(true);\r\n  }\r\n  \r\n  close() {\r\n    this.notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.notify(!this.opened);\r\n  }\r\n\r\n  notify(val = false) {\r\n    const me = this;\r\n    me.opened = val;\r\n    super.notify();\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-accordion') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSAlertElement extends GSElement {\r\n\r\n    static properties = {\r\n        message: { reflect: true },\r\n        color: { ...color },\r\n        closed: { reflect: true, type: Boolean },\r\n        closable: { reflect: true, type: Boolean },\r\n        delay: { reflect: true, type: Number },\r\n    }\r\n\r\n    #ref;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.delay = 1;\r\n        this.#ref = createRef();\r\n        this.#data = this.#proxify(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div role=\"alert\" dir=\"${ifDefined(me.direction)}\" ${ref(me.#ref)} \r\n            @mouseover=\"${() => me.#pause = true}\"\r\n            @mouseout=\"${() => me.#pause = false}\"\r\n            class=\"alert fade ${classMap(me.renderClass())}\" >\r\n            ${me.#first}\r\n            ${me.renderTemplate()}\r\n            <slot></slot>\r\n            ${me.#second}\r\n        </div>`;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#handleBillboard();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        if (!changed.has('opened')) return;\r\n        this.#handleBillboard();\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': !me.closed,\r\n            'alert-dismissible': me.closable,\r\n            [`alert-${this.color}`]: me.color,\r\n\r\n        }\r\n        return css;\r\n    }\r\n\r\n    open() {\r\n        this.notify(false);\r\n    }\r\n\r\n    close() {\r\n        this.notify(true);\r\n    }\r\n\r\n    toggle() {\r\n        this.notify(!this.closed);\r\n    }\r\n\r\n    notify(val = false) {\r\n        const me = this;\r\n        me.closed = val;\r\n        if (me.closed) setTimeout(() => { me.#ref.value.classList.toggle('d-none', true) }, 250);\r\n        super.notify();\r\n    }\r\n\r\n    get isBillboard() {\r\n        return this.#data?.length > 0;\r\n    }\r\n\r\n    get #message() {\r\n        return this.translate(this.message);\r\n    }\r\n\r\n    get #first() { return this.rtl ? this.#button : this.#message; };\r\n\r\n    get #second() { return this.rtl ? this.#message : this.#button; };\r\n\r\n    get #button() {\r\n        return this.closable ? html`<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"${this.close}\"></button>` : '';\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, {message:{}}));\r\n    }\r\n\r\n    #handleBillboard() {\r\n        const me = this;\r\n        if (me.closed) {\r\n            clearInterval(me.#interval);\r\n            me.#interval = 0;\r\n        } else {\r\n            me.#billboard();\r\n        }        \r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        if (!me.isBillboard) return;\r\n        const items = me.#data;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].message;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].message;\r\n        }, me.delay * 1000);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-alert');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, size, buttonType, ButtonTypes, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSButtonElement extends GSElement {\r\n\r\n  static properties = {\r\n    type: { ...buttonType }, // reset, submit\r\n    size: { ...size }, // small, large, normal\r\n    color: { ...color },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    toggleColor: { ...color, attribute : 'toggle-color' },\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    outline: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    toggling: { type: Boolean },\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    text: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'button';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<button part=\"button\" role=\"button\" ${ref(me.#refEl)}\r\n        dir=\"${ifDefined(me.direction)}\"\r\n        type=\"${ifDefined(me.type)}\" \r\n        class=\"btn ${classMap(me.renderClass())}\" \r\n        title=\"${ifDefined(me.#tooltip)}\"\r\n        ?disabled=${me.disabled}\r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"\r\n        @click=\"${me.#onClick}\">\r\n          ${me.#first} ${me.#second}</button>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n      'focus-ring': document.activeElement === me,\r\n      [`text-${me.text}`]: me.text,\r\n      [`btn-${size}`]: size,\r\n      [`btn-outline-${me.color}`]: me.outline,\r\n      [`btn-${me.color}`]: !me.outline && me.color,\r\n      [`btn-${me.toggleColor}`]: me.active && me.toggleColor,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    if(me.toggling) me.toggle();\r\n    me.iconEl?.animate();\r\n    if (me.isReset) return me.form?.reset();\r\n    if (me.isSubmit) return me.form?.submit();\r\n    me.notify();\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get isReset() {\r\n    return ButtonTypes.isReest(this.type);\r\n  }\r\n\r\n  get isSubmit() {\r\n    return ButtonTypes.isSubmit(this.type);\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form, form');\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #tooltip() {\r\n    return this.translate(this.tooltip);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-button');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { unsafeHTML, classMap, html, ifDefined, css } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\n\r\nexport class GSCalendarElement extends GSElement {\r\n\r\n  static styles = css`.year::-webkit-outer-spin-button,.year::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;} .year {-moz-appearance: textfield;} .day:focus{font-weight: bold;}`\r\n\r\n  static properties = {\r\n    date: {},\r\n    target: {},\r\n    format: { hasChanged: notEmpty },\r\n    year: { type: Number },\r\n    month: { type: Number, hasChanged: numGE0 },\r\n    day: { type: Number, hasChanged: numGE0 },\r\n    arrovPrev: { attribute: 'arrow-prev' },\r\n    arrowNext: { attribute: 'arrow-next' },\r\n    cssDays: { attribute: 'css-days' },\r\n    cssToday: { attribute: 'css-today' },\r\n    cssWeeks: { attribute: 'css-weeks' },\r\n    cssMonth: { attribute: 'css-month' },\r\n    cssYear: { attribute: 'css-year' },\r\n    cssNav: { attribute: 'css-nav' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    minYear: { attribute: 'year-min', type: Number },\r\n    maxYear: { attribute: 'year-max', type: Number },\r\n  }\r\n\r\n  #date;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.#date = new GSDate();\r\n    me.#date.language = GSUtil.language;\r\n    me.language = GSUtil.language;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.minYear = 1900;\r\n    me.maxYear = 2100;\r\n    me.arrowPrev = '&#10094;';\r\n    me.arrowNext = '&#10095;';\r\n    me.cssNav = 'btn-light';\r\n    me.cssToday = 'btn-secondary';\r\n    me.cssSelected = 'btn-primary';\r\n    me.cssWeeks = 'fw-bold text-bg-dark';\r\n    me.cssYear = 'form-control fs-5 fw-bold border-0 text-center m-1 p-0';\r\n    me.cssMonth = 'form-control fs-3 fw-bold border-0 text-center m-1 p-0';\r\n  }\r\n\r\n  get date() {\r\n    const me = this;\r\n    //return this.#date.toISOString();\r\n    return new Proxy(this.#date, {\r\n      set(target, prop, value) {\r\n        if (typeof target[prop] != 'function') {\r\n          target[prop] = value;\r\n          me.#update();\r\n        }\r\n        return true;\r\n      },\r\n      get(target, prop, receiver) {\r\n        const value = target[prop];\r\n        if (value instanceof Function) {\r\n          return function (...args) {\r\n            try {\r\n              return value.apply(this === receiver ? target : this, args);\r\n            } finally {\r\n              me.#update();\r\n            }\r\n          };\r\n        }\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  previousMonth() {\r\n    const me  =this;\r\n    if (me.month == 0) {\r\n      me.month = 11;\r\n      me.year--;\r\n    } else {\r\n      me.month--;\r\n    }\r\n  }\r\n\r\n  nextMonth() {\r\n    const me  =this;\r\n    if (me.month == 11) {\r\n      me.month = 0;\r\n      me.year++;\r\n    } else {\r\n      me.month++;\r\n    } \r\n  }\r\n\r\n  previousYear() {\r\n    this.year--;\r\n  }\r\n\r\n  nextYear() {\r\n    this.year++;\r\n  }\r\n\r\n  formatted(date) {\r\n    const me = this;\r\n    return (date || me.#date).format(me.format, me.language);\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    const date = new GSDate(me.#date);\r\n    me.#updateTarget(date);\r\n    me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#date.year = me.year;\r\n    me.#date.month = me.month;\r\n    me.#date.day = me.day;\r\n    me.#date.language = me.language;\r\n\r\n    const week = GSDate.dayList(true, me.language).map(v => html`<div class=\"col\">${v}</div>`);\r\n    const months = me.#monthsHTML();\r\n    const year = me.#yearHTML();\r\n\r\n    return html`\r\n          <div class=\"container-fluid text-center ${classMap(me.renderClass())}\"\r\n          dir=\"${ifDefined(me.direction)}\"\r\n          @keydown=\"${me.#onKey}\"\r\n          @click=\"${me.#onDay}\">\r\n          <div class=\"row align-items-center ${me.cssHeader} header\">\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.previousMonth}\" class=\"btn ${me.cssNav} arrow prev\">${unsafeHTML(me.arrowPrev)}</a>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  ${months}\r\n                  ${year}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.nextMonth}\" class=\"btn ${me.cssNav} arrow next\">${unsafeHTML(me.arrowNext)}</a>\r\n              </div>\r\n          </div>\r\n          <div class=\"row weeks ${me.cssWeeks}\">${week}</div>\r\n          ${unsafeHTML(me.#daysHTML())}\r\n      </div>`;\r\n  }\r\n\r\n  #updateTarget(date) {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    const tgt = GSDOM.query(document.documentElement, me.target);\r\n    if (!tgt) return;\r\n\r\n    if (tgt instanceof HTMLInputElement) {\r\n      if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n      return tgt.value = me.formatted(date);\r\n    }\r\n    GSDOM.setHTML(tgt, me.formatted(date));\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.language = me.#date.language;\r\n  }\r\n\r\n  #isToday(v, date) {\r\n    const me = this;\r\n    return v && GSUtil.asNum(v) === date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n  }\r\n\r\n  #daysHTML() {\r\n    const me = this;\r\n    const today = new GSDate();\r\n    today.language = me.language;\r\n    const list = me.#date.build(me.language);\r\n    const result = list\r\n      .map(v => {\r\n        const c1 = me.#isToday(v, today) ? me.cssToday : '';\r\n        const c2 = me.#isToday(v, me.#date) ? me.cssSelected : '';\r\n\r\n        const d = v ? `<a tabindex=\"0\" href=\"#\" class=\"btn shadow-none ${c1} ${c2} day\" data-day=\"${v}\">${v}</a>` : ''\r\n        return `<div class=\"col p-0\">${d}</div>`;\r\n      })\r\n      .map((v, i) => {\r\n        if (i === 0) return `<div class=\"row days\">${v}`;\r\n        const isBreak = i % 7 == 0;\r\n        return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n      });\r\n    result.push('</div>');\r\n    return result.join('');\r\n  }\r\n\r\n\r\n  #monthsHTML() {\r\n    const me = this;\r\n    const current = me.#date.MMMM;\r\n    const months = GSDate.monthList(false, me.language);\r\n    const list = months.map((v, i) => html`<option value=\"${i}\" selected=${ifDefined(current == v ? true : undefined)}>${v}</option>`);\r\n    //const list = GSDate.monthList(false, me.language).map((v, i) => html`<option value=\"${i}\" ${current == v ? 'selected' : ''}>${v}</option>`);\r\n    return html`<select @change=\"${me.#onMonth}\" name=\"month\" class=\"month ${me.cssMonth}\" value=\"${months.indexOf(current)}\">${list}</select>`;\r\n  }\r\n\r\n  #yearHTML() {\r\n    const me = this;\r\n    return html`<input @change=\"${me.#onYear}\" name=\"year\" class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n  }\r\n\r\n  #onDay(e) {\r\n    GSEvents.prevent(e);\r\n    if (!e.target.classList.contains('day')) return;\r\n    this.day = GSUtil.asNum(e.target.dataset.day, this.day);\r\n  }\r\n\r\n  #onMonth(e) {\r\n    this.month = e.target.selectedIndex;\r\n  }\r\n\r\n  #onYear(e) {\r\n    this.year = e.target.value;\r\n  }\r\n\r\n  #onKey(e) {\r\n    console.log(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-calendar');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCardElement extends GSElement {\r\n\r\n  static styles = css`.card-header, .card-footer{ background-color: inherit; color: inherit;}`;\r\n\r\n  static properties = {\r\n\r\n    imageStyle: { type: Object, attribute: 'image-style', reflect : true },\r\n\r\n    overlay: { type: Boolean },\r\n    placement: { ...placement },\r\n    align: { ...placement },\r\n\r\n    image: {},\r\n    title: {},\r\n    subtitle: {},\r\n    text: {},\r\n    footer: {},\r\n    header: {},\r\n\r\n    colorText: { attribute: 'color-text' },\r\n    colorBack: { attribute: 'color-back' },\r\n    colorBorder: { attribute: 'color-border' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssSubtitle: { attribute: 'css-subtitle' },\r\n    cssText: { attribute: 'css-text' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssImage: { attribute: 'css-image' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.border = false;\r\n    this.shadow = false;\r\n    this.align = 'start';\r\n    this.placement = 'top';\r\n    this.imageStyle = this.imageStyle || {};\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const content =  me.isVertical ? me.#renderVertical() : me.#renderHorizontal();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"card ${classMap(me.renderClass())}\">${content}</div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return [me.#imageTop, me.#header, me.#body, me.#footer, me.#imageBottom];\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    const start = PlacementTypes.isBefore(me.placement);\r\n    const startClass = start ? 'col-4' : 'col-8';\r\n    const endClass = start ? 'col-8' : 'col-4';\r\n    const startHtml = start ? me.#images : me.#body;\r\n    const endHtml =  start ? me.#body : me.#images;\r\n    return html`<div class=\"row g-0\">\r\n        <div class=\"${startClass}\">\r\n            ${startHtml}\r\n        </div>\r\n        <div class=\"${endClass}\">\r\n          ${endHtml}\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      border: me.border || me.colorBorder,\r\n      [`text-${me.align}`]: me.align,\r\n      [`text-${me.colorText}`]: me.colorText,\r\n      [`bg-${me.colorBack}`]: me.colorBack,\r\n      [`border-${me.colorBorder}`]: me.colorBorder,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return PlacementTypes.isHorizontal(this.placement);\r\n  }\r\n\r\n  get #body() {\r\n    const me = this;\r\n    return html`<div class=\"${me.overlay ? 'card-img-overlay' : 'card-body'} ${me.cssBody}\">\r\n      <h5 class=\"card-title  ${me.cssTitle}\"><slot name=\"title\">${me.translate(me.title)}</slot></h5>\r\n      <h6 class=\"card-subtitle  ${me.cssSubtitle}\"><slot name=\"subtitle\">${me.translate(me.subtitle)}</slot></h6>\r\n      <p class=\"card-text ${me.cssText}\"><slot name=\"text\">${me.translate(me.text)}</slot></p>\r\n      <slot name=\"body\"></slot>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  get #header() {\r\n    return this.overlay ? '' : html`<div class=\"card-header  ${this.cssHeader}\"><slot name=\"header\">${this.header}</slot></div>`;\r\n  }\r\n\r\n  get #footer() {\r\n    return this.overlay ? '' : html`<div class=\"card-footer ${this.cssFooter}\"><slot name=\"footer\">${this.footer}</slot></div>`;\r\n  }\r\n\r\n  get #imageSlot() {\r\n    return html`<slot name=\"image\"></slot>`;\r\n  }\r\n\r\n  get #image() {\r\n    const me = this;\r\n    const css = me.isHorizontal ? 'img-fluid' : 'card-img';\r\n    me.dynamicStyle(me.#styleID, me.imageStyle);\r\n    return html`<img src=\"${me.image}\" class=\"rounded-${me.placement} ${css} ${me.cssImage} ${me.#styleID}\" alt=\"...\">`;\r\n  }\r\n\r\n  get #images() {\r\n    return this.image ? this.#image : this.#imageSlot;\r\n  }\r\n\r\n  get #imageTop() {\r\n    return this.placement === 'top' ? this.#images : '';\r\n  }\r\n\r\n  get #imageBottom() {\r\n    return this.placement === 'bottom' ? this.#images : '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-card');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSCenterElement extends GSElement {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n      class=\"position-absolute top-50 start-50 translate-middle ${classMap(me.renderClass())}\">\r\n    ${me.renderTemplate()}<slot></slot></div>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-center');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenuElement class\r\n * @module components/GSMenuElement\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSMenuElement extends GSElement {\r\n\r\n    static properties = {\r\n        storage: {},\r\n        auto: { type: Boolean, reflect: true },\r\n        opened: { type: Boolean, reflect: true },\r\n        dark: { type: Boolean },\r\n        reverse: { type: Boolean },\r\n        offset: { type: Number },\r\n        data: { type: Array },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {},\r\n        title: {},\r\n        header: {},\r\n        color: {},\r\n        icon: {},\r\n        url: { default: '#' }\r\n    }\r\n\r\n    #menuRef = createRef();\r\n    #styleID = GSID.id;\r\n    #controller = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.offset = 0;\r\n        me.dynamicStyle(me.#styleID);\r\n        me.data = me.#proxify(me);\r\n        me.#controller = new GroupController(this);\r\n    }\r\n\r\n    onBusEvent(e) {\r\n       if (e.detail.owner != this) {\r\n            this.opened = false;\r\n       }\r\n     }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        if (changed.has('opened') && !this.opened) {\r\n            this.#closeSubmenus();\r\n        }\r\n    }\r\n\r\n    updated() {\r\n        this.#updatePosition();\r\n        if (this.opened) {\r\n            this.#controller.notify();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<ul \r\n            ${ref(me.#menuRef)}\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            class=\"dropdown-menu ${classMap(me.renderClass())}\"\r\n            data-gs-class=\"${me.#styleID}\"\r\n            data-menu=\"true\"\r\n            @mouseover=\"${me.#onMouseOver}\"\r\n            @mouseleave=\"${me.#onMouseLeave}\"\r\n            @keydown=\"${me.#onKeyDown}\"\r\n            @click=\"${me.#onClick}\">\r\n            ${me.#items(me.data)}\r\n        </ul>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'submenu': me.dataset.submenu,\r\n            'dropdown-menu-dark': me.dark,\r\n            [me.#styleID]: true,\r\n            'show': me.opened,\r\n            'dropend': !me.reverse,\r\n            'dropstart': me.reverse,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    /**\r\n     * Show at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {HTMLElement} caller\r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n\r\n        const me = this;\r\n        // offset to render under the mouse,\r\n        // important for GSGrid for better UI experience\r\n        const offset = GSUtil.asNum(me.offset, 0);\r\n        let target = caller;\r\n\r\n        if (GSEvents.isMouseOrPointerEvent(x)) {\r\n            const e = x;\r\n            target = e.target;\r\n            y = e.clientY;\r\n            x = e.clientX;\r\n            let offset = GSDOM.offsetParent(me);\r\n            offset = offset ? offset.getBoundingClientRect() : null;\r\n            x = x - (offset?.left || 0);\r\n            y = y - (offset?.top || 0);\r\n        }\r\n\r\n        const cfg = { clientX: x - offset, clientY: y - offset, target: target };\r\n\r\n        requestAnimationFrame(() => {\r\n            const style = {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                left: '0px',\r\n                translate: `${cfg.clientX}px ${cfg.clientY}px`\r\n            };\r\n            const rule = me.dynamicStyle(me.#styleID);\r\n            Object.assign(rule.style, style);\r\n        });\r\n        me.open();\r\n\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    #items(root) {\r\n        const me = this;\r\n        return root.map(el => me.#item(el));\r\n    }\r\n\r\n    #item(el) {\r\n        const me = this;\r\n        const isSub = el.items?.length > 0;\r\n        if (isSub) return me.#renderSubmenu(el);\r\n        if (!(el.header || el.name)) return me.#renderDivider();\r\n        return el.header ? me.#renderHeader(el) : me.#renderMenu(el);\r\n    }\r\n\r\n    #renderHeader(el) {\r\n        return html`<li data-inert=\"true\"><h6 class=\"dropdown-header\">${this.#renderIcon(el)}${el.header}</h6></li>`;\r\n    }\r\n\r\n    #renderDivider() {\r\n        return html`<li data-inert=\"true\"><hr class=\"dropdown-divider\"></li>`;\r\n    }\r\n\r\n    #renderSubmenu(el) {\r\n        const me = this;\r\n        return html`<li>\r\n            <a class=\"dropdown-item dropdown-toggle\" data-toggle=\"true\" href=\"#\">\r\n                <div class=\"d-inline-block w-100\">${me.#renderIcon(el)}${el.name}</div>\r\n            </a>\r\n            <gs-menu auto \r\n                .data=${el.items} \r\n                ?dark=${me.dark} \r\n                ?reverse=\"${me.reverse}\" \r\n                language=\"${ifDefined(me.language)}\" \r\n                data-submenu=\"true\">\r\n            </gs-menu>\r\n        </li>`;\r\n    }\r\n\r\n    #renderIcon(el) {\r\n        return el.icon ? html`<gs-icon css=\"mx-1\" name=\"${el.icon}\"></gs-icon>` : '';\r\n    }\r\n\r\n    #renderMenu(el) {\r\n        return html`<li>\r\n                <gs-button css=\"dropdown-item shadow-none\" \r\n                    ${dataset(el, false)}\r\n                    url=\"${el.url}\"\r\n                    title=\"${el.name}\" \r\n                    language=\"${ifDefined(this.language)}\" \r\n                    icon=\"${ifDefined(el.icon)}\" \r\n                    text=\"${ifDefined(el.color)}\"\r\n                    data-gs-target=\"${ifDefined(el.target || 'self')}\"\r\n                    data-gs-action=\"${ifDefined(el.action)}\">\r\n                </gs-button></li>`;\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSMenuElement.options));\r\n    }\r\n\r\n    #closeSubmenus(menu) {\r\n        GSDOM.queryAll(this.renderRoot, 'gs-menu', false, false)\r\n            .filter(el => el != menu)\r\n            .forEach(el => el.close());\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.key) {\r\n            case 'Escape':\r\n                me.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        submenu?.close();\r\n        if (me.auto) me.close();\r\n    }\r\n\r\n    #onMouseLeave(e) {\r\n        GSEvents.prevent(e);\r\n        if (this.auto) this.close();\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        me.#closeSubmenus(submenu);\r\n        submenu?.open();\r\n    }\r\n\r\n    #toSubmenu(e) {\r\n        const menuItem = e.target.closest('li');\r\n        return menuItem?.querySelector('gs-menu');\r\n    }\r\n\r\n    #updatePosition() {\r\n        const me = this;\r\n        if (!me.opened) return;\r\n        const rule = me.dynamicStyle(me.#styleID);\r\n        if (me.isSubmenu) {\r\n            const opt = { translate: `0px -25px` };\r\n            if (me.reverse) {\r\n                opt.left = 'inherited';\r\n                opt.right = '100%';\r\n            } else {\r\n                opt.right = 'inherited';\r\n                opt.left = '100%';\r\n            }\r\n            Object.assign(rule.style, opt);\r\n        } else {\r\n            rule.style.translate = null;\r\n            const rect = me.#menu.getBoundingClientRect();\r\n            const offset = window.innerWidth - rect.right;\r\n            me.reverse = offset - 5 < 0;\r\n            if (me.reverse) rule.style.translate = `${offset - 2}px`;\r\n        }\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.dataset.submenu;\r\n    }\r\n\r\n    get #menu() {\r\n        return this.#menuRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-menu');\r\n    }\r\n}\r\n","/*GSContextElement\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContextElement class\r\n * @module components/GSContextElement\r\n */\r\n\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for context menu\r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSContextElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        target: {},\r\n        filter: {},\r\n        altContext: { type: Boolean },\r\n        disabled: { type: Boolean },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;        \r\n        me.auto = true;\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n            me.target = \"tbody\";\r\n            me.filter = \"[selected]\";\r\n            me.offset =\"4\";\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', me.close.bind(me));        \r\n        if (!me.slot) me.#attachTarget();\r\n    }\r\n    \r\n    onSlotInjected(slot) {\r\n        this.#attachTarget();\r\n    }\r\n\r\n    #attachTarget() {\r\n        const me = this;        \r\n        const owner = GSDOM.parent(me.assignedSlot || me);\r\n        let targets = me.target ? GSDOM.queryAll(owner, me.target) : [owner];\r\n        if (!targets.length) targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    }\r\n\r\n    #match(e) {\r\n        const me = this;\r\n        return e.composedPath().filter(el => el.matches)\r\n            .filter(el => el.matches(me.filter ? me.filter : me.target));\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        if (e.shiftKey && me.altContext) return;\r\n        const list = me.#match(e);\r\n        if (list.length === 0) return;\r\n        GSEvents.prevent(e);\r\n        me.popup(e);\r\n        return true;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    /**\r\n     * Show submenu at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n        return this.disabled ? false : super.popup(x, y, caller);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-context');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, notEmpty } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\nexport class GSCompareElement extends GSElement {\r\n\r\n  static styles = css`.slider {\r\n         --gs-position : 50%;\r\n          left : var(--gs-position);\r\n          width: 8px;\r\n          height: 100%;\r\n          border-width: 1px;\r\n          cursor: w-resize;\r\n          border-color: darkgray;\r\n          border-style: solid;\r\n          background-color: lightgray;\r\n      }\r\n      .clipper {\r\n        --gs-position : 50%;\r\n        clip-path: inset(0px var(--gs-position) 0px 0px);\r\n      }\r\n    `;\r\n\r\n  static properties = {\r\n    background: { ...color },\r\n    width: { type: Number },\r\n    height: { type: Number },\r\n    before: { hasChanged: notEmpty },\r\n    after: { hasChanged: notEmpty },\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  #elRef = createRef();\r\n  #clipRef = createRef();\r\n  #slideRef = createRef();\r\n\r\n  #mouseController;\r\n  #elPosition;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.width = 0;\r\n    me.height = 0;\r\n    me.dynamicStyle(me.#styleID);\r\n    me.#mouseController = new ElementMoveController(me);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#mouseController.attach(this.#splitter);\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n         dir=\"${ifDefined(me.direction)}\"\r\n         @loaded=\"${me.#onLoad}\" \r\n         @dblclick=\"${me.#onDoubleClick}\"\r\n         data-gs-class=\"${me.#styleID}\"\r\n         class=\"${classMap(me.renderClass())}\">\r\n      <div class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden\"><slot name=\"before\">${me.#before}</slot></div>\r\n      <div ${ref(me.#clipRef)} class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden clipper\"><slot name=\"after\">${me.#after}</slot></div>\r\n      <div ${ref(me.#slideRef)} class=\"slider position-absolute top-0><slot name=\"control\"></slot></div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      \"position-relative\": true,\r\n      \"user-select-none\": true,\r\n      \"d-contents\": me.isAuto,\r\n      \"h-100\": me.isAuto,\r\n      \"w-100\": me.isAuto,\r\n      \"overflow-hidden\": true,\r\n      [`bg-${me.background}`]: me.background,\r\n      [`${me.#styleID}`]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Handles resizing based on mouse move event\r\n   * @param {MouseEvent} e \r\n   */\r\n  onStartMove(e) {\r\n    this.#elPosition = this.#splitter.getBoundingClientRect();\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    const me = this;\r\n    const offset = me.#elPosition.left;\r\n    const width = me.#elPosition.width;\r\n    const pos = GSUtil.range(e.clientX - offset, 0, width);\r\n    const pct = (pos / width) * 100;\r\n    me.#update(pct);\r\n  }\r\n\r\n  get isAuto() {\r\n    return this.width == 0 || this.height == 0;\r\n  }\r\n\r\n  get isFixed() {\r\n    return !this.isAuto;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  get #before() {\r\n    return this.before ? html`<img @load=\"${this.#onLoad}\" src=\"${me.before}\"></img>` : '';\r\n  }\r\n\r\n  get #after() {\r\n    return this.after ? html`<img @load=\"${this.#onLoad}\" src=\"${me.after}\"></img>` : '';\r\n  }\r\n\r\n  get #isAuto() {\r\n    return this.width === 0 || this.height === 0;\r\n  }\r\n\r\n  get #splitter() {\r\n    return this.#elRef.value;\r\n  }\r\n\r\n  get #slider() {\r\n    return this.#slideRef.value;\r\n  }\r\n\r\n  get #clip() {\r\n    return this.#clipRef.value;\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const me = this;\r\n    if (me.#isAuto) {\r\n      const el = e.target;\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n    }\r\n  }\r\n\r\n  #onDoubleClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#update();\r\n    me.#mouseController.reset();\r\n  }\r\n\r\n  #update(pct = 50) {\r\n    const me = this;\r\n    me.#clip.style.setProperty('--gs-position', `${100 - pct}%`);\r\n    me.#slider.style.setProperty('--gs-position', `${pct}%`);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-compare');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\n\r\n/**\r\n * Helper component to enable controller attachment to the GS WebComponent.\r\n * It is used to simplify and separate templates from logic.\r\n */\r\nexport class GSControllerElement extends GSElement {\r\n\r\n  static properties = {\r\n    module: {},\r\n    controller: {},\r\n  }\r\n\r\n  #clazz = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  updated(changes) {\r\n    super.updated(changes);\r\n    const me = this;\r\n    if (me.isConnected && me.isValid) {\r\n      me.#initialize();\r\n    }\r\n  }\r\n\r\n  get isValid() {\r\n    return this.parentElement instanceof GSElement;\r\n  }\r\n\r\n  async #initialize() {\r\n\r\n    const me = this;\r\n    const host = me.parentElement;\r\n\r\n    if (me.#clazz) return;\r\n\r\n    let clazz = globalThis[me.controller];\r\n    if (!clazz && me.module) {\r\n      const url = GSLoader.normalizeURL(me.module);\r\n      const module = await import(url);\r\n      clazz = module[me.controller];\r\n    }\r\n\r\n    if (clazz) {\r\n      new clazz(host);\r\n      me.#clazz = clazz;\r\n      globalThis[me.controller] = clazz;\r\n    }\r\n\r\n  }\r\n\r\n  static {\r\n    this.define('gs-controller');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSCopyrightElement extends GSElement {\r\n\r\n  static properties = {\r\n    year: { reflect: true, type: Number },\r\n    company: { reflect: true },\r\n    url: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    if (!(me.isCompany && me.isYear)) return '';\r\n    const year = new Date().getFullYear();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"${classMap(me.renderClass())}\"><a target=\"_blank\" href=\"${me.url ? me.url : '#'}\"><small>&copy; ${me.company} ${me.year}. - ${year}.</small></a></div>`;\r\n  }\r\n\r\n  get isCompany() {\r\n    return GSUtil.isStringNonEmpty(this.company);\r\n  }\r\n\r\n  get isYear() {\r\n    return GSUtil.isStringNonEmpty(this.year);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-copyright');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSFunction } from '../base/GSFunction.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/verificator.mjs';\r\nimport { GSReadWriteRegistry } from '../data/ReadWriteRegistry.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for easier access to the GSReadWrite/GSTreeReader\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSDataHandler extends GSElement {\r\n\r\n    static properties = {\r\n        storage: { state: true },\r\n        src: { reflect: true },\r\n        action: { reflect: true },\r\n        mode: { reflect: true },\r\n        reader: { reflect: true },\r\n        writer: { reflect: true },\r\n        limit: { type: Number, reflect: true },\r\n        skip: { type: Number, reflect: true },\r\n        filter: { type: Array, reflect: true },\r\n        sort: { type: Array, reflect: true },\r\n        type: {},\r\n        autoload: { type: Boolean },\r\n        autorefresh: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    }\r\n\r\n    #iid = 0;\r\n    #config = null;\r\n    #handler = null;\r\n    #lifoReadRef = null;\r\n    #lifoWriteRef = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        me.autorefresh = 0;\r\n        me.autoload = false;\r\n        me.flat = true;\r\n        me.filter = [];\r\n        me.sort = [];\r\n        me.limit = 0;\r\n        me.skip = 0;\r\n        me.src = '';\r\n        me.type = 'remote';\r\n        me.mode = 'query';\r\n        me.reader = 'GET';\r\n        me.writer = 'POST';\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n          }\r\n        if (!me.isGenerated && !me.id) throw new Error('Element ID is required attribute!');\r\n        GSItem.validate(me, me.tagName);\r\n    }\r\n    \r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        const itemHolder = me.isGenerated && me.childElementCount === 0 ? me.parentComponent : me;\r\n        me.#config = GSItem.proxify(itemHolder, GSData.PROPERTIES);\r\n        me.#initLIFO(true);\r\n        me.#initLIFO(false);\r\n    }\r\n    \r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        me.#handler?.disable();\r\n        me.#handler?.removeProcessor(me);\r\n        me.#lifoReadRef = null;\r\n        me.#lifoWriteRef = null;\r\n        clearTimeout(me.#iid);\r\n    }\r\n    \r\n    firstUpdated() {\r\n        const me = this;\r\n        me.#handler = GSReadWriteRegistry.newHandler(me.type, me.storage, false);\r\n        if (me.#config?.length > 0) me.#handler?.addProcessor(me);\r\n        me.#updateHandler();\r\n        me.#handler?.enable();\r\n        me.dataController?.read();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        const me = this;\r\n        me.#updateHandler();\r\n        if (changed.has('autorefresh')) me.schedule(me.autorefresh);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.key = me.key;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.formatSort(me.sort);\r\n        me.#handler.filter = me.formatFilter(me.filter);\r\n        if (me.autoload) me.read();\r\n    }\r\n\r\n    get isDebug() {\r\n        return this.dataset.gsDebug;\r\n    }\r\n\r\n    get handler() {\r\n        return this.#handler;\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    get isCached() {\r\n        return this.#handler?.type == 'cached';\r\n    }\r\n\r\n    set search(val) {\r\n        if (this.#handler) this.#handler.search = val;\r\n    }\r\n\r\n    get key() {\r\n        return this.#config.filter(o => o.key).map(o => o.name).pop() || null;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    formatFilter(val) {\r\n        val = this.#formated(val);\r\n        return Array.isArray(val) ? val : [];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    formatSort(val) {\r\n        val = this.#formated(val);\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort || [];\r\n    }\r\n\r\n    schedule(time = 0) {\r\n        const me = this;\r\n        time = GSUtil.asNum(time) * 1000;\r\n        clearInterval(me.#iid);\r\n        if (time > 0) me.#iid = setInterval(() => {\r\n            me.read(me);\r\n        }, time);\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data, append = false) {\r\n        return this.#lifoWriteRef(data, append);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return this.#handler?.selected;\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        return this.#handler?.addSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        return this.#handler?.removeSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        return this.#handler?.clearSelected();\r\n    }\r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onDataRead(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data Read: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onDataWrite(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data write: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Process data after receive, before notifying \r\n     * @param {*} data \r\n     */\r\n    postRead(data) {\r\n        const me = this;\r\n        if (!Array.isArray(data)) data = [data];\r\n        data.forEach(r => {\r\n            me.#config.forEach(c => {\r\n                let val = r[c.name];\r\n                if (!GSUtil.isNull(val)) {\r\n                    val = GSData.format(c, val);\r\n                    r[c.name] = val;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onDataError(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data error: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #initLIFO(read = true) {\r\n        const me = this;\r\n        if (read) {\r\n            me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n        } else {\r\n            me.#lifoWriteRef = GSFunction.callOnceLifo(me.#lifoWriteRefCallback, me);\r\n        }\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO(true);\r\n        return me.#lifoCall(true);\r\n    }\r\n\r\n    #lifoWriteRefCallback(data, append) {\r\n        const me = this;\r\n        me.#initLIFO(false);\r\n        return me.#lifoCall(false, data, append);\r\n    }\r\n    \r\n    #lifoCall(read = true, data, append) {\r\n        const me = this;\r\n        me.#verifyHandler();        \r\n        if (read) return me.#handler?.read(me);        \r\n        if (!append) me.#handler.clear();\r\n        return me.#handler?.write(me, data);\r\n    }\r\n\r\n    #formated(val) {\r\n        return GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    static {\r\n        this.define('gs-data-handler');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { size, SizeTypes } from '../properties/size.mjs';\r\n\r\nexport class GSDialogElement extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n  static ALIGN = 'end';\r\n  static CANCEL = 'Cancel';\r\n  static CONFIRM = 'Ok';\r\n\r\n  static #STACK = [];\r\n\r\n  static styles = css`dialog{--bs-modal-width: 500px;width:var(--bs-modal-width);outline:none;}dialog::backdrop{backdrop-filter: blur(4px);}`;\r\n\r\n  static properties = {\r\n\r\n    standard: { reflect: true, type: Boolean },\r\n    opened: { reflect: true, type: Boolean },\r\n    cancelable: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    escapable: { reflect: true, type: Boolean },\r\n    disabled: { reflect: true, type: Boolean },\r\n\r\n    size : size,\r\n\r\n    title: { reflect: true },\r\n    message: { reflect: true },\r\n    cancelText: { reflect: true, },\r\n    confirmText: { reflect: true, },\r\n\r\n    minWidth: { reflect: true, type: Number, attribute: 'min-width' },\r\n    buttonAlign: { reflect: true, attribute: 'button-align' },\r\n\r\n    iconCancel: { reflect: true, attribute: 'icon-cancel' },\r\n    iconConfirm: { reflect: true, attribute: 'icon-confirm' },\r\n\r\n    colorCancel: { attribute: 'color-cancel' },\r\n    colorConfirm: { attribute: 'color-confirm' },\r\n\r\n    cssCancel: { attribute: 'css-cancel' },\r\n    cssConfirm: { attribute: 'css-confirm' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssContent: { attribute: 'css-content' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #dialogRef = createRef();\r\n  #btnConfirmRef = createRef();\r\n  #btnCancelRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    const clazz = GSDialogElement;\r\n    me.opened = false;\r\n    me.standard = false;\r\n    me.cancelable = false;\r\n    me.closable = false;\r\n    me.escapable = false;\r\n    me.disabled = false;\r\n    me.shadow = false;\r\n    me.rounded = false;\r\n\r\n    me.minWidth = 0;\r\n    me.css = clazz.CSS;\r\n    me.cssTitle = clazz.TITLE_CSS;\r\n    me.cssHeader = clazz.HEADER_CSS;\r\n    me.buttonAlign = clazz.ALIGN;\r\n    me.cancelText = clazz.CANCEL;\r\n    me.confirmText = clazz.CONFIRM;\r\n    me.colorCancel = 'secondary';\r\n    me.colorConfirm = 'primary';\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialogElement.#updateStack();\r\n  }\r\n\r\n  updated(changed) {\r\n    super.updated(changed);\r\n    if (changed.has('opened')) {\r\n      this.#onOpenChanged();\r\n    }\r\n  }\r\n\r\n  #onOpenChanged() {\r\n    const me = this;\r\n    let state = null;\r\n    if (me.opened) {\r\n      GSDialogElement.#STACK.push(me);\r\n      state = 'opening';\r\n      if (me.standard) {\r\n        me.#dialog?.open();\r\n      } else {\r\n        me.#dialog?.showModal();\r\n      }\r\n      me.#focusable()?.focus();\r\n    } else {\r\n      state = 'closing';\r\n      GSDialogElement.#STACK.pop();\r\n      me.#dialog?.close();\r\n    }\r\n    me.notify(true, false, state);\r\n  }\r\n\r\n  #renderConfirm() {\r\n    const me = this;\r\n    if (!me.closable) return '';\r\n    return html`<gs-button  ${ref(me.#btnConfirmRef)} \r\n      @click=\"${me.#onConfirm.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconConfirm)}\"\r\n      language=\"${ifDefined(me.language)}\"\r\n      .disabled=\"${me.disabled}\"  \r\n      css=\"${ifDefined(me.cssConfirm)}\" \r\n      color=\"${ifDefined(me.colorConfirm)}\" \r\n      title=\"${me.confirmText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderCancel() {\r\n    const me = this;\r\n    if (!me.cancelable) return '';\r\n    return html`<gs-button ${ref(me.#btnCancelRef)}\r\n      @click=\"${me.#onCancel.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconCancel)}\"\r\n      language=\"${ifDefined(me.language)}\"\r\n      css=\"${ifDefined(me.cssCancel)}\" \r\n      color=\"${ifDefined(me.colorCancel)}\" \r\n      title=\"${me.cancelText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderFooter() {\r\n    const me = this;\r\n    const isFooter = me.cancelable || me.closable;\r\n    if (!isFooter) return '';\r\n    return html`<div class=\"card-footer d-flex user-select-none justify-content-${me.buttonAlign} ${me.cssFooter}\">\r\n      ${me.#renderCancel()} &nbsp;${me.#renderConfirm()}\r\n      </div>`;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const styles = { \r\n      'min-width': me.minWidth > 0 ? `${me.minWidth}px` : undefined \r\n    };\r\n    me.dynamicStyle(me.#styleID, styles);\r\n    return html`\r\n        <dialog tabindex=\"-1\" ${ref(me.#dialogRef)} \r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @close=\"${me.#onCancel.bind(me)}\"\r\n            @cancel=\"${me.#onCancel.bind(me)}\"\r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @form=\"${me.#onForm.bind(me)}\"\r\n            @submit=\"${me.#onSubmit.bind(me)}\"\r\n            class=\"${classMap(me.renderClass())}\">\r\n            <div class=\"card ${me.cssContent}\">\r\n                <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n                  <div class=\"card-title ${me.cssTitle}\">\r\n                    <slot name=\"title\">${me.translate(me.title)}</slot>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body ${me.cssBody}\">\r\n                  <slot name=\"body\">\r\n                  ${me.translate(me.message)}\r\n                  ${me.renderTemplate()}\r\n                  </slot>\r\n                </div>\r\n                ${me.#renderFooter()}\r\n            </div>\r\n            <slot name=\"extra\"></slot>\r\n            <div class=\"toast-container position-fixed\"></slot></div>\r\n        </dialog>`\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'dialog': true,\r\n      'p-0': true,\r\n      'border-0': true,\r\n      [me.#styleID]: true,\r\n      [`modal-${size}`]: size ? true : false\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.closable = closable;\r\n    me.cancelable = cancelable;\r\n    me.escapable = cancelable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('click-action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    return this.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    return this.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    index = GSUtil.asNum(index, 0);\r\n    const me = this;\r\n    me.forms?.forEach?.(f => { f.reset(); f.data = data; });\r\n    const tab = me.tab;\r\n    if (tab && index > -1) tab.index = index;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  get form() {\r\n    return this.query('gs-form', true);\r\n  }\r\n\r\n  get forms() {\r\n    return this.queryAll('gs-form', true);\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('gs-tab', true);\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.#dialogRef.value;\r\n  }\r\n\r\n  get #btnConfirm() {\r\n    return this.#btnConfirmRef.value;\r\n  }\r\n\r\n  get #btnCancel() {\r\n    return this.#btnCancelRef.value;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  #focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#btnCancel;\r\n    if (me.closable) return me.#btnConfirm;\r\n    return me;\r\n  }\r\n\r\n  async #onConfirm(e) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const ret = await Promise.all(me.forms?.map?.(form => form.submit()));\r\n    if (ret.indexOf(false) < 0) me.close();\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.close();\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle injected form events\r\n   * @param {*} e \r\n   */\r\n  #onForm(e) {\r\n    let  sts = true;\r\n    const me = this;\r\n    const data = e.detail;\r\n    switch (data.type) {\r\n      case 'submit':\r\n        sts = me.emit('data', data.data, false, false, true);\r\n        if (!sts) GSEvents.prevent(e);\r\n        //me.opened = false;\r\n        break;\r\n      case 'valid':\r\n        me.disabled = data.data === false;     \r\n        break;\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  #onSubmit(e) {\r\n    debugger;\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialogElement.#STACK = GSDialogElement.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  /**\r\n   * Return number of dialogs in a stack\r\n   */\r\n  static get size() {\r\n    return GSDialogElement.#STACK.length;\r\n  }\r\n\r\n  static get top() {\r\n    GSDialogElement.#updateStack();\r\n    const size = GSDialogElement.size;\r\n    return size === 0 ? null :  GSDialogElement.#STACK[size - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialogElement.#updateStack();\r\n    return Array.from(GSDialogElement.#STACK);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-dialog');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, unsafeHTML, html, ifDefined } from '../lib.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSDrawerElement extends GSElement {\r\n\r\n  static properties = {\r\n    autoclose: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    backdrop: { reflect: true, type: Boolean },\r\n    expanded: { reflect: true, type: Boolean },\r\n    scroll: { reflect: true, type: Boolean },\r\n\r\n    min: { reflect: true, type: Number},\r\n    max: { reflect: true},\r\n    fingers: { reflect: true, type: Number},\r\n    placement: {...placement},\r\n    \r\n    transition: { reflect: true },\r\n    duration: { reflect: true, type: Number },\r\n\r\n    title: { reflect: true},\r\n\r\n    cssTitle: { reflect: true, attribute: \"css-title\"},\r\n    cssHead: { reflect: true, attribute: \"css-head\" },\r\n    cssBody: { reflect: true, attribute: \"css-body\" },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.placement = 'start';\r\n    me.cssTitle = 'fs-5';\r\n    me.transition = 'linear';\r\n    me.duration = 0.2;\r\n    me.min = 0;\r\n    me.max = 'auto';\r\n    me.fingers = 2;\r\n    me.on('mouseleave', me.#onLeave.bind(me));\r\n    me.on('mouseenter', me.#onEnter.bind(me));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`${unsafeHTML(me.#style)}\r\n    <div tabindex=\"-1\" dir=\"${ifDefined(me.direction)}\"\r\n     class=\"offcanvas overflow-hidden anime ${classMap(me.renderClass())}\">\r\n      ${me.#header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        ${me.renderTemplate()}\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>${me.#backdrop}`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': true,\r\n      'anime-open' : me.expanded,\r\n      'anime-close' : !me.expanded,\r\n      [`offcanvas-${me.placement}`]: me.placement,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #style() {\r\n    const me = this;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    return `<style>\r\n    .anime {\r\n      transition-property: ${pos} !important;\r\n      transition-duration: ${me.duration}s  !important;\r\n      transition-timing-function: ${me.transition} !important;\r\n    }\r\n    .anime-open {\r\n        ${pos} : ${me.max}${GSUtil.isNumber(me.max) ? 'px':''} !important;\r\n    }\r\n    .anime-close {\r\n      ${pos} : ${me.min}${GSUtil.isNumber(me.min) ? 'px':''} !important;\r\n    }    \r\n    </style>`;\r\n  }\r\n\r\n  get #backdrop() {\r\n    const me = this;\r\n    if (!me.backdrop) return '';\r\n    return html`<div class=\"offcanvas-backdrop fade ${me.expanded ? 'show' : 'invisible'}\" @click=\"${me.close}\"></div>`;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    return me.closable ? html`<button type=\"button\" class=\"btn-close text-reset\" @click=\"${me.close}\"></button>` : '';\r\n  }\r\n\r\n  get #title() {\r\n    const me = this;\r\n    return me.title ? html`<div class=\"offcanvas-title ${me.cssTitle}\">${me.translate(me.title)}</div>` : '';\r\n  }\r\n\r\n  get #header() {\r\n    const me = this;\r\n    return me.#hasHeader ? html`<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${me.#title}${me.#button}</slot></div>` : '';\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  get #hasHeader() {\r\n    return this.title || this.closable || this.#headSlot;\r\n  }\r\n\r\n  #notify(val) {\r\n    const me = this;\r\n    me.expanded = val == true;\r\n    me.notify();\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  open() {\r\n    this.#notify(true);\r\n  }\r\n\r\n  close() {\r\n    this.#notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.#notify(!this.expanded);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return !this.isVertical;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-drawer');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdownElement class\r\n * @module components/GSDropdownElement\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { cssMap } from '../directives/css-map.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDropdownElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        icon: {},\r\n        text: {...color},\r\n        color: {...color},\r\n        size: {},\r\n        title: {},\r\n        tooltip: {},\r\n        group: {},\r\n        simple: {type:Boolean}\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"dropdown\"  dir=\"${ifDefined(me.direction)}\">\r\n                ${me.#renderButton()}\r\n                ${super.renderUI()}\r\n            </div>`;\r\n    }\r\n\r\n    #buttonClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'btn': true,\r\n            [`btn-${me.color}`] : me.color ? true : false,\r\n            'dropdown-toggle': !me.simple,\r\n            'shadow-none' : true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    #renderButton() {\r\n        const me = this;\r\n        return html`<gs-link css=\"${cssMap(me.#buttonClass())}\"\r\n            url=\"#\"         \r\n            icon=\"${ifDefined(me.icon)}\"\r\n            text=\"${ifDefined(me.text)}\"\r\n            size=\"${ifDefined(me.size)}\"\r\n            title=\"${ifDefined(me.title)}\"\r\n            tooltip=\"${ifDefined(me.tooltip)}\"\r\n            @notify=\"${me.toggle}\">\r\n            </gs-link>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-dropdown');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html, unsafeHTML } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Safe email rendering to protect from spam bots.\r\n */\r\nexport class GSEmailElement extends GSElement {\r\n\r\n  static shadowRootOptions = { mode: 'closed' }\r\n\r\n  static style = css`.e-mail:before {\r\n    content: attr(data-website) \"\\0040\" attr(data-user);\r\n    unicode-bidi: bidi-override;\r\n    direction: rtl;\r\n    }`;\r\n\r\n  static properties = {\r\n    user: { reflect: true },\r\n    domain: { reflect: true },\r\n    dev: { type: Boolean }\r\n  }\r\n\r\n  #user;\r\n  #domain;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  willUpdate(changes) {\r\n    super.willUpdate(changes);\r\n    this.#updateUser();\r\n    this.#updateDomain()\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${unsafeHTML(this.#style)}<a @click=\"${this.#onClick}\" class=\"e-mail\" data-user=\"${this.#user}\" data-website=\"${this.#domain}\"  href=\"mailto://\"></a>`;\r\n  }\r\n\r\n  get #style() {\r\n    return '<style>.e-mail:before { content: attr(data-website) \"\\u0040\" attr(data-user); unicode-bidi: bidi-override; direction: rtl; }</style>';\r\n  }\r\n\r\n  get #url() {\r\n    return `mailto://${GSUtil.reverse(this.dataset.user)}@${GSUtil.reverse(this.dataset.domain)}`;\r\n  }\r\n\r\n  #updateUser() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.user) {\r\n      me.#user = dataset.user || GSUtil.reverse(me.user);\r\n      if (me.dev) dataset.user = me.#user;\r\n      me.user = '';\r\n    }\r\n  }\r\n\r\n  #updateDomain() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.domain) {\r\n      me.#domain = dataset.domain || GSUtil.reverse(me.domain);\r\n      if (me.dev) dataset.domain = me.#domain;\r\n      me.domain = '';\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    window.location.href = me.#url;\r\n    //window.open(me.#url, '_blank');  \r\n  }\r\n\r\n  static {\r\n    this.define('gs-email');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSFormElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    disabled: { type: Boolean },\r\n    data: { type: Object },\r\n\r\n    name: { reflect : true},\r\n    rel: { reflect : true},\r\n    acceptCharset : {reflect : true, attribute: 'accept-charset'},\r\n    autocapitalize: { reflect : true},\r\n    autocomplete: { reflect : true},\r\n\r\n    action: { reflect : true},\r\n    enctype: { reflect : true},\r\n    method: { reflect : true},\r\n    novalidate: { reflect : true, type: Boolean},\r\n    target: { reflect : true},\r\n\r\n    block: { type: Boolean },\r\n    beep: { type: Boolean },\r\n    timeout: { type: Number }\r\n  }\r\n\r\n  #formRef = createRef();\r\n  #lastState = undefined;\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n    this.disabled = false;\r\n    this.method = \"dialog\";\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<form ${ref(me.#formRef)}\r\n      id=\"${ifDefined(me.name)}\"\r\n      name=\"${ifDefined(me.name)}\"\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      @change=\"${me.#onChange}\"\r\n      @blur=\"${me.#onBlur}\"\r\n      @invalid=\"${me.#onInvalid}\"\r\n      @submit=\"${me.submit}\"\r\n      @reset=\"${me.reset}\"\r\n      method=\"${me.method}\"\r\n      \r\n      rel=\"${ifDefined(me.rel)}\"\r\n      acceptCharset=\"${ifDefined(me.acceptCharset)}\"\r\n      autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n      autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n      action=\"${ifDefined(me.action)}\"\r\n      enctype=\"${ifDefined(me.enctype)}\"\r\n      target=\"${ifDefined(me.target)}\"\r\n\r\n      ?novalidate=\"${me.novalidate}\">\r\n      <slot></slot>\r\n    </form>`;\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    me.dataController?.read();\r\n  }\r\n  \r\n  updated(changed) {\r\n    const me = this;\r\n    if (changed.has('disabled')) {\r\n      if (me.disabled) {\r\n        me.disable();\r\n      } else {\r\n        me.enable();\r\n      }\r\n    }\r\n    if (changed.has('data')) {\r\n      if (GSUtil.isNull(me.data)) {\r\n        me.reset();\r\n      } else {\r\n        me.asJSON = Object.assign(me.asJSON, me.data);\r\n      }\r\n    }\r\n  }\r\n\r\n  templateInjected() {\r\n    const me = this;\r\n    me.#doFilter(me.#filterField);\r\n    me.invalid[0]?.focus();\r\n\t}  \r\n\r\n  async reset(e) {\r\n    const me = this;\r\n    const internal = e?.target === me.form;\r\n\r\n    if (internal) {\r\n      me.elements.forEach(el => GSDOM.reset(el));\r\n      await me.dataController?.read(me.asJSON);\r\n    } else {\r\n      me.data = {};\r\n      me.form.reset();\r\n    }\r\n  }\r\n\r\n  async submit(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    if (!me.validate()) return;\r\n    const json = me.asJSON;\r\n    await me.dataController?.write(json);\r\n    const data = { type: 'submit', data: json, source: e, owner : me};\r\n    return me.emit('form', data, true, true, true);\r\n  }\r\n\r\n  #button(type) {\r\n    return this.query(`button[type=\"${type}\"]`, true);\r\n  }\r\n\r\n  get submitButton() {\r\n    return this.#button('submit');\r\n  }\r\n  \r\n  get resetButton() {\r\n    return this.#button('reset');\r\n  }\r\n  \r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n  \r\n  /**\r\n  * Overide native to pickup all form elements, including ones in shadow dom\r\n  */\r\n  get elements() {\r\n    return this.#childrens(true);\r\n  }\r\n\r\n  get fields() {\r\n    return this.elements;\r\n  }\r\n\r\n  get inputs() {\r\n    return this.elements;\r\n  }\r\n\r\n  get invalid() {\r\n    return this.inputs.filter(el => !el.validity.valid);\r\n  }\r\n\r\n  get asJSON() {\r\n    const data = {};\r\n    this.elements.forEach(field => GSDOM.fromElement2Object(field, data));    \r\n    return data;\r\n  }\r\n\r\n  set asJSON(data) {\r\n    const me = this;\r\n    //me.form.reset(); do not use, create a circular calls\r\n    me.elements.forEach(field => GSDOM.fromObject2Element(field, data));    \r\n    me.#doFilter(me.#filterField);\r\n    me.validate();\r\n  }\r\n\r\n  get isValid() {\r\n    return this.elements\r\n      .filter(el => !el.disabled)\r\n      .filter(el => !el.validity.valid).length === 0;\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.form.checkValidity() && \r\n    this.elements\r\n      .filter(el => !el.disabled)\r\n      .filter(el => !el.checkValidity()).length === 0;;\r\n  }\r\n\r\n  reportValidity() {\r\n    this.elements\r\n      .filter(el => !el.disabled)\r\n      .filter(el => !el.validity?.valid)\r\n      .forEach(el => el.reportValidity() );\r\n    return this.form.reportValidity();\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    let isValid = me.checkValidity();\r\n    if (!isValid) me.reportValidity();\r\n    isValid = me.onValidate(isValid);\r\n    me.#toggle(isValid);\r\n    me.#notify(isValid);\r\n    me.invalid[0]?.focus();\r\n    return isValid;\r\n  }\r\n\r\n  disable() {\r\n    GSDOM.disableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  enable() {\r\n    GSDOM.enableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataWrite(data) {\r\n\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  /**\r\n   * Called only if field is valid and changed\r\n   * @param {HTMLInputElement|HTMLSelectElement|HTMLTextAreaElement} el \r\n   */\r\n  onFieldChange(el) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Called only if field is invalid\r\n   * @param {HTMLInputElement|HTMLSelectElement|HTMLTextAreaElement} el \r\n   */\r\n  onFieldInvalid(el) {\r\n\r\n  }\r\n\r\n  onValidate(sts) {\r\n\r\n    return sts;\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    const field = me.#findField(e);\r\n    if(field) me.onFieldInvalid(field);\r\n    me.#toggle(false);\r\n    me.#notify(false);\r\n  }\r\n\r\n  #onBlur(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#toggle(me.isValid);\r\n    me.#notify(me.isValid);\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    const field = me.#findField(e);\r\n    if (field) {\r\n      me.#doFilter(field);\r\n      me.handle(e);\r\n      if (field.validity.valid) me.onFieldChange(field);\r\n    }\r\n    me.#toggle(me.isValid);\r\n  }\r\n\r\n  #notify(isValid = false) {\r\n    const me = this;\r\n    if (me.#lastState === isValid) return;\r\n    me.#lastState = isValid;\r\n    const data = { type: 'valid', data: isValid, owner : me};\r\n    me.emit('form', data, true, true);    \r\n  }\r\n\r\n  #toggle(isValid = false) {\r\n    const me = this;\r\n    const btn = me.submitButton;\r\n    if (btn) btn.disabled = !isValid;\r\n  }  \r\n\r\n  #findField(e) {\r\n    if (!(e instanceof Event)) return;\r\n    const me = this;\r\n    let field = e.target;\r\n    if (e.composed) {\r\n      field = e.composedPath()\r\n        .filter(el => me.#isField(el))\r\n        .pop();\r\n    }\r\n    if(!me.#isField(field)) field = me.#findField(e.detail);\r\n    return me.#isField(field) ? field : null;\r\n  }\r\n\r\n  #isField(el) {\r\n    return el?.matches?.('input,select,textarea');\r\n  }\r\n\r\n  /**\r\n   * Filter field disabled status\r\n   * @param {HTMLInputElement} field \r\n   */\r\n  #doFilter(field) {\r\n    \r\n    if(!field) return;\r\n    \r\n    const me = this;\r\n\r\n    const value = me.#fieldValue(field);\r\n    const fldName = me.dataset.gsfDisable;\r\n    const fldVal = me.dataset.gsfValue;\r\n    const matched = fldName && field.name === fldName;\r\n    const flag = matched && value === fldVal;\r\n    if (matched) {\r\n      me.elements\r\n        .filter(el => el.name != fldName)\r\n        .forEach(el => el.disabled = flag);\r\n    } \r\n\r\n  }\r\n\r\n  /**\r\n   * Initialy, field might not be set just yet (if it is selectable),\r\n   * so we need to take valeu fro mgs-item definition\r\n   * @param {*} field \r\n   * @returns \r\n   */\r\n  #fieldValue(field) {\r\n    let value = field.tagName === 'GS-FORM-GROUP' ? field.field?.value : field.value;\r\n    if (field.selectable && GSUtil.isNull(value)) {\r\n      value = GSAttr.get(this.query('gs-item[selected]'), 'value');\r\n    }\r\n    return value;\r\n  }\r\n\r\n  #childrens(shadow = false) {\r\n    return this.queryAll('input,select,output,textarea', shadow);\r\n  }\r\n\r\n  get #filterField() {\r\n    const me = this;\r\n    return me.elements.filter(el => el.name === me.dataset.gsfDisable).pop();\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, unsafeHTML, ifDefined } from '../lib.mjs';\r\nimport { inputType, numGT0, numGE0, autocapitalize, autocorrect, autocomplete } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSFormGroupElement extends GSElement {\r\n\r\n  static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2';\r\n  static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n  static CSS_ICON = 'text-primary me-2 fs-5';\r\n  static ICON = 'info-circle-fill';\r\n\r\n  static #SELECTOPT = {\r\n    name : {},\r\n    value : {},\r\n    selected : {type: Boolean}\r\n  }\r\n\r\n  static properties = {\r\n    icon: {},\r\n    layout: {},\r\n    placement: {},\r\n\r\n    label: {},\r\n    description: {},\r\n    placeholder: {reflect: true},\r\n\r\n    pattern: {},\r\n    mask: {},\r\n    \r\n    form: {},\r\n    wrap: {},\r\n    spellcheck: {},\r\n\r\n    type: { ...inputType },\r\n    name: {},\r\n    list: {},\r\n    accept: {},   \r\n    value: {},\r\n\r\n    lang: {reflect: true},\r\n    title: {reflect: true},\r\n    rows: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    cols: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    step: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    min: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    max: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    minLength: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    maxLength: { type: Number, reflect: true, hasChanged: numGT0 },\r\n\r\n    reverse: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n\r\n    autoid: { type: Boolean },\r\n    autocopy: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    autocapitalize: { ...autocapitalize, reflect: true },\r\n    autocorrect: { ...autocorrect, reflect: true },\r\n    autocomplete: { reflect: true },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    disabled: { type: Boolean, reflect: true },\r\n    checked: { type: Boolean, reflect: true },\r\n    multiple: { type: Boolean, reflect: true },\r\n    reveal: { type: Boolean, reflect: true },\r\n    readonly: { type: Boolean, reflect: true },\r\n    required: { type: Boolean, reflect: true },\r\n\r\n    invalidMessage: {reflect: true, attribute: 'invalid-message' },\r\n\r\n    cellField: { attribute: 'cell-field' },\r\n    cellLabel: { attribute: 'cell-label' },\r\n    cssLabel: { attribute: 'css-label' },\r\n    cssField: { attribute: 'css-field' },\r\n\r\n    block: { type: Boolean },\r\n    beep: { type: Boolean },\r\n    timeout: { type: Number }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #inputRef = createRef();\r\n  #ouptutRef = createRef();\r\n  #patterns = [];\r\n  #options = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.#validateAllowed();\r\n    this.dynamicStyle(this.#styleID);\r\n    this.rows = 0;\r\n    this.cols = 0;\r\n    this.type = 'text';\r\n    this.placement = 'top';\r\n    this.layout = 'horizontal';\r\n    this.invalidMessage = 'Invalid input',\r\n    this.icon = GSFormGroupElement.ICON;\r\n    this.cssLabel = GSFormGroupElement.CSS_LABEL;\r\n    this.cellLabel = GSFormGroupElement.CSS_LABEL_CELL;\r\n  }\r\n  \r\n  connectedCallback() {\r\n    const me = this;\r\n    const form = me.formComponent;\r\n    me.layout = GSAttr.get(form, 'layout', me.layout);\r\n\r\n    if (!me.form && form) me.form = form.name;\r\n\r\n    if (me.selectable) {\r\n      me.#options = GSItem.proxify(me, GSFormGroupElement.#SELECTOPT);\r\n    } else {\r\n      me.#patterns = GSItem.collect(me)\r\n      .filter(el => el.dataset.pattern)\r\n      .map(el => new RegExp(el.dataset.pattern));\r\n    }      \r\n    super.connectedCallback();\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    me.#onRange();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    switch (me.layout) {\r\n      case 'floating': return me.#renderFloating();\r\n      case 'vertical': return me.#renderVertical();\r\n      default: return me.#renderHorizontal();\r\n    }\r\n  }\r\n\r\n\r\n  #renderFloating() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n       <div class=\"form-floating ${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n          ${me.#renderLabel()}\r\n       </div>\r\n       ${me.#renderInfo()}\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n      <div class=\"col-12 text-md-start ${me.cellLabel}\">\r\n          ${me.#renderLabel()}\r\n      </div>\r\n       <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n       </div>\r\n       ${me.#renderInfo()}   \r\n    </div>      \r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row form-group ${classMap(me.renderClass())}\">    \r\n       <slot name=\"header\"></slot>\r\n       ${me.#renderLabelWrap()}\r\n       ${me.#renderField()}\r\n       ${me.#renderInfo()}\r\n       <slot name=\"footer\"></slot>\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderLabel() {\r\n    const me = this;\r\n    return html`<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.translate(me.label)}</label>`;\r\n  }\r\n\r\n  #renderLabelWrap() {\r\n    const me = this;\r\n    return html`<div class=\" text-md-end ${me.cellLabel}\">${me.#renderLabel()}</div>`;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.#isIcon ? html`<gs-icon size=\"5\" css=\"${GSFormGroupElement.CSS_ICON}}\" name=\"${me.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderTooltip() {\r\n    const me = this;\r\n    const tgt = me.#isIcon ? '@parent' : `[name='${me.name}']`;\r\n    return me.description ? html`<gs-tooltip local language=\"${ifDefined(me.language)}\" placement=\"${me.placement}\" title=\"${me.description}\" target=${ifDefined(tgt)}></gs-tooltip>` : '';\r\n  }\r\n\r\n  #renderInfo() {\r\n    const me = this;\r\n    const tooltip = me.#renderTooltip();\r\n    if (tooltip && me.#isIcon) return html`\r\n    <div class=\"col-auto\">\r\n       ${tooltip}\r\n       ${me.#renderIcon()}\r\n    </div>`;\r\n    return tooltip;\r\n  }\r\n\r\n  #renderField() {\r\n    const me = this;\r\n    return html`\r\n    <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n       <slot name=\"body\">${me.#renderInput()}${me.#renderOutput()}</slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderOutput() {\r\n    const me = this;\r\n    if (!me.isRange) return \"\";\r\n    return html`<span ${ref(me.#ouptutRef)} class=\"position-absolute px-1\">${me.value}</span>`;\r\n  }\r\n\r\n  #renderInput() {\r\n\r\n    const me = this;\r\n\r\n    const idattr = me.autoid ? me.name : undefined;\r\n    const val = me.isFieldset ? me.value.split(',') : me.value;\r\n\r\n    if (Array.isArray(val)) {\r\n      const wrap = me.dataset.radioLayout === 'vertical';\r\n      return val.map((it, i) => { return { v: it, id: `${me.name}_${i}` } })\r\n        .map((o, i) => me.#fieldSet(me.name + i, o.v, me.#inputHTML(o.id, me.name, o.v), wrap));\r\n    }\r\n\r\n    if (me.selectable) return me.#selectHTML(idattr, me.name, me.value);\r\n\r\n    if (me.#isTextArea) return me.#textArea(idattr, me.name, me.value);\r\n\r\n    return me.#inputHTML(idattr, me.name, me.value);\r\n  }\r\n\r\n  #fieldSet(id, val, fld, vertical = false) {\r\n    const me = this;\r\n    return vertical ?\r\n      html`<div class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></div>`\r\n      :\r\n      html`<span class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></span>`;\r\n  }\r\n\r\n  #initStyle() {\r\n    const me = this;\r\n    const style = {\r\n      transform: me.reverse && me.isRange ? 'rotateY(180deg)' : ''\r\n    }\r\n    me.dynamicStyle(me.#styleID, style);    \r\n  }\r\n\r\n  #renderOptions() {\r\n    const me = this;\r\n    return me.#options.map( el => html`<option value=\"${el.value}\" ?selected=${el.selected}>${el.name || el.innerText || el.value }</option>`);\r\n  }\r\n\r\n  #selectHTML(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n\r\n    return html`<select ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n        \r\n            name=\"${name}\"             \r\n            form=\"${ifDefined(me.form)}\"\r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\">\r\n            ${me.#renderOptions()}\r\n            </select>`;\r\n  }\r\n\r\n  get #isTextArea() {\r\n    const me = this;\r\n    return (me.rows > 0 || me.cols > 0) && me.type === 'text';\r\n  }\r\n\r\n  get #listHTML() {\r\n    const me = this;\r\n    let list = '';\r\n    if (me.list) {\r\n      const root = me.parentComponent || me.parentElement;\r\n      const el = GSDOM.query(root, `datalist[id=\"${me.list}\"]`, true);\r\n      if (el) list = html`${unsafeHTML(el.outerHTML)}`;\r\n    }\r\n    return list;\r\n  }\r\n\r\n  get #isBlock() {\r\n    return this.block || this.formComponent?.block || false;\r\n  }\r\n\r\n  get #isBeep() {\r\n    return this.beep || this.formComponent?.beep || false;\r\n  }\r\n  \r\n  #timeout() {\r\n    return this.timeout || this.formComponent?.timeout || 0;\r\n  }\r\n\r\n  #textArea(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder) : null;\r\n    const title = me.title ? me.translate(me.title) : null;\r\n\r\n    return html`<textarea  is=\"gs-ext-text\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)}\r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @invalid=\"${me.#onInvalid.bind(me)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n            cols=\"${me.cols}\"\r\n            rows=\"${me.rows}\"\r\n\r\n            ?block=\"${me.#isBlock}\"\r\n            ?beep=\"${me.#isBeep}\"\r\n            timeout=\"${me.#timeout()}\"\r\n\r\n            spellcheck=\"${ifDefined(me.spellcheck)}\" \r\n            wrap=\"${ifDefined(me.wrap)}\" \r\n            form=\"${ifDefined(me.form)}\" \r\n            name=\"${name}\" \r\n            value=\"${ifDefined(value)}\"\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            title=\"${ifDefined(title)}\"\r\n    \r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus}\"            \r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"      \r\n      ></textarea>`;\r\n  }\r\n\r\n  #inputHTML(id, name, value) {\r\n    const me = this;\r\n    const type = me.isSwitch ? 'checkbox' : me.type;\r\n    let title = me.isRange ? me.value : me.title;\r\n    title = title ? me.translate(me.title) : title;\r\n\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder) : null;\r\n    const description = me.description ? me.translate(me.description) : null;\r\n    \r\n    me.#initStyle();\r\n\r\n    return html`<input is=\"gs-ext-input\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @invalid=\"${me.#onInvalid.bind(me)}\"\r\n        \r\n            name=\"${name}\" \r\n            type=\"${type}\" \r\n            form=\"${ifDefined(me.form)}\"\r\n            value=\"${ifDefined(value)}\"\r\n            title=\"${ifDefined(title)}\"\r\n\r\n            ?block=\"${me.#isBlock}\"\r\n            ?beep=\"${me.#isBeep}\"\r\n            timeout=\"${me.#timeout()}\"\r\n\r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            description=\"${ifDefined(description)}\"\r\n\r\n            .multipattern=\"${ifDefined(me.#patterns)}\"\r\n            mask=\"${ifDefined(me.mask)}\"\r\n            pattern=\"${ifDefined(me.pattern)}\"\r\n            list=\"${ifDefined(me.list)}\"\r\n            accept=\"${ifDefined(me.accept)}\"\r\n             \r\n            step=\"${ifDefined(me.step)}\"\r\n            min=\"${ifDefined(me.min)}\"\r\n            max=\"${ifDefined(me.max)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?multiple=\"${me.multiple}\"\r\n            ?checked=\"${me.checked}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"\r\n            ?reveal=\"${me.reveal}\"\r\n            >${me.#listHTML}`;\r\n  }\r\n\r\n  get #cssField() {\r\n    const me = this;\r\n    if (me.selectable) return 'form-select ms-0';\r\n    if (me.isCheckable) return 'form-check-input ms-0';\r\n    if (me.isRange) return 'form-range';\r\n    return 'form-control';\r\n  }\r\n\r\n  get #cssLabel() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-label';\r\n    if (me.isFloating) return 'ms-2';\r\n    return me.isVertical ? 'form-label' : '';\r\n  }\r\n\r\n  get #cssCheck() {\r\n    const me = this;\r\n    if (me.isCheckable) {\r\n      //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      if (me.isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n      return me.isFieldset ? '' : 'form-check';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get #cellField() {\r\n    const me = this;\r\n    const val = (me.isHorizontal) ? '6' : '11';\r\n    return me.cellField || `col-md-${val} col-sm-${val} col-xs-11`;\r\n  }\r\n\r\n  get #isIcon() {\r\n    return GSUtil.isStringNonEmpty(this.icon);\r\n  }\r\n\r\n  #onRange(e) { \r\n    this.emit('input', e);\r\n  }\r\n\r\n  #onBlur(e) {\r\n    this.emit('blur', e, true, true);\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if (me.isRange) me.value = e.target?.value;\r\n    me.emit('change', e, true, true);\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    this.emit('invalid', e, true, true);\r\n  }\r\n\r\n  #validateAllowed() {\r\n    const me = this;\r\n    const slots = ['header', 'body', 'footer'];\r\n    let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n    if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n    list = Array.from(me.children).filter(el => !el.slot);\r\n    const tagList = ['GS-ITEM', 'DATALIST'];\r\n    const allowed = GSDOM.isAllowed(list, tagList);\r\n    if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n  get isFloating() {\r\n    return this.layout === 'floating';\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.layout === 'horizontal';\r\n  }\r\n\r\n  get isVertical() {\r\n    return this.layout === 'vertical';\r\n  }\r\n\r\n  get isFieldset() {\r\n    const me = this;\r\n    return me.type === 'radio' && me.value?.includes(',');\r\n  }\r\n\r\n  get isCheckable() {\r\n    const me = this;\r\n    return me.isCheck || me.isRadio || me.isSwitch;\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.field?.checked;\r\n  }\r\n\r\n  get isCheck() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get isRadio() {\r\n    return this.type === 'radio';\r\n  }\r\n\r\n  get isSwitch() {\r\n    return this.type === 'switch';\r\n  }\r\n\r\n  get isNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  get isRange() {\r\n    return this.type === 'range';\r\n  }\r\n\r\n  get isText() {\r\n    return this.type === 'text';\r\n  }\r\n\r\n  get isPassword() {\r\n    return this.type === 'passsword';\r\n  }\r\n\r\n  get isEmail() {\r\n    return this.type === 'email';\r\n  }\r\n\r\n  get isURL() {\r\n    return this.type === 'url';\r\n  }\r\n\r\n  get isFile() {\r\n    return this.type === 'file';\r\n  }\r\n\r\n  get field() {\r\n    return this.#inputRef.value;\r\n  }\r\n\r\n  get formComponent() {\r\n    return GSDOM.closest(this, 'gs-form');\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref, repeat } from '../lib.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSFormGroupElement } from './FormGroup.mjs';\r\n\r\n// TODO: Make generic JSON to template generator, \r\n// then create string template and apply it to the lit html function.\r\n// Use all properties exstractor from super components and use type definition for bool proeprties.\r\n// Use xtype to define component type and use it to create component instance.\r\n\r\n/**\r\n * Component is responsible for auto-building gs-form and gs-form-group elements\r\n * from either JSON data or GS-ITEM elements.\r\n */\r\nexport class GSFormPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.#proxify;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const data = me.data || {};\r\n    const items = me.data?.items || [];\r\n    return html`<gs-form ${ref(me.#formRef)}\r\n\r\n      .storage=\"${ifDefined(data.storage)}\" \r\n      ?disabled=${ifDefined(data.disabled)}.\r\n      .data=\"${ifDefined(data.data)}\"\r\n      \r\n      .name=\"${ifDefined(data.name)}\"\r\n      .rel=\"${ifDefined(data.rel)}\"\r\n      .acceptCharset=\"${ifDefined(data.acceptCharset)}\"\r\n      .autocapitalize=\"${ifDefined(data.autocapitalize)}\"\r\n      .autocomplete=\"${ifDefined(data.autocomplete)}\"\r\n\r\n      .action=\"${ifDefined(data.action)}\"\r\n      .enctype=\"${ifDefined(data.enctype)}\"\r\n      .method=\"${ifDefined(data.method)}\"\r\n      ?novalidate=\"${ifDefined(data.novalidate)}\"\r\n      .target=\"${ifDefined(data.target)}\"\r\n\r\n      ?block=\"${ifDefined(data.block)}\"\r\n      ?beep=\"${ifDefined(data.beep)}\"\r\n      .timeout=\"${ifDefined(data.timeout)}\"\r\n\r\n      ?flat=\"${ifDefined(data.flat)}\"\r\n      ?rtl=\"${ifDefined(data.rtl)}\"\r\n      ?hide=\"${ifDefined(data.hide)}\"\r\n      ?padding=\"${ifDefined(data.padding)}\"\r\n      ?margin=\"${ifDefined(data.margin)}\"\r\n      ?rounded=\"${ifDefined(data.rounded)}\"\r\n      ?bordered=\"${ifDefined(data.bordered)}\"\r\n      ?shadow=\"${ifDefined(data.shadow)}\"\r\n      ?keep=\"${ifDefined(data.keep)}\"\r\n      .css=\"${ifDefined(data.css)}\"\r\n      .theme=\"${ifDefined(data.theme)}\"\r\n      .os=\"${ifDefined(data.os)}\"\r\n      .browser=\"${ifDefined(data.browser)}\"\r\n      .language=\"${ifDefined(data.language)}\"\r\n      .environment=\"${ifDefined(data.environment)}\"\r\n      .orientation=\"${ifDefined(data.orientation)}\"\r\n      .protocol=\"${ifDefined(data.protocol)}\"\r\n      .template=\"${ifDefined(data.template)}\"      \r\n      >\r\n      <slot>\r\n        ${repeat(items, (item) => me.#renderFormGroup(me.data, item))}\r\n      </slot>\r\n    </gs-form>`;\r\n  }\r\n\r\n  #renderFormGroup(definition, item) {\r\n    return html`<gs-form-group \r\n      .icon=\"${ifDefined(item.icon)}\"\r\n      .layout=\"${ifDefined(item.layout)}\"\r\n      .placement=\"${ifDefined(item.placement)}\"\r\n\r\n      .label=\"${ifDefined(item.label)}\"\r\n      .description=\"${ifDefined(item.description)}\"\r\n      .placeholder=\"${ifDefined(item.placeholder)}\"\r\n      \r\n      .pattern=\"${ifDefined(item.pattern)}\"\r\n      .mask=\"${ifDefined(item.mask)}\"\r\n\r\n      .form=\"${ifDefined(item.form)}\"\r\n      .formaction=\"${ifDefined(item.formaction)}\"\r\n      .formenctype=\"${ifDefined(item.formenctype)}\"\r\n      .formmethod=\"${ifDefined(item.formmethod)}\"\r\n      .formnovalidate=\"${ifDefined(item.formnovalidate)}\"\r\n      .formtarget=\"${ifDefined(item.formtarget)}\"\r\n      .wrap=\"${ifDefined(item.wrap)}\"\r\n      .spellcheck=\"${ifDefined(item.spellcheck)}\"\r\n\r\n      .type=\"${ifDefined(item.type)}\"\r\n      .name=\"${ifDefined(item.name)}\"\r\n      .list=\"${ifDefined(item.list)}\"\r\n      .accept=\"${ifDefined(item.accept)}\"\r\n      .value=\"${ifDefined(item.value)}\"\r\n      \r\n      .lang=\"${ifDefined(item.lang)}\"\r\n      .title=\"${ifDefined(item.title)}\"\r\n      .cols=\"${ifDefined(item.cols)}\"\r\n      .rows=\"${ifDefined(item.rows)}\"\r\n      .step=\"${ifDefined(item.step)}\"\r\n      .min=\"${ifDefined(item.min)}\"\r\n      .max=\"${ifDefined(item.max)}\"\r\n      .maxlength=\"${ifDefined(item.maxlength)}\"\r\n      .minlength=\"${ifDefined(item.minlength)}\"\r\n\r\n      ?reverse=\"${ifDefined(item.reverse)}\"\r\n      ?selectable=\"${ifDefined(item.selectable)}\"\r\n\r\n      ?autoid=\"${ifDefined(item.autoid)}\"\r\n      ?autocopy=\"${ifDefined(item.autocopy)}\"\r\n      ?autoselect=\"${ifDefined(item.autoselect)}\"\r\n\r\n      .autocapitalize=\"${ifDefined(item.autocapitalize)}\"\r\n      .autocorrect=\"${ifDefined(item.autocorrect)}\"\r\n      .autocomplete=\"${ifDefined(item.autocomplete)}\"\r\n\r\n      ?autofocus=\"${ifDefined(item.autofocus)}\"\r\n      ?autoselect=\"${ifDefined(item.autoselect)}\"\r\n\r\n      ?disabled=\"${ifDefined(item.disabled)}\"\r\n      ?checked=\"${ifDefined(item.checked)}\"\r\n      ?multiple=\"${ifDefined(item.multiple)}\"\r\n      ?reveal=\"${ifDefined(item.reveal)}\"\r\n      ?readonly=\"${ifDefined(item.readonly)}\"\r\n      ?required=\"${ifDefined(item.required)}\"\r\n\r\n      .invalidMessage=\"${ifDefined(item.invalidMessage)}\"  \r\n      \r\n      ?block=\"${ifDefined(item.block || definition.block)}\"\r\n      ?beep=\"${ifDefined(item.beep || definition.beep)}\"\r\n      ?timeout=\"${ifDefined(item.timeout || definition.timeout)}\"\r\n\r\n      ?flat=\"${ifDefined(item.flat)}\"\r\n      ?rtl=\"${ifDefined(item.rtl)}\"\r\n      ?hide=\"${ifDefined(item.hide)}\"\r\n      ?padding=\"${ifDefined(item.padding)}\"\r\n      ?margin=\"${ifDefined(item.margin)}\"\r\n      ?rounded=\"${ifDefined(item.rounded)}\"\r\n      ?bordered=\"${ifDefined(item.bordered)}\"\r\n      ?shadow=\"${ifDefined(item.shadow)}\"\r\n      ?keep=\"${ifDefined(item.keep)}\"\r\n      .css=\"${ifDefined(item.css)}\"\r\n      .theme=\"${ifDefined(item.theme)}\"\r\n      .os=\"${ifDefined(item.os)}\"\r\n      .browser=\"${ifDefined(item.browser)}\"\r\n      .language=\"${ifDefined(item.language || definition.language)}\"\r\n      .environment=\"${ifDefined(item.environment)}\"\r\n      .orientation=\"${ifDefined(item.orientation)}\"\r\n      .protocol=\"${ifDefined(item.protocol)}\"\r\n      .template=\"${ifDefined(item.template)}\">\r\n      </gs-form-group>`;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  get #proxify() {\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, GSFormGroupElement.properties));\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGroupElement class\r\n * @module components/GSGroupElement\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSAttributeHandler } from '../base/GSAttributeHandler.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { ElementNavigationController } from '../controllers/ElementNavigationController.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { classMap, createRef, html, render, ifDefined, ref } from '../lib.mjs';\r\n\r\n/**\r\n * Renderer for grouped elements such as Buttons, Navs, Tabs and lists.\r\n * Components handles grouped elements navigation, selection and focus.\r\n * \r\n * @class\r\n * @extends { GSElement }\r\n */\r\nexport class GSGroupElement extends GSElement {\r\n\r\n  static properties = {\r\n    // multiple lists with single select across \r\n    group : {},\r\n    storage: {},    \r\n    circular: { type: Boolean },\r\n    multiple: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #elRef = createRef();\r\n  #controller;\r\n  #controllerGroup;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.data = me.initData();\r\n    me.#controller = new ElementNavigationController(me);\r\n    me.#controllerGroup = new GroupController(me);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    // allow single setting at the container component to apply to the child\r\n    Array.from(me.children).forEach(it => {\r\n      GSAttributeHandler.clone(me, it, false);\r\n    });\r\n  }  \r\n\r\n\r\n  #prerender() {\r\n    const me = this;\r\n    me.queryAll('[generated]').forEach(el => el.remove());\r\n    if (me.data.length > 0) {\r\n      const items = me.renderItems();\r\n      const tpl = document.createElement('template');\r\n      render(items, tpl);\r\n      Array.of(...tpl.children).forEach(el => GSDOM.appendChild(me, el));\r\n    }\r\n  }\r\n  \r\n  firstUpdated(changed) {\r\n    const me = this;\r\n    me.#controller.init();\r\n    me.#controller.attach(me.#elRef.value);\r\n    super.firstUpdated(changed);\r\n    //me.#prerender();\r\n  }  \r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.#prerender();\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      ${me.renderWrappedUI()}\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedUI(name) {\r\n    const me = this;\r\n    return html`<div \r\n      class=\"${classMap(me.renderWrappedClass())}\">\r\n      <slot name=\"${ifDefined(name)}\"></slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    return {};\r\n  }\r\n\r\n  renderItems() {\r\n    return '';\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSItem);\r\n  }\r\n\r\n  previous() {\r\n    this.#controller.previous();\r\n  }\r\n\r\n  next() {\r\n    this.#controller.next();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    this.#controller.reset();\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  isNavigable(el) {\r\n    return el?.tagName === this.childTagName;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onBusEvent(e) {\r\n    let owner, item;  \r\n    ({owner, item} = e.detail);\r\n    if (owner != this) {\r\n      if (!item?.disabled || owner?.selectable) {\r\n        this.reset();\r\n      }\r\n    }\r\n  }\r\n  \r\n  onSelected(el) {\r\n    this.#controllerGroup.notify(el);\r\n  }\r\n\r\n  get focused() {\r\n    return this.#controller.focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#controller.selected;\r\n  }\r\n\r\n  get childTagName() {\r\n    return '';\r\n  }\r\n    \r\n  get items() {\r\n    const me = this;\r\n    return me.queryAll(me.childTagName);\r\n  }\r\n\r\n  get generated() {\r\n    const me = this;\r\n    return this.queryAll(`${me.childTagName}[generated]`);\r\n  }\r\n\r\n  get active() {\r\n    const me = this;\r\n    if (me.multiple) return me.queryAll(`${me.childTagName}[active]`);\r\n    return me.query(`${me.childTagName}[active]`);\r\n  }\r\n\r\n  settings(el) {\r\n    const tagName = customElements.getName(el)?.toUpperCase() || 'GS-ITEM';\r\n    const cfg = GSElement.allProperties(el);\r\n    const items = Array.from(this.children).filter(e => e.tagName === tagName ).map(el => GSAttr.proxify(el, cfg));\r\n    const active = items.filter(el => el.active);\r\n    active.forEach((el, idx) => el.active = idx === 0);\r\n    return items;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-group');\r\n  }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGT0 } from '../properties/index.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSIconElement extends GSElement {\r\n\r\n  static styles = css`\r\n    :host {\r\n      --gs-icon-super-color : cornflowerblue;\r\n      --gs-icon-content : '';\r\n    }\r\n    i::after {\r\n      top: -8px;\r\n      font-size: 0.7em;\r\n      position: relative;\r\n      content: var(--gs-icon-content);\r\n      content: attr(data-super);\r\n      color: var(--gs-icon-super-color);\r\n    }`;\r\n\r\n  static properties = {\r\n    name: { reflect: true, hasChanged: notEmpty },\r\n    size: { reflect: true, type: Number, hasChanged: numGT0 },\r\n    color: { reflect: true, ...color },\r\n    superColor: { attribute : 'super-color'},\r\n    super: { reflect: true },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    _clicked: { attribute:false},\r\n    _hovered: { attribute:false},\r\n  }\r\n\r\n  #ref = createRef();\r\n  \r\n  constructor() {\r\n    super();\r\n    //this.flat = true;\r\n  }\r\n\r\n  /*\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    this.#embdeded = GSDOM.matches(this.parentComponent, '[icon]');\r\n  }\r\n  */\r\n\r\n  updated(changed) {\r\n    if (changed.has('_clicked')) {\r\n      if (this._clicked) this.#postAnimate();\r\n    } \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.setCSSProperty(':host', '--gs-icon-super-color', me.superColor);\r\n    return html`<i  ${ref(me.#ref)}\r\n       class=\"bi ${classMap(me.renderClass())}\"\r\n       data-super=\"${ifDefined(me.super)}\"\r\n       @click=\"${me.animate}\"\r\n       @mouseover=\"${me.#onMouseOver}\"\r\n       @mouseout=\"${me.#onMouseOut}\"></i>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      [`text-${me.color}`]: me.color,\r\n      [`bi-${me.name}`]: me.name,\r\n      'fs': me.size > 0,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.clickCss]: me._clicked,\r\n      [me.hoverCss]: me._hovered,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  async #postAnimate() {\r\n    const me = this;\r\n    const delay = GSUtil.asNum(me.dataset.delay, 1);\r\n    if (delay > 0) {\r\n      await GSUtil.timeout(delay * 1000);\r\n      me._clicked = false;\r\n    }    \r\n  }\r\n\r\n  #onMouseOver(e) {\r\n    this.hover(true);\r\n  }\r\n\r\n  #onMouseOut(e) {\r\n    this.hover(false);\r\n  }\r\n\r\n  animate() {\r\n    const me = this;\r\n    me._hovered = false;\r\n    me._clicked = true;\r\n  }\r\n\r\n  hover(sts = false) {\r\n    const me = this;\r\n    if (sts) {\r\n      me._clicked = false;\r\n    }\r\n    me._hovered = sts;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-icon');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/index.mjs';\r\n\r\nexport class GSIndentElement extends GSElement {\r\n\r\n  static styles = css`.indent {\r\n      --gs-indent : 10px;\r\n      margin-left: var(--gs-indent);\r\n      margin-right: var(--gs-indent);\r\n    }`;\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    size: { type: Number, hasChanged: numGT0 },\r\n    multiplier: { type: Number, hasChanged: numGT0 }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.size = 1;\r\n    me.multiplier = 10;\r\n  }\r\n\r\n  renderUI() {\r\n    const size = this.size * this.multiplier;\r\n    return html`<span class=\"indent\" style=\"--gs-indent: ${size}px;\"></span>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-indent');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nconst numdef = { reflect: true, type: Number, hasChanged: numGE0 };\r\n\r\nexport class GSImageElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { hasChanged: notEmpty },\r\n    width: numdef,\r\n    height: numdef,\r\n    opacity: numdef,\r\n    invert: numdef,\r\n    grayscale: numdef,\r\n    brightness: numdef,\r\n    blur: numdef,\r\n    contrast: numdef,\r\n    saturate: numdef,\r\n    hue: numdef,\r\n    sepia: numdef,\r\n\r\n    alt: {},\r\n    loading: {}\r\n\r\n  }\r\n\r\n  #imageRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    this.#update();\r\n    return this.src;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<img ${ref(me.#imageRef)} \r\n            @load=\"${me.#onLoad}\"\r\n            src=\"${me.src}\" \r\n            alt=\"${me.alt}\" \r\n            loading=\"${ifDefined(me.loading)}\" \r\n            class=\"${me.#styleID}\" \r\n            data-gs-class=\"${me.#styleID}\">\r\n          </img>`;\r\n  }\r\n\r\n  get complete() {\r\n    return this.#imageRef.value?.complete || false;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  #renderStyle() {\r\n    const me = this;\r\n    const filter = me.#buildFilter();\r\n    const css = {\r\n      width: me.width > 0 ? me.width : undefined,\r\n      height: me.height > 0 ? me.height : undefined,\r\n      filter: filter.length > 0 ? filter.join(' ') : ''\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #buildFilter() {\r\n    const me = this;\r\n    const o = [];\r\n\r\n    if (me.blur > 0) o.push(`blur(${me.blur}px)`);\r\n    if (me.invert > 0) o.push(`invert(${me.invert})`);\r\n    if (me.opacity > 0) o.push(`opacity(${me.opacity})`);\r\n    if (me.contrast > 0) o.push(`contrast(${me.contrast})`);\r\n    if (me.grayscale > 0) o.push(`grayscale(${me.grayscale})`);\r\n    if (me.brightness > 0) o.push(`brightness(${me.brightness})`);\r\n\r\n    if (me.hue > 0) o.push(`hue-rotate(${me.hue}deg)`);\r\n    if (me.sepia > 0) o.push(`sepia(${me.sepia}%)`);\r\n    if (me.saturate > 0) o.push(`saturate(${me.saturate}%)`);\r\n\r\n    return o;\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.filter = me.#buildFilter().join(' ').trim();\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const el = e.target;\r\n    const me = this;\r\n    if (el) {\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n      me.emit('loaded', { width: el.width, height: el.height, element: el }, true);\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-image');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayoutElement\r\n */\r\n\r\nimport { classMap, html, ifDefined, templateContent } from '../lib.mjs';\r\nimport { orientation, OrientationTypes } from '../properties/orientation.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSLayoutElement extends GSElement {\r\n\r\n    static properties = {\r\n        type: { ...orientation }\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        id : {},\r\n        type: {},\r\n        min: { type: Number },\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        resizable: { type: Boolean },\r\n        autofit: { type: Boolean },\r\n        vPos: { attribute: 'h-pos' },\r\n        hPos: { attribute: 'v-pos' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.autofit = true;  \r\n        me.#items(me).map((el, idx, els) => me.#dyncss(el, idx, els, 0));\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if ( this.autofit && GSDOM.root(this) === document.body) document.body.classList.add('vh-100');\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const list = me.#items(me).map((el, idx, els) => me.#build(el, idx, els));\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"d-flex flex-fill w-100 h-100 ${classMap(me.renderClass())}\">${list}</div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const horizontal = OrientationTypes.isHorizontal(me.type);\r\n        return {\r\n            ...super.renderClass(),\r\n            'flex-column': horizontal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #items(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSLayoutElement.options));\r\n    }\r\n\r\n    #resizable(el) {\r\n        return el.size > 0 || el.min > 0 || el.max > 0 || el.resizable;\r\n    }\r\n\r\n    #dyncss(el, idx, els, lev = 0) {\r\n        const me = this;\r\n        me.#items(el.self).map((it, idx, items) => me.#dyncss(it, idx, items, lev+1));\r\n        if(me.#resizable(el)) me.dynamicStyle(`gsd-${lev}-${idx}`);\r\n    }\r\n\r\n    #build(el, idx, els, lev = 0) {\r\n\r\n        const me = this;\r\n        const type = el.self.parentElement.type || 'vertical';\r\n\r\n        const list = me.#items(el.self).map((it, idx, items) => me.#build(it, idx, items, lev+1));\r\n        \r\n        const min = el.min;\r\n        const max = el.max;\r\n        const template = el.template;\r\n        const tplEl = me.#elementTemplate(el);\r\n\r\n        const tc = `#${tplEl?.id}` !== template;\r\n\r\n        const dir = el.type || type || 'vertical';\r\n        const horizontal = OrientationTypes.isHorizontal(dir);\r\n        \r\n        const col = list.length > 0 && horizontal ? 'flex-column' : '';\r\n\r\n        const did = `gsd-${lev}-${idx}`;\r\n        const css = me.#panelCSS(el, col, did);\r\n        const style = me.#panelStyle(el, horizontal);\r\n        me.dynamicStyle(did, style);\r\n\r\n        const slot = el.name ? html`<slot name=\"${el.name}\"></slot>` : '';\r\n        const src = html`<div id=\"${ifDefined(el.id)}\" class=\"d-flex ${classMap(css)}\">\r\n            ${list}\r\n            ${templateContent(tplEl)}\r\n            ${template && tc ? html`<gs-template flat src=\"${template}\"></gs-template>` : ''}\r\n            ${slot}\r\n            </div>`;\r\n\r\n        if (!el.resizable) return src;\r\n\r\n        const resize = (idx === els.length - 1) ? 'end' : 'start';\r\n        const splitter = me.#splitter(min, max, type, resize);\r\n\r\n        if (idx === els.length - 1) return [splitter , src];\r\n        return [src, splitter];\r\n    }\r\n    \r\n    #elementTemplate(el) {\r\n        const tplEl = el.self.firstElementChild;\r\n        return tplEl instanceof HTMLTemplateElement ? tplEl : undefined;\r\n    }\r\n\r\n    #panelCSS(el, col, did) {\r\n\r\n        const resizable = this.#resizable(el);\r\n        const grow = resizable ? '' : 'flex-grow-1';\r\n\r\n        let vpos = el.vPos;\r\n        let hpos = el.hPos;\r\n\r\n        hpos = hpos ? `align-items-${hpos}` : '';\r\n        vpos = vpos ? `justify-content-${vpos}` : '';\r\n\r\n        const css = this.mapCSS(el.css, {\r\n            [did] : resizable,\r\n            [col] : col,\r\n            [grow] : grow,\r\n            [hpos] : hpos,\r\n            [vpos] : vpos\r\n        });\r\n    \r\n        return css;        \r\n    }\r\n\r\n    #panelStyle(el, horizontal) {\r\n        const min = el.size || el.min;\r\n        const max = el.max || el.size;\r\n        const style = {};\r\n        if (horizontal) {\r\n            style['min-height'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-height'] = max > 0 ? `${max}px` : undefined;\r\n        } else {\r\n            style['min-width'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-width'] = max > 0 ? `${max}px` : undefined;\r\n        }\r\n        return style;        \r\n    }\r\n\r\n    #splitter(min, max, dir, resize) {\r\n        return html`<gs-splitter split=\"${dir}\" resize=\"${resize}\" min=\"${min}\" max=\"${max}\"></gs-splitter>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-layout');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSLinklement extends GSElement {\r\n\r\n  static properties = {\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    size: { type: Number },\r\n    text: { ...color },\r\n    color: { ...color },\r\n    url: {},\r\n    ping: {},\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    target: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.url = '#';\r\n    // this.text = 'primary'; // do not set as default -> gs-dropdown\r\n    // this.target = '_blank'; // not used \r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n      <a ${ref(me.#refEl)}  \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        title=\"${ifDefined(me.translate(me.tooltip))}\" \r\n        href=\"${ifDefined(me.url)}\" \r\n        ping=\"${ifDefined(me.ping)}\" \r\n        target=\"${ifDefined(me.target)}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        ?disabled=${me.disabled} \r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"        \r\n        @click=\"${me.#onClick}\">\r\n        ${me.#first}${me.#second}\r\n        </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,      \r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [`text-${me.text}`]: me.text,\r\n      [`bg-${me.color}`]: me.color\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.iconEl?.animate();\r\n    me.notify();\r\n    if (me.url === '#' || GSUtil.isStringEmpty(me.url)) {\r\n      GSEvents.prevent(e);\r\n      me.handle(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon css=\"mx-1\" ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    size=\"${this.size}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  /**\r\n   * Generate clickable link\r\n   * @param {*} options \r\n   * @param {*} css \r\n   * @param {*} before \r\n   * @param {*} after \r\n   * @returns \r\n   */\r\n  static generate(options, css, before, after) {\r\n    const opt = options;\r\n    return html`<a class=\"${classMap(css)}\"\r\n        tabindex=\"0\"    \r\n        ${dataset(opt, true)}\r\n        part=\"${ifDefined(opt.part)}\"\r\n        tooltip=\"${ifDefined(opt.tooltip)}\"\r\n        href=\"${ifDefined(opt.url)}\">        \r\n        ${before || ''}\r\n        <slot>${opt.title}</slot> \r\n        ${after || ''}\r\n    </a>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-link');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\n\r\nexport class GSListElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    selectable: { reflect: true, type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = false;\r\n    this.multiple = false;\r\n    this.selectable = false;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  renderClass() {\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group': true,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    return html`<slot></slot>`;\r\n  }\r\n\r\n  reset() {\r\n    this.items.forEach(el => el.reset());\r\n    this.notify();\r\n  }\r\n\r\n  renderItems() {    \r\n    return this.data.map(o => {\r\n      return html`<gs-list-item generated\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-list-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return super.isNavigable(el) && this.selectable;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-LIST-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSListItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    size: { type: Number },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true }\r\n  }\r\n\r\n  #initial;\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.binded();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.#initial = this.active;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-LIST';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n        // allow single setting at the gs-list to apply to the child\r\n        // GSAttributeHandler.clone(this.parentComponent, this, false);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<a  tabindex=\"0\" ${ref(me.#refEl)}\r\n       href=\"${ifDefined(me.url)}\" \r\n       target=\"${ifDefined(me.target)}\" \r\n       class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()} \r\n        ${me.#renderSecond()}\r\n        <slot>${me.renderTemplate()}</slot>\r\n      </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.#itemCSS] : true,\r\n      'active': me.active && me.isSelectable()\r\n    }\r\n    return me.mapCSS(me.#itemStatusCSS, css);\r\n  }\r\n\r\n  isSelectable() {\r\n    return !GSUtil.asBool(this.disabled) || GSUtil.asBool(this.parentComponent.selectable);\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.icon ? html`<gs-icon name=\"${me.icon}\" size=\"${me.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderText() {\r\n    return this.title ? html`<span>${this.translate(this.title)}</span>` : html`<slot name=\"title\"></slot>`;\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.rtl ? this.#renderText() : this.#renderIcon();\r\n  }\r\n\r\n  #renderSecond() {\r\n    return this.rtl ? this.#renderIcon() : this.#renderText();\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || this.#initial || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #inactiveCSS() {\r\n    return this.parentComponent.dataset?.cssInactive || '';\r\n  }\r\n\r\n  get #itemCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #itemStatusCSS() {\r\n    return this.active && this.isSelectable() ? this.#activeCSS : this.#inactiveCSS;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { PlacementTypes, nav, placement } from '../properties/index.mjs';\r\n\r\nexport class GSNavElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    type: nav,\r\n    placement: placement,\r\n    vertical: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = true;\r\n    this.multiple = false;\r\n    this.type = 'pills';\r\n    this.placement = 'start';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-nav-item');\r\n  }\r\n  \r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const isBefore = PlacementTypes.isBefore(me.placement);\r\n    const isTab = me.type === 'tabs';\r\n    const css = {\r\n      'nav': true,\r\n      [`nav-${me.type}`]: me.type,\r\n      'flex-column': me.vertical,\r\n      'border-bottom-0': me.vertical,\r\n      'border-end': isTab && isBefore && me.vertical,\r\n      'border-start': isTab && !isBefore && me.vertical,\r\n      [`justify-content-${me.placement}`]: !me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Render items based on data propprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-nav-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-nav-item>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  onFocused(el) {\r\n    // el?.click();\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-NAV-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { NavTypes, PlacementTypes } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSNavItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    disabled: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    active: { type: Boolean, reflect: true },\r\n    tooltip: {} // Add tooltip property\r\n  }\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-NAV';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div class=\"nav-item ${classMap(me.renderClass())}\">${me.#button}</div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    return this.mapCSS(this.#itemsCSS, super.renderClass());\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get isNav() {\r\n    return true;\r\n  }\r\n\r\n  get vertical() {\r\n    return this.parentComponent.vertical || false;\r\n  }\r\n\r\n  get placement() {\r\n    return this.parentComponent.placement;\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #title() {\r\n    return html`<slot>${this.translate(this.title)}</slot>`;\r\n  }\r\n\r\n  get #icon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  get #first() {\r\n    return this.rtl ? this.#title : this.#icon;\r\n  }\r\n\r\n  get #second() {\r\n    return this.rtl ? this.#icon : this.#title;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#buttonCSS, {});\r\n    if (me.active) obj = me.mapCSS(me.#buildCSS + ' ' + me.#activeCSS, obj);\r\n    return html`<a tabindex=\"0\" type=\"button\" role=\"nav\" \r\n     ${ref(me.#refEl)}\r\n     class=\"nav-link ${classMap(obj)}\"\r\n     href=\"${ifDefined(me.url)}\" \r\n     target=\"${ifDefined(me.target)}\"\r\n     title=\"${ifDefined(me.tooltip)}\"> \r\n        ${me.#first} \r\n        ${me.#second}\r\n      </a>`;\r\n  }\r\n\r\n  get #itemsCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #buttonCSS() {\r\n    return this.parentComponent.dataset?.cssButton || '';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #navType() {\r\n    return NavTypes.indexOf(this.parentComponent.type);\r\n  }\r\n\r\n  // fiix for shadowed DOM, parent class=\"nav nav-pills..\" \r\n  // do not cross shadow dom, so item elements does not see CSS\r\n  // we have to simulate\r\n  get #buildCSS() {\r\n    const isVertical = this.vertical;\r\n    const isBefore = PlacementTypes.isBefore(this.placement);\r\n    switch (this.#navType) {\r\n      // pills\r\n      case 1: return 'rounded text-bg-primary';\r\n      // tabs\r\n      case 2:\r\n        if (isVertical) {\r\n          if (isBefore) {\r\n            return 'shadow-none border border-end-0';\r\n          } else {\r\n            return 'shadow-none border border-start-0';\r\n          }\r\n        }\r\n        return 'shadow-none border border-bottom-0';\r\n      // underline\r\n      case 3: return 'shadow-none border-bottom border-3 fw-medium';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { svg, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSOverlayElement extends GSElement {\r\n\r\n    static properties = {\r\n        color: {},\r\n        target: {},\r\n        autoremove: { type: Boolean },\r\n        opened: { type: Boolean },\r\n        opacity: { type: Number },\r\n        padding: { type: Number },\r\n        radius: { type: Number },\r\n    }\r\n\r\n    #styleID = GSID.id;\r\n    #styleID2 = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        //this.color = 'rgb(0,0,0)';\r\n        this.color = '#000';\r\n        this.opacity = 0.7;\r\n        this.padding = 1;\r\n        this.radius = 6;\r\n        this.dynamicStyle(this.#styleID);\r\n        this.dynamicStyle(this.#styleID2);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', () => me.requestUpdate());\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        if (!me.opened) return '';\r\n        const path = me.#path;\r\n        return path ? html`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:space=\"preserve\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\" preserveAspectRatio=\"xMinYMin slice\"\r\n            viewBox=\"0 0 ${window.innerWidth} ${window.innerHeight}\"\r\n            class=\"gs-overlay gs-overlay-animated ${me.#styleID}\"\r\n            @click=\"${me.reset.bind(me)}\">\r\n            ${path}\r\n        </svg>` : '';\r\n    }\r\n\r\n    async firstUpdated(changed) {\r\n        const me = this;\r\n        const opt = {\r\n            fillRule: \"evenodd\",\r\n            clipRule: \"evenodd\",\r\n            strokeLinejoin: \"round\",\r\n            strokeMiterlimit: \"2\",\r\n            zIndex: \"10000\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    get #path() {\r\n        const me = this;\r\n        const el = GSDOM.query(me.target);\r\n        if (!me.target) return '';\r\n        const pathStr = me.#createSVGPathString(el);\r\n        const opt = { fill: me.color, opacity: me.opacity, pointerEvents: 'auto', cursor: 'auto' };\r\n        me.dynamicStyle(me.#styleID2, opt);\r\n        return svg`<path class=\"${me.#styleID2}\"  d=\"${pathStr}\"></path>`;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n\r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n\r\n        const rect = target.getBoundingClientRect();\r\n\r\n        const padding = me.padding;\r\n        const radius = me.radius;\r\n\r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n\r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n\r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n\r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n\r\n        const val = `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n            M${highlightBoxX},${highlightBoxY} \r\n            h${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n            v${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n            h-${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n            v-${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;\r\n        return val.replace(/[\\t\\n]/g, ' ');\r\n    }\r\n\r\n    static {\r\n        this.define('gs-overlay');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, map, range, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { size, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSPagerElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    size: { ...size },\r\n    first: { type: Boolean },\r\n    last: { type: Boolean },\r\n    next: { type: Boolean },\r\n    previous: { type: Boolean },\r\n    pages: { type: Number },\r\n\r\n    labelFirst: { attribute: 'label-first' },\r\n    labelLast: { attribute: 'label-last' },\r\n    labelNext: { attribute: 'label-next' },\r\n    labelPrevious: { attribute: 'label-previous' },\r\n\r\n    cssItem: { attribute: 'css-item' },\r\n\r\n  }\r\n\r\n  #ref = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.pages = 5;\r\n    me.labelFirst = '&laquo;';\r\n    me.labelLast = '&raquo;';\r\n    me.labelNext = '&rsaquo;';\r\n    me.labelPrevious = '&lsaquo;';\r\n    if (me.#isInTable) {\r\n      me.slot = \"extra\";\r\n    }\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const half = Math.floor((me.pages - 1) / 2);\r\n    const page = me.dataController?.page || 0;\r\n    const start = page - half < 1 ? 1 : page - half;\r\n    const end = page > 0 ? page + half : me.pages;\r\n\r\n    return html`<nav \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        @click=\"${me.#onClick}\"\r\n        @keyup=\"${me.#onKeyUp}\"\r\n        @keydown=\"${me.#onKeyDown}\">\r\n        <ul ${ref(me.#ref)} class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()}\r\n        ${me.#renderPrevious()}\r\n        ${map(range(start, end + 1), (i) => me.#renderItem(i, '', '', i  === page))}\r\n        ${me.#renderNext()}\r\n        ${me.#renderLast()}\r\n        </ul></nav>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = me.size ? SizeTypes[me.size] || me.size : '';\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'pagination': true,\r\n      [`pagination-${size}`]: size,\r\n\r\n    }\r\n    return css;\r\n  }\r\n\r\n  updated() {\r\n    const target = this.#ref.value;\r\n    if (target && this.isFocused) {\r\n      target.querySelector('.active > a')?.focus();\r\n    }\r\n  }\r\n\r\n  onDataRead() {\r\n    this.requestUpdate();\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.first ? this.#renderItem(this.labelFirst, 'first', 'First page') : '';\r\n  }\r\n\r\n  #renderLast() {\r\n    return this.last ? this.#renderItem(this.labelLast, 'last', 'Last page') : '';\r\n  }\r\n\r\n  #renderPrevious() {\r\n    return this.previous ? this.#renderItem(this.labelPrevious, 'previous', 'Previous page') : '';\r\n  }\r\n\r\n  #renderNext() {\r\n    return this.next ? this.#renderItem(this.labelNext, 'next', 'Next page') : '';\r\n  }\r\n\r\n  #renderItem(text = '', name = '', title = '', active = false) {\r\n    const me = this;\r\n    text = GSUtil.decodeHTMLEntities(text);\r\n    return html`<li class=\"page-item ${active ? 'active' : ''}\">\r\n              <a class=\"page-link ${this.cssItem}\" \r\n                 name=\"${name}\" \r\n                 title=\"${me.translate(title)}\" \r\n                 href=\"#\">${me.translate(text)}</a>\r\n            </li>`;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const el = this.#toTarget(e, 'a');\r\n    if (!el) return;\r\n\r\n    const ctrl = me.dataController;\r\n    if (!ctrl) return;\r\n\r\n    const val = el.name || el.text;\r\n    me.emit(val, el);\r\n    \r\n    switch (val) {\r\n      case 'first':\r\n        return ctrl.firstPage();\r\n      case 'last':\r\n        return ctrl.lastPage();\r\n      case 'next':\r\n        return ctrl.nextPage();\r\n      case 'previous':\r\n        return ctrl.prevPage();\r\n    }\r\n\r\n    ctrl.page = val;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const current = this.#toTarget(e, 'li');\r\n    let el = null;\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        el = current?.previousElementSibling;\r\n        break;\r\n      case 'ArrowRight':\r\n        el = current?.nextElementSibling;\r\n        break;\r\n    }\r\n    el = el?.querySelector('a');\r\n    el?.focus();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') {\r\n      this.#toTarget(e, 'a')?.click();\r\n    }\r\n  }\r\n\r\n  #toTarget(e, name) {\r\n    const el = e.target.closest(name) || e.target;\r\n    return el.tagName === name.toUpperCase() ? el : undefined;\r\n  }\r\n\r\n  get #isInTable() {\r\n    return this.parentComponent?.tagName === 'GS-TABLE';\r\n  }\r\n  \r\n  static {\r\n    this.define('gs-pagination');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, position } from '../properties/index.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSPopper } from \"../base/GSPopper.mjs\";\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopupElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    position: { ...position },\r\n    trigger: {},\r\n    target: {},\r\n    autoclose: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    opened: { type: Boolean },\r\n    hPos: { type: Number, attribute: 'h-pos' },\r\n    vPos: { type: Number, attribute: 'v-pos' },\r\n    wMin: { type: Number, attribute: 'w-min' },\r\n    wMax: { type: Number, attribute: 'w-max' },\r\n    hMin: { type: Number, attribute: 'h-min' },\r\n    hMax: { type: Number, attribute: 'h-max' },\r\n\r\n  }\r\n\r\n  #caller = null;\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.autofocus = true;\r\n    this.autoclose = true;\r\n    this.trigger = 'click';\r\n    this.position = 'absolute';\r\n    this.placement = 'bottom';\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachTarget(); // Fixed typo: #attachTaraget -> #attachTarget\r\n    me.attachEvent(window, 'resize', me.close.bind(me));\r\n    me.on('mouseleave', me.#onAuto.bind(me));\r\n  }\r\n\r\n  firstUpdated(changedProperties) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#resize();\r\n      me.#reposition();\r\n    });\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#reposition();\r\n    if (me.autofocus) me.focus();\r\n    me.notify();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div \r\n      ${ref(me.#panelRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"fade ${classMap(me.renderClass())}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      @keydown=\"${me.#onKeyDown}\">\r\n      ${me.renderTemplate()}\r\n      <slot></slot>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': me.opened,\r\n      //'d-none' : !me.opened,\r\n      [me.#styleID]: true,\r\n      [`position-${me.position}`]: me.position,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  focus() {\r\n    this.query('[tabindex], input, select, textarea, button, a', true)?.focus();\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Show popup at x/y position on the screen\r\n   * @param {Number} x \r\n   * @param {Number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const obj = {\r\n      top: '0px',\r\n      left: '0px',\r\n      translate: `${x}px ${y}px`\r\n    };\r\n    me.#resize(obj);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      case 'Escape':\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    //if (!me.opened) return;\r\n    if (me.vPos || me.hPos) {\r\n      const opt = {\r\n        top: '0px',\r\n        left: '0px',\r\n        translate: `${me.hPos}px ${me.vPos}px`\r\n      };\r\n      const rule = me.dynamicStyle(me.#styleID);\r\n      Object.assign(rule.style, opt);\r\n    } else if (me.target) {\r\n      let target = GSDOM.query(document.documentElement, me.target);\r\n      target = target.renderRoot?.firstElementChild || target;\r\n      GSPopper.popupFixed(me.placement, me.#panel, target);\r\n    }\r\n\r\n  }\r\n\r\n  #resize(obj = {}) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n    if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n    if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n    if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n    Object.assign(rule.style, obj);\r\n  }\r\n\r\n  #onPopup(e) {\r\n    const me = this;\r\n    me.#caller = e;\r\n    if (e instanceof Event) {\r\n      GSEvents.prevent(e);\r\n      me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n    }\r\n\r\n    if (me.placement) {\r\n      GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n      me.opened = true;\r\n      return;\r\n    }\r\n\r\n    let x = e.clientX, y = e.clientY;\r\n    const rect = me.#panel.getBoundingClientRect();\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #attachTarget() { // Fixed typo: #attachTaraget -> #attachTarget\r\n    const me = this;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    me.trigger.split(' ').forEach(evt => {\r\n      targets.forEach(target => me.attachEvent(target, evt, me.#onPopup.bind(me)));\r\n    });\r\n  }\r\n\r\n  #onAuto(e) {\r\n    if (this.autoclose) this.close();\r\n  }\r\n\r\n  get #panel() {\r\n    return this.#panelRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-popup');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, classMap, ifDefined } from '../lib.mjs';\r\nimport { literalTemplate } from '../directives/literal.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSProgressElement extends GSElement {\r\n\r\n  static properties = {\r\n    min: { reflect: true, type: Number },\r\n    max: { reflect: true, type: Number },\r\n    step: { reflect: true, type: Number },\r\n    value: { reflect: true, type: Number },\r\n    label: { reflect: true }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.min = 0;\r\n    this.step = 1;\r\n    this.max = 100;\r\n    this.value = 0;\r\n    this.styles = { width: '0%' };\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'progress-bar' : true,\r\n      [me.#styleID] : true\r\n    }\r\n    return css;\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#updateStyle();\r\n    const obj = {min :me.min, max:me.max, step:me.step, value:me.value, percentage:me.percentage};\r\n    return html`\r\n    <div class=\"progress\" @keydown=\"${me.#onKeySelect}\" dir=\"${ifDefined(me.direction)}\">\r\n        <div class=\"${classMap(me.renderClass())}\" \r\n             \r\n             role=\"progressbar\"\r\n             tabindex=\"0\">\r\n             ${literalTemplate(me.label, obj)}\r\n        </div>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    if (changed.has('value')) {\r\n      let val = me.step + changed.get('value');\r\n      val = me.#update(val, val);\r\n      changed.set('value', val);\r\n    }\r\n  }\r\n\r\n  updated(changed) {\r\n    if (changed.has('value')) {\r\n      this.notify();\r\n    }\r\n  }\r\n\r\n  increase(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value + val, me.value);\r\n    return true;\r\n  }\r\n\r\n  decrease(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value - val, me.value);\r\n    return true;\r\n  }\r\n\r\n  get percentage() {\r\n    const me = this;\r\n    return Math.trunc((me.value / me.max) * 100);\r\n  }\r\n\r\n  #updateStyle() {\r\n    const me = this;\r\n    me.styles.width = `${me.percentage}%`;\r\n    me.dynamicStyle(me.#styleID, me.styles);\r\n  }\r\n\r\n  #update(val, old = 0) {\r\n    val = GSUtil.asNum(val, GSUtil.asNum(old));\r\n    const me = this;\r\n    if (val > me.max) val = me.max;\r\n    if (val < me.min) val = me.min;\r\n    return val;\r\n  }\r\n\r\n  #onKeySelect(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp' :\r\n      case 'ArrowRight' :\r\n          return me.increase();\r\n      case 'ArrowLeft' :\r\n      case 'ArrowDown' :\r\n         return me.decrease();\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-progress');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\n\r\nexport class GSSpinnerElement extends GSElement {\r\n\r\n    static styles = css`.spinner-border { border: var(--bs-spinner-border-width) solid currentcolor; border-right-color: transparent; }`;\r\n\r\n    static properties = {\r\n        color: { ...color, reflect: true },\r\n        small: { type: Boolean, reflect: true },\r\n        pulsar: { type: Boolean }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\" role=\"status\"></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"spinner-border\": !me.pulsar,\r\n            \"spinner-grow\": me.pulsar,\r\n            [`text-${me.color}`]: me.color,\r\n            [`spinner-border-sm`]: !me.pulsar && me.small,\r\n            [`spinner-grow-sm`]: me.pulsar && me.small,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-spinner');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitterElement class\r\n * @module components/GSSplitterElement\r\n */\r\n\r\nimport { classMap, createRef, ref, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCSSMap } from '../base/GSCSSMap.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { notEmpty, numGT0, placement } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSSplitterElement extends GSElement {\r\n\r\n    static properties = {\r\n        // Check if splitter use vertical or horizontal splitting\r\n        split: { reflect: true },\r\n        // start|end|top|bottom\r\n        resize: { ...placement, hasChanged: notEmpty },\r\n        size: { type: Number, hasChanged: numGT0 }\r\n    }\r\n\r\n    #cursor = 0;\r\n    #styleID = GSID.id;\r\n    #styleTGT = GSID.id;\r\n    #elRef = createRef();\r\n    #mouseController;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.size = 8;\r\n        me.resize = 'start';\r\n        me.dynamicStyle(me.#styleID);\r\n        me.#load();\r\n        me.#mouseController = new ElementMoveController(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        //this.dynamicStyle(this.#styleTGT, null, true);\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        super.firstUpdated(changed);\r\n        const me = this;\r\n        me.#mouseController.attach(me.#splitter);\r\n        //const shadow = GSDOM.root(me.target) instanceof ShadowRoot;\r\n        //me.dynamicStyle(me.#styleTGT, {}, !shadow);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#elRef)} \r\n            @dblclick=\"${me.#onDoubleClick}\"\r\n            data-gs-class=\"${me.#styleID}\" \r\n            class=\"${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'splitter': true,\r\n            [me.#styleID]: true\r\n        }\r\n        return css;\r\n    }\r\n\r\n    updated(changedProperties) {\r\n        const me = this;\r\n        me.#cssUpdate();\r\n    }\r\n\r\n    /**\r\n    * Lock UI for mouse events to enable resizing over embedded iframes\r\n    * @param {MouseEvent} e \r\n    */\r\n    onStartMove(e) {\r\n        const me = this;\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', { start: true });\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    onMouseMove(e) {\r\n        const me = this;\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Save last position and unlock mouse UI events when resizing finished\r\n     * @param {*} e \r\n     */\r\n    onEndMove(e) {\r\n        const me = this;\r\n        me.#save();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', { stop: true });\r\n    }\r\n\r\n    /**\r\n    * Check if splitter use vertical or hotizontal splitting\r\n    * @returns {Boolean}\r\n    */\r\n    get isVertical() {\r\n        return this.split === 'vertical';\r\n    }\r\n\r\n    get isHorizontal() {\r\n        return !this.isVertical;\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display', 'none')).pop();\r\n        }\r\n        el.classList?.add(me.#styleTGT);\r\n        return el;\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.#elRef.value;\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        return this.target.style;\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n\r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n                .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, true);\r\n                    el.dataset.gsSplitter = true;\r\n                });\r\n        } else {\r\n            me.#lockable\r\n                .filter(el => el.dataset.gsSplitter)\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, false);\r\n                    delete el.dataset.gsSplitter;\r\n                });\r\n        }\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { width: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { height: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        const key = me.isVertical ? 'width' : 'height';\r\n        me.#styleDynamic[key] = val + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { [key]: val + \"px\" }, true);\r\n    }\r\n\r\n    #cssUpdate() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        const opt = {\r\n            [size]: `${me.size}px`,\r\n            [full]: '100%',\r\n            'border-width': '1px',\r\n            cursor: cursor,\r\n            'border-color': 'darkgray',\r\n            'border-style': 'solid',\r\n            'background-color': 'lightgray',\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-splitter');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNavItemElement } from '../NavItem.mjs';\r\n\r\n/**\r\n * Tab component (gs-tab), generate selectable/switchable tabs on a panel\r\n */\r\nexport class GSTabItemElement extends GSNavItemElement {\r\n\r\n  static properties = {\r\n    name: {}\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.#updateCSS + this.css;\r\n  }\r\n\r\n  get #updateCSS() {\r\n    const me = this;\r\n    return me.shouldUpdate() ? GSUtil.normalize(me.parentComponent?.tabCSS) : '';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.parentComponent?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\n\r\n/**\r\n * Container for individual tab; part of tabed panel\r\n */\r\nexport class GSTabPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    name: {},\r\n    template: {},\r\n    active: { type: Boolean, reflect : true }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.active = false;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" \r\n      class=\"${classMap(this.renderClass())}\">\r\n      <slot>\r\n      ${this.template ? html`<gs-template flat src=\"${this.template}\"></gs-template>` : ''}\r\n      </slot></div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tab-pane': true,\r\n      'd-none' : !me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tab-group') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../../base/GSID.mjs';\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { PlacementTypes } from '../../properties/placement.mjs';\r\nimport { GSNavElement } from '../Nav.mjs';\r\n\r\n/**\r\n * Panel with tabs component (gs-tab-group), generate childrens gs-tab and gs-tab-panel \r\n */\r\nexport class GSTabGroupElement extends GSNavElement {\r\n\r\n  static properties = {\r\n    panelCSS: { attribute: 'css-panel' },\r\n    tabCSS: { attribute: 'css-tab' },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n   \r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    // link tabs and panels\r\n    me.items.forEach(el => me.#findPanel(el));\r\n    me.onSelected(me.active);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.items.forEach(el => me.#findPanel(el));\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'd-flex': me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    const me = this;\r\n    const reverse = PlacementTypes.isAfter(me.placement);\r\n    const list = [super.renderWrappedUI('tabs'),\r\n    html`<div class=\"tab-content flex-fill ${me.panelCSS}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <slot name=\"panels\"></slot>\r\n      </div>\r\n      <slot class=\"d-none\"></slot>`];\r\n    return reverse ? list.reverse() : list;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const css = super.renderWrappedClass();\r\n    return me.mapCSS(me.tabCSS, css);\r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    const me = this;\r\n    const tabs =  me.#renderTabs();\r\n    const panels = me.#renderPanels();\r\n    return tabs.concat(...panels);\r\n  }\r\n\r\n  #renderTabs() {    \r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab generated slot=\"tabs\"\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\"    \r\n        title=\"${ifDefined(o.title)}\"\r\n        name=\"${o.name}\"></gs-tab>`;\r\n    });    \r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  #renderPanels() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-panel generated  \r\n        slot=\"panels\" name=\"${o.name}\" \r\n        .active=\"${ifDefined(o.active)}\"\r\n        template=\"${ifDefined(o.template)}\"></gs-tab-panel>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when tab selected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onSelected(el) {\r\n    el?.click();\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = true;\r\n  }\r\n\r\n  /**\r\n   * Callback when tab deselected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onDeselected(el) {\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = false;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-TAB';\r\n  }\r\n\r\n  /**\r\n   * Selected Tab node name is used to find the panel.\r\n   * If panel found, auto-link it with node element\r\n   * @param {GSTabElement} el \r\n   */\r\n  #findPanel(el) {\r\n    if (!el) return null;\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    const generated = me.data?.length > 0;\r\n    let panel = el[key] || me.query(`gs-tab-panel[name=\"${el.name}\"]`, generated);\r\n    if (!el[key]) el[key] = panel;\r\n    return panel;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\n/**\r\n * A HTML Table renderer for tabular data representation.\r\n * Either use \"storage\" property to point to data handler\r\n * or use simpler form by using \"data\" property.\r\n * \r\n * NOTE: Simpler form currently does not suport data filter.\r\n * Simpler form is only for read-ony static data representation.\r\n */\r\nexport class GSTableElement extends GSElement {\r\n\r\n  static #icons = ['sort-up', 'arrow-down-up', 'sort-down-alt'];\r\n\r\n  static styles = css`th:hover { opacity: 50% !important; }`;\r\n\r\n  static CELLS = {\r\n    align: {},\r\n    width: {},\r\n    width: {},\r\n    css: {},\r\n    title: {},\r\n    colspan: {},\r\n    storage: {},\r\n    ref: {}, // if set; use storage or gs-items to map ref value to virtual field\r\n    filter: { type: Boolean },\r\n    hidden: { type: Boolean },\r\n    fixed: { type: Boolean },\r\n    filterType: { attribute: 'filter-type' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    ...GSData.PROPERTIES\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    color: { ...color },\r\n    colorHead: { ...color, attribute: 'head-color' },\r\n    colorSelect: { ...color, attribute: 'select-color' },\r\n    colorSort: { ...color, attribute: 'sort-color' },\r\n    stripedColumn: { type: Boolean, attribute: 'striped-column' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    divider: { type: Boolean },\r\n    striped: { type: Boolean },\r\n    hover: { type: Boolean },\r\n    small: { type: Boolean },\r\n    grid: { type: Boolean },\r\n    borderless: { type: Boolean },\r\n\r\n    sort: { type: Array, state: true },\r\n    columns: { type: Array, state: true },\r\n    key: { type: Number, state: true },\r\n\r\n    data: { type: Array },\r\n    datacolumn: { type: Boolean },\r\n    multisort: { type: Boolean },\r\n    multiselect: { type: Boolean },\r\n    protected: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n    toggle: { type: Boolean },\r\n    sortable: { type: Boolean },\r\n  }\r\n\r\n  #config = [];\r\n  #sortOrder = [];\r\n  #auto = false;\r\n\r\n  constructor() {\r\n    super();\r\n    this.headColor = 'secondary';\r\n    this.colorSelect = 'info';\r\n    this.columns = [];    \r\n    this.data = [];\r\n    this.sort = [];\r\n    this.key = 0;\r\n  }\r\n\r\n  get selected() {\r\n    return this.dataController.selected;\r\n  }\r\n\r\n  set search(val) {\r\n    const me = this;\r\n    if (me.storage && me.dataController) {\r\n      return me.dataController.search = val;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#config = GSItem.proxify(me, GSTableElement.CELLS);\r\n    if (me.columns.length === 0) me.columns = me.#config.map(v => v.name);\r\n    if (!me.storage) {      \r\n      me.storage = me.#auto = GSID.next('table-');\r\n    }\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.dataController.clearSelected(this.data);\r\n    this.data = [];\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'user-select-none': me.protected,\r\n      'table': true,\r\n      'table-sm': me.small,\r\n      'table-hover': me.hover,\r\n      'table-striped': me.striped,\r\n      'table-bordered': me.grid,\r\n      'table-borderless': me.borderless,\r\n      'table-striped-columns': me.stripedColumns,\r\n      [`table-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.dataController?.read();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (me.columns.length != me.sort.length) me.sort = Array(me.columns.length).fill(0);\r\n    if (me.datacolumn && me.data.length > 0) {\r\n      me.columns = me.data[0];\r\n      me.data = me.data.slice(1);\r\n    }\r\n    if (changed.has('multiselect') && !me.multiselect) me.dataController.clearSelected();\r\n    if (changed.has('selectable') && !me.selectable) me.dataController.clearSelected();\r\n    if (changed.has('sortable') || changed.has('multisort')) {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [];\r\n    }\r\n\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const headColor = me.colorHead ? `table-${me.colorHead}` : '';\r\n    return html`\r\n      <table  \r\n       dir=\"${ifDefined(me.direction)}\"\r\n       @keyup=\"${me.#onKeyUp}\"\r\n       @keydown=\"${me.#onKeyDown}\"\r\n       class=\"${classMap(me.renderClass())}\">\r\n        <thead class=\"${ifDefined(headColor)}\">\r\n          ${me.#renderFilters()}\r\n          <tr @click=${me.#onSort}>\r\n            ${me.columns.map((entry, index) => me.#renderColumn(entry, index))}\r\n          </tr>\r\n        </thead>\r\n        <tbody @click=${me.#onSelect} @contextmenu=${me.#onSelect} class=\"${me.divider ? 'table-group-divider' : ''}\" role=\"button\">\r\n          ${me.data.map((entry, index) => me.#renderRecord(entry, index))}\r\n          ${me.#renderEmpty()}\r\n        </tbody>\r\n      </table>\r\n      <slot name=\"extra\">${me.#renderHandler()}</slot>\r\n    `;\r\n  }\r\n\r\n  #renderHandler() {\r\n    const me = this;\r\n    return me.#auto ? html`<gs-data-handler type=\"cached\" mode=\"\" id=${me.#auto} generated></gs-data-handler>` : '';\r\n  }\r\n\r\n  onDataRead(data) {\r\n    const me = this;\r\n    me.data = data;\r\n    //me.dataController.clearSelected();\r\n\r\n    // update filtering\r\n    if (data.length > 0 && me.#hasFilters) {\r\n      me.#config.forEach((entry, index) => {\r\n        entry.columnType = me.#columType(index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear table filters\r\n   */\r\n  clear() {\r\n    this.#input.forEach(el => el.value = '');\r\n    this.dataController?.filter([]);\r\n  }\r\n\r\n  valueAt(row, cell) {\r\n    return this.data.length > row ? this.data[row][cell] : undefined;\r\n  }\r\n\r\n  get #input() {\r\n    return this.queryAll('th > input, th > select', true);\r\n  }\r\n\r\n  get #hasFilters() {\r\n    return this.#config.filter(o => o.filter).length > 0;\r\n  }\r\n\r\n  #columType(index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const cell = me.valueAt(0, me.columns[index]);\r\n    cfg.type = cfg.type || 'text';\r\n    const cfgType = { 'string': 'text', 'currency': 'number', 'timestamp': 'datetime-local' }[cfg.type]\r\n    const dataType = cell instanceof Date ? 'date' : typeof cell;\r\n    return cell ? dataType : cfgType || cfg.type;\r\n  }\r\n\r\n  #renderFilters() {\r\n    const me = this;\r\n    return me.#hasFilters ? html`<tr>${me.columns.map((entry, index) => me.#renderFilter(entry, index))}</tr>` : '';\r\n  }\r\n\r\n  #renderFilter(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (!cfg?.filter) return html`<th></th>`;\r\n\r\n    let mask = '';\r\n    const hasSub = cfg.childElementCount > 0;\r\n    const isDate = cfg.columnType === 'date';\r\n    if (isDate) mask = cfg.format || GSUtil.getDateFormat(cfg.language || GSUtil.language);\r\n    const css = `${GSUtil.normalize(me.cssFilter)} ${GSUtil.normalize(cell.cssFilter)}`; \r\n\r\n    if (hasSub && cfg.fixed) {\r\n      return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n          <select is=\"gs-ext-select\" .index=${index}\r\n              class=\"form-select ${css}\" \r\n              name=\"${cell}\"> \r\n              ${me.#renderOption(cfg)}\r\n              </select>\r\n          </th>`;\r\n    }\r\n\r\n    let listid = '';\r\n    let list = '';\r\n    if (hasSub) {\r\n      listid = `${me.id}-list-${index}`;\r\n      list = html`<datalist id=\"${listid}\">${me.#renderOption(cfg)}</datalist>`;\r\n    } \r\n\r\n    return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n        ${list}\r\n        <input is=\"gs-ext-input\" .index=${index}\r\n            class=\"form-control ${css}\" \r\n            mask=\"${ifDefined(mask)}\"\r\n            list=\"${ifDefined(listid)}\"\r\n            name=\"${cell}\" \r\n            placeholder=\"${ifDefined(cfg.title)}\" \r\n            type=\"${cfg.filterType || cfg.columnType}\"\r\n            data-slots=\"${ifDefined(isDate ? 'DMY' : undefined)}\">\r\n        </th>`;\r\n  }\r\n\r\n  #renderOption(cfg) {\r\n    if (cfg.childElementCount == 0) return '';\r\n    const sub = GSItem.proxify(cfg);\r\n    return sub.map(el => html`<option value=\"${el.value}\">${cfg.fixed ? el.map : ''}</option>`);\r\n  }\r\n\r\n  #renderColumn(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    const css = `${GSUtil.normalize(me.cssHeader)} ${GSUtil.normalize(cell.cssHeader)}`; \r\n    return html`\r\n      <th .index=${index} class=\"${css}\" \r\n        colspan=\"${ifDefined(cfg.colspan)}\"\r\n        width=\"${ifDefined(cfg?.width)}\">\r\n        <div class=\"d-flex justify-content-between\"> \r\n          <span>${cfg?.title || cell}</span>\r\n          ${me.#renderIcon(index)}\r\n        </div>\r\n      </th>\r\n    `\r\n  }\r\n\r\n  #renderIcon(index) {\r\n    const me = this;\r\n    if (!me.sortable) return '';\r\n    const icons = GSTableElement.#icons;\r\n    const sortType = me.sort[index];\r\n    const order = me.multisort ? me.#sortOrder.indexOf(index) + 1 : '';\r\n    return html`<gs-icon name=\"${icons[sortType + 1]}\" super=\"${order > 0 ? order : ''}\" color=\"${ifDefined(me.colorSort)}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderRecord(entry, index) {\r\n    const me = this;\r\n    const selected = me.dataController.isSelected(entry);\r\n    const color = me.colorSelect && selected ? `table-${me.colorSelect}` : '';\r\n    const cells = me.#remapRecord(entry);\r\n    return html`\r\n        <tr .index=${index} class=\"${color}\" tabindex=\"0\" ?selected=${selected}>\r\n          ${cells.map((cell, i) => me.#renderCell(cell, i))}\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  #renderCell(cell, index) {\r\n    const cfg = this.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    return html`<td class=\"text-${cfg?.align}\" colspan=\"${ifDefined(cfg.colspan)}\" ><span>${cell}</span></td>`;\r\n  }\r\n\r\n  #remapRecord(record) {\r\n    const me = this;\r\n    if (!Array.isArray(record)) record = me.columns.map(v => record[v]);\r\n    return record.map((val, i) => me.#config[i] ? GSData.format(me.#config[i], val) : val);\r\n  }\r\n\r\n  #renderEmpty() {\r\n    const me = this;\r\n    return me.data.length > 0 ?  '' :\r\n    html`<tr data-ignore=\"true\"><td colspan=\"${me.columns.length}\" class=\"text-center fw-bold text-muted\">${me.translate('No Data')}</td></tr>`;\r\n  }\r\n\r\n  #elementTofilter(el) {\r\n    if (!el.value) return undefined;\r\n    const isDate = el.type === 'date';\r\n    const val = isDate ? el.valueAsDate : el.value;\r\n    const cfg = this.#config[el.index];\r\n    return { name: el.name, value: val, language : cfg?.language };\r\n  }\r\n\r\n  #onFilter(e) {\r\n    \r\n    const me = this;\r\n    \r\n    const filter = me.#input\r\n      .map(el => me.#elementTofilter(el))\r\n      .filter(el => el?.value);\r\n\r\n    if (me.storage) {\r\n      me.dataController.filter(filter);\r\n    } else {\r\n      // TODO keep full data, use sorted\r\n      // GSData.filter(me.data, filter);\r\n    }\r\n  }  \r\n\r\n  #onSort(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.sortable) return;\r\n    \r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const column = e.target.closest('th');\r\n    if (!icon || !column) return;\r\n\r\n    const idx = column.index !== undefined ? column.index : GSDOM.getElementIndex(column);\r\n    const current = me.sort[idx];\r\n    const sortType = current === 1 ? -1 : current + 1;\r\n\r\n    if (me.multisort) {\r\n      if (sortType == 0) {\r\n        me.#sortOrder = me.#sortOrder.filter(v => v != idx);\r\n      } else if (!me.#sortOrder.includes(idx)) {\r\n        me.#sortOrder.push(idx);\r\n      }\r\n    } else {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [idx];\r\n    }\r\n\r\n    me.sort[idx] = sortType;\r\n\r\n    const sort = me.#prepareSorter(me.sort, me.#sortOrder);\r\n\r\n    if (me.storage) {\r\n      me.dataController?.sort(sort);\r\n    } else {\r\n      me.data = GSData.sortData(me.data, sort);\r\n    }\r\n\r\n    me.emit('sort');\r\n  }\r\n\r\n  #prepareSorter(sort, sortOrder) {\r\n    \r\n    const me = this;\r\n\r\n    if (sort.filter(v => v).length === 0) {\r\n      sort = Array(me.columns.length).fill(0);\r\n      sort[me.key] = 1;\r\n    }\r\n\r\n    // if data record is object (not simple array)\r\n    const isComplex = me.data[0] && !Array.isArray(me.data[0]);\r\n\r\n    // sort list \r\n    const list = sort.map((v, i) => v ? { name: isComplex ? me.columns[i] : undefined, col: i, ord: v, idx: sortOrder.indexOf(i) } : null).filter(v => v);\r\n\r\n    // order sort list by idx\r\n    sort = GSData.sortData(list, [{ name: 'idx', ord: 1 }]);\r\n\r\n    return sort;\r\n  }\r\n\r\n  #onSelect(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.selectable) return;\r\n    \r\n    const tr = e.target.tagName === 'TR' ? e.target : e.target.closest('tr');\r\n    if (!tr) return;\r\n    \r\n    // if context menu is attached and right click made\r\n    if (e.button === 2 && !me.query('gs-context')) return;\r\n    \r\n    const record = me.data[tr.index];\r\n    const isSelected = me.dataController.isSelected(record);\r\n    if (me.multiselect) {\r\n      if (isSelected) {\r\n        me.dataController.removeSelected(record);\r\n      } else {\r\n        me.dataController.addSelected(record);\r\n      }\r\n    } else if (me.toggle) {\r\n      if (isSelected) {\r\n        me.dataController.clearSelected(me.data);\r\n      } else {\r\n        me.dataController.addSelected(record);\r\n      }\r\n    } else {\r\n      me.dataController.clearSelected(me.data);\r\n      me.dataController.addSelected(record);\r\n    }\r\n    me.emit('select');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    if (!e.target.matches('tbody tr')) return;\r\n    let el = null;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        el = e.target.previousElementSibling;\r\n        break;\r\n      case 'ArrowDown':\r\n        el = e.target.nextElementSibling;\r\n        break;\r\n    }\r\n\r\n    if (el) {\r\n      el.focus();\r\n      this.emit('focus', el);\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') this.#onSelect(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-table');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport { createRef, ref, classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { stringArrayConverter, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSTagElement}\r\n */\r\nexport default class GSTagElement extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static styles = css`\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n\r\n    static properties = {\r\n        placeholder: {},\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        name: {},\r\n        data: { type: Array },\r\n        values: { type: Array, reflect: true, converter: stringArrayConverter },\r\n        appendable: { type: Boolean },\r\n        color: { ...color },\r\n        closeColor: { ...color, attribute: 'close-color' },\r\n        cssClose: { attribute: 'css-close' },\r\n        cssTag: { attribute: 'css-tag' },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {}\r\n    }\r\n\r\n    #dataListRef = createRef();\r\n    #inputRef = createRef();\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = '';\r\n        this.data = this.#items;\r\n        this.closeColor = 'light';\r\n        this.color = 'primary';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const tags = me.#renderTags();\r\n        return html`\r\n        <div  dir=\"${ifDefined(me.direction)}\" \r\n            class=\"${classMap(me.renderClass())}\"\r\n            @click=\"${me.#onClick.bind(me)}\">\r\n            ${tags}\r\n            <input type=\"text\" \r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            ${ref(me.#inputRef)}\r\n            name=\"${me.name}\" \r\n            list=\"${me.name}_list\"\r\n            class=\"form-control d-flex w-auto flex-grow-1\" \r\n            placeholder=\"${me.#info}\">\r\n            <datalist ${ref(me.#dataListRef)} id=\"${me.name}_list\">${me.#renderList()}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"d-flex\": true,\r\n            \"flex-wrap\": true,\r\n            \"align-items-center\": true,\r\n            \"gap-1 \": true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    get #info() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return me.placeholder ? me.placeholder : alt;\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTagElement.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.data.length >= me.max;\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax || (!optEl && me.appendable == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (!me.values.includes(fld.value)) {\r\n            me.values.push(fld.value);\r\n            fld.value = '';\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const value = tagEl.dataset.value;\r\n        me.values = me.values.filter(v => v != value);\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v));\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        const size = me.size > 0 ? `fs-${me.size}` : '';\r\n        return html`<div class=\"${classMap(me.#tagClass)}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"${classMap(me.#btnClass)}\"></button></div>`;\r\n    }\r\n\r\n    get #tagClass() {\r\n        const me = this;\r\n        const opt = {\r\n            badge: true,\r\n            tag: true,\r\n            [`fs-${me.size}`]: me.size > 0,\r\n            [`bg-${me.color}`]: me.color ? true : false\r\n        }\r\n        return me.mapCSS(me.cssTag, opt);\r\n    }\r\n\r\n    get #btnClass() {\r\n        const me = this;\r\n        const opt = {\r\n            'btn-close': true,\r\n            'ms-1': true,\r\n            [`bg-${me.closeColor}`]: me.closeColor ? true : false\r\n        }\r\n        return me.mapCSS(me.cssClose, opt);\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        return me.data.map(v => html`<option value=\"${v}\">`);\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el));\r\n    }\r\n\r\n    get #items() {\r\n        return this.#proxify(this).map(el => el.name).filter(v => v ? true : false);\r\n    }\r\n\r\n    get #input() {\r\n        return this.#inputRef.value;\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.#dataListRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-tag');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSTextElement extends GSElement {\r\n\r\n  #text = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.#text = this.innerText;\r\n    this.innerText = \"\";\r\n  }\r\n\r\n  renderUI() {\r\n    return this.translate(this.#text);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-text');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSTooltipElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    title: {},\r\n    target: {},\r\n    opened: { type: Boolean },\r\n    local: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowStyle = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.placement = 'top';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowStyle);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      role=\"tooltip\"\r\n      data-popper-placement=\"${me.placement}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      <div ${ref(me.#arrowRef)} \r\n          class=\"tooltip-arrow ${me.#arrowStyle}\" \r\n          data-gs-class=\"${me.#arrowStyle}\">\r\n      </div>\r\n      <div class=\"tooltip-inner\">${me.translate(me.title)}</div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tooltip': true,\r\n      'bs-tooltip-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  #attachEvents() {\r\n    const me = this;\r\n    me.attachEvent(me.#ref, 'mouseenter', me.open.bind(me));\r\n    me.attachEvent(me.#ref, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const arrowEl = me.#arrow;\r\n    const panelEl = me.#panel;\r\n    if (!panelEl) return;\r\n    if (me.opened) {\r\n      GSPopper.popupFixed(me.placement, panelEl, me.#ref, arrowEl);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, { top: '-1000px', left: '-1000px' });\r\n    }\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return me.local ? me.#refLocal : me.#refGlobal;\r\n    }\r\n  }\r\n\r\n  get #refLocal() {\r\n    const root = GSDOM.root(this);\r\n    return GSDOM.query(root, this.target);\r\n  }\r\n  \r\n  get #refGlobal() {\r\n    return GSDOM.query(document.body, this.target);\r\n  }\r\n\r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-tooltip');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty } from '../properties/index.mjs';\r\n\r\nexport class GSTemplateElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { reflect: true, hasChanged: notEmpty }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    const me = this;\r\n    if (me.flat) {\r\n      me.renderOptions.renderBefore = me;\r\n      return me.parentElement;\r\n    }\r\n    return super.createRenderRoot();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${this.renderTemplate()}`;\r\n  }\r\n\r\n\ttemplateInjected() {\r\n\t\tthis.emit('template-injected', null, true, true);\r\n\t}\r\n\r\n  static {\r\n    this.define('gs-template');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle automatic field value copy and select\r\n */\r\nexport class CopySelectController {\r\n\r\n  #host;\r\n\r\n  #clickCallback;\r\n  #copyCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#clickCallback = me.#onClick.bind(me);\r\n    me.#copyCallback = me.#onCopy.bind(me);\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on?.('click', me.#clickCallback);\r\n    me.#host.on?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host.off?.('click', me.#clickCallback);\r\n    me.#host.off?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  #onCopy() {\r\n    GSUtil.writeToClipboard(this.#host.value);\r\n  }\r\n\r\n  #onClick(e) {\r\n      const me = this;\r\n      if (me.#host.autocopy) GSUtil.writeToClipboard(me.#host.value);\r\n      if (me.#host.autoselect) me.#host.select();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Handle field mask \r\n */\r\nexport class MaskController {\r\n\r\n  static #special = '.^$*+?()[]{}\\|';\r\n\r\n  static #maskType = {\r\n    x: /[0-9a-fA-F]/g,\r\n    n: /[0-9]/g,\r\n    y: /[0-9]/g,\r\n    m: /[0-9]/g,\r\n    d: /[0-9]/g,\r\n    h: /[0-9]/g,\r\n    s: /[0-9]/g,\r\n    '.': /[0-9]/g,\r\n    '#': /[a-zA-Z]/g,\r\n    '*': /[0-9a-zA-Z]/g,\r\n    '_': /./g\r\n  };\r\n\r\n  #back = false;\r\n  #slots;\r\n  #prev;\r\n  #first;\r\n  #accept;\r\n  #pattern;\r\n\r\n  #host;\r\n\r\n  #keyDownCallback;\r\n  #inputCallback;\r\n  #focusCallback;\r\n  #changeCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.initRules();\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    me.#inputCallback = me.#format.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    me.#changeCallback = me.#onChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.initRules();\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n    me.#host.on('input', me.#inputCallback);\r\n    me.#host.on('focus', me.#focusCallback);\r\n    me.#host.on('change', me.#changeCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n    me.#host.off('input', me.#inputCallback);\r\n    me.#host.off('focus', me.#focusCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n  }\r\n\r\n  initRules() {\r\n    const me = this;\r\n    if (!me.pattern) return;\r\n    me.#slots = me.#buildSlots();\r\n    me.#prev = (j => Array.from(me.pattern, (c, i) => me.#slots.has(c) ? j = i + 1 : j))(0);\r\n    me.#first = [...me.pattern].findIndex(c => me.#slots.has(c));\r\n    me.#accept = me.#buildAccept();\r\n    me.#toPattern();\r\n  }\r\n\r\n  checkValidity() {  \r\n    const me = this;  \r\n    let isMatch = true;\r\n    if (me.isValid) {\r\n      isMatch = me.isEmpty || me.isMatch;\r\n      if (!isMatch) me.setCustomValidity('Mask not matched!');\r\n    }\r\n    return me.isValid && isMatch;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n    \r\n  setSelectionRange(i, j) {\r\n    this.#host.setSelectionRange(i, j);\r\n  }\r\n\r\n  select() {\r\n    this.#host.select();\r\n  }\r\n\r\n  get isEmpty() {\r\n    return GSUtil.isStringEmpty(this.raw);\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    const [i, j] = this.#range();\r\n    return this.raw.substring(0, j);\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get pattern() {\r\n    return this.#host.mask;\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get selectionStart() {\r\n    return this.#host.selectionStart;\r\n  }\r\n\r\n  get selectionEnd() {\r\n    return this.#host.selectionEnd;\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.#host.autoselect;\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n\r\n    let isMatch = true;\r\n    if (me.#pattern) {\r\n      me.#pattern.lastIndex = 0;\r\n      isMatch = me.#pattern.test(me.raw);\r\n    }\r\n\r\n    return isMatch;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    this.#back = e.key === \"Backspace\";\r\n  }\r\n\r\n  #onFocus(e) {\r\n    const me = this;\r\n    me.#format();\r\n    if (me.autoselect) me.select();\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.#format();\r\n  }\r\n\r\n  /**\r\n   * If data-slots not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildSlots() {\r\n    const me = this;\r\n    let slots = me.dataset.slots;\r\n    if (!slots) {\r\n      const maskType = MaskController.#maskType;\r\n      slots = [...new Set(me.pattern)]\r\n        .filter(v => maskType[v.toLowerCase()])\r\n        .join('');\r\n    }\r\n    return new Set(slots || \"_\");\r\n  }\r\n\r\n  /**\r\n   * If data-accept not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildAccept() {\r\n    const me = this;\r\n    let accept = me.dataset.accept;\r\n    if (!accept) {\r\n      const maskType = MaskController.#maskType;\r\n      accept = [...new Set(me.pattern)]\r\n        .map(v => maskType[v.toLowerCase()])\r\n        .filter(v => v);\r\n      if (accept.length > 0) {\r\n        const tmp = {};\r\n        accept.forEach(v => tmp[v.src] = v);\r\n        accept = Object.values(tmp);\r\n        return accept.length === 1 ? accept.pop() : accept;\r\n      }\r\n\r\n    }\r\n    return new RegExp(accept || \"\\\\d\", \"g\");\r\n  }\r\n\r\n  #range() {\r\n    const me = this;\r\n    const value = me.raw;\r\n    return [me.selectionStart, me.selectionEnd].map(i => {\r\n      i = me.#clean(value.slice(0, i)).findIndex(c => me.#slots.has(c));\r\n      return i < 0 ? me.#prev[me.#prev.length - 1] : me.#back ? me.#prev[i - 1] || me.#first : i;\r\n    });\r\n  }\r\n\r\n  #format() {\r\n    const me = this;\r\n    const [i, j] = me.#range();\r\n    const val = me.#clean(me.#host.raw);\r\n    me.value = val.join``;\r\n    me.setSelectionRange(i, j);\r\n    me.#back = false;\r\n  }\r\n\r\n  //  TODO support multi #accecpt\r\n  #clean(input) {\r\n    const me = this;\r\n    input = input.match(me.#accept) || [];\r\n    return Array.from(me.pattern, (c, i) => input[i] === c || me.#slots.has(c) ? input.shift() || c : c);\r\n  }\r\n\r\n  #toPattern() {\r\n\r\n    const me = this;\r\n\r\n    if (me.pattern.length === 0) return;\r\n\r\n    const chars = me.pattern.split('');\r\n    const masks = ['^'];\r\n\r\n    const maskType = MaskController.#maskType;\r\n    const special = MaskController.#special;\r\n\r\n    let cnt = 0;\r\n    chars.forEach((v, i) => {\r\n      const m = me.#slots.has(v) ? maskType[v.toLowerCase()] : null;\r\n      if (!m) {\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        cnt = 0;\r\n        if (special.includes(v)) masks.push('\\\\');\r\n        return masks.push(v);\r\n      }\r\n\r\n      chars[i] = new RegExp(m, 'g');\r\n\r\n      if (masks.length === 0) return masks.push(m.source);\r\n\r\n      if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n      if (cnt > 0) masks.push(`{${++cnt}}`);\r\n      cnt = 0;\r\n      masks.push(m.source);\r\n    });\r\n\r\n    if (cnt > 0) masks.push(`{${++cnt}}`);\r\n    masks.push('$');\r\n\r\n    me.#pattern = new RegExp(masks.join(''), 'g');\r\n    // me.#max = me.pattern.length;\r\n    // me.#masks = chars;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle multiple patterns\r\n */\r\nexport class MultipatternController {\r\n\r\n  #host;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n  \r\n  checkValidity() {    \r\n    const me = this;  \r\n    let isMatch = true;\r\n    if (me.isValid) {\r\n      isMatch = me.isEmpty || me.isMatch;\r\n      if (!isMatch) me.setCustomValidity('Pattern not matched!');\r\n    }\r\n    return me.isValid && isMatch;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get patterns() {\r\n    const obj = this.#host.multipattern;\r\n    if (obj instanceof RegExp) return [obj];\r\n    if (Array.isArray(obj)) return obj.filter(o => o instanceof RegExp);\r\n    throw new Error('Invalid multipattern value. Expected RegExp object or array.');\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n    let isMatch = true;\r\n    for (const r of me.patterns) {\r\n      isMatch = r.test(me?.value);\r\n      if (isMatch) break;\r\n    }\r\n   \r\n    return isMatch;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type number to support max length entry\r\n */\r\nexport class NumberController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get maxLength() {\r\n    return GSUtil.asNum(this.#host.maxLength, 0);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n    \r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'number') return me.#onNumberInput(e);\r\n  }\r\n\r\n  #onNumberInput(e) {\r\n    const me = this;\r\n    if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n        me.value = me.value.substring(0, me.maxLength);\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle for input tpye password to support keyboard shortcut for password reveal.\r\n */\r\nexport class PasswordController {\r\n\r\n  #host;\r\n\r\n  #revealing = false;\r\n\r\n  #keyUpCallback;\r\n  #keyDownCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyUpCallback = me.#onKeyUp.bind(me);\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('keyup', me.#keyUpCallback);\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keyup', me.#keyUpCallback);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  get reveal() {\r\n    return this.#host.hasAttribute('reveal');\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  set type(val) {\r\n    if (this.#host) this.#host.type = val;\r\n  }\r\n\r\n  #isReveal(e) {\r\n    return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    const me = this;\r\n    if (e.key === 'Shift' && me.#revealing) {\r\n      me.type = 'password';\r\n    }\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (me.#isReveal(e)) {\r\n      me.#revealing = true;\r\n      me.type = 'text';\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCSSMap } from \"../../../base/GSCSSMap.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type text to support text value changes based on CSS\r\n */\r\nexport class TextController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'text') me.value = me.#updateText(me.value);\r\n  }\r\n\r\n  #updateText(value = '') {\r\n    const map = GSCSSMap.styleValue(this.#host, 'text-transform');\r\n    if (map) value = GSUtil.textTransform(map.value, value);\r\n    return value;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update avaialble selections in another field selections.\r\n */\r\nexport class ListController {\r\n\r\n  #host;\r\n\r\n  #monitorCallback;\r\n  #changeCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#monitorCallback = me.#onMonitor.bind(me);\r\n    me.#changeCallback = me.#onDataChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (list) {\r\n      me.#host.on('blur', me.#blurCallback);\r\n      me.#host.on('change', me.#changeCallback);\r\n      me.#host.attachEvent(me.filter, 'change', me.#monitorCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('blur', me.#blurCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n    me.#host.removeEvent(me.filter, 'change', me.#monitorCallback);\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n      this.#onDataChange();\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get list() {\r\n    const me = this;\r\n    if (me.#host.list) return me.#host.list;\r\n    const list = GSAttr.get(me.#host, 'list');\r\n    return GSDOM.getByID(me.#host.owner, list);\r\n  }\r\n\r\n  get filter() {\r\n    const me = this;\r\n    const filter = GSAttr.get(me.#host, 'data-filter');\r\n    return GSDOM.getByID(me.#host.owner, filter);\r\n  }\r\n\r\n  get owner() {\r\n    return this.#host.owner;\r\n  }\r\n\r\n  get strict() {\r\n    return GSAttr.get(this.#host, 'strict', '');\r\n  }\r\n\r\n  #onBlur(e) {\r\n    if (!this.#isInList()) GSEvents.send(this.#host, 'strict', { ok: false, source: e });\r\n  }\r\n\r\n  #onDataChange(e) {\r\n    const me = this;\r\n    const own = me.owner;\r\n    let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n    let clean = false;\r\n    if (!opt) {\r\n        opt = me.list?.querySelector('option');\r\n        clean = true;\r\n    }\r\n\r\n    const obj = opt?.dataset || {};\r\n    Object.entries(obj).forEach(p => {\r\n        const val = clean ? '' : p[1];\r\n        const key = p[0];\r\n        GSAttr.set(me.#host, `data-${key}`, p[1]);\r\n        if (key === 'id' || key === 'group') return;\r\n\r\n        const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n        const els = Array.from(GSDOM.queryAll(own, filter));\r\n        els.filter(el => el.tagName !== 'OPTION')\r\n            .filter(el => el !== me)\r\n            .filter(el => GSAttr.get(el, 'list').length === 0)\r\n            .forEach(el => me.#togleEl(el, key, val))\r\n    });\r\n  }\r\n\r\n  #onMonitor(e) {\r\n    const me = this;\r\n    const list = me.list;\r\n    me.value = '';\r\n    const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n    GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n    const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n    GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n\r\n  }\r\n\r\n  #togleEl(el, key = '', value = '') {\r\n\r\n    const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n    const isMatch = value.length > 0 && data.includes(value);\r\n    const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n\r\n    if (frmel) {\r\n      GSAttr.toggle(el, 'disabled', !isMatch);\r\n    } else {\r\n      isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n    }\r\n\r\n    const form = GSDOM.closest(el, 'form');\r\n    GSDOM.formElements(form)\r\n      .forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n  }\r\n\r\n  #isInList() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (!list) return true;\r\n    if (!me.strict) return true;\r\n    if (!list.querySelector('option')) return true;\r\n    const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n    return opt != null;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSBeep } from \"../../../base/GSBeep.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Handle for input/testarea to support validity checkups\r\n */\r\nexport class ValidityController {\r\n\r\n  #host;\r\n\r\n  #invalidCallback;\r\n  #blurCallback;\r\n  #changeCallback;\r\n  #focusCallback;\r\n  #inputCallback;\r\n\r\n  #processing;  \r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#processing = false;\r\n    me.#host = host;\r\n    me.#invalidCallback = me.#onInvalid.bind(me);\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#changeCallback = me.#onChange.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on?.('invalid', me.#invalidCallback);\r\n    me.#host.on?.('blur', me.#blurCallback);\r\n    me.#host.on?.('focus', me.#focusCallback);\r\n    me.#host.on?.('change', me.#changeCallback);\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host.off?.('invalid', me.#invalidCallback);\r\n    me.#host.off?.('blur', me.#blurCallback);\r\n    me.#host.off?.('focus', me.#focusCallback);\r\n    me.#host.off?.('change', me.#changeCallback);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  reset() {\r\n    this.setCustomValidity('');\r\n    this.#togglUI(this.isValid);\r\n  }\r\n\r\n  async report() {    \r\n    const me = this;\r\n    if (me.#processing) return;\r\n    me.#processing = true;\r\n    me.reportValidity();\r\n    if (me.isVisible) {\r\n      if (me.block) me.focus();\r\n      if (me.beep && me.isTyped) await me.#beep();\r\n    }\r\n    await GSUtil.timeout(me.timeout);\r\n    me.setCustomValidity(me.isValid ? '' : ' ');\r\n    me.#togglUI(me.isValid);\r\n    me.#processing = false;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.#host.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.#host.reportValidity();\r\n  }\r\n\r\n  focus() {\r\n    return this.#host.focus();\r\n  }\r\n  \r\n  get isTyped() {\r\n    return GSUtil.asBool(this.#host.dataset.typed);\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  get beep() {\r\n    return this.#host.beep;\r\n  }\r\n\r\n  get block() {\r\n    return this.#host.block;\r\n  }\r\n\r\n  get timeout() {\r\n    return this.#host.timeout;\r\n  }\r\n\r\n  get isVisible() {\r\n    return GSDOM.isVisible(this.#host);\r\n  }\r\n\r\n  #onInput(e) {\r\n    this.#host.dataset.typed = true;\r\n    this.#processing = false;\r\n  }\r\n\r\n  #onFocus(e) {\r\n    this.#togglUI(this.isValid);\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    this.report();\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if(me.checkValidity()) {\r\n      me.reset();\r\n    }\r\n  }\r\n\r\n  #onBlur(e) {\r\n    const me = this;\r\n    if (me.isValid) {\r\n      me.reset();\r\n    } else {\r\n      me.checkValidity();\r\n    }\r\n  }\r\n\r\n  #togglUI(isValid) {\r\n    GSDOM.toggleClass(this.#host, 'is-invalid', !isValid);\r\n  }\r\n\r\n  #beep() {\r\n    return GSBeep.beep(100, 1200, 150, 'triangle');\r\n  }\r\n\r\n}  ","\r\nimport { notEqual, defaultConverter } from '../../lib.mjs';\r\n\r\n\r\nconst defaultPropertyDeclaration = {\r\n    attribute: true,\r\n    reflect: false,\r\n    type: String,\r\n    converter: defaultConverter,\r\n    hasChanged: notEqual,\r\n}\r\n\r\nconst attributeToPropertyMap = Symbol();\r\nconst prepare = Symbol();\r\nconst elementProperties = Symbol();\r\nconst finalize = Symbol();\r\nconst finalized = Symbol();\r\n\r\nconst prepareFn = function () {\r\n    const me = this;\r\n    if (Object.getOwnPropertySymbols(me).includes(elementProperties)) return;\r\n    const superCtor = Object.getPrototypeOf(me);\r\n    if (typeof superCtor[finalize] === 'function') superCtor[finalize]();\r\n    me[elementProperties] = new Map(superCtor[elementProperties]);\r\n}\r\n\r\nconst attributeNameForProperty = (name, options) => {\r\n    const attribute = options.attribute;\r\n    return attribute === false\r\n        ? undefined\r\n        : typeof attribute === 'string'\r\n            ? attribute\r\n            : typeof name === 'string'\r\n                ? name.toLowerCase()\r\n                : undefined;\r\n}\r\n\r\n/**\r\n * Reactivity for HTMLInputElement based on Google ltd. Lit ReactiveElement\r\n */\r\nexport class ReactiveInput extends HTMLInputElement {\r\n\r\n    // user defiend \r\n    static properties = {};\r\n    \r\n    static [finalized] = false;\r\n\r\n    #reflectingProperties = undefined;\r\n    #instanceProperties = undefined;\r\n\r\n    #controllers = undefined;\r\n    #updatePromise = undefined;\r\n    #changedProperties = undefined;\r\n    #reflectingProperty = undefined;\r\n\r\n    #hasUpdated = false;\r\n    #isUpdatePending = false;\r\n\r\n    #isConnected = false;\r\n\r\n    /**\r\n     * Returns a list of attributes corresponding to the registered properties.\r\n    */\r\n    static get observedAttributes() {\r\n        Object.defineProperty(ReactiveInput.__proto__, prepare, { value: prepareFn });\r\n        const me = this;\r\n        me[finalize]();\r\n        return me[attributeToPropertyMap] && [...me[attributeToPropertyMap].keys()];\r\n    }\r\n\r\n    static addInitializer(initializer) {\r\n        const me = this;\r\n        me[prepare]();\r\n        me.initializers ??= [].push(initializer);\r\n    }\r\n\r\n    static [finalize]() {\r\n        const me = this;\r\n        //if (Object.hasOwn(me, 'finalized')) return;\r\n        if (me[finalized] === true) return;\r\n        me[finalized] = true;\r\n        me[prepare]();\r\n\r\n        if (Object.hasOwn(me, 'properties')) {\r\n            const props = me.properties;\r\n            const propKeys = [\r\n                ...Object.getOwnPropertyNames(props),\r\n                ...Object.getOwnPropertySymbols(props),\r\n            ];\r\n            for (const p of propKeys) {\r\n                me.createProperty(p, props[p]);\r\n            }\r\n        }\r\n\r\n        // Create the attribute-to-property map\r\n        me[attributeToPropertyMap] = new Map();\r\n        for (const [p, options] of me[elementProperties]) {\r\n            const attr = attributeNameForProperty(p, options);\r\n            if (attr !== undefined) {\r\n                me[attributeToPropertyMap].set(attr, p);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static createProperty(name, options) {\r\n        const me = this;\r\n        if (options.state) options.attribute = false;\r\n        me[prepare]();\r\n        me[elementProperties].set(name, options);\r\n        if (!options.noAccessor) {\r\n            const key = Symbol();\r\n            const descriptor = me.getPropertyDescriptor(name, key, options);\r\n            if (descriptor !== undefined) {\r\n                Object.defineProperty(me.prototype, name, descriptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    static getPropertyDescriptor(name, key, options) {\r\n        const { get, set } = Object.getOwnPropertyDescriptor(this.prototype, name) ?? {\r\n            get() {\r\n                return this[key];\r\n            },\r\n            set(v) {\r\n                this[key] = v;\r\n            },\r\n        }\r\n        return {\r\n            get() {\r\n                return get?.call(this);\r\n            },\r\n            set(value) {\r\n                const me = this;\r\n                const oldValue = get?.call(me);\r\n                set?.call(me, value);\r\n                me.requestUpdate(name, oldValue, options);\r\n            },\r\n            configurable: true,\r\n            enumerable: true,\r\n        }\r\n    }\r\n\r\n    static getPropertyOptions(name) {\r\n        return this[elementProperties].get(name) ?? defaultPropertyDeclaration;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initialize();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.enableUpdating(true);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n        me.#isConnected = true;\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.#isConnected = false;\r\n        this.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        this.#attributeToProperty(name, newValue);\r\n    }\r\n\r\n    // ******************************\r\n    // PUBLIC GETTERS\r\n    // ******************************\r\n\r\n    get hasUpdated() { return this.#hasUpdated; }\r\n    get isUpdatePending() { return this.#isUpdatePending; }\r\n    get renderRoot() { return this; }\r\n\r\n    // ******************************\r\n    // PROTECTED FUNCTIONS \r\n    // ******************************\r\n\r\n    addController(controller) {\r\n        // if (!(controller instanceof ReactiveController)) throw new Error('Argument not instance of ReactiveController');\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.#isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    enableUpdating(requestedUpdate) { }\r\n\r\n    firstUpdated(changedProperties) { }\r\n\r\n    updated(changedProperties) { }\r\n\r\n    getUpdateComplete() { return this.#updatePromise; }\r\n\r\n    scheduleUpdate() { return this.performUpdate(); }\r\n\r\n    shouldUpdate(changedProperties) { return true; }\r\n\r\n    willUpdate(changedProperties) { }\r\n\r\n    update(changedProperties) {\r\n        const me = this;\r\n        // The forEach() expression will only run when when #reflectingProperties is\r\n        // defined, and it returns undefined, setting #reflectingProperties to undefined\r\n        me.#reflectingProperties &&= me.#reflectingProperties.forEach((p) => me.#propertyToAttribute(p, this[p]));\r\n        me.#markUpdated();\r\n    }\r\n\r\n    get updateComplete() {\r\n        return this.getUpdateComplete();\r\n    }\r\n\r\n    requestUpdate(name, oldValue, options) {\r\n        const me = this;\r\n        if (name !== undefined) {\r\n            options ??= (me.constructor).getPropertyOptions(name);\r\n            const hasChanged = options.hasChanged ?? notEqual;\r\n            const newValue = me[name];\r\n            if (hasChanged(newValue, oldValue)) {\r\n                me.#changeProperty(name, oldValue, options);\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (me.#isUpdatePending === false) {\r\n            me.#updatePromise = me.#enqueueUpdate();\r\n        }\r\n    }\r\n\r\n    performUpdate() {\r\n\r\n        const me = this;\r\n        if (!me.#isUpdatePending) return;\r\n\r\n        if (!me.#hasUpdated) {\r\n\r\n            // Mixin instance properties once, if they exist.\r\n            if (me.#instanceProperties) {\r\n                for (const [p, value] of me.#instanceProperties) {\r\n                    this[p] = value;\r\n                }\r\n                me.#instanceProperties = undefined;\r\n            }\r\n\r\n            const elementProps = me.constructor[elementProperties];\r\n            if (elementProps.size > 0) {\r\n                for (const [p, options] of elementProps) {\r\n                    if (\r\n                        options.wrapped === true &&\r\n                        !me.#changedProperties.has(p) &&\r\n                        me[p] !== undefined\r\n                    ) {\r\n                        me.#changeProperty(p, this[p], options);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let shouldUpdate = false;\r\n        const changedProperties = me.#changedProperties;\r\n        try {\r\n            shouldUpdate = me.shouldUpdate(changedProperties);\r\n            if (shouldUpdate) {\r\n                me.willUpdate(changedProperties);\r\n                me.#controllers?.forEach((c) => c.hostUpdate?.());\r\n                me.update(changedProperties);\r\n            } else {\r\n                me.#markUpdated();\r\n            }\r\n        } catch (e) {\r\n            shouldUpdate = false;\r\n            me.#markUpdated();\r\n            throw e;\r\n        }\r\n\r\n        if (shouldUpdate) {\r\n            me.#didUpdate(changedProperties);\r\n        }\r\n    }\r\n\r\n    // ******************************\r\n    // PRIVATE FUNCTIONS \r\n    // ******************************\r\n\r\n    #didUpdate(changedProperties) {\r\n        const me = this;\r\n        me.#controllers?.forEach((c) => c.hostUpdated?.());\r\n        if (!me.#hasUpdated) {\r\n            me.#hasUpdated = true;\r\n            me.firstUpdated(changedProperties);\r\n        }\r\n        me.updated(changedProperties);\r\n    }\r\n\r\n    #markUpdated() {\r\n        const me = this;\r\n        me.#changedProperties = new Map();\r\n        me.#isUpdatePending = false;\r\n    }\r\n\r\n    async #enqueueUpdate() {\r\n        const me = this;\r\n        me.#isUpdatePending = true;\r\n        try {\r\n            await me.#updatePromise;\r\n        } catch (e) {\r\n            Promise.reject(e);\r\n        }\r\n        const result = me.scheduleUpdate();\r\n\r\n        if (result != null) {\r\n            await result;\r\n        }\r\n        return !me.#isUpdatePending;\r\n    }\r\n\r\n    #changeProperty(name, oldValue, options) {\r\n        const me = this;\r\n        if (!me.#changedProperties.has(name)) {\r\n            me.#changedProperties.set(name, oldValue);\r\n        }\r\n\r\n        if (options.reflect === true && me.#reflectingProperty !== name) {\r\n            (me.#reflectingProperties ??= new Set()).add(name);\r\n        }\r\n    }\r\n\r\n    #attributeToProperty(name, value) {\r\n        const me = this;\r\n        const ctor = me.constructor;\r\n        const propName = (ctor[attributeToPropertyMap]).get(name);\r\n        if (propName !== undefined && me.#reflectingProperty !== propName) {\r\n            const options = ctor.getPropertyOptions(propName);\r\n            const converter =\r\n                typeof options.converter === 'function'\r\n                    ? { fromAttribute: options.converter }\r\n                    : options.converter?.fromAttribute !== undefined\r\n                        ? options.converter\r\n                        : defaultConverter;\r\n            // mark state reflecting\r\n            me.#reflectingProperty = propName;\r\n            me[propName] = converter?.fromAttribute(value, options.type);\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #propertyToAttribute(name, value) {\r\n        const me = this;\r\n        const elementProps = me.constructor[elementProperties];\r\n        const options = elementProps?.get(name);\r\n        const attr = attributeNameForProperty(name, options);\r\n        if (attr !== undefined && options.reflect === true) {\r\n            const converter =\r\n                (options.converter)?.toAttribute !==\r\n                    undefined\r\n                    ? (options.converter)\r\n                    : defaultConverter;\r\n            const attrValue = converter?.toAttribute(value, options.type);\r\n\r\n            me.#reflectingProperty = name;\r\n            if (attrValue == null) {\r\n                me.removeAttribute(attr);\r\n            } else {\r\n                me.setAttribute(attr, attrValue);\r\n            }\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #saveInstanceProperties() {\r\n        const me = this;\r\n        const instanceProperties = new Map();\r\n        const elementProps = me.constructor[elementProperties];\r\n        for (const p of elementProps.keys()) {\r\n            if (Object.hasOwn(me, p)) {\r\n                instanceProperties.set(p, me[p]);\r\n                delete me[p];\r\n            }\r\n        }\r\n        if (instanceProperties.size > 0) {\r\n            me.#instanceProperties = instanceProperties;\r\n        }\r\n    }\r\n\r\n    #initialize() {\r\n        const me = this;\r\n        me.#updatePromise = new Promise((res) => me.enableUpdating = res);\r\n        me.#changedProperties = new Map();\r\n        me.#saveInstanceProperties();\r\n        me.requestUpdate();\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        const data = me.form?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        me.on('reset', me.#onReset);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.detachListeners(this);\r\n    }\r\n        \r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity();\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get form() {\r\n        return this.closest('gs-form');\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n    reset() {\r\n        GSDOM.resetSelect(this);\r\n    }\r\n\r\n    /**\r\n     * Find closest top element by CSS selector\r\n     * @param {String} query \r\n     * @returns {HTMLElement}\r\n     */\r\n    closest(query = '') {\r\n        return GSDOM.closest(this, query);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    #onReset(e) {\r\n        this.reset();\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSLog } from \"../../base/GSLog.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.detachListeners(this);\r\n    }\r\n        \r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        try {\r\n            const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n            this.apply(data);\r\n        } catch (error) {\r\n            console.error('Failed to load data:', error);\r\n            GSLog.error(this, error);\r\n        }\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = { value: o };\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSData } from '../../base/GSData.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\nimport { AdoptedController } from '../../controllers/AdoptedController.mjs';\r\nimport { AttributeController } from '../../controllers/AttributeController.mjs';\r\nimport { CopySelectController } from './controllers/CopySelectController.mjs';\r\nimport { MaskController } from './controllers/MaskController.mjs';\r\nimport { MultipatternController } from './controllers/MultipatternController.mjs';\r\nimport { PasswordController } from './controllers/PasswordController.mjs';\r\nimport { NumberController } from './controllers/NumberController.mjs';\r\nimport { TextController } from './controllers/TextController.mjs';\r\nimport { ListController } from './controllers/ListController.mjs';\r\n\r\nimport { ReactiveInput } from './ReactiveInput.mjs';\r\nimport { ValidityController } from './controllers/ValidityController.mjs';\r\n\r\n/**\r\n * Extended HTMLInputElement with controllers support\r\n * adding various features such as masked input support \r\n */\r\nexport class GSInputElement extends ReactiveInput {\r\n\r\n  static properties = {\r\n    autocopy: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    autoselect: { type: Boolean },\r\n    reveal: { type: Boolean },\r\n    mask: { reflect: true },\r\n    multipattern: { type : Object},\r\n\r\n    block: { type: Boolean },\r\n    beep: { type: Boolean },\r\n    timeout: { type: Number }\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n\r\n  #copyselect;\r\n  #maskController;\r\n  #multiPatternController;\r\n  #passwordController;\r\n  #numberController;\r\n  #textController;\r\n  #listController;\r\n  #validityController;\r\n\r\n  constructor() {\r\n    super();\r\n    this.block = false;\r\n    this.beep = false;\r\n    this.timeout = 0;\r\n    this.#copyselect = new CopySelectController(this);\r\n    this.#validityController = new ValidityController(this);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.detachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n\r\n    if (changed.has('mask') && me.mask && me.type === 'text') {\r\n      me.placeholder = me.mask;\r\n      me.#maskController ??= new MaskController(me);\r\n    }\r\n\r\n    if (changed.has('multipattern')) {\r\n      const isMulti = Array.isArray(me.multipattern) && me.multipattern.length > 0;\r\n      const isType = ['text', 'password'].includes(me.type);\r\n      if (isMulti && isType) {\r\n        me.#multiPatternController ??= new MultipatternController(me);\r\n      }\r\n    }\r\n\r\n    if (me.list) {\r\n      me.#listController ??= new ListController(me);\r\n    }\r\n\r\n    switch (me.type) {\r\n      case 'text':\r\n        me.#textController ??= new TextController(me);\r\n        break;\r\n      case 'password':\r\n        me.#passwordController ??= new PasswordController(me);\r\n        break;\r\n      case 'number':\r\n        me.#numberController ??= new NumberController(me);\r\n        break;\r\n    }\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    if (me.autofocus) me.focus();    \r\n    const data = me.formComponent?.data;\r\n    if (data) GSDOM.fromObject2Element(me, data);\r\n    me.checkValidity();\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value) {\r\n    this.#adopted ??= new AdoptedController(me);\r\n    return this.#adopted.style(id, value);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  checkValidity() {\r\n    const me = this;\r\n    me.#validityController.reset();\r\n    super.checkValidity();\r\n    me.#multiPatternController?.checkValidity();\r\n    me.#maskController?.checkValidity();\r\n    super.checkValidity();\r\n    return me.validity.valid;\r\n  }\r\n\r\n  reportValidity() {\r\n    super.reportValidity();\r\n    this.#validityController.report();\r\n  }\r\n\r\n  reset() {\r\n    GSDOM.reset(this);\r\n  }\r\n\r\n  get formComponent() {\r\n    return this.closest('gs-form');\r\n  }\r\n\r\n  get owner() {\r\n    const own = GSDOM.root(this);\r\n    return GSDOM.unwrap(own);\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  get raw() {\r\n    return super.value;\r\n  }\r\n\r\n  get value() {\r\n    return this.#maskController ? this.#maskController.value : super.value;\r\n  }\r\n\r\n  set value(val) {\r\n    super.value = this.mask === val ? '' : val;\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSInputElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   */\r\n  static define(name, clazz) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, { extends: 'input' });\r\n    }\r\n  }\r\n\r\n  static {\r\n    GSInputElement.define('gs-ext-input', GSInputElement);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvent } from \"../../base/GSEvent.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { GSBeep } from \"../../base/GSBeep.mjs\";\r\nimport { CopySelectController } from \"./controllers/CopySelectController.mjs\";\r\nimport { ValidityController } from \"./controllers/ValidityController.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <textarea is=\"gs-ext-text\"></textarea>\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLTextAreaElement}\r\n */\r\nexport class GSTextArea extends HTMLTextAreaElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-text', GSTextArea, { extends: 'textarea' });\r\n        Object.seal(GSTextArea);\r\n    }\r\n\r\n    #isConnected = false;\r\n    #controllers = undefined;\r\n\r\n    #copyselect;\r\n    #validityController;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#copyselect = new CopySelectController(this);\r\n        this.#validityController = new ValidityController(this);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        const data = me.form?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n        me.#isConnected = true;\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#isConnected = false;\r\n        me.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n        GSEvents.detachListeners(me);\r\n    }\r\n\r\n    addController(controller) {\r\n        // if (!(controller instanceof ReactiveController)) throw new Error('Argument not instance of ReactiveController');\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.#isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    checkValidity() {\r\n        const me = this;\r\n        me.#validityController.reset();\r\n        return super.checkValidity();\r\n    }\r\n\r\n    reportValidity() {\r\n        super.reportValidity();\r\n        this.#validityController.report();\r\n    }\r\n\r\n    reset() {\r\n        GSDOM.reset(this);\r\n    }\r\n    \r\n    get block() {\r\n        return this.hasAttribute('block');\r\n    }\r\n\r\n    get beep() {\r\n        return this.hasAttribute('beep');\r\n    }\r\n\r\n    get timeout() {\r\n        return GSAttr.getAsNum(this, 'timeout', 0);\r\n    }\r\n\r\n    set block(val = false) {\r\n        GSAttr.toggle(this, 'block', val);\r\n    }\r\n\r\n    set beep(val = false) {\r\n        GSAttr.toggle(this, 'beep', val);\r\n    }\r\n\r\n    set timeout(val = 0) {\r\n        return GSAttr.setAsNum(this, 'timeout', val);\r\n    }\r\n\r\n    get form() {\r\n        return this.closest('gs-form');\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n    /**\r\n     * Find closest top element by CSS selector\r\n     * @param {String} query \r\n     * @returns {HTMLElement}\r\n     */\r\n    closest(query = '') {\r\n        return GSDOM.closest(this, query);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        this.value = await GSLoader.loadSafe(url, 'GET', null, true);\r\n    }\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined, repeat } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSBreadcrumbElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n    color: { ...color },\r\n    divider: { reflect: true },\r\n    spacing: { reflect: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.spacing = 1;\r\n    me.divider = 'chevron-right';\r\n    me.#updateChildren();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#updateChildren();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<nav part=\"base\" class=\"breadcrumb\" @click=\"${me.#onClick}\" dir=\"${ifDefined(me.direction)}\"><slot>\r\n      ${repeat(me.data || [], (item) => item, (item) => html`\r\n        <gs-breadcrumb-item  \r\n        href=\"${item.href}\"\r\n        color=\"${item.color}\"\r\n        .data=${item}     \r\n        .active=${item.active}\r\n        .divider=\"${item.divider || me.divider}\"\r\n        .spacing=\"${item.spacing || me.spacing}\">\r\n          ${item.$text}\r\n        </gs-breadcrumb-item>\r\n      `)}\r\n    </slot></nav>`;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #updateChildren() {\r\n    const me = this;\r\n    me.queryAll('gs-breadcrumb-item').forEach(el => {\r\n      el.divider = me.divider;\r\n      el.spacing = me.spacing;\r\n      el.color = me.color;\r\n    });\r\n  }\r\n\r\n  #onClick(e) {\r\n    const el = e.target.closest('gs-bradcrumb-item');\r\n    el?.handle(e);\r\n  } \r\n\r\n  static {\r\n    this.define('gs-breadcrumb');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSBreadcrumbItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    color: { ...color },\r\n    data: { state: true, type: Object },\r\n    active: { reflect: true, type: Boolean },\r\n    divider: { state: true, type: Boolean },\r\n    spacing: { state: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div part=\"base\" class=\"breadcrumb-item ${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <span part=\"prefix\"><slot name=\"prefix\"></slot></span>        \r\n        ${me.#label}\r\n        <span part=\"suffix\"><slot name=\"suffix\"></slot></span>\r\n        <span part=\"separator\"><slot name=\"separator\">${me.#separator}</slot></span>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #label() {\r\n    const me = this;\r\n    if (me.active) return html`<slot></slot>`;\r\n    me.data.url = me.data.url || me.href;\r\n    me.data.part = 'label';\r\n    return GSLinklement.generate(me.data, {})\r\n  }\r\n\r\n  get #separator() {\r\n    const me = this;\r\n    return me.nextElementSibling && me.divider ? html`<gs-icon size=\"7\" color=\"${me.color}\" css=\"mx-${me.spacing}\" name=\"${me.divider}\"></gs-icon>` : '';\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.query('a', true), e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-breadcrumb-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport { classMap, createRef, ref, css, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSAttachment } from './Attachment.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSFileBoxElement extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    static properties = {\r\n        cssList: { attribute: 'css-list' },\r\n        cssLabel: { attribute: 'css-label' },\r\n        cssInput: { attribute: 'css-input' },\r\n\r\n        multiple: { reflect: true, type: Boolean },\r\n        directory: { reflect: true, type: Boolean },\r\n        name: {},\r\n        title: {},\r\n        accept: {},\r\n        filter: {},\r\n        maxFileSize: { reflect: true, attribute: 'max-file-size', type: Number }, // New property\r\n    }\r\n\r\n    #listEl = createRef();\r\n    #fileEl = createRef();\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = GSFileBoxElement.CSS;\r\n        this.cssInput = 'd-none';\r\n        this.multiple = true;\r\n        this.title = GSFileBoxElement.TITLE;\r\n        this.filter = '^image\\/(gif|png|jpeg)$'\r\n        this.directory = false;\r\n        this.maxFileSize = 0; // Default to 0, meaning no limit\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div part=\"border\" class=\"${classMap(me.renderClass())}\"\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @click=\"${me.#onClick}\"\r\n            @dragenter=\"${me.#onDragenter}\"\r\n            @dragover=\"${me.#onDragenter}\"\r\n            @dragleave=\"${me.#onDragleave}\"\r\n            @drop=\"${me.#onDrop}\"\r\n            @paste=\"${me.#onPaste}\"\r\n            @change=\"${me.#onChange}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.translate(me.title)}</label>\r\n            <input ${ref(me.#fileEl)}  part=\"input\" \r\n                type=\"file\" accept=\"${me.accept}\" \r\n                class=\"${me.cssInput}\" \r\n                name=\"${me.name}\" \r\n                id=\"${me.name}\" \r\n                ${me.multiple ? \"multiple\" : \"\"} \r\n                ${me.directory ? \"directory webkitdirectory\" : \"\"}>\r\n            <pre ${ref(me.#listEl)} part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    get listEl() {\r\n        return this.#listEl.value;\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.#fileEl.value;\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        // Filter out files that exceed the maxFileSize\r\n        const validAttachments = me.maxFileSize > 0 \r\n            ? attachments.filter(a => a.file.size <= me.maxFileSize)\r\n            : attachments;\r\n\r\n        const accepted = me.emit('accept', { attachments: validAttachments }, true, false, true);\r\n        if (accepted && validAttachments.length) {\r\n            me.#accept(validAttachments);\r\n            me.emit('accepted', { attachments: validAttachments }, true);\r\n        }\r\n    }\r\n\r\n    static styles = css`\r\n        .dash {\r\n            border-style: var(--gs-fieldbox-border, dashed) !important;\r\n            border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n        }\r\n        input[type=file] {\r\n            color : var(--gs-fieldbox-color, transparent);\r\n        } \r\n        input[type=file]::file-selector-button {}             \r\n        input[type=file]::file-selector-button:hover {}`;\r\n\r\n    static {\r\n        this.define('gs-filebox');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/TimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSTimeFormat extends GSElement {\r\n\r\n    static properties = {\r\n        interval: {reflect:true, type:Number},\r\n        language: {reflect:true},\r\n    }\r\n\r\n    #id = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.interval = 1;\r\n        this.language = GSUtil.language;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const date = new Date();\r\n        return date.toLocaleTimeString(this.language);\r\n    }    \r\n\r\n    start() {\r\n        const me = this;\r\n        if (me.interval >0 && me.#id === 0) {\r\n            me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n        } else {\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n        this.#id = 0;\r\n    }\r\n    \r\n    #update() {\r\n       requestAnimationFrame(() => this.requestUpdate());\r\n    }\r\n\r\n    static {\r\n        this.define('gs-time-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/DateFormat\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDate } from '../../base/GSDate.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSDateFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        format: {},\r\n        language: {},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = navigator.language;\r\n        this.value = new Date();\r\n    }\r\n\r\n    renderUI() {\r\n        return this.result;\r\n    }    \r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.date;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.language, me.dataset).format(val);\r\n    }\r\n\r\n    get date() {\r\n        const me = this;\r\n        const o = Date.parse(me.value || new Date());\r\n        const date = new GSDate(o);\r\n        date.language = me.language;\r\n        return date;\r\n    }\r\n\r\n\r\n    static {\r\n        this.define('gs-date-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/YearFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSYearFormat extends GSElement {\r\n\r\n    static properties = {\r\n        offset: {type :Number},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n    }\r\n\r\n    renderUI() {\r\n        return this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        this.define('gs-year-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/CurrencyFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSCurrencyFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        currency: {},\r\n        language: {},\r\n    }\r\n\r\n    renderUI() {\r\n        return this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.language, me.#options).format(me.value);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-currency-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCacheStyles } from \"../../base/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepElement class\r\n * @module components/steps/GSStepElement\r\n */\r\n\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepElement extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-primary';\r\n    static COMPLETED = 'text-bg-secondary';\r\n\r\n    static ICON_CSS = 'border rounded-circle fs-1';\r\n    static TITLE_CSS = 'mb-0 fs-6 mt-3 fw-bold';\r\n\r\n    static properties = {\r\n        title: {},\r\n        icon: {},\r\n        color: {},\r\n        iconCSS: { attribute: 'icon-css' },\r\n        titleCSS: { attribute: 'title-css' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const clazz = GSStepElement;\r\n        this.icon = clazz.INACTIVE;\r\n        this.iconCSS = clazz.ICON_CSS;\r\n        this.titleCSS = clazz.TITLE_CSS;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"step d-block w-100 text-center mb-4\"  dir=\"${ifDefined(me.direction)}\">\r\n            <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color || GSStepElement.INACTIVE}\">\r\n                    ${me.#renderIcon()}\r\n                </div>\r\n            </div>\r\n            <div class=\"step-title ${me.titleCSS}\">${me.translate(me.title)}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    #renderIcon() {\r\n        return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-step');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepsElement class\r\n * @module components/steps/GSStepsElement\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSStepStyle } from \"./StepStyle.mjs\";\r\nimport GSStepElement from './Step.mjs';\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepsElement extends GSElement {\r\n\r\n    static CSS = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n\r\n    #index = -1;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldUpdate(changedProperties) { \r\n        return this.steps.length > 0;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\"><slot></slot></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        return this.mapCSS(GSStepsElement.CSS, super.renderClass());\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get length() {\r\n        return this.steps.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length - 1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isLast) return false;\r\n        if (me.#index > - 1) me.current.color = GSStepElement.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStepElement.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStepElement.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStepElement.SELECTED;\r\n        });\r\n    }\r\n\r\n    static {\r\n        GSStepStyle.style;\r\n        this.define('gs-steps', GSStepsElement);\r\n    }\r\n\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSAttr } from '../../base/GSAttr.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\n\r\nexport class GSNotificationElement extends GSElement {\r\n\r\n    static TOP_START = \"position-fixed top-0 start-0\";\r\n    static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n    static TOP_END = \"position-fixed top-0 end-0\";\r\n\r\n    static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n    static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n    static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n    \r\n    static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n    static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n    static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n    static DEFAULT = GSNotificationElement.BOTTOM_END;\r\n\r\n    static properties = {\r\n        position: { reflect: true },\r\n        native: { reflect: true, type: Boolean }\r\n    };\r\n\r\n    #list = new Set();\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = 'p-3';\r\n        this.position = GSNotificationElement.DEFAULT;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n            class=\"toast-container z-10k ${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        return me.mapCSS(me.#positionCSS, super.renderClass());\r\n    }    \r\n\r\n    get #positionCSS() {\r\n        const clazz = GSNotificationElement;\r\n        const val = this.position || clazz.DEFAULT;\r\n        return val.indexOf('_') > 0 && clazz[val] ? clazz[val] : val;\r\n    }\r\n\r\n    clear() {\r\n        this.queryAll('gs-toast').forEach(el => el.dismiss());\r\n    }\r\n\r\n    info(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n    }\r\n\r\n    success(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n    }\r\n\r\n    warn(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n    }\r\n\r\n    danger(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n    }\r\n\r\n    primary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n    }\r\n\r\n    secondary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n    }\r\n\r\n    dark(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n    }\r\n\r\n    light(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n    }\r\n\r\n    /**\r\n     * Main function to show notification. \r\n     * It has support for Bootstrap based and web based notifications.\r\n     * \r\n     * @async\r\n     * @param {String} title Notification title\r\n     * @param {String} message Notification message\r\n     * @param {String} css CSS styling (web only)\r\n     * @param {Boolean} closable Can user close it (web only)\r\n     * @param {Number} timeout Timeout after which to close notification  (default 2 sec)\r\n     * @param {Number} delay Timeout after which to show notification (default 1 sec)\r\n     * @param {Object} options Options for native Notification\r\n     * @returns {Promise<Notification|GSToast>}\r\n     */\r\n    async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n        if (!message) return;\r\n        const me = this;\r\n        if (me.native) {\r\n            let sts = await GSNotificationElement.requestPermission();\r\n            if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n            if (sts) return sts;\r\n        }\r\n        return me.#showWeb(title, message, css, closable, timeout, delay);\r\n    }\r\n\r\n    #showWeb(title, message, css, closable, timeout, delay) {\r\n        const me = this;\r\n        const tpl = `<gs-toast css=\"${css}\"  opened ${closable ? 'closable' : ''} timeout=\"${timeout}\"  delay=\"${delay}\" message=\"${message}\" title=\"${title}\" language=\"${me.language}\" ></gs-toast>`;\r\n        const el = GSDOM.parse(tpl, true);\r\n        requestAnimationFrame(async () => {\r\n            await me.#delay(delay);\r\n            const toast = me.#dialogToast;\r\n            if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n            toast.appendChild(el);\r\n        });\r\n        return el;\r\n    }\r\n\r\n    async #showNative(title, message, timeout, delay, options = {}) {\r\n        const me = this;\r\n        await me.#delay(delay);\r\n        options.body = options.body || message;\r\n        const notification = new Notification(title, options);\r\n        me.#list.add(notification);\r\n        const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n        notification.addEventListener('close', callback);\r\n        if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n        return notification;\r\n    }\r\n\r\n    get #dialogToast() {\r\n        const dlg = customElements.get('gs-dialog')?.top;\r\n        return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n    }\r\n\r\n    async #delay(delay = 0) {\r\n        if (GSUtil.isNumber(delay) && delay > 0) await GSUtil.timeout(delay * 1000);\r\n    }\r\n\r\n    #clearNative() {\r\n        const me = this;\r\n        me.notification.close();\r\n        me.owner.#list.delete(me.notification);\r\n        if (me.notification.iid) clearTimeout(me.notification.iid);\r\n    }\r\n\r\n    /**\r\n     * Clear all triggered notifications\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n        me.#list.forEach(nn => nn.close());\r\n        me.#list.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is supported\r\n     * @returns {Boolean} \r\n     */\r\n    static get isNativeSupported() {\r\n        return \"Notification\" in self;\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is allowed\r\n     * @returns {Boolean} \r\n     */\r\n    static get isGranted() {\r\n        return Notification.permission === \"granted\";\r\n    }\r\n\r\n    /**\r\n     * Request useage for browser native notification\r\n     * \r\n     * @async\r\n     * @returns {Promise<boolean>} Return granted status\r\n     */\r\n    static async requestPermission() {\r\n        const clazz = GSNotificationElement;\r\n        if (!clazz.isNativeSupported) return false;\r\n        if (!clazz.isGranted) await Notification.requestPermission();\r\n        return clazz.isGranted;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-notification');\r\n    }\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNotificationElement } from './Notification.mjs';\r\n\r\nexport class GSToastElement extends GSElement {\r\n\r\n    static properties = {\r\n        closable: { reflect: true, type: Boolean },\r\n        opened: { reflect: true, type: Boolean },\r\n        message: { reflect: true },\r\n        title: { reflect: true },\r\n        delay: { reflect: true, type: Number },\r\n        timeout: { reflect: true, type: Number }\r\n    }\r\n\r\n    #pending = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.timeout = 2;\r\n        me.delay = 2;\r\n        me.auto = true; \r\n    }\r\n\r\n    shouldUpdate(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.delay > 0 && me.opened && visibilityChange) {\r\n            me.#pending = true;\r\n            me.#pendingUpdate();\r\n        }\r\n        return me.#validParent && (!me.#pending);\r\n    }\r\n\r\n    #isVisibilityChanged(changedProperties) {\r\n        return changedProperties.has('opened');\r\n    }\r\n\r\n    async #pendingUpdate() {\r\n        const me = this;\r\n        await GSUtil.timeout(me.delay * 1000);\r\n        me.#pending = false;\r\n        me.requestUpdate();\r\n    }\r\n\r\n    async updated(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.timeout > 0 && me.opened) {\r\n            await GSUtil.timeout(me.timeout * 1000);\r\n            me.opened = false;\r\n        } else if (visibilityChange && !me.opened) { \r\n            me.remove();\r\n        };\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return me.title ? me.#renderWithHeader() : me.#renderSimple();\r\n    }\r\n\r\n    #renderWithHeader() {\r\n        const me = this;\r\n        return html`\r\n        <div dir=\"${ifDefined(me.direction)}\"\r\n            class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n            <div class=\"toast-header\">\r\n                ${me.translate(me.title)}\r\n                <slot name=\"header\"></slot>\r\n                ${me.closable ? me.#button : ''}\r\n            </div>\r\n            <div class=\"toast-body\">\r\n                ${me.translate(me.message)}\r\n                <slot name=\"body\"></slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    #renderSimple() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.translate(me.message)}\r\n              <slot name=\"body\"></slot>\r\n              </div>\r\n              ${me.closable ? me.#button : ''}\r\n          </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': me.opened,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    dismiss() {\r\n        this.opened = false;\r\n    }\r\n\r\n    get #button() {\r\n        const me = this;\r\n        return html`<button type=\"button\" class=\"btn-close me-2 m-auto\" @click=\"${me.dismiss}\"></button>`;\r\n    }\r\n\r\n    get #validParent() {\r\n        const isToast = GSDOM.hasClass(this.parentElement, 'toast-container');\r\n        const isNotify = this.parentElement instanceof GSNotificationElement;\r\n        return isToast || isNotify;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-toast');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller managing data tree navigation.\r\n * Controller is added to every gs-tree-node and \r\n * reacts on Tree node changes to update UI\r\n */\r\nexport class AbstractTreeController {\r\n\r\n    #host;\r\n    #node;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        host.addController(me);\r\n    }\r\n    \r\n    hostConnected() {\r\n        const me = this;\r\n        me.#node = me.#host.node;\r\n        me.#addNodeController(me);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        const me = this;\r\n        me.#removeNodeController(me);\r\n        me.#host.removeController(me);\r\n    }\r\n\r\n    // before rendering\r\n    hostUpdate() {\r\n        const me = this;\r\n        const oldNode = me.#node;\r\n        me.#node = me.#host.node;\r\n        if (oldNode != me.#node) {\r\n            me.#removeNodeController(me);\r\n            me.#addNodeController(me);\r\n        }\r\n    }\r\n\r\n    // link Tree node callbacks with controller and component\r\n    #addNodeController(controller) {\r\n        this.#host.node?.addController?.(controller);\r\n    }\r\n\r\n    // unlink Tree node callbacks with controller and component\r\n    #removeNodeController(controller) {\r\n        this.#node?.removeController?.(controller);\r\n    }\r\n\r\n    host(node) {\r\n        return node[Symbol.for('gs-element')] || this.#host;\r\n    }\r\n\r\n    match(node) {\r\n        const host = this.host(node);\r\n        return host?.node === node;\r\n    }\r\n\r\n    get store() {\r\n        return this.#host.dataController?.store;\r\n    }\r\n\r\n    requestUpdate(node) {\r\n        if (this.match(node)) this.host(node).requestUpdate();\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { AbstractTreeController } from './AbstractTreeController.mjs';\r\n\r\n/**\r\n * Controller managing data TreeNode callbacks to reflect UI.\r\n */\r\nexport class TreeController extends AbstractTreeController {\r\n\r\n    constructor(host) {\r\n        super(host);\r\n    }\r\n\r\n    #toggleState(node, state = false) {\r\n        const el = this.host(node);\r\n        if (el) el.loading = state;\r\n    }\r\n\r\n    // Tree controller callbacks\r\n    onLoad(node) {\r\n        this.#toggleState(node, true);\r\n    }\r\n\r\n    onRefresh(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onAppend(node, addedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onInsert(node, insertedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onExpand(node) {\r\n        const store = this.store;\r\n        if (store) {\r\n            store.onExpand(node);\r\n        } else {\r\n            this.requestUpdate(node);\r\n        }\r\n    }\r\n\r\n    onCollapse(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onFocusChanged(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onSelectionChanged(node, selectedNode) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onRemove(node) {\r\n        if (this.match(node)) this.host(node).remove();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../../lib.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSTreeItemElement extends GSElement {\r\n\r\n  /*\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n    */\r\n\r\n  static properties = {\r\n    loading: { state: true },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('node')) this.node[Symbol.for('gs-element')] = this;\r\n  }\r\n\r\n  updated() {\r\n    if (this.focused) this.query('a')?.focus();\r\n    this.dataset.visible = this.visible;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const opt = me.value || {};\r\n    opt.tooltip = me.translate(opt.tooltip)\r\n    opt.title = me.translate(opt.title)\r\n    const before = me.loading ? me.#renderSpinner(node.level) : me.#renderIcon(node.level);\r\n    return GSLinklement.generate(opt, me.renderClass(), before);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const opt = {\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      'user-select-none  ': true,\r\n      'border-0': me.#border ? false : true,\r\n      'gs-hide': !me.visible\r\n    };\r\n    return me.mapCSS(me.#cssFocus, me.mapCSS(me.#cssSelected, opt, me.selected && !me.multiselect), me.focused);\r\n  }\r\n\r\n  /**\r\n   * Toggle folder\r\n   */\r\n  toggle() {\r\n    this.opened ? this.close() : this.open();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open() {\r\n    this.#status(true);\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   */\r\n  close() {\r\n    this.#status(false);\r\n  }\r\n\r\n  /**\r\n   * Toggle selection state\r\n   */\r\n  toggleSelection() {\r\n    this.select(!this.selected);\r\n  }\r\n\r\n  focus(val = true) {\r\n    if (val) super.focus();\r\n    this.focused = val == true;\r\n  }\r\n\r\n  select(val = true) {\r\n    this.selected = val == true;\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.querySelector('a'), e);\r\n  }\r\n\r\n  get isLeaf() {\r\n    return this.node?.isLeaf;\r\n  }\r\n\r\n  get isFolder() {\r\n    return !this.isLeaf;\r\n  }\r\n\r\n  get key() {\r\n    return this.node?.key;\r\n  }\r\n\r\n  get value() {\r\n    return this.node?.value || {};\r\n  }\r\n\r\n  get level() {\r\n    return this.node?.level || -1;\r\n  }\r\n\r\n  get focused() {\r\n    return this.node?.focused;\r\n  }\r\n\r\n  get visible() {\r\n    const parent = this.parent;\r\n    return parent?.opened || parent?.level === -1;\r\n  }\r\n\r\n  get parent() {\r\n    return this.node?.parent;\r\n  }\r\n\r\n  get parentItem() {\r\n    const item = this.parent?.[Symbol.for('gs-element')];\r\n    return item instanceof GSTreeItemElement ? item : undefined;\r\n  }\r\n\r\n  set focused(val) {\r\n    val = val === true;\r\n    this.node.focused = val;\r\n  }\r\n\r\n  get selected() {\r\n    return this.node?.selected;\r\n  }\r\n\r\n  set selected(val) {\r\n    val = val === true;\r\n    const me = this;\r\n    if (me.isFolder && me.owner.leaf) val = false;\r\n\r\n    if (me.multiselect) {\r\n      if (val) {\r\n        me.node.selectAll();\r\n      } else {\r\n        me.node.deselectAll();\r\n      }\r\n    } else {\r\n      me.node.selected = val;\r\n    }\r\n  }\r\n\r\n  get opened() {\r\n    return this.node?.opened;\r\n  }\r\n\r\n  set opened(val) {\r\n    this.#status(val === true);\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tree');\r\n  }\r\n\r\n  get multiselect() {\r\n    return this.owner.multiselect;\r\n  }\r\n\r\n  get #cssFocus() { return this.owner.cssFocus || 'focus-ring'; }\r\n  get #cssSelected() { return this.owner.cssSelected || 'active'; }\r\n  get #cssCheck() { return this.owner.cssCheck || ''; }\r\n  get #checkColor() { return this.owner.checkColor || 'secondary'; }\r\n  get #checkColorSelected() { return this.owner.checkColorSelected || 'primary'; }\r\n\r\n  get #border() {\r\n    return this.value?.border === true || this.owner.border === true;\r\n  }\r\n\r\n  get #icon() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const data = me.value;\r\n    const ui = me.owner;\r\n    let itemIco = data.icon || ui.itemIcon;\r\n    if (node.isFolder) itemIco = node.opened ? (data.openIcon || ui.openIcon) : (data.closeIcon || ui.closeIcon);\r\n    return itemIco;\r\n  }\r\n\r\n  #renderIndent(level) {\r\n    return html`<gs-indent size=\"${level}\"></gs-indent>`;\r\n  }\r\n\r\n  #renderSpinner(level) {\r\n    return html`${this.#renderIndent(level)}<gs-spinner small></gs-spinner>`;\r\n  }\r\n\r\n  #renderIcon(level) {\r\n    return html`${this.#renderIndent(level)}${this.#renderMulti()}<gs-icon size=\"5\" name=\"${this.#icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderMulti() {\r\n    const me = this;\r\n    if (!me.multiselect) return '';\r\n    const color = me.selected ? me.#checkColorSelected : me.#checkColor;\r\n    const icon = me.node.isPartialySelected ? 'dash-square-fill' : me.selected ? 'check-square-fill' : 'square';\r\n    return html`<gs-icon size=\"6\" data-type=\"state\" \r\n                css=\"me-1 text-${color} ${me.#cssCheck}\"\r\n                name=\"${icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #status(val = false) {\r\n    const me = this;\r\n    if (me.node?.isFolder) {\r\n      me.node.opened = val;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, css, createRef, ref, repeat, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { TreeController } from './controllers/TreeController.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSTreeElement extends GSElement {\r\n\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n\r\n  static shared = {\r\n    itemIcon: { attribute: 'icon-item' },\r\n    closeIcon: { attribute: 'icon-close' },\r\n    openIcon: { attribute: 'icon-open' },\r\n    cssCheck: { attribute: 'css-check' },\r\n    cssFocus: { attribute: 'css-focus' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    checkColor: { attribute: 'check-color', ...color },\r\n    checkColorSelected: { attribute: 'check-color-selected', ...color },\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode },\r\n    border: { type: Boolean, reflect: true },\r\n    guide: { type: Boolean, reflect: true },\r\n    leaf: { type: Boolean, reflect: true },\r\n    multiselect: { type: Boolean, reflect: true },\r\n    circular: { type: Boolean, reflect: true },\r\n    ...GSTreeElement.shared\r\n  }\r\n\r\n  // GS-ITEM attributes mapping\r\n  static options = {\r\n    ...GSTreeElement.shared,\r\n    css: {},\r\n    icon: {},\r\n    color: {},\r\n    title: {},\r\n    tooltip: {},\r\n    opened: { type: Boolean },\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  #queued = false;\r\n  #listRef = createRef();\r\n\r\n  #controller = null;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.leaf = false;\r\n    me.multiselect = false;\r\n    me.data = GSDOM.toJson(me, true, true).items;\r\n    me.node = new TreeNode(null, { '#tagName': this.tagName }, null, -1);\r\n    me.itemIcon = 'file-earmark';\r\n    me.closeIcon = 'folder'; // caret-right; chevron-right\r\n    me.openIcon = 'folder2-open'; // caret-down; chevron-down\r\n    me.cssSelected = 'active'; // fw-bold\r\n    me.cssFocus = 'focus-ring';\r\n    me.node[Symbol.for('gs-element')] = me;\r\n    me.#controller = new TreeController(me);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n          class=\"treeview ${classMap(me.renderClass())}\"          \r\n          @click=\"${me.#onClick}\"\r\n          @keydown=\"${me.#onKeyDown}\"\r\n          @keyup=\"${me.#onKeyUp}\">\r\n          <div class=\"list-group\" ${ref(me.#listRef)}>\r\n          ${repeat(me.node.walk(me.node, false, false), (node) => node.key, (node) => html`\r\n            <gs-tree-item .node=\"${node}\"></gs-tree-item>\r\n          `)}\r\n          </div>    \r\n        </div>`;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data') && me.data && !me.#queued) {\r\n      me.#queued = true;\r\n      queueMicrotask(() => {\r\n        me.node.clear();\r\n        me.node.fromJSON(me.data);\r\n        me.#queued = false;\r\n        me.requestUpdate();\r\n      });\r\n    }\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('multiselect') && !this.multiselect) this.node?.deselectAll();\r\n    this.node.multi = this.multiselect;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    if (data instanceof TreeNode) {\r\n      if (data.root !== this.node) this.node = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n\r\n  next(expand = false) {\r\n    const me = this;\r\n    let item = me.nextItem;\r\n    if (!item & me.circular) item = me.#first;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (expand && me.focused?.isFolder) me.focused.open();\r\n    }\r\n    return me.focused;\r\n  }\r\n\r\n  previous(collapse = false) {\r\n    const me = this;\r\n    let item = me.previousItem;\r\n    if (!item & me.circular) item = me.#last;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (item.isFolder && collapse) item.close();\r\n    }\r\n    return me.focused;\r\n\r\n  }\r\n\r\n  expandAll() {\r\n    this.node?.expandAll();\r\n  }\r\n\r\n  collapseAll() {\r\n    this.node?.collapseAll();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open(path) {\r\n    const me = this;\r\n    me.focused?.open();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   * TODO - path navigation\r\n   */\r\n  close(path) {\r\n    const me = this;\r\n    me.focused?.close();\r\n  }\r\n\r\n  clear() {\r\n    this.node?.clear();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  reload() {\r\n    this.clear();\r\n    this.dataController?.read();\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host(this.node.selectedNode());\r\n  }\r\n\r\n  get focused() {\r\n    return this.#host(this.node.focusedNode());\r\n  }\r\n\r\n  /**\r\n   * Previous visible ge-node-item\r\n   */\r\n  get previousItem() {\r\n    return this.focused?.node.find(n => n?.visible, true, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  /**\r\n   * Next visible ge-node-item\r\n   */\r\n  get nextItem() {\r\n    return this.focused?.node.find(n => n?.visible, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  get #list() {\r\n    return this.#listRef.value;\r\n  }\r\n\r\n  get #first() {\r\n    return this.#list.firstElementChild;\r\n  }\r\n\r\n  get #last() {\r\n    return this.#list.lastElementChild;\r\n  }\r\n\r\n  #host(node) {\r\n    return node?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  #onClick(e) {\r\n    const isIcon = e.target.closest('gs-icon')?.dataset.type === 'state';\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!el.node) return;\r\n\r\n    const me = this;\r\n\r\n    if (me.multiselect) {\r\n      if (isIcon) el.toggleSelection();\r\n    } else {\r\n      el.select(true);\r\n    }\r\n\r\n    const expandable = (me.multiselect && !isIcon) || (!me.multiselect);\r\n    if (el.isFolder && expandable) el.toggle();\r\n\r\n    el.focus();\r\n    el.handle(e);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    const me = this;\r\n    const el = me.focused;\r\n    if (!el) return;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n        me.next();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (el.isFolder) {\r\n          if (el.opened) {\r\n            me.close();\r\n          } else {\r\n            (el.parentItem || el)?.focus();\r\n          }\r\n        } else {\r\n          me.previous();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if (el.isFolder && !el.opened) {\r\n          me.open();\r\n        } else {\r\n          me.next();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!(el?.node)) return;\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        el.handle(e);\r\n        break;\r\n      case 'Tab':\r\n        el.focus();\r\n        break;\r\n      case 'Space':\r\n        el.select(this.multiselect ? !el.selected : true);\r\n        el.focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\n\r\nexport class GSChartElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/bootstrap-lit';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        config: {},\r\n        storage: {},\r\n        height: { type: Number },\r\n        width: { type: Number },\r\n        data: { type: Array },\r\n        options: { type: Object },\r\n    }\r\n\r\n    #canvasRef = createRef();\r\n    #chart = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.height = 0;\r\n        this.width = 0;\r\n        GSChartElement.#init();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#waitInit();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    shouldUpdate(changed) {\r\n        return GSChartElement.#isChart;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#render();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        const me = this;\r\n        if (changed.has('url') || changed.has('config')) me.#render();\r\n        if (changed.has('data') || changed.has('options')) me.#renderData(me.data, me.options);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<canvas ${ref(me.#canvasRef)} \r\n                class=\"${classMap(me.renderClass())}\"\r\n                width=\"${ifDefined(me.width > 0 ? me.width : false)}\" \r\n                height=\"${ifDefined(me.height > 0 ? me.height : false)}\" >\r\n            </canvas>`;\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.#canvasRef.value;\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    refresh() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    updateChart(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n        const me = this;\r\n        try {\r\n            const options = await GSLoader.loadSafe(me.config, 'GET', null, true, {});\r\n            const data = await GSLoader.loadSafe(me.url, 'GET', null, true, []);\r\n            me.data = data;\r\n            me.options = options;\r\n        } catch (error) {\r\n            GSLog.error(null, error);\r\n        }\r\n    }\r\n\r\n    #renderData(data, options) {\r\n        const me = this;\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChartElement.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => o.data = sets.length === 1 ? data : data[i] || []);\r\n\r\n        if (me.#chart) return me.updateChart(opt);\r\n\r\n        const ctx = me.canvas?.getContext('2d');\r\n        if (ctx) {\r\n            me.#chart = new GSChartElement.#Chart(ctx, opt);\r\n        } else {\r\n            GSLog.error(null, 'Failed to get canvas context');\r\n        }\r\n    }\r\n\r\n    async #waitInit() {\r\n        if (!GSChartElement.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        this.requestUpdate();\r\n    }\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    static async #init() {\r\n        const me = GSChartElement;\r\n        if (me.URL_LIB === false) return;\r\n        if (me.#isChart || me.#initializing) return;\r\n        me.#initializing = true;\r\n        try {\r\n            const origin = GSChartElement.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);\r\n            me.#Chart = Chart;\r\n            me.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            me.#initializing = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert DOM tree into a JSON structure\r\n     * \r\n     * @param {HTMLElement} obj HTML element instance to convert\r\n     * @param {string} name DOM attribute name for object key\r\n     * @param {string} value DOM attribute name for object value\r\n     * @param {string} type DOM attribute name for object type\r\n     * @returns {object}\r\n     */\r\n    static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n        if (!(el instanceof HTMLElement)) return {};\r\n\r\n        const nameV = el.getAttribute(name);\r\n        const valV = el.getAttribute(value);\r\n        const typeV = el.getAttribute(type);\r\n\r\n        let obj = null;\r\n\r\n        switch (typeV) {\r\n            case 'array':\r\n                obj = [];\r\n                break;\r\n            case 'object':\r\n                obj = {};\r\n                break;\r\n            default:\r\n                return GSChartElement.#toType(valV, typeV);\r\n        }\r\n\r\n        const childs = Array.from(el.children);\r\n        const isArray = typeV === 'array';\r\n        const isObject = typeV === 'object';\r\n\r\n        childs.forEach(el => {\r\n            const _nam = el.getAttribute(name);\r\n            if (isArray) {\r\n                obj.push(GSChart.toJson(el, name, value, type));\r\n            } else if (isObject) {\r\n                const tmp = GSChartElement.toJson(el, name, value, type);\r\n                obj[_nam] = tmp;\r\n            } else {\r\n                const _val = el.getAttribute(value);\r\n                const _typ = el.getAttribute(type);\r\n                obj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    static #toType(val, type) {\r\n        switch (type) {\r\n            case 'boolean': return val === 'true';\r\n            case 'number': return parseFloat(val);\r\n            default: return val\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-chart');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        try {\r\n            const data = await GSLoader.load(me.url);\r\n            if (!data) throw new Error(`Code URL ${me.url} unreachable!`);\r\n            me.#data = data;\r\n            me.#onHighlight(data);\r\n        } catch (error) {\r\n            GSDOM.setHTML(me.#code, error.message);\r\n        }\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        try {\r\n            const response = me.#worker;\r\n            const blob = new Blob([response], { type: 'application/javascript' });\r\n            const blobURL = URL.createObjectURL(blob);\r\n            const worker = new Worker(blobURL);\r\n            worker.onmessage = me.#onMessage.bind(me);\r\n            worker.postMessage({ data: data, url: blobURL, append: append });\r\n        } catch (error) {\r\n            GSDOM.setHTML(me.#code, error.message);\r\n        }\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSMarkdownElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        history: { type: Number },\r\n        maxHeight: { type: Number, attribute: 'max-height' },\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        this.history = 10;\r\n        this.dynamicStyle(this.#styleID);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const me = this;\r\n        await me.#initLib();\r\n        if (globalThis.showdown) {\r\n            const opt = { tasklists: true, tables: true };\r\n            me.#converter = new globalThis.showdown.Converter(opt);\r\n            super.connectedCallback();\r\n        }\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('url')) {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url);\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const height = me.maxHeight > 0 ? `${me.maxHeight}px;` : false;\r\n        const opt = { 'max-height': height }\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        return html`<div ${ref(me.#containerRef)} class=\"overflow-auto ${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [me.#styleID] : true,\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        me.#onURL(url);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n\r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n\r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });\r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n            GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n\r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list = GSDOM.queryAll(me.#container, qry);\r\n        requestAnimationFrame(() => list.forEach(el => GSDOM.toggleClass(el, css)) );\r\n    }\r\n\r\n    #handleLinks() {\r\n        const me = this;\r\n        const links = GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n            .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')))\r\n            .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n            .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/'))\r\n            .forEach(el => GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me)));\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        if (me.#cache.length === 0 ) return me.#first;\r\n        const url = me.#cache.pop();\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if (me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdownElement.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-markdown');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSMonacoElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #editor = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = '';\r\n        this.theme = 'vs-dark';\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonacoElement.#init();\r\n        super.connectedCallback();\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.#onMonacoReady();\r\n        super.firstUpdated();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        if (changed.has('theme')) me.#onTheme(me.theme);\r\n        if (changed.has('target')) me.#onTarget(me.target);\r\n        if (changed.has('url')) me.#onURL(me.url);\r\n        if (changed.has('language')) me.#onLanguage(me.language);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#containerRef)} class=\"${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        return this.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    get owner() {\r\n        return this.parentElement;\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        try {\r\n            const data = url ? await GSLoader.load(url) : null;\r\n            if (!data) throw new Error(`Code URL ${url} unreachable!`);\r\n            me.code = '';\r\n            me.#onLanguage(me.language);\r\n            me.code = data;\r\n        } catch (error) {\r\n            me.code = error.message;\r\n        }\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n\r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner?.getBoundingClientRect();\r\n            if (rect) {\r\n                me.#editor.layout({ width: rect.width, height: rect.height });\r\n            }\r\n        });\r\n    }\r\n\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    static #initialized;\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonacoElement.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        const url = GSMonacoElement.URL_LIB;\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${url}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${url}'};\r\n                importScripts('${url}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({\r\n                paths: { 'vs': `${GSMonacoElement.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false }\r\n            });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static async #init() {\r\n        const me = GSMonacoElement;\r\n        if (me.#initialized) return;\r\n        me.#initEnv();\r\n        await me.#initLib();\r\n        await me.#initMonaco();\r\n        me.#initialized = true;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-monaco');\r\n    }\r\n\r\n}"],"names":["GSVersion","version","build","gsstyles","GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSUtil$1","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Date","Boolean","value","toString","val","trim","toLowerCase","str","obj","replace","x","g","split","reverse","join","word","toUpperCase","slice","map","i","capitalize","constructor","o","Array","isArray","isBool","isDate","isNumber","isString","min","max","Math","match","dft","language","sep","numberSeparator","extractNumber","replaceAll","url","test","startsWith","endsWith","pattern","charset","floor","random","length","navigator","languages","flags","RegExp","isStringEmpty","undefined","Intl","NumberFormat","format","DateTimeFormat","string","isNull","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","separator","filter","capitalizeAll","tpl","params","names","keys","vals","values","Function","text","textArea","document","createElement","innerHTML","isStringNonEmpty","window","forEach","a","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","result","permissions","query","state","clipboard","writeText","readText","GSFunction$1","GSFunction","isFunction","includes","own","isFunctionDefined","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","from","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSID","prefx","next","s","l","h","charCodeAt","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","attributes","host","opt","recursive","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","children","proxify","safe","unsafe","dflt","default","multi","hasAttribute","toStringArray","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","first","getDay","mondayFirst","isMondayFirst","days","repeat","push","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","d","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","m","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","k","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Locale","weekInfo","firstDay","charAt","toLocaleString","size","isLowercase","hour","hour12","pop","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","getDateFormat","regex","getFormattedDateRegex","parseFormattedDate","groups","y","Y","valueOf","GSData","currency","extract","key","Set","b","every","index","toSorted","compareArrays","second","arr","indexOf","list","it","cfg","toType","rule","toRegex","childElementCount","querySelector","fmt","style","fields","limit","sts","rec","filterRecord","isPrimitive","filterSimple","filterComplex","filterValue","primitive","found","flt","toCheck","matchDate","matchNumber","op","toLocaleLowerCase","local","toLocaleDateString","iso","toISOString","operator","sort","sortPair","ord","idx","col","v1","v2","compare","order","compareNum","compareString","compareBool","s1","s2","localeCompare","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","partial","r","readFromProperty","readFromObject","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","wrap","appendChild","link","slot","isText","tagName","FORMEL","shadow","queryAll","HTMLButtonElement","hasClass","ownClazz","inheritance","pel","HTMLSelectElement","HTMLSlotElement","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","parentAll","childAll","child","parentElement","offsetParent","c","ShadowRoot","HTMLBodyElement","root","getByID","documentElement","walk","qry","levels","proxy","res","receiver","sanitize","sanitizer","setHTML","Document","textContent","requestAnimationFrame","toggleClass","contains","unwrap","querySelectorAll","defaults","valueAsNumber","selectedOptions","checked","defaultValue","getValue","styleValue","textTransform","ignore","checkValidity","fromElement2Object","fromObject2Element","objectPathExist","fromValue","writeToOject","toValue","plain","innerText","props","allProperties","getAsNum","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","location","hash","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","CLEANUP1","whiteList","asState","isAllowed","toValidationError","allowElement","allowTag","fetch","ok","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","properties","mergeObjects","template","isFormElement","resetSelect","typed","dispatch","isSelect","options","selected","dispatchEvent","Event","bubbles","composed","CustomEvent","detail","message","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","callFunction","sendSuspended","once","chained","suspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","cancelable","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","delete","removeListener","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","for","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","rid","waitAnimationFrame","onResize","attach","GSAbortController","AbortController","super","abort","clearInterval","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","isFunctions","getFilter","exec","create","GSDynamicStyle","deleteRule","getRule","setRule","sync","insertRule","updateRule","isImportant","setProperty","source","dynamicStyleSheetByID","dynamicStyleSheet","gsClass","dynamicRule","dynamicRuleByID","dynamicStyle","assign","dynamicStyleByID","GSCacheStyles","store","dynamic","styles","adopt","adoptedId","GSAdoptedEngine","now","preload","timerID","setInterval","sheets","adoptable","adoptSheet","update","scheduled","sorted","ID","cssText","monitorAttributes","ownerNode","adoptStyle","disconnect","mutationList","onAttributeChange","attributeFilter","attributeOldValue","HTMLLinkElement","rel","as","HTMLStyleElement","then","adoptLink","registerFilter","onMonitorFilter","onMonitorConnect","onMonitorDisconnect","init","GSBeep","AudioContext","webkitAudioContext","audioContext","duration","frequency","volume","isAvailable","audioCtx","oscillatorNode","createOscillator","gainNode","createGain","connect","destination","gain","start","currentTime","stop","onended","isActive","hasBeenActive","userActivation","GSEnvironment","isMobile","userAgentData","mobile","userAgent","isDesktop","isWebkit","protocol","strVal","brands","brand","strAgt","isEdge","isDevice","platform","screen","otype","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","ps","p","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSItem","autofocus","validate","parentComponent","GSElement","tags","collect","definition","GSLoader","GS_TEMPLATE_URL","origin","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","UNIQUE","searchParams","append","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GS_LOCALIZATION_LANGUAGE","lang","GSLocalization","GSLocalizationImpl","queue","queued","GS_LOCALIZATION_URL","translate","deft","getLanguage","texthash","reset","promises","loadWait","sequential","Pragma","isDefault","hk","details","GSPopper","asRect","sx","scrollX","sy","scrollY","top","bottom","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","arrow","pos","fromPlacement","isPlacementValid","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","aopt","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","applyDynamicStyle","GSQueryCSS","property","object","GSQuery","instance","GSTemplateCache","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTheme","switch","theme","STORAGE","htmlEl","bsTheme","matchMedia","q","URLSearchParams","onTheme","settings","getSystemDefaultTheme","darkMode","lightMode","setup","GSAttributeHandler","anchor","call","inject","swap","trigger","calls","toggles","triggers","handle","targets","handleTarget","handleBinding","handleAction","handleSwap","handleInject","handleAttribute","handleProperty","handleToggle","handleTrigger","handleCall","handleExec","handleTemplate","field","form","isForm","HTMLFormElement","isField","toObject","isAttributeJSON","jsonToAttr","toggleAttribute","isPropertyJSON","toggleProperty","tout","symbol","toHTML","applyContent","applyTemplate","clone","insertAdjacent","detach","DEFINITION","override","Stack","item","unshift","peek","isEmpty","Queue","enqueue","dequeue","BinaryTreeNode","isLeaf","hasChildren","isRoot","BinaryTree","inOrderTraversal","postOrderTraversal","preOrderTraversal","insert","parentNodeKey","canInsertLeft","canInsertRight","find","Node","previous","release","toJSON","DoublyLinkedList","tail","previousNode","insertAt","splice","insertFirst","insertLast","getAt","removeAt","acc","toArray","iterator","isInvalid","isInvalidIndex","isInteger","Tree","folder","leaf","up","levelID","nodeID","isFolder","hasMore","firstChild","lastChild","down","previousSibling","inclusive","flat","iterate","filtered","Je","newOne","findByKey","flatten","fromJSON","raw","hasParent","GSReadWriteRegistryImpl","handlers","INTERNAL","addHandler","removeHandler","getHandler","newHandler","enabled","verify","unregister","rw","resetRegistry","GSReadWriteRegistry","GSAbstractReadWrite","processors","enable","addProcessor","processor","removeProcessor","disable","isRegistered","notify","onRead","postRead","onWrite","postWrite","addSelected","asArray","SELECT","removeSelected","clearSelected","getSelected","isSelected","GSReadWrite","reader","writer","mode","skip","TYPE","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCachedReadWrite","reformat","records","postFilter","sortData","filterData","search","read","TreeNode","opened","focused","focusedNode","selectedNode","controllers","select","focus","open","addController","removeController","visible","expand","collapse","changed","onFocusChanged","onSelectionChanged","isPartialySelected","selectAll","deselectAll","selectionFlag","onSelectAll","onDeselectAll","selectedNodes","refresh","onRefresh","loading","onLoad","expandAll","collapseAll","expanded","collapsed","onExpand","onCollapse","onAppend","onInsert","GSTreeReader","resetData","litUrl","GS_LIT_URL","litModule","ReactiveController","ReactiveElement","AsyncDirective","AsyncReplaceDirective","CSSResult","Directive","LitElement","PartType","TemplateResultType","UnsafeHTMLDirective","UntilDirective","_$LE","_$LH","adoptStyles","asyncAppend","asyncReplace","choose","classMap","clearPart","createRef","defaultConverter","directive","getCommittedValue","getCompatibleStyle","getDirectiveClass","guard","ifDefined","insertPart","isCompiledTemplateResult","isDirectiveResult","isServer","isSingleExpression","isTemplateResult","keyed","literal","live","noChange","notEqual","nothing","range","ref","removePart","render","setChildPartValue","setCommittedValue","staticHtml","staticSvg","styleMap","supportsAdoptingStyleSheets","svg","templateContent","unsafeCSS","unsafeHTML","unsafeSVG","unsafeStatic","until","when","withStatic","gsAction","gsAnchor","gsAttribute","gsCall","gsExec","gsInject","gsProperty","gsSwap","gsTarget","gsTemplate","gsToggle","gsTrigger","gsValue","DatasetDirective","part","srcset","DOMStringMap","remap","hasOwn","descriptors","getOwnPropertyDescriptors","listProperties","listGetters","getPrototypeOf","literalTemplate","listGettable","cssMap","CssMapDirective","partInfo","ATTRIBUTE","strings","classInfo","_previousClasses","_staticClasses","notEmpty","newVal","oldVal","numGT0","numGE0","numLT0","numLE0","AutocapitalizeTypes","autocapitalize","hasChanged","AutocompleteTypes","autocomplete","AutocorrectTypes","autocorrect","ButtonTypes","buttonType","is","ColorTypes","color","EnvironmentTypes","environment","InputTypes","inputType","NavTypes","nav","OrientationTypes","PlacementTypes","PositionTypes","ProtocolTypes","SizeTypes","normal","medium","small","large","big","extra","stringArrayConverter","fromAttribute","toAttribute","AdoptedController","hostConnected","hostDisconnected","isGlobal","rules","removeRule","renderRoot","onAdopted","AttributeController","eventName","onNotify","isFormEl","ContentController","refs","removeContent","hostUpdated","isSelf","contentRef","renderOptions","renderBefore","previousElementSibling","keep","DataController","readCallback","writeCallback","errorCallback","selectCallback","onSelect","write","storeID","firstPage","page","lastPage","nextPage","prevPage","storage","requestUpdate","onDataRead","onDataWrite","onDataError","ElementMoveController","attached","cursorX","cursorY","mouseUpCallback","mouseDownCallback","mouseMoveCallback","onMouseUp","onMouseDown","onMouseMove","attachEvent","removeEvent","onStartMove","onEndMove","onCursorRight","onCursorLeft","onCursorUp","onCursorDown","LocalizationController","hostUpdate","updateLanguage","updateLanguageExt","langauge","onLanguage","OrientationController","hosts","onOrientation","TemplateController","lastRef","templateRef","schedule","templateInjected","isTplEl","cacheable","tasks","task","process","finally","ThemeController","updateTheme","updateThemeExt","SlotController","onSlotChanged","assignedElements","onSlotInjected","rtl","reflect","hide","rounded","bordered","onready","os","browser","adopted","uiHandler","localization","dataController","slotController","themes","attributeChangedCallback","oldValue","newValue","connectedCallback","isBindable","binded","disconnectedCallback","detachListeners","createRenderRoot","firstUpdated","willUpdate","relink","isAllowRender","renderUI","renderTemplate","renderClass","border","mapCSS","flag","waitEvent","direction","isFocused","isValidEnvironment","isValidBrowser","isValidOS","isValidProtocol","isValidOrientation","isGenerated","definitions","elementStyles","cssRule","setCSSProperty","ElementNavigationController","circular","multiple","onKeyUp","onClick","onFocusIn","onFocusOut","lastElementChild","blur","onSelected","onDeselected","onFocused","isNavigable","isNav","relatedTarget","composedPath","GroupController","busEvent","busCallback","onBusEvent","GSAccordionElement","autoclose","cssItem","cssHeader","cssBody","renderItems","close","isItemCloser","GSAccordionItemElement","shouldUpdate","changedProperties","component","GSAlertElement","closed","closable","pause","interval","handleBillboard","updated","show","isBillboard","button","billboard","GSButtonElement","clickCss","hoverCss","toggleColor","outline","toggling","icon","tooltip","refEl","refIco","onMouseOver","onMouseOut","iconEl","animate","isReset","isSubmit","submit","hover","isReest","iconHtml","renderIcon","GSCalendarElement","arrovPrev","arrowNext","cssDays","cssToday","cssWeeks","cssMonth","cssYear","cssNav","cssSelected","minYear","maxYear","arrowPrev","previousMonth","nextMonth","previousYear","nextYear","formatted","updateTarget","week","dayList","months","monthsHTML","yearHTML","onKey","onDay","daysHTML","tgt","HTMLInputElement","valueAsDate","isToday","today","c1","c2","current","monthList","onMonth","onYear","selectedIndex","GSCardElement","imageStyle","overlay","align","image","subtitle","footer","header","colorText","colorBack","colorBorder","cssTitle","cssSubtitle","cssFooter","cssImage","styleID","isVertical","renderVertical","renderHorizontal","imageTop","imageBottom","isBefore","startClass","endClass","startHtml","images","endHtml","isHorizontal","imageSlot","GSCenterElement","GSMenuElement","auto","dark","menuRef","closeSubmenus","updatePosition","onMouseLeave","submenu","dropend","dropstart","popup","caller","isMouseOrPointerEvent","renderSubmenu","renderHeader","renderMenu","renderDivider","menu","toSubmenu","menuItem","isSubmenu","innerWidth","GSContextElement","isInTable","attachTarget","assignedSlot","onPopup","GSCompareElement","background","before","after","elRef","clipRef","slideRef","mouseController","elPosition","splitter","onDoubleClick","isAuto","pct","isFixed","slider","clip","GSControllerElement","module","changes","initialize","GSCopyrightElement","company","isCompany","isYear","GSDataHandler","autoload","autorefresh","config","handler","lifoReadRef","lifoWriteRef","itemHolder","PROPERTIES","initLIFO","updateHandler","formatSort","formatFilter","isDebug","gsDebug","isCached","formated","save","verifyHandler","callOnceLifo","lifoReadRefCallback","lifoWriteRefCallback","lifoCall","GSDialogElement","standard","escapable","cancelText","confirmText","minWidth","buttonAlign","iconCancel","iconConfirm","colorCancel","colorConfirm","cssCancel","cssConfirm","cssContent","dialogRef","btnConfirmRef","btnCancelRef","CSS","TITLE_CSS","HEADER_CSS","ALIGN","CANCEL","CONFIRM","updateStack","onOpenChanged","STACK","dialog","showModal","focusable","renderConfirm","onConfirm","renderCancel","onCancel","renderFooter","onForm","onSubmit","info","confirm","prompt","forms","f","tab","btnConfirm","btnCancel","QUERY_INPUT","isVisible","GSDrawerElement","backdrop","scroll","fingers","transition","cssHead","onLeave","onEnter","hasHeader","headSlot","GSDropdownElement","simple","renderButton","buttonClass","btn","GSEmailElement","user","domain","dev","updateUser","updateDomain","GSFormElement","acceptCharset","enctype","novalidate","block","beep","formRef","lastState","onChange","onBlur","onInvalid","doFilter","filterField","elements","submitButton","resetButton","childrens","inputs","validity","valid","reportValidity","onValidate","disableInput","enableInput","onFieldChange","onFieldInvalid","findField","fieldValue","fldName","gsfDisable","fldVal","gsfValue","matched","selectable","GSFormGroupElement","layout","label","description","placeholder","mask","spellcheck","rows","cols","step","minLength","maxLength","autoid","autocopy","autoselect","reveal","readonly","required","invalidMessage","cellField","cellLabel","cssLabel","cssField","inputRef","ouptutRef","patterns","validateAllowed","ICON","CSS_LABEL","CSS_LABEL_CELL","formComponent","SELECTOPT","onRange","renderFloating","cssCheck","renderInput","renderOutput","renderLabel","renderInfo","renderLabelWrap","renderField","isIcon","CSS_ICON","renderTooltip","isRange","idattr","isFieldset","radioLayout","fieldSet","inputHTML","selectHTML","isTextArea","fld","vertical","initStyle","listHTML","outerHTML","isBlock","isBeep","isSwitch","isCheckable","isFloating","slots","tagList","isCheck","isRadio","isChecked","isPassword","isEmail","isURL","GSFormPanelElement","renderFormGroup","formaction","formenctype","formmethod","formnovalidate","formtarget","maxlength","minlength","GSGroupElement","controllerGroup","initData","prerender","of","renderWrappedUI","renderWrappedClass","childTagName","generated","getName","GSIconElement","superColor","_clicked","_hovered","postAnimate","fs","GSIndentElement","multiplier","numdef","GSImageElement","invert","grayscale","brightness","contrast","saturate","hue","sepia","alt","imageRef","complete","renderStyle","buildFilter","GSLayoutElement","resizable","autofit","vPos","hPos","els","dyncss","horizontal","lev","tplEl","elementTemplate","tc","dir","did","panelCSS","panelStyle","resize","grow","vpos","hpos","GSLinklement","ping","GSListElement","GSListItemElement","initial","renderFirst","renderSecond","itemCSS","isSelectable","itemStatusCSS","renderText","activeCSS","cssActive","inactiveCSS","cssInactive","GSNavElement","isTab","GSNavItemElement","itemsCSS","buttonCSS","buildCSS","cssButton","navType","GSOverlayElement","autoremove","radius","styleID2","innerHeight","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathStr","createSVGPathString","fill","pointerEvents","cursor","windowX","windowY","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPagerElement","pages","labelFirst","labelLast","labelNext","labelPrevious","half","renderPrevious","renderItem","renderNext","renderLast","pagination","decodeHTMLEntities","toTarget","ctrl","GSPopupElement","wMin","wMax","hMin","hMax","panelRef","onAuto","reposition","popupFixed","panel","overflowH","overflowV","GSProgressElement","updateStyle","percentage","onKeySelect","increase","decrease","trunc","old","GSSpinnerElement","pulsar","GSSplitterElement","styleTGT","cssUpdate","lock","updateMouse","isPreceeding","isStyleValue","styleDynamic","lockable","csize","cls","gsSplitter","updateX","updateY","dx","GSTabItemElement","updateCSS","tabCSS","GSTabPanelElement","GSTabGroupElement","findPanel","isAfter","tabs","renderTabs","panels","renderPanels","GSTableElement","colspan","hidden","fixed","filterType","cssFilter","colorHead","colorSelect","colorSort","stripedColumn","divider","striped","grid","borderless","columns","datacolumn","multisort","multiselect","protected","sortable","sortOrder","headColor","CELLS","table","stripedColumns","renderFilters","onSort","entry","renderColumn","renderRecord","renderEmpty","renderHandler","columnType","columType","input","valueAt","row","cell","cfgType","timestamp","dataType","renderFilter","hasSub","onFilter","renderOption","listid","icons","sortType","cells","remapRecord","renderCell","record","elementTofilter","column","getElementIndex","prepareSorter","isComplex","tr","GSTagElement","converter","appendable","closeColor","cssClose","cssTag","dataListRef","renderTags","onInput","renderList","updateTag","KEYS","srcElement","removeTag","addTag","isMax","datalist","optEl","tagEl","renderTag","tagClass","btnClass","badge","GSTextElement","GSTooltipElement","arrowRef","arrowStyle","attachEvents","fade","arrowEl","panelEl","refLocal","refGlobal","GSTemplateElement","CopySelectController","clickCallback","copyCallback","onCopy","writeToClipboard","MaskController","_","back","prev","keyDownCallback","inputCallback","focusCallback","changeCallback","initRules","onFocus","j","buildSlots","findIndex","buildAccept","toPattern","isMatch","setCustomValidity","setSelectionRange","substring","selectionStart","selectionEnd","lastIndex","maskType","clean","chars","masks","special","MultipatternController","multipattern","NumberController","onNumberInput","PasswordController","revealing","keyUpCallback","isReveal","altKey","TextController","updateText","ListController","monitorCallback","blurCallback","onMonitor","onDataChange","hasUpdated","strict","isInList","togleEl","dataGroup","isButtonElement","formElements","ValidityController","invalidCallback","processing","togglUI","isTyped","report","defaultPropertyDeclaration","attributeToPropertyMap","prepare","elementProperties","finalize","finalized","prepareFn","getOwnPropertySymbols","superCtor","attributeNameForProperty","ReactiveInput","reflectingProperties","instanceProperties","updatePromise","reflectingProperty","isUpdatePending","observedAttributes","initializer","initializers","propKeys","getOwnPropertyNames","createProperty","noAccessor","descriptor","getPropertyDescriptor","prototype","configurable","enumerable","enableUpdating","attributeToProperty","requestedUpdate","getUpdateComplete","scheduleUpdate","performUpdate","propertyToAttribute","markUpdated","updateComplete","getPropertyOptions","changeProperty","enqueueUpdate","elementProps","wrapped","didUpdate","ctor","propName","attrValue","saveInstanceProperties","GSComboExt","setIf","onReset","objToHTML","GSDataListExt","HTMLDataListElement","GSInputElement","copyselect","maskController","multiPatternController","passwordController","numberController","textController","listController","validityController","isMulti","isType","GSTextArea","HTMLTextAreaElement","GSBreadcrumbElement","spacing","updateChildren","$text","GSBreadcrumbItemElement","generate","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBoxElement","cssList","cssInput","maxFileSize","listEl","fileEl","dragging","TITLE","onDragenter","onDragleave","onDrop","onPaste","dataTransfer","hasFile","dropEffect","clipboardData","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","validAttachments","GSTimeFormat","toLocaleTimeString","GSDateFormat","GSYearFormat","GSCurrencyFormat","GSStepStyle","GSStepElement","iconCSS","titleCSS","INACTIVE","ICON_CSS","GSStepsElement","steps","isFirst","isLast","COMPLETED","SELECTED","GSNotificationElement","BOTTOM_END","DEFAULT","positionCSS","dismiss","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","dlg","nn","isNativeSupported","isGranted","permission","GSToastElement","pending","visibilityChange","isVisibilityChanged","pendingUpdate","validParent","renderWithHeader","renderSimple","isToast","isNotify","AbstractTreeController","addNodeController","removeNodeController","oldNode","TreeController","toggleState","addedNode","insertedNode","onRemove","GSTreeItemElement","renderSpinner","cssFocus","status","toggleSelection","parentItem","checkColor","checkColorSelected","ui","itemIco","itemIcon","openIcon","closeIcon","renderIndent","renderMulti","GSTreeElement","guide","shared","listRef","nextItem","previousItem","reload","expandable","GSChartElement","URL_LIB","GS_URL_CHART","canvasRef","chart","waitInit","destroy","isChart","renderData","canvas","updateChart","div","toBase64Image","quality","sets","datasets","ctx","getContext","Chart","initializing","registerables","nameV","valV","typeV","childs","isObject","_nam","GSChart","_val","_typ","GSHighlightElement","GS_URL_HLJS","codeRef","onTarget","onURL","onHighlight","hasLangauge","highlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMarkdownElement","GS_URL_MARKDOWN","history","maxHeight","containerRef","initLib","showdown","tasklists","tables","Converter","toCache","fromCache","container","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","script","GSMonacoElement","GS_URL_MONACO","editor","onMonacoReady","monaco","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","automaticLayout","minimap","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","paths","vs","initialized","initEnv","initMonaco"],"mappings":"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"}