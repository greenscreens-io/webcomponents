{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/style.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSID.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSDynamicStyle.mjs","../../modules/base/GSCacheStyles.mjs","../../modules/base/GSAdoptedEngine.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSLocalization.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSTemplateCache.mjs","../../modules/base/GSTheme.mjs","../../modules/base/GSAttributeHandler.mjs","../../modules/helpers/Stack.mjs","../../modules/helpers/Queue.mjs","../../modules/helpers/BinaryTree.mjs","../../modules/helpers/DoublyLinkedList.mjs","../../modules/helpers/Tree.mjs","../../modules/data/ReadWriteRegistry.mjs","../../modules/data/AbstractReadWrite.mjs","../../modules/data/ReadWrite.mjs","../../modules/lib.mjs","../../modules/directives/dataset.mjs","../../modules/directives/literal.mjs","../../modules/directives/css-map.mjs","../../modules/properties/verificator.mjs","../../modules/properties/buttonType.mjs","../../modules/properties/color.mjs","../../modules/properties/environment.mjs","../../modules/properties/inputType.mjs","../../modules/properties/nav.mjs","../../modules/properties/orientation.mjs","../../modules/properties/placement.mjs","../../modules/properties/position.mjs","../../modules/properties/protocol.mjs","../../modules/properties/size.mjs","../../modules/properties/arrayConverter.mjs","../../modules/controllers/AdoptedController.mjs","../../modules/controllers/AttributeController.mjs","../../modules/controllers/ContentController.mjs","../../modules/controllers/DataController.mjs","../../modules/controllers/ElementMoveController.mjs","../../modules/controllers/ElementNavigationController.mjs","../../modules/controllers/OrientationController.mjs","../../modules/controllers/ThemeController.mjs","../../modules/controllers/TemplateController.mjs","../../modules/controllers/LocalizationController.mjs","../../modules/GSElement.mjs","../../modules/components/Accordion.mjs","../../modules/components/AccordionItem.mjs","../../modules/components/Alert.mjs","../../modules/components/Button.mjs","../../modules/components/Calendar.mjs","../../modules/components/Card.mjs","../../modules/components/Center.mjs","../../modules/components/Menu.mjs","../../modules/components/Context.mjs","../../modules/components/Compare.mjs","../../modules/components/Copyright.mjs","../../modules/components/DataHandler.mjs","../../modules/components/Dialog.mjs","../../modules/components/Drawer.mjs","../../modules/components/Dropdown.mjs","../../modules/components/Email.mjs","../../modules/components/Form.mjs","../../modules/components/FormGroup.mjs","../../modules/components/FormPanel.mjs","../../modules/components/Group.mjs","../../modules/components/Icon.mjs","../../modules/components/Indent.mjs","../../modules/components/Image.mjs","../../modules/components/Layout.mjs","../../modules/components/Link.mjs","../../modules/components/List.mjs","../../modules/components/ListItem.mjs","../../modules/components/NavItem.mjs","../../modules/components/Nav.mjs","../../modules/components/Overlay.mjs","../../modules/components/Pager.mjs","../../modules/components/Popup.mjs","../../modules/components/Progress.mjs","../../modules/components/Spinner.mjs","../../modules/components/Splitter.mjs","../../modules/components/tab/Tab.mjs","../../modules/components/tab/TabPanel.mjs","../../modules/components/tab/TabGroup.mjs","../../modules/components/Table.mjs","../../modules/components/Tag.mjs","../../modules/components/Text.mjs","../../modules/components/Tooltip.mjs","../../modules/components/Template.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/breadcrumb/Breadcrumb.mjs","../../modules/components/breadcrumb/BreadcrumbItem.mjs","../../modules/components/intl/TimeFormat.mjs","../../modules/components/intl/DateFormat.mjs","../../modules/components/intl/YearFormat.mjs","../../modules/components/intl/CurrencyFormat.mjs","../../modules/components/steps/StepStyle.mjs","../../modules/components/steps/Step.mjs","../../modules/components/steps/Steps.mjs","../../modules/components/toast/Notification.mjs","../../modules/components/toast/Toast.mjs","../../modules/components/tree/controllers/AbstractTreeController.mjs","../../modules/components/tree/controllers/TreeController.mjs","../../modules/data/TreeNode.mjs","../../modules/components/tree/TreeItem.mjs","../../modules/components/tree/Tree.mjs","../../modules/extra/Chart.mjs","../../modules/extra/Highlight.mjs","../../modules/extra/Markdown.mjs","../../modules/extra/Monaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Required CSS Styles for WebCompoents, regardless Bootstrap CSS.\r\n */\r\nexport const gsstyles = `.z-10k{z-index:10000 !important;}\r\n.gs-hide,gs-item{display:none !important;}\r\ngs-popover,gs-tooltip{position:fixed;top:0px;left:0px;},\r\n.d-contents{display:contents;}';\r\ngs-button-group::part(.btn-group){box-shadow:rgba(72, 72, 72, 0.4) 0px 0.125rem 0.25rem;}\r\ngs-group>gs-button::part(button) {box-shadow: none;}\r\ngs-group>gs-button:not(:last-child)::part(button) {border-top-right-radius: 0;border-bottom-right-radius: 0;}\r\ngs-group>gs-button:not(:first-child)::part(button) {margin-left: calc(var(--bs-border-width) * -5);border-top-left-radius: 0;border-bottom-left-radius: 0;}\r\ngs-layout {width: 100%;height: 100%;}\r\ngs-split-panel{flex: 1 1 auto !important;}\r\n`;","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic asNum(val = 0, dft = 0, locale) {\r\n\t\tlocale = locale || GSUtil.locale;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(locale);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(locale = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(locale).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribite name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst safe = opt[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = opt[prop]?.default;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, locale) {\r\n        format = format || GSUtil.getDateFormat(locale);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, locale: {}, extract: {} };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', locale:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const locale = cfg.locale || GSUtil.locale;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, locale);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(locale);\r\n                    return new GSDate(val).format(fmt, locale);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, locale);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields) {\r\n        data = Array.isArray(data) ? data : [];\r\n        filter = Array.isArray(filter) ? filter : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (value?.toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            if (flt.name) {\r\n                found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            } else {\r\n                found = found && GSData.filterSimple(rec, flt.value);\r\n            }\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToOject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromObject(obj, name) {\r\n        name.split('.')\r\n            .filter(v => !GSUtil.isNull(v))\r\n            .forEach(v => obj = GSData.readFromProperty(obj, v));\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static objectPathExist(obj, name) {\r\n        if (!name) return false;\r\n        return name.split('.')\r\n            .map(v => GSData.readFromProperty(obj, v))\r\n            .filter(v => !GSUtil.isNull(v))\r\n            .length > 0;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value') && el.value) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t}\r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t */\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(me.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {Boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el, opt) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el, opt);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {Boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {Boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {Boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {Boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {Boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {Boolean} forRemove - call on node remove or add\r\n     * @param {HTMLElement} target - element to monitor\r\n     * @returns {Boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {Boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {Boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop();\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n    * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\nimport { gsstyles } from \"./style.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Create a new CSSStyleSheet\r\n\t * @param {String} id Unique ID\r\n\t * @returns {CSSStyleSheet} Created instance\r\n\t */\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {String} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\t\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\t\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {String} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {String} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id, style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSID.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(gsstyles);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSDOM } from './GSDOM.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSDOMObserver } from './GSDOMObserver.mjs';\r\nimport { GSCacheStyles } from './GSCacheStyles.mjs';\r\n\r\nconst adoptedId = Symbol();\r\nconst observer = Symbol();\r\n\r\n/**\r\n * Monitor HTMLStyleElement & HTMLLinkElement (of type stylesheet) for changes.\r\n * Every such element marked with data-adoptable=\"true\" will be cached and\r\n * will trigger gs-adopted event to notify component controller to update adoptableStyleSheet list\r\n */\r\nexport class GSAdoptedEngine {\r\n\r\n  static #timerID = 0;\r\n  static #ID = Date.now();\r\n  static #scheduled = false;\r\n\r\n  static #init() {\r\n    const me = GSAdoptedEngine;\r\n    me.observe(document.head);\r\n    me.#preload();\r\n    me.#timerID = setInterval(() => me.#adopt(), me.timeout);\r\n  }\r\n\r\n  static #clear() {\r\n    const me = GSAdoptedEngine;\r\n    clearInterval(me.#timerID);\r\n    me.#timerID = undefined;\r\n  }\r\n\r\n  static #adopt() {\r\n    const me = GSAdoptedEngine;\r\n    const sheets = me.#adoptable;\r\n    if (sheets.length == 0) return me.#clear();\r\n    sheets.map(s => me.#adoptSheet(s));\r\n    me.update();\r\n  }\r\n\r\n  static update() {\r\n    const me = GSAdoptedEngine;\r\n    if (me.#scheduled) return;\r\n    me.#scheduled = true;\r\n    queueMicrotask(() => {\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          document.adoptedStyleSheets = me.#sorted;\r\n          document.adoptedStyleSheets.id = ++me.#ID;\r\n        } finally {\r\n          me.#scheduled = false;\r\n          globalThis.dispatchEvent(new CustomEvent('gs-adopted'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static #asText(sheet) {\r\n    return Object.values(sheet.cssRules).map(o => o.cssText).join('');\r\n  }\r\n\r\n  static #adoptLink(el) {\r\n    const me = GSAdoptedEngine;\r\n    GSAdoptedEngine.#monitorAttributes(el);\r\n    Array.from(document.styleSheets).filter(s => s.ownerNode === el).map(s => me.#adoptSheet(s));\r\n  }\r\n\r\n  static #adoptSheet(sheet) {\r\n    const me = GSAdoptedEngine;\r\n    const style = me.#asText(sheet);\r\n    return me.#adoptStyle(sheet.ownerNode, style);\r\n  }\r\n\r\n  static #adoptStyle(ownerNode, style) {\r\n    const me = GSAdoptedEngine;\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(style);\r\n    sheet.id = ++me.#ID;\r\n    ownerNode[adoptedId] = sheet.id;\r\n    me.#store(ownerNode, sheet);\r\n    return sheet;\r\n  }\r\n\r\n  static #store(ownerNode, sheet) {\r\n    GSCacheStyles.set(sheet.id, sheet);\r\n  }\r\n\r\n  static #remove(ownerNode, sheet) {\r\n    GSCacheStyles.remove(sheet.id);\r\n    ownerNode[observer]?.disconnect?.();\r\n    ownerNode[observer] = undefined;\r\n  }\r\n\r\n  static get #sorted() {\r\n    return GSCacheStyles.styles;\r\n  }\r\n\r\n  /**\r\n   * List of adoptable styles or links. Filter only those with dataset.adoptable=true\r\n   * @returns {HTMLStyleElement|HTMLLinkElement}\r\n   */\r\n  static get #adoptable() {\r\n    return Object.values(document.styleSheets)\r\n      .filter(o => o.ownerNode)\r\n      .filter(o => o.ownerNode.dataset.adoptable)\r\n      .filter(o => !o.ownerNode[adoptedId]);\r\n  }\r\n\r\n  static #preload() {\r\n    GSDOM.queryAll(document.head, 'link[rel=\"preload\"][as=\"style\"]')\r\n    .forEach(el => {\r\n      el.remove();\r\n      document.head.appendChild(el);\r\n    });\r\n  }\r\n\r\n  static #onAttributeChange(mutationList) {\r\n    mutationList.forEach((mutation) => {\r\n       const id = mutation.target[adoptedId];\r\n       const style = GSCacheStyles.get(id);\r\n       if(style) style.disabled = mutation.target.hasAttribute('disabled');\r\n    });\r\n    GSAdoptedEngine.update();\r\n  }\r\n  \r\n  static #monitorAttributes(element) {\r\n    const me = GSAdoptedEngine;\r\n    const callback = me.#onAttributeChange.bind(me);\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(element, {\r\n      attributeFilter: [\"disabled\"],\r\n      attributeOldValue: true,\r\n      subtree: false,\r\n    });\r\n    return observer;\r\n  }\r\n  \r\n  /**\r\n   * Filter style and link(css) elements which will be shared\r\n   * with all web componentes. Filter only those marked with data-adoptable\r\n   * @param {HTMLElement} el \r\n   * @returns {Boolean} Return true if monotired element is selected for further processing\r\n   */\r\n  static #onMonitorFilter(el) {\r\n    return (Boolean(el.dataset?.adoptable))\r\n      && (\r\n        (el instanceof HTMLLinkElement && (el.rel === 'stylesheet' || el.as === \"style\"))\r\n        || el instanceof HTMLStyleElement\r\n      );\r\n  }\r\n\r\n  /**\r\n   * When style added to the HTML page, attach it to the WebComponents\r\n   * @param {HTMLStyleElement|HTMLLinkElement} el \r\n   */\r\n  static #onMonitorConnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    if (el instanceof HTMLStyleElement) {\r\n      me.#adoptStyle(el, el.innerText);\r\n      me.update();\r\n    } else if (el instanceof HTMLLinkElement) {\r\n      GSEvents.wait(el, 'load', 0, false).then(e => {\r\n        if (el.rel === 'preload') return el.rel = \"stylesheet\";\r\n        me.#adoptLink(e.target);\r\n        me.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When style removed, remove from adoptable and update\r\n   * @param {HTMLElement} el \r\n   */\r\n  static #onMonitorDisconnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    me.#sorted.filter(o => o.id === el[adoptedId])\r\n          .forEach(o => me.#remove(el, o));\r\n    me.update();\r\n  }\r\n\r\n  /**\r\n   * Observe DOM tree from mutations\r\n   * @param {HTMLElement} owner Root element to watch DOM tree from \r\n   */\r\n  static observe(owner) {\r\n    const me = GSAdoptedEngine;\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorConnect, false, owner);\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorDisconnect, true, owner);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promisses sequentially\r\n\t * @param {Arrayy<Promise>} ps \r\n\t * @returns \r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport { GSEvent } from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport class GSEventBus {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {String} name EventBus name\r\n     * @param {String} type Event name\r\n     * @param {Object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {String} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {String} name unique buss name\r\n     * @returns {Boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constructor to attach Gesture featuer to an HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {Boolean} swipe Monitor swipe gesture\r\n     * @param {Boolean} tap Monitor tap gesture\r\n     * @param {Boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move: me.#handleTouchMove.bind(me),\r\n            start: me.#handleTouchStart.bind(me),\r\n            end: me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) {\r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 && Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {Number}\r\n     */\r\n    static fingers(e) {\r\n        return e.detail.touches?.length;\r\n    }\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns {GSGesture}\r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport class GSItem extends HTMLElement {\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return template content of GS-ITEM element (if exists)\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tget body() {\r\n\t\tlet tpl = GSAttr.get(this, 'template');\r\n\t\tif (tpl) return `<gs-template href=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = this.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item elements\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tget items() {\r\n\t\treturn Array.from(this.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSAttr.get(this, 'name', '');\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate that parent element contains only specific childrens\r\n\t * @param {*} own \r\n\t * @param {*} tagName \r\n\t * @returns \r\n\t */\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic collect(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Convert GS-ITEM list to JSON\r\n\t * @param {HTMLElement} root Element containing GS-ITEM childs \r\n\t * @returns {Array} Arary of JSON objects\r\n\t */\r\n\tstatic toJSON(root) {\r\n\t\treturn GSItem.collect(root).map(el => el.asJSON(true));\r\n\t}\r\n\r\n\t/**\r\n\t * Make GS-ITEM attributes JSON compatible \r\n\t * @param {*} root \r\n\t * @param {*} definition \r\n\t * @returns \r\n\t */\r\n    static proxify(root, definition) {        \r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, definition));\r\n    }\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport class GSPopper {\r\n\r\n\t/**\r\n\t * A simple wrapper to get element DOMRect\r\n\t * @param {HTMLElement} el \r\n\t * @returns {DOMRect}\r\n\t */\r\n\tstatic asRect(el) {\r\n\t\treturn el.getBoundingClientRect();\r\n\t}\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = GSPopper.asRect(el);\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = GSPopper.asRect(element);\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\r\n\t\tconst css = {\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '0px',\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.translate = `${obj.x}px ${obj.y}px`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tconst astyle = GSDynamicStyle.dynamicStyle(arrow);\r\n\r\n\t\tconst css = {\r\n\t\t\tinset: GSPopper.#inset(pos),\r\n\t\t\tposition: 'absolute',\r\n\t\t\tmargin: '0px',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\twidth: 'max-content',\r\n\t\t\theight: 'max-content',\t\t\t\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\t\tastyle.position = 'absolute';\r\n\r\n\t\tconst srect = GSPopper.asRect(source);\r\n\t\tconst arect = GSPopper.asRect(arrow);\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tconst aopt = {\r\n\t\t\ttranslate: `${arr.x}px ${arr.y}px`,\r\n\t\t\ttop: arr.top ? arr.top : '',\r\n\t\t\tleft: arr.left ? arr.left : ''\r\n\t\t}\r\n\r\n\t\tconst opt = {\r\n\t\t\ttranslate : `${obj.x}px ${obj.y}px`\r\n\t\t};\r\n\r\n\t\tObject.assign(style, opt);\r\n\t\tObject.assign(astyle, aopt);\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst opt = {};\r\n\r\n\t\topt.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\topt.left = '';\r\n\t\t\topt.top = '0px';\r\n\t\t\tshift = 0; //pos.isStart ? size : -1 * size;\r\n\t\t\topt.translate = `${shift}px ${arrowPosH / 2}px`;\r\n\t\t} else {\r\n\t\t\topt.top = '';\r\n\t\t\topt.left = '0px';\r\n\t\t\tshift = 0; //pos.isTop ? size : -1 * size;\r\n\t\t\topt.translate = `${arrowPosW}px ${shift}px`;\r\n\t\t}\r\n\r\n\t\tGSDynamicStyle.applyDynamicStyle(arrow, opt);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {\r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSQueryCSS } from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value);\r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n\r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\treturn document.getElementById(tpl.slice(1));\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTheme class\r\n * @module base/GSTheme\r\n */\r\n\r\n/**\r\n * Switch between dark and light mode\r\n * @Class\r\n */\r\nexport class GSTheme {\r\n\r\n    static #STORAGE = 'gs-theme-mode';\r\n\r\n    /**\r\n     * Changes the theme to 'dark mode' and save settings to local stroage.\r\n     * Basically, replaces/toggles every CSS class that has '-light' class with '-dark'\r\n     * @param {HTMLElement} el \r\n     */\r\n    static darkMode(el) {\r\n        GSTheme.#switch(el, 'light', 'dark');\r\n    }\r\n\r\n    /**\r\n     * Changes the theme to 'light mode' and save settings to local stroage.\r\n     * @param {HTMLElement} el \r\n     */\r\n    static lightMode(el) {\r\n        GSTheme.#switch(el, 'dark', 'light');\r\n    }\r\n\r\n    static #switch(el, from = 'light', to = 'dark') {\r\n\r\n        const root = el || document.body;\r\n\r\n        // TODO  switch dark/light mode ?!??!? \r\n\r\n        // save last state\r\n        GSTheme.theme = to;\r\n    }\r\n\r\n    static get theme() {\r\n        return localStorage.getItem(GSTheme.#STORAGE);\r\n    }\r\n\r\n    static set theme(val) {\r\n        localStorage.setItem(GSTheme.#STORAGE, val);\r\n        window.dispatchEvent(new CustomEvent('gs-theme', { detail: val }));\r\n        const htmlEl = document.head.parentElement;\r\n        if (val) {\r\n            htmlEl.dataset.bsTheme = val;\r\n        } else {\r\n            delete htmlEl.dataset.bsTheme;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get system default theme by media query\r\n     * @returns {String} dark|light \r\n     */\r\n    static getSystemDefaultTheme() {\r\n        const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\r\n        return darkThemeMq.matches ? 'dark' : 'light';\r\n    }\r\n\r\n    static #onTheme(e) {\r\n        const q = new URLSearchParams(location.hash.slice(1));\r\n        GSTheme.theme = q.get('theme');\r\n    }\r\n\r\n    static #setup() {\r\n        window.addEventListener('hashchange', GSTheme.#onTheme)\r\n        let settings = localStorage.getItem(GSTheme.#STORAGE);\r\n        if (settings == null) {\r\n            settings = GSTheme.getSystemDefaultTheme();\r\n        }\r\n\r\n\r\n        if (settings == 'dark') return GSTheme.darkMode();\r\n        if (settings == 'light') return GSTheme.lightMode();\r\n        // TODO switch\r\n\r\n    }\r\n\r\n    static {\r\n        GSTheme.#setup();\r\n        globalThis.GSTheme = GSTheme;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-attribute - togle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-call - calls a function on a given target (multipel functions supported)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el) {\r\n        const me = this;\r\n        me.#host = el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = GSAttributeHandler.proxify(me.#host);\r\n    }\r\n\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleSwap(target);\r\n        me.#handleInject(host, target);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    #handleBinding(target, evt) {\r\n        const source = evt.target.field || evt.target.form || evt.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n        if (!(isField || isForm)) return;\r\n    }\r\n\r\n    #handleAction(target) {\r\n        const me = this;\r\n        GSEvents.send(target, 'action', me.action);\r\n    }\r\n\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)();\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    #handleInject(host, target) {\r\n        if (this.inject) {\r\n            const content = GSDOM.parse(this.inject, true);\r\n            this.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n    #handleSwap(target) {\r\n        if (this.swap) target.innerHTML = this.swap;\r\n    }\r\n\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    #applyContent(host, target, content) {\r\n        if (host.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    deattach(name = 'click') {\r\n        //GSEvents.deattachListeners(this.#host);\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        this.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n        const me = this;\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                return [GSDOM.root(me.#host)];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n        return GSDOM.queryAll(document.body, me.target, false, true) || [me.#host];\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     */\r\n    static clone(from, to) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig  last in, first out (LIFO) order of operations.\r\n */\r\nexport class Stack extends Array {\r\n    \r\n    push(item) {\r\n        this.unshift(item);\r\n    }\r\n\r\n    pop() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig first in, first out (FIFO) order of operations.\r\n */\r\nexport class Queue extends Array {\r\n    \r\n    enqueue(item) {\r\n        this.push(item);\r\n    }\r\n\r\n    dequeue() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst tree = new BinaryTree(1, 'AB');\r\n\r\ntree.insert(1, 11, 'AC');\r\ntree.insert(1, 12, 'BC');\r\ntree.insert(12, 121, 'BG', { right: true });\r\n\r\n[...tree.preOrderTraversal()].map(x => x.value);\r\n// ['AB', 'AC', 'BC', 'BCG']\r\n\r\n[...tree.inOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB', 'BC', 'BG']\r\n\r\ntree.value;                // 'AB'\r\ntree.hasChildren;          // true\r\n\r\ntree.find(12).isLeaf;           // false\r\ntree.find(121).isLeaf;          // true\r\ntree.find(121).parent.value;    // 'BC'\r\ntree.find(12).left;             // null\r\ntree.find(12).right.value;      // 'BG'\r\n\r\ntree.remove(12);\r\n\r\n[...tree.postOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB']\r\n*/\r\n\r\n/**\r\n * Binary Tree Node data holder\r\n */\r\nexport class BinaryTreeNode {\r\n\r\n    constructor(key, value = key, parent = null) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n\r\n    /**\r\n     * Check if both left and right are empty.\r\n     */\r\n    get isLeaf() {\r\n        return this.left === null && this.right === null;\r\n    }\r\n\r\n    /**\r\n     * Check if node has children\r\n     */\r\n    get hasChildren() {\r\n        return !this.isLeaf;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Binary tree implementation\r\n */\r\nexport class BinaryTree extends BinaryTreeNode {\r\n\r\n    constructor(key, value = key) {\r\n        super(key, value);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in in-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *inOrderTraversal(node = this) {\r\n        if (node.left) yield* this.inOrderTraversal(node.left);\r\n        yield node;\r\n        if (node.right) yield* this.inOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in post-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *postOrderTraversal(node = this) {\r\n        if (node.left) yield* this.postOrderTraversal(node.left);\r\n        if (node.right) yield* this.postOrderTraversal(node.right);\r\n        yield node;\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in pre-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *preOrderTraversal(node = this) {\r\n        yield node;\r\n        if (node.left) yield* this.preOrderTraversal(node.left);\r\n        if (node.right) yield* this.preOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to find the given parent node and \r\n     * insert a new child BinaryTreeNode either as the left or right child, \r\n     * depending on the passed options object.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @param {*} options \r\n     * @returns {boolean} Return true if data inserted\r\n     */\r\n    insert(\r\n        parentNodeKey,\r\n        key,\r\n        value = key,\r\n        { left, right } = { left: true, right: true }\r\n    ) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === parentNodeKey) {\r\n                const canInsertLeft = left && node.left === null;\r\n                const canInsertRight = right && node.right === null;\r\n                if (!canInsertLeft && !canInsertRight) return false;\r\n                if (canInsertLeft) {\r\n                    node.left = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n                if (canInsertRight) {\r\n                    node.right = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to remove a BinaryTreeNode from the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.left.key === key) {\r\n                node.left = null;\r\n                return true;\r\n            }\r\n            if (node.right.key === key) {\r\n                node.right = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to retrieve the given node in the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    find(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new DoublyLinkedList();\r\n\r\nlist.insertFirst(1);\r\nlist.insertFirst(2);\r\nlist.insertFirst(3);\r\nlist.insertLast(4);\r\nlist.insertAt(3, 5);\r\n\r\nlist.size;                      // 5\r\nlist.head.value;                // 3\r\nlist.head.next.value;           // 2\r\nlist.tail.value;                // 4\r\nlist.tail.previous.value;       // 5\r\n[...list].map(e => e.value);    // [3, 2, 1, 5, 4]\r\n\r\nlist.removeAt(1);               // 2\r\nlist.getAt(1).value;            // 1\r\nlist.head.next.value;           // 1\r\n[...list].map(e => e.value);    // [3, 1, 5, 4]\r\n\r\nlist.reverse();\r\n[...list].map(e => e.value);    // [4, 5, 1, 3]\r\n\r\nlist.clear();\r\nlist.size;                      // 0\r\n*/\r\n\r\n/**\r\n * Node data holder\r\n */\r\nexport class Node {\r\n\r\n    value = null;\r\n    next = null;\r\n    previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    release() {\r\n        this.value = undefined;\r\n        this.next = undefined;\r\n        this.previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DoublyLinkedList {\r\n\r\n    #nodes = [];\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     */\r\n    get size() {\r\n        return this.#nodes.length;\r\n    }\r\n\r\n    /**\r\n     * First element in the list\r\n     */\r\n    get head() {\r\n        return this.size ? this.#nodes[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Last elemet in the list\r\n     */\r\n    get tail() {\r\n        return this.size ? this.#nodes[this.size - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Create new linked node\r\n     * @param {*} value \r\n     * @param {*} nextNode \r\n     * @param {*} previousNode \r\n     * @returns \r\n     */\r\n    create(value, nextNode, previousNode) {\r\n        return new Node(value, nextNode, previousNode);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the given position in the list\r\n     * @param {*} index \r\n     * @param {*} value \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    insertAt(index, value, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index] || null;\r\n        const node = create(value, nextNode, previousNode);\r\n\r\n        if (previousNode) previousNode.next = node;\r\n        if (nextNode) nextNode.previous = node;\r\n        this.#nodes.splice(index, 0, node);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the beginning of the list\r\n     * @param {*} value \r\n     */\r\n    insertFirst(value) {\r\n        this.insertAt(0, value);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the end of the list\r\n     * @param {*} value \r\n     */\r\n    insertLast(value) {\r\n        this.insertAt(this.size, value);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data in the given index\r\n     * @param {Number} index \r\n     * @returns \r\n     */\r\n    getAt(index) {\r\n        return this.#nodes[index];\r\n    }\r\n\r\n    indexOf(val) {\r\n        return this.#nodes.indexOf(val);\r\n    }\r\n\r\n    /**\r\n     * Remove the data at the given index\r\n     * @param {*} index \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    removeAt(index, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index + 1] || null;\r\n\r\n        if (previousNode) previousNode.next = nextNode;\r\n        if (nextNode) nextNode.previous = previousNode;\r\n\r\n        return this.#nodes.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    clear(full = true) {\r\n        if (full) this.#nodes.forEach(o => o.release());\r\n        this.#nodes = [];\r\n    }\r\n\r\n    /**\r\n     * Reverse data order\r\n     */\r\n    reverse() {\r\n        this.#nodes = this.#nodes.reduce((acc, { value }) => {\r\n            const nextNode = acc[0] || null;\r\n            const node = new Node(value, nextNode, null);\r\n            if (nextNode) nextNode.previous = node;\r\n            return [node, ...acc];\r\n        }, []);\r\n    }\r\n\r\n    toArray() {\r\n        return this.#nodes.map(e => e.value);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#nodes;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield* this.#nodes;\r\n    }\r\n\r\n    #validate(index, safe = false) {\r\n        const isInvalid = this.#isInvalidIndex(index);\r\n        if (isInvalid) {\r\n            if (safe) {\r\n                console.log(this.#error());\r\n            } else {\r\n                throw new Error(this.#error());\r\n            }\r\n        }\r\n        return !isInvalid;\r\n    }\r\n\r\n    #isInvalidIndex(index) {\r\n        return !Number.isInteger(index) || index < 0 || index > this.size;\r\n    }\r\n\r\n    #error() {\r\n        return `Invalid index. Current length is ${this.size}.`;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        const list = new DoublyLinkedList();\r\n        if (Array.isArray(data)) data.forEach(v => list.insertLast(v));\r\n        return list;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Tree Node data holder\r\n */\r\nexport class Tree {\r\n\r\n    value;\r\n\r\n    #key = null;\r\n    #parent = null;\r\n    #children;\r\n\r\n    #folder = false;\r\n    #level = 0;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        this.#key = key;\r\n        this.#parent = parent;\r\n        this.#folder = value?.leaf === false;\r\n        this.#level = parent ? parent.level + 1 : level;\r\n        this.#children = this.#folder ? [] : undefined;\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Return tree list from root to this node.\r\n     * TODO: Refactor when iterator \"map\" become available\r\n     */\r\n    get subtree() {\r\n        return Array.from(this.up(undefined, false, true, true));\r\n    }\r\n\r\n    get levelID() {\r\n        return this.subtree.map(o => o.level).join('.');\r\n    }\r\n\r\n    /**\r\n     * Unique node canonical form\r\n     */\r\n    get nodeID() {\r\n        //if (this.parent?.level < 0) return this.index;\r\n        return this.subtree.map(o => o.index).join('.');\r\n    }\r\n\r\n    get path() {\r\n        return this.subtree.map(o => o.key).join('/');\r\n    }\r\n\r\n    get index() {\r\n        return this.parent?.nodes.indexOf(this) || 0;\r\n    }\r\n\r\n    get size() {\r\n        return this.#children?.length || -1;\r\n    }\r\n\r\n    get level() {\r\n        return this.#level;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Check if #children is empty\r\n     */\r\n    get isLeaf() {\r\n        return !this.#folder;\r\n    }\r\n\r\n    get isFolder() {\r\n        return this.#folder;\r\n    }\r\n\r\n    /**\r\n     * Check if has #childrens\r\n     */\r\n    get hasChildren() {\r\n        return this.#folder && this.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get key() {\r\n        this.#key ??= this.nodeID;\r\n        return this.#key;\r\n    }\r\n\r\n    get nodes() {\r\n        return this.#children;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get parent() {\r\n        return this.#parent;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n    /**\r\n     * Check if there are more siblings \r\n     */\r\n    get hasMore() {\r\n        return this.#parent?.size > this.index + 1;\r\n    }\r\n\r\n    get firstChild() {\r\n        return this.hasMore ? this.#children[0] : undefined;\r\n    }\r\n\r\n    get lastChild() {\r\n        return this.hasMore ? this.#children[this.#children.length - 1] : undefined;\r\n    }\r\n\r\n    get next() {\r\n        return this.down(this, false, false).next().value || this.nextSibling || this.parent?.nextSibling;\r\n    }\r\n\r\n    get previous() {\r\n        const node = this.previousSibling;\r\n        return (node?.hasChildren) ? node.lastChild : node || this.up(this, false, false).next().value;\r\n    }\r\n\r\n    get nextSibling() {\r\n        return this.hasMore ? this.#parent.#children[this.index + 1] : undefined;\r\n    }\r\n\r\n    get previousSibling() {\r\n        return this.index > 0 ? this.#parent.#children[this.index - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Clear all #children\r\n     */\r\n    clear() {\r\n        if (this.#children) {\r\n            this.#children.forEach(o => o.release?.());\r\n            this.#children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally, if called externally, \r\n     * make sure node is removed from parent \r\n     */\r\n    release() {\r\n        this.clear();\r\n        this.#key = null;\r\n        this.value = null;\r\n        this.#parent = null;\r\n    }\r\n\r\n    /**\r\n     * Walk down the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     * @param {Boolean} flat Navigate all nodes out of subtree\r\n     */\r\n    *down(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (node.#children?.length) {\r\n            for (let child of node.#children) {\r\n                yield* this.down(child, values, true, reverse, flat);\r\n            }\r\n        }\r\n        if (flat) {\r\n            const item = node.nextSibling || node.parent.nextSibling;\r\n            if (item) yield* this.down(item, values, true, reverse, flat);\r\n        }\r\n        /*\r\n        */\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk up the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     */\r\n    *up(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (flat) {\r\n            let item = node.previousSibling;\r\n            item = item?.isFolder ? item.lastChild : item\r\n            if (item) yield* this.up(item, values, true, reverse, flat);\r\n        }        \r\n        if (node.parent) {\r\n            yield* this.up(node.parent, values, true, reverse, flat);\r\n        }\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk through all nodes\r\n     * @param {*} node \r\n     */\r\n    walk = this.down;\r\n\r\n    /**\r\n     * Simulate array function \"forEach\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */\r\n    forEach(callback, flat = false, reverse = false) {\r\n        this.every((node, index) => {\r\n            callback(node, index);\r\n            return true;\r\n        }, flat, reverse);\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"every\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    every(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let sts = true;\r\n        let i = 0;\r\n        for (let node of it) {\r\n            sts = callback(node, i++);\r\n            if (!sts) break;\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"find\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    find(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let i = 0;\r\n        for (let node of it) {\r\n            if (callback(node, i++)) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"filter\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only childrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    filter(callback, flat, reverse) {\r\n        return [...this.#filtered(callback, flat, reverse)];\r\n    }\r\n\r\n    *#filtered(callback, flat, reverse) {\r\n        const it = this.iterate(flat, reverse);\r\n        for (let node of it) {\r\n            let res = callback(node);\r\n            if (res) yield node;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Iterate all nodes\r\n     * @param {boolean} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {boolean} reverse If set, will iterate up the tree\r\n     */\r\n    *iterate(flat, reverse) {\r\n        reverse ? yield* this.up(this, false, false, false, flat) : yield* this.down(this, false, false,  false, flat);\r\n    }\r\n\r\n    /**\r\n     * Add a new Tree to the tree.\r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    append(key, value = key) {\r\n        let newOne = undefined;\r\n        if (key instanceof Tree) {\r\n            key.#parent = this;\r\n            key.#level = this.#level + 1;\r\n            newOne = key;\r\n        } else {\r\n            newOne = new Tree(key, value, this);\r\n        }\r\n        this.#folder = true;\r\n        this.#children ??= [];\r\n        this.#children.push(newOne);\r\n        return newOne;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method and Array.prototype.push() \r\n     * to add a new Tree to the tree.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    insert(parentNodeKey, key, value = key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === parentNodeKey) {\r\n                const newOne = new Tree(key, value, node);\r\n                this.#folder = true;\r\n                this.#children ??= [];\r\n                node.#children.push(newOne);\r\n                return newOne;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove node from tree. If key is set, will search for first node with matching key.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n\r\n        const me = this;\r\n\r\n        if (key) {\r\n            const node = me.findByKey(key);\r\n            node?.remove();\r\n            return node;\r\n        }\r\n\r\n        if (me.isRoot) throw new Error('Root node can\\'t be removed!');\r\n        const node = me.parent;\r\n        const filtered = node.#children.filter(c => c !== me);\r\n        if (filtered.length !== node.#children.length) {\r\n            node.#children = filtered;\r\n            return me;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method to retrieve the given node in the tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    findByKey(key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convert tree into array list\r\n     * @returns \r\n     */\r\n    flatten(values, inclusive, reverse) {\r\n        return [...this.down(this, values, inclusive, reverse)];\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) Tree.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.#children?.map(o => o.toJSON()) || {};\r\n        return this.isLeaf ? { key: this.key, value: this.value } :\r\n            {\r\n                key: this.key,\r\n                value: this.value,\r\n                items: this.#children.map(o => o.toJSON())\r\n            }\r\n    }\r\n\r\n    /**\r\n     * Make node iterable\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.down();\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof Tree;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) throw new Error('Parent required when data is array');\r\n            raw.forEach(o => Tree.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        const tree = new Tree(obj.key, obj, data ? parent : undefined);\r\n        if (hasParent) parent.append(tree);\r\n        if (items) Tree.from(tree, items);\r\n        return tree;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../base/GSID.mjs\";\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n    #processors = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to register\r\n     * @param {object} processor\r\n     */\r\n    addProcessor(processor) {\r\n        if (!processor) return;\r\n        this.#processors ??= new Set();\r\n        this.#processors.add(processor);\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to remove\r\n     * @param {object} processor \r\n     */    \r\n    removeProcessor(processor) {\r\n        if (processor) this.#processors?.delete(processor);\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Generic event dispatcher, can be overriden to controll when to fire event\r\n     * @param {*} owner \r\n     * @param {*} type \r\n     * @param {*} data \r\n     * @param {*} error \r\n     */\r\n    notify(owner, type, data, error) {\r\n        this.emit(error ? 'error' : type, { type: type, error: error, owner: owner, data: data }, true);\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.#processors?.forEach(c => c.postRead?.(data));\r\n            if (data) me.notify(owner, 'read', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'read', data, e);\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.#processors?.forEach(c => c.postWrite?.(data));\r\n            if (result) me.notify(owner, 'write', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'write', data, e);\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"../base/GSFunction.mjs\";\r\nimport { GSLoader } from \"../base/GSLoader.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSAbstractReadWrite } from \"./AbstractReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically register in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */\r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */\r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return { ...this.#headers };\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = { ...val };\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */\r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#filter = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#sort = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest', 'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#writer);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('remote', GSReadWrite);\r\n    }\r\n\r\n}","// Lit 3.0 Google\r\nconst litUrl = globalThis.GS_LIT_URL || '/bootstrap-lit/assets/lib/lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const Directive = litModule.Directive;\r\nexport const LitElement = litModule.LitElement;\r\nexport const PartType = litModule.PartType;\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const adoptStyles = litModule.adoptStyles;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const createRef = litModule.createRef;\r\nexport const css = litModule.css;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const directive = litModule.directive;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getCompatibleStyle = litModule.getCompatibleStyle;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const guard = litModule.guard;\r\nexport const html = litModule.html;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isServer = litModule.isServer;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const literal = litModule.literal;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const noChange = litModule.noChange;\r\nexport const notEqual = litModule.notEqual;\r\nexport const nothing = litModule.nothing;\r\nexport const range = litModule.range;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const render = litModule.render;\r\nexport const repeat = litModule.repeat;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const staticHtml = litModule.staticHtml;\r\nexport const staticSvg = litModule.staticSvg;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const svg = litModule.svg;\r\nexport const templateContent = litModule.templateContent;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const unsafeStatic = litModule.unsafeStatic;\r\nexport const until = litModule.until;\r\nexport const when = litModule.when;\r\nexport const withStatic = litModule.withStatic;","import { Directive, directive, nothing } from \"../lib.mjs\";\r\n\r\nconst definition = {\r\n    'action': 'gsAction',\r\n    'anchor': 'gsAnchor',\r\n    'attribute': 'gsAttribute',\r\n    'call': 'gsCall',\r\n    'exec': 'gsExec',\r\n    'inject': 'gsInject',\r\n    'property': 'gsProperty',\r\n    'swap': 'gsSwap',\r\n    'target': 'gsTarget',\r\n    'template': 'gsTemplate',\r\n    'toggle': 'gsToggle',\r\n    'trigger': 'gsTrigger',\r\n    'value': 'gsValue'\r\n}\r\n\r\nconst template = {\r\n    'gsAction': undefined,\r\n    'gsAnchor': undefined,\r\n    'gsAttribute': undefined,\r\n    'gsCall': undefined,\r\n    'gsExec': undefined,\r\n    'gsInject': undefined,\r\n    'gsProperty': undefined,\r\n    'gsSwap': undefined,\r\n    'gsTarget': undefined,\r\n    'gsTemplate': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTrigger': undefined,\r\n    'gsValue': undefined\r\n}\r\n\r\nclass DatasetDirective extends Directive {\r\n\r\n    render(obj) {\r\n        console.log(obj);\r\n        return nothing;\r\n    }\r\n\r\n    update(part, [obj, flat = true]) {\r\n\r\n        if (!obj) return nothing;\r\n\r\n        const dataset = part.element.dataset;\r\n        const srcset = obj.dataset || obj;\r\n        const isDataset = srcset instanceof DOMStringMap;\r\n\r\n        if (isDataset) {\r\n            Object.assign(dataset, srcset);\r\n        } \r\n        \r\n        if (flat) this.#remap(dataset, obj);\r\n\r\n        return nothing;\r\n    }\r\n\r\n    #remap(dataset, obj) {\r\n        const opt = Object.assign({}, template);\r\n        const list = Object.entries(obj).filter(v => Object.hasOwn(definition, v[0]));\r\n        if (list.length > 0) {\r\n            list.forEach(kv => opt[definition[kv[0]]] = kv[1]);\r\n            Object.assign(dataset, opt);\r\n        }\r\n    }\r\n}\r\n\r\nexport const dataset = directive(DatasetDirective);\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\n\r\n/**\r\n * Generic object property descritptor getter\r\n * @param {Object} instance \r\n * @returns {PropertyDescriptor}\r\n */\r\nfunction descriptors(instance) {\r\n  return Object.entries(Object.getOwnPropertyDescriptors(instance));\r\n}\r\n\r\n/**\r\n * List of all object property descriptors \r\n * @param {Object} instance Object instance \r\n * @returns {Array<PropertyDescriptor>}\r\n */\r\nfunction listProperties(instance) {\r\n  return descriptors(instance)\r\n    .filter(e => typeof e[1].value !== 'function')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List all object property getters\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGetters(instance) {\r\n  return descriptors(Reflect.getPrototypeOf(instance))\r\n    .filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List of all getteble properties from an object\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGettable(instance) {\r\n  return new Set([...listGetters(instance), ...listProperties(instance)]);\r\n}\r\n\r\n/**\r\n * Parse string literal template into Lit html instance\r\n * @param {*} tpl \r\n * @param {*} params \r\n * @returns {function}\r\n */\r\nexport function literalTemplate(tpl, params) {\r\n  const names = Array.from(listGettable(params));\r\n  const vals = names.map(v => params[v]);\r\n  names.push('html');\r\n  vals.push(html);\r\n  return new Function(...names, `return html\\`${tpl}\\`;`)(...vals);\r\n}","/**\r\n * A clone of classMap directive to support CSS directive.\r\n * Lit classs is not expoed, so we have to clone it and create our own.\r\n */\r\n\r\nimport { Directive, PartType, directive, noChange } from \"../lib.mjs\";\r\n\r\nclass CssMapDirective extends Directive {\r\n\r\n    constructor(partInfo) {\r\n        super(partInfo);\r\n        if (partInfo.type !== PartType.ATTRIBUTE ||\r\n            partInfo.name !== 'css' ||\r\n            partInfo.strings?.length > 2) {\r\n            throw new Error('`classMap()` can only be used in the `css` attribute ' +\r\n                'and must be the only part in the attribute.');\r\n        }\r\n    }\r\n\r\n    render(classInfo) {\r\n        // Add spaces to ensure separation from static classes\r\n        return (' ' +\r\n            Object.keys(classInfo)\r\n                .filter((key) => classInfo[key])\r\n                .join(' ') +\r\n            ' ');\r\n    }\r\n\r\n    update(part, [classInfo]) {\r\n\r\n        // Remember dynamic classes on the first render\r\n        if (this._previousClasses === undefined) {\r\n            this._previousClasses = new Set();\r\n            if (part.strings !== undefined) {\r\n                this._staticClasses = new Set(part.strings\r\n                    .join(' ')\r\n                    .split(/\\s/)\r\n                    .filter((s) => s !== ''));\r\n            }\r\n\r\n            for (const name in classInfo) {\r\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\r\n                    this._previousClasses.add(name);\r\n                }\r\n            }\r\n            return this.render(classInfo);\r\n        }\r\n\r\n        const classList = part.element.classList;\r\n\r\n        // Remove old classes that no longer apply\r\n        for (const name of this._previousClasses) {\r\n            if (!(name in classInfo)) {\r\n                classList.remove(name);\r\n                this._previousClasses.delete(name);\r\n            }\r\n        }\r\n\r\n        // Add or remove classes based on their classMap value\r\n        for (const name in classInfo) {\r\n            // We explicitly want a loose truthy check of `value` because it seems\r\n            // more convenient that '' and 0 are skipped.\r\n            const value = !!classInfo[name];\r\n            if (value !== this._previousClasses.has(name) &&\r\n                !this._staticClasses?.has(name)) {\r\n                if (value) {\r\n                    classList.add(name);\r\n                    this._previousClasses.add(name);\r\n                } else {\r\n                    classList.remove(name);\r\n                    this._previousClasses.delete(name);\r\n                }\r\n            }\r\n        }\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * A directive that applies dynamic CSS classes.\r\n *\r\n * This must be used in the `css` attribute and must be the only part used in\r\n * the attribute. It takes each property in the `classInfo` argument and adds\r\n * the property name to the element's `classList` if the property value is\r\n * truthy; if the property value is falsey, the property name is removed from\r\n * the element's `css`.\r\n *\r\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\r\n * truthy.\r\n *\r\n * @param classInfo\r\n */\r\nexport const cssMap = directive(CssMapDirective);\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class ButtonTypes {\r\n\r\n    static values = ['button', 'reset', 'submit'];\r\n\r\n    static is(val) {\r\n        return ButtonTypes.values.includes(val);\r\n    }\r\n\r\n    static isReest(val) {\r\n        return ButtonTypes.values.indexOf(val) === 1;\r\n    }\r\n\r\n    static isSubmit(val) {\r\n        return ButtonTypes.values.indexOf(val) === 2;\r\n    }\r\n} \r\n\r\nexport const buttonType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ButtonTypes.is(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const ColorTypes = ['', 'primary', 'secondary', 'dark', 'light', 'info', 'warning', 'danger', 'alert', 'link', 'success'];\r\n\r\nexport const color = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ColorTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'dektop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n\r\nexport const InputTypes = ['checkbox', 'radio', 'switch', 'number', 'range', 'text', 'passsword', 'email', 'url', 'file'];\r\n\r\nexport const inputType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && InputTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const NavTypes = ['', 'pills', 'tabs', 'underline'];\r\n\r\nexport const nav = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && NavTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class PlacementTypes {\r\n\r\n    static values = ['center', 'left', 'right', 'start', 'end', 'top', 'bottom'];\r\n\r\n    static includes(val) {\r\n        return PlacementTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        return PlacementTypes.values.indexOf(val) > 4;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = PlacementTypes.values.indexOf(val)\r\n        return idx > 0 && idx < 5;\r\n    }\r\n\r\n    static isCenter(val) {\r\n        return PlacementTypes.values.indexOf(val) === 0;\r\n    }\r\n\r\n    static isBefore(val) {\r\n        return ['left', 'start', 'top'].includes(val);\r\n    }\r\n\r\n    static isAfter(val) {\r\n        return ['right', 'end', 'bottom'].includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const placement = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PlacementTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class PositionTypes {\r\n\r\n    static values = ['absolute', 'fixed', 'relative', 'sticky', 'static'];\r\n\r\n    static includes(val) {\r\n        return PositionTypes.values.includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const position = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PositionTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const SizeTypes = { 'default' : '', 'normal': '',  'medium': '', 'small': 'sm', 'large': 'lg', 'big' : 'lg' };\r\n\r\nexport const size = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && Object.hasOwn(SizeTypes, newVal);\r\n    }\r\n\r\n};","export const stringArrayConverter = {\r\n    fromAttribute: (value, type) => {\r\n        return (value || '').split(',');\r\n    },\r\n    toAttribute: (value, type) => {\r\n        return (value || []).join(',');\r\n    }\r\n  }","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time even gs-adopted is triggered by the GSAdoptedEngien class,\r\n * all registerd controller will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to preven dom node polution; \r\n * Style  changes  are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me.#host);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values) {\r\n    const me = this;\r\n    me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');\r\n    return me.#dynamic.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.deattach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  hostUpdated(changedProperties) {\r\n    const me = this;\r\n    if (!me.#isSelf()) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs).forEach(el => el?.remove());\r\n      me.#refs.clear();\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async relink(read = true) {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#listen(read);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    storage?.on('read', me.#readCallback);\r\n    storage?.on('write', me.#writeCallback);\r\n    storage?.on('error', me.#errorCallback);\r\n    if (read) storage.read(me.#host);\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    storage?.off('read', me.#readCallback);\r\n    storage?.off('write', me.#writeCallback);\r\n    storage?.off('error', me.#errorCallback);\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for elment move events, properly handling mouse events.\r\n */\r\nexport class ElementMoveController {\r\n\r\n  #host;\r\n  #element;\r\n  #attached = false;\r\n\r\n  #cursorX = 0;\r\n  #cursorY = 0;\r\n\r\n  #mouseUpCallback;\r\n  #mouseDownCallback;\r\n  #mouseMoveCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n    me.#mouseUpCallback = me.#onMouseUp.bind(me);\r\n    me.#mouseDownCallback = me.#onMouseDown.bind(me);\r\n    me.#mouseMoveCallback = me.#onMouseMove.bind(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  attach(element) {\r\n    const me = this;\r\n    if (!me.#attached) {\r\n      me.#element = element;\r\n      me.#attached = true;\r\n      me.#host.attachEvent(me.#element, 'mousedown', me.#mouseDownCallback);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.#cursorX = 0;\r\n    me.#cursorY = 0;\r\n    me.#host.removeEvent(document, 'mouseup', me.#mouseUpCallback);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n  * Call host onStartMove function\r\n  * @param {MouseEvent} e \r\n  */\r\n  #onMouseDown(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n    me.#host.onStartMove?.(e, me.#cursorX, me.#cursorY);\r\n    me.#host.attachEvent(document, 'mouseup', me.#mouseUpCallback, true);\r\n    me.#host.attachEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n   * Remove mousemove listener and call host onEndMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseUp(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n    return me.#host.onEndMove?.(e, me.#cursorX, me.#cursorY);\r\n  }\r\n\r\n  /**\r\n   * Call host onMouseMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseMove(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n\r\n    me.#host.onMouseMove?.(e, me.#cursorX, me.#cursorY);\r\n\r\n    if (me.#cursorX < e.clientX) {\r\n      me.#host.onCursorRight?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorX > e.clientX) {\r\n      me.#host.onCursorLeft?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    if (me.#cursorY < e.clientY) {\r\n      me.#host.onCursorUp?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorY > e.clientY) {\r\n      me.#host.onCursorDown?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for child element navigation / selection / focusing\r\n */\r\nexport class ElementNavigationController {\r\n\r\n  #host;\r\n  #attached;\r\n  #selected;\r\n  #focused;\r\n  #multiselect = new Set();\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#attached = false;\r\n  }\r\n\r\n  get circular() {\r\n    return this.#host?.circular === true;\r\n  }\r\n\r\n  get multiple() {\r\n    return this.#host?.multiple === true;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.multiple ? [...this.#multiselect.values()] : this.#selected;\r\n  }\r\n\r\n  attach(el) {\r\n    const me = this;\r\n    if (me.#attached) return;\r\n    me.#attached = true;\r\n    me.#host.attachEvent(el, 'keydown', e => me.onKeyDown(e));\r\n    me.#host.attachEvent(el, 'keyup', e => me.onKeyUp(e));\r\n    me.#host.attachEvent(el, 'click', e => me.onClick(e));\r\n    me.#host.attachEvent(el, 'focusin', e => me.onFocusIn(e));\r\n    me.#host.attachEvent(el, 'focusout', e => me.onFocusOut(e));\r\n  }\r\n\r\n  previous() {\r\n    const me = this;\r\n    let el = me.#focused?.previousElementSibling;\r\n    while (el && el.disabled) el = el.previousElementSibling;\r\n    if (me.circular && !el) el = me.lastElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  next() {\r\n    const me = this;\r\n    let el = me.#focused?.nextElementSibling;\r\n    while (el && el.disabled) el = el.nextElementSibling;\r\n    if (me.circular && !el) el = me.firstElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    const me = this;\r\n    if (me.multiple) {\r\n      me.#multiselect.forEach(el => {\r\n        el.active = false;\r\n        el.blur();\r\n      });\r\n    } else if (me.#selected) {\r\n      me.#selected.active = false;\r\n      me.#selected.blur();\r\n    }\r\n    me.#multiselect.clear();\r\n    me.#focused = undefined;\r\n    me.#selected = undefined;\r\n    this.#host?.emit('group-reset', undefined, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element selected\r\n   * @param {*} el \r\n   */\r\n  #onSelected(el) {\r\n    this.#host?.onSelected?.(el);\r\n    this.#host?.emit('group-selected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element deselected\r\n   * @param {*} el \r\n   */\r\n  #onDeselected(el) {\r\n    this.#host?.onDeselected?.(el);\r\n    this.#host?.emit('group-deselected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  #onFocused(el) {\r\n    this.#host?.onFocused?.(el);\r\n    this.#host?.emit('group-focused', el, true);\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  #isNavigable(el) {\r\n    return this.#host?.isNavigable ? this.#host?.isNavigable(el) : true;\r\n  }\r\n\r\n  #focus(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    me.#focused = el;\r\n    if (el) {\r\n      me.#onFocused(me.#focused);\r\n    }\r\n  }\r\n\r\n  #toggle(el) {\r\n    if (!el) return;\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    if (el.active) {\r\n      me.#multiselect.add(el);\r\n      me.#onSelected(el);\r\n    } else {\r\n      me.#multiselect.delete(el);\r\n      me.#onDeselected(el);\r\n    }\r\n  }\r\n\r\n  #select(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n\r\n    if (me.#selected && !me.multiple) {\r\n      me.#selected.active = false;\r\n      me.#toggle(me.#selected);\r\n    }\r\n\r\n    me.#selected = el;\r\n    if (el) {\r\n      if (me.multiple) {\r\n        el.active = !el.active;\r\n      } else {\r\n        el.active = true;\r\n      }\r\n      me.#toggle(el);\r\n    }\r\n  }\r\n\r\n  onFocusOut(e) {\r\n    const me = this;\r\n    //if (me.#focused === e.target) me.#focused = undefined;\r\n  }\r\n\r\n  onFocusIn(e) {\r\n    const me = this;\r\n    me.#focus(e.target)\r\n  }\r\n\r\n  onClick(e) {\r\n    const me = this;\r\n    if (e.ctrlKey) me.reset();\r\n    me.#select(e.target);\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        me.next();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        me.#focused?.click();\r\n        break;\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me.#host);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate(changes) {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#request();    \r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  hostUpdate() {\r\n    this.#request();\r\n  }\r\n\r\n  requestUpdate() {\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  #request() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      me.#lastRef = ref;\r\n      TemplateController.#schedule(this);\r\n    }\r\n  }\r\n\r\n  async #load() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    const isTplEl = ref instanceof HTMLTemplateElement;\r\n    const template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n    if (template) {\r\n      me.#template = template;\r\n      me.#host.requestUpdate();\r\n    }\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    const host = this.#host;\r\n    if(this.isTemplateElement) return host.url;\r\n    return host.template || host.query('template', false);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    await GSUtil.timeout(100);\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = true));\r\n    }\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #locale;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#locale = host.locale;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#locale !== me.#host?.locale) {\r\n      me.#locale === me.#host?.locale;\r\n      me.updateLanguage(me.#locale);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#locale) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    locale: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n  #orientation;\r\n  #localization;\r\n  #dataController;\r\n  #themes\r\n  #template;\r\n  #content;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.locale = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('storage')) {\r\n      if (me.storage) {\r\n        me.#dataController ??= new DataController(me);\r\n        me.#dataController.relink();\r\n      } else {\r\n        me.#dataController?.hostDisconnected();\r\n        me.#dataController = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return noChange;\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : ''\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to witch to add parsed CSS\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value) {\r\n    return this.#adopted.style(id, value);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.locale, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment);\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os);\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol);\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, opt);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\n\r\nexport class GSAccordionElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    autoclose: { type: Boolean },\r\n    cssItem: { reflect: true, attribute: 'css-item' },\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    data: { type: Array }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.settings;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n       @notify=\"${me.#onNotify.bind(me)}\"\r\n       @click=\"${me.#onClick}\" \r\n       @keyup=\"${me.#onKeyUp}\" \r\n       class=\"accordion ${classMap(me.renderClass())}\">\r\n       ${this.#renderItems()}\r\n       <slot></slot></div>`\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-accordion-item');\r\n  }\r\n\r\n  get settings() {\r\n    const cfg = this.constructor.properties;\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n  }\r\n\r\n  close() {\r\n    this.#state(false);\r\n  }\r\n\r\n  open() {\r\n    this.#state(true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-accordion-item generated\r\n        .opened=\"${ifDefined(o.disabled === true)}\" \r\n        message=\"${ifDefined(o.message)}\" \r\n        template=\"${ifDefined(o.template)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-accordion-item>`;\r\n    });\r\n  }\r\n\r\n  #state(val = false) {\r\n    this.items.forEach(el => el.opened = val);\r\n    this.notify();\r\n  }\r\n\r\n  #onNotify(e) {\r\n    const me = this;\r\n    if (me.autoclose && e.target.opened) {\r\n      me.items.filter(el => el != e.target).forEach(el => el.opened = false);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    e.target.toggle?.();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        e.target.close?.();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.target.open?.();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSAccordionItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    message: { reflect: true, },\r\n    title: { reflect: true, },\r\n    opened: { type: Boolean, reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-ACCORDION';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const owner = me.owner;\r\n    const cssHeader = me.cssHeader || owner?.cssHeader;\r\n    const cssBody = me.cssBody || owner?.cssBody;\r\n    return html`<div class=\"accordion-item ${me.css}\">\r\n             <h2 class=\"accordion-header\">\r\n               <button type=\"button\" \r\n                class=\"accordion-button  ${cssHeader} ${me.opened ? '' : 'collapsed'}\"> \r\n                 ${me.translate(me.title)}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse  ${cssBody} ${me.opened ? 'show' : ''}\">\r\n               <div class=\"accordion-body\">\r\n                   ${me.translate(me.message)}\r\n                   ${me.renderTemplate()}\r\n                   <slot></slot>\r\n               </div>\r\n             </div>      \r\n     </div>`\r\n  }\r\n\r\n  open() {\r\n    this.notify(true);\r\n  }\r\n  \r\n  close() {\r\n    this.notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.notify(!this.opened);\r\n  }\r\n\r\n  notify(val = false) {\r\n    const me = this;\r\n    me.opened = val;\r\n    super.notify();\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-accordion') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSAlertElement extends GSElement {\r\n\r\n    static properties = {\r\n        message: { reflect: true },\r\n        color: { ...color },\r\n        closed: { reflect: true, type: Boolean },\r\n        closable: { reflect: true, type: Boolean },\r\n        delay: { reflect: true, type: Number },\r\n    }\r\n\r\n    #ref;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.delay = 1;\r\n        this.#ref = createRef();\r\n        this.#data = this.#proxify(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div role=\"alert\" dir=\"${ifDefined(me.direction)}\" ${ref(me.#ref)} \r\n            @mouseover=\"${() => me.#pause = true}\"\r\n            @mouseout=\"${() => me.#pause = false}\"\r\n            class=\"alert fade ${classMap(me.renderClass())}\" >\r\n            ${me.#first}\r\n            ${me.renderTemplate()}\r\n            <slot></slot>\r\n            ${me.#second}\r\n        </div>`;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#handleBillboard();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        if (!changed.has('opened')) return;\r\n        this.#handleBillboard();\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': !me.closed,\r\n            'alert-dismissible': me.closable,\r\n            [`alert-${this.color}`]: me.color,\r\n\r\n        }\r\n        return css;\r\n    }\r\n\r\n    open() {\r\n        this.notify(false);\r\n    }\r\n\r\n    close() {\r\n        this.notify(true);\r\n    }\r\n\r\n    toggle() {\r\n        this.notify(!this.closed);\r\n    }\r\n\r\n    notify(val = false) {\r\n        const me = this;\r\n        me.closed = val;\r\n        if (me.closed) setTimeout(() => { me.#ref.value.classList.toggle('d-none', true) }, 250);\r\n        super.notify();\r\n    }\r\n\r\n    get isBillboard() {\r\n        return this.#data?.length > 0;\r\n    }\r\n\r\n    get #message() {\r\n        return this.translate(this.message);\r\n    }\r\n\r\n    get #first() { return this.rtl ? this.#button : this.#message; };\r\n\r\n    get #second() { return this.rtl ? this.#message : this.#button; };\r\n\r\n    get #button() {\r\n        return this.closable ? html`<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"${this.close}\"></button>` : '';\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, {message:{}}));\r\n    }\r\n\r\n    #handleBillboard() {\r\n        const me = this;\r\n        if (me.closed) {\r\n            clearInterval(me.#interval);\r\n            me.#interval = 0;\r\n        } else {\r\n            me.#billboard();\r\n        }        \r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        if (!me.isBillboard) return;\r\n        const items = me.#data;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].message;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].message;\r\n        }, me.delay * 1000);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-alert');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, size, buttonType, ButtonTypes, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSButtonElement extends GSElement {\r\n\r\n  static properties = {\r\n    type: { ...buttonType }, // reset, submit\r\n    size: { ...size }, // small, large, normal\r\n    color: { ...color },\r\n    toggleColor: { ...color, attribute : 'toggle-color' },\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    outline: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    toggling: { type: Boolean },\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    text: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'button';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<button part=\"button\" role=\"button\" ${ref(me.#refEl)}\r\n        dir=\"${ifDefined(me.direction)}\"\r\n        type=\"${ifDefined(me.type)}\" \r\n        class=\"btn ${classMap(me.renderClass())}\" \r\n        title=\"${ifDefined(me.#tooltip)}\"\r\n        ?disabled=${me.disabled} \r\n        @click=\"${me.#onClick}\">\r\n          ${me.#first} ${me.#second}</button>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n      'focus-ring': document.activeElement === me,\r\n      [`text-${me.text}`]: me.text,\r\n      [`btn-${size}`]: size,\r\n      [`btn-outline-${me.color}`]: me.outline,\r\n      [`btn-${me.color}`]: !me.outline && me.color,\r\n      [`btn-${me.toggleColor}`]: me.active && me.toggleColor,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    if(me.toggling) me.toggle();\r\n    if (me.isReset) return me.form?.reset();\r\n    if (me.isSubmit) return me.form?.submit();\r\n    me.notify();\r\n  }\r\n\r\n  get isReset() {\r\n    return ButtonTypes.isReest(this.type);\r\n  }\r\n\r\n  get isSubmit() {\r\n    return ButtonTypes.isSubmit(this.type);\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form, form');\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #tooltip() {\r\n    return this.translate(this.tooltip);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#icon; };\r\n\r\n  get #second() { return this.rtl ? this.#icon : this.#title; };\r\n\r\n  get #icon() { return this.icon ? html`<gs-icon class=\"bi bi-${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  static {\r\n    this.define('gs-button');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { unsafeHTML, classMap, html, ifDefined, css } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\n\r\nexport class GSCalendarElement extends GSElement {\r\n\r\n  static style = css`.year::-webkit-outer-spin-button,.year::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;} .year {-moz-appearance: textfield;} .day:focus{font-weight: bold;}`\r\n\r\n  static properties = {\r\n    date: {},\r\n    target: {},\r\n    format: { hasChanged: notEmpty },\r\n    year: { type: Number },\r\n    month: { type: Number, hasChanged: numGE0 },\r\n    day: { type: Number, hasChanged: numGE0 },\r\n    arrovPrev: { attribute: 'arrow-prev' },\r\n    arrowNext: { attribute: 'arrow-next' },\r\n    cssDays: { attribute: 'css-days' },\r\n    cssToday: { attribute: 'css-today' },\r\n    cssWeeks: { attribute: 'css-weeks' },\r\n    cssMonth: { attribute: 'css-month' },\r\n    cssYear: { attribute: 'css-year' },\r\n    cssNav: { attribute: 'css-nav' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    minYear: { attribute: 'year-min', type: Number },\r\n    maxYear: { attribute: 'year-max', type: Number },\r\n  }\r\n\r\n  #date;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.#date = new GSDate();\r\n    me.#date.locale = GSUtil.locale;\r\n    me.locale = GSUtil.locale;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.minYear = 1900;\r\n    me.maxYear = 2100;\r\n    me.arrowPrev = '&#10094;';\r\n    me.arrowNext = '&#10095;';\r\n    me.cssNav = 'btn-light';\r\n    me.cssToday = 'btn-secondary';\r\n    me.cssSelected = 'btn-primary';\r\n    me.cssWeeks = 'fw-bold text-bg-dark';\r\n    me.cssYear = 'form-control fs-5 fw-bold border-0 text-center m-1 p-0';\r\n    me.cssMonth = 'form-control fs-3 fw-bold border-0 text-center m-1 p-0';\r\n  }\r\n\r\n  get date() {\r\n    const me = this;\r\n    //return this.#date.toISOString();\r\n    return new Proxy(this.#date, {\r\n      set(target, prop, value) {\r\n        if (typeof target[prop] != 'function') {\r\n          target[prop] = value;\r\n          me.#update();\r\n        }\r\n        return true;\r\n      },\r\n      get(target, prop, receiver) {\r\n        const value = target[prop];\r\n        if (value instanceof Function) {\r\n          return function (...args) {\r\n            try {\r\n              return value.apply(this === receiver ? target : this, args);\r\n            } finally {\r\n              me.#update();\r\n            }\r\n          };\r\n        }\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  previousMonth() {\r\n    const me  =this;\r\n    if (me.month == 0) {\r\n      me.month = 11;\r\n      me.year--;\r\n    } else {\r\n      me.month--;\r\n    }\r\n  }\r\n\r\n  nextMonth() {\r\n    const me  =this;\r\n    if (me.month == 11) {\r\n      me.month = 0;\r\n      me.year++;\r\n    } else {\r\n      me.month++;\r\n    } \r\n  }\r\n\r\n  previousYear() {\r\n    this.year--;\r\n  }\r\n\r\n  nextYear() {\r\n    this.year++;\r\n  }\r\n\r\n  formatted(date) {\r\n    const me = this;\r\n    return (date || me.#date).format(me.format, me.locale);\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    const date = new GSDate(me.#date);\r\n    me.#updateTarget(date);\r\n    me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#date.year = me.year;\r\n    me.#date.month = me.month;\r\n    me.#date.day = me.day;\r\n    me.#date.locale = me.locale;\r\n\r\n    const week = GSDate.dayList(true, me.locale).map(v => html`<div class=\"col\">${v}</div>`);\r\n    const months = me.#monthsHTML();\r\n    const year = me.#yearHTML();\r\n\r\n    return html`\r\n          <div class=\"container-fluid text-center ${classMap(me.renderClass())}\"\r\n          dir=\"${ifDefined(me.direction)}\"\r\n          @keydown=\"${me.#onKey}\"\r\n          @click=\"${me.#onDay}\">\r\n          <div class=\"row align-items-center ${me.cssHeader} header\">\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.previousMonth}\" class=\"btn ${me.cssNav} arrow prev\">${unsafeHTML(me.arrowPrev)}</a>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  ${months}\r\n                  ${year}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.nextMonth}\" class=\"btn ${me.cssNav} arrow next\">${unsafeHTML(me.arrowNext)}</a>\r\n              </div>\r\n          </div>\r\n          <div class=\"row weeks ${me.cssWeeks}\">${week}</div>\r\n          ${unsafeHTML(me.#daysHTML())}\r\n      </div>`;\r\n  }\r\n\r\n  #updateTarget(date) {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    const tgt = GSDOM.query(document.documentElement, me.target);\r\n    if (!tgt) return;\r\n\r\n    if (tgt instanceof HTMLInputElement) {\r\n      if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n      return tgt.value = me.formatted(date);\r\n    }\r\n    GSDOM.setHTML(tgt, me.formatted(date));\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.locale = me.#date.locale;\r\n  }\r\n\r\n  #isToday(v, date) {\r\n    const me = this;\r\n    return v && GSUtil.asNum(v) === date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n  }\r\n\r\n  #daysHTML() {\r\n    const me = this;\r\n    const today = new GSDate();\r\n    today.locale = me.locale;\r\n    const list = me.#date.build(me.locale);\r\n    const result = list\r\n      .map(v => {\r\n        const c1 = me.#isToday(v, today) ? me.cssToday : '';\r\n        const c2 = me.#isToday(v, me.#date) ? me.cssSelected : '';\r\n\r\n        const d = v ? `<a tabindex=\"0\" href=\"#\" class=\"btn shadow-none ${c1} ${c2} day\" data-day=\"${v}\">${v}</a>` : ''\r\n        return `<div class=\"col p-0\">${d}</div>`;\r\n      })\r\n      .map((v, i) => {\r\n        if (i === 0) return `<div class=\"row days\">${v}`;\r\n        const isBreak = i % 7 == 0;\r\n        return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n      });\r\n    result.push('</div>');\r\n    return result.join('');\r\n  }\r\n\r\n\r\n  #monthsHTML() {\r\n    const me = this;\r\n    const current = me.#date.MMMM;\r\n    const months = GSDate.monthList(false, me.locale);\r\n    const list = months.map((v, i) => html`<option value=\"${i}\" selected=${ifDefined(current == v ? true : undefined)}>${v}</option>`);\r\n    //const list = GSDate.monthList(false, me.locale).map((v, i) => html`<option value=\"${i}\" ${current == v ? 'selected' : ''}>${v}</option>`);\r\n    return html`<select @change=\"${me.#onMonth}\" name=\"month\" class=\"month ${me.cssMonth}\" value=\"${months.indexOf(current)}\">${list}</select>`;\r\n  }\r\n\r\n  #yearHTML() {\r\n    const me = this;\r\n    return html`<input @change=\"${me.#onYear}\" name=\"year\" class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n  }\r\n\r\n  #onDay(e) {\r\n    GSEvents.prevent(e);\r\n    if (!e.target.classList.contains('day')) return;\r\n    this.day = GSUtil.asNum(e.target.dataset.day, this.day);\r\n  }\r\n\r\n  #onMonth(e) {\r\n    this.month = e.target.selectedIndex;\r\n  }\r\n\r\n  #onYear(e) {\r\n    this.year = e.target.value;\r\n  }\r\n\r\n  #onKey(e) {\r\n    console.log(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-calendar');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, styleMap } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\n\r\nexport class GSCardElement extends GSElement {\r\n\r\n  static styles = css`.card-header, .card-footer{ background-color: inherit; color: inherit;}`;\r\n\r\n  static properties = {\r\n\r\n    imageStyle: { type: Object, attribute: 'image-style', reflect : true },\r\n\r\n    overlay: { type: Boolean },\r\n    placement: { ...placement },\r\n    align: { ...placement },\r\n\r\n    image: {},\r\n    title: {},\r\n    subtitle: {},\r\n    text: {},\r\n    footer: {},\r\n    header: {},\r\n\r\n    colorText: { attribute: 'color-text' },\r\n    colorBack: { attribute: 'color-back' },\r\n    colorBorder: { attribute: 'color-border' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssSubtitle: { attribute: 'css-subtitle' },\r\n    cssText: { attribute: 'css-text' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssImage: { attribute: 'css-image' },\r\n\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.border = false;\r\n    this.shadow = false;\r\n    this.align = 'start';\r\n    this.placement = 'top';\r\n    this.imageStyle = this.imageStyle || {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const content =  me.isVertical ? me.#renderVertical() : me.#renderHorizontal();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"card ${classMap(me.renderClass())}\">${content}</div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return [me.#imageTop, me.#header, me.#body, me.#footer, me.#imageBottom];\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    const start = PlacementTypes.isBefore(me.placement);\r\n    const startClass = start ? 'col-4' : 'col-8';\r\n    const endClass = start ? 'col-8' : 'col-4';\r\n    const startHtml = start ? me.#images : me.#body;\r\n    const endHtml =  start ? me.#body : me.#images;\r\n    return html`<div class=\"row g-0\">\r\n        <div class=\"${startClass}\">\r\n            ${startHtml}\r\n        </div>\r\n        <div class=\"${endClass}\">\r\n          ${endHtml}\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      border: me.border || me.colorBorder,\r\n      [`text-${me.align}`]: me.align,\r\n      [`text-${me.colorText}`]: me.colorText,\r\n      [`bg-${me.colorBack}`]: me.colorBack,\r\n      [`border-${me.colorBorder}`]: me.colorBorder,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return PlacementTypes.isHorizontal(this.placement);\r\n  }\r\n\r\n  get #body() {\r\n    const me = this;\r\n    return html`<div class=\"${me.overlay ? 'card-img-overlay' : 'card-body'} ${me.cssBody}\">\r\n      <h5 class=\"card-title  ${me.cssTitle}\"><slot name=\"title\">${me.translate(title)}</slot></h5>\r\n      <h6 class=\"card-subtitle  ${me.cssSubtitle}\"><slot name=\"subtitle\">${me.translate(me.subtitle)}</slot></h6>\r\n      <p class=\"card-text ${me.cssText}\"><slot name=\"text\">${me.translate(me.text)}</slot></p>\r\n      <slot name=\"body\"></slot>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  get #header() {\r\n    return this.overlay ? '' : html`<div class=\"card-header  ${this.cssHeader}\"><slot name=\"header\">${this.header}</slot></div>`;\r\n  }\r\n\r\n  get #footer() {\r\n    return this.overlay ? '' : html`<div class=\"card-footer ${this.cssFooter}\"><slot name=\"footer\">${this.footer}</slot></div>`;\r\n  }\r\n\r\n  get #imageSlot() {\r\n    return html`<slot name=\"image\"></slot>`;\r\n  }\r\n\r\n  get #image() {\r\n    const css = this.isHorizontal ? 'img-fluid' : 'card-img';\r\n    return html`<img src=\"${this.image}\" class=\"rounded-${this.placement} ${css} ${this.cssImage}\" style=${styleMap(this.imageStyle)} alt=\"...\">`;\r\n  }\r\n\r\n  get #images() {\r\n    return this.image ? this.#image : this.#imageSlot;\r\n  }\r\n\r\n  get #imageTop() {\r\n    return this.placement === 'top' ? this.#images : '';\r\n  }\r\n\r\n  get #imageBottom() {\r\n    return this.placement === 'bottom' ? this.#images : '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-card');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSCenterElement extends GSElement {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n      class=\"position-absolute top-50 start-50 translate-middle ${classMap(this.renderClass())}\">\r\n    ${this.renderTemplate()}<slot></slot></div>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-center');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenuElement class\r\n * @module components/GSMenuElement\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSMenuElement extends GSElement {\r\n\r\n    static properties = {\r\n        storage: {},\r\n        auto: { type: Boolean, reflect: true },\r\n        opened: { type: Boolean, reflect: true },\r\n        dark: { type: Boolean },\r\n        reverse: { type: Boolean },\r\n        data: { type: Array },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {},\r\n        title: {},\r\n        header: {},\r\n        color: {},\r\n        icon: {},\r\n        url: { default: '#' }\r\n    }\r\n\r\n    #menuRef = createRef();\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.dynamicStyle(me.#styleID);\r\n        me.data = me.#proxify(me);\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        if (changed.has('opened') && !this.opened) {\r\n            this.#closeSubmenus();\r\n        }\r\n    }\r\n\r\n    updated() {\r\n        this.#updatePosition();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<ul \r\n            ${ref(me.#menuRef)}\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            class=\"dropdown-menu ${classMap(me.renderClass())}\"\r\n            data-gs-class=\"${me.#styleID}\"\r\n            data-menu=\"true\"\r\n            @mouseover=\"${me.#onMouseOver}\"\r\n            @mouseleave=\"${me.#onMouseLeave}\"\r\n            @keydown=\"${me.#onKeyDown}\"\r\n            @click=\"${me.#onClick}\">\r\n            ${me.#items(me.data)}\r\n        </ul>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'submenu': me.dataset.submenu,\r\n            'dropdown-menu-dark': me.dark,\r\n            [me.#styleID]: true,\r\n            'show': me.opened,\r\n            'dropend': !me.reverse,\r\n            'dropstart': me.reverse,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    /**\r\n     * Show at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {HTMLElement} caller\r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n\r\n        const me = this;\r\n        let target = caller;\r\n\r\n        if (GSEvents.isMouseOrPointerEvent(x)) {\r\n            const e = x;\r\n            target = e.target;\r\n            y = e.clientY;\r\n            x = e.clientX;\r\n            let offset = GSDOM.offsetParent(me);\r\n            offset = offset ? offset.getBoundingClientRect() : null;\r\n            x = x - (offset?.left || 0);\r\n            y = y - (offset?.top || 0);\r\n        }\r\n\r\n        const cfg = { clientX: x, clientY: y, target: target };\r\n\r\n        requestAnimationFrame(() => {\r\n            const style = {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                left: '0px',\r\n                translate: `${cfg.clientX}px ${cfg.clientY}px`\r\n            };\r\n            const rule = me.dynamicStyle(me.#styleID);\r\n            Object.assign(rule.style, style);\r\n        });\r\n        me.open();\r\n\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    #items(root) {\r\n        const me = this;\r\n        return root.map(el => me.#item(el));\r\n    }\r\n\r\n    #item(el) {\r\n        const me = this;\r\n        const isSub = el.items?.length > 0;\r\n        if (isSub) return me.#renderSubmenu(el);\r\n        if (!(el.header || el.name)) return me.#renderDivider();\r\n        return el.header ? me.#renderHeader(el) : me.#renderMenu(el);\r\n    }\r\n\r\n    #renderHeader(el) {\r\n        return html`<li data-inert=\"true\"><h6 class=\"dropdown-header\">${el.header}</h6></li>`;\r\n    }\r\n\r\n    #renderDivider() {\r\n        return html`<li data-inert=\"true\"><hr class=\"dropdown-divider\"></li>`;\r\n    }\r\n\r\n    #renderSubmenu(el) {\r\n        const me = this;\r\n        return html`<li>\r\n            <a class=\"dropdown-item dropdown-toggle\" data-toggle=\"true\" href=\"#\">\r\n                <div class=\"d-inline-block w-100\">${el.name}</div>\r\n            </a>\r\n            <gs-menu auto \r\n                .data=${el.items} \r\n                ?dark=${me.dark} \r\n                ?reverse=\"${me.reverse}\" \r\n                locale=\"${ifDefined(me.locale)}\" \r\n                data-submenu=\"true\">\r\n            </gs-menu>\r\n        </li>`;\r\n    }\r\n\r\n    #renderMenu(el) {\r\n        return html`<li>\r\n                <gs-button css=\"dropdown-item shadow-none\" \r\n                    ${dataset(el, false)}\r\n                    url=\"${el.url}\"\r\n                    title=\"${el.name}\" \r\n                    locale=\"${ifDefined(this.locale)}\" \r\n                    icon=\"${ifDefined(el.icon)}\" \r\n                    text=\"${ifDefined(el.color)}\">\r\n                </gs-button></li>`;\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSMenuElement.options));\r\n    }\r\n\r\n    #closeSubmenus(menu) {\r\n        GSDOM.queryAll(this.renderRoot, 'gs-menu', false, false)\r\n            .filter(el => el != menu)\r\n            .forEach(el => el.close());\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.key) {\r\n            case 'Escape':\r\n                me.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        submenu?.close();\r\n        if (me.auto) me.close();\r\n    }\r\n\r\n    #onMouseLeave(e) {\r\n        GSEvents.prevent(e);\r\n        if (this.auto) this.close();\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        me.#closeSubmenus(submenu);\r\n        submenu?.open();\r\n    }\r\n\r\n    #toSubmenu(e) {\r\n        const menuItem = e.target.closest('li');\r\n        return menuItem?.querySelector('gs-menu');\r\n    }\r\n\r\n    #updatePosition() {\r\n        const me = this;\r\n        if (!me.opened) return;\r\n        const rule = me.dynamicStyle(me.#styleID);\r\n        if (me.isSubmenu) {\r\n            const opt = { translate: `0px -25px` };\r\n            if (me.reverse) {\r\n                opt.left = 'inherited';\r\n                opt.right = '100%';\r\n            } else {\r\n                opt.right = 'inherited';\r\n                opt.left = '100%';\r\n            }\r\n            Object.assign(rule.style, opt);\r\n        } else {\r\n            rule.style.translate = null;\r\n            const rect = me.#menu.getBoundingClientRect();\r\n            const offset = window.innerWidth - rect.right;\r\n            me.reverse = offset - 5 < 0;\r\n            if (me.reverse) rule.style.translate = `${offset - 2}px`;\r\n        }\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.dataset.submenu;\r\n    }\r\n\r\n    get #menu() {\r\n        return this.#menuRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-menu');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDContextElement class\r\n * @module components/GSDContextElement\r\n */\r\n\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDContextElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        target: {},\r\n        altContext: { type: Boolean },\r\n        disabled: { type: Boolean },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', me.close.bind(me));\r\n        me.#attachTarget();\r\n    }\r\n    \r\n    #attachTarget() {\r\n        const me = this;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    }\r\n\r\n    #match(e) {\r\n        const me = this;\r\n        return e.composedPath().filter(el => el.matches)\r\n            .filter(el => el.matches(me.target));\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        if (e.shiftKey && me.altContext) return;\r\n        const list = me.#match(e);\r\n        if (list.length === 0) return;\r\n        GSEvents.prevent(e);\r\n        me.popup(e);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show submenu at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n        return this.disabled ? false : super.popup(x, y, caller);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-context');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, notEmpty } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\nexport class GSCompareElement extends GSElement {\r\n\r\n  static styles = css`.slider {\r\n         --gs-position : 50%;\r\n          left : var(--gs-position);\r\n          width: 8px;\r\n          height: 100%;\r\n          border-width: 1px;\r\n          cursor: w-resize;\r\n          border-color: darkgray;\r\n          border-style: solid;\r\n          background-color: lightgray;\r\n      }\r\n      .clipper {\r\n        --gs-position : 50%;\r\n        clip-path: inset(0px var(--gs-position) 0px 0px);\r\n      }\r\n    `;\r\n\r\n  static properties = {\r\n    background: { ...color },\r\n    width: { type: Number },\r\n    height: { type: Number },\r\n    before: { hasChanged: notEmpty },\r\n    after: { hasChanged: notEmpty },\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  #elRef = createRef();\r\n  #clipRef = createRef();\r\n  #slideRef = createRef();\r\n\r\n  #mouseController;\r\n  #elPosition;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.width = 0;\r\n    me.height = 0;\r\n    me.dynamicStyle(me.#styleID);\r\n    me.#mouseController = new ElementMoveController(me);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#mouseController.attach(this.#splitter);\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    // style=\"-display:contents;width:${me.width}px !important;height:${me.height}px !important;\"\r\n    return html`<div ${ref(me.#elRef)} \r\n         dir=\"${ifDefined(me.direction)}\"\r\n         @loaded=\"${me.#onLoad}\" \r\n         @dblclick=\"${me.#onDoubleClick}\"\r\n         data-gs-class=\"${me.#styleID}\"\r\n         class=\"${classMap(me.renderClass())}\">\r\n      <div class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden\"><slot name=\"before\">${me.#before}</slot></div>\r\n      <div ${ref(me.#clipRef)} class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden clipper\"><slot name=\"after\">${me.#after}</slot></div>\r\n      <div ${ref(me.#slideRef)} class=\"slider position-absolute top-0><slot name=\"control\"></slot></div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      \"position-relative\": true,\r\n      \"user-select-none\": true,\r\n      \"d-contents\": me.isAuto,\r\n      \"h-100\": me.isAuto,\r\n      \"w-100\": me.isAuto,\r\n      \"overflow-hidden\": true,\r\n      [`bg-${me.background}`]: me.background,\r\n      [`${me.#styleID}`]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Handles resizing based on mouse move event\r\n   * @param {MouseEvent} e \r\n   */\r\n  onStartMove(e) {\r\n    this.#elPosition = this.#splitter.getBoundingClientRect();\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    const me = this;\r\n    const offset = me.#elPosition.left;\r\n    const width = me.#elPosition.width;\r\n    const pos = GSUtil.range(e.clientX - offset, 0, width);\r\n    const pct = (pos / width) * 100;\r\n    me.#update(pct);\r\n  }\r\n\r\n  get isAuto() {\r\n    return this.width == 0 || this.height == 0;\r\n  }\r\n\r\n  get isFixed() {\r\n    return !this.isAuto;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  get #before() {\r\n    return this.before ? html`<img @load=\"${this.#onLoad}\" src=\"${me.before}\"></img>` : '';\r\n  }\r\n\r\n  get #after() {\r\n    return this.after ? html`<img @load=\"${this.#onLoad}\" src=\"${me.after}\"></img>` : '';\r\n  }\r\n\r\n  get #isAuto() {\r\n    return this.width === 0 || this.height === 0;\r\n  }\r\n\r\n  get #splitter() {\r\n    return this.#elRef.value;\r\n  }\r\n\r\n  get #slider() {\r\n    return this.#slideRef.value;\r\n  }\r\n\r\n  get #clip() {\r\n    return this.#clipRef.value;\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const me = this;\r\n    if (me.#isAuto) {\r\n      const el = e.target;\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n    }\r\n  }\r\n\r\n  #onDoubleClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#update();\r\n    me.#mouseController.reset();\r\n  }\r\n\r\n  #update(pct = 50) {\r\n    const me = this;\r\n    me.#clip.style.setProperty('--gs-position', `${100 - pct}%`);\r\n    me.#slider.style.setProperty('--gs-position', `${pct}%`);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-compare');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSCopyrightElement extends GSElement {\r\n\r\n  static properties = {\r\n    year: { reflect: true, type: Number },\r\n    company: { reflect: true },\r\n    url: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    if (!(me.isCompany && me.isYear)) return '';\r\n    const year = new Date().getFullYear();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"${classMap(me.renderClass())}\"><a target=\"_blank\" href=\"${me.url ? me.url : '#'}\"><small>&copy; ${me.company} ${me.year}. - ${year}.</small></a></div>`;\r\n  }\r\n\r\n  get isCompany() {\r\n    return GSUtil.isStringNonEmpty(this.company);\r\n  }\r\n\r\n  get isYear() {\r\n    return GSUtil.isStringNonEmpty(this.year);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-copyright');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSFunction } from '../base/GSFunction.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/verificator.mjs';\r\nimport { GSReadWriteRegistry } from '../data/ReadWriteRegistry.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for easier access to the GSReadWrite/GSTreeReader\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSDataHandler extends GSElement {\r\n\r\n    static properties = {\r\n        storage: { state: true },\r\n        src: { reflect: true },\r\n        action: { reflect: true },\r\n        mode: { reflect: true },\r\n        reader: { reflect: true },\r\n        writer: { reflect: true },\r\n        limit: { type: Number, reflect: true },\r\n        skip: { type: Number, reflect: true },\r\n        filter: { type: Array, reflect: true },\r\n        sort: { type: Array, reflect: true },\r\n        type: {},\r\n        autoload: { type: Boolean },\r\n        autorefresh: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    }\r\n\r\n    #iid = 0;\r\n    #config = null;\r\n    #handler = null;\r\n    #lifoReadRef = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        if (!me.id) throw new Error('Element ID is required attribute!');\r\n        GSItem.validate(me, me.tagName);\r\n        me.autorefresh = true;\r\n        me.autoload = false;\r\n        me.flat = true;\r\n        me.filter = [];\r\n        me.sort = [];\r\n        me.limit = 0;\r\n        me.skip = 0;\r\n        me.type = 'remote';\r\n        me.mode = 'query';\r\n        me.reader = 'GET';\r\n        me.writer = 'POST';\r\n        me.storage = me.id;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#initLIFO();\r\n        me.#config = GSItem.proxify(me, GSData.PROPERTIES);\r\n        me.#handler = GSReadWriteRegistry.newHandler(me.type, me.id, false);\r\n        if (me.#config?.length > 0) me.#handler?.addProcessor(me);\r\n        me.#handler?.enable();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#handler?.disable();\r\n        this.#handler?.removeProcessor(this);\r\n        this.#lifoReadRef = null;\r\n        clearTimeout(this.#iid);\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        const me = this;\r\n        me.#updateHandler();\r\n        if (changed.has('autorefresh')) me.schedule(me.autorefresh);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.formatSort(me.sort);\r\n        me.#handler.filter = me.formatFilter(me.filter);\r\n        if (me.autoload) me.read();\r\n    }\r\n\r\n    get isDebug() {\r\n        return this.dataset.gsDebug;\r\n    }\r\n\r\n    get handler() {\r\n        return this.#handler;\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    set search(val) {\r\n        if (this.#handler) this.#handler.search = val;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    formatFilter(val) {\r\n        val = this.#formated(val);\r\n        return Array.isArray(val) ? val : [];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    formatSort(val) {\r\n        val = this.#formated(val);\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort || [];\r\n    }\r\n\r\n    schedule(time = 0) {\r\n        const me = this;\r\n        time = GSUtil.asNum(time) * 1000;\r\n        clearInterval(me.#iid);\r\n        if (time > 0) me.#iid = setInterval(() => {\r\n            me.read(me);\r\n        }, time);\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data) {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        me.#handler?.write(me, data);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onDataRead(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data Read: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onDataWrite(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data write: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Process data after receive, before notifying \r\n     * @param {*} data \r\n     */\r\n    postRead(data) {\r\n        const me = this;\r\n        if (!Array.isArray(data)) data = [data];\r\n        data.forEach(r => {\r\n            me.#config.forEach(c => {\r\n                let val = r[c.name];\r\n                if (!GSUtil.isNull(val)) {\r\n                    val = GSData.format(c, val);\r\n                    r[c.name] = val;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onDataError(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data error: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #initLIFO() {\r\n        const me = this;\r\n        me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO();\r\n        return me.#lifoRead();\r\n    }\r\n\r\n    #lifoRead() {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        return me.#handler?.read(me);\r\n    }\r\n\r\n    #formated(val) {\r\n        return GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-data-handler');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSDialogElement extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n  static ALIGN = 'end';\r\n  static CANCEL = 'Cancel';\r\n  static CONFIRM = 'Ok';\r\n\r\n  static #STACK = [];\r\n\r\n  static styles = css`dialog{outline:none;}dialog::backdrop{backdrop-filter: blur(4px);}`;\r\n\r\n  static properties = {\r\n\r\n    standard: { refelct: true, type: Boolean },\r\n    opened: { refelct: true, type: Boolean },\r\n    cancelable: { refelct: true, type: Boolean },\r\n    closable: { refelct: true, type: Boolean },\r\n    escapable: { refelct: true, type: Boolean },\r\n    disabled: { refelct: true, type: Boolean },\r\n\r\n    title: { refelct: true },\r\n    message: { refelct: true },\r\n    cancelText: { refelct: true, },\r\n    confirmText: { refelct: true, },\r\n\r\n    buttonAlign: { refelct: true, attribute: 'button-align' },\r\n\r\n    iconCancel: { refelct: true, attribute: 'icon-cancel' },\r\n    iconConfirm: { refelct: true, attribute: 'icon-confirm' },\r\n\r\n    cssCancel: { attribute: 'css-cancel' },\r\n    cssConfirm: { attribute: 'css-confirm' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssContent: { attribute: 'css-content' },\r\n\r\n  }\r\n\r\n  #dialogRef = createRef();\r\n  #btnConfirmRef = createRef();\r\n  #btnCancelRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    const clazz = GSDialogElement;\r\n    me.opened = false;\r\n    me.standard = false;\r\n    me.cancelable = false;\r\n    me.closable = false;\r\n    me.escapable = false;\r\n    me.disabled = false;\r\n    me.shadow = false;\r\n    me.rounded = false;\r\n\r\n    me.css = clazz.CSS;\r\n    me.cssTitle = clazz.TITLE_CSS;\r\n    me.cssHeader = clazz.HEADER_CSS;\r\n    me.buttonAlign = clazz.ALIGN;\r\n    me.cancelText = clazz.CANCEL;\r\n    me.confirmText = clazz.CONFIRM;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialogElement.#updateStack();\r\n  }\r\n\r\n  updated() {\r\n    super.updated();\r\n    const me = this;\r\n    if (me.opened) {\r\n      GSDialogElement.#STACK.push(me);\r\n      if (me.standard) {\r\n        me.#dialog?.open();\r\n      } else {\r\n        me.#dialog?.showModal();\r\n      }\r\n      me.#focusable()?.focus();\r\n    } else {\r\n      GSDialogElement.#STACK.pop();\r\n      me.#dialog?.close();\r\n    }\r\n    me.notify();\r\n  }\r\n\r\n  #renderConfirm() {\r\n    const me = this;\r\n    if (!me.closable) return '';\r\n    return html`<gs-button  ${ref(me.#btnConfirmRef)} \r\n      @click=\"${me.#onConfirm.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconConfirm)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      .disabled=\"${me.disabled}\"  \r\n      css=\"${me.cssConfirm}\" \r\n      color=\"primary\" \r\n      title=\"${me.confirmText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderCancel() {\r\n    const me = this;\r\n    if (!me.cancelable) return '';\r\n    return html`<gs-button ${ref(me.#btnCancelRef)}\r\n      @click=\"${me.#onCancel.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconCancel)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      css=\"${me.cssCancel}\" \r\n      color=\"primary\" \r\n      title=\"${me.cancelText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderFooter() {\r\n    const me = this;\r\n    const isFooter = me.cancelable || me.closable;\r\n    if (!isFooter) return '';\r\n    return html`<div class=\"card-footer d-flex user-select-none justify-content-${me.buttonAlign} ${me.cssFooter}\">\r\n      ${me.#renderCancel()} &nbsp;${me.#renderConfirm()}\r\n      </div>`;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n        <dialog tabindex=\"-1\" ${ref(me.#dialogRef)} \r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @close=\"${me.#onCancel.bind(me)}\"\r\n            @cancel=\"${me.#onCancel.bind(me)}\"\r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            class=\"dialog p-0 border-0 ${classMap(me.renderClass())}\">\r\n            <div class=\"card ${me.cssContent}\">\r\n                <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n                  <div class=\"card-title ${me.cssTitle}\">\r\n                    <slot name=\"title\">${me.translate(me.title)}</slot>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body ${me.cssBody}\">\r\n                  <slot name=\"body\">${me.translate(me.message)}</slot>\r\n                </div>\r\n                ${me.#renderFooter()}\r\n            </div>\r\n            <slot name=\"extra\"></slot>\r\n            <div class=\"toast-container position-fixed\"></slot></div>\r\n        </dialog>`\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.closable = closable;\r\n    me.cancelable = cancelable;\r\n    me.escapable = cancelable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('click-action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    return this.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    return this.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    index = GSUtil.asNum(index, 0);\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); f.values = data;});\r\n    const tab = me.tab;\r\n    if (tab && index > -1) tab.index = index;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  get form() {\r\n    return this.query('form', true);\r\n  }\r\n\r\n  get forms() {\r\n    return this.queryAll('form', true);\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('gs-tab', true);\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.#dialogRef.value;\r\n  }\r\n\r\n  get #btnConfirm() {\r\n    return this.#btnConfirmRef.value;\r\n  }\r\n\r\n  get #btnCancel() {\r\n    return this.#btnCancelRef.value;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  #focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#btnCancel;\r\n    if (me.closable) return me.#btnConfirm;\r\n    return me;\r\n  }\r\n\r\n  #onConfirm(e) {\r\n    this.close();\r\n    this.emit('click-action');\r\n  }\r\n\r\n  #onCancel(e) {\r\n    this.close();\r\n    this.emit('click-action');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) {\r\n        GSEvents.prevent(e);\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  static #updateStack() {\r\n    const stack = GSDialogElement.#STACK;\r\n    stack = stack.filter(v => v.isConnected);\r\n  }\r\n\r\n  static get top() {\r\n    GSDialogElement.#updateStack();\r\n    const stack = GSDialogElement.#STACK;\r\n    if (stack.length === 0) return null;\r\n    return stack[stack.length - 1];\r\n  }\r\n\r\n  static {\r\n    this.define('gs-dialog');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, unsafeHTML, html, ifDefined } from '../lib.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSDrawerElement extends GSElement {\r\n\r\n  static properties = {\r\n    autoclose: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    backdrop: { reflect: true, type: Boolean },\r\n    expanded: { reflect: true, type: Boolean },\r\n    scroll: { reflect: true, type: Boolean },\r\n\r\n    min: { reflect: true, type: Number},\r\n    max: { reflect: true},\r\n    fingers: { reflect: true, type: Number},\r\n    placement: {...placement},\r\n    \r\n    transition: { reflect: true },\r\n    duration: { reflect: true, type: Number },\r\n\r\n    title: { reflect: true},\r\n\r\n    cssTitle: { reflect: true, attribute: \"css-title\"},\r\n    cssHead: { reflect: true, attribute: \"css-head\" },\r\n    cssBody: { reflect: true, attribute: \"css-body\" },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.placement = 'start';\r\n    me.cssTitle = 'fs-5';\r\n    me.transition = 'linear';\r\n    me.duration = 0.2;\r\n    me.min = 0;\r\n    me.max = 'auto';\r\n    me.fingers = 2;\r\n    me.on('mouseleave', me.#onLeave.bind(me));\r\n    me.on('mouseenter', me.#onEnter.bind(me));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`${unsafeHTML(me.#style)}\r\n    <div tabindex=\"-1\" dir=\"${ifDefined(me.direction)}\"\r\n     class=\"offcanvas overflow-hidden anime ${classMap(me.renderClass())}\">\r\n      ${me.#header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        ${me.renderTemplate()}\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>${me.#backdrop}`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': true,\r\n      'anime-open' : me.expanded,\r\n      'anime-close' : !me.expanded,\r\n      [`offcanvas-${me.placement}`]: me.placement,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #style() {\r\n    const me = this;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    return `<style>\r\n    .anime {\r\n      transition-property: ${pos} !important;\r\n      transition-duration: ${me.duration}s  !important;\r\n      transition-timing-function: ${me.transition} !important;\r\n    }\r\n    .anime-open {\r\n        ${pos} : ${me.max}${GSUtil.isNumber(me.max) ? 'px':''} !important;\r\n    }\r\n    .anime-close {\r\n      ${pos} : ${me.min}${GSUtil.isNumber(me.min) ? 'px':''} !important;\r\n    }    \r\n    </style>`;\r\n  }\r\n\r\n  get #backdrop() {\r\n    const me = this;\r\n    if (!me.backdrop) return '';\r\n    return html`<div class=\"offcanvas-backdrop fade ${me.expanded ? 'show' : 'invisible'}\" @click=\"${me.close}\"></div>`;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    return me.closable ? html`<button type=\"button\" class=\"btn-close text-reset\" @click=\"${me.close}\"></button>` : '';\r\n  }\r\n\r\n  get #title() {\r\n    const me = this;\r\n    return me.title ? html`<div class=\"offcanvas-title ${me.cssTitle}\">${me.translate(me.title)}</div>` : '';\r\n  }\r\n\r\n  get #header() {\r\n    const me = this;\r\n    return me.#hasHeader ? html`<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${me.#title}${me.#button}</slot></div>` : '';\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  get #hasHeader() {\r\n    return this.title || this.closable || this.#headSlot;\r\n  }\r\n\r\n  #notify(val) {\r\n    const me = this;\r\n    me.expanded = val == true;\r\n    me.notify();\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  open() {\r\n    this.#notify(true);\r\n  }\r\n\r\n  close() {\r\n    this.#notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.#notify(!this.expanded);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return !this.isVertical;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-drawer');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdownElement class\r\n * @module components/GSDropdownElement\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { cssMap } from '../directives/css-map.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDropdownElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        icon: {},\r\n        text: {...color},\r\n        color: {...color},\r\n        size: {},\r\n        title: {}\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"dropdown\"  dir=\"${ifDefined(me.direction)}\">\r\n                ${me.#renderButton()}\r\n                ${super.renderUI()}\r\n            </div>`;\r\n    }\r\n\r\n    #buttonClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'btn': true,\r\n            [`btn-${me.color}`] : me.color ? true : false,\r\n            'dropdown-toggle': true,\r\n            'shadow-none' : true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    #renderButton() {\r\n        const me = this;\r\n        return html`<gs-link css=\"${cssMap(me.#buttonClass())}\"\r\n            url=\"#\"         \r\n            icon=\"${ifDefined(me.icon)}\"\r\n            text=\"${ifDefined(me.text)}\"\r\n            size=\"${ifDefined(me.size)}\"\r\n            title=\"${ifDefined(me.title)}\"\r\n            @notify=\"${me.open}\">\r\n            </gs-link>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-dropdown');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { css, html, unsafeHTML } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Safe email rendering to protect from spam bots.\r\n */\r\nexport class GSEmailElement extends GSElement {\r\n\r\n  static shadowRootOptions = { mode: 'closed' }\r\n\r\n  static style = css`.e-mail:before {\r\n    content: attr(data-website) \"\\0040\" attr(data-user);\r\n    unicode-bidi: bidi-override;\r\n    direction: rtl;\r\n    }`;\r\n\r\n  static properties = {\r\n    user: { reflect: true },\r\n    domain: { reflect: true },\r\n    dev: { type: Boolean }\r\n  }\r\n\r\n  #user;\r\n  #domain;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  willUpdate(changes) {\r\n    super.willUpdate(changes);\r\n    this.#updateUser();\r\n    this.#updateDomain()\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${unsafeHTML(this.#style)}<a @click=\"${this.#onClick}\" class=\"e-mail\" data-user=\"${this.#user}\" data-website=\"${this.#domain}\"  href=\"mailto://\"></a>`;\r\n  }\r\n\r\n  get #style() {\r\n    return '<style>.e-mail:before { content: attr(data-website) \"\\u0040\" attr(data-user); unicode-bidi: bidi-override; direction: rtl; }</style>';\r\n  }\r\n\r\n  get #url() {\r\n    return `mailto://${GSUtil.reverse(this.dataset.user)}@${GSUtil.reverse(this.dataset.domain)}`;\r\n  }\r\n\r\n  #updateUser() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.user) {\r\n      me.#user = dataset.user || GSUtil.reverse(me.user);\r\n      if (me.dev) dataset.user = me.#user;\r\n      me.user = '';\r\n    }\r\n  }\r\n\r\n  #updateDomain() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.domain) {\r\n      me.#domain = dataset.domain || GSUtil.reverse(me.domain);\r\n      if (me.dev) dataset.domain = me.#domain;\r\n      me.domain = '';\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    window.location.href = me.#url;\r\n    //window.open(me.#url, '_blank');  \r\n  }\r\n\r\n  static {\r\n    this.define('gs-email');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSFormElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    disabled: { type: Boolean },\r\n    data: { type: Object },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = [];\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<form ${ref(me.#formRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      @change=\"${me.#onChange}\"\r\n      @submit=\"${me.submit}\"\r\n      @reset=\"${me.reset}\">\r\n      <slot></slot>\r\n    </form>`;\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    if (changed.has('disabled')) {\r\n      if (me.disabled) {\r\n        me.disable();\r\n      } else {\r\n        me.enable();\r\n      }\r\n    }\r\n    if (changed.has('data')) {\r\n      me.asJSON = me.data;\r\n    }\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  get isValid() {\r\n    return this.queryAll('input,select,textarea', true)\r\n      .filter(el => GSDOM.isVisible(el))\r\n      .map(el => el.checkValidity())\r\n      .filter(v => v === false).length === 0;\r\n  }\r\n\r\n  /**\r\n  * Overide native to pickup all form elements, including ones in shadow dom\r\n  */\r\n  get elements() {\r\n    return this.queryAll('input,select,output,textarea', true);\r\n  }\r\n\r\n  get asJSON() {\r\n    return GSDOM.toObject(this);\r\n  }\r\n\r\n  set asJSON(data) {\r\n    const me = this;\r\n    GSDOM.fromObject(me, data);\r\n    return me.validate();\r\n  }\r\n\r\n  disable() {\r\n    GSDOM.disableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  enable() {\r\n    GSDOM.enableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.form.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.form.reportValidity();\r\n  }\r\n\r\n  reset(e) {\r\n    const me = this;\r\n    if (e?.target === me.form) {\r\n      me.dataController?.read(me.asJSON);\r\n    } else {\r\n      me.form.reset();\r\n    }\r\n  }\r\n\r\n  submit(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    if (me.validate()) me.dataController?.write(me.asJSON);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataWrite(data) {\r\n\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    const isValid = me.checkValidity() && me.isValid;\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if (me.isBindable) me.handle(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { inputType, numGT0, numGE0 } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSFormGroupElement extends GSElement {\r\n\r\n  static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2 text-md-end';\r\n  static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n  static CSS_ICON = 'text-primary me-2 fs-5';\r\n  static ICON = 'info-circle-fill';\r\n\r\n  static properties = {\r\n    icon: {},\r\n    layout: {},\r\n    placement: {},\r\n\r\n    description: {},\r\n    label: {},\r\n    placeholder: {},\r\n    pattern: {},\r\n    mask: {},\r\n\r\n    name: {},\r\n    type: { ...inputType },\r\n    list: {},\r\n    accept: {},\r\n\r\n    step: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    min: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    max: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    minLength: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    maxLength: { type: Number, reflect: true, hasChanged: numGT0 },\r\n\r\n    reverse: { type: Boolean },\r\n\r\n    autoid: { type: Boolean },\r\n    autocopy: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    autocapitalize: { type: Boolean, reflect: true },\r\n    autocomplete: { type: Boolean, reflect: true },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    checked: { type: Boolean, reflect: true },\r\n    multiple: { type: Boolean, reflect: true },\r\n    reveal: { type: Boolean, reflect: true },\r\n    readonly: { type: Boolean, reflect: true },\r\n    required: { type: Boolean, reflect: true },\r\n\r\n    cellField: { attribute: 'cell-field' },\r\n    cellLabel: { attribute: 'cell-label' },\r\n    cssLabel: { attribute: 'css-label' },\r\n    cssField: { attribute: 'css-field' },\r\n\r\n  }\r\n\r\n  #inputRef = createRef();\r\n  #ouptutRef = createRef();\r\n  #patterns = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.#validateAllowed();\r\n    this.type = 'text';\r\n    this.icon = GSFormGroupElement.ICON;\r\n    this.placement = 'top';\r\n    this.layout = 'horizontal';\r\n    this.cssLabel = GSFormGroupElement.CSS_LABEL;\r\n    this.cellLabel = GSFormGroupElement.CSS_LABEL_CELL;\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#patterns = GSItem.collect(me)\r\n      .filter(el => el.dataset.pattern)\r\n      .map(el => new RegExp(el.dataset.pattern));\r\n    super.connectedCallback();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#onRange();\r\n    if (me.templateRef && !me.field)  {\r\n      const field = GSDOM.formElements(me.renderRoot).pop();\r\n      me.#inputRef.value = field;\r\n      if (field) {\r\n        field.name = this.name;\r\n        me.attachEvent(field, 'change', me.#onChange.bind(me));\r\n      } \r\n    }\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    switch (me.layout) {\r\n      case 'floating': return me.#renderFloating();\r\n      case 'vertical': return me.#renderVertical();\r\n      default: return me.#renderHorizontal();\r\n    }\r\n  }\r\n\r\n  #renderFloating() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n       <div class=\"form-floating ${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n          ${me.#renderLabel()}\r\n       </div>\r\n       ${me.#renderInfo()}\r\n    </div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n      <div class=\"col-12  ${me.cellLabel}\">\r\n          ${me.#renderLabel()}\r\n      </div>\r\n       <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n       </div>\r\n       ${me.#renderInfo()}   \r\n    </div>      \r\n    `;\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row form-group ${classMap(me.renderClass())}\">    \r\n       <slot name=\"header\"></slot>\r\n       ${me.#renderLabelWrap()}\r\n       ${me.#renderField()}\r\n       ${me.#renderInfo()}\r\n       <slot name=\"footer\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderLabel() {\r\n    const me = this;\r\n    return html`<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.translate(me.label)}</label>`;\r\n  }\r\n\r\n  #renderLabelWrap() {\r\n    const me = this;\r\n    return html`<div class=\"${me.cellLabel}\">${me.#renderLabel()}</div>`;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.#isIcon ? html`<gs-icon size=\"5\" css=\"${GSFormGroupElement.CSS_ICON}}\" name=\"${me.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderTooltip() {\r\n    const me = this;\r\n    const tgt = me.#isIcon ? '@parent' : `[name='${me.name}']`;\r\n    return me.description ? html`<gs-tooltip local locale=\"${ifDefined(me.locale)}\" placement=\"${me.placement}\" title=\"${me.description}\" target=${ifDefined(tgt)}></gs-tooltip>` : '';\r\n  }\r\n\r\n  #renderInfo() {\r\n    const me = this;\r\n    const tooltip = me.#renderTooltip();\r\n    if (tooltip && me.#isIcon) return html`\r\n    <div class=\"col-auto\">\r\n       ${tooltip}\r\n       ${me.#renderIcon()}\r\n    </div>`;\r\n    return tooltip;\r\n  }\r\n\r\n  #renderField() {\r\n    const me = this;\r\n    return html`\r\n    <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n       <slot name=\"body\">${me.#renderInput()}${me.#renderOutput()}</slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderOutput() {\r\n    const me = this;\r\n    if (!me.isRange) return \"\";\r\n    return html`<span ${ref(me.#ouptutRef)} class=\"position-absolute px-1\">${me.value}</span>`;\r\n  }\r\n\r\n  #renderInput() {\r\n\r\n    const me = this;\r\n\r\n    const tpl = me.query('template') || me.template;\r\n    if (tpl) return me.renderTemplate();\r\n\r\n    const idattr = me.autoid ? me.name : undefined;\r\n    const val = me.isFieldset ? me.value.split(',') : me.value;\r\n\r\n    if (Array.isArray(val)) {\r\n      const wrap = me.dataset.radioLayout === 'vertical';\r\n      return val.map((it, i) => { return { v: it, id: `${me.name}_${i}` } })\r\n        .map((o, i) => me.#fieldSet(me.name + i, o.v, me.#inputHTML(o.id, me.name, o.v), wrap));\r\n    }\r\n\r\n    return me.#inputHTML(idattr, me.name, me.value);\r\n  }\r\n\r\n  #fieldSet(id, val, fld, vertical = false) {\r\n    const me = this;\r\n    return vertical ?\r\n      html`<div class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></div>`\r\n      :\r\n      html`<span class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></span>`;\r\n  }\r\n\r\n  #inputHTML(id, name, value) {\r\n    const me = this;\r\n    const type = me.isSwitch ? 'checkbox' : me.type;\r\n    return html`<input is=\"gs-ext-input\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n        \r\n            name=\"${name}\" \r\n            value=\"${value}\"\r\n            type=\"${type}\" \r\n    \r\n            style=\"${me.reverse && me.isRange ? 'transform: rotateY(180deg);' : ''}\"\r\n            class=\"${me.#cssField} ${me.cssField}\" \r\n\r\n            placeholder=\"${ifDefined(me.translate(me.placeholder))}\"\r\n            description=\"${ifDefined(me.translate(me.description))}\"\r\n\r\n            mask=\"${ifDefined(me.mask)}\"\r\n            pattern=\"${ifDefined(me.pattern)}\"\r\n            list=\"${ifDefined(me.list)}\"\r\n            accept=\"${ifDefined(me.accept)}\"\r\n             \r\n            step=\"${ifDefined(me.step)}\"\r\n            min=\"${ifDefined(me.min)}\"\r\n            max=\"${ifDefined(me.max)}\"\r\n\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n            \r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?autocomplete=\"${me.autocomplete}\"\r\n            ?multiple=\"${me.multiple}\"\r\n            ?checked=\"${me.checked}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"\r\n            ?reveal=\"${me.reveal}\"\r\n            >`;\r\n  }\r\n\r\n  get #cssField() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-input ms-0';\r\n    if (me.isRange) return 'form-range';\r\n    return 'form-control';\r\n  }\r\n\r\n  get #cssLabel() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-label';\r\n    if (me.isFloating) return 'ms-2';\r\n    return me.isVertical ? 'form-label' : '';\r\n  }\r\n\r\n  get #cssCheck() {\r\n    const me = this;\r\n    if (me.isCheckable) {\r\n      //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      if (me.isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n      return me.isFieldset ? '' : 'form-check';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get #cellField() {\r\n    const me = this;\r\n    const val = (me.isHorizontal) ? '6' : '11';\r\n    return me.cellField || `col-md-${val} col-sm-${val} col-xs-11`;\r\n  }\r\n\r\n  get #isIcon() {\r\n    return GSUtil.isStringNonEmpty(this.icon);\r\n  }\r\n\r\n  #onRange(e) {\r\n    const me = this;\r\n    if (me.isRange) {\r\n      const el = me.#ouptutRef.value;\r\n      if (el) el.innerHTML = me.field?.value || '';\r\n      me.field.title = me.field.value;\r\n    }\r\n    me.emit('input', e);\r\n  }\r\n\r\n  #onChange(e) {\r\n    this.emit('change', e, true);\r\n  }\r\n\r\n  async #onBlur(e) {\r\n\r\n    const me = this;\r\n    const el = me.field;\r\n\r\n    if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n    let isValid = false;\r\n    for (const r of me.#patterns) {\r\n      isValid = r.test(el.value);\r\n      if (isValid) break;\r\n    }\r\n\r\n    if (!isValid) {\r\n      el.setCustomValidity('Invalid input');\r\n      el.reportValidity();\r\n      el.focus();\r\n      await GSUtil.timeout(2000);\r\n      el.setCustomValidity('');\r\n    }\r\n\r\n    me.emit('change', e);\r\n  }\r\n\r\n  #validateAllowed() {\r\n    const me = this;\r\n    const slots = ['header', 'body', 'footer'];\r\n    let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n    if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n    list = Array.from(me.children).filter(el => !el.slot);\r\n    const tagList = ['TEMPLATE', 'GS-ITEM'];\r\n    const allowed = GSDOM.isAllowed(list, tagList);\r\n    if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    const isValid = me.checkValidity();\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.field?.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.field?.reportValidity();\r\n  }\r\n\r\n  get value() {\r\n    return this.field?.value;\r\n  }\r\n\r\n  set value(val) {\r\n    GSDOM.fromObject2Element(this.field, { [this.name]: val });\r\n    this.validate();\r\n  }\r\n\r\n  get isFloating() {\r\n    return this.layout === 'floating';\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.layout === 'horizontal';\r\n  }\r\n\r\n  get isVertical() {\r\n    return this.layout === 'vertical';\r\n  }\r\n\r\n  get isFieldset() {\r\n    const me = this;\r\n    return me.type === 'radio' && me.value?.includes(',');\r\n  }\r\n\r\n  get isCheckable() {\r\n    const me = this;\r\n    return me.isCheck || me.isRadio || me.isSwitch;\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.field.checked;\r\n  }\r\n\r\n  get isCheck() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get isRadio() {\r\n    return this.type === 'radio';\r\n  }\r\n\r\n  get isSwitch() {\r\n    return this.type === 'switch';\r\n  }\r\n\r\n  get isNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  get isRange() {\r\n    return this.type === 'range';\r\n  }\r\n\r\n  get isText() {\r\n    return this.type === 'text';\r\n  }\r\n\r\n  get isPassword() {\r\n    return this.type === 'passsword';\r\n  }\r\n\r\n  get isEmail() {\r\n    return this.type === 'email';\r\n  }\r\n\r\n  get isURL() {\r\n    return this.type === 'url';\r\n  }\r\n\r\n  get isFile() {\r\n    return this.type === 'file';\r\n  }\r\n\r\n  get field() {\r\n    return this.#inputRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref, repeat } from '../lib.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSFormGroupElement } from './FormGroup.mjs';\r\n\r\n/**\r\n * Component is responsible for auto-building gs-form and gs-form-group elements\r\n * from either JSON data or GS-ITEM elements.\r\n */\r\nexport class GSFormPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    formStorage: { attribute: 'form-storage' },\r\n    disabled: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.#proxify;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<gs-form ${ref(me.#formRef)}\r\n      ?disabled=${me.disabled} \r\n      storage=\"${ifDefined(me.formStorage)}\" \r\n      .locale=\"${me.locale}\"\r\n      .rtl=\"${me.rtl}\"\r\n      .css=\"${me.css}\"\r\n      .theme=\"${me.theme}\"\r\n      .margin=\"${me.margin}\"\r\n      .padding=\"${me.padding}\"\r\n      .border=\"${me.border}\"\r\n      .shadow=\"${me.shadow}\"\r\n      .os=\"${me.os}\"\r\n      .browser=\"${me.browser}\"\r\n      .environment=\"${me.environment}\"\r\n      .orientation=\"${me.orientation}\"\r\n      .protocol=\"${me.protocol}\">\r\n      <slot>\r\n        ${repeat(me.data, (r) => html`<gs-form-group .data=${r} locale=\"${ifDefined(me.locale)}\" ></gs-form-group>`)}\r\n      </slot>\r\n    </form>`;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  get #proxify() {\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, GSFormGroupElement.properties));\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGroupElement class\r\n * @module components/GSGroupElement\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { ElementNavigationController } from '../controllers/ElementNavigationController.mjs';\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\n\r\n/**\r\n * Renderer for grouped elements such as Buttons, Navs, Tabs and lists.\r\n * Components handles grouped elements navigation, selection and focus.\r\n * \r\n * @class\r\n * @extends { GSElement }\r\n */\r\nexport class GSGroupElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    circular: { type: Boolean },\r\n    multiple: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #elRef = createRef();\r\n  #controller;\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.initData();\r\n    this.#controller = new ElementNavigationController(this);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#controller.attach(this.#elRef.value);\r\n    super.firstUpdated(changed);\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      ${me.renderWrappedUI()}\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedUI(name) {\r\n    const me = this;\r\n    return html`<div \r\n      class=\"${classMap(me.renderWrappedClass())}\">\r\n      <slot name=\"${ifDefined(name)}\">${me.renderItems()}</slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    return {};\r\n  }\r\n\r\n  renderItems() {\r\n    return '';\r\n  }\r\n\r\n  initData() {\r\n    return undefined;\r\n  }\r\n\r\n  previous() {\r\n    this.#controller.previous();\r\n  }\r\n\r\n  next() {\r\n    this.#controller.next();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    this.#controller.reset();\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  isNavigable(el) {\r\n    return true;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#controller.focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#controller.selected;\r\n  }\r\n\r\n  settings(el) {\r\n    const cfg = el instanceof GSElement ? el.definitions : GSElement.allProperties(el);\r\n    const items = GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n    const active = items.filter(el => el.active);\r\n    active.forEach((el, idx) => el.active = idx === 0);\r\n    return items;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-group');\r\n  }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGT0 } from '../properties/index.mjs';\r\nimport { color } from '../properties/color.mjs';\r\n\r\nexport class GSIconElement extends GSElement {\r\n\r\n  static styles = css`\r\n    :host {\r\n      --gs-icon-super-color : cornflowerblue;\r\n      --gs-icon-content : '';\r\n    }\r\n    i::after {\r\n      top: -8px;\r\n      font-size: 0.7em;\r\n      position: relative;\r\n      content: var(--gs-icon-content);\r\n      content: attr(data-super);\r\n      color: var(--gs-icon-super-color);\r\n    }`;\r\n\r\n  static properties = {\r\n    name: { reflect: true, hasChanged: notEmpty },\r\n    size: { reflect: true, type: Number, hasChanged: numGT0 },\r\n    color: { reflect: true, ...color },\r\n    superColor: { attribute : 'super-color'},\r\n    super: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    //this.flat = true;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const superColor = me.superColor ? `--gs-icon-super-color:${me.superColor};` : '';\r\n    return html`<i class=\"bi ${classMap(me.renderClass())}\" data-super=\"${ifDefined(me.super)}\" style=\"${ifDefined(superColor)}\"></i>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      [`text-${me.color}`]: me.color,\r\n      [`bi-${me.name}`]: me.name,\r\n      'fs': me.size > 0,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-icon');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/index.mjs';\r\n\r\nexport class GSIndentElement extends GSElement {\r\n\r\n  static styles = css`.indent {\r\n      --gs-indent : 10px;\r\n      margin-left: var(--gs-indent);\r\n      margin-right: var(--gs-indent);\r\n    }`;\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    size: { type: Number, hasChanged: numGT0 },\r\n    multiplier: { type: Number, hasChanged: numGT0 }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.size = 1;\r\n    me.multiplier = 10;\r\n  }\r\n\r\n  renderUI() {\r\n    const size = this.size * this.multiplier;\r\n    return html`<span class=\"indent\" style=\"--gs-indent: ${size}px;\"></span>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-indent');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nconst numdef = { reflect: true, type: Number, hasChanged: numGE0 };\r\n\r\nexport class GSImageElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { hasChanged: notEmpty },\r\n    width: numdef,\r\n    height: numdef,\r\n    opacity: numdef,\r\n    invert: numdef,\r\n    grayscale: numdef,\r\n    brightness: numdef,\r\n    blur: numdef,\r\n    contrast: numdef,\r\n    saturate: numdef,\r\n    hue: numdef,\r\n    sepia: numdef,\r\n\r\n    alt: {},\r\n    loading: {}\r\n\r\n  }\r\n\r\n  #imageRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    this.#update();\r\n    return this.src;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<img ${ref(me.#imageRef)} \r\n            @load=\"${me.#onLoad}\"\r\n            src=\"${me.src}\" \r\n            alt=\"${me.alt}\" \r\n            loading=\"${ifDefined(me.loading)}\" \r\n            class=\"${me.#styleID}\" \r\n            data-gs-class=\"${me.#styleID}\">\r\n          </img>`;\r\n  }\r\n\r\n  get complete() {\r\n    return this.#imageRef.value?.complete || false;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  #renderStyle() {\r\n    const me = this;\r\n    const filter = me.#buildFilter();\r\n    const css = {\r\n      width: me.width > 0 ? me.width : undefined,\r\n      height: me.height > 0 ? me.height : undefined,\r\n      filter: filter.length > 0 ? filter.join(' ') : ''\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #buildFilter() {\r\n    const me = this;\r\n    const o = [];\r\n\r\n    if (me.blur > 0) o.push(`blur(${me.blur}px)`);\r\n    if (me.invert > 0) o.push(`invert(${me.invert})`);\r\n    if (me.opacity > 0) o.push(`opacity(${me.opacity})`);\r\n    if (me.contrast > 0) o.push(`contrast(${me.contrast})`);\r\n    if (me.grayscale > 0) o.push(`grayscale(${me.grayscale})`);\r\n    if (me.brightness > 0) o.push(`brightness(${me.brightness})`);\r\n\r\n    if (me.hue > 0) o.push(`hue-rotate(${me.hue}deg)`);\r\n    if (me.sepia > 0) o.push(`sepia(${me.sepia}%)`);\r\n    if (me.saturate > 0) o.push(`saturate(${me.saturate}%)`);\r\n\r\n    return o;\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.filter = me.#buildFilter().join(' ').trim();\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const el = e.target;\r\n    const me = this;\r\n    if (el) {\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n      me.emit('loaded', { width: el.width, height: el.height, element: el }, true);\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-image');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayoutElement\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, styleMap, templateContent } from '../lib.mjs';\r\nimport { orientation, OrientationTypes } from '../properties/orientation.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSLayoutElement extends GSElement {\r\n\r\n    static properties = {\r\n        type: { ...orientation }\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        type: {},\r\n        min: { type: Number },\r\n        max: { type: Number },\r\n        resizable: { type: Boolean },\r\n        autofit: { type: Boolean },\r\n        vPos: { attribute: 'h-pos' },\r\n        hPos: { attribute: 'v-pos' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.autofit = true;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if ( this.autofit && GSDOM.root(this) === document.body) document.body.classList.add('vh-100');\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const list = me.#items(me).map((el, idx, els) => me.#build(el, idx, els));\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"d-flex flex-fill w-100 h-100 ${classMap(me.renderClass())}\">${list}</div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const horizontal = OrientationTypes.isHorizontal(me.type);\r\n        return {\r\n            ...super.renderClass(),\r\n            'flex-column': horizontal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #items(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSLayoutElement.options));\r\n    }\r\n\r\n    #build(el, idx, els) {\r\n\r\n        const me = this;\r\n        const type = el.self.parentElement.type || 'vertical';\r\n\r\n        const list = me.#items(el.self).map((it, idx, items) => me.#build(it, idx, items));\r\n        \r\n        const min = el.min;\r\n        const max = el.max;\r\n        const template = el.template;\r\n        const tplEl = me.#elementTemplate(el);\r\n\r\n        const tc = `#${tplEl?.id}` !== template;\r\n\r\n        const dir = el.type || type || 'vertical';\r\n        const horizontal = OrientationTypes.isHorizontal(dir);\r\n        \r\n        const col = list.length > 0 && horizontal ? 'flex-column' : '';\r\n\r\n        const css = me.#panelCSS(el, col);\r\n        const style = me.#panelStyle(el, horizontal);\r\n\r\n        const slot = el.name ? html`<slot name=\"${el.name}\"></slot>` : '';\r\n        const src = html`<div class=\"d-flex ${classMap(css)}\" style=\"${styleMap(style)}\">\r\n            ${list}\r\n            ${templateContent(tplEl)}\r\n            ${template && tc ? html`<gs-template url=\"${template}\"></gs-template>` : ''}\r\n            ${slot}\r\n            </div>`;\r\n\r\n        if (!el.resizable) return src;\r\n\r\n        const resize = (idx === els.length - 1) ? 'end' : 'start';\r\n        const splitter = me.#splitter(min, max, type, resize);\r\n\r\n        if (idx === els.length - 1) return [splitter , src];\r\n        return [src, splitter];\r\n    }\r\n    \r\n    #elementTemplate(el) {\r\n        const tplEl = el.self.firstElementChild;\r\n        return tplEl instanceof HTMLTemplateElement ? tplEl : undefined;\r\n    }\r\n\r\n    #panelCSS(el, col) {\r\n\r\n        const resizable = el.min > 0 || el.max > 0 || el.resizable;\r\n        const grow = resizable ? '' : 'flex-grow-1';\r\n\r\n        let vpos = el.vPos;\r\n        let hpos = el.hPos;\r\n\r\n        hpos = hpos ? `align-items-${hpos}` : '';\r\n        vpos = vpos ? `justify-content-${vpos}` : '';\r\n\r\n        const css = this.mapCSS(el.css, {\r\n            [col] : col,\r\n            [grow] : grow,\r\n            [hpos] : hpos,\r\n            [vpos] : vpos\r\n        });\r\n    \r\n        return css;        \r\n    }\r\n\r\n    #panelStyle(el, horizontal) {\r\n        const min = el.min;\r\n        const max = el.max;\r\n        const style = {};\r\n        if (horizontal) {\r\n            style['min-height'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-height'] = max > 0 ? `${max}px` : undefined;\r\n        } else {\r\n            style['min-width'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-width'] = max > 0 ? `${max}px` : undefined;\r\n        }\r\n        return style;        \r\n    }\r\n\r\n    #splitter(min, max, dir, resize) {\r\n        return html`<gs-splitter split=\"${dir}\" resize=\"${resize}\" min=\"${min}\" max=\"${max}\"></gs-splitter>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-layout');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSLinklement extends GSElement {\r\n\r\n  static properties = {\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    size: { type: Number },\r\n    text: { ...color },\r\n    color: { ...color },\r\n    url: {},\r\n    ping: {},\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    target: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.url = '#';\r\n    // this.text = 'primary'; // do not set as default -> gs-dropdown\r\n    // this.target = '_blank'; // not used \r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n      <a ${ref(me.#refEl)}  \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        title=\"${ifDefined(me.translate(me.tooltip))}\" \r\n        href=\"${ifDefined(me.url)}\" \r\n        ping=\"${ifDefined(me.ping)}\" \r\n        target=\"${ifDefined(me.target)}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        ?disabled=${me.disabled} \r\n        @click=\"${me.#onClick}\">\r\n        ${me.#first} ${me.#second}\r\n        </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,      \r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [`text-${me.text}`]: me.text,\r\n      [`bg-${me.color}`]: me.color\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.notify();\r\n    if (me.url === '#' || GSUtil.isStringEmpty(me.url)) {\r\n      GSEvents.prevent(e);\r\n      this.handle(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#icon; };\r\n\r\n  get #second() { return this.rtl ? this.#icon : this.#title; };\r\n\r\n  get #icon() { return this.icon ? html`<gs-icon name=\"${this.icon}\" size=\"${this.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  /**\r\n   * Generate clickable link\r\n   * @param {*} options \r\n   * @param {*} css \r\n   * @param {*} before \r\n   * @param {*} after \r\n   * @returns \r\n   */\r\n  static generate(options, css, before, after) {\r\n    const opt = options;\r\n    return html`<a class=\"${classMap(css)}\"\r\n        tabindex=\"0\"    \r\n        ${dataset(opt, true)}\r\n        part=\"${ifDefined(opt.part)}\"\r\n        tooltip=\"${ifDefined(opt.tooltip)}\"\r\n        href=\"${ifDefined(opt.url)}\">        \r\n        ${before || ''}\r\n        <slot>${opt.title}</slot> \r\n        ${after || ''}\r\n    </a>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-link');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\n\r\nexport class GSListElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    selectable: { reflect: true, type: Boolean },\r\n    cssItem: { attribute: 'css-item' },\r\n    data: { type: Array },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = false;\r\n    this.multiple = false;\r\n    this.data = this.settings;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-list-item');\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group': true,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    return html`<slot>${this.renderItems()}</slot>`;\r\n  }\r\n\r\n  reset() {\r\n    this.items.forEach(el => el.reset());\r\n    this.notify();\r\n  }\r\n\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-list-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .selectable=\"${o.selectable === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-list-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-LIST-ITEM';\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-list-item');\r\n  }\r\n\r\n\r\n\r\n  static {\r\n    this.define('gs-list');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSListItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    autofocus: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    selectable: { type: Boolean, reflect: true },\r\n    generated: { state: true, type: Boolean }\r\n  }\r\n\r\n  #initial;\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.bind();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.#initial = this.active;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-LIST';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#activeCSS, {});\r\n    return html`<a  tabindex=\"0\" ${ref(me.#refEl)}\r\n       href=\"${ifDefined(me.url)}\" \r\n       target=\"${ifDefined(me.target)}\" \r\n       class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()} \r\n        ${me.#renderSecond()}\r\n        <slot>${me.renderTemplate()}</slot>\r\n      </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      [me.#itemCSS] : true,\r\n      'active': me.active\r\n    }\r\n    return me.active ? me.mapCSS(me.#activeCSS, css) : css;\r\n  }\r\n\r\n  #renderIcon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.rtl ? this.translate(this.title) : this.#renderIcon();\r\n  }\r\n\r\n  #renderSecond() {\r\n    return this.rtl ? this.#renderIcon() : this.translate(this.title);\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || this.#initial || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get owner() {\r\n    return (this.hasAttribute('generated') ? GSDOM.component(this) : this.parentElement);\r\n  }\r\n  \r\n  get #activeCSS() {\r\n    return this.owner.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #itemCSS() {\r\n    return this.owner.dataset?.cssItem || '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { NavTypes, PlacementTypes } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSNavItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean },\r\n    active: { type: Boolean, reflect: true },\r\n    generated: { state: true, type : Boolean }\r\n  }\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-NAV';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div class=\"nav-item ${classMap(me.renderClass())}\">${me.#button}</div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    return this.mapCSS(this.#itemsCSS, super.renderClass());\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get vertical() {\r\n    return this.parentElement.vertical || false;\r\n  }\r\n\r\n  get placement() {\r\n    return this.parentElement.placement;\r\n  }\r\n\r\n  get owner() {\r\n    return (this.hasAttribute('generated') ? GSDOM.component(this) : this.parentElement);\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #title() {\r\n    return html`<slot>${this.translate(this.title)}</slot>`;\r\n  }\r\n\r\n  get #icon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  get #first() {\r\n    return this.rtl ? this.#title : this.#icon;\r\n  }\r\n\r\n  get #second() {\r\n    return this.rtl ? this.#icon : this.#title;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#buttonCSS, {});\r\n    if (me.active) obj = me.mapCSS(me.#buildCSS + ' ' + me.#activeCSS, obj);\r\n    return html`<a tabindex=\"0\" type=\"button\" role=\"nav\" \r\n     ${ref(me.#refEl)}\r\n     class=\"nav-link ${classMap(obj)}\"\r\n     href=\"${ifDefined(me.url)}\" \r\n     target=\"${ifDefined(me.target)}\">\r\n        ${me.#first} \r\n        ${me.#second}\r\n      </a>`;\r\n  }\r\n\r\n  get #itemsCSS() {\r\n    return this.owner.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #buttonCSS() {\r\n    return this.owner.dataset?.cssButton || '';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.owner.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #navType() {\r\n    return NavTypes.indexOf(this.owner.type);\r\n  }\r\n\r\n  // fiix for shadowed DOM, parent class=\"nav nav-pills..\" \r\n  // do not cross shadow dom, so item elements does not see CSS\r\n  // we have to simulate\r\n  get #buildCSS() {\r\n    const isVertical = this.vertical;\r\n    const isBefore = PlacementTypes.isBefore(this.placement);\r\n    switch (this.#navType) {\r\n      // pills\r\n      case 1: return 'rounded text-bg-primary';\r\n      // tabs\r\n      case 2:\r\n        if (isVertical) {\r\n          if (isBefore) {\r\n            return 'shadow-none border border-end-0';\r\n          } else {\r\n            return 'shadow-none border border-start-0';\r\n          }\r\n        }\r\n        return 'shadow-none border border-bottom-0';\r\n      // underline\r\n      case 3: return 'shadow-none border-bottom border-3 fw-medium';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { GSNavItemElement } from './NavItem.mjs';\r\nimport { PlacementTypes, nav, placement } from '../properties/index.mjs';\r\n\r\nexport class GSNavElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    type: nav,\r\n    placement: placement,\r\n    vertical: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = true;\r\n    this.multiple = false;\r\n    this.type = 'pills';\r\n    this.placement = 'start';\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSNavItemElement);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-nav-item');\r\n  }\r\n  \r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const isBefore = PlacementTypes.isBefore(me.placement);\r\n    const isTab = me.type === 'tabs';\r\n    const css = {\r\n      'nav': true,\r\n      [`nav-${me.type}`]: me.type,\r\n      'flex-column': me.vertical,\r\n      'border-bottom-0': me.vertical,\r\n      'border-end': isTab && isBefore && me.vertical,\r\n      'border-start': isTab && !isBefore && me.vertical,\r\n      [`justify-content-${me.placement}`]: !me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Render items based on data proeprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-nav-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-nav-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-NAV-ITEM';\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  onFocused(el) {\r\n    el?.click();\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { svg, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSOverlayElement extends GSElement {\r\n\r\n    static properties = {\r\n        color: {},\r\n        target: {},\r\n        autoremove: { type: Boolean },\r\n        opened: { type: Boolean },\r\n        opacity: { type: Number },\r\n        padding: { type: Number },\r\n        radius: { type: Number },\r\n    }\r\n\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        this.color = 'rgb(0,0,0)';\r\n        this.opacity = 0.7;\r\n        this.padding = 1;\r\n        this.radius = 6;\r\n        this.dynamicStyle(this.#styleID);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', () => me.requestUpdate());\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        if (!me.opened) return '';\r\n        const path = me.#path;\r\n        return path ? html`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlspce=\"preserve\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\" preserveAspectRatio=\"xMinYMin slice\"\r\n            viewvbox=\"0 0 ${window.innerWidth} ${window.innerHeight}\"\r\n            class=\"gs-overlay gs-overlay-animated ${me.#styleID}\"\r\n            @click=\"${me.reset.bind(me)}\">\r\n            ${path}\r\n        </svg>` : '';\r\n    }\r\n\r\n    async firstUpdated(changed) {\r\n        const me = this;\r\n        const opt = {\r\n            fillRule: \"evenodd\",\r\n            clipRule: \"evenodd\",\r\n            strokeLinejoin: \"round\",\r\n            strokeMiterlimit: \"2\",\r\n            zIndex: \"10000\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    get #path() {\r\n        const me = this;\r\n        const el = GSDOM.query(me.target);\r\n        if (!me.target) return '';\r\n        const pathStr = me.#createSVGPathString(el);\r\n        return svg`<path style=\"fill:${me.color};opacity:${me.opacity};pointerEvents:auto;cursor:auto;\" d=\"${pathStr}\"></path>`;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n\r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n\r\n        const rect = target.getBoundingClientRect();\r\n\r\n        const padding = me.padding;\r\n        const radius = me.radius;\r\n\r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n\r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n\r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n\r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n\r\n        const val = `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n            M${highlightBoxX},${highlightBoxY} \r\n            h${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n            v${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n            h-${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n            v-${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;\r\n        return val.replace(/[\\t\\n]/g, ' ');\r\n    }\r\n\r\n    static {\r\n        this.define('gs-overlay');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, map, range, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { size, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSPagerElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    size: { ...size },\r\n    first: { type: Boolean },\r\n    last: { type: Boolean },\r\n    next: { type: Boolean },\r\n    previous: { type: Boolean },\r\n    pages: { type: Number },\r\n\r\n    labelFirst: { attribute: 'label-first' },\r\n    labelLast: { attribute: 'label-last' },\r\n    labelNext: { attribute: 'label-next' },\r\n    labelPrevious: { attribute: 'label-previous' },\r\n\r\n    cssItem: { attribute: 'css-item' },\r\n\r\n  }\r\n\r\n  #ref = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.pages = 5;\r\n    this.labelFirst = '&laquo;';\r\n    this.labelLast = '&raquo;';\r\n    this.labelNext = '&rsaquo;';\r\n    this.labelPrevious = '&lsaquo;';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const half = Math.floor((me.pages - 1) / 2);\r\n    const page = me.dataController?.page || 0;\r\n    const start = page - half < 1 ? 1 : page - half;\r\n    const end = page > 0 ? page + half : me.pages;\r\n\r\n    return html`<nav \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        @click=\"${me.#onClick}\"\r\n        @keyup=\"${me.#onKeyUp}\"\r\n        @keydown=\"${me.#onKeyDown}\">\r\n        <ul ${ref(me.#ref)} class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()}\r\n        ${me.#renderPrevious()}\r\n        ${map(range(start, end + 1), (i) => me.#renderItem(i, '', '', i  === page))}\r\n        ${me.#renderNext()}\r\n        ${me.#renderLast()}\r\n        </ul></nav>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = me.size ? SizeTypes[me.size] || me.size : '';\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'pagination': true,\r\n      [`pagination-${size}`]: size,\r\n\r\n    }\r\n    return css;\r\n  }\r\n\r\n  updated() {\r\n    const target = this.#ref.value;\r\n    if (target && this.isFocused) {\r\n      target.querySelector('.active > a')?.focus();\r\n    }\r\n  }\r\n\r\n  onDataRead() {\r\n    this.requestUpdate();\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.first ? this.#renderItem(this.labelFirst, 'first', 'First page') : '';\r\n  }\r\n\r\n  #renderLast() {\r\n    return this.last ? this.#renderItem(this.labelLast, 'last', 'Last page') : '';\r\n  }\r\n\r\n  #renderPrevious() {\r\n    return this.previous ? this.#renderItem(this.labelPrevious, 'previous', 'Previous page') : '';\r\n  }\r\n\r\n  #renderNext() {\r\n    return this.next ? this.#renderItem(this.labelNext, 'next', 'Next page') : '';\r\n  }\r\n\r\n  #renderItem(text = '', name = '', title = '', active = false) {\r\n    const me = this;\r\n    text = GSUtil.decodeHTMLEntities(text);\r\n    return html`<li class=\"page-item ${active ? 'active' : ''}\">\r\n              <a class=\"page-link ${this.cssItem}\" \r\n                 name=\"${name}\" \r\n                 title=\"${me.translate(title)}\" \r\n                 href=\"#\">${me.translate(text)}</a>\r\n            </li>`;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const el = this.#toTarget(e, 'a');\r\n    if (!el) return;\r\n\r\n    const ctrl = me.dataController;\r\n    if (!ctrl) return;\r\n\r\n    const val = el.name || el.text;\r\n    me.emit(val, el);\r\n    \r\n    switch (val) {\r\n      case 'first':\r\n        return ctrl.firstPage();\r\n      case 'last':\r\n        return ctrl.lastPage();\r\n      case 'next':\r\n        return ctrl.nextPage();\r\n      case 'previous':\r\n        return ctrl.prevPage();\r\n    }\r\n\r\n    ctrl.page = val;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const current = this.#toTarget(e, 'li');\r\n    let el = null;\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        el = current?.previousElementSibling;\r\n        break;\r\n      case 'ArrowRight':\r\n        el = current?.nextElementSibling;\r\n        break;\r\n    }\r\n    el = el?.querySelector('a');\r\n    el?.focus();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') {\r\n      this.#toTarget(e, 'a')?.click();\r\n    }\r\n  }\r\n\r\n  #toTarget(e, name) {\r\n    const el = e.target.closest(name) || e.target;\r\n    return el.tagName === name.toUpperCase() ? el : undefined;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-pagination');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, position } from '../properties/index.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSPopper } from \"../base/GSPopper.mjs\";\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopupElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    position: { ...position },\r\n    trigger: {},\r\n    target: {},\r\n    autoclose: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    opened: { type: Boolean },\r\n    hPos: { type: Number, attribute: 'h-pos' },\r\n    vPos: { type: Number, attribute: 'v-pos' },\r\n    wMin: { type: Number, attribute: 'w-min' },\r\n    wMax: { type: Number, attribute: 'w-max' },\r\n    hMin: { type: Number, attribute: 'h-min' },\r\n    hMax: { type: Number, attribute: 'h-max' },\r\n\r\n  }\r\n\r\n  #caller = null;\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.autofocus = true;\r\n    this.autoclose = true;\r\n    this.trigger = 'click';\r\n    this.position = 'absolute';\r\n    this.placement = 'bottom';\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachTaraget();\r\n    me.attachEvent(window, 'resize', me.close.bind(me));\r\n    me.on('mouseleave', me.#onAuto.bind(me));\r\n  }\r\n\r\n  firstUpdated(changedProperties) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#resize();\r\n      me.#reposition();\r\n    });\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#reposition();\r\n    if (me.autofocus) me.focus();\r\n    me.notify();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div \r\n      ${ref(me.#panelRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"fade ${classMap(me.renderClass())}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      @keydown=\"${me.#onKeyDown}\">\r\n      ${me.renderTemplate()}\r\n      <slot></slot>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': me.opened,\r\n      //'d-none' : !me.opened,\r\n      [me.#styleID]: true,\r\n      [`position-${me.position}`]: me.position,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  focus() {\r\n    this.query('[tabindex], input, select, textarea, button, a', true)?.focus();\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Show popup at x/y position on the screen\r\n   * @param {Number} x \r\n   * @param {Number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const obj = {\r\n      top: '0px',\r\n      left: '0px',\r\n      translate: `${x}px ${y}px`\r\n    };\r\n    me.#resize(obj);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      case 'Escape':\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    //if (!me.opened) return;\r\n    if (me.vPos || me.hPos) {\r\n      const opt = {\r\n        top: '0px',\r\n        left: '0px',\r\n        translate: `${me.hPos}px ${me.vPos}px`\r\n      };\r\n      const rule = me.dynamicStyle(me.#styleID);\r\n      Object.assign(rule.style, opt);\r\n    } else if (me.target) {\r\n      let target = GSDOM.query(document.documentElement, me.target);\r\n      target = target.renderRoot?.firstElementChild || target;\r\n      GSPopper.popupFixed(me.placement, me.#panel, target);\r\n    }\r\n\r\n  }\r\n\r\n  #resize(obj = {}) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n    if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n    if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n    if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n    Object.assign(rule.style, obj);\r\n  }\r\n\r\n  #onPopup(e) {\r\n    const me = this;\r\n    me.#caller = e;\r\n    if (e instanceof Event) {\r\n      GSEvents.prevent(e);\r\n      me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n    }\r\n\r\n    if (me.placement) {\r\n      GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n      me.opened = true;\r\n      return;\r\n    }\r\n\r\n    let x = e.clientX, y = e.clientY;\r\n    const rect = me.#panel.getBoundingClientRect();\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #attachTaraget() {\r\n    const me = this;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    me.trigger.split(' ').forEach(evt => {\r\n      targets.forEach(target => me.attachEvent(target, evt, me.#onPopup.bind(me)));\r\n    });\r\n  }\r\n\r\n  #onAuto(e) {\r\n    if (this.autoclose) this.close();\r\n  }\r\n\r\n  get #panel() {\r\n    return this.#panelRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-popup');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, classMap, styleMap, ifDefined } from '../lib.mjs';\r\nimport { literalTemplate } from '../directives/literal.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSProgressElement extends GSElement {\r\n\r\n  static properties = {\r\n    min: { reflect: true, type: Number },\r\n    max: { reflect: true, type: Number },\r\n    step: { reflect: true, type: Number },\r\n    value: { reflect: true, type: Number },\r\n    label: { reflect: true }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.min = 0;\r\n    this.step = 1;\r\n    this.max = 100;\r\n    this.value = 0;\r\n    this.styles = { width: '0%' };\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#updateStyle();\r\n    const obj = {min :me.min, max:me.max, step:me.step, value:me.value, percentage:me.percentage};\r\n    return html`\r\n    <div class=\"progress\" @keydown=\"${me.#onKeySelect}\" dir=\"${ifDefined(me.direction)}\">\r\n        <div class=\"progress-bar ${classMap(me.renderClass())}\" \r\n             style=${styleMap(me.styles)} \r\n             role=\"progressbar\"\r\n             tabindex=\"0\">\r\n             ${literalTemplate(me.label, obj)}\r\n        </div>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  willUpdate(changedProperties) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    if (changedProperties.has('value')) {\r\n      let val = me.step + changedProperties.get('value');\r\n      val = me.#update(val, val);\r\n      changedProperties.set('value', val);\r\n    }\r\n  }\r\n\r\n  updated(changedProperties) {\r\n    if (changedProperties.has('value')) {\r\n      this.notify();\r\n    }\r\n  }\r\n\r\n  increase(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value + val, me.value);\r\n    return true;\r\n  }\r\n\r\n  decrease(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value - val, me.value);\r\n    return true;\r\n  }\r\n\r\n  get percentage() {\r\n    const me = this;\r\n    return Math.trunc((me.value / me.max) * 100);\r\n  }\r\n\r\n  #updateStyle() {\r\n    this.styles.width = `${this.percentage}%`;\r\n  }\r\n\r\n  #update(val, old = 0) {\r\n    val = GSUtil.asNum(val, GSUtil.asNum(old));\r\n    const me = this;\r\n    if (val > me.max) val = me.max;\r\n    if (val < me.min) val = me.min;\r\n    return val;\r\n  }\r\n\r\n  #onKeySelect(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp' :\r\n      case 'ArrowRight' :\r\n          return me.increase();\r\n      case 'ArrowLeft' :\r\n      case 'ArrowDown' :\r\n         return me.decrease();\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-progress');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\n\r\nexport class GSSpinnerElement extends GSElement {\r\n\r\n    static styles = css`.spinner-border { border: var(--bs-spinner-border-width) solid currentcolor; border-right-color: transparent; }`;\r\n\r\n    static properties = {\r\n        color: { ...color, reflect: true },\r\n        small: { type: Boolean, reflect: true },\r\n        pulsar: { type: Boolean }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\" role=\"status\"></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"spinner-border\": !me.pulsar,\r\n            \"spinner-grow\": me.pulsar,\r\n            [`text-${me.color}`]: me.color,\r\n            [`spinner-border-sm`]: !me.pulsar && me.small,\r\n            [`spinner-grow-sm`]: me.pulsar && me.small,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-spinner');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitterElement class\r\n * @module components/GSSplitterElement\r\n */\r\n\r\nimport { classMap, createRef, ref, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCSSMap } from '../base/GSCSSMap.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { notEmpty, numGT0, placement } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSSplitterElement extends GSElement {\r\n\r\n    static properties = {\r\n        // Check if splitter use vertical or horizontal splitting\r\n        split: { reflect: true },\r\n        // start|end|top|bottom\r\n        resize: { ...placement, hasChanged : notEmpty },\r\n        size: { type: Number, hasChanged: numGT0 }\r\n    }\r\n\r\n    #cursor = 0;\r\n    #styleID = GSID.id;\r\n    #elRef = createRef();\r\n    #mouseController;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.size = 8;\r\n        me.resize = 'start';\r\n        me.dynamicStyle(me.#styleID);\r\n        me.#load();\r\n        me.#mouseController = new ElementMoveController(me);\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#mouseController.attach(this.#splitter);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#elRef)} \r\n            @dblclick=\"${me.#onDoubleClick}\"\r\n            data-gs-class=\"${me.#styleID}\" \r\n            class=\"${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'splitter': true,\r\n            [me.#styleID]: true\r\n        }\r\n        return css;\r\n    }\r\n\r\n    updated(changedProperties) {\r\n        const me = this;\r\n        me.#cssUpdate();\r\n    }\r\n\r\n    /**\r\n    * Lock UI for mouse events to enable resizing over embedded iframes\r\n    * @param {MouseEvent} e \r\n    */\r\n    onStartMove(e) {\r\n        const me = this;\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', { start: true });\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    onMouseMove(e) {\r\n        const me = this;\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Save last position and unlock mouse UI events when resizing finished\r\n     * @param {*} e \r\n     */\r\n    onEndMove(e) {\r\n        const me = this;\r\n        me.#save();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', { stop: true });\r\n    }\r\n\r\n    /**\r\n    * Check if splitter use vertical or hotizontal splitting\r\n    * @returns {Boolean}\r\n    */\r\n    get isVertical() {\r\n        return this.split === 'vertical';\r\n    }\r\n\r\n    get isHorizontal() {\r\n        return !this.isVertical;\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display', 'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.#elRef.value;\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        return this.target.style;\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n\r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n                .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, true);\r\n                    el.dataset.gsSplitter = true;\r\n                });\r\n        } else {\r\n            me.#lockable\r\n                .filter(el => el.dataset.gsSplitter)\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, false);\r\n                    delete el.dataset.gsSplitter;\r\n                });\r\n        }\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        if (me.isVertical) {\r\n            me.#styleDynamic.width = val + \"px\";\r\n        } else {\r\n            me.#styleDynamic.height = val + \"px\";\r\n        }\r\n    }\r\n\r\n    #cssUpdate() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        const opt = {\r\n            [size]: `${me.size}px`,\r\n            [full]: '100%',\r\n            'border-width': '1px',\r\n            cursor: cursor,\r\n            'border-color': 'darkgray',\r\n            'border-style': 'solid',\r\n            'background-color': 'lightgray',\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-splitter');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSNavItemElement } from '../NavItem.mjs';\r\n\r\nexport class GSTabItemElement extends GSNavItemElement {\r\n\r\n  static properties = {\r\n    name: {}\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\n\r\nexport class GSTabPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    name: {},\r\n    template: {},\r\n    active: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return GSDOM.component(this)?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  renderUI() {\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" \r\n      class=\"${classMap(this.renderClass())}\">\r\n      <slot>\r\n      ${this.template ? html`<gs-template url=\"${this.template}\"></gs-template>` : ''}\r\n      </slot></div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tab-pane': true,\r\n      'd-none' : !me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../../base/GSID.mjs';\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { PlacementTypes } from '../../properties/placement.mjs';\r\nimport { GSNavElement } from '../Nav.mjs';\r\nimport { GSTabItemElement } from './Tab.mjs';\r\n\r\nexport class GSTabGroupElement extends GSNavElement {\r\n\r\n  static properties = {\r\n    panelCSS: { attribute: 'css-panel' },\r\n    tabCSS: { attribute: 'css-tab' },\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSTabItemElement);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-tab');\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'd-flex': me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    const me = this;\r\n    const reverse = PlacementTypes.isAfter(me.placement);\r\n    const list = [super.renderWrappedUI('tabs'),\r\n     html`<div class=\"tab-content flex-fill ${me.panelCSS}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <slot name=\"panels\">${me.renderPanels()}</slot>\r\n      </div>\r\n      <slot class=\"d-none\"></slot>`];\r\n      return reverse ? list.reverse() : list;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const css = super.renderWrappedClass();\r\n    return me.mapCSS(me.tabCSS, css);\r\n  }\r\n\r\n  /**\r\n   * Render items based on data proeprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n        return html`<gs-tab generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus || o.active}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\"    \r\n        title=\"${ifDefined(o.title)}\"\r\n        name=\"${o.name}\"></gs-tab>`;\r\n    });\r\n  }  \r\n \r\n  /**\r\n   * Render items based on data proeprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderPanels() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-panel name=\"${o.name}\" \r\n        template=\"${ifDefined(o.template)}\"></gs-tab-panel>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Filter navigable element\r\n   * @param {HTMLElement} el \r\n   */\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-TAB';\r\n  }\r\n\r\n  /**\r\n   * Callback when tab selected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onSelected(el) {\r\n    el?.click();\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = true;\r\n  }\r\n\r\n  /**\r\n   * Callback when tab deselected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onDeselected(el) {\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = false;\r\n  }\r\n\r\n  /**\r\n   * Selected Tab node name is used to find the panel.\r\n   * If panel found, auto-link it with node element\r\n   * @param {GSTabElement} el \r\n   */\r\n  #findPanel(el) {\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    const generated = me.data?.length > 0;\r\n    let panel = el[key] || me.query(`gs-tab-panel[name=\"${el.name}\"]`, generated);\r\n    if (!el[key]) el[key] = panel;\r\n    return panel;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * A simple HTML Table rederer for read-only tabular data representation\r\n * For complex interactive dat use gs-table\r\n */\r\nexport class GSTableElement extends GSElement {\r\n\r\n  static #icons = ['sort-up', 'arrow-down-up', 'sort-down-alt'];\r\n\r\n  static styles = css`th:hover { opacity: 50% !important; }`;\r\n\r\n  static CELLS = {\r\n    align : {},\r\n    width : {},\r\n    ...GSData.PROPERTIES\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    color: { ...color },\r\n    colorHead: { ...color, attribute: 'head-color' },\r\n    colorSelect: { ...color, attribute: 'select-color' },\r\n    stripedColumn: { type: Boolean, attribute: 'striped-column' },\r\n    divider: { type: Boolean },\r\n    striped: { type: Boolean },\r\n    hover: { type: Boolean },\r\n    small: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    borderless: { type: Boolean },\r\n\r\n    filter: { type: Array, state: true },\r\n    sort: { type: Array, state: true },\r\n    columns: { type: Array, state: true },\r\n    selections: { type: Array, state: true },\r\n    key: { type: Number, state: true },\r\n\r\n    data: { type: Array },\r\n    datacolumn: { type: Boolean },\r\n    multisort: { type: Boolean },\r\n    multiselect: { type: Boolean },\r\n    protected: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n    sortable: { type: Boolean },\r\n  }\r\n\r\n  #config = [];\r\n  #sortOrder = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.headColor = 'secondary';\r\n    this.colorSelect = 'info';\r\n    this.columns = [];\r\n    this.selections = [];\r\n    this.data = [];\r\n    this.filter = [];\r\n    this.sort = [];\r\n    this.key = 0;\r\n  }\r\n\r\n  get selected() {\r\n    const me = this;\r\n    return me.data.filter((v, i) => me.selectable.includes(i));\r\n  }\r\n\r\n  set search(val) {\r\n    const me = this;\r\n    if (me.storage) {\r\n      return me.dataController.search = val;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#config = GSItem.proxify(me, GSTableElement.CELLS);\r\n    if (me.columns.length === 0) me.columns = me.#config.map(v => v.name);\r\n    super.connectedCallback();\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'user-select-none': me.protected,\r\n      'table': true,\r\n      'table-sm': me.small,\r\n      'table-hover': me.hover,\r\n      'table-striped': me.striped,\r\n      'table-bordered': me.bordered,\r\n      'table-borderless': me.borderless,\r\n      'table-striped-columns': me.stripedColumns,\r\n      [`table-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (me.columns.length != me.sort.length) me.sort = Array(me.columns.length).fill(0);\r\n    if (me.datacolumn && me.data.length > 0) {\r\n      me.columns = me.data[0];\r\n      me.data = me.data.slice(1);\r\n    }\r\n    if (changed.has('multiselect') && !me.multiselect) me.selections = [];\r\n    if (changed.has('selectable') && !me.selectable) me.selections = [];\r\n    if (changed.has('sortable') || changed.has('multisort')) {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [];\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const headColor = me.colorHead ? `table-${me.colorHead}` : '';\r\n    return html`\r\n      <table  \r\n       dir=\"${ifDefined(me.direction)}\"\r\n       @keyup=\"${me.#onKeyUp}\"\r\n       @keydown=\"${me.#onKeyDown}\"\r\n       class=\"${classMap(me.renderClass())}\">\r\n        <thead class=\"${ifDefined(headColor)}\">\r\n          <tr @click=${me.#onSort}>\r\n            ${me.columns.map((entry, index) => me.#renderColumn(entry, index))}\r\n          </tr>\r\n        </thead>\r\n        <tbody @click=${me.#onSelect} class=\"${me.divider ? 'table-group-divider' : ''}\">\r\n          ${me.data.map((entry, index) => me.#renderRecord(entry, index))}\r\n        </tbody>\r\n      </table>\r\n      <slot name=\"extra\"></slot>\r\n    `;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n    this.selections = [];\r\n  }\r\n\r\n  #renderColumn(cell, index) {\r\n    const me = this;\r\n    return html`\r\n      <th .index=${index} width=\"${ifDefined(me.#config[index]?.width)}\">\r\n        <div class=\"d-flex justify-content-between\"> \r\n          <span>${cell}</span>\r\n          ${me.#renderIcon(index)}\r\n        </div>\r\n      </th>\r\n    `\r\n  }\r\n\r\n  #renderIcon(index) {\r\n    const me = this;\r\n    if (!me.sortable) return '';\r\n    const icons = GSTableElement.#icons;\r\n    const sortType = me.sort[index];\r\n    const order = me.multisort ? me.#sortOrder.indexOf(index) + 1 : '';\r\n    return html`<gs-icon name=\"${icons[sortType + 1]}\" super=\"${order > 0 ? order : ''}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderRecord(entry, index) {\r\n    const me = this;\r\n    if (!Array.isArray(entry)) entry = me.columns.map(v => entry[v]);\r\n    entry = entry.map((val, i) => me.#config[i] ? GSData.format(me.#config[i], val) : val);\r\n    const color = me.colorSelect && me.selections.includes(index) ? `table-${me.colorSelect}` : '';\r\n    return html`\r\n        <tr .index=${index} class=\"${color}\" tabindex=\"0\">\r\n          ${entry.map((cell, i) => html`<td class=\"text-${me.#config[i]?.align}\"><span>${cell}</span></td>`)}\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  #onSort(e) {\r\n    const me = this;\r\n    if (!me.sortable) return;\r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const column = e.target.closest('th');\r\n    if (!icon || !column) return;\r\n    const idx = column.index !== undefined ? column.index : GSDOM.getElementIndex(column);\r\n    const current = me.sort[idx];\r\n    const sortType = current === 1 ? -1 : current + 1;\r\n\r\n    if (me.multisort) {\r\n      if (sortType == 0) {\r\n        me.#sortOrder = me.#sortOrder.filter(v => v != idx);\r\n      } else if (!me.#sortOrder.includes(idx)) {\r\n        me.#sortOrder.push(idx);\r\n      }\r\n    } else {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [idx];\r\n    }\r\n\r\n    me.sort[idx] = sortType;\r\n\r\n    const sort = me.#prepareSorter(me.sort, me.#sortOrder);\r\n    \r\n    if (me.storage) {\r\n      return me.dataController.sort(sort);\r\n    }\r\n\r\n    me.data = GSData.sortData(me.data, sort);\r\n    me.emit('sort');\r\n  }\r\n\r\n  #prepareSorter(sort, sortOrder) {\r\n    const me = this;\r\n\r\n    if (sort.filter(v => v).length === 0) {\r\n      sort = Array(me.columns.length).fill(0);\r\n      sort[me.key] = 1;\r\n    }\r\n\r\n    // if data record is object (not simple array)\r\n    const isComplex = me.data[0] && !Array.isArray(me.data[0]);\r\n    \r\n    // sort list \r\n    const list = sort.map((v, i) => v ? { name: isComplex ? me.columns[i] : undefined,  col: i, ord: v, idx: sortOrder.indexOf(i) } : null).filter(v => v);\r\n    \r\n    // order sort list by idx\r\n    sort = GSData.sortData(list, [{ name: 'idx', ord: 1 }]);\r\n        \r\n    return sort;\r\n  }\r\n\r\n  #onSelect(e) {\r\n    const me = this;\r\n    if (!me.selectable) return;\r\n    const tr = e.target.tagName === 'TR' ? e.target : e.target.closest('tr');\r\n    if (!tr) return;\r\n    const isSelected = me.selections.includes(tr.index);\r\n    if (me.multiselect) {\r\n      if (isSelected) {\r\n        me.selections = me.selections.filter(v => v != tr.index);\r\n      } else {\r\n        me.selections.push(tr.index);\r\n        me.requestUpdate();\r\n      }\r\n    } else {\r\n      me.selections = isSelected ? [] : [tr.index];\r\n    }\r\n    me.emit('select');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    if (!e.target.matches('tbody tr')) return;\r\n    let el = null;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        el = e.target.previousElementSibling;\r\n        break;\r\n      case 'ArrowDown':\r\n        el = e.target.nextElementSibling;\r\n        break;\r\n    }\r\n\r\n    if (el) {\r\n      el.focus();\r\n      this.emit('focus', el);\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') this.#onSelect(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-table');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport { createRef, ref, classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { stringArrayConverter, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSTagElement}\r\n */\r\nexport default class GSTagElement extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static styles = css`\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n\r\n    static properties = {\r\n        placeholder: {},\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        name: {},\r\n        data: { type: Array },\r\n        values: { type: Array, reflect: true, converter: stringArrayConverter },\r\n        appendable: { type: Boolean },\r\n        color: { ...color },\r\n        closeColor: { ...color, attribute: 'close-color' },\r\n        cssClose: { attribute: 'css-close' },\r\n        cssTag: { attribute: 'css-tag' },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {}\r\n    }\r\n\r\n    #dataListRef = createRef();\r\n    #inputRef = createRef();\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = '';\r\n        this.data = this.#items;\r\n        this.closeColor = 'light';\r\n        this.color = 'primary';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const tags = me.#renderTags();\r\n        return html`\r\n        <div  dir=\"${ifDefined(me.direction)}\" \r\n            class=\"${classMap(me.renderClass())}\"\r\n            @click=\"${me.#onClick.bind(me)}\">\r\n            ${tags}\r\n            <input type=\"text\" \r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            ${ref(me.#inputRef)}\r\n            name=\"${me.name}\" \r\n            list=\"${me.name}_list\"\r\n            class=\"form-control d-flex w-auto flex-grow-1\" \r\n            placeholder=\"${me.#info}\">\r\n            <datalist ${ref(me.#dataListRef)} id=\"${me.name}_list\">${me.#renderList()}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"d-flex\": true,\r\n            \"flex-wrap\": true,\r\n            \"align-items-center\": true,\r\n            \"gap-1 \": true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    get #info() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return me.placeholder ? me.placeholder : alt;\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTagElement.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.data.length >= me.max;\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax || (!optEl && me.appendable == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (!me.values.includes(fld.value)) {\r\n            me.values.push(fld.value);\r\n            fld.value = '';\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const value = tagEl.dataset.value;\r\n        me.values = me.values.filter(v => v != value);\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v));\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        const size = me.size > 0 ? `fs-${me.size}` : '';\r\n        return html`<div class=\"${classMap(me.#tagClass)}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"${classMap(me.#btnClass)}\"></button></div>`;\r\n    }\r\n\r\n    get #tagClass() {\r\n        const me = this;\r\n        const opt = {\r\n            badge: true,\r\n            tag: true,\r\n            [`fs-${me.size}`]: me.size > 0,\r\n            [`bg-${me.color}`]: me.color ? true : false\r\n        }\r\n        return me.mapCSS(me.cssTag, opt);\r\n    }\r\n\r\n    get #btnClass() {\r\n        const me = this;\r\n        const opt = {\r\n            'btn-close': true,\r\n            'ms-1': true,\r\n            [`bg-${me.closeColor}`]: me.closeColor ? true : false\r\n        }\r\n        return me.mapCSS(me.cssClose, opt);\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        return me.data.map(v => html`<option value=\"${v}\">`);\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el));\r\n    }\r\n\r\n    get #items() {\r\n        return this.#proxify(this).map(el => el.name).filter(v => v ? true : false);\r\n    }\r\n\r\n    get #input() {\r\n        return this.#inputRef.value;\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.#dataListRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-tag');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSTextElement extends GSElement {\r\n\r\n  #text = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.#text = this.innerText;\r\n    this.innerText = \"\";\r\n  }\r\n\r\n  renderUI() {\r\n    return this.translate(this.#text);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-text');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSTooltipElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    title: {},\r\n    target: {},\r\n    opened: { type: Boolean },\r\n    local: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowStyle = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.placement = 'top';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowStyle);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      role=\"tooltip\"\r\n      data-popper-placement=\"${me.placement}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      <div ${ref(me.#arrowRef)} \r\n          class=\"tooltip-arrow ${me.#arrowStyle}\" \r\n          data-gs-class=\"${me.#arrowStyle}\">\r\n      </div>\r\n      <div class=\"tooltip-inner\">${me.translate(me.title)}</div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tooltip': true,\r\n      'bs-tooltip-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  #attachEvents() {\r\n    const me = this;\r\n    me.attachEvent(me.#ref, 'mouseenter', me.open.bind(me));\r\n    me.attachEvent(me.#ref, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const arrowEl = me.#arrow;\r\n    const panelEl = me.#panel;\r\n    if (!panelEl) return;\r\n    if (me.opened) {\r\n      GSPopper.popupFixed(me.placement, panelEl, me.#ref, arrowEl);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, { top: '-1000px', left: '-1000px' });\r\n    }\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return me.local ? me.#refLocal : me.#refGlobal;\r\n    }\r\n  }\r\n\r\n  get #refLocal() {\r\n    const root = GSDOM.root(this);\r\n    return GSDOM.query(root, this.target);\r\n  }\r\n  \r\n  get #refGlobal() {\r\n    return GSDOM.query(document.body, this.target);\r\n  }\r\n\r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-tooltip');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty } from '../properties/index.mjs';\r\n\r\nexport class GSTemplateElement extends GSElement {\r\n\r\n  static properties = {\r\n    url: { reflect: true, hasChanged: notEmpty }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${this.renderTemplate()}`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-template');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity();\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = { value: o };\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSCSSMap } from \"../../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport class GSInputExt extends HTMLInputElement {\r\n\r\n    static #wordop = ['KeyC', 'KeyV', 'KeyX', 'KeyA'];\r\n    static #copycut = ['KeyC', 'KeyX'];\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #changed = false;\r\n    #revealing = false;\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        if (me.autofocus) me.focus();\r\n        setTimeout(me.#onDataChange.bind(me), 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#masks = [];\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity();\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    /**\r\n     * Allow password field reveal\r\n     */\r\n    get reveal() {\r\n        return this.hasAttribute('reveal');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvents.attach(me, me, 'keyup', me.#onKeyUp.bind(me));\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyPress.bind(me));\r\n        GSEvents.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvents.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvents.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvents.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvents.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvents.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvents.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el.closest('form'), 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset || {};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.mask && me.value === me.mask) me.value = '';\r\n        if (!me.validate()) return;\r\n        try {\r\n            if (me.mask && me.#changed) {\r\n                //GSEvents.send(me, 'change', {}, true, true);\r\n                GSEvents.send(me, 'change', {});\r\n            }\r\n            if (!me.isInList()) GSEvents.send(me, 'strict', { ok: false, source: e });\r\n        } finally {\r\n            me.#changed = false;\r\n        }\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvents.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #isReveal(e) {\r\n        return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        if (e.key === 'Shift' && me.#revealing) {\r\n            me.type = 'password';\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const me = this;\r\n\r\n        /* interfere with gsformext\r\n        if (e.key === 'Enter') {\r\n            GSEvents.send(me, 'action', { type: 'input', source: e }, true, false, true);\r\n            return;\r\n        }\r\n        */\r\n\r\n        if (me.#isReveal(e)) {\r\n            me.#revealing = true;\r\n            me.type = 'text';\r\n        }\r\n\r\n\r\n        if (!me.mask) return;\r\n\r\n        if (e.code === 'Tab') {\r\n            if (!me.validate()) {\r\n                GSEvents.prevent(e);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (e.ctrlKey) {\r\n            const wordop = GSInputExt.#wordop.includes(e.code);\r\n            const copycut = GSInputExt.#copycut.includes(e.code);\r\n            // if ctrl+[c,a,x,v] operation\r\n            if (wordop) {\r\n                // if ctrl+[c,x] operation and invalid, prevent\r\n                if (copycut && !me.validate()) {\r\n                    return GSEvents.prevent(e);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.code === 'Delete') {\r\n            if (pos2 === tmp.length) return;\r\n            handle = true;\r\n            while (pos <= pos2) {\r\n                tmp[pos] = me.mask[pos];\r\n                pos++;\r\n            }\r\n            pos = pos1;\r\n        }\r\n\r\n        if (e.code === 'Backspace') {\r\n            if (pos1 === 0) return;\r\n            handle = true;\r\n            while (pos2 >= pos1) {\r\n                pos2--;\r\n                if (pos2 >= 0) tmp[pos2] = me.mask[pos2];\r\n            }\r\n            pos = pos1 - 1;\r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        me.#changed = true;\r\n        //return GSEvents.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n        if (e.ctrlKey || e.altKey || e.shiftKey || e.metaKey || e.key.length !== 1) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        const mask = me.#masks[pos1];\r\n\r\n        if (mask instanceof RegExp) {\r\n            mask.lastIndex = 0;\r\n            if (!mask.test(e.key)) {\r\n                GSEvents.prevent(e);\r\n                return false;\r\n            }\r\n            tmp[pos1] = e.key;\r\n        } else {\r\n            tmp[pos1] = me.mask[pos1];\r\n        }\r\n\r\n\r\n        while (pos2 > pos1) {\r\n            tmp[pos2] = me.mask[pos2];\r\n            pos2--;\r\n        }\r\n\r\n        me.value = me.formatMask(tmp.join(''))\r\n        me.setSelectionRange(pos1 + 1, pos1 + 1);\r\n        me.#changed = true;\r\n        //GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type == 'range') me.title = me.value;\r\n        //GSEvents.send(me, 'changed', {}, true, true);\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n        me.value = me.#updateText(me.value);\r\n        //me.validate();\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n\r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const map = GSCSSMap.styleValue(this, 'text-transform');\r\n        if (map) value = GSUtil.textTransform(map.value, value);\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined, repeat } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSBreadcrumbElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n    color: { ...color },\r\n    divider: { reflect: true },\r\n    spacing: { reflect: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.spacing = 1;\r\n    me.divider = 'chevron-right';\r\n    me.#updateChildren();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#updateChildren();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<nav part=\"base\" class=\"breadcrumb\" @click=\"${me.#onClick}\" dir=\"${ifDefined(me.direction)}\"><slot>\r\n      ${repeat(me.data || [], (item) => item, (item) => html`\r\n        <gs-breadcrumb-item  \r\n        href=\"${item.href}\"\r\n        color=\"${item.color}\"\r\n        .data=${item}     \r\n        .active=${item.active}\r\n        .divider=\"${item.divider || me.divider}\"\r\n        .spacing=\"${item.spacing || me.spacing}\">\r\n          ${item.$text}\r\n        </gs-breadcrumb-item>\r\n      `)}\r\n    </slot></nav>`;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #updateChildren() {\r\n    const me = this;\r\n    me.queryAll('gs-breadcrumb-item').forEach(el => {\r\n      el.divider = me.divider;\r\n      el.spacing = me.spacing;\r\n      el.color = me.color;\r\n    });\r\n  }\r\n\r\n  #onClick(e) {\r\n    const el = e.target.closest('gs-bradcrumb-item');\r\n    el?.handle(e);\r\n  } \r\n\r\n  static {\r\n    this.define('gs-breadcrumb');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSBreadcrumbItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    color: { ...color },\r\n    data: { state: true, type: Object },\r\n    active: { reflect: true, type: Boolean },\r\n    divider: { state: true, type: Boolean },\r\n    spacing: { state: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div part=\"base\" class=\"breadcrumb-item ${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <span part=\"prefix\"><slot name=\"prefix\"></slot></span>        \r\n        ${me.#label}\r\n        <span part=\"suffix\"><slot name=\"suffix\"></slot></span>\r\n        <span part=\"separator\"><slot name=\"separator\">${me.#separator}</slot></span>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #label() {\r\n    const me = this;\r\n    if (me.active) return html`<slot></slot>`;\r\n    me.data.url = me.data.url || me.href;\r\n    me.data.part = 'label';\r\n    return GSLinklement.generate(me.data, {})\r\n  }\r\n\r\n  get #separator() {\r\n    const me = this;\r\n    return me.nextElementSibling && me.divider ? html`<gs-icon size=\"7\" color=\"${me.color}\" css=\"mx-${me.spacing}\" name=\"${me.divider}\"></gs-icon>` : '';\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.query('a', true), e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-breadcrumb-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/TimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSTimeFormat extends GSElement {\r\n\r\n    static properties = {\r\n        interval: {reflect:true, type:Number},\r\n        locale: {reflect:true},\r\n    }\r\n\r\n    #id = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.interval = 1;\r\n        this.locale = GSUtil.locale;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const date = new Date();\r\n        return date.toLocaleTimeString(this.locale);\r\n    }    \r\n\r\n    start() {\r\n        const me = this;\r\n        if (me.interval >0 && me.#id === 0) {\r\n            me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n        } else {\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n        this.#id = 0;\r\n    }\r\n    \r\n    #update() {\r\n       requestAnimationFrame(() => this.requestUpdate());\r\n    }\r\n\r\n    static {\r\n        this.define('gs-time-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/DateFormat\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDate } from '../../base/GSDate.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSDateFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        format: {},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.locale = navigator.locale;\r\n        this.value = new Date();\r\n    }\r\n\r\n    renderUI() {\r\n        return this.result;\r\n    }    \r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.date;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get date() {\r\n        const me = this;\r\n        const o = Date.parse(me.value || new Date());\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n\r\n    static {\r\n        this.define('gs-date-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/YearFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSYearFormat extends GSElement {\r\n\r\n    static properties = {\r\n        offset: {type :Number},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n    }\r\n\r\n    renderUI() {\r\n        return this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        this.define('gs-year-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/CurrencyFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSCurrencyFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        currency: {},\r\n    }\r\n\r\n    renderUI() {\r\n        return this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-currency-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSCacheStyles } from \"../../base/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepElement class\r\n * @module components/steps/GSStepElement\r\n */\r\n\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepElement extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-primary';\r\n    static COMPLETED = 'text-bg-secondary';\r\n\r\n    static ICON_CSS = 'border rounded-circle fs-1';\r\n    static TITLE_CSS = 'mb-0 fs-6 mt-3 fw-bold';\r\n\r\n    static properties = {\r\n        title: {},\r\n        icon: {},\r\n        color: {},\r\n        iconCSS: { attribute: 'icon-css' },\r\n        titleCSS: { attribute: 'title-css' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const clazz = GSStepElement;\r\n        this.icon = clazz.INACTIVE;\r\n        this.iconCSS = clazz.ICON_CSS;\r\n        this.titleCSS = clazz.TITLE_CSS;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"step d-block w-100 text-center mb-4\"  dir=\"${ifDefined(me.direction)}\">\r\n            <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color || GSStepElement.INACTIVE}\">\r\n                    ${me.#renderIcon()}\r\n                </div>\r\n            </div>\r\n            <div class=\"step-title ${me.titleCSS}\">${me.translate(me.title)}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    #renderIcon() {\r\n        return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-step');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepsElement class\r\n * @module components/steps/GSStepsElement\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSStepStyle } from \"./StepStyle.mjs\";\r\nimport GSStepElement from './Step.mjs';\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepsElement extends GSElement {\r\n\r\n    static CSS = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n\r\n    #index = -1;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldUpdate(changedProperties) { \r\n        return this.steps.length > 0;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\"><slot></slot></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        return this.mapCSS(GSStepsElement.CSS, super.renderClass());\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get length() {\r\n        return this.steps.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length - 1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isLast) return false;\r\n        if (me.#index > - 1) me.current.color = GSStepElement.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStepElement.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStepElement.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStepElement.SELECTED;\r\n        });\r\n    }\r\n\r\n    static {\r\n        GSStepStyle.style;\r\n        this.define('gs-steps', GSStepsElement);\r\n    }\r\n\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\nexport class GSNotificationElement extends GSElement {\r\n\r\n    static TOP_START = \"position-fixed top-0 start-0\";\r\n    static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n    static TOP_END = \"position-fixed top-0 end-0\";\r\n\r\n    static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n    static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n    static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n    \r\n    static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n    static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n    static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n    static DEFAULT = GSNotificationElement.BOTTOM_END;\r\n\r\n    static properties = {\r\n        position: { reflect: true },\r\n        native: { reflect: true, type: Boolean }\r\n    };\r\n\r\n    #list = new Set();\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = 'p-3';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n            class=\"toast-container z-10k ${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        return me.mapCSS(me.#positionCSS, super.renderClass());\r\n    }    \r\n\r\n    get #positionCSS() {\r\n        const clazz = GSNotificationElement;\r\n        const val = this.position || clazz.DEFAULT;\r\n        return val.indexOf('_') > 0 && clazz[val] ? clazz[val] : val;\r\n    }\r\n\r\n    clear() {\r\n        this.queryAll('gs-toast').forEach(el => el.dismiss());\r\n    }\r\n\r\n    info(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n    }\r\n\r\n    success(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n    }\r\n\r\n    warn(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n    }\r\n\r\n    danger(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n    }\r\n\r\n    primary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n    }\r\n\r\n    secondary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n    }\r\n\r\n    dark(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n    }\r\n\r\n    light(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n    }\r\n\r\n    /**\r\n     * Main function to show notification. \r\n     * It has support for Bootstrap based and web based notifications.\r\n     * \r\n     * @async\r\n     * @param {String} title Notification title\r\n     * @param {String} message Notification message\r\n     * @param {String} css CSS styling (web only)\r\n     * @param {Boolean} closable Can user close it (web only)\r\n     * @param {Number} timeout Timeout after which to close notification  (default 2 sec)\r\n     * @param {Number} delay Timeout after which to show notification (default 1 sec)\r\n     * @param {Object} options Options for native Notification\r\n     * @returns {Promise<Notification|GSToast>}\r\n     */\r\n    async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n        if (!message) return;\r\n        const me = this;\r\n        if (me.native) {\r\n            let sts = await GSNotificationElement.requestPermission();\r\n            if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n            if (sts) return sts;\r\n        }\r\n        return me.#showWeb(title, message, css, closable, timeout, delay);\r\n    }\r\n\r\n    #showWeb(title, message, css, closable, timeout, delay) {\r\n        const me = this;\r\n        const tpl = `<gs-toast css=\"${css}\"  opened ${closable ? 'closable' : ''} timeout=\"${timeout}\"  delay=\"${delay}\" message=\"${message}\" title=\"${title}\" locale=\"${me.locale}\" ></gs-toast>`;\r\n        const el = GSDOM.parse(tpl, true);\r\n        requestAnimationFrame(async () => {\r\n            await me.#delay(delay);\r\n            const toast = me.#dialogToast;\r\n            if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n            toast.appendChild(el);\r\n        });\r\n        return el;\r\n    }\r\n\r\n    async #showNative(title, message, timeout, delay, options = {}) {\r\n        const me = this;\r\n        await me.#delay(delay);\r\n        options.body = options.body || message;\r\n        const notification = new Notification(title, options);\r\n        me.#list.add(notification);\r\n        const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n        notification.addEventListener('close', callback);\r\n        if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n        return notification;\r\n    }\r\n\r\n    get #dialogToast() {\r\n        const dlg = customElements.get('gs-dialog')?.top;\r\n        return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n    }\r\n\r\n    async #delay(delay = 0) {\r\n        if (GSUtil.isNumber(delay) && delay > 0) await GSUtil.timeout(delay * 1000);\r\n    }\r\n\r\n    #clearNative() {\r\n        const me = this;\r\n        me.notification.close();\r\n        me.owner.#list.delete(me.notification);\r\n        if (me.notification.iid) clearTimeout(me.notification.iid);\r\n    }\r\n\r\n    /**\r\n     * Clear all triggered notifications\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n        me.#list.forEach(nn => nn.close());\r\n        me.#list.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is supported\r\n     * @returns {Boolean} \r\n     */\r\n    static get isNativeSupported() {\r\n        return \"Notification\" in self;\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is allowed\r\n     * @returns {Boolean} \r\n     */\r\n    static get isGranted() {\r\n        return Notification.permission === \"granted\";\r\n    }\r\n\r\n    /**\r\n     * Request useage for browser native notification\r\n     * \r\n     * @async\r\n     * @returns {Promise<boolean>} Return granted status\r\n     */\r\n    static async requestPermission() {\r\n        const clazz = GSNotificationElement;\r\n        if (!clazz.isNativeSupported) return false;\r\n        if (!clazz.isGranted) await Notification.requestPermission();\r\n        return clazz.isGranted;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-notification');\r\n    }\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNotificationElement } from './Notification.mjs';\r\n\r\nexport class GSToastElement extends GSElement {\r\n\r\n    static properties = {\r\n        closable: { reflect: true, type: Boolean },\r\n        opened: { reflect: true, type: Boolean },\r\n        message: { reflect: true },\r\n        title: { reflect: true },\r\n        delay: { reflect: true, type: Number },\r\n        timeout: { reflect: true, type: Number }\r\n    }\r\n\r\n    #pending = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.timeout = 2;\r\n        me.delay = 2;\r\n        me.auto = true; \r\n    }\r\n\r\n    shouldUpdate(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = changedProperties.has('opened');\r\n        if (me.delay > 0 && me.opened && visibilityChange) {\r\n            me.#pending = true;\r\n            me.#pendingUpdate();\r\n        }\r\n        return me.#validParent && (!me.#pending);\r\n    }\r\n\r\n    async #pendingUpdate() {\r\n        const me = this;\r\n        await GSUtil.timeout(me.delay * 1000);\r\n        me.#pending = false;\r\n        me.requestUpdate();\r\n    }\r\n\r\n    async updated(changedProperties) {\r\n        const me = this;\r\n        if (me.timeout > 0) {\r\n            await GSUtil.timeout(me.timeout * 1000);\r\n            me.opened = false;\r\n            await GSUtil.timeout(GSDOM.SPEED);\r\n            me.remove();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return me.title ? me.#renderWithHeader() : me.#renderSimple();\r\n    }\r\n\r\n    #renderWithHeader() {\r\n        const me = this;\r\n        return html`\r\n        <div dir=\"${ifDefined(me.direction)}\"\r\n            class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n            <div class=\"toast-header\">\r\n                ${me.translate(me.title)}\r\n                <slot name=\"header\"></slot>\r\n                ${me.closable ? me.#button : ''}\r\n            </div>\r\n            <div class=\"toast-body\">\r\n                ${me.translate(me.message)}\r\n                <slot name=\"body\"></slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    #renderSimple() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.translate(me.message)}\r\n              <slot name=\"body\"></slot>\r\n              </div>\r\n              ${me.closable ? me.#button : ''}\r\n          </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': me.opened,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    dismiss() {\r\n        this.opened = false;\r\n    }\r\n\r\n    get #button() {\r\n        const me = this;\r\n        return html`<button type=\"button\" class=\"btn-close me-2 m-auto\" @click=\"${me.dismiss}\"></button>`;\r\n    }\r\n\r\n    get #validParent() {\r\n        return this.parentElement instanceof GSNotificationElement;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-toast');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller managing data tree navigation.\r\n * Controller is added to every gs-tree-node and \r\n * reacts on Tree node changes to update UI\r\n */\r\nexport class AbstractTreeController {\r\n\r\n    #host;\r\n    #node;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        host.addController(me);\r\n    }\r\n    \r\n    hostConnected() {\r\n        const me = this;\r\n        me.#node = me.#host.node;\r\n        me.#addNodeController(me);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        const me = this;\r\n        me.#removeNodeController(me);\r\n        me.#host.removeController(me);\r\n    }\r\n\r\n    // before rendering\r\n    hostUpdate() {\r\n        const me = this;\r\n        const oldNode = me.#node;\r\n        me.#node = me.#host.node;\r\n        if (oldNode != me.#node) {\r\n            me.#removeNodeController(me);\r\n            me.#addNodeController(me);\r\n        }\r\n    }\r\n\r\n    // link Tree node callbacks with controller and component\r\n    #addNodeController(controller) {\r\n        this.#host.node?.addController?.(controller);\r\n    }\r\n\r\n    // unlink Tree node callbacks with controller and component\r\n    #removeNodeController(controller) {\r\n        this.#node?.removeController?.(controller);\r\n    }\r\n\r\n    host(node) {\r\n        return node[Symbol.for('gs-element')] || this.#host;\r\n    }\r\n\r\n    match(node) {\r\n        const host = this.host(node);\r\n        return host?.node === node;\r\n    }\r\n\r\n    get store() {\r\n        return this.#host.dataController?.store;\r\n    }\r\n\r\n    requestUpdate(node) {\r\n        if (this.match(node)) this.host(node).requestUpdate();\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { AbstractTreeController } from './AbstractTreeController.mjs';\r\n\r\n/**\r\n * Controller managing data TreeNode callbacks to reflect UI.\r\n */\r\nexport class TreeController extends AbstractTreeController {\r\n\r\n    constructor(host) {\r\n        super(host);\r\n    }\r\n\r\n    #toggleState(node, state = false) {\r\n        const el = this.host(node);\r\n        if (el) el.loading = state;\r\n    }\r\n\r\n    // Tree controller callbacks\r\n    onLoad(node) {\r\n        this.#toggleState(node, true);\r\n    }\r\n\r\n    onRefresh(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onAppend(node, addedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onInsert(node, insertedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onExpand(node) {\r\n        const store = this.store;\r\n        if (store) {\r\n            store.onExpand(node);\r\n        } else {\r\n            this.requestUpdate(node);\r\n        }\r\n    }\r\n\r\n    onCollapse(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onFocusChanged(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onSelectionChanged(node, selectedNode) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onRemove(node) {\r\n        if (this.match(node)) this.host(node).remove();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { Tree } from \"../helpers/Tree.mjs\";\r\n\r\n/**\r\n * A module loading TreeNode class\r\n * @module data/TreeNode\r\n */\r\n\r\n/**\r\n * UI mediator between Tree linked nodes and WebComponents\r\n * @Class\r\n */\r\nexport class TreeNode extends Tree {\r\n\r\n    #multi = false;\r\n    #opened = false;\r\n    #focused = false;\r\n    #selected = false;\r\n    \r\n    #focusedNode = undefined;\r\n    #selectedNode = undefined;\r\n    #controllers = undefined;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        super(key, value, parent, level);\r\n\r\n        if (value?.select === true || (this.multi && parent?.selected)) this.selected = true;\r\n        if (value?.focus === true) this.focused = true;\r\n        if (value?.open === true) this.opened = true;\r\n    }\r\n\r\n    addController(controller) {\r\n        const root = this.root;\r\n        (root.#controllers ??= new Set()).add(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.root.#controllers?.delete(controller);\r\n    }\r\n\r\n    /**\r\n     * Is multi selection available\r\n     */\r\n    get multi() {\r\n        return this.root.#multi === true;\r\n    }\r\n\r\n    set multi(val) {\r\n        this.root.#multi = val === true;\r\n    }\r\n\r\n    get visible() {\r\n        if (this.level < 0) return true;\r\n        return this.parent?.opened;\r\n    }\r\n\r\n    /**\r\n     * select single node, removing seelction flag from all other nodes\r\n     */\r\n    get opened() {\r\n        if (this.level < 0) return true;\r\n        return this.isLeaf ? this.parent?.opened : this.#opened;\r\n    }\r\n\r\n    set opened(val) {\r\n        val = val === true;\r\n        if (val) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus single node, removing focus flag from all other nodes\r\n     */\r\n    get focused() {\r\n        return this.#focused;\r\n    }\r\n\r\n    set focused(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const changed = this.#focused != val;\r\n        const focusedNode = root.focusedNode();\r\n        \r\n        root.#focusedNode = undefined;        \r\n        this.#focused = val;\r\n        if (focusedNode && focusedNode !== this) {\r\n            focusedNode.focused = false;\r\n        }\r\n\r\n        if (val) root.#focusedNode = this;\r\n        if (changed) root.#controllers?.forEach((c) => c.onFocusChanged?.(this));\r\n    }\r\n\r\n    /**\r\n     * Select single or multi node, depending on multi selection flag\r\n     * If single, remove selection flag from all other nodes\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    set selected(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const selectedNode = root.selectedNode();\r\n        const changed = this.#selected != val;\r\n        this.#selected = val;\r\n        if (val) {\r\n            if (selectedNode && selectedNode !== this && !root.multi) {\r\n                selectedNode.selected = false;\r\n            }\r\n            root.#selectedNode = this;\r\n        }\r\n        if (changed) {\r\n            root.#controllers?.forEach((c) => c.onSelectionChanged?.(this, selectedNode));\r\n            if (root.multi) root.#controllers?.forEach((c) => c.onSelectionChanged?.(this.parent, selectedNode));\r\n        } \r\n    }\r\n\r\n    get isPartialySelected() {\r\n        return this.selected && this.hasChildren && this.nodes.length > this.nodes.filter(n => n.selected).length;\r\n    }\r\n\r\n    /* hide from public\r\n    get host() {\r\n        return this[Symbol.for('gs-element')];\r\n    }\r\n\r\n    set host(el) {\r\n        this[Symbol.for('gs-element')] = el;\r\n    }\r\n    */\r\n\r\n    selectAll() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            this.deselectAll();\r\n            this.selected = true;\r\n            return\r\n        }\r\n        this.#selectionFlag(true);\r\n        root.#selectedNode = this;\r\n        root.#controllers?.forEach((c) => c.onSelectAll?.(root));\r\n    }\r\n\r\n    deselectAll() {\r\n        const root = this.root;\r\n        this.#selectionFlag(false);\r\n        root.#selectedNode = undefined;\r\n        root.#controllers?.forEach((c) => c.onDeselectAll?.(root));\r\n    }\r\n\r\n    /**\r\n     * Return last focused node\r\n     * @returns \r\n     */\r\n    focusedNode() {\r\n        const node = this.root.#focusedNode;\r\n        return node?.focused ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * Return last selected node\r\n     * @returns \r\n     */\r\n    selectedNode() {\r\n        const node = this.root.#selectedNode;\r\n        return node?.selected ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * List all selected nodes.\r\n     * TODO; refactor when Iterator.filter become available \r\n     * @returns \r\n     */\r\n    selectedNodes() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            const node = root.selectedNode()\r\n            return node?.selected ? [node] : [];\r\n        }\r\n        const result = [];\r\n        for (let node of root.walk()) {\r\n            if (node.selected) result.push(node);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Call from external controller data must be refresshed (to notify UI optionally)\r\n     * @param {*} root \r\n     */\r\n    refresh(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onRefresh?.(this));\r\n    }\r\n\r\n    /**\r\n     * Notify controllers about data loading (from async controller)\r\n     * @param {*} root \r\n     */\r\n    loading(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onLoad?.(this));\r\n    }\r\n\r\n    expandAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.expand(root);\r\n        }\r\n    }\r\n\r\n    collapseAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.collapse(root);\r\n        }\r\n    }\r\n\r\n    expand(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        if (!me.parent?.opened) {\r\n            me.parent?.expand(root);\r\n        }\r\n        const update = !me.opened;\r\n        me.#opened = true;\r\n        if (update) me.#expanded(root);\r\n        //me.nodes?.filter( n => !n.opened).forEach(c => c.refresh(root));\r\n        me.nodes?.forEach(c => c.refresh(root));\r\n    }\r\n\r\n    collapse(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        const update = me.#opened || me.parent.#opened;\r\n        me.nodes?.filter(n => n.opened || n.parent.opened).forEach(o => o.collapse(root));\r\n        //me.nodes?.forEach(o => o.collapse(root));\r\n        me.#opened = false;\r\n        if (update) me.#collapsed(root);\r\n    }\r\n\r\n    select(val = true) {\r\n        this.selected = val === true;\r\n    }\r\n\r\n    #expanded(root) {\r\n        root.#controllers?.forEach((c) => c.onExpand?.(this));\r\n    }\r\n\r\n    #collapsed(root) {\r\n        root.#controllers?.forEach((c) => c.onCollapse?.(this));\r\n    }\r\n\r\n    release() {\r\n        if (this.#selected) this.selected = false;\r\n        super.release();\r\n    }\r\n\r\n    append(key, value = key) {\r\n        const me = this;\r\n        const node = super.append(key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onAppend?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    insert(parentNodeKey, key, value = key) {\r\n        const me = this;\r\n        const node = super.insert(parentNodeKey, key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onInsert?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    remove() {\r\n        const node = super.remove();\r\n        if (node) this.root.#controllers?.forEach((c) => c.onInsert?.(node));\r\n        return node;\r\n    }\r\n\r\n    #selectionFlag(val = false) {\r\n        val = val === true\r\n        for (let node of this.walk()) {\r\n            node.selected = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) TreeNode.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.nodes?.map(o => o.toJSON()) || {};\r\n        const obj = Object.assign({\r\n            key: this.key,\r\n            opened: this.#opened,\r\n            focused: this.#focused,\r\n            selected: this.#selected,\r\n            items: undefined\r\n        }, this.value);\r\n        obj.items = this.nodes?.map(o => o.toJSON());\r\n        return obj;\r\n    }\r\n\r\n    static get root() {\r\n        return new TreeNode(null, null, null, -1);\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof TreeNode;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) return TreeNode.from(TreeNode.root, raw);\r\n            raw.forEach(o => TreeNode.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        obj.leaf = !Array.isArray(items);\r\n        const tree = new TreeNode(obj.key, obj, data ? parent : undefined);\r\n        if (items) TreeNode.from(tree, items);\r\n        if (hasParent) parent.append(tree);\r\n        return tree;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../../lib.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSTreeItemElement extends GSElement {\r\n\r\n  /*\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n    */\r\n\r\n  static properties = {\r\n    loading: { state: true },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('node')) this.node[Symbol.for('gs-element')] = this;\r\n  }\r\n\r\n  updated() {\r\n    if (this.focused) this.query('a')?.focus();\r\n    this.dataset.visible = this.visible;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const opt = me.value || {};\r\n    opt.tooltip = me.translate(opt.tooltip)\r\n    opt.title = me.translate(opt.title)\r\n    const before = me.loading ? me.#renderSpinner(node.level) : me.#renderIcon(node.level);\r\n    return GSLinklement.generate(opt, me.renderClass(), before);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const opt = {\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      'user-select-none  ': true,\r\n      'border-0': me.#border ? false : true,\r\n      'gs-hide': !me.visible\r\n    };\r\n    return me.mapCSS(me.#cssFocus, me.mapCSS(me.#cssSelected, opt, me.selected && !me.multiselect), me.focused);\r\n  }\r\n\r\n  /**\r\n   * Toggle folder\r\n   */\r\n  toggle() {\r\n    this.opened ? this.close() : this.open();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open() {\r\n    this.#status(true);\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   */\r\n  close() {\r\n    this.#status(false);\r\n  }\r\n\r\n  focus(val = true) {\r\n    if (val) super.focus();\r\n    this.focused = val == true;\r\n  }\r\n\r\n  select(val = true) {\r\n    this.selected = val == true;\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.querySelector('a'), e);\r\n  }\r\n\r\n  get isLeaf() {\r\n    return this.node?.isLeaf;\r\n  }\r\n\r\n  get isFolder() {\r\n    return !this.isLeaf;\r\n  }\r\n\r\n  get key() {\r\n    return this.node?.key;\r\n  }\r\n\r\n  get value() {\r\n    return this.node?.value || {};\r\n  }\r\n\r\n  get level() {\r\n    return this.node?.level || -1;\r\n  }\r\n\r\n  get focused() {\r\n    return this.node?.focused;\r\n  }\r\n\r\n  get visible() {\r\n    const parent = this.parent;\r\n    return parent?.opened || parent?.level === -1;\r\n  }\r\n\r\n  get parent() {\r\n    return this.node?.parent;\r\n  }\r\n\r\n  get parentItem() {\r\n    const item = this.parent?.[Symbol.for('gs-element')];\r\n    return item instanceof GSTreeItemElement ? item : undefined;\r\n  }\r\n\r\n  set focused(val) {\r\n    val = val === true;\r\n    this.node.focused = val;\r\n  }\r\n\r\n  get selected() {\r\n    return this.node?.selected;\r\n  }\r\n\r\n  set selected(val) {\r\n    val = val === true;\r\n    const me = this;\r\n    if (me.isFolder && me.owner.leaf) val = false;\r\n\r\n    if (me.multiselect) {\r\n      if (val) {\r\n        me.node.selectAll();\r\n      } else {\r\n        me.node.deselectAll();\r\n      }\r\n    } else {\r\n      me.node.selected = val;\r\n    }\r\n  }\r\n\r\n  get opened() {\r\n    return this.node?.opened;\r\n  }\r\n\r\n  set opened(val) {\r\n    this.#status(val === true);\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tree');\r\n  }\r\n\r\n  get multiselect() {\r\n    return this.owner.multiselect;\r\n  }\r\n\r\n  get #cssFocus() { return this.owner.cssFocus || 'focus-ring'; }\r\n  get #cssSelected() { return this.owner.cssSelected || 'active'; }\r\n  get #cssCheck() { return this.owner.cssCheck || ''; }\r\n  get #checkColor() { return this.owner.checkColor || 'secondary'; }\r\n  get #checkColorSelected() { return this.owner.checkColorSelected || 'primary'; }\r\n\r\n  get #border() {\r\n    return this.value?.border === true || this.owner.border === true;\r\n  }\r\n\r\n  get #icon() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const data = me.value;\r\n    const ui = me.owner;\r\n    let itemIco = data.icon || ui.itemIcon;\r\n    if (node.isFolder) itemIco = node.opened ? (data.openIcon || ui.openIcon) : (data.closeIcon || ui.closeIcon);\r\n    return itemIco;\r\n  }\r\n\r\n  #renderIndent(level) {\r\n    return html`<gs-indent size=\"${level}\"></gs-indent>`;\r\n  }\r\n\r\n  #renderSpinner(level) {\r\n    return html`${this.#renderIndent(level)}<gs-spinner small></gs-spinner>`;\r\n  }\r\n\r\n  #renderIcon(level) {\r\n    return html`${this.#renderIndent(level)}${this.#renderMulti()}<gs-icon size=\"5\" name=\"${this.#icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderMulti() {\r\n    const me = this;\r\n    if (!me.multiselect) return '';\r\n    const color = me.selected ? me.#checkColorSelected : me.#checkColor;\r\n    const icon = me.node.isPartialySelected ? 'dash-square-fill' : me.selected ? 'check-square-fill' : 'square';\r\n    return html`<gs-icon size=\"6\" data-type=\"state\" \r\n                css=\"me-1 text-${color} ${me.#cssCheck}\"\r\n                name=\"${icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #status(val = false) {\r\n    const me = this;\r\n    if (me.node?.isFolder) {\r\n      me.node.opened = val;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, css, createRef, ref, repeat, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { TreeController } from './controllers/TreeController.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSTreeElement extends GSElement {\r\n\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n\r\n  static shared = {\r\n    itemIcon: { attribute: 'icon-item' },\r\n    closeIcon: { attribute: 'icon-close' },\r\n    openIcon: { attribute: 'icon-open' },\r\n    cssCheck: { attribute: 'css-check' },\r\n    cssFocus: { attribute: 'css-focus' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    checkColor: { attribute: 'check-color', ...color },\r\n    checkColorSelected: { attribute: 'check-color-selected', ...color },\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode },\r\n    border: { type: Boolean, reflect: true },\r\n    guide: { type: Boolean, reflect: true },\r\n    leaf: { type: Boolean, reflect: true },\r\n    multiselect: { type: Boolean, reflect: true },\r\n    circular: { type: Boolean, reflect: true },\r\n    ...GSTreeElement.shared\r\n  }\r\n\r\n  // GS-ITEM attributes mapping\r\n  static options = {\r\n    ...GSTreeElement.shared,\r\n    css: {},\r\n    icon: {},\r\n    color: {},\r\n    title: {},\r\n    tooltip: {},\r\n    opened: { type: Boolean },\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  #queued = false;\r\n  #listRef = createRef();\r\n\r\n  #controller = null;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.leaf = false;\r\n    me.multiselect = false;\r\n    me.data = GSDOM.toJson(me, true, true).items;\r\n    me.node = new TreeNode(null, { '#tagName': this.tagName }, null, -1);\r\n    me.itemIcon = 'file-earmark';\r\n    me.closeIcon = 'folder'; // caret-right; chevron-right\r\n    me.openIcon = 'folder2-open'; // caret-down; chevron-down\r\n    me.cssSelected = 'active'; // fw-bold\r\n    me.cssFocus = 'focus-ring';\r\n    me.node[Symbol.for('gs-element')] = me;\r\n    me.#controller = new TreeController(me);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n          class=\"treeview ${classMap(me.renderClass())}\"          \r\n          @click=\"${me.#onClick}\"\r\n          @keydown=\"${me.#onKeyDown}\"\r\n          @keyup=\"${me.#onKeyUp}\">\r\n          <div class=\"list-group\" ${ref(me.#listRef)}>\r\n          ${repeat(me.node.walk(me.node, false, false), (node) => node.key, (node) => html`\r\n            <gs-tree-item .node=\"${node}\"></gs-tree-item>\r\n          `)}\r\n          </div>    \r\n        </div>`;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data') && me.data && !me.#queued) {\r\n      me.#queued = true;\r\n      queueMicrotask(() => {\r\n        me.node.clear();\r\n        me.node.fromJSON(me.data);\r\n        me.#queued = false;\r\n        me.requestUpdate();\r\n      });\r\n    }\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('multiselect') && !this.multiselect) this.node?.deselectAll();\r\n    this.node.multi = this.multiselect;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    if (data instanceof TreeNode) {\r\n      if (data.root !== this.node) this.node = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n\r\n  next(expand = false) {\r\n    const me = this;\r\n    let item = me.nextItem;\r\n    if (!item & me.circular) item = me.#first;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (expand && me.focused?.isFolder) me.focused.open();\r\n    }\r\n    return me.focused;\r\n  }\r\n\r\n  previous(collapse = false) {\r\n    const me = this;\r\n    let item = me.previousItem;\r\n    if (!item & me.circular) item = me.#last;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (item.isFolder && collapse) item.close();\r\n    }\r\n    return me.focused;\r\n\r\n  }\r\n\r\n  expandAll() {\r\n    this.node?.expandAll();\r\n  }\r\n\r\n  collapseAll() {\r\n    this.node?.collapseAll();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open(path) {\r\n    const me = this;\r\n    me.focused?.open();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   * TODO - path navigation\r\n   */\r\n  close(path) {\r\n    const me = this;\r\n    me.focused?.close();\r\n  }\r\n\r\n  clear() {\r\n    this.node?.clear();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  reload() {\r\n    this.clear();\r\n    this.dataController?.read();\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host(this.node.selectedNode());\r\n  }\r\n\r\n  get focused() {\r\n    return this.#host(this.node.focusedNode());\r\n  }\r\n\r\n  /**\r\n   * Previous visible ge-node-item\r\n   */\r\n  get previousItem() {\r\n    return this.focused?.node.find(n => n?.visible, true, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  /**\r\n   * Next visible ge-node-item\r\n   */\r\n  get nextItem() {\r\n    return this.focused?.node.find(n => n?.visible, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  get #list() {\r\n    return this.#listRef.value;\r\n  }\r\n\r\n  get #first() {\r\n    return this.#list.firstElementChild;\r\n  }\r\n\r\n  get #last() {\r\n    return this.#list.lastElementChild;\r\n  }\r\n\r\n  #host(node) {\r\n    return node?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const isIcon = e.target.closest('gs-icon')?.dataset.type === 'state';\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!el.node) return;\r\n\r\n    const me = this;\r\n\r\n    if (me.multiselect) {\r\n      if (isIcon) el.select(!el.selected);\r\n    } else {\r\n      el.select(true);\r\n    }\r\n\r\n    const expandable = (me.multiselect && !isIcon) || (!me.multiselect);\r\n    if (el.isFolder && expandable) el.toggle();\r\n\r\n    el.focus();\r\n    el.handle(e);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    const me = this;\r\n    const el = me.focused;\r\n    if (!el) return;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n        me.next();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (el.isFolder) {\r\n          if (el.opened) {\r\n            me.close();\r\n          } else {\r\n            (el.parentItem || el)?.focus();\r\n          }\r\n        } else {\r\n          me.previous();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if (el.isFolder && !el.opened) {\r\n          me.open();\r\n        } else {\r\n          me.next();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!(el?.node)) return;\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        el.handle(e);\r\n        break;\r\n      case 'Tab':\r\n        el.focus();\r\n        break;\r\n      case 'Space':\r\n        el.select(this.multiselect ? !el.selected : true);\r\n        el.focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\n\r\nexport class GSChartElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/bootstrap-lit';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        config: {},\r\n        storage: {},\r\n        height: { type: Number },\r\n        width: { type: Number },\r\n        data: { type: Array },\r\n        options: { type: Object },\r\n    }\r\n\r\n    #canvasRef = createRef();\r\n    #chart = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.height = 0;\r\n        this.width = 0;\r\n        GSChartElement.#init();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#waitInit();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    shouldUpdate(changed) {\r\n        return GSChartElement.#isChart;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#render();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        const me = this;\r\n        if (changed.has('url') || changed.has('config')) me.#render();\r\n        if (changed.has('data') || changed.has('options')) me.#renderData(me.data, me.options);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<canvas ${ref(me.#canvasRef)} \r\n                class=\"${classMap(me.renderClass())}\"\r\n                width=\"${ifDefined(me.width > 0 ? me.width : false)}\" \r\n                height=\"${ifDefined(me.height > 0 ? me.height : false)}\" >\r\n            </canvas>`;\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.#canvasRef.value;\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    refresh() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    updateChart(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const options = await GSLoader.loadSafe(me.config, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.url, 'GET', null, true, []);\r\n        me.data = data;\r\n        me.options = options;\r\n    }\r\n\r\n    #renderData(data, options) {\r\n        const me = this;\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChartElement.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => o.data = sets.length === 1 ? data : data[i] || []);\r\n\r\n        if (me.#chart) return me.updateChart(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChartElement.#Chart(ctx, opt);\r\n    }\r\n\r\n    async #waitInit() {\r\n        if (!GSChartElement.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        this.requestUpdate();\r\n    }\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    static async #init() {\r\n        const me = GSChartElement;\r\n        if (me.URL_LIB === false) return;\r\n        if (me.#isChart || me.#initializing) return;\r\n        me.#initializing = true;\r\n        try {\r\n            const origin = GSChartElement.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);\r\n            me.#Chart = Chart;\r\n            me.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            me.#initializing = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert DOM tree into a JSON structure\r\n     * \r\n     * @param {HTMLElement} obj HTML element instance to convert\r\n     * @param {string} name DOM attribute name for object key\r\n     * @param {string} value DOM attribute name for object value\r\n     * @param {string} type DOM attribute name for object type\r\n     * @returns {object}\r\n     */\r\n    static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n        if (!(el instanceof HTMLElement)) return {};\r\n\r\n        const nameV = el.getAttribute(name);\r\n        const valV = el.getAttribute(value);\r\n        const typeV = el.getAttribute(type);\r\n\r\n        let obj = null;\r\n\r\n        switch (typeV) {\r\n            case 'array':\r\n                obj = [];\r\n                break;\r\n            case 'object':\r\n                obj = {};\r\n                break;\r\n            default:\r\n                return GSChartElement.#toType(valV, typeV);\r\n        }\r\n\r\n        const childs = Array.from(el.children);\r\n        const isArray = typeV === 'array';\r\n        const isObject = typeV === 'object';\r\n\r\n        childs.forEach(el => {\r\n            const _nam = el.getAttribute(name);\r\n            if (isArray) {\r\n                obj.push(GSChart.toJson(el, name, value, type));\r\n            } else if (isObject) {\r\n                const tmp = GSChartElement.toJson(el, name, value, type);\r\n                obj[_nam] = tmp;\r\n            } else {\r\n                const _val = el.getAttribute(value);\r\n                const _typ = el.getAttribute(type);\r\n                obj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    static #toType(val, type) {\r\n        switch (type) {\r\n            case 'boolean': return val === 'true';\r\n            case 'number': return parseFloat(val);\r\n            default: return val\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-chart');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#data = data;\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append: append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref, styleMap } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSMarkdownElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        history: { type: Number },\r\n        maxHeight: { type: Number, attribute: 'max-height' },\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    constructor() {\r\n        super();\r\n        this.history = 10;\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const me = this;\r\n        await me.#initLib();\r\n        if (globalThis.showdown) {\r\n            const opt = { tasklists: true, tables: true };\r\n            me.#converter = new globalThis.showdown.Converter(opt);\r\n            super.connectedCallback();\r\n        }\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('url')) {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url);\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const height = me.maxHeight > 0 ? `${me.maxHeight}px;` : false;\r\n        const opt = { 'max-height': height }\r\n        return html`<div ${ref(me.#containerRef)} class=\"overflow-auto ${classMap(me.renderClass())}\" style=\"${styleMap(opt)}\"><div/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        me.#onURL(url);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n\r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n\r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });\r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n            GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n\r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list = GSDOM.queryAll(me.#container, qry);\r\n        requestAnimationFrame(() => list.forEach(el => GSDOM.toggleClass(el, css)) );\r\n    }\r\n\r\n    #handleLinks() {\r\n        const me = this;\r\n        const links = GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n            .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')))\r\n            .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n            .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/'))\r\n            .forEach(el => GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me)));\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        if (me.#cache.length === 0 ) return me.#first;\r\n        const url = me.#cache.pop();\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if (me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdownElement.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-markdown');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSMonacoElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #editor = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = '';\r\n        this.theme = 'vs-dark';\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonacoElement.#init();\r\n        super.connectedCallback();\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.#onMonacoReady();\r\n        super.firstUpdated();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        if (changed.has('theme')) me.#onTheme(me.theme);\r\n        if (changed.has('target')) me.#onTarget(me.target);\r\n        if (changed.has('url')) me.#onURL(me.url);\r\n        if (changed.has('language')) me.#onLanguage(me.language);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#containerRef)} class=\"${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        return this.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    get owner() {\r\n        return this.parentElement;\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n\r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor?.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor?.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    static #initialized;\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonacoElement.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        const url = GSMonacoElement.URL_LIB;\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${url}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${url}'};\r\n                importScripts('${url}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({\r\n                paths: { 'vs': `${GSMonacoElement.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false }\r\n            });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static async #init() {\r\n        const me = GSMonacoElement;\r\n        if (me.#initialized) return;\r\n        me.#initEnv();\r\n        await me.#initLib();\r\n        await me.#initMonaco();\r\n        me.#initialized = true;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-monaco');\r\n    }\r\n\r\n}"],"names":["gsstyles","GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSUtil$1","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Date","Boolean","value","toString","val","trim","toLowerCase","str","obj","replace","x","g","split","reverse","join","word","toUpperCase","slice","map","i","capitalize","constructor","min","max","Math","match","dft","locale","isString","sep","numberSeparator","extractNumber","replaceAll","isNumber","url","test","startsWith","endsWith","pattern","charset","floor","random","length","navigator","language","languages","flags","RegExp","isStringEmpty","undefined","Intl","NumberFormat","format","DateTimeFormat","Array","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","separator","filter","capitalizeAll","tpl","params","names","keys","vals","values","Function","text","textArea","document","createElement","innerHTML","isStringNonEmpty","o","window","forEach","a","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","GSFunction$1","GSFunction","isFunction","includes","own","isFunctionDefined","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","from","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSID","prefx","next","s","l","h","charCodeAt","GSAttr$1","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","attributes","host","opt","recursive","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","children","proxify","safe","unsafe","dflt","default","multi","hasAttribute","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","first","getDay","mondayFirst","isMondayFirst","days","repeat","push","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","d","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","m","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","k","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Locale","weekInfo","firstDay","charAt","toLocaleString","size","isLowercase","hour","hour12","pop","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","getDateFormat","regex","getFormattedDateRegex","parseFormattedDate","groups","y","Y","valueOf","GSData","currency","extract","Set","b","every","index","toSorted","compareArrays","second","arr","indexOf","list","it","cfg","toType","rule","toRegex","fmt","style","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sort","sortPair","sts","ord","idx","col","v1","v2","compare","order","compareNum","compareString","isBool","compareBool","isDate","s1","s2","localeCompare","ignoreNull","isNull","seg","writeSingleToOject","tree","hasOwnProperty","r","readFromProperty","GSDOM$1","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","wrap","appendChild","link","slot","isText","tagName","FORMEL","queryAll","HTMLButtonElement","hasClass","ownClazz","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","parentElement","offsetParent","c","ShadowRoot","HTMLBodyElement","root","getByID","documentElement","walk","qry","query","proxy","res","receiver","sanitize","sanitizer","setHTML","Document","textContent","requestAnimationFrame","toggleClass","contains","unwrap","querySelectorAll","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","readFromObject","fromValue","plain","innerText","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","location","hash","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","allowElement","allowTag","fetch","ok","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","detail","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","delete","removeListener","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","for","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","rid","waitAnimationFrame","onResize","attach","GSAbortController","AbortController","super","abort","clearInterval","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","isFunctions","getFilter","exec","create","GSDynamicStyle","deleteRule","getRule","setRule","sync","insertRule","updateRule","isImportant","setProperty","source","dynamicStyleSheetByID","dynamicStyleSheet","gsClass","dynamicRule","dynamicRuleByID","dynamicStyle","assign","dynamicStyleByID","GSCacheStyles","store","dynamic","styles","adopt","adoptedId","GSAdoptedEngine","now","preload","timerID","setInterval","sheets","adoptable","adoptSheet","update","scheduled","sorted","ID","cssText","monitorAttributes","ownerNode","adoptStyle","disconnect","mutationList","onAttributeChange","attributeFilter","attributeOldValue","HTMLLinkElement","rel","as","HTMLStyleElement","then","adoptLink","registerFilter","onMonitorFilter","onMonitorConnect","onMonitorDisconnect","init","GSEnvironment","isMobile","userAgentData","mobile","userAgent","isDesktop","isWebkit","protocol","strVal","brands","brand","strAgt","isEdge","isDevice","platform","screen","otype","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","ps","p","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","querySelector","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSItem","validate","tags","collect","definition","GSLoader","GS_TEMPLATE_URL","origin","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","searchParams","append","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GS_LOCALIZATION_LANGUAGE","lang","GSLocalization","GSLocalizationImpl","queue","queued","GS_LOCALIZATION_URL","translate","deft","getLanguage","texthash","reset","promises","loadWait","sequential","Pragma","isDefault","hk","details","GSPopper","asRect","sx","scrollX","sy","scrollY","top","bottom","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","arrow","pos","fromPlacement","isPlacementValid","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","aopt","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","applyDynamicStyle","GSQueryCSS","property","object","GSQuery","instance","GSTemplateCache","template","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTheme","switch","theme","STORAGE","htmlEl","bsTheme","matchMedia","q","URLSearchParams","onTheme","settings","getSystemDefaultTheme","darkMode","lightMode","setup","GSAttributeHandler","anchor","call","inject","swap","trigger","calls","toggles","triggers","handle","targets","handleTarget","handleBinding","handleAction","handleAttribute","handleProperty","handleToggle","handleTrigger","handleCall","handleExec","handleSwap","handleInject","handleTemplate","field","form","isField","HTMLFormElement","isFormElement","toObject","isAttributeJSON","jsonToAttr","toggleAttribute","isPropertyJSON","properties","toggleProperty","tout","symbol","applyContent","applyTemplate","clone","insertAdjacent","deattach","DEFINITION","Stack","item","unshift","peek","isEmpty","Queue","enqueue","dequeue","BinaryTreeNode","isLeaf","hasChildren","isRoot","BinaryTree","inOrderTraversal","postOrderTraversal","preOrderTraversal","insert","parentNodeKey","canInsertLeft","canInsertRight","find","Node","previous","release","toJSON","DoublyLinkedList","tail","previousNode","insertAt","splice","insertFirst","insertLast","getAt","removeAt","acc","toArray","iterator","isInvalid","isInvalidIndex","isInteger","Tree","folder","leaf","up","levelID","nodeID","isFolder","hasMore","firstChild","lastChild","down","previousSibling","inclusive","flat","iterate","filtered","We","newOne","findByKey","flatten","fromJSON","raw","hasParent","GSReadWriteRegistryImpl","handlers","INTERNAL","addHandler","removeHandler","getHandler","newHandler","enabled","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","processors","enable","addProcessor","processor","removeProcessor","disable","isRegistered","notify","onRead","postRead","result","onWrite","postWrite","GSReadWrite","reader","writer","mode","skip","limit","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","litUrl","GS_LIT_URL","litModule","ReactiveController","ReactiveElement","AsyncDirective","AsyncReplaceDirective","CSSResult","Directive","LitElement","PartType","TemplateResultType","UnsafeHTMLDirective","UntilDirective","_$LE","_$LH","adoptStyles","asyncAppend","asyncReplace","choose","classMap","clearPart","createRef","defaultConverter","directive","getCommittedValue","getCompatibleStyle","getDirectiveClass","guard","ifDefined","insertPart","isCompiledTemplateResult","isDirectiveResult","isPrimitive","isServer","isSingleExpression","isTemplateResult","keyed","literal","live","noChange","notEqual","nothing","range","ref","removePart","render","setChildPartValue","setCommittedValue","staticHtml","staticSvg","styleMap","supportsAdoptingStyleSheets","svg","templateContent","unsafeCSS","unsafeHTML","unsafeSVG","unsafeStatic","until","when","withStatic","gsAction","gsAnchor","gsAttribute","gsCall","gsExec","gsInject","gsProperty","gsSwap","gsTarget","gsTemplate","gsToggle","gsTrigger","gsValue","DatasetDirective","part","srcset","DOMStringMap","remap","hasOwn","descriptors","getOwnPropertyDescriptors","listProperties","listGetters","getPrototypeOf","literalTemplate","listGettable","cssMap","CssMapDirective","partInfo","ATTRIBUTE","strings","classInfo","_previousClasses","_staticClasses","notEmpty","newVal","oldVal","numGT0","numGE0","numLT0","numLE0","ButtonTypes","buttonType","hasChanged","is","ColorTypes","color","EnvironmentTypes","environment","InputTypes","inputType","NavTypes","nav","OrientationTypes","PlacementTypes","PositionTypes","ProtocolTypes","SizeTypes","normal","medium","small","large","big","stringArrayConverter","fromAttribute","toAttribute","AdoptedController","addController","hostConnected","controllers","hostDisconnected","removeController","changed","renderRoot","onAdopted","AttributeController","eventName","onNotify","isFormEl","ContentController","refs","removeContent","hostUpdated","changedProperties","isSelf","contentRef","options","renderOptions","renderBefore","previousElementSibling","keep","DataController","readCallback","writeCallback","errorCallback","read","write","storeID","search","storage","firstPage","page","lastPage","nextPage","prevPage","onDataRead","onDataWrite","onDataError","ElementMoveController","attached","cursorX","cursorY","mouseUpCallback","mouseDownCallback","mouseMoveCallback","onMouseUp","onMouseDown","onMouseMove","attachEvent","removeEvent","onStartMove","onEndMove","onCursorRight","onCursorLeft","onCursorUp","onCursorDown","ElementNavigationController","selected","focused","multiselect","circular","multiple","onKeyUp","onClick","onFocusIn","onFocusOut","lastElementChild","focus","blur","onSelected","onDeselected","onFocused","isNavigable","select","OrientationController","hosts","requestUpdate","onOrientation","ThemeController","hostUpdate","changes","updateTheme","updateThemeExt","TemplateController","lastRef","request","templateRef","schedule","tasks","task","process","finally","LocalizationController","updateLanguage","updateLanguageExt","langauge","onLanguage","GSElement","rtl","reflect","hide","rounded","bordered","onready","os","browser","adopted","uiHandler","localization","dataController","themes","attributeChangedCallback","oldValue","newValue","connectedCallback","isBindable","binded","disconnectedCallback","deattachListeners","createRenderRoot","firstUpdated","willUpdate","relink","isAllowRender","renderUI","renderTemplate","renderClass","border","mapCSS","flag","waitEvent","direction","isFocused","isValidEnvironment","isValidBrowser","isValidOS","isValidProtocol","isValidOrientation","definitions","mergeObjects","GSAccordionElement","autoclose","cssItem","cssHeader","cssBody","renderItems","close","state","open","message","opened","GSAccordionItemElement","shouldUpdate","component","GSAlertElement","closed","closable","pause","interval","handleBillboard","updated","show","isBillboard","button","billboard","GSButtonElement","toggleColor","autofocus","outline","toggling","icon","tooltip","refEl","isReset","isSubmit","submit","isReest","GSCalendarElement","arrovPrev","arrowNext","cssDays","cssToday","cssWeeks","cssMonth","cssYear","cssNav","cssSelected","minYear","maxYear","arrowPrev","previousMonth","nextMonth","previousYear","nextYear","formatted","updateTarget","week","dayList","months","monthsHTML","yearHTML","onKey","onDay","daysHTML","tgt","HTMLInputElement","valueAsDate","isToday","today","c1","c2","current","monthList","onMonth","onYear","selectedIndex","GSCardElement","imageStyle","overlay","align","image","subtitle","footer","header","colorText","colorBack","colorBorder","cssTitle","cssSubtitle","cssFooter","cssImage","isVertical","renderVertical","renderHorizontal","imageTop","imageBottom","isBefore","startClass","endClass","startHtml","images","endHtml","isHorizontal","imageSlot","GSCenterElement","GSMenuElement","auto","dark","menuRef","styleID","closeSubmenus","updatePosition","onMouseOver","onMouseLeave","submenu","dropend","dropstart","popup","caller","isMouseOrPointerEvent","renderSubmenu","renderHeader","renderMenu","renderDivider","menu","toSubmenu","menuItem","isSubmenu","innerWidth","GSDContextElement","attachTarget","onPopup","composedPath","GSCompareElement","background","before","after","elRef","clipRef","slideRef","mouseController","elPosition","splitter","onLoad","onDoubleClick","isAuto","pct","isFixed","slider","clip","GSCopyrightElement","company","isCompany","isYear","GSDataHandler","autoload","autorefresh","config","handler","lifoReadRef","initLIFO","PROPERTIES","updateHandler","formatSort","formatFilter","isDebug","gsDebug","formated","verifyHandler","save","callOnceLifo","lifoReadRefCallback","lifoRead","GSDialogElement","standard","refelct","escapable","cancelText","confirmText","buttonAlign","iconCancel","iconConfirm","cssCancel","cssConfirm","cssContent","dialogRef","btnConfirmRef","btnCancelRef","CSS","TITLE_CSS","HEADER_CSS","ALIGN","CANCEL","CONFIRM","updateStack","STACK","dialog","showModal","focusable","renderConfirm","onConfirm","renderCancel","onCancel","renderFooter","info","confirm","prompt","forms","f","tab","btnConfirm","btnCancel","QUERY_INPUT","isVisible","stack","GSDrawerElement","backdrop","expanded","scroll","fingers","transition","duration","cssHead","onLeave","onEnter","hasHeader","headSlot","GSDropdownElement","renderButton","buttonClass","btn","GSEmailElement","user","domain","dev","updateUser","updateDomain","GSFormElement","formRef","onChange","elements","fromObject","disableInput","enableInput","reportValidity","GSFormGroupElement","layout","description","label","placeholder","mask","step","minLength","maxLength","autoid","autocopy","autoselect","autocapitalize","autocomplete","reveal","readonly","required","cellField","cellLabel","cssLabel","cssField","inputRef","ouptutRef","patterns","validateAllowed","ICON","CSS_LABEL","CSS_LABEL_CELL","onRange","formElements","renderFloating","cssCheck","renderInput","renderOutput","renderLabel","renderInfo","renderLabelWrap","renderField","renderIcon","isIcon","CSS_ICON","renderTooltip","isRange","idattr","isFieldset","radioLayout","fieldSet","inputHTML","fld","vertical","isSwitch","onBlur","isCheckable","isFloating","setCustomValidity","slots","tagList","isCheck","isRadio","isChecked","isPassword","isEmail","isURL","GSFormPanelElement","formStorage","GSGroupElement","initData","renderWrappedUI","renderWrappedClass","allProperties","GSIconElement","superColor","fs","GSIndentElement","multiplier","numdef","GSImageElement","invert","grayscale","brightness","contrast","saturate","hue","sepia","alt","loading","imageRef","complete","renderStyle","buildFilter","GSLayoutElement","resizable","autofit","vPos","hPos","els","horizontal","tplEl","elementTemplate","tc","dir","panelCSS","panelStyle","resize","grow","vpos","hpos","GSLinklement","ping","GSListElement","selectable","GSListItemElement","generated","initial","activeCSS","renderFirst","renderSecond","itemCSS","cssActive","GSNavItemElement","itemsCSS","buttonCSS","buildCSS","cssButton","navType","GSNavElement","isTab","GSOverlayElement","autoremove","radius","innerHeight","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathStr","createSVGPathString","windowX","windowY","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPagerElement","pages","labelFirst","labelLast","labelNext","labelPrevious","half","renderPrevious","renderItem","renderNext","renderLast","pagination","decodeHTMLEntities","toTarget","ctrl","GSPopupElement","wMin","wMax","hMin","hMax","panelRef","attachTaraget","onAuto","reposition","popupFixed","panel","Event","HTMLSlotElement","overflowH","overflowV","GSProgressElement","updateStyle","percentage","onKeySelect","increase","decrease","trunc","old","GSSpinnerElement","pulsar","GSSplitterElement","cursor","cssUpdate","lock","updateMouse","stop","isPreceeding","isStyleValue","styleDynamic","lockable","csize","cls","gsSplitter","updateX","updateY","dx","GSTabItemElement","GSTabPanelElement","GSTabGroupElement","tabCSS","isAfter","renderPanels","findPanel","GSTableElement","colorHead","colorSelect","stripedColumn","divider","striped","hover","borderless","columns","selections","datacolumn","multisort","protected","sortable","sortOrder","headColor","CELLS","table","stripedColumns","fill","onSort","entry","renderColumn","onSelect","renderRecord","cell","icons","sortType","column","getElementIndex","prepareSorter","sortData","isComplex","tr","isSelected","GSTagElement","converter","appendable","closeColor","cssClose","cssTag","dataListRef","renderTags","onInput","renderList","updateTag","KEYS","srcElement","removeTag","addTag","isMax","datalist","input","optEl","tagEl","renderTag","tagClass","btnClass","badge","GSTextElement","GSTooltipElement","local","arrowRef","arrowStyle","attachEvents","fade","arrowEl","panelEl","refLocal","refGlobal","GSTemplateElement","GSComboExt","HTMLSelectElement","observedAttributes","setIf","objToHTML","GSDataListExt","HTMLDataListElement","GSInputExt","_","revealing","masks","toPattern","onDataChange","strict","optimized","chars","special","maskType","onKeyPress","onPaste","onMonitor","togleEl","isMatch","isButtonElement","isInList","clean","dataGroup","clipboard","writeText","clipboardData","getData","formatMask","isReveal","altKey","wordop","copycut","pos1","selectionStart","pos2","selectionEnd","setSelectionRange","metaKey","lastIndex","onNumberInput","onTextInput","substring","updateText","valid","vld","GSBreadcrumbElement","spacing","updateChildren","$text","GSBreadcrumbItemElement","generate","GSTimeFormat","toLocaleTimeString","GSDateFormat","GSYearFormat","GSCurrencyFormat","GSStepStyle","GSStepElement","iconCSS","titleCSS","INACTIVE","ICON_CSS","GSStepsElement","steps","isFirst","isLast","COMPLETED","SELECTED","GSNotificationElement","BOTTOM_END","positionCSS","DEFAULT","dismiss","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","dlg","nn","isNativeSupported","isGranted","permission","GSToastElement","pending","visibilityChange","pendingUpdate","validParent","SPEED","renderWithHeader","renderSimple","AbstractTreeController","addNodeController","removeNodeController","oldNode","TreeController","toggleState","onRefresh","onAppend","addedNode","onInsert","insertedNode","onExpand","onCollapse","onFocusChanged","onSelectionChanged","selectedNode","onRemove","TreeNode","focusedNode","visible","expand","collapse","isPartialySelected","selectAll","deselectAll","selectionFlag","onSelectAll","onDeselectAll","selectedNodes","refresh","expandAll","collapseAll","collapsed","GSTreeItemElement","renderSpinner","cssFocus","status","parentItem","checkColor","checkColorSelected","ui","itemIco","itemIcon","openIcon","closeIcon","renderIndent","renderMulti","GSTreeElement","guide","shared","listRef","nextItem","previousItem","reload","expandable","GSChartElement","URL_LIB","GS_URL_CHART","canvasRef","chart","waitInit","destroy","isChart","renderData","canvas","updateChart","div","toBase64Image","quality","sets","datasets","ctx","getContext","Chart","initializing","registerables","nameV","valV","typeV","childs","isObject","_nam","GSChart","_val","_typ","GSHighlightElement","GS_URL_HLJS","codeRef","onTarget","onURL","onHighlight","hasLangauge","highlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMarkdownElement","GS_URL_MARKDOWN","history","maxHeight","containerRef","initLib","showdown","tasklists","tables","Converter","toCache","back","fromCache","container","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","script","GSMonacoElement","GS_URL_MONACO","editor","onMonacoReady","monaco","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","automaticLayout","minimap","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","paths","vs","initialized","initEnv","initMonaco"],"mappings":"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"}