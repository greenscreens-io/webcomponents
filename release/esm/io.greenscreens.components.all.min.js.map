{"version":3,"file":"io.greenscreens.components.all.min.js","names":["el","#print","GSUtil","#JSON_NORMALIZE","el","o","map","reject","GSFunction","o","GSUtil","#contextualize","reject","#id","el","el","GSUtil","GSFunction","#modern","me","#map","#getMap","GSUtil","GSFunction","el","#normalize","#split","#containsAny","me","val","#isMondayFirst","#language","#toLocale","#formatHour","#meridiem","#zoneStr","#capitalize","size","GSUtil","#getFormattedDateRegex","#parseFormattedDate","o","#toType","GSUtil","el","fmt","#writeSingleToObject","#FORMEL","#CLEANUP1","el","css","size","html","#fromNode","GSUtil","orientation","placement","child","o","#proxy","map","isPrimitive","#dispatch","#globalDispatch","#rid","#protect","#cache","#loaded","#suspended","GSUtil","#onContext","#onKeyDown","GSFunction","reject","o","el","#toSignal","me","#eventKey","#getElementMap","map","#eventMap","#removeListener","#removeElementMap","#getElementID","#getCallbackID","#onResize","GSAbortController","GSUtil","me","#iid","#filtersAdd","#filtersDel","el","observer","#onObserve","#getFilter","#hasFilters","#hasFiltersAdd","#hasFiltersDel","#walk","#parse","#exec","#isFunction","#isFunctions","me","#updateRule","el","#store","me","css","#timerID","#ID","#scheduled","#init","me","#preload","#adopt","#clear","#adoptable","#adoptSheet","#sorted","#asText","o","#adoptLink","el","#monitorAttributes","#adoptStyle","#store","#remove","#onAttributeChange","observer","#onMonitorFilter","#onMonitorConnect","#onMonitorDisconnect","#defaultURL","el","GSUtil","#getRouterURL","#routerURL","#routerPath","#getTemplateURL","#templateURL","#templatePath","GSFunction","#store","template","me","el","GSFunction","o","#reverse","#link","el","me","#host","#callback","#proxy","#handleTarget","#handleBinding","#handleAction","#handleSwap","#handleInject","#handleAttribute","#handleProperty","#handleToggle","#handleTrigger","#handleEvent","#handleCall","#handleExec","#handleTemplate","GSUtil","#toggleAttribute","#toggleProperty","#symbol","GSFunction","#toHTML","#applyContent","#handleContent","#applyTemplate","template","#active","o","reject","me","#callback","#signal","GSUtil","#callbacks","#onAbort","#promise","#wrap","reject","#resolve","#reject","#onResolve","#onReject","#clear","o","me","#listeners","#isFunction","o","#send","GSUtil","reject","#list","#registry","me","#swipe","#tap","#longPress","#xDown","#yDown","#element","#bindings","#handleTouchMove","#handleTouchStart","#handleTouchEnd","#onLongPress","#delay","#xDiff","#yDiff","#tags","el","definition","#default","#language","#url","me","GSUtil","#languages","#getLanguage","#queue","#queued","#store","map","el","css","placement","#fromPlacement","#isPlacementValid","#updateArrow","#calcFixed","#inset","#calcAbsolute","size","#map","GSFunction","me","GSUtil","#isFunc","#css","el","#hashCallback","#onHashChange","me","GSUtil","#definition","#enabled","#logging","el","#STORAGE","el","#switch","#onTheme","#setup","#nodes","#validate","o","#isInvalidIndex","#error","#value","#next","#previous","me","#release","#key","#parent","#folder","#level","#children","o","#filtered","me","node","#SELECT","GSUtil","o","me","#instance","#INTERNAL","#handlers","me","#verify","cache","#map","GSUtil","#self","#SELECT","me","#id","#processors","#TYPE","#MODES","#METHOD","GSUtil","#mode","me","#reader","#writer","#headers","#key","#src","#limit","#skip","#filter","#sort","#action","#toURL","GSFunction","#TYPE","me","#data","#reformat","o","data","#postFilter","#controllers","#multi","#opened","#focused","#focusedNode","#selected","#selectedNode","#selectionFlag","o","me","#expanded","#collapsed","me","#data","dataset","#remap","#normalize","GSUtil","o","me","#host","#controllers","#adopt","#dynamic","#sheets","#changed","#root","#onAdopted","#init","me","#eventName","#host","me","#removeContent","#refs","#ref","#isSelf","#target","#options","el","me","#host","#readCallback","#onRead","#writeCallback","#onWrite","#errorCallback","#onError","#selectCallback","#onSelect","#listen","#unlisten","#selector","GSUtil","o","#notify","me","#host","#mouseUpCallback","#onMouseUp","#mouseDownCallback","#onMouseDown","#mouseMoveCallback","#onMouseMove","#attached","#element","#cursorX","#cursorY","me","#host","#language","#controllers","#onLanguage","#init","#hosts","#host","me","#onOrientation","#scheduled","#tasks","#cache","#refs","me","#host","#lastRef","#template","ref","template","#toKey","GSUtil","#applyTemplate","#schedule","el","#load","#hasKey","#preprocessTemplate","#process","me","#host","#theme","#controllers","el","#onTheme","#init","#host","me","#onSlotChanged","el","GSElement","me","#adopted","#content","#localization","#orientation","#themes","#slotController","#template","#ref","#refs","#refx","#uiHandler","#dataController","GSFunction","css","el","GSUtil","o","me","#host","#attached","#focused","el","#isNavigable","#onFocused","#onSelected","#onDeselected","#toggle","#focus","GSElement","#select","me","#host","#busCallback","#onBusEvent","#busEvent","GSElement","#router","GSElement","me","#onNotify","#onClick","#onKeyUp","#renderItems","el","#state","o","GSElement","me","GSElement","#ref","#data","#proxify","#interval","me","#pause","#first","#second","#handleBillboard","css","#message","#button","el","#billboard","#last","GSButtonElement","GSElement","me","#refEl","#tooltip","#onMouseOver","#onMouseOut","#onDisabled","#onClick","#first","#second","size","css","#onHref","#refIco","#title","#iconHtml","#renderIcon","GSElement","me","#date","#selected","GSUtil","#update","#updateTarget","#monthsHTML","#yearHTML","#onKey","#onDay","#daysHTML","#isToday","#onMonth","#optionsHTML","#onYear","GSElement","#styleID","me","#renderVertical","#renderHorizontal","#imageTop","#header","#body","#footer","#imageBottom","#images","css","#imageSlot","#image","GSElement","me","GSElement","me","#styleID","#proxify","#controller","#closeSubmenus","#updatePosition","#menuRef","#onMouseOver","#onMouseLeave","#onKeyDown","#onClick","#items","css","GSUtil","offset","#item","el","#renderSubmenu","#renderDivider","#renderHeader","#renderMenu","#renderIcon","#toSubmenu","#menu","me","#isInTable","#attachTarget","#onPopup","el","#match","GSElement","me","#styleID","#mouseController","#splitter","#dynamic","#elRef","#onLoad","#onDoubleClick","#before","#clipRef","#after","#slideRef","css","#elPosition","GSUtil","#update","#isAuto","#slider","#clip","el","GSElement","me","#initialize","#clazz","GSElement","me","GSUtil","GSElement","me","#isInTable","#config","#initLIFO","#handler","#lifoReadRef","#lifoWriteRef","#iid","#updateHandler","o","#formated","GSUtil","GSFunction","#lifoReadRefCallback","#lifoWriteRefCallback","#lifoCall","#verifyHandler","GSElement","#STACK","me","#styleID","#updateStack","#pass","GSUtil","allowed","#onOpenChanged","#dialog","#focusable","#btnConfirmRef","#onConfirm","#btnCancelRef","#onCancel","#renderCancel","#renderConfirm","css","size","#dialogRef","#onKeyDown","#onForm","#onSubmit","#renderContent","#renderFooter","#btnConfirm","#btnCancel","el","GSElement","me","#onLeave","#onEnter","#style","#header","#backdrop","css","GSUtil","#button","#title","#hasHeader","#headSlot","#notify","me","#renderButton","css","#buttonClass","GSElement","#updateUser","#updateDomain","#style","#onClick","#user","#domain","#url","GSUtil","me","dataset","GSFormElement","GSElement","me","#formRef","#onBlur","#onChange","#onInvalid","#elementTemplate","GSUtil","#notify","o","#lastState","GSElement","#SELECTOPT","#internals","#validateAllowed","#styleID","me","#options","#patterns","el","#renderFloating","#renderVertical","#renderHorizontal","#cssCheck","#cellField","#renderInput","#renderOutput","#renderLabel","#renderInfo","#renderLabelWrap","#renderField","#cssLabel","#isIcon","#renderTooltip","#renderIcon","#ouptutRef","o","#fieldSet","#inputHTML","#selectHTML","#isTextArea","#textArea","#renderOption","#initStyle","#inputRef","#onChange","#onBlur","#cssField","#renderOptions","#listHTML","#isBlock","#isBeep","#onInput","#onInvalid","#timeout","GSUtil","GSElement","#proxify","me","#renderTemplate","#formRef","#renderContent","#renderFormGroup","definition","el","GSElement","me","#controller","#controllerGroup","el","#elRef","#prerender","GSElement","#postAnimate","me","#ref","#onMouseOver","#onMouseOut","css","GSUtil","GSElement","me","size","GSElement","#styleID","#update","me","#imageRef","#onLoad","#dynamic","#buildFilter","css","o","el","GSElement","me","#items","el","#dyncss","#build","idx","#resizable","template","#elementTemplate","css","#panelCSS","#panelStyle","#splitter","GSElement","me","#refEl","#onMouseOver","#onMouseOut","#onClick","#first","#second","css","#refIco","GSUtil","#title","#iconHtml","#renderIcon","css","el","o","GSElement","#initial","me","#refEl","#renderFirst","#renderSecond","css","#itemCSS","#itemStatusCSS","GSUtil","#renderText","#renderIcon","#activeCSS","#inactiveCSS","GSElement","#onMouse","me","GSElement","me","#styleID","#onMove","#onMouseDown","#onMouseUp","#refEl","#enabled","css","#updateCursor","me","css","o","el","GSElement","me","#button","#badgeUI","#itemsCSS","#refEl","#title","#icon","#first","#second","#buttonCSS","#buildCSS","#activeCSS","css","#navType","GSElement","#styleID","#styleID2","me","#path","el","#createSVGPathString","GSElement","me","#isInTable","#onClick","#onKeyUp","#onKeyDown","#ref","#renderFirst","#renderPrevious","#renderItem","#renderNext","#renderLast","size","css","GSUtil","el","#toTarget","GSElement","#styleID","me","#attachTarget","#onAuto","#resize","#reposition","#postPopup","#panelRef","#onKeyDown","css","#panel","#caller","e","#onPopup","GSElement","#styleID","#arrowID","me","#attachEvents","#reposition","#panelRef","#arrowRef","css","#ref","#panel","#arrow","el","#onFocus","GSElement","#styleID","me","css","#updateStyle","#onKeySelect","#update","GSUtil","GSElement","me","css","GSElement","me","#styleID","#load","#mouseController","#splitter","#elRef","#onDoubleClick","css","#cssUpdate","#cursor","#lock","#updateMouse","#save","el","#isPreceeding","o","#styleTGT","#styleDynamic","#lockable","GSUtil","#update","#updateX","#updateY","size","#updateCSS","me","GSUtil","GSElement","me","css","me","#findPanel","el","css","#renderTabs","#renderPanels","o","GSElement","#icons","me","#config","css","#sortOrder","#onKeyUp","#onKeyDown","#renderFilters","#onSort","#renderColumn","#onSelect","#renderRecord","#renderEmpty","#renderHandler","#auto","#hasFilters","#columType","#input","el","o","#renderFilter","GSUtil","color","#onFilter","#renderOption","#renderIcon","#remapRecord","#renderCell","#elementTofilter","#prepareSorter","GSElement","#KEYS","#items","me","#renderTags","#onClick","#onKeyDown","#onInput","#inputRef","#info","#dataListRef","#renderList","css","#updateTag","#removeTag","#addTag","#selected","#isMax","#options","#datalist","el","#input","#renderTag","size","#tagClass","#btnClass","#proxify","GSElement","#text","GSElement","#styleID","#arrowStyle","me","#attachEvents","#reposition","#panelRef","#arrowRef","css","#ref","#arrow","#panel","#refLocal","#refGlobal","GSElement","me","me","#host","#clickCallback","#copyCallback","GSUtil","#special","#maskType","me","#host","#slots","#buildSlots","#prev","#first","#accept","#buildAccept","#toPattern","GSUtil","#range","#pattern","#format","#back","#clean","me","#host","GSUtil","o","me","#host","GSUtil","me","#host","#revealing","#isReveal","me","#host","#transform","map","GSUtil","me","#host","#monitorCallback","#onMonitor","#isInList","el","#togleEl","#togleOption","me","me","#processing","#host","#togglUI","#onBlock","#report","#onAutoValidity","#focus","#reportValidity","#checkValidity","#beep","GSUtil","GSElement","el","me","#host","#processing","Event","#host","me","#onReset","#onSubmit","#onFormData","#onKeyDown","#onKeyUp","#onInput","#onFocus","#onChange","#onBlur","#onInvalid","#invoke","#controllers","#handlers","#comboController","#formController","#dataController","#copyselect","#typeController","#validityController","#initControllers","#prepare","#initIinputControllers","#initTextAreaControllers","me","#controllerHandler","#formEl","#preupdate","#hasUpdated","#onFormState","#onClick","el","#controllerHandler","me","#preupdate","#maskController","#patternController","#listController","#pattern","#hasUpdated","GSUtil","#updateMask","#updateMultipattern","#updateList","#controllerHandler","me","#preupdate","#hasUpdated","#controllerHandler","me","#preupdate","#hasUpdated","#onReset","el","GSUtil","o","#objToHTML","#controllerHandler","me","#preupdate","#hasUpdated","el","GSUtil","o","#objToHTML","#controllerHandler","me","#preupdate","#hasUpdated","el","#button","#childrens","GSElement","me","#updateChildren","#onClick","el","GSElement","me","#label","#separator","css","#transferredFiles","me","#isDirectory","#traverse","#roots","#visible","#hidden","#getFile","reject","#getEntries","entries","GSElement","me","#onClick","#onDragenter","#onDragleave","#onDrop","#onPaste","#onChange","#fileEl","#listEl","#dragging","#hasFile","#attach","#pastedFile","#accept","GSElement","GSUtil","me","#id","#update","GSElement","me","o","GSElement","GSElement","#options","me","GSElement","me","#renderIcon","GSElement","me","#index","GSElement","me","#positionCSS","el","css","#showNative","#showWeb","#delay","#dialogToast","#list","#clearNative","GSElement","me","#isVisibilityChanged","#pending","#pendingUpdate","#validParent","GSUtil","#renderWithHeader","#renderSimple","#button","css","me","#host","#node","#addNodeController","#removeNodeController","el","#toggleState","GSElement","#link","me","#renderSpinner","#renderIcon","#border","#cssFocus","#cssSelected","#status","#cssCheck","#checkColor","#checkColorSelected","#icon","#renderIndent","#renderMulti","color","GSElement","me","#controller","#onClick","#onKeyDown","#onKeyUp","#listRef","#queued","#first","#last","#host","#list","el","GSElement","me","#workerMessage","#onWorkerMessage","#load","#unload","#ServiceWorkerTraceUpdate","GSUtil","#registration","#messageChannel","#trace","#invokeServiceWorkerUpdateFlow","#nocache","#monitorController","#monitorServiceWorkerUpdate","#initChannel","GSElement","#init","#waitInit","me","#chart","#isChart","#render","#renderData","#canvasRef","el","o","#Chart","#initializing","#toType","GSElement","me","#onTheme","#onTarget","#onURL","#onHighlight","#data","#codeRef","GSUtil","css","el","#code","#worker","#onMessage","GSElement","#styleID","me","#initLib","#converter","#toCache","#onURL","#containerRef","GSUtil","css","#fromCache","#root","#container","#normalize","#path","#parent","#makeHtml","#handleLinks","#handleTables","#handleCode","#handleStyles","el","#onLinkClick","#cache","#first","#last","GSElement","#init","#onMonacoReady","me","#editor","#onTheme","#onTarget","#onURL","#onLanguage","#containerRef","el","#container","#onResize","#initialized","#initLib","#initEnv","#initMonaco","reject"],"sources":["../../modules/base/GSVersion.mjs","../../modules/base/style.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSID.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSDynamicStyle.mjs","../../modules/base/GSCacheStyles.mjs","../../modules/base/GSAdoptedEngine.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSTemplateCache.mjs","../../modules/base/GSAttributeHandler.mjs","../../modules/base/GSBeep.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSLocalization.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSRouter.mjs","../../modules/base/GSTheme.mjs","../../modules/helpers/BinaryTree.mjs","../../modules/helpers/DoublyLinkedList.mjs","../../modules/helpers/LinkedList.mjs","../../modules/helpers/Stack.mjs","../../modules/helpers/Queue.mjs","../../modules/helpers/Tree.mjs","../../modules/data/DataSelector.mjs","../../modules/data/ReadWriteRegistry.mjs","../../modules/data/AbstractReadWrite.mjs","../../modules/data/ReadWrite.mjs","../../modules/data/CachedReadWrite.mjs","../../modules/data/TreeNode.mjs","../../modules/data/TreeReader.mjs","../../modules/lib1.mjs","../../modules/directives/dataset.mjs","../../modules/directives/literal.mjs","../../modules/directives/css-map.mjs","../../modules/properties/verificator.mjs","../../modules/properties/autocapitalize.mjs","../../modules/properties/autocomplete.mjs","../../modules/properties/autocorrect.mjs","../../modules/properties/buttonType.mjs","../../modules/properties/color.mjs","../../modules/properties/environment.mjs","../../modules/properties/inputType.mjs","../../modules/properties/nav.mjs","../../modules/properties/orientation.mjs","../../modules/properties/placement.mjs","../../modules/properties/position.mjs","../../modules/properties/protocol.mjs","../../modules/properties/size.mjs","../../modules/properties/arrayConverter.mjs","../../modules/controllers/AdoptedController.mjs","../../modules/controllers/AttributeController.mjs","../../modules/controllers/ContentController.mjs","../../modules/controllers/DataController.mjs","../../modules/controllers/ElementMoveController.mjs","../../modules/controllers/LocalizationController.mjs","../../modules/controllers/OrientationController.mjs","../../modules/controllers/TemplateController.mjs","../../modules/controllers/ThemeController.mjs","../../modules/controllers/SlotController.mjs","../../modules/GSElement.mjs","../../modules/controllers/ElementNavigationController.mjs","../../modules/controllers/GroupController.mjs","../../modules/components/Router.mjs","../../modules/components/Accordion.mjs","../../modules/components/AccordionItem.mjs","../../modules/components/Alert.mjs","../../modules/components/Button.mjs","../../modules/components/Calendar.mjs","../../modules/components/Card.mjs","../../modules/components/Center.mjs","../../modules/components/Menu.mjs","../../modules/components/Context.mjs","../../modules/components/Compare.mjs","../../modules/components/Controller.mjs","../../modules/components/Copyright.mjs","../../modules/components/DataHandler.mjs","../../modules/components/Dialog.mjs","../../modules/components/Drawer.mjs","../../modules/components/Dropdown.mjs","../../modules/components/Email.mjs","../../modules/components/Form.mjs","../../modules/components/FormGroup.mjs","../../modules/components/FormPanel.mjs","../../modules/components/Group.mjs","../../modules/components/Icon.mjs","../../modules/components/Indent.mjs","../../modules/components/Image.mjs","../../modules/components/Layout.mjs","../../modules/components/Link.mjs","../../modules/components/List.mjs","../../modules/components/ListItem.mjs","../../modules/components/Mouse.mjs","../../modules/components/Movable.mjs","../../modules/components/Nav.mjs","../../modules/components/NavItem.mjs","../../modules/components/Overlay.mjs","../../modules/components/Pager.mjs","../../modules/components/Popup.mjs","../../modules/components/Popover.mjs","../../modules/components/Progress.mjs","../../modules/components/Spinner.mjs","../../modules/components/Splitter.mjs","../../modules/components/tab/TabHeader.mjs","../../modules/components/tab/TabPanel.mjs","../../modules/components/tab/TabGroup.mjs","../../modules/components/Table.mjs","../../modules/components/Tag.mjs","../../modules/components/Text.mjs","../../modules/components/Tooltip.mjs","../../modules/components/Template.mjs","../../modules/components/ext/controllers/CopySelectController.mjs","../../modules/components/ext/controllers/MaskController.mjs","../../modules/components/ext/controllers/MultipatternController.mjs","../../modules/components/ext/controllers/NumberController.mjs","../../modules/components/ext/controllers/PasswordController.mjs","../../modules/components/ext/controllers/TextController.mjs","../../modules/components/ext/controllers/InteractiveController.mjs","../../modules/components/ext/controllers/ComboController.mjs","../../modules/components/ext/controllers/ListController.mjs","../../modules/components/ext/controllers/ValidityController.mjs","../../modules/components/ext/EventsMixin.mjs","../../modules/components/ext/controllers/FormController.mjs","../../modules/components/ext/ControllerHandler.mjs","../../modules/components/ext/GSButtonElement.mjs","../../modules/components/ext/GSInputElement.mjs","../../modules/components/ext/GSTextAreaElement.mjs","../../modules/components/ext/GSSelectElement.mjs","../../modules/components/ext/GSDataListElement.mjs","../../modules/components/ext/GSFormElement.mjs","../../modules/components/breadcrumb/Breadcrumb.mjs","../../modules/components/breadcrumb/BreadcrumbItem.mjs","../../modules/components/filebox/Attachment.mjs","../../modules/components/filebox/FileBox.mjs","../../modules/components/intl/TimeFormat.mjs","../../modules/components/intl/DateFormat.mjs","../../modules/components/intl/YearFormat.mjs","../../modules/components/intl/CurrencyFormat.mjs","../../modules/components/steps/StepStyle.mjs","../../modules/components/steps/Step.mjs","../../modules/components/steps/Steps.mjs","../../modules/components/toast/Notification.mjs","../../modules/components/toast/Toast.mjs","../../modules/components/tree/controllers/AbstractTreeController.mjs","../../modules/components/tree/controllers/TreeController.mjs","../../modules/components/tree/TreeItem.mjs","../../modules/components/tree/Tree.mjs","../../modules/components/ServiceWorkker.mjs","../../modules/extra/Chart.mjs","../../modules/extra/Highlight.mjs","../../modules/extra/Markdown.mjs","../../modules/extra/Monaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport class GSVersion {\r\n\r\n    static get version() {\r\n        return '2.0.0';\r\n    }\r\n\r\n    static get build() {\r\n        return 2025.0131;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Required CSS Styles for WebCompoents, regardless Bootstrap CSS.\r\n */\r\nexport const gsstyles = `.z-10k{z-index:10000 !important;}\r\n.gs-hide,gs-item{display:none !important;}\r\ngs-popover,gs-tooltip{position:fixed;top:0px;left:0px;},\r\n.d-contents{display:contents;}';\r\ngs-button-group::part(.btn-group){box-shadow:rgba(72, 72, 72, 0.4) 0px 0.125rem 0.25rem;}\r\ngs-group>gs-button::part(button) {box-shadow: none;}\r\ngs-group>gs-button:not(:last-child)::part(button) {border-top-right-radius: 0;border-bottom-right-radius: 0;}\r\ngs-group>gs-button:not(:first-child)::part(button) {margin-left: calc(var(--bs-border-width) * -5);border-top-left-radius: 0;border-bottom-left-radius: 0;}\r\ngs-layout {width: 100%;height: 100%;}\r\ngs-split-panel{flex: 1 1 auto !important;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]:before {content: attr(data-value);display: inline-block;position: absolute;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {visibility: hidden;display: inline-block;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-calendar-picker-indicator {position: relative;top: 0px;right: 0;color: black;opacity: 0.5;}\r\n`;","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => {\r\n\t\tconst v = GSUtil.normalize(val).toLowerCase();\r\n\t\treturn v === 'true' || v === '1';\r\n\t};\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic isPrimitive = (o) => !Array.isArray(o) && (this.isBool(o) || this.isDate(o) || this.isNumber(o) || this.isString(o));\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic nonNull = value => !GSUtil.isNull(value);\r\n\r\n\tstatic asArray(val) {\r\n\t\treturn Array.isArray(val) ? val : [val];\r\n\t}\r\n\r\n\tstatic asNum(val, dft = 0, language) {\r\n\t\tlanguage = language || GSUtil.language;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(language);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default language\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get language() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(language) {\r\n\t\treturn Intl.NumberFormat(language).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(language) {\r\n\t\treturn Intl.NumberFormat(language).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Check if number is in range, inclusive\r\n\t * @param {Number} x \r\n\t * @param {Number} min \r\n\t * @param {Number} max \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic inRange(x = 0, min = 0, max = 0) {\r\n\t\treturn x >= min && x <= max;\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(language = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(language).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\t\t\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t\t\"\\n\": '<br>',\r\n\t\t\t\"\\r\": '<br>',\r\n\t\t\t\"\\t\": '&nbsp;&nbsp;&nbsp;&nbsp;',\r\n\t\t\t' ': '&nbsp;',\r\n\t\t\t'\\\\': '&#x5C;',\r\n\t\t\t'`': '&#x60;'\r\n\t\t};\r\n\t\tconst reg = new RegExp(`[${Object.keys(map).join('')}]`, 'ig');\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\t\t\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() === right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tif (time <= 0) return;\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to write to the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async writeToClipboard(value = '') {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-write\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.writeText(value);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to read from the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async readFromClipboard() {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-read\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.readText();\r\n\t\t}\r\n\t\treturn '';\r\n\t}\t\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type generator function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunctionGenerator(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const GeneratorFunction = (function*(){}).constructor;\r\n        return fn instanceof GeneratorFunction;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\nconst isProxy = Symbol(\"isProxy\")\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribute name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.asBool(val)) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return val;\r\n\t\tconst v = el.getAttribute(name) ?? val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '{}') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.toJson(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\t//GSAttr.toggle(el, name, GSUtil.asBool(val));\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string} val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '{}') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {})\r\n\t\t.filter(kv => kv[0] != 'items')\r\n\t\t.filter(kv => kv[0][0] != '#')\r\n\t\t.filter(kv => kv[0][0] != '$')\r\n\t\t.map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @param {HTMLElement} host The host element to proxify\r\n\t * @param {Object} [opt={}] Options object describing attribute mapping and types\r\n\t * @param {String} [recursive='items'] Property name for recursive proxification of children\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop] = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop];\r\n\t\t\t\tif (prop === 'isProxy') return isProxy;\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\t\t\t\t\r\n\t\t\t\tconst tmp = opt; // Object.hasOwn(opt, prop) ? opt : target;\r\n\t\t\t\t\r\n\t\t\t\tconst type = tmp[prop]?.type;\r\n\t\t\t\tconst safe = tmp[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = tmp[prop]?.default;\r\n\t\t\t\tconst multi = tmp[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = tmp[prop]?.attribute || prop;\r\n\t\t\t\tlet val = target.hasAttribute(prop) ? GSAttr.get(target, prop) : target[prop];\r\n\r\n\t\t\t\tif (GSFunction.isFunction(val)) return val.bind(target);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computedStyleMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        if (GSCSSMap.#modern) return GSUtil.asNum(val?.value);\r\n        const num = val?.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift();\r\n        return GSUtil.asNum(num);\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #language = navigator.language;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, language) {\r\n        const me = this;\r\n        if (language) me.language = language;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const dayOffset = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + dayOffset).split(' ');\r\n        /*\r\n        const emptyDays =  first === 0 ? 0 : first + dayOffset;\r\n        const days = Array.from({ length: emptyDays }, () => '');\r\n        */\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get language() {\r\n        return this.#language;\r\n    }\r\n\r\n    set language(val) {\r\n        this.#language = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, language = navigator.language, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.language = language;\r\n        tmp.setDate(1);\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, language = navigator.language, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.language = language;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#language)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#language, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, language) {\r\n        format = format || GSUtil.getDateFormat(language);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    /**\r\n     * Check if a year is a leap year\r\n     * @param {number} year \r\n     * @returns {Boolean}\r\n     */\r\n    static isLeapYear(year) {\r\n        return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, language: {}, extract: {}, key: { type: Boolean } };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static unique(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * TODO: improve https://www.geeksforgeeks.org/how-to-convert-array-of-objects-into-unique-array-of-objects-in-javascript/\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @param {Boolean} advanced Used when data is Object instead of string\r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = [], advanced = false) {\r\n        if (advanced) {\r\n            return [...new Set([...first, ...second].map(JSON.stringify))].map(JSON.parse);\r\n        }\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', language:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const language = cfg.language || GSUtil.language;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        // intercept overrides; used b GS-TABLE cell Ui remapping\r\n        if (cfg.childElementCount > 0) {\r\n            const el = cfg.querySelector(`gs-item[value=\"${val}\"]`);\r\n            return GSAttr.get(el, \"map\", val);\r\n        }\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                if (GSUtil.isNumber(val)) return new GSDate(val).format(cfg.format, language);\r\n                if (cfg.format) return GSDate.parse(val, cfg.format, language);\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, language);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, language) : val;\r\n            case 'string':\r\n            case 'text':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(language);\r\n                    return new GSDate(val).format(fmt, language);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, language);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(language, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static *filter(data = [], filter = [], fields, limit = 0) {\r\n        let cnt = 0;\r\n        let sts = false;\r\n        for (let rec of data) {\r\n            sts = GSData.filterRecord(rec, filter, fields);\r\n            if (sts) {\r\n                cnt++\r\n                yield rec;\r\n            }\r\n            if (limit > 0 && cnt >= limit) break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields, limit = 0) {\r\n        data = Array.isArray(data) ? data : [data];\r\n        filter = Array.isArray(filter) ? filter : [filter];\r\n        if (filter.length === 0) return data;\r\n        return [...GSData.filter(data, filter, fields, limit)];\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = GSUtil.isPrimitive(filter);\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter, fields);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (GSData.filterValue(value, filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter, fields) {\r\n\r\n        let primitive = false;\r\n        let found = true;\r\n        let value = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            primitive = GSUtil.isPrimitive(flt);\r\n            if (primitive) {\r\n                found = found && GSData.filterSimple(rec, flt, fields);\r\n            } else {\r\n                value = rec[flt.name];\r\n                if (flt.name) {\r\n                    found = found && GSData.filterValue(value, flt)\r\n                } else {\r\n                    found = found && GSData.filterSimple(rec, flt.value, fields);\r\n                }\r\n            }\r\n\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static filterValue(value, filter) {\r\n        const toCheck = GSUtil.isPrimitive(filter) ? filter : filter.value;\r\n        if (GSUtil.isDate(value)) {\r\n            return GSData.matchDate(value, filter);\r\n        } else if (GSUtil.isNumber(value)) {\r\n            return GSData.matchNumber(value, GSUtil.asNum(toCheck, null), filter.op);\r\n        } else {\r\n            return (GSUtil.normalize(value)).toLocaleLowerCase().includes(GSUtil.normalize(toCheck).toLocaleLowerCase());\r\n        }\r\n    }\r\n\r\n    static matchDate(val, filter, language) {\r\n\r\n        if (typeof filter === 'string') {\r\n            const value = '' + filter;\r\n            const local = val.toLocaleDateString(language);\r\n            const iso = val.toISOString();\r\n            return local.includes(value) || iso.includes(value);\r\n        }\r\n\r\n        if (!filter.value) return false;\r\n\r\n        const qry = filter.value instanceof Date ? 'date' : typeof filter.value;\r\n\r\n        switch (qry) {\r\n            case 'number':\r\n                return GSData.matchNumber(val.getTime(), filter.value, filter.op);\r\n            case 'date':\r\n                return GSData.matchNumber(val.getTime(), filter.value.getTime(), filter.op);\r\n        }\r\n\r\n        return GSData.matchDate(val, '' + filter.value, filter.language);\r\n    }\r\n\r\n    /**\r\n     * Match number by operator\r\n     * @param {*} value \r\n     * @param {*} query \r\n     * @param {*} operator \r\n     */\r\n    static matchNumber(value = 0, query = 0, operator = 'eq') {\r\n        switch (operator) {\r\n            case 'gt': return query > value;\r\n            case 'lt': return query < value;\r\n            case 'ge': return query >= value;\r\n            case 'le': return query <= value;\r\n        }\r\n        return value === query;\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToObject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToObject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToObject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToObject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name, partial = false) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj[n][i] : null;\r\n        } else if (obj.hasOwnProperty(n)) {\r\n            obj = partial ? obj[n] || obj : obj[n];\r\n        } else {\r\n            obj = null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n\tstatic readFromObject(obj, name) {\r\n        if (obj?.hasOwnProperty(name)) return GSData.readFromProperty(obj, name);\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    /**\r\n     * Create a deep clone of an object\r\n     * @param {Object} obj \r\n     * @returns {Object}\r\n     */\r\n    static deepClone(obj) {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Recursevly clean child elements. Helper for GC\r\n\t * @param {*} owner \r\n\t */\r\n\tstatic cleanup(owner) {\r\n\t\tArray.from(GSDOM.walk(owner, false, true, false))\r\n\t\t.forEach(el => {\r\n\t\t\tif (GSDOM.isTemplateElement(el)) GSDOM.cleanup(el.content);\r\n\t\t\tel.remove?.();\r\n\t\t\tel.innerHTML = '';\r\n\t\t\tel.nodeValue = undefined;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} shadow \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el, shadow = false) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()), shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSelectElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSelect(el) {\r\n\t\treturn el instanceof HTMLSelectElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSlotElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSlotElement(el) {\r\n\t\treturn el instanceof HTMLSlotElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is inside shadowDom\r\n\t * @param {*} el \r\n\t */\r\n\tstatic isShadowed(el) {\r\n\t\treturn GSDOM.parentAll(el).filter(e => e instanceof ShadowRoot).next()?.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @param {Number} level How many levels to walk, 0 = all\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry, levels = 0) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tlevels = GSUtil.asNum(levels, 0);\r\n\t\tconst limit = levels > 0;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t\tif (limit && --levels == 0) return null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el, defaults = false) {\r\n\t\tlet val = null;\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\t\tval = el.value ? el.valueAsNumber : el.value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'number':\r\n\t\t\t\tval = el.value ? el.valueAsNumber : 0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\tval = Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (GSUtil.isStringNonEmpty(el.value)) {\r\n\t\t\t\t\tval = el.checked ? el.value : null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tval = el.checked;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tval = el.value;\r\n\t\t}\r\n\r\n\t\tif (GSUtil.isNull(val) && defaults) {\r\n\t\t\tval = el.defaultValue;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el, defaults);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromValue(el, val, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (GSUtil.isStringNonEmpty(el.value)) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tif (defaults) el.defaultValue = el.checked;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = GSUtil.normalize(data);\r\n\t\t\t\tif (defaults) el.defaultValue = el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true, defaults = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => GSDOM.fromElement2Object(el, params, defaults));\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @param {Boolean} defaults Set default value for form reset  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output', defaults = false) {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\t// if (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj, defaults));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromObject2Element(el, obj, defaults = false) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\tGSDOM.fromValue(el, val, defaults);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement (input) value to JSON Object  \r\n\t * @param {HTMLElement} owner Element value source\r\n\t * @param {Object} obj Object to populate \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromElement2Object(el, obj, defaults = false, noEmpty = false) {\r\n\t\tif (el?.name) {\r\n\t\t\tif (noEmpty && GSUtil.isStringEmpty(el.value)) return obj;\r\n\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\tGSData.writeToObject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t\t} else if (el.checked) {\r\n\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\tGSData.writeToObject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.warn('Skipping element, name not defined!', el);\r\n\t\t}\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  If false, will include #tagName\r\n\t * @param {Object} definitions Json data type definitions\t\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false, definitions) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive, plain, definitions));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\t//obj.dataset = Object.assign({}, own.dataset);\r\n\r\n\t\tconst props = definitions || GSDOM.allProperties(own);\r\n\t\tArray.from(own.attributes).forEach(v => {\r\n\t\t\tconst type = props[v.name]?.type;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase Boolean:\r\n\t\t\t\t\tobj[v.name] = own.hasAttribute(v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Number:\r\n\t\t\t\t\tobj[v.name] = GSAttr.getAsNum(own, v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tobj[v.name] = v.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain, definitions));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj)\r\n\t\t\t.filter(v => v != 'items')\r\n\t\t\t.filter(v => v[0] != '#')\r\n\t\t\t.filter(v => v[0] != '$')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (obj[\"#def\"]) {\r\n\t\t\tel[Symbol.for(\"#def\")] = obj[\"#def\"];\r\n\t\t}\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj)\r\n\t\t\t.filter(v => v != 'items')\r\n\t\t\t.filter(v => v[0] != '#')\r\n\t\t\t.filter(v => v[0] != '$')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tgroup = GSUtil.capitalizeAttr(group);\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tgroup = GSUtil.capitalizeAttr(group);\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', '');\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own\r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t */\r\n\tstatic setValue(qry, val, own, defaults = false) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\t/**\r\n\t * Reset form element\r\n\t * @param {*} element \r\n\t * @returns \r\n\t */\r\n\tstatic reset(element) {\r\n\t\tif (GSDOM.isFormElement(element)) {\r\n\t\t\tif (!GSDOM.resetSelect(element)) {\r\n\t\t\t\telement.dataset.typed = false;\r\n\t\t\t\telement.value = element.defaultValue;\r\n\t\t\t\tGSDOM.#dispatch(element);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reset select element to default value\r\n\t * @param {HTMLSelectElement} element \r\n\t */\r\n\tstatic resetSelect(element) {\r\n\t\tif (GSDOM.isSelect(element)) {\r\n\t\t\tArray.from(element.options).forEach(el => el.selected = el.hasAttribute('selected'));\r\n\t\t\tGSDOM.#dispatch(element);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #dispatch(element) {\r\n\t\telement.dispatchEvent(new Event('change', { bubbles: true, composed: true }));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Extract and merge all static properties definition from WebComponent instance\r\n\t * @param {GSElement} obj \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic allProperties(obj) {\r\n\t\tconst list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n\t\tlist.push(obj.constructor?.properties || obj.properties);\r\n\t\treturn GSData.mergeObjects(list);\r\n\t}\r\n\r\n\t/**\r\n\t * Return element template ref\r\n\t * @param {GSElement} host \r\n\t * @returns \r\n\t */\r\n\tstatic templateRef(host) {\r\n\t\tif (!host) return;\r\n\t\tif (host.tagName === 'GS-TEMPLATE') return host.src;\r\n\t\treturn host.template || host.query?.('template', false);\r\n\t}\r\n\r\n\tstatic #globalDispatch(name, opt) {\r\n\t\tqueueMicrotask(() => {\r\n\t\t\tglobalThis.dispatchEvent?.(new CustomEvent(name, opt));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Register class as WebComponent to the browser\r\n\t * @param {String} name \r\n\t * @param {class} clazz Optional, if not set, use self\r\n\t * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n\t */\r\n\tstatic define(name, clazz, opt) {\r\n\t\tif (!customElements.get(name)) {\r\n\t\t\tcustomElements.define(name, clazz, opt);\r\n\t\t\tGSDOM.#globalDispatch(name, { detail: { customElements: true } });\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t\tGSDOM.#globalDispatch('gs-base-ready', {\r\n\t\t\tdetail: {\r\n\t\t\t\tmessage: 'GS Base is ready',\r\n\t\t\t\ttime: new Date(),\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #suspended = 0; // Corrected typo\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 0, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error('Error waiting for page load:', e); // Improved error handling\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (GSEvents.#loaded) {\r\n\t\t\tawait GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.sendSuspended(target, name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#suspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#suspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#suspended > 0) GSEvents.#suspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, evt => {\r\n\t\t\t\t\tsignal.removeEventListener('abort', reject);\r\n\t\t\t\t\tcallback?.(evt);\r\n\t\t\t\t\tresolve(evt);\r\n\t\t\t\t}, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event\r\n\t *  default - prevent system default event handling\r\n\t *  propagation - prevent all bubbling\r\n\t *  immedate - prevent all bubbling + this element \r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, defaults = true, propagate = true, immediate = true) {\r\n\t\tif (e) {\r\n\t\t\tif (defaults) e.preventDefault?.();\r\n\t\t\tif (propagate) e.stopPropagation?.();\r\n\t\t\tif (immediate) e.stopImmediatePropagation?.();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tif (!GSUtil.isString(name) || name.length === 0) return false;\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner (used to store event handler for later release by element destruction )\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic detachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if available.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = GSUtil.isString(data) ? data : data.action || data.data?.action;\r\n\t\t\tGSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t\tGSEvents.waitPageLoad();\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(this.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {Boolean} A status of successful observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el, opt) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el, opt);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {Boolean} forRemove If \"true\", return injection filter functions, else removal functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {Boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {Boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {Boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {Boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {Boolean} forRemove - call on node remove or add\r\n     * @param {HTMLElement} target - element to monitor\r\n     * @returns {Boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {Boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {Boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = (style || '').toString();\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop();\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n    * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\nimport { gsstyles } from \"./style.mjs\";\r\n\r\n/**\r\n * Cache for dynamically loaded styles.\r\n * Used to share styles among GS-* WebComponents\r\n * @class\r\n */\r\nexport class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Create a new CSSStyleSheet\r\n\t * @param {String} id Unique ID\r\n\t * @returns {CSSStyleSheet} Created instance\r\n\t */\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {String} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\t\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\t\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {String} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {String} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id, style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/**\r\n\t * Inject CSS used by framework across all shadows\r\n\t * @param {string} css CSS string to inject\r\n\t * @param {number} [hash=0] Optional hash for the style\r\n\t */\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSID.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(gsstyles);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from './GSDOM.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSDOMObserver } from './GSDOMObserver.mjs';\r\nimport { GSCacheStyles } from './GSCacheStyles.mjs';\r\n\r\nconst adoptedId = Symbol();\r\nconst observer = Symbol();\r\n\r\n/**\r\n * Monitor HTMLStyleElement & HTMLLinkElement (of type stylesheet) for changes.\r\n * Every such element marked with data-adoptable=\"true\" will be cached and\r\n * will trigger gs-adopted event to notify component controller to update adoptableStyleSheet list\r\n */\r\nexport class GSAdoptedEngine {\r\n\r\n  static timeout = 1000; // Default timeout for adopting stylesheets\r\n  static #timerID = 0;\r\n  static #ID = Date.now();\r\n  static #scheduled = false;\r\n\r\n  static #init() {\r\n    const me = GSAdoptedEngine;\r\n    me.observe(document.head);\r\n    me.#preload();\r\n    me.#timerID = setInterval(() => me.#adopt(), me.timeout);\r\n  }\r\n\r\n  static #clear() {\r\n    const me = GSAdoptedEngine;\r\n    clearInterval(me.#timerID);\r\n    me.#timerID = undefined;\r\n  }\r\n\r\n  static #adopt() {\r\n    const me = GSAdoptedEngine;\r\n    const sheets = me.#adoptable;\r\n    if (sheets.length == 0) return me.#clear();\r\n    sheets.map(s => me.#adoptSheet(s));\r\n    me.update();\r\n  }\r\n\r\n  static update() {\r\n    const me = GSAdoptedEngine;\r\n    if (me.#scheduled) return;\r\n    me.#scheduled = true;\r\n    queueMicrotask(() => {\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          document.adoptedStyleSheets = me.#sorted;\r\n          document.adoptedStyleSheets.id = ++me.#ID;\r\n        } finally {\r\n          me.#scheduled = false;\r\n          globalThis.dispatchEvent(new CustomEvent('gs-adopted'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static #asText(sheet) {\r\n    return Object.values(sheet.cssRules).map(o => o.cssText).join('');\r\n  }\r\n\r\n  static #adoptLink(el) {\r\n    const me = GSAdoptedEngine;\r\n    GSAdoptedEngine.#monitorAttributes(el);\r\n    Array.from(document.styleSheets).filter(s => s.ownerNode === el).map(s => me.#adoptSheet(s));\r\n  }\r\n\r\n  static #adoptSheet(sheet) {\r\n    const me = GSAdoptedEngine;\r\n    const style = me.#asText(sheet);\r\n    return me.#adoptStyle(sheet.ownerNode, style);\r\n  }\r\n\r\n  static #adoptStyle(ownerNode, style) {\r\n    const me = GSAdoptedEngine;\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(style);\r\n    sheet.id = ++me.#ID;\r\n    ownerNode[adoptedId] = sheet.id;\r\n    me.#store(ownerNode, sheet);\r\n    return sheet;\r\n  }\r\n\r\n  static #store(ownerNode, sheet) {\r\n    GSCacheStyles.set(sheet.id, sheet);\r\n  }\r\n\r\n  static #remove(ownerNode, sheet) {\r\n    GSCacheStyles.remove(sheet.id);\r\n    ownerNode[observer]?.disconnect?.();\r\n    ownerNode[observer] = undefined;\r\n  }\r\n\r\n  static get #sorted() {\r\n    return GSCacheStyles.styles;\r\n  }\r\n\r\n  /**\r\n   * List of adoptable styles or links. Filter only those with dataset.adoptable=true\r\n   * @returns {HTMLStyleElement|HTMLLinkElement}\r\n   */\r\n  static get #adoptable() {\r\n    return Object.values(document.styleSheets)\r\n      .filter(o => o.ownerNode)\r\n      .filter(o => o.ownerNode.dataset.adoptable)\r\n      .filter(o => !o.ownerNode[adoptedId]);\r\n  }\r\n\r\n  static #preload() {\r\n    GSDOM.queryAll(document.head, 'link[rel=\"preload\"][as=\"style\"]')\r\n    .forEach(el => {\r\n      el.remove();\r\n      document.head.appendChild(el);\r\n    });\r\n  }\r\n\r\n  static #onAttributeChange(mutationList) {\r\n    mutationList.forEach((mutation) => {\r\n       const id = mutation.target[adoptedId];\r\n       const style = GSCacheStyles.get(id);\r\n       if(style) style.disabled = mutation.target.hasAttribute('disabled');\r\n    });\r\n    GSAdoptedEngine.update();\r\n  }\r\n  \r\n  static #monitorAttributes(element) {\r\n    const me = GSAdoptedEngine;\r\n    const callback = me.#onAttributeChange.bind(me);\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(element, {\r\n      attributeFilter: [\"disabled\"],\r\n      attributeOldValue: true,\r\n      subtree: false,\r\n    });\r\n    return observer;\r\n  }\r\n  \r\n  /**\r\n   * Filter style and link(css) elements which will be shared\r\n   * with all web components. Filter only those marked with data-adoptable\r\n   * @param {HTMLElement} el \r\n   * @returns {Boolean} Return true if monitored element is selected for further processing\r\n   */\r\n  static #onMonitorFilter(el) {\r\n    return (Boolean(el.dataset?.adoptable))\r\n      && (\r\n        (el instanceof HTMLLinkElement && (el.rel === 'stylesheet' || el.as === \"style\"))\r\n        || el instanceof HTMLStyleElement\r\n      );\r\n  }\r\n\r\n  /**\r\n   * When style added to the HTML page, attach it to the WebComponents\r\n   * @param {HTMLStyleElement|HTMLLinkElement} el \r\n   */\r\n  static #onMonitorConnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    if (el instanceof HTMLStyleElement) {\r\n      me.#adoptStyle(el, el.innerText);\r\n      me.update();\r\n    } else if (el instanceof HTMLLinkElement) {\r\n      GSEvents.wait(el, 'load', 0, false).then(e => {\r\n        if (el.rel === 'preload') return el.rel = \"stylesheet\";\r\n        me.#adoptLink(e.target);\r\n        me.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When style removed, remove from adoptable and update\r\n   * @param {HTMLElement} el \r\n   */\r\n  static #onMonitorDisconnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    me.#sorted.filter(o => o.id === el[adoptedId])\r\n          .forEach(o => me.#remove(el, o));\r\n    me.update();\r\n  }\r\n\r\n  /**\r\n   * Observe DOM tree for mutations\r\n   * @param {HTMLElement} owner Root element to watch DOM tree from \r\n   */\r\n  static observe(owner) {\r\n    const me = GSAdoptedEngine;\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorConnect, false, owner);\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorDisconnect, true, owner);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSVersion } from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static ROUTER_URL = globalThis.GS_ROUTER_URL || location.origin;\r\n\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        const rootURL = GSLoader.#defaultURL;\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            GSLoader.TEMPLATE_URL = rootURL;\r\n            globalThis.GS_TEMPLATE_URL = rootURL;\r\n        }\r\n\r\n        if (!globalThis.GS_ROUTER_URL) {\r\n            GSLoader.ROUTER_URL = rootURL;\r\n            globalThis.GS_ROUTER_URL = rootURL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n\r\n    static get #defaultURL() {\r\n        const url = location.href.split('?').pop();\r\n        const seg = url.split('/');\r\n        return url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n    }\r\n\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        //if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        }\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used to load router definition from virtual path\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getRouter(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? GSUtil.toJson(el.innerHTML) : {};\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getRouterURL(def);\r\n        return GSLoader.loadSafe(def, 'GET', null, true);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getRouterURL(url = '') {\r\n        url = url.startsWith('//') ? GSLoader.#routerURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #routerURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#routerPath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #routerPath() {\r\n        return GSLoader.ROUTER_URL ? GSLoader.ROUTER_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP method get|put|post\r\n     * @param {Object} headers HTTP request headers in JSON key/value pairs\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @param {} body Data to send in a request \r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            // TODO - detect if binary\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t static clear() {\r\n\t\tGSTemplateCache.#store.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by its name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve already existing template by name,\r\n\t * or inject a new one if it does not exist already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} tpl Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t// return document.getElementById(tpl.slice(1));\r\n\t\t\treturn GSDOM.query(`template[id=\"${tpl.slice(1)}\"]`, true);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-attribute - toggle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-call - calls a function on a given target (multiple functions supported)\r\n * - data-gs-event - emit event (can bubble or compose)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: \r\n * data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * \r\n * data-gs-target determine element on which to execute,\r\n * if not specified, it means current element\r\n * \r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n        \r\n        event: { attribute: 'data-gs-event' },\r\n        bubbles: { attribute: 'data-gs-bubbles', type: Boolean },\r\n        composed: { attribute: 'data-gs-composed', type: Boolean },\r\n\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        hashed: { attribute: 'data-gs-hashed', type: Boolean },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el) {\r\n        const me = this;\r\n        me.#host =  el.isProxy ? el.self : el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = el.isProxy ? el : GSAttributeHandler.proxify(me.#host);\r\n    }\r\n\r\n    /**\r\n     * Main function to process element data-gs-* attributes\r\n     * @param {Event} e \r\n     */\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    /**\r\n     * Process each individual data-gs-* attribute\r\n     * @param {GSElement} host \r\n     * @param {String|HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleSwap(host, target);\r\n        me.#handleInject(host, target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleEvent(host, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    /**\r\n     * Bind provided value to the form or form element\r\n     * @param {HTMLFormElement|HTMLInputElement} target \r\n     * @param {Event} evt \r\n     * @returns \r\n     */\r\n    #handleBinding(target, evt) {\r\n        const source = evt?.target?.field || evt?.target?.form || evt?.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (!(isField || isForm)) return;\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Trigger 'action' event on target to execute specific function\r\n     * @param {GSElement} target \r\n     */\r\n    #handleAction(target) {\r\n        if (this.action) GSEvents.send(target, 'action', this.action, true, true);\r\n    }\r\n\r\n    /**\r\n     * Set target attribute value\r\n     * @param {HTMLElement} target \r\n     * @returns \r\n     */\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    /**\r\n     * Set value to target propery\r\n     * @param {GSElement} target \r\n     * @returns \r\n     */\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle target css class\r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.slice().reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {*} host \r\n     * @param {*} target \r\n     * @param {*} evt \r\n     * @returns \r\n     */\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)(evt);\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send an event to a target\r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    #handleEvent(host, evt) {\r\n        //host.emit?.(this.event, evt, this.bubbles, this.composed, true);\r\n        GSEvents.send(host, this.event, evt, this.bubbles, this.composed, true);\r\n    }\r\n\r\n    #handleContent(host, target, value, clean = false) {\r\n        const me = this;\r\n        if (value) {\r\n            let src = '';\r\n            const useDef = GSUtil.asBool(value);\r\n            if (useDef) {\r\n                src = GSDOM.fromJsonAsString(me.definition);\r\n            } else {                \r\n                src = me.#toHTML(value);                \r\n            }\r\n\r\n            const content = GSDOM.parse(src, true);\r\n\r\n            if (!useDef) {\r\n                GSAttr.jsonToAttr(me.definition, content);\r\n            }\r\n\r\n            if (clean) { \r\n                //target.innerHTML = '';\r\n                GSDOM.cleanup(target);\r\n            }\r\n\r\n            content.dataset.gsHashed = me.hashed;\r\n            me.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Inject HTML to target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleInject(host, target) {\r\n        this.#handleContent(host, target, this.inject, false);\r\n    }\r\n\r\n    /**\r\n     * Swap inner HTML on a target\r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleSwap(host, target) {\r\n        this.#handleContent(host, target, this.swap, true);\r\n    }\r\n\r\n    /**\r\n     * Convert value as URL to a tempalte or as a component name to inject\r\n     * @param {String} value \r\n     * @returns {String}\r\n     */\r\n    #toHTML(value = '') {\r\n        return value.indexOf('/') < 0 ? `<${value}></${value}>` : `<gs-template flat src=\"${value}\"></gs-template>`;\r\n    }\r\n\r\n    /**\r\n     * Load HTML template and apply to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    /**\r\n     * Apply htmltemplate to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} template \r\n     */    \r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    /**\r\n     * Apply html template to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} content \r\n     */    \r\n    #applyContent(host, target, content) {\r\n        if (host?.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    detach(name = 'click') {\r\n        //GSEvents.detachListeners(this.#host);\r\n        const me = this;\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        me.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n        const me = this;\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                //return [GSDOM.root(me.#host)];\r\n                return [me.#host.parentComponent];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n        const list = GSDOM.queryAll(document.body, me.target, false, true).filter(el => el.tagName !== 'GS-ITEM'); \r\n        if (list.length === 0) list.push(me.#host);\r\n        return list;\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get definition() { return this.#proxy[Symbol.for('#def')]; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get event() { return this.#proxy.event; }\r\n    get bubbles() { return this.#proxy.bubbles; }\r\n    get composed() { return this.#proxy.composed; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n    get hashed() { return this.#proxy.hashed; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v[0]));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v[0]));\r\n    }\r\n\r\n    /**\r\n     * Is property value JSON\r\n     */\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    /**\r\n     * Is element attribute value JSON\r\n     */\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    /**\r\n     * Wrap any element into data-gs-* handler\r\n     * @param {HTMLElement} el \r\n     * @returns {Proxy}\r\n     */\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    /**\r\n     * Process data-gs-* attributes on a element\r\n     * @param {HTMLElement} el \r\n     * @param {Event} e \r\n     * @returns \r\n     */\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('data-gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    /**\r\n     * Create a new attribute handler instance\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     * @param {boolean} override If 'false' will skip existing attributes\r\n     */\r\n    static clone(from, to, override = true) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .filter(o => override || !to.hasAttribute(o.attribute))          \r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    /**\r\n     * Check if component is bindable to events\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static isBindable(el) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        return Object.values(def)\r\n            .filter(o => el.hasAttribute(o.attribute))\r\n            .length > 0;\r\n\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBeep class\r\n * @module base/GSBeep\r\n */\r\n\r\n\r\n/**\r\n * A helper class to use browser AudiContext to make tones\r\n * @class\r\n */\r\nexport class GSBeep {\r\n\r\n    static audioCtx = globalThis.AudioContext || globalThis.webkitAudioContext || globalThis.audioContext;\r\n\r\n    /**\r\n     * Helper function to emit a beep sound in the browser using the Web Audio API.\r\n     * \r\n     * @param {number} duration - The duration of the beep sound in milliseconds.\r\n     * @param {number} frequency - The frequency of the beep sound.\r\n     * @param {number} volume - The volume of the beep sound.\r\n     * @param {string} tyoe - The sound type (sine, square, sawtooth, triangle, custom)\r\n     * \r\n     * @returns {Promise} - A promise that resolves when the beep sound is finished.\r\n     */\r\n    static beep(duration = 200, frequency = 440, volume = 1, type = 'sine') {\r\n        return new Promise((resolve, reject) => {\r\n            try{\r\n                if (!GSBeep.isAvailable) return resolve();\r\n                const context = new GSBeep.audioCtx();\r\n                const oscillatorNode = context.createOscillator();\r\n                const gainNode = context.createGain();\r\n                oscillatorNode.connect(gainNode);\r\n\r\n                // Set the oscillator frequency in hertz\r\n                oscillatorNode.frequency.value = frequency;\r\n\r\n                // Set the type of oscillator\r\n                oscillatorNode.type = type;\r\n                gainNode.connect(context.destination);\r\n\r\n                // Set the gain to the volume\r\n                gainNode.gain.value = volume * 0.01;\r\n\r\n                // Start audio with the desired duration\r\n                oscillatorNode.start(context.currentTime);\r\n                oscillatorNode.stop(context.currentTime + duration * 0.001);\r\n\r\n                // Resolve the promise when the sound is finished\r\n                oscillatorNode.onended = () => resolve();                \r\n            }catch(error) {\r\n                reject(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    static get isAvailable() {\r\n        const {isActive, hasBeenActive } =  navigator.userActivation;\r\n        return isActive || hasBeenActive;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promises sequentially\r\n\t * @param {Array<Promise>} ps \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const controller = abortable instanceof AbortController ? abortable : (abortable ? new GSAbortController(timeout) : null);\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        wrap.controller = abortable instanceof AbortController ? abortable : (abortable ? new GSAbortController(timeout) : null);\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n            me.#listeners.delete(o);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport { GSEvent } from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport class GSEventBus {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {String} name EventBus name\r\n     * @param {String} type Event name\r\n     * @param {Object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {String} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {String} name unique buss name\r\n     * @returns {Boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constructor to attach Gesture featuer to an HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {Boolean} swipe Monitor swipe gesture\r\n     * @param {Boolean} tap Monitor tap gesture\r\n     * @param {Boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move: me.#handleTouchMove.bind(me),\r\n            start: me.#handleTouchStart.bind(me),\r\n            end: me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) {\r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 && Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {Number}\r\n     */\r\n    static fingers(e) {\r\n        return e.detail.touches?.length;\r\n    }\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns {GSGesture}\r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport class GSItem extends HTMLElement {\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic properties = {\r\n\t\tactive: { type: Boolean },\r\n\t\tdisabled: { type: Boolean },\r\n\t\tselected: { type: Boolean },\r\n\t\tautofocus: { type: Boolean },\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return template content of GS-ITEM element (if exists)\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tget body() {\r\n\t\tlet tpl = GSAttr.get(this, 'template');\r\n\t\tif (tpl) return `<gs-template flat src=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = this.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item elements\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tget items() {\r\n\t\treturn Array.from(this.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSAttr.get(this, 'name', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent GS-* component\r\n\t */\r\n\tget parentComponent() {\r\n\t\treturn GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n\t}\r\n\t\t\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate that parent element contains only specific childrens\r\n\t * @param {*} own \r\n\t * @param {*} tagName \r\n\t * @returns \r\n\t */\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic collect(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Convert GS-ITEM list to JSON\r\n\t * @param {HTMLElement} root Element containing GS-ITEM childs \r\n\t * @returns {Array} Arary of JSON objects\r\n\t */\r\n\tstatic toJSON(root) {\r\n\t\treturn GSItem.collect(root).map(el => el.asJSON(true));\r\n\t}\r\n\r\n\t/**\r\n\t * Make GS-ITEM attributes JSON compatible \r\n\t * @param {*} root \r\n\t * @param {*} definition \r\n\t * @returns \r\n\t */\r\n    static proxify(root, definition) {        \r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, definition));\r\n    }\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport class GSPopper {\r\n\r\n\t/**\r\n\t * A simple wrapper to get element DOMRect\r\n\t * @param {HTMLElement} el \r\n\t * @returns {DOMRect}\r\n\t */\r\n\tstatic asRect(el) {\r\n\t\treturn el.getBoundingClientRect();\r\n\t}\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = GSPopper.asRect(el);\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = GSPopper.asRect(element);\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tif (!style) return;\r\n\r\n\t\tconst css = {\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '0px',\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.translate = `${obj.x}px ${obj.y}px`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tconst astyle = GSDynamicStyle.dynamicStyle(arrow);\r\n\t\tif (!style) return;\r\n\t\t\r\n\t\tconst css = {\r\n\t\t\tinset: GSPopper.#inset(pos),\r\n\t\t\tposition: 'absolute',\r\n\t\t\tmargin: '0px',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\twidth: 'max-content',\r\n\t\t\theight: 'max-content',\t\t\t\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\t\tastyle.position = 'absolute';\r\n\r\n\t\tconst srect = GSPopper.asRect(source);\r\n\t\tconst arect = GSPopper.asRect(arrow);\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tconst aopt = {\r\n\t\t\ttranslate: `${arr.x}px ${arr.y}px`,\r\n\t\t\ttop: arr.top ? arr.top : '',\r\n\t\t\tleft: arr.left ? arr.left : ''\r\n\t\t}\r\n\r\n\t\tconst opt = {\r\n\t\t\ttranslate : `${obj.x}px ${obj.y}px`\r\n\t\t};\r\n\r\n\t\tObject.assign(style, opt);\r\n\t\tObject.assign(astyle, aopt);\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst opt = {};\r\n\r\n\t\topt.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\topt.left = '';\r\n\t\t\topt.top = '0px';\r\n\t\t\tshift = 0; //pos.isStart ? size : -1 * size;\r\n\t\t\topt.translate = `${shift}px ${arrowPosH / 2}px`;\r\n\t\t} else {\r\n\t\t\topt.top = '';\r\n\t\t\topt.left = '0px';\r\n\t\t\tshift = 0; //pos.isTop ? size : -1 * size;\r\n\t\t\topt.translate = `${arrowPosW}px ${shift}px`;\r\n\t\t}\r\n\r\n\t\tGSDynamicStyle.applyDynamicStyle(arrow, opt);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {\r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSQueryCSS } from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value);\r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n\r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSRouter class\r\n * @module base/GSRouter\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSAttributeHandler } from \"./GSAttributeHandler.mjs\";\r\n\r\n/**\r\n * Class for handling hash based routing.\r\n * Class uses GSAttributeHandler and optional JSON definition to handle routing.\r\n * \r\n * Use globalThis.GS_ROUTER_URL before loading this module to define JSON definition file location\r\n * @Class\r\n */\r\nexport class GSRouter {\r\n\r\n    #logging = true;\r\n    #enabled = false;\r\n    #hashCallback = null;\r\n    #definition = {};\r\n\r\n    constructor() {\r\n        this.#hashCallback = this.#onHashChange.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Loda JSON definition for routing from JSON document.\r\n     * @param {string} url \r\n     * @returns \r\n     */\r\n    async loadDefinition(url) {\r\n        return GSLoader.getRouter(url);\r\n    }\r\n\r\n    /**\r\n     * Initialize routing from provided URL\r\n     * @param {string} url \r\n     * @param {number} wait in ms\r\n     */\r\n    async initialize(url, wait = 0) {\r\n        const me = this;\r\n        if (GSUtil.isStringNonEmpty(url)) {\r\n            me.#definition = await me.loadDefinition(url);\r\n        }\r\n        if (wait > 0) {\r\n            await GSEvents.waitPageLoad(null, null, null, wait);\r\n        }\r\n        me.enable();\r\n        me.#onHashChange();        \r\n    }\r\n\r\n    /**\r\n     * Enable routing\r\n     */\r\n    enable() {\r\n        if (this.#enabled) return;\r\n        GSEvents.on(globalThis, null, 'hashchange', this.#hashCallback);\r\n        this.#enabled = true;\r\n    }\r\n\r\n    /**\r\n     * Disable routing\r\n     */\r\n    disable() {\r\n        GSEvents.off(globalThis, null, 'hashchange', this.#hashCallback);\r\n        this.#enabled = false;\r\n    }\r\n\r\n    /**\r\n     * Register a single route with options\r\n     * @param {string} route Abstract url for a route\r\n     * @param {Object} options \r\n     */\r\n    register(route, options) {\r\n        this.#definition[route] = options;\r\n    }\r\n\r\n    /**\r\n     * Unregister a single route\r\n     * @param {string} route \r\n     */\r\n    unregister(route) {\r\n        delete this.#definition[route];\r\n    }\r\n\r\n    /**\r\n     * Get URL hashbang without hash\r\n     */\r\n    get hash() {\r\n        return location.hash.slice(1);\r\n    }\r\n\r\n    /**\r\n     * Return routing definition object\r\n     */\r\n    get definition() {\r\n        return GSData.deepClone(this.#definition);\r\n    }\r\n\r\n    get log() {\r\n        return this.#logging;\r\n    }\r\n\r\n    set log(val) {\r\n        this.#logging = GSUtil.asBool(val);\r\n    }\r\n\r\n    #onHashChange() {\r\n        const me = this;\r\n        const def = me.#definition[\"#def\"] || {};\r\n        const defaults = me.#definition[\"#defaults\"] || {};\r\n        const route = me.#definition[me.hash];\r\n        if (route) {\r\n            const el = GSDOM.fromJson(Object.assign({}, route, def, defaults));\r\n            el.dataset.gsHashed = true;\r\n            const px = GSAttributeHandler.proxify(el);\r\n            GSAttributeHandler.process(px);\r\n        } else if (me.#logging) {\r\n            GSLog.warn(null, `No routing definition found for: ${me.hash}`);\r\n        }\r\n    }\r\n\r\n    static {\r\n        if (globalThis.GS_DEFINITION_URL) {\r\n            new GSRouter().initialize(globalThis.GS_DEFINITION_URL, globalThis.GS_ROUTER_WAIT);\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTheme class\r\n * @module base/GSTheme\r\n */\r\n\r\n/**\r\n * Switch between dark and light mode\r\n * @Class\r\n */\r\nexport class GSTheme {\r\n\r\n    static #STORAGE = 'gs-theme-mode';\r\n\r\n    /**\r\n     * Changes the theme to 'dark mode' and save settings to local stroage.\r\n     * Basically, replaces/toggles every CSS class that has '-light' class with '-dark'\r\n     * @param {HTMLElement} el \r\n     */\r\n    static darkMode(el) {\r\n        GSTheme.#switch(el, 'light', 'dark');\r\n    }\r\n\r\n    /**\r\n     * Changes the theme to 'light mode' and save settings to local stroage.\r\n     * @param {HTMLElement} el \r\n     */\r\n    static lightMode(el) {\r\n        GSTheme.#switch(el, 'dark', 'light');\r\n    }\r\n\r\n    static #switch(el, from = 'light', to = 'dark') {\r\n\r\n        const root = el || document.body;\r\n\r\n        // TODO  switch dark/light mode ?!??!? \r\n\r\n        // save last state\r\n        GSTheme.theme = to;\r\n    }\r\n\r\n    static get theme() {\r\n        return localStorage.getItem(GSTheme.#STORAGE);\r\n    }\r\n\r\n    static set theme(val) {\r\n        localStorage.setItem(GSTheme.#STORAGE, val);\r\n        window.dispatchEvent(new CustomEvent('gs-theme', { detail: val }));\r\n        const htmlEl = document.head.parentElement;\r\n        if (val) {\r\n            htmlEl.dataset.bsTheme = val;\r\n        } else {\r\n            delete htmlEl.dataset.bsTheme;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get system default theme by media query\r\n     * @returns {String} dark|light \r\n     */\r\n    static getSystemDefaultTheme() {\r\n        const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\r\n        return darkThemeMq.matches ? 'dark' : 'light';\r\n    }\r\n\r\n    static #onTheme(e) {\r\n        const q = new URLSearchParams(location.hash.slice(1));\r\n        GSTheme.theme = q.get('theme');\r\n    }\r\n\r\n    static #setup() {\r\n        window.addEventListener('hashchange', GSTheme.#onTheme)\r\n        let settings = localStorage.getItem(GSTheme.#STORAGE);\r\n        if (settings == null) {\r\n            settings = GSTheme.getSystemDefaultTheme();\r\n        }\r\n\r\n\r\n        if (settings == 'dark') return GSTheme.darkMode();\r\n        if (settings == 'light') return GSTheme.lightMode();\r\n        // TODO switch\r\n\r\n    }\r\n\r\n    static {\r\n        GSTheme.#setup();\r\n        globalThis.GSTheme = GSTheme;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst tree = new BinaryTree(1, 'AB');\r\n\r\ntree.insert(1, 11, 'AC');\r\ntree.insert(1, 12, 'BC');\r\ntree.insert(12, 121, 'BG', { right: true });\r\n\r\n[...tree.preOrderTraversal()].map(x => x.value);\r\n// ['AB', 'AC', 'BC', 'BCG']\r\n\r\n[...tree.inOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB', 'BC', 'BG']\r\n\r\ntree.value;                // 'AB'\r\ntree.hasChildren;          // true\r\n\r\ntree.find(12).isLeaf;           // false\r\ntree.find(121).isLeaf;          // true\r\ntree.find(121).parent.value;    // 'BC'\r\ntree.find(12).left;             // null\r\ntree.find(12).right.value;      // 'BG'\r\n\r\ntree.remove(12);\r\n\r\n[...tree.postOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB']\r\n*/\r\n\r\n/**\r\n * Binary Tree Node data holder\r\n */\r\nexport class BinaryTreeNode {\r\n\r\n    constructor(key, value = key, parent = null) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n\r\n    /**\r\n     * Check if both left and right are empty.\r\n     */\r\n    get isLeaf() {\r\n        return this.left === null && this.right === null;\r\n    }\r\n\r\n    /**\r\n     * Check if node has children\r\n     */\r\n    get hasChildren() {\r\n        return !this.isLeaf;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Binary tree implementation\r\n */\r\nexport class BinaryTree extends BinaryTreeNode {\r\n\r\n    constructor(key, value = key) {\r\n        super(key, value);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in in-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *inOrderTraversal(node = this) {\r\n        if (node.left) yield* this.inOrderTraversal(node.left);\r\n        yield node;\r\n        if (node.right) yield* this.inOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in post-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *postOrderTraversal(node = this) {\r\n        if (node.left) yield* this.postOrderTraversal(node.left);\r\n        if (node.right) yield* this.postOrderTraversal(node.right);\r\n        yield node;\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in pre-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *preOrderTraversal(node = this) {\r\n        yield node;\r\n        if (node.left) yield* this.preOrderTraversal(node.left);\r\n        if (node.right) yield* this.preOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to find the given parent node and \r\n     * insert a new child BinaryTreeNode either as the left or right child, \r\n     * depending on the passed options object.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @param {*} options \r\n     * @returns {boolean} Return true if data inserted\r\n     */\r\n    insert(\r\n        parentNodeKey,\r\n        key,\r\n        value = key,\r\n        { left, right } = { left: true, right: true }\r\n    ) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === parentNodeKey) {\r\n                const canInsertLeft = left && node.left === null;\r\n                const canInsertRight = right && node.right === null;\r\n                if (!canInsertLeft && !canInsertRight) return false;\r\n                if (canInsertLeft) {\r\n                    node.left = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n                if (canInsertRight) {\r\n                    node.right = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to remove a BinaryTreeNode from the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.left.key === key) {\r\n                node.left = null;\r\n                return true;\r\n            }\r\n            if (node.right.key === key) {\r\n                node.right = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to retrieve the given node in the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    find(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new DoublyLinkedList();\r\n\r\nlist.insertFirst(1);\r\nlist.insertFirst(2);\r\nlist.insertFirst(3);\r\nlist.insertLast(4);\r\nlist.insertAt(3, 5);\r\n\r\nlist.size;                      // 5\r\nlist.head.value;                // 3\r\nlist.head.next.value;           // 2\r\nlist.tail.value;                // 4\r\nlist.tail.previous.value;       // 5\r\n[...list].map(e => e.value);    // [3, 2, 1, 5, 4]\r\n\r\nlist.removeAt(1);               // 2\r\nlist.getAt(1).value;            // 1\r\nlist.head.next.value;           // 1\r\n[...list].map(e => e.value);    // [3, 1, 5, 4]\r\n\r\nlist.reverse();\r\n[...list].map(e => e.value);    // [4, 5, 1, 3]\r\n\r\nlist.clear();\r\nlist.size;                      // 0\r\n*/\r\n\r\n/**\r\n *  Linear data structure following doubly linked list order of operations.\r\n */\r\nexport class Node {\r\n\r\n    value = null;\r\n    next = null;\r\n    previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    release() {\r\n        this.value = undefined;\r\n        this.next = undefined;\r\n        this.previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DoublyLinkedList {\r\n\r\n    #nodes = [];\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     */\r\n    get size() {\r\n        return this.#nodes.length;\r\n    }\r\n\r\n    /**\r\n     * First element in the list\r\n     */\r\n    get head() {\r\n        return this.size ? this.#nodes[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Last elemet in the list\r\n     */\r\n    get tail() {\r\n        return this.size ? this.#nodes[this.size - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Create new linked node\r\n     * @param {*} value \r\n     * @param {*} nextNode \r\n     * @param {*} previousNode \r\n     * @returns \r\n     */\r\n    create(value, nextNode, previousNode) {\r\n        return new Node(value, nextNode, previousNode);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the given position in the list\r\n     * @param {*} index \r\n     * @param {*} value \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    insertAt(index, value, safe) {\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index] || null;\r\n        const node = this.create(value, nextNode, previousNode);\r\n\r\n        if (previousNode) previousNode.next = node;\r\n        if (nextNode) nextNode.previous = node;\r\n        this.#nodes.splice(index, 0, node);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the beginning of the list\r\n     * @param {*} value \r\n     */\r\n    insertFirst(value) {\r\n        this.insertAt(0, value);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the end of the list\r\n     * @param {*} value \r\n     */\r\n    insertLast(value) {\r\n        this.insertAt(this.size, value);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data in the given index\r\n     * @param {Number} index \r\n     * @returns \r\n     */\r\n    getAt(index) {\r\n        return this.#nodes[index];\r\n    }\r\n\r\n    indexOf(val) {\r\n        return this.#nodes.indexOf(val);\r\n    }\r\n\r\n    /**\r\n     * Remove the data at the given index\r\n     * @param {*} index \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    removeAt(index, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index + 1] || null;\r\n\r\n        if (previousNode) previousNode.next = nextNode;\r\n        if (nextNode) nextNode.previous = previousNode;\r\n\r\n        return this.#nodes.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    clear(full = true) {\r\n        if (full) this.#nodes.forEach(o => o.release());\r\n        this.#nodes = [];\r\n    }\r\n\r\n    /**\r\n     * Reverse data order\r\n     */\r\n    reverse() {\r\n        this.#nodes = this.#nodes.reduce((acc, { value }) => {\r\n            const nextNode = acc[0] || null;\r\n            const node = new Node(value, nextNode, null);\r\n            if (nextNode) nextNode.previous = node;\r\n            return [node, ...acc];\r\n        }, []);\r\n    }\r\n\r\n    toArray() {\r\n        return this.#nodes.map(e => e.value);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#nodes;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield* this.#nodes;\r\n    }\r\n\r\n    #validate(index, safe = false) {\r\n        const isInvalid = this.#isInvalidIndex(index);\r\n        if (isInvalid) {\r\n            if (safe) {\r\n                console.log(this.#error());\r\n            } else {\r\n                throw new Error(this.#error());\r\n            }\r\n        }\r\n        return !isInvalid;\r\n    }\r\n\r\n    #isInvalidIndex(index) {\r\n        return !Number.isInteger(index) || index < 0 || index > this.size;\r\n    }\r\n\r\n    #error() {\r\n        return `Invalid index. Current length is ${this.size}.`;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        const list = new DoublyLinkedList();\r\n        if (Array.isArray(data)) data.forEach(v => list.insertLast(v));\r\n        return list;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new LinkedList(1);\r\n\r\nlist.append(2).append(3).append(4);\r\n\r\n*/\r\n\r\n/**\r\n * Node data holder\r\n */\r\nexport class LinkedList {\r\n\r\n    #value = null;\r\n    #next = null;\r\n    #previous = null;\r\n\r\n    constructor(value) {\r\n        this.#value = value;\r\n    }\r\n\r\n    [Symbol.for('gs-next')](val) {\r\n        this.#next = val;\r\n    }\r\n\r\n    [Symbol.for('gs-prev')](val) {\r\n        this.#previous = val;\r\n    }\r\n\r\n    remove() {\r\n        const me = this;\r\n        me.#previous?.[Symbol.for('gs-next')](me.#next);\r\n        me.#next?.[Symbol.for('gs-prev')](me.#previous);\r\n        return me.#release();\r\n    }\r\n\r\n    delete() {\r\n        return this.remove();\r\n    }\r\n    \r\n    /**\r\n     * Append node after \r\n     * @param {*} node \r\n     */\r\n    append(node) {\r\n\r\n        node = LinkedList.wrap(node);\r\n        node.#next = this.#next;\r\n        node.#previous = this;\r\n        this.#next = node;\r\n        return node;\r\n    }\r\n\r\n    add(node) {\r\n        return this.append(node);\r\n    }\r\n\r\n    /**\r\n     * Insert node before\r\n     * @param {*} node \r\n     */\r\n    insert(node) {\r\n        node = LinkedList.wrap(node);\r\n        node.#previous = this.#previous;\r\n        node.#next = this;\r\n        this.#previous = node;\r\n        return node;\r\n    }\r\n\r\n    update(val) {\r\n        this.#value = val;\r\n        return this;\r\n    }\r\n\r\n    find(cb) {\r\n        return this.iterator.find(cb);\r\n    }\r\n\r\n    filter(cb) {\r\n        return this.iterator.filter(cb);\r\n    }\r\n\r\n    map(cb) {\r\n        return this.iterator.map(cb);\r\n    }\r\n\r\n    forEach(cb) {\r\n        for (let n of this.iterator) {\r\n            cb(n, -1, this);\r\n        }\r\n    }\r\n    \r\n    every(cb) {\r\n        let result = undefined;\r\n        for (let n of this.iterator) {\r\n            result = cb(n, -1, this);\r\n            if (result) break;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    toArray(values = true) {\r\n        return values ? this.asValues : this.asNodes;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    #release() {\r\n        this.#value = undefined;\r\n        this.#next = undefined;\r\n        this.#previous = undefined;\r\n        return this;\r\n    }\r\n        \r\n    get head() {\r\n        return this.previous?.head || this;\r\n    }\r\n\r\n    get tail() {\r\n        return this.next?.tail || this;\r\n    }\r\n\r\n    get next() {\r\n        return this.#next;\r\n    }\r\n\r\n    get previous() {\r\n        return this.#previous;\r\n    }\r\n\r\n    get value() {\r\n        return this.#value;\r\n    }\r\n\r\n    set value(val) {\r\n        this.#value = val;\r\n    }    \r\n\r\n    get asValues() {\r\n        return [...this].map(v => v.value);\r\n    }\r\n\r\n    get asNodes() {\r\n        return [...this];\r\n    }\r\n    \r\n    get iterator() {\r\n        return this[Symbol.iterator]();\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield this;\r\n        if (this.#next) yield* this.#next.iterator;        \r\n    }\r\n\r\n    static wrap(node) {\r\n        return node instanceof LinkedList ? node : new LinkedList(node);\r\n    }\r\n    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure following last in, first out (LIFO) order of operations.\r\n */\r\nexport class Stack extends Array {\r\n    \r\n    push(item) {\r\n        this.unshift(item);\r\n    }\r\n\r\n    pop() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure following first in, first out (FIFO) order of operations.\r\n */\r\nexport class Queue extends Array {\r\n    \r\n    enqueue(item) {\r\n        this.push(item);\r\n    }\r\n\r\n    dequeue() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Tree Node data holder\r\n */\r\nexport class Tree {\r\n\r\n    value;\r\n\r\n    #key = null;\r\n    #parent = null;\r\n    #children;\r\n\r\n    #folder = false;\r\n    #level = 0;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        this.#key = key;\r\n        this.#parent = parent;\r\n        this.#folder = value?.leaf === false;\r\n        this.#level = parent ? parent.level + 1 : level;\r\n        this.#children = this.#folder ? [] : undefined;\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Return tree list from root to this node.\r\n     */\r\n    get subtree() {\r\n        return Array.from(this.up(undefined, false, true, true));\r\n    }\r\n\r\n    get levelID() {\r\n        return this.subtree.map(o => o.level).join('.');\r\n    }\r\n\r\n    /**\r\n     * Unique node canonical form\r\n     */\r\n    get nodeID() {\r\n        //if (this.parent?.level < 0) return this.index;\r\n        return this.subtree.map(o => o.index).join('.');\r\n    }\r\n\r\n    get path() {\r\n        return this.subtree.map(o => o.key).join('/');\r\n    }\r\n\r\n    get index() {\r\n        return this.parent?.nodes.indexOf(this) || 0;\r\n    }\r\n\r\n    get size() {\r\n        return this.#children?.length || -1;\r\n    }\r\n\r\n    get level() {\r\n        return this.#level;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Check if #children is empty\r\n     */\r\n    get isLeaf() {\r\n        return !this.#folder;\r\n    }\r\n\r\n    get isFolder() {\r\n        return this.#folder;\r\n    }\r\n\r\n    /**\r\n     * Check if has #childrens\r\n     */\r\n    get hasChildren() {\r\n        return this.#folder && this.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get key() {\r\n        this.#key ??= this.nodeID;\r\n        return this.#key;\r\n    }\r\n\r\n    get nodes() {\r\n        return this.#children;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get parent() {\r\n        return this.#parent;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n    /**\r\n     * Check if there are more siblings \r\n     */\r\n    get hasMore() {\r\n        return this.#parent?.size > this.index + 1;\r\n    }\r\n\r\n    get firstChild() {\r\n        return this.hasMore ? this.#children[0] : undefined;\r\n    }\r\n\r\n    get lastChild() {\r\n        return this.hasMore ? this.#children[this.#children.length - 1] : undefined;\r\n    }\r\n\r\n    get next() {\r\n        return this.down(this, false, false).next().value || this.nextSibling || this.parent?.nextSibling;\r\n    }\r\n\r\n    get previous() {\r\n        const node = this.previousSibling;\r\n        return (node?.hasChildren) ? node.lastChild : node || this.up(this, false, false).next().value;\r\n    }\r\n\r\n    get nextSibling() {\r\n        return this.hasMore ? this.#parent.#children[this.index + 1] : undefined;\r\n    }\r\n\r\n    get previousSibling() {\r\n        return this.index > 0 ? this.#parent.#children[this.index - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Clear all #children\r\n     */\r\n    clear() {\r\n        if (this.#children) {\r\n            this.#children.forEach(o => o.release?.());\r\n            this.#children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally, if called externally, \r\n     * make sure node is removed from parent \r\n     */\r\n    release() {\r\n        this.clear();\r\n        this.#key = null;\r\n        this.value = null;\r\n        this.#parent = null;\r\n    }\r\n\r\n    /**\r\n     * Walk down the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     * @param {Boolean} flat Navigate all nodes out of subtree\r\n     */\r\n    *down(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (node.#children?.length) {\r\n            for (let child of node.#children) {\r\n                yield* this.down(child, values, true, reverse, flat);\r\n            }\r\n        }\r\n        if (flat) {\r\n            const item = node.nextSibling || node.parent.nextSibling;\r\n            if (item) yield* this.down(item, values, true, reverse, flat);\r\n        }\r\n        /*\r\n        */\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk up the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     */\r\n    *up(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (flat) {\r\n            let item = node.previousSibling;\r\n            item = item?.isFolder ? item.lastChild : item;\r\n            if (item) yield* this.up(item, values, true, reverse, flat);\r\n        }        \r\n        if (node.parent) {\r\n            yield* this.up(node.parent, values, true, reverse, flat);\r\n        }\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk through all nodes\r\n     * @param {*} node \r\n     */\r\n    walk = this.down;\r\n\r\n    /**\r\n     * Simulate array function \"forEach\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */\r\n    forEach(callback, flat = false, reverse = false) {\r\n        this.every((node, index) => {\r\n            callback(node, index);\r\n            return true;\r\n        }, flat, reverse);\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"every\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    every(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let sts = true;\r\n        let i = 0;\r\n        for (let node of it) {\r\n            sts = callback(node, i++);\r\n            if (!sts) break;\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"find\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    find(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let i = 0;\r\n        for (let node of it) {\r\n            if (callback(node, i++)) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"filter\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only childrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    filter(callback, flat, reverse) {\r\n        return [...this.#filtered(callback, flat, reverse)];\r\n    }\r\n\r\n    *#filtered(callback, flat, reverse) {\r\n        const it = this.iterate(flat, reverse);\r\n        for (let node of it) {\r\n            let res = callback(node);\r\n            if (res) yield node;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Iterate all nodes\r\n     * @param {boolean} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {boolean} reverse If set, will iterate up the tree\r\n     */\r\n    *iterate(flat, reverse) {\r\n        reverse ? yield* this.up(this, false, false, false, flat) : yield* this.down(this, false, false,  false, flat);\r\n    }\r\n\r\n    /**\r\n     * Add a new Tree to the tree.\r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    append(key, value = key) {\r\n        let newOne = undefined;\r\n        if (key instanceof Tree) {\r\n            key.#parent = this;\r\n            key.#level = this.#level + 1;\r\n            newOne = key;\r\n        } else {\r\n            newOne = new Tree(key, value, this);\r\n        }\r\n        this.#folder = true;\r\n        this.#children ??= [];\r\n        this.#children.push(newOne);\r\n        return newOne;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method and Array.prototype.push() \r\n     * to add a new Tree to the tree.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    insert(parentNodeKey, key, value = key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === parentNodeKey) {\r\n                const newOne = new Tree(key, value, node);\r\n                this.#folder = true;\r\n                this.#children ??= [];\r\n                node.#children.push(newOne);\r\n                return newOne;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove node from tree. If key is set, will search for first node with matching key.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n\r\n        const me = this;\r\n\r\n        if (key) {\r\n            const node = me.findByKey(key);\r\n            node?.remove();\r\n            return node;\r\n        }\r\n\r\n        if (me.isRoot) throw new Error('Root node can\\'t be removed!');\r\n        const node = me.parent;\r\n        const filtered = node.#children.filter(c => c !== me);\r\n        if (filtered.length !== node.#children.length) {\r\n            node.#children = filtered;\r\n            return me;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method to retrieve the given node in the tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    findByKey(key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convert tree into array list\r\n     * @returns \r\n     */\r\n    flatten(values, inclusive, reverse) {\r\n        return [...this.down(this, values, inclusive, reverse)];\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) Tree.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.#children?.map(o => o.toJSON()) || {};\r\n        return this.isLeaf ? { key: this.key, value: this.value } :\r\n            {\r\n                key: this.key,\r\n                value: this.value,\r\n                items: this.#children.map(o => o.toJSON())\r\n            };\r\n    }\r\n\r\n    /**\r\n     * Make node iterable\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.down();\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof Tree;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) throw new Error('Parent required when data is array');\r\n            raw.forEach(o => Tree.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        const tree = new Tree(obj.key, obj, data ? parent : undefined);\r\n        if (hasParent) parent.append(tree);\r\n        if (items) Tree.from(tree, items);\r\n        return tree;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynamic menu etc.\r\n * @Class\r\n */\r\nexport class DataSelector  {\r\n\r\n    static #SELECT = Symbol('select');\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static addSelected(val) {\r\n        if (!val) return false;\r\n\r\n        if (Array.isArray(val)) {\r\n            val[DataSelector.#SELECT] = true;\r\n        } else {\r\n            GSUtil.asArray(val).forEach(o => o[DataSelector.#SELECT] = true);\r\n        }\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    static removeSelected(val) {\r\n        if (!val) return false;\r\n        delete val[DataSelector.#SELECT];\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    static clearSelected(data) {\r\n        const me = this;\r\n        GSUtil.asArray(data).forEach(o => me.removeSelected(o));\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    static getSelected(data = []) {\r\n        const me = this;        \r\n        return me.isSelected(data) || GSUtil.asArray(data).filter(o => me.isSelected(o));\r\n    }\r\n\r\n    /**\r\n     * Check if record id is in list of selected records\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static isSelected(val) {\r\n        return val ? val[DataSelector.#SELECT] === true : false;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    /**\r\n     * Reset the registry\r\n     */\r\n    resetRegistry() {\r\n        this.#handlers.clear();\r\n        this.#map.clear();\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../base/GSID.mjs\";\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { DataSelector } from \"./DataSelector.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynamic menu etc.\r\n * @Class\r\n */\r\nexport class GSAbstractReadWrite extends GSEvent {\r\n\r\n    static #SELECT = Symbol('select');\r\n\r\n    #id = null;\r\n    #processors = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to register\r\n     * @param {object} processor\r\n     */\r\n    addProcessor(processor) {\r\n        if (!processor) return;\r\n        this.#processors ??= new Set();\r\n        this.#processors.add(processor);\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to remove\r\n     * @param {object} processor \r\n     */    \r\n    removeProcessor(processor) {\r\n        if (processor) this.#processors?.delete(processor);\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Generic event dispatcher, can be overriden to controll when to fire event\r\n     * @param {*} owner \r\n     * @param {*} type \r\n     * @param {*} data \r\n     * @param {*} error \r\n     */\r\n    notify(owner, type, data, error) {\r\n        this.emit(error ? 'error' : type, { type: type, error: error, owner: owner, data: data }, true);\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.#processors?.forEach(c => c.postRead?.(data));\r\n            if (data) me.notify(owner, 'read', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'read', data, e);\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.#processors?.forEach(c => c.postWrite?.(data));\r\n            if (result) me.notify(owner, 'write', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'write', data, e);\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        if (!val) return false;\r\n        DataSelector.addSelected(val);\r\n        const me = this;\r\n        me.emit('selection-add', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        if (!val) return false;\r\n        DataSelector.removeSelected(val);\r\n        const me = this;\r\n        me.emit('selection-remove', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        DataSelector.clearSelected(data);\r\n        const me = this;\r\n        me.emit('selection-clear');\r\n        me.emit('select');\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    getSelected(data = []) {\r\n        return DataSelector.getSelected(data);\r\n    }\r\n\r\n    /**\r\n     * Check if record id is in list of selected records\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    isSelected(val) {\r\n        return DataSelector.isSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Get list of selected records.\r\n     * Override in inherited class\r\n     */\r\n    get selected() {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n    /**\r\n     * Reset the abstract read/write handler\r\n     */\r\n    reset() {\r\n        this.#processors = null;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"../base/GSFunction.mjs\";\r\nimport { GSLoader } from \"../base/GSLoader.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSAbstractReadWrite } from \"./AbstractReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #TYPE = \"remote\";\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #key = null;\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically register in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */\r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */\r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return { ...this.#headers };\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = { ...val };\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     */\r\n    get key() {\r\n        return this.#key;\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     * @var {String} \r\n     */\r\n    set key(val) {\r\n        this.#key = val;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */\r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#filter = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#sort = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest', 'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#writer);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Reset the read/write handler\r\n     */\r\n    reset() {\r\n        this.#src = '';\r\n        this.#headers = {};\r\n        this.#reader = 'GET';\r\n        this.#writer = 'POST';\r\n        this.#action = '';\r\n        this.#mode = '';\r\n        this.#key = null;\r\n        this.#skip = 0;\r\n        this.#limit = 0;\r\n        this.#sort = [];\r\n        this.#filter = [];\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSReadWrite.#TYPE, GSReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSData } from \"../base/GSData.mjs\";\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSCachedReadWrite class\r\n * @module base/GSCachedReadWrite\r\n */\r\n\r\n/**\r\n * ReadWrite with cached memory data. \r\n * @Class\r\n */\r\nexport class GSCachedReadWrite extends GSReadWrite {\r\n\r\n    static #TYPE = 'cached';\r\n\r\n    #data = [];\r\n\r\n    #reformat(data = []) {\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        return records;\r\n    }\r\n\r\n    #postFilter(data) {\r\n        const me = this;\r\n        data = GSData.sortData(data, me.sort);        \r\n        let limit = me.limit === 0 ? data.length : me.limit;\r\n        data = data.slice(me.skip, me.skip + limit);\r\n        return data;\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelected(this.#data);\r\n        this.#data = [];\r\n    }\r\n\r\n    append(data) {\r\n        if(!data) return false;\r\n        const me = this;\r\n        data = me.#reformat(data);\r\n        me.#data = me.#data.concat(data);\r\n        return me.#data;\r\n    }\r\n\r\n    remove(data) {\r\n        const me = this;\r\n        me.removeSelected(data);\r\n        me.#data = me.#data.filter(o => o =! data);\r\n        return me.#data;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n\r\n        if (me.#data.length === 0) {\r\n            const data = await super.onRead();\r\n            me.#data = me.#reformat(data);\r\n        }\r\n\r\n        let data = GSData.filterData(me.#data, me.filter, me.fields, me.limit);\r\n        data = me.#postFilter(data);\r\n        return data;\r\n    }\r\n\r\n    async onWrite(owner, data) {\r\n        return this.append(data);        \r\n    }\r\n\r\n    disable() {\r\n        this.#data = [];\r\n        super.disable();\r\n    }\r\n\r\n    set search(val) {\r\n        const me = this;\r\n        me.filter = val ? [{value : val}] : [];\r\n        me.read();\r\n        /*\r\n        let data = GSData.filterData(me.#data, [{value : val}]);\r\n        data = me.#postFilter(data);\r\n        me.notify(me, 'read', data);\r\n        */\r\n    }\r\n\r\n    clearSelected() {\r\n        return super.clearSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return super.getSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSCachedReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Reset the cached read/write handler\r\n     */\r\n    reset() {\r\n        this.clear();\r\n        super.reset();\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSCachedReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSCachedReadWrite.#TYPE, GSCachedReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { Tree } from \"../helpers/Tree.mjs\";\r\n\r\n/**\r\n * A module loading TreeNode class\r\n * @module data/TreeNode\r\n */\r\n\r\n/**\r\n * UI mediator between Tree linked nodes and WebComponents\r\n * @Class\r\n */\r\nexport class TreeNode extends Tree {\r\n\r\n    #multi = false;\r\n    #opened = false;\r\n    #focused = false;\r\n    #selected = false;\r\n    \r\n    #focusedNode = undefined;\r\n    #selectedNode = undefined;\r\n    #controllers = undefined;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        super(key, value, parent, level);\r\n\r\n        if (value?.select === true || (this.multi && parent?.selected)) this.selected = true;\r\n        if (value?.focus === true) this.focused = true;\r\n        if (value?.open === true) this.opened = true;\r\n    }\r\n\r\n    addController(controller) {\r\n        const root = this.root;\r\n        (root.#controllers ??= new Set()).add(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.root.#controllers?.delete(controller);\r\n    }\r\n\r\n    /**\r\n     * Is multi selection available\r\n     */\r\n    get multi() {\r\n        return this.root.#multi === true;\r\n    }\r\n\r\n    set multi(val) {\r\n        this.root.#multi = val === true;\r\n    }\r\n\r\n    get visible() {\r\n        if (this.level < 0) return true;\r\n        return this.parent?.opened;\r\n    }\r\n\r\n    /**\r\n     * select single node, removing seelction flag from all other nodes\r\n     */\r\n    get opened() {\r\n        if (this.level < 0) return true;\r\n        return this.isLeaf ? this.parent?.opened : this.#opened;\r\n    }\r\n\r\n    set opened(val) {\r\n        val = val === true;\r\n        if (val) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus single node, removing focus flag from all other nodes\r\n     */\r\n    get focused() {\r\n        return this.#focused;\r\n    }\r\n\r\n    set focused(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const changed = this.#focused != val;\r\n        const focusedNode = root.focusedNode();\r\n        \r\n        root.#focusedNode = undefined;        \r\n        this.#focused = val;\r\n        if (focusedNode && focusedNode !== this) {\r\n            focusedNode.focused = false;\r\n        }\r\n\r\n        if (val) root.#focusedNode = this;\r\n        if (changed) root.#controllers?.forEach((c) => c.onFocusChanged?.(this));\r\n    }\r\n\r\n    /**\r\n     * Select single or multi node, depending on multi selection flag\r\n     * If single, remove selection flag from all other nodes\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    set selected(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const selectedNode = root.selectedNode();\r\n        const changed = this.#selected != val;\r\n        this.#selected = val;\r\n        if (val) {\r\n            if (selectedNode && selectedNode !== this && !root.multi) {\r\n                selectedNode.selected = false;\r\n            }\r\n            root.#selectedNode = this;\r\n        }\r\n        if (changed) {\r\n            root.#controllers?.forEach((c) => c.onSelectionChanged?.(this, selectedNode));\r\n            if (root.multi) root.#controllers?.forEach((c) => c.onSelectionChanged?.(this.parent, selectedNode));\r\n        } \r\n    }\r\n\r\n    get isPartialySelected() {\r\n        return this.selected && this.hasChildren && this.nodes.length > this.nodes.filter(n => n.selected).length;\r\n    }\r\n\r\n    /* hide from public\r\n    get host() {\r\n        return this[Symbol.for('gs-element')];\r\n    }\r\n\r\n    set host(el) {\r\n        this[Symbol.for('gs-element')] = el;\r\n    }\r\n    */\r\n\r\n    selectAll() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            this.deselectAll();\r\n            this.selected = true;\r\n            return\r\n        }\r\n        this.#selectionFlag(true);\r\n        root.#selectedNode = this;\r\n        root.#controllers?.forEach((c) => c.onSelectAll?.(root));\r\n    }\r\n\r\n    deselectAll() {\r\n        const root = this.root;\r\n        this.#selectionFlag(false);\r\n        root.#selectedNode = undefined;\r\n        root.#controllers?.forEach((c) => c.onDeselectAll?.(root));\r\n    }\r\n\r\n    /**\r\n     * Return last focused node\r\n     * @returns \r\n     */\r\n    focusedNode() {\r\n        const node = this.root.#focusedNode;\r\n        return node?.focused ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * Return last selected node\r\n     * @returns \r\n     */\r\n    selectedNode() {\r\n        const node = this.root.#selectedNode;\r\n        return node?.selected ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * List all selected nodes.\r\n     * @returns \r\n     */\r\n    selectedNodes() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            const node = root.selectedNode()\r\n            return node?.selected ? [node] : [];\r\n        }\r\n        return Array.from(root.walk().filter(o => o.selected));\r\n    }\r\n\r\n    /**\r\n     * Call from external controller data must be refresshed (to notify UI optionally)\r\n     * @param {*} root \r\n     */\r\n    refresh(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onRefresh?.(this));\r\n    }\r\n\r\n    /**\r\n     * Notify controllers about data loading (from async controller)\r\n     * @param {*} root \r\n     */\r\n    loading(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onLoad?.(this));\r\n    }\r\n\r\n    expandAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.expand(root);\r\n        }\r\n    }\r\n\r\n    collapseAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.collapse(root);\r\n        }\r\n    }\r\n\r\n    expand(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        if (!me.parent?.opened) {\r\n            me.parent?.expand(root);\r\n        }\r\n        const update = !me.opened;\r\n        me.#opened = true;\r\n        if (update) me.#expanded(root);\r\n        //me.nodes?.filter( n => !n.opened).forEach(c => c.refresh(root));\r\n        me.nodes?.forEach(c => c.refresh(root));\r\n    }\r\n\r\n    collapse(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        const update = me.#opened || me.parent.#opened;\r\n        me.nodes?.filter(n => n.opened || n.parent.opened).forEach(o => o.collapse(root));\r\n        //me.nodes?.forEach(o => o.collapse(root));\r\n        me.#opened = false;\r\n        if (update) me.#collapsed(root);\r\n    }\r\n\r\n    select(val = true) {\r\n        this.selected = val === true;\r\n    }\r\n\r\n    #expanded(root) {\r\n        root.#controllers?.forEach((c) => c.onExpand?.(this));\r\n    }\r\n\r\n    #collapsed(root) {\r\n        root.#controllers?.forEach((c) => c.onCollapse?.(this));\r\n    }\r\n\r\n    release() {\r\n        if (this.#selected) this.selected = false;\r\n        super.release();\r\n    }\r\n\r\n    append(key, value = key) {\r\n        const me = this;\r\n        const node = super.append(key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onAppend?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    insert(parentNodeKey, key, value = key) {\r\n        const me = this;\r\n        const node = super.insert(parentNodeKey, key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onInsert?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    remove() {\r\n        const node = super.remove();\r\n        if (node) this.root.#controllers?.forEach((c) => c.onInsert?.(node));\r\n        return node;\r\n    }\r\n\r\n    #selectionFlag(val = false) {\r\n        val = val === true\r\n        for (let node of this.walk()) {\r\n            node.selected = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) TreeNode.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.nodes?.map(o => o.toJSON()) || {};\r\n        const obj = Object.assign({\r\n            key: this.key,\r\n            opened: this.#opened,\r\n            focused: this.#focused,\r\n            selected: this.#selected,\r\n            items: undefined\r\n        }, this.value);\r\n        obj.items = this.nodes?.map(o => o.toJSON());\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Reset the tree node\r\n     */\r\n    reset() {\r\n        this.#multi = false;\r\n        this.#opened = false;\r\n        this.#focused = false;\r\n        this.#selected = false;\r\n        this.#focusedNode = undefined;\r\n        this.#selectedNode = undefined;\r\n        this.#controllers = undefined;\r\n    }\r\n\r\n    static get root() {\r\n        return new TreeNode(null, null, null, -1);\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof TreeNode;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) return TreeNode.from(TreeNode.root, raw);\r\n            raw.forEach(o => TreeNode.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        obj.leaf = !Array.isArray(items);\r\n        const tree = new TreeNode(obj.key, obj, data ? parent : undefined);\r\n        if (items) TreeNode.from(tree, items);\r\n        if (hasParent) parent.append(tree);\r\n        return tree;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { TreeNode } from \"./TreeNode.mjs\";\r\n\r\n/**\r\n * A module loading GSTreeReader class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for reading Tree nodes\r\n * @Class\r\n */\r\nexport class GSTreeReader extends GSReadWrite {\r\n\r\n    #data = TreeNode.root;\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    async write(val) {\r\n        throw new Error('Writer not available for TreeReader')\r\n    }\r\n\r\n    async read(owner) {\r\n        const me = this;\r\n        let node = undefined;\r\n        const data = await super.read(owner);\r\n        if (!this.#data) {\r\n            node = TreeNode.from(data);\r\n            this.#data = node;\r\n        } else {\r\n            const parent = me.filter?.length > 0 ? me.#data.findByKey(me.filter[0]) : me.#data;\r\n            parent.clear();\r\n            node = parent.fromJSON(data);\r\n        }\r\n        me.filter = undefined;\r\n        me.notify(owner, 'read', node);\r\n        return node;\r\n    }\r\n\r\n    disable() {\r\n        super.disable();\r\n        this.#data?.release();\r\n    }\r\n\r\n    notify(owner, type, data, error) {\r\n        const isNode = data instanceof TreeNode;\r\n        if (!error && !isNode && type === 'read') return;\r\n        super.notify(owner, type, data, error);\r\n    }\r\n\r\n    /**\r\n     * Called from Tree when node is expanded \r\n     * @param {*} node \r\n     */\r\n    async onExpand(node) {\r\n        if (node.hasChildren) return;\r\n        node.loading();\r\n        this.filter = node.key;\r\n        return await this.read();\r\n    }\r\n\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    /**\r\n     * Reset the tree data\r\n     */\r\n    resetData() {\r\n        this.#data = TreeNode.root;\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSTreeReader} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSTreeReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('tree', GSTreeReader);\r\n    }\r\n\r\n}","// Lit 3.0 Google\r\nconst litUrl = globalThis.GS_LIT_URL || '/bootstrap-lit/assets/lib/lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const Directive = litModule.Directive;\r\nexport const LitElement = litModule.LitElement;\r\nexport const PartType = litModule.PartType;\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const adoptStyles = litModule.adoptStyles;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const createRef = litModule.createRef;\r\nexport const css = litModule.css;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const directive = litModule.directive;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getCompatibleStyle = litModule.getCompatibleStyle;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const guard = litModule.guard;\r\nexport const html = litModule.html;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isServer = litModule.isServer;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const literal = litModule.literal;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const noChange = litModule.noChange;\r\nexport const notEqual = litModule.notEqual;\r\nexport const nothing = litModule.nothing;\r\nexport const range = litModule.range;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const render = litModule.render;\r\nexport const repeat = litModule.repeat;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const staticHtml = litModule.staticHtml;\r\nexport const staticSvg = litModule.staticSvg;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const svg = litModule.svg;\r\nexport const templateContent = litModule.templateContent;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const unsafeStatic = litModule.unsafeStatic;\r\nexport const until = litModule.until;\r\nexport const when = litModule.when;\r\nexport const withStatic = litModule.withStatic;","import { Directive, directive, nothing } from \"../lib.mjs\";\r\n\r\nconst definition = {\r\n    'action': 'gsAction',\r\n    'anchor': 'gsAnchor',\r\n    'attribute': 'gsAttribute',\r\n    'call': 'gsCall',\r\n    'exec': 'gsExec',\r\n    'inject': 'gsInject',\r\n    'property': 'gsProperty',\r\n    'swap': 'gsSwap',\r\n    'target': 'gsTarget',\r\n    'template': 'gsTemplate',\r\n    'toggle': 'gsToggle',\r\n    'trigger': 'gsTrigger',\r\n    'value': 'gsValue',\r\n    'calls':'gsCall',\r\n    'toggles':'gsToggle',\r\n    'timeout':'gsTimeout',\r\n    'triggers':'gsTrigger'\r\n};\r\n\r\nconst template = {\r\n    'gsAction': undefined,\r\n    'gsAnchor': undefined,\r\n    'gsAttribute': undefined,\r\n    'gsCall': undefined,\r\n    'gsExec': undefined,\r\n    'gsInject': undefined,\r\n    'gsProperty': undefined,\r\n    'gsSwap': undefined,\r\n    'gsTarget': undefined,\r\n    'gsTemplate': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTrigger': undefined,\r\n    'gsValue': undefined,\r\n    'gsCall': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTimeout': undefined,\r\n    'gsTrigger': undefined\r\n};\r\n\r\nclass DatasetDirective extends Directive {\r\n\r\n    render(obj) {\r\n        console.log(obj);\r\n        return nothing;\r\n    }\r\n\r\n    update(part, [obj, flat = true]) {\r\n\r\n        if (!obj) return nothing;\r\n        const dataset = part.element.dataset;\r\n        const srcset = obj.dataset || obj;\r\n        const isDataset = srcset instanceof DOMStringMap;\r\n\r\n        if (isDataset) {\r\n            Object.assign(dataset, srcset);\r\n        } \r\n        \r\n        if (flat) this.#remap(dataset, obj);\r\n\r\n        return nothing;\r\n    }\r\n\r\n    #remap(dataset, obj) {\r\n        const opt = Object.assign({}, template);\r\n        const list = Object.entries(obj).filter(v => Object.hasOwn(definition, v[0]));\r\n        if (list.length > 0) {\r\n            list.forEach(kv => opt[definition[kv[0]]] = kv[1]);\r\n            Object.keys(opt)\r\n            .filter(k => opt[k] !== undefined)\r\n            .forEach(k => dataset[k] = opt[k]);\r\n        }\r\n    }\r\n}\r\n\r\nexport const dataset = directive(DatasetDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\n\r\n/**\r\n * Generic object property descriptor getter\r\n * @param {Object} instance \r\n * @returns {PropertyDescriptor}\r\n */\r\nfunction descriptors(instance) {\r\n  return Object.entries(Object.getOwnPropertyDescriptors(instance));\r\n}\r\n\r\n/**\r\n * List of all object property descriptors \r\n * @param {Object} instance Object instance \r\n * @returns {Array<PropertyDescriptor>}\r\n */\r\nfunction listProperties(instance) {\r\n  return descriptors(instance)\r\n    .filter(e => typeof e[1].value !== 'function')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List all object property getters\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGetters(instance) {\r\n  return descriptors(Reflect.getPrototypeOf(instance))\r\n    .filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List of all gettable properties from an object\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGettable(instance) {\r\n  return new Set([...listGetters(instance), ...listProperties(instance)]);\r\n}\r\n\r\n/**\r\n * Parse string literal template into Lit html instance\r\n * @param {*} tpl \r\n * @param {*} params \r\n * @returns {function}\r\n */\r\nexport function literalTemplate(tpl, params) {\r\n  const names = Array.from(listGettable(params));\r\n  const vals = names.map(v => params[v]);\r\n  names.push('html');\r\n  vals.push(html);\r\n  return new Function(...names, `return html\\`${tpl}\\`;`)(...vals);\r\n}","/**\r\n * A clone of classMap directive to support CSS directive.\r\n * Lit classs is not expoed, so we have to clone it and create our own.\r\n */\r\n\r\nimport { Directive, PartType, directive, noChange } from \"../lib.mjs\";\r\n\r\nclass CssMapDirective extends Directive {\r\n\r\n    constructor(partInfo) {\r\n        super(partInfo);\r\n        if (partInfo.type !== PartType.ATTRIBUTE ||\r\n            partInfo.name !== 'css' ||\r\n            partInfo.strings?.length > 2) {\r\n            throw new Error('`classMap()` can only be used in the `css` attribute ' +\r\n                'and must be the only part in the attribute.');\r\n        }\r\n    }\r\n\r\n    render(classInfo) {\r\n        // Add spaces to ensure separation from static classes\r\n        return (' ' +\r\n            Object.keys(classInfo)\r\n                .filter((key) => classInfo[key])\r\n                .join(' ') +\r\n            ' ');\r\n    }\r\n\r\n    update(part, [classInfo]) {\r\n\r\n        // Remember dynamic classes on the first render\r\n        if (this._previousClasses === undefined) {\r\n            this._previousClasses = new Set();\r\n            if (part.strings !== undefined) {\r\n                this._staticClasses = new Set(part.strings\r\n                    .join(' ')\r\n                    .split(/\\s/)\r\n                    .filter((s) => s !== ''));\r\n            }\r\n\r\n            for (const name in classInfo) {\r\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\r\n                    this._previousClasses.add(name);\r\n                }\r\n            }\r\n            return this.render(classInfo);\r\n        }\r\n\r\n        const classList = part.element.classList;\r\n\r\n        // Remove old classes that no longer apply\r\n        for (const name of this._previousClasses) {\r\n            if (!(name in classInfo)) {\r\n                classList.remove(name);\r\n                this._previousClasses.delete(name);\r\n            }\r\n        }\r\n\r\n        // Add or remove classes based on their classMap value\r\n        for (const name in classInfo) {\r\n            // We explicitly want a loose truthy check of `value` because it seems\r\n            // more convenient that '' and 0 are skipped.\r\n            const value = !!classInfo[name];\r\n            if (value !== this._previousClasses.has(name) &&\r\n                !this._staticClasses?.has(name)) {\r\n                if (value) {\r\n                    classList.add(name);\r\n                    this._previousClasses.add(name);\r\n                } else {\r\n                    classList.remove(name);\r\n                    this._previousClasses.delete(name);\r\n                }\r\n            }\r\n        }\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * A directive that applies dynamic CSS classes.\r\n *\r\n * This must be used in the `css` attribute and must be the only part used in\r\n * the attribute. It takes each property in the `classInfo` argument and adds\r\n * the property name to the element's `classList` if the property value is\r\n * truthy; if the property value is falsey, the property name is removed from\r\n * the element's `css`.\r\n *\r\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\r\n * truthy.\r\n *\r\n * @param classInfo\r\n */\r\nexport const cssMap = directive(CssMapDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocapitalizeTypes = ['', 'none', 'off', 'on', 'sentences', 'words', 'characters'];\r\n\r\nexport const autocapitalize = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocapitalizeTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocompleteTypes = ['', 'off', 'on'];\r\n\r\nexport const autocomplete = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocompleteTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocorrectTypes = ['', 'on', 'off'];\r\n\r\nexport const autocorrect = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocorrectTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\nexport class ButtonTypes {\r\n\r\n    static values = ['button', 'reset', 'submit'];\r\n\r\n    static is(val) {\r\n        return ButtonTypes.values.includes(val);\r\n    }\r\n\r\n    static isReset(val) {\r\n        return  ButtonTypes.isType(val, 'reset');\r\n    }\r\n\r\n    static isSubmit(val) {\r\n        return  ButtonTypes.isType(val, 'submit');\r\n    }\r\n\r\n    /**\r\n     * Check button type, by spec, if not set, default is 'submit'\r\n     * @param {*} type - button type\r\n     * @param {*} value - matching value\r\n     * @returns \r\n     */\r\n    static isType(type, value) {\r\n        return ButtonTypes.#normalize(type) === value;\r\n    }\r\n\r\n    static #normalize(type) {\r\n        return GSUtil.normalize(type, 'submit').toLowerCase();\r\n    }\r\n} \r\n\r\nexport const buttonType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ButtonTypes.is(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ColorTypes = ['', 'primary', 'secondary', 'dark', 'light', 'info', 'warning', 'danger', 'alert', 'link', 'success'];\r\n\r\nexport const color = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ColorTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'desktop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const InputTypes = [\r\n   { type: 'checkbox', ignore: true},\r\n   { type: 'radio', ignore: true},\r\n   { type: 'switch', ignore: true},\r\n   { type: 'range', ignore: true},\r\n   { type: 'number', native: true},\r\n   { type: 'email', native: true},\r\n   { type: 'url',  native: true},\r\n   { type: 'file', native: true}, \r\n   { type: 'text'},\r\n   { type: 'password'}\r\n];\r\n\r\nexport const inputType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && InputTypes.filter(o => o.type === newVal).length === 1;\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const NavTypes = ['', 'pills', 'tabs', 'underline'];\r\n\r\nexport const nav = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && NavTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val);\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val);\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PlacementTypes {\r\n\r\n    static values = ['center', 'left', 'right', 'start', 'end', 'top', 'bottom'];\r\n\r\n    static includes(val) {\r\n        return PlacementTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        return PlacementTypes.values.indexOf(val) > 4;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = PlacementTypes.values.indexOf(val)\r\n        return idx > 0 && idx < 5;\r\n    }\r\n\r\n    static isCenter(val) {\r\n        return PlacementTypes.values.indexOf(val) === 0;\r\n    }\r\n\r\n    static isBefore(val) {\r\n        return ['left', 'start', 'top'].includes(val);\r\n    }\r\n\r\n    static isAfter(val) {\r\n        return ['right', 'end', 'bottom'].includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const placement = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PlacementTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PositionTypes {\r\n\r\n    static values = ['absolute', 'fixed', 'relative', 'sticky', 'static'];\r\n\r\n    static includes(val) {\r\n        return PositionTypes.values.includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const position = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PositionTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const SizeTypes = { 'default' : '', 'normal': '',  'medium': '', 'small': 'sm', 'large': 'lg', 'big' : 'lg', 'extra' : 'xl' };\r\n\r\nexport const size = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && Object.hasOwn(SizeTypes, newVal);\r\n    }\r\n\r\n};","export const stringArrayConverter = {\r\n    fromAttribute: (value, type) => {\r\n        return (value || '').split(',');\r\n    },\r\n    toAttribute: (value, type) => {\r\n        return (value || []).join(',');\r\n    }\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCacheStyles } from '../base/GSCacheStyles.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time even gs-adopted is triggered by the GSAdoptedEngien class,\r\n * all registerd controller will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to preven dom node polution; \r\n * Style  changes  are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#dynamic = null;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values, isGlobal = false) {\r\n    const me = this;\r\n    let style = null;\r\n    if (isGlobal) {\r\n      style = GSCacheStyles.dynamic;\r\n    } else {\r\n      me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');      \r\n      style = me.#dynamic;\r\n    }    \r\n    if (values === null && style.rules.length > 0 ) return style.removeRule(name);\r\n    return style.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host?.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.detach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  // called only once, before host.firstUpdate\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (!me.#isSelf() && me.#target) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs)\r\n        .filter(el => el ? true : false)\r\n        .forEach(el => GSDOM.cleanup(el));\r\n    }\r\n    me.#refs?.clear();\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { DataSelector } from \"../data/DataSelector.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n  #selectCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#selectCallback = me.#onSelect.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.filter = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get selected() {\r\n    return this.store?.selected;\r\n  }\r\n\r\n  isSelected(val) {\r\n    return this.#selector.isSelected(val);\r\n  }\r\n\r\n  addSelected(val) {\r\n    return this.#selector.addSelected(val);\r\n  }\r\n  \r\n  removeSelected(val) {\r\n    return this.#selector.removeSelected(val);\r\n  }\r\n\r\n  clearSelected(data) {\r\n    return this.#selector.clearSelected(data);\r\n  }\r\n\r\n  getSelected(data) {\r\n    return GSUtil.asArray(data).filter(o => DataSelector.isSelected(o));\r\n  }\r\n\r\n  get #selector() {\r\n    return this.store || DataSelector;\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    if (storage) {\r\n      storage.on('read', me.#readCallback);\r\n      storage.on('write', me.#writeCallback);\r\n      storage.on('error', me.#errorCallback);\r\n      storage.on('select', me.#selectCallback);\r\n      if (read) storage.read(me.#host);\r\n    }\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    if (storage) {\r\n      storage.off('read', me.#readCallback);\r\n      storage.off('write', me.#writeCallback);\r\n      storage.off('error', me.#errorCallback);\r\n      storage.off('select', me.#selectCallback);\r\n    }\r\n  }\r\n\r\n  #onSelect(e) {\r\n    this.#host.requestUpdate?.();\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for elment move events, properly handling mouse events.\r\n */\r\nexport class ElementMoveController {\r\n\r\n  #host;\r\n  #element;\r\n  #attached = false;\r\n\r\n  #cursorX = 0;\r\n  #cursorY = 0;\r\n\r\n  #mouseUpCallback;\r\n  #mouseDownCallback;\r\n  #mouseMoveCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n    me.#mouseUpCallback = me.#onMouseUp.bind(me);\r\n    me.#mouseDownCallback = me.#onMouseDown.bind(me);\r\n    me.#mouseMoveCallback = me.#onMouseMove.bind(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  attach(element) {\r\n    const me = this;\r\n    if (!me.#attached) {\r\n      me.#element = element;\r\n      me.#attached = true;\r\n      me.#host.attachEvent(me.#element, 'mousedown', me.#mouseDownCallback);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.#cursorX = 0;\r\n    me.#cursorY = 0;\r\n    me.#host.removeEvent(document, 'mouseup', me.#mouseUpCallback);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n  * Call host onStartMove function\r\n  * @param {MouseEvent} e \r\n  */\r\n  #onMouseDown(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n    me.#host.onStartMove?.(e, me.#cursorX, me.#cursorY);\r\n    me.#host.attachEvent(document, 'mouseup', me.#mouseUpCallback, true);\r\n    me.#host.attachEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n   * Remove mousemove listener and call host onEndMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseUp(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n    return me.#host.onEndMove?.(e, me.#cursorX, me.#cursorY);\r\n  }\r\n\r\n  /**\r\n   * Call host onMouseMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseMove(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n\r\n    me.#host.onMouseMove?.(e, me.#cursorX, me.#cursorY);\r\n\r\n    if (me.#cursorX < e.clientX) {\r\n      me.#host.onCursorRight?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorX > e.clientX) {\r\n      me.#host.onCursorLeft?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    if (me.#cursorY < e.clientY) {\r\n      me.#host.onCursorUp?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorY > e.clientY) {\r\n      me.#host.onCursorDown?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #language;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#language = host.language;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#language = null;\r\n  }\r\n\r\n  // called every time host is updated\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#language !== me.#host?.language) {\r\n      me.#language === me.#host?.language;\r\n      me.updateLanguage(me.#language);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#language) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n// internal hidden flag to prevent double injection\r\nconst RENDER_SYMBOL = Symbol.for(\"GS-TEMPLATE-RENDER\");\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n  static #cache = new Map();\r\n  static #refs = new Set();\r\n\r\n  static get isPrefetch() {\r\n    return globalThis.GS_TEMPLATE_PREFETCH || false;\r\n  }\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host[RENDER_SYMBOL] = false;\r\n    host.addController(this);\r\n  }\r\n\r\n  // inherited\r\n  hostConnected() {\r\n    const me = this;\r\n    /* \r\n    if(TemplateController.isPrefetch) {\r\n      me.hostUpdate();\r\n    }\r\n    */\r\n  }\r\n\r\n  // inherited\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    delete me.#host[RENDER_SYMBOL];\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  // inherited\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#template) return;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      const template = TemplateController.#cache.get(me.#toKey(ref));\r\n      if (GSUtil.isJsonType(template)) me.#applyTemplate(template);\r\n      me.#lastRef = ref;\r\n      if (ref && !me.#template) {\r\n        TemplateController.#schedule(me);\r\n      }\r\n    }\r\n  }\r\n\r\n  // inherited\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (me.#template) {\r\n      const host = me.#host;\r\n      //me.hostDisconnected();\r\n      host.removeController(me);\r\n      host.templateInjected?.();\r\n      queueMicrotask(()=> me.hostDisconnected());\r\n    }\r\n\r\n  }\r\n\r\n  #toKey(ref) {\r\n    const me = this;\r\n    return GSUtil.isString(ref) ? `${ref}@${me.#host?.tagName || ''}` : ref;\r\n  }\r\n\r\n  #hasKey(key) {\r\n    return TemplateController.#refs.has(key) || TemplateController.#cache.has(key);\r\n  }\r\n\r\n  // applly template opts {simple, slots}\r\n  #applyTemplate({ simple, slots }) {\r\n\r\n    // is template does not contain slots\r\n    const me = this;\r\n    if (!me.#host) return;\r\n\r\n    const hasSlots = GSDOM.isTemplateElement(slots);\r\n    const hasSimple = GSDOM.isTemplateElement(simple);\r\n\r\n    let signal = true;\r\n\r\n    if (hasSlots) {\r\n      // slot elements must be added only once \r\n      if (me.#host[RENDER_SYMBOL] === false) {\r\n        me.#host[RENDER_SYMBOL] = true;\r\n        const clone = slots.cloneNode(true);\r\n        Array.from(clone.content.children).forEach(el => me.#host.appendChild(el));\r\n      }\r\n    }\r\n\r\n    if (hasSimple) {\r\n      if (simple.content.childElementCount > 0) {\r\n        signal = false;\r\n        me.#template = simple.cloneNode(true);\r\n        me.#host.requestUpdate();\r\n      }\r\n    }\r\n\r\n    if (signal) me.#host.templateInjected?.();\r\n\r\n  }\r\n\r\n  // separate first level nodes into sloted nodes and plain shadow injectable node \r\n  #preprocessTemplate(template) {\r\n    let templateSimple = null;\r\n    let templateSlots = null;\r\n    const slots = Array.from(template.content.children).filter(el => el.hasAttribute('slot'));\r\n    const hasSlots = slots.length > 0;\r\n    const hasSimple = template.content.childElementCount > slots.length;\r\n    if (hasSlots) {\r\n      if (hasSimple) {\r\n        templateSlots = document.createElement('template');\r\n        slots.forEach(el => templateSlots.content.appendChild(el));\r\n      } else {\r\n        templateSlots = template;\r\n      }\r\n    }\r\n    templateSimple = hasSimple && template?.content.childElementCount > 0 ? template : null;\r\n    templateSlots = hasSlots && templateSlots?.content.childElementCount > 0 ? templateSlots : null;\r\n    // cache copy for page inejcted tempkates as they might be cleared elswhere\r\n    templateSimple = templateSimple?.isConnected ? templateSimple.cloneNode(true) : templateSimple;\r\n    return { simple: templateSimple, slots: templateSlots };\r\n  }\r\n\r\n  async #load() {\r\n\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    \r\n    if (!ref) return;\r\n    const key = me.#toKey(ref);\r\n\r\n    // prevents double load\r\n    if (me.#hasKey(key)) {\r\n      // already scheduled\r\n      return;\r\n    }\r\n    TemplateController.#refs.add(key);\r\n\r\n    let templates = null;\r\n\r\n    const isTplEl = GSDOM.isTemplateElement(ref);\r\n    const cacheable = GSUtil.isString(ref);\r\n    if (cacheable) {\r\n      templates = TemplateController.#cache.get(key);\r\n    }\r\n\r\n    if (!templates) {\r\n      \r\n      try {\r\n        const template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n        templates = me.#preprocessTemplate(template);\r\n      } catch (err) {\r\n        TemplateController.#refs.delete(key);\r\n        throw err;\r\n      }\r\n\r\n      if (cacheable) {\r\n        if (templates.simple) templates.simple.dataset.gsCache = true;\r\n        TemplateController.#cache.set(key, templates);\r\n      }\r\n    }\r\n    \r\n    TemplateController.#refs.delete(key);\r\n    me.#applyTemplate(templates);\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    return GSDOM.templateRef(this.#host);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = false));\r\n    }\r\n  }\r\n\r\n  static clear() {\r\n    GSTemplateCache.clear();\r\n    TemplateController.#tasks.clear();\r\n    TemplateController.#cache.clear();\r\n    TemplateController.#refs.clear();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#theme = null;\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle event when template slot changes\r\n */\r\nexport class SlotController {\r\n\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      const me = this;\r\n      const target = me.#host.renderRoot || me.#host;\r\n      me.#host.attachEvent(target, 'slotchange', me.#onSlotChanged.bind(me));\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    #onSlotChanged(e) {\r\n      if (typeof e.target.assignedElements === 'function') {\r\n        e.target.assignedElements().forEach(el => {\r\n          el.onSlotInjected?.(e.target);\r\n        });\r\n      }\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement, CSSResult } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\nimport { SlotController } from './controllers/SlotController.mjs';\r\nimport { GSAttributeHandler } from './base/GSAttributeHandler.mjs';\r\nimport { GSDOMObserver } from './base/GSDOMObserver.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    language: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted = undefined;\r\n  #uiHandler = undefined;\r\n  #orientation = undefined;\r\n  #localization = undefined;\r\n  #dataController = undefined;\r\n  #slotController = undefined;\r\n  #themes = undefined;\r\n  #template = undefined;\r\n  #content = undefined;\r\n  \r\n  #ref = undefined;\r\n  #refs = undefined;\r\n  #refx = undefined;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.language = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    //me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n    me.#slotController = new SlotController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    const tpl = GSDOM.templateRef(me);\r\n    if (tpl) me.#template = new TemplateController(me);\r\n    if (me.isBindable) me.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.detachListeners(this);\r\n    super.disconnectedCallback();\r\n    me.#ref?.clear();\r\n    me.#refs?.clear();\r\n    me.#refx?.clear();\r\n    me.#ref = null;\r\n    me.#refs = null;\r\n    me.#refx = null;\r\n    me.#adopted = null;\r\n    me.#uiHandler = null;\r\n    me.#orientation = null;\r\n    me.#localization = null;\r\n    me.#dataController = null;\r\n    me.#slotController = null;\r\n    me.#themes = null;\r\n    me.#template = null;\r\n    me.#content = null;\r\n    //me.renderOptions = null;\r\n    me.adoptedStyleSheets = [];\r\n    const shadow = this.shadowRoot;\r\n    if (shadow) {\r\n      //if (shadow._$litPart$) shadow._$litPart$ = null;\r\n      shadow.adoptedStyleSheets = [];\r\n      // shadow.innerHTML = '';\r\n      //GSDOM.cleanup(shadow);\r\n      queueMicrotask(() => GSDOM.cleanup(shadow));\r\n    }\r\n    queueMicrotask(() => GSDOM.cleanup(me));\r\n    // GSDOM.cleanup(me);\r\n    // console.log('removed', me);\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.isConnected; // && this.isAllowRender;\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('storage')) {\r\n      me.#dataController?.hostDisconnected();\r\n      me.#dataController = undefined;\r\n      if (me.storage) {\r\n        me.#dataController = new DataController(me);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when this element injected in some slot\r\n   * @param {*} slot \r\n   */\r\n  onSlotInjected(slot) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return this.renderTemplate();\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : noChange;\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Called when asynchronnous template is injected into component\r\n   */\r\n  templateInjected() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to witch to add parsed CSS\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @param {boolean} isGlobal \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value, isGlobal = false) {\r\n    return this.#adopted?.style(id, value, isGlobal);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @param {Number} levels - walk limit\r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '', levels = -1, cached = false) {\r\n    const me = this;\r\n\r\n    let result = me.#refx?.get(query);\r\n    if (result && !result.isConnected) {\r\n      result = undefined;\r\n      me.#refx?.delete(query);\r\n    }\r\n    result ??= GSDOM.closest(this, query, levels);\r\n    \r\n    if (result && cached && !me.#ref?.has(query)) {\r\n      me.#refx ??= new Map();\r\n      me.#refx.set(query, result);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false, cached = false) {\r\n    const me = this;\r\n\r\n    let result = me.#refs?.get(query);\r\n    if (result && !result.isConnected) {\r\n      result = undefined;\r\n      me.#refs?.delete(query);\r\n    }\r\n    result ??= GSDOM.query(this, query, false, shadow);\r\n    \r\n    if (result && cached && !me.#ref?.has(query)) {\r\n      me.#ref ??= new Map();\r\n      me.#ref.set(query, result);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false, cached = false) {\r\n    const me = this;\r\n    let result = me.#refs?.get(query);\r\n    if (result && !result.isConnected) {\r\n      result = undefined;\r\n      me.#refs?.delete(query);\r\n    }\r\n    result ??= GSDOM.queryAll(this, query, false, shadow);\r\n    if (result && cached && !me.#refs?.has(query)) {\r\n      me.#refs ??= new Map();\r\n      me.#refs.set(query, result);\r\n    } \r\n    return result;        \r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e, defaults, propagate, immediate) {\r\n    return GSEvents.prevent(e, defaults, propagate, immediate);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.language, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    //return this.dataset.gsTarget;\r\n    return GSAttributeHandler.isBindable(this);\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template?.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content?.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    // this.isConnected &&\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment ?? '');\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol ?? '');\r\n  }\r\n\r\n  /**\r\n   * Internal attribute set if component is genrated by other components\r\n   */\r\n  get isGenerated() {\r\n    return this.hasAttribute('generated');\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Get instance of internal styles\r\n   */\r\n  get elementStyles() {\r\n    return this.constructor.elementStyles\r\n        .filter(o => o instanceof CSSStyleSheet || o.styleSheet instanceof CSSStyleSheet)\r\n        .map(o => o.styleSheet || o)\r\n        .pop();    \r\n    /*\r\n    .map(s => {\r\n       Object.values(s)\r\n        .filter(o => o instanceof CSSStyleSheet || o instanceof CSSResult)\r\n        .map(o => o.styleSheet || o)\r\n        .pop()\r\n    }).pop();\r\n    */\r\n  }\r\n\r\n  /**\r\n   * Internal shadow styles rule\r\n   * @param {*} name \r\n   * @returns \r\n   */\r\n  cssRule(name) {\r\n    return Array.from(this.elementStyles?.rules ?? []).filter(r => r.selectorText === name).pop();\r\n  }\r\n\r\n  /**\r\n   * Set dynamic CSS rule \r\n   * See GSIcon hot it is done\r\n   * @param {*} rule \r\n   * @param {*} name \r\n   * @param {*} value \r\n   */\r\n  setCSSProperty(rule, name, value) {\r\n    this.cssRule(rule)?.style?.setProperty(name, value);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    return GSDOM.allProperties(obj);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    return GSDOM.define(name, clazz || this, opt);\r\n  }\r\n\r\n  static {\r\n    GSElement.define('gs-element', GSElement);\r\n    // global document element removal monitor, help GS cleanup\r\n    GSDOMObserver.registerFilter(el => true, el => { GSDOM.cleanup(el) }, true, document.body);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from \"../GSElement.mjs\";\r\n\r\n/**\r\n * Controller for child element navigation / selection / focusing\r\n */\r\nexport class ElementNavigationController {\r\n\r\n  #host;\r\n  #attached;\r\n  #focused;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#attached = false;\r\n  }\r\n\r\n  get circular() {\r\n    return this.#host?.circular === true;\r\n  }\r\n\r\n  get multiple() {\r\n    return this.#host?.multiple === true;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host.active;\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */\r\n  init() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */  \r\n  attach(el) {\r\n    const me = this;\r\n    if (me.#attached) return;\r\n    me.#attached = true;\r\n    if (me.#host) {\r\n      me.#host.attachEvent(el, 'keydown', e => me.onKeyDown(e));\r\n      me.#host.attachEvent(el, 'keyup', e => me.onKeyUp(e));\r\n      me.#host.attachEvent(el, 'click', e => me.onClick(e));\r\n      me.#host.attachEvent(el, 'focusin', e => me.onFocusIn(e));\r\n      me.#host.attachEvent(el, 'focusout', e => me.onFocusOut(e));\r\n    }\r\n  }\r\n\r\n  previous() {\r\n    const me = this;\r\n    let el = me.#focused?.previousElementSibling;\r\n    while (el?.disabled) el = el.previousElementSibling;\r\n    if (me.circular && !el) el = me.lastElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  next() {\r\n    const me = this;\r\n    let el = me.#focused?.nextElementSibling;\r\n    while (el?.disabled) el = el.nextElementSibling;\r\n    if (me.circular && !el) el = me.firstElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    const me = this;\r\n    const active = me.selected;\r\n    if (me.multiple) {\r\n      active.forEach(el => {\r\n        el.active = false;\r\n        el.blur();\r\n      });\r\n    } else if (active) {\r\n      active.active = false;\r\n      active.blur();\r\n    }\r\n    me.#focused = undefined;\r\n    me.#host?.emit('group-reset', undefined, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element selected\r\n   * @param {*} el \r\n   */\r\n  #onSelected(el) {\r\n    const me = this;\r\n    me.#host?.onSelected?.(el);\r\n    me.#host?.emit('group-selected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element deselected\r\n   * @param {*} el \r\n   */\r\n  #onDeselected(el) {\r\n    this.#host?.onDeselected?.(el);\r\n    this.#host?.emit('group-deselected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  #onFocused(el) {\r\n    this.#host?.onFocused?.(el);\r\n    this.#host?.emit('group-focused', el, true);\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  #isNavigable(el) {\r\n    return this.#host?.isNavigable ? this.#host?.isNavigable(el) : true;\r\n  }\r\n\r\n  #focus(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    me.#focused = el;\r\n    if (el) {\r\n      me.#onFocused(me.#focused);\r\n    }\r\n  }\r\n\r\n  #toggle(el) {\r\n    if (!el) return;\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    if (el.active) {\r\n      me.#onSelected(el);\r\n    } else {\r\n      me.#onDeselected(el);\r\n    }\r\n  }\r\n\r\n  #select(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n\r\n    const active = me.selected;\r\n    if (active && !me.multiple) {\r\n      active.active = false;\r\n      me.#toggle(active);\r\n    }\r\n\r\n    if (me.multiple) {\r\n      el.active = !el.active;\r\n    } else {\r\n      el.active = true;\r\n    }\r\n    me.#toggle(el);\r\n  }\r\n\r\n  onFocusOut(e) {\r\n    const me = this;\r\n    //if (me.#focused === e.target) me.#focused = undefined;\r\n  }\r\n\r\n  onFocusIn(e) {\r\n    if (!e.target.isNav) return;\r\n    const me = this;\r\n    if(e.relatedTarget?.isNav) {\r\n      me.#focus(e.target)\r\n    } else {\r\n      me.selected?.focus();\r\n    }\r\n\r\n  }\r\n\r\n  onClick(e) {\r\n    const me = this;\r\n    const el = e.composedPath()\r\n    .filter(el => el instanceof GSElement)\r\n    .filter(el => el.parentComponent === me.#host).pop();\r\n    if (!me.#isNavigable(el)) return;\r\n    if (e.ctrlKey) me.reset();\r\n    me.#onDeselected(me.selected);\r\n    me.#select(el);\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    if (!e.target.isNav) return;\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        me.next();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    if (!e.target.isNav) return;\r\n    switch (e.code) {\r\n      case 'Space':\r\n      case 'Enter':\r\n        me.#focused?.click();\r\n        break;\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEventBus } from \"../base/GSEventBus.mjs\";\r\n\r\n/**\r\n * Controller for multiple elements groups\r\n */\r\nexport class GroupController {\r\n\r\n  #host;\r\n\r\n  #busEvent;\r\n  #busCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    if (me.#host.group) {\r\n      me.#busCallback = me.#onBusEvent.bind(me);\r\n      me.#busEvent = GSEventBus.register(me.#host.clazzName);\r\n      me.#busEvent.on(me.#host.group, me.#busCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#busEvent?.off(me.#host.group, me.#busCallback);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  #onBusEvent(e) {\r\n    this.#host.onBusEvent?.(e);\r\n  }\r\n\r\n  notify(data) {\r\n    const me = this;\r\n    me.#busEvent?.emit(me.#host.group, {owner: me.#host, item:data}); \t\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSRouter } from '../base/GSRouter.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSRouterElement extends GSElement {\r\n\r\n  #router = null;\r\n\r\n  static properties = {\r\n    url: {},\r\n    disabled: { type: Boolean },\r\n    logging: { type: Boolean }\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.logging = false;\r\n    this.#router = new GSRouter();\r\n    this.#router.log = false;\r\n  }\r\n\r\n  renderUI() {\r\n    return '';\r\n  }\r\n\r\n  updated(changed) {\r\n    this.#router.log = this.logging;\r\n    if (changed.has('url')) {\r\n      this.#router.initialize(this.url);\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.#router?.disable();\r\n    this.#router = null;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-router');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\n\r\nexport class GSAccordionElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    autoclose: { type: Boolean },\r\n    cssItem: { reflect: true, attribute: 'css-item' },\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    data: { type: Array }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.settings;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n       @notify=\"${me.#onNotify.bind(me)}\"\r\n       @click=\"${me.#onClick}\" \r\n       @keyup=\"${me.#onKeyUp}\" \r\n       class=\"accordion ${classMap(me.renderClass())}\">\r\n       ${this.#renderItems()}\r\n       <slot></slot></div>`\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-accordion-item', false, true);\r\n  }\r\n\r\n  get settings() {\r\n    const cfg = this.constructor.properties;\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n  }\r\n\r\n  close() {\r\n    this.#state(false);\r\n  }\r\n\r\n  open() {\r\n    this.#state(true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-accordion-item generated\r\n        .opened=\"${ifDefined(o.disabled === true)}\" \r\n        message=\"${ifDefined(o.message)}\" \r\n        template=\"${ifDefined(o.template)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-accordion-item>`;\r\n    });\r\n  }\r\n\r\n  #state(val = false) {\r\n    this.items.forEach(el => el.opened = val);\r\n    this.notify();\r\n  }\r\n\r\n  #onNotify(e) {\r\n    const me = this;\r\n    if (me.autoclose && e.target.opened) {\r\n      me.items.filter(el => el != e.target).forEach(el => el.opened = false);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const isItemCloser = e?.composedPath()[0]?.matches('.accordion-button');\r\n    if(isItemCloser) e.target.toggle?.();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        e.target.close?.();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.target.open?.();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSAccordionItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    message: { reflect: true, },\r\n    title: { reflect: true, },\r\n    opened: { type: Boolean, reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-ACCORDION';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const owner = me.owner;\r\n    const cssHeader = me.cssHeader || owner?.cssHeader;\r\n    const cssBody = me.cssBody || owner?.cssBody;\r\n    return html`<div class=\"accordion-item ${me.css}\">\r\n             <h2 class=\"accordion-header\">\r\n               <button type=\"button\" \r\n                class=\"accordion-button  ${cssHeader} ${me.opened ? '' : 'collapsed'}\"> \r\n                 ${me.translate(me.title)}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse  ${cssBody} ${me.opened ? 'show' : ''}\">\r\n               <div class=\"accordion-body\">\r\n                   ${me.translate(me.message)}\r\n                   ${me.renderTemplate()}\r\n                   <slot></slot>\r\n               </div>\r\n             </div>      \r\n     </div>`\r\n  }\r\n\r\n  open() {\r\n    this.notify(true);\r\n  }\r\n  \r\n  close() {\r\n    this.notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.notify(!this.opened);\r\n  }\r\n\r\n  notify(val = false) {\r\n    const me = this;\r\n    me.opened = val;\r\n    super.notify();\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-accordion') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSAlertElement extends GSElement {\r\n\r\n    static properties = {\r\n        message: { reflect: true },\r\n        color: { ...color },\r\n        closed: { reflect: true, type: Boolean },\r\n        closable: { reflect: true, type: Boolean },\r\n        delay: { reflect: true, type: Number },\r\n    }\r\n\r\n    #ref;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.delay = 1;\r\n        this.#ref = createRef();\r\n        this.#data = this.#proxify(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div role=\"alert\" dir=\"${ifDefined(me.direction)}\" ${ref(me.#ref)} \r\n            @mouseover=\"${() => me.#pause = true}\"\r\n            @mouseout=\"${() => me.#pause = false}\"\r\n            class=\"alert fade ${classMap(me.renderClass())}\" >\r\n            ${me.#first}\r\n            ${me.renderTemplate()}\r\n            <slot></slot>\r\n            ${me.#second}\r\n        </div>`;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#handleBillboard();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        if (!changed.has('opened')) return;\r\n        this.#handleBillboard();\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': !me.closed,\r\n            'alert-dismissible': me.closable,\r\n            [`alert-${me.color}`]: me.color,\r\n\r\n        }\r\n        return css;\r\n    }\r\n\r\n    open() {\r\n        this.notify(false);\r\n    }\r\n\r\n    close() {\r\n        this.notify(true);\r\n    }\r\n\r\n    toggle() {\r\n        this.notify(!this.closed);\r\n    }\r\n\r\n    notify(val = false) {\r\n        const me = this;\r\n        me.closed = val;\r\n        if (me.closed) setTimeout(() => { me.#ref.value.classList.toggle('d-none', true) }, 250);\r\n        super.notify();\r\n    }\r\n\r\n    get isBillboard() {\r\n        return this.#data?.length > 0;\r\n    }\r\n\r\n    get #message() {\r\n        return this.translate(this.message);\r\n    }\r\n\r\n    get #first() { return this.rtl ? this.#button : this.#message; };\r\n\r\n    get #second() { return this.rtl ? this.#message : this.#button; };\r\n\r\n    get #button() {\r\n        return this.closable ? html`<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"${this.close}\"></button>` : '';\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, {message:{}}));\r\n    }\r\n\r\n    #handleBillboard() {\r\n        const me = this;\r\n        if (me.closed) {\r\n            clearInterval(me.#interval);\r\n            me.#interval = 0;\r\n        } else {\r\n            me.#billboard();\r\n        }        \r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        if (!me.isBillboard) return;\r\n        const items = me.#data;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].message;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].message;\r\n        }, me.delay * 1000);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-alert');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { color, size, buttonType, ButtonTypes, SizeTypes } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSButtonElement extends GSElement {\r\n\r\n  static properties = {\r\n    type: { ...buttonType }, // reset, submit\r\n    size: { ...size }, // small, large, normal\r\n    color: { ...color },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    toggleColor: { ...color, attribute : 'toggle-color' },\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    outline: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    toggling: { type: Boolean },\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    text: {},\r\n    url: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'button';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<button is=\"gs-ext-button\" part=\"button\" role=\"button\" \r\n        ${ref(me.#refEl)}\r\n        dir=\"${ifDefined(me.direction)}\"\r\n        type=\"${ifDefined(me.type)}\" \r\n        class=\"btn ${classMap(me.renderClass())}\" \r\n        title=\"${ifDefined(me.#tooltip)}\"\r\n        ?disabled=${me.disabled}\r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"\r\n        @disabled=\"${me.#onDisabled}\"\r\n        @click=\"${me.#onClick}\">\r\n          ${me.#first} ${me.#second}</button>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n      'focus-ring': document.activeElement === me,\r\n      [`text-${me.text}`]: me.text,\r\n      [`btn-${size}`]: size,\r\n      [`btn-outline-${me.color}`]: me.outline,\r\n      [`btn-${me.color}`]: !me.outline && me.color,\r\n      [`btn-${me.toggleColor}`]: me.active && me.toggleColor,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    if(me.toggling) me.toggle();\r\n    me.iconEl?.animate?.();\r\n    me.#onHref(e)\r\n    if (me.dataset.event) return me.emit(me.dataset.event, null, me.dataset.bubbles, me.dataset.composed, true);\r\n    if (me.isReset) return me.form?.reset();\r\n    if (me.isSubmit) return me.form?.submit();\r\n    me.notify();\r\n  }\r\n\r\n  #onDisabled(e) {\r\n    this.disabled = this.buttonEl.disabled;\r\n  }\r\n\r\n  #onHref(e) {\r\n    const me = this;\r\n    if (!me.url) return;\r\n    if (me.url.startsWith('#')) {\r\n      location.hash = me.url;\r\n    } else {\r\n      location.href = me.url;\r\n    }\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover?.(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover?.(false);\r\n  }\r\n\r\n  get isReset() {\r\n    return ButtonTypes.isReset(this.type);\r\n  }\r\n\r\n  get isSubmit() {\r\n    return ButtonTypes.isSubmit(this.type);\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  get buttonEl() {\r\n    return this.#refEl.value;\r\n  }\r\n  \r\n\r\n  get form() {\r\n    return this.closest('gs-form, form');\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #tooltip() {\r\n    return this.translate(this.tooltip);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-button');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { unsafeHTML, classMap, html, ifDefined, css } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCalendarElement extends GSElement {\r\n\r\n  static styles = css`.year::-webkit-outer-spin-button,.year::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;} .year {-moz-appearance: textfield;} .day:focus{font-weight: bold;}`\r\n\r\n  static properties = {\r\n    date: {},\r\n    target: {},\r\n    format: { hasChanged: notEmpty },\r\n    editable: { type: Boolean },\r\n    range: { type: Number },\r\n    year: { type: Number },\r\n    month: { type: Number, hasChanged: numGE0 },\r\n    day: { type: Number, hasChanged: numGE0 },\r\n    minYear: { attribute: 'year-min', type: Number },\r\n    maxYear: { attribute: 'year-max', type: Number },\r\n    arrovPrev: { attribute: 'arrow-prev' },\r\n    arrowNext: { attribute: 'arrow-next' },\r\n    cssDays: { attribute: 'css-days' },\r\n    cssToday: { attribute: 'css-today' },\r\n    cssWeeks: { attribute: 'css-weeks' },\r\n    cssMonth: { attribute: 'css-month' },\r\n    cssYear: { attribute: 'css-year' },\r\n    cssNav: { attribute: 'css-nav' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n  }\r\n\r\n  #date;\r\n  #selected;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.#date = new GSDate();\r\n    me.#date.day = 1;\r\n    me.#selected = new GSDate();\r\n    me.#date.language = GSUtil.language;\r\n    me.#selected.language = GSUtil.language;\r\n    \r\n    me.language = GSUtil.language;\r\n    me.day = me.#selected.day;\r\n    me.month = me.#selected.month;\r\n    me.year = me.#selected.year;\r\n    \r\n    me.editable = false;\r\n    me.range = 5;\r\n    me.minYear = 1900;\r\n    me.maxYear = 2100;\r\n    me.arrowPrev = '&#10094;';\r\n    me.arrowNext = '&#10095;';\r\n    me.cssNav = 'btn-light';\r\n    me.cssToday = 'btn-secondary';\r\n    me.cssSelected = 'btn-primary';\r\n    me.cssWeeks = 'fw-bold text-bg-dark';\r\n    me.cssYear = 'form-control fs-5 fw-bold border-0 text-center m-1 p-0';\r\n    me.cssMonth = 'form-control fs-3 fw-bold border-0 text-center m-1 p-0';\r\n  }\r\n\r\n  get date() {\r\n    const me = this;\r\n    //return this.#date.toISOString();\r\n    return new Proxy(this.#date, {\r\n      set(target, prop, value) {\r\n        if (typeof target[prop] != 'function') {\r\n          target[prop] = value;\r\n          me.#update();\r\n        }\r\n        return true;\r\n      },\r\n      get(target, prop, receiver) {\r\n        const value = target[prop];\r\n        if (value instanceof Function) {\r\n          return function (...args) {\r\n            try {\r\n              return value.apply(this === receiver ? target : this, args);\r\n            } finally {\r\n              me.#update();\r\n            }\r\n          };\r\n        }\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  previousMonth() {\r\n    const me = this;\r\n    if (me.month == 0) {\r\n      me.month = 11;\r\n      me.year--;\r\n    } else {\r\n      me.month--;\r\n    }\r\n  }\r\n\r\n  nextMonth() {\r\n    const me = this;\r\n    if (me.month == 11) {\r\n      me.month = 0;\r\n      me.year++;\r\n    } else {\r\n      me.month++;\r\n    }\r\n  }\r\n\r\n  previousYear() {\r\n    this.year--;\r\n  }\r\n\r\n  nextYear() {\r\n    this.year++;\r\n  }\r\n\r\n  formatted(date) {\r\n    const me = this;\r\n    return (date || me.#date).format(me.format, me.language);\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    const date = new GSDate(me.#date);\r\n    me.#updateTarget(date);\r\n    me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#date.day = 1;\r\n    me.#date.month = me.month;\r\n    me.#date.year = me.year;\r\n    me.#date.day = me.day;\r\n    me.#date.language = me.language;\r\n\r\n    const week = GSDate.dayList(true, me.language).map(v => html`<div class=\"col\">${v}</div>`);\r\n    const months = me.#monthsHTML();\r\n    const year = me.#yearHTML();\r\n\r\n    return html`\r\n          <div class=\"container-fluid text-center ${classMap(me.renderClass())}\"\r\n          dir=\"${ifDefined(me.direction)}\"\r\n          @keydown=\"${me.#onKey}\"\r\n          @click=\"${me.#onDay}\">\r\n          <div class=\"row align-items-center ${me.cssHeader} header\">\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.previousMonth}\" class=\"btn ${me.cssNav} arrow prev\">${unsafeHTML(me.arrowPrev)}</a>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  ${months}\r\n                  ${year}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.nextMonth}\" class=\"btn ${me.cssNav} arrow next\">${unsafeHTML(me.arrowNext)}</a>\r\n              </div>\r\n          </div>\r\n          <div class=\"row weeks ${me.cssWeeks}\">${week}</div>\r\n          ${unsafeHTML(me.#daysHTML())}\r\n      </div>`;\r\n  }\r\n\r\n  #updateTarget(date) {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    const tgt = GSDOM.query(document.documentElement, me.target);\r\n    if (!tgt) return;\r\n\r\n    if (tgt instanceof HTMLInputElement) {\r\n      if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n      return tgt.value = me.formatted(date);\r\n    }\r\n    GSDOM.setHTML(tgt, me.formatted(date));\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    me.#selected.day = 1;\r\n    me.#selected.month = me.#date.month;\r\n    me.#selected.year = me.#date.year;\r\n    me.#selected.day = me.#date.day;\r\n    me.#selected.language = me.#date.language;\r\n\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.language = me.#date.language;\r\n  }\r\n\r\n  #isToday(v, date) {\r\n    const me = this;\r\n    return v && GSUtil.asNum(v) === date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n  }\r\n\r\n  #daysHTML() {\r\n    const me = this;\r\n    const today = new GSDate();\r\n    today.language = me.language;\r\n    const list = me.#date.build(me.language);\r\n    const result = list\r\n      .map(v => {\r\n        const c1 = me.#isToday(v, today) ? me.cssToday : '';\r\n        const c2 = me.#isToday(v, me.#selected) ? me.cssSelected : '';\r\n\r\n        const d = v ? `<a tabindex=\"0\" href=\"#\" class=\"btn shadow-none ${c2} ${c1} day\" data-day=\"${v}\">${v}</a>` : ''\r\n        return `<div class=\"col p-0\">${d}</div>`;\r\n      })\r\n      .map((v, i) => {\r\n        if (i === 0) return `<div class=\"row days\">${v}`;\r\n        const isBreak = i % 7 == 0;\r\n        return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n      });\r\n    result.push('</div>');\r\n    return result.join('');\r\n  }\r\n\r\n  #monthsHTML() {\r\n    const me = this;\r\n    const current = me.#date.MMMM;\r\n    const months = GSDate.monthList(false, me.language);\r\n    const list = months.map((v, i) => html`<option value=\"${i}\" selected=${ifDefined(current == v ? true : undefined)}>${v}</option>`);\r\n    return html`<select @change=\"${me.#onMonth}\" name=\"month\" class=\"month ${me.cssMonth}\" value=\"${months.indexOf(current)}\">${list}</select>`;\r\n  }\r\n\r\n  #yearHTML() {\r\n\r\n    const me = this;\r\n\r\n    const options = [];\r\n    let minYear = me.minYear;\r\n    let maxYear = me.maxYear;\r\n\r\n    if (me.range > 0) {\r\n      const year = new GSDate().year;\r\n      minYear = year - me.range;\r\n      maxYear = year + me.range;\r\n      me.#optionsHTML(options, minYear, maxYear);\r\n    }\r\n\r\n    if (!me.editable) {\r\n      return html`<select @change=\"${me.#onYear}\" name=\"year\" class=\"year ${me.cssYear}\" data-gs-min=\"${minYear}\" data-gs-max=\"${maxYear}\">${options}</select>`;\r\n    }\r\n\r\n    const isList = me.editable && me.range && options.length > 0;\r\n    const listID = isList ? GSID.next : null;\r\n    const list = isList ? html`<datalist id=\"${listID}\">${options}</datalist>` : '';\r\n\r\n    return html`<input name=\"year\" \r\n      type=\"number\" \r\n      list=\"${ifDefined(listID)}\"\r\n      class=\"year ${me.cssYear}\" \r\n      @change=\"${me.#onYear}\" \r\n      min=\"${minYear}\" \r\n      max=\"${maxYear}\"\r\n      value=\"${me.#date.getFullYear()}\">\r\n      ${list}`;\r\n  }\r\n\r\n  #optionsHTML(options, minYear = 0, maxYear = 0) {\r\n    const me = this;\r\n    let val = minYear;\r\n    while (val <= maxYear) {\r\n      if (me.editable) {\r\n        options.push(html`<option value=\"${val}\" selected=${ifDefined(val == me.year ? true : undefined)}>`);\r\n      } else {\r\n        options.push(html`<option value=\"${val}\" selected=${ifDefined(val == me.year ? true : undefined)}>${val}</option>`);\r\n      }\r\n      val++;\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  #onDay(e) {\r\n    GSEvents.prevent(e);\r\n    if (!e.target.classList.contains('day')) return;\r\n    const me = this;\r\n    const day = GSUtil.asNum(e.target.dataset.day, me.day);\r\n\r\n    me.#selected.day = 1;\r\n    me.#selected.month = me.month;\r\n    me.#selected.year = me.year;\r\n    me.#selected.day = day;\r\n\r\n    me.day = day;\r\n  }\r\n\r\n  #onMonth(e) {\r\n    this.month = e.target.selectedIndex;\r\n  }\r\n\r\n  #onYear(e) {\r\n    const yearEl = e?.target;\r\n    if (yearEl?.validity.valid) {\r\n      this.year = yearEl.value;\r\n    }\r\n  }\r\n\r\n  #onKey(e) {\r\n    // console.log(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-calendar');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCardElement extends GSElement {\r\n\r\n  static styles = css`.card-header, .card-footer{ background-color: inherit; color: inherit;}`;\r\n\r\n  static properties = {\r\n\r\n    imageStyle: { type: Object, attribute: 'image-style', reflect : true },\r\n\r\n    overlay: { type: Boolean },\r\n    placement: { ...placement },\r\n    align: { ...placement },\r\n\r\n    image: {},\r\n    title: {},\r\n    subtitle: {},\r\n    text: {},\r\n    footer: {},\r\n    header: {},\r\n\r\n    colorText: { attribute: 'color-text' },\r\n    colorBack: { attribute: 'color-back' },\r\n    colorBorder: { attribute: 'color-border' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssSubtitle: { attribute: 'css-subtitle' },\r\n    cssText: { attribute: 'css-text' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssImage: { attribute: 'css-image' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.border = false;\r\n    this.shadow = false;\r\n    this.align = 'start';\r\n    this.placement = 'top';\r\n    this.imageStyle = this.imageStyle || {};\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const content =  me.isVertical ? me.#renderVertical() : me.#renderHorizontal();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"card ${classMap(me.renderClass())}\">${content}</div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return [me.#imageTop, me.#header, me.#body, me.#footer, me.#imageBottom];\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    const start = PlacementTypes.isBefore(me.placement);\r\n    const startClass = start ? 'col-4' : 'col-8';\r\n    const endClass = start ? 'col-8' : 'col-4';\r\n    const startHtml = start ? me.#images : me.#body;\r\n    const endHtml =  start ? me.#body : me.#images;\r\n    return html`<div class=\"row g-0\">\r\n        <div class=\"${startClass}\">\r\n            ${startHtml}\r\n        </div>\r\n        <div class=\"${endClass}\">\r\n          ${endHtml}\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      border: me.border || me.colorBorder,\r\n      [`text-${me.align}`]: me.align,\r\n      [`text-${me.colorText}`]: me.colorText,\r\n      [`bg-${me.colorBack}`]: me.colorBack,\r\n      [`border-${me.colorBorder}`]: me.colorBorder,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return PlacementTypes.isHorizontal(this.placement);\r\n  }\r\n\r\n  get #body() {\r\n    const me = this;\r\n    return html`<div class=\"${me.overlay ? 'card-img-overlay' : 'card-body'} ${me.cssBody}\">\r\n      <h5 class=\"card-title  ${me.cssTitle}\"><slot name=\"title\">${me.translate(me.title)}</slot></h5>\r\n      <h6 class=\"card-subtitle  ${me.cssSubtitle}\"><slot name=\"subtitle\">${me.translate(me.subtitle)}</slot></h6>\r\n      <p class=\"card-text ${me.cssText}\"><slot name=\"text\">${me.translate(me.text)}</slot></p>\r\n      <slot name=\"body\"></slot>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  get #header() {\r\n    return this.overlay ? '' : html`<div class=\"card-header  ${this.cssHeader}\"><slot name=\"header\">${this.header}</slot></div>`;\r\n  }\r\n\r\n  get #footer() {\r\n    return this.overlay ? '' : html`<div class=\"card-footer ${this.cssFooter}\"><slot name=\"footer\">${this.footer}</slot></div>`;\r\n  }\r\n\r\n  get #imageSlot() {\r\n    return html`<slot name=\"image\"></slot>`;\r\n  }\r\n\r\n  get #image() {\r\n    const me = this;\r\n    const css = me.isHorizontal ? 'img-fluid' : 'card-img';\r\n    me.dynamicStyle(me.#styleID, me.imageStyle);\r\n    return html`<img src=\"${me.image}\" class=\"rounded-${me.placement} ${css} ${me.cssImage} ${me.#styleID}\" alt=\"...\">`;\r\n  }\r\n\r\n  get #images() {\r\n    return this.image ? this.#image : this.#imageSlot;\r\n  }\r\n\r\n  get #imageTop() {\r\n    return this.placement === 'top' ? this.#images : '';\r\n  }\r\n\r\n  get #imageBottom() {\r\n    return this.placement === 'bottom' ? this.#images : '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-card');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSCenterElement extends GSElement {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n      class=\"position-absolute top-50 start-50 translate-middle ${classMap(me.renderClass())}\">\r\n    ${me.renderTemplate()}<slot></slot></div>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-center');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenuElement class\r\n * @module components/GSMenuElement\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSMenuElement extends GSElement {\r\n\r\n    static properties = {\r\n        storage: {},\r\n        auto: { type: Boolean, reflect: true },\r\n        opened: { type: Boolean, reflect: true },\r\n        dark: { type: Boolean },\r\n        reverse: { type: Boolean },\r\n        offset: { type: Number },\r\n        data: { type: Array },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {},\r\n        title: {},\r\n        header: {},\r\n        color: {},\r\n        icon: {},\r\n        url: { default: '#' }\r\n    }\r\n\r\n    #menuRef = createRef();\r\n    #styleID = GSID.id;\r\n    #controller = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.offset = 0;\r\n        me.dynamicStyle(me.#styleID);\r\n        me.data = me.#proxify(me);\r\n        me.#controller = new GroupController(this);\r\n    }\r\n\r\n    onBusEvent(e) {\r\n       if (e.detail.owner != this) {\r\n            this.opened = false;\r\n       }\r\n     }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        if (changed.has('opened') && !this.opened) {\r\n            this.#closeSubmenus();\r\n        }\r\n    }\r\n\r\n    updated() {\r\n        this.#updatePosition();\r\n        if (this.opened) {\r\n            this.#controller.notify();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<ul \r\n            ${ref(me.#menuRef)}\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            class=\"dropdown-menu ${classMap(me.renderClass())}\"\r\n            data-gs-class=\"${me.#styleID}\"\r\n            data-menu=\"true\"\r\n            @mouseover=\"${me.#onMouseOver}\"\r\n            @mouseleave=\"${me.#onMouseLeave}\"\r\n            @keydown=\"${me.#onKeyDown}\"\r\n            @click=\"${me.#onClick}\">\r\n            ${me.#items(me.data)}\r\n        </ul>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'submenu': me.dataset.submenu,\r\n            'dropdown-menu-dark': me.dark,\r\n            [me.#styleID]: true,\r\n            'show': me.opened,\r\n            'dropend': !me.reverse,\r\n            'dropstart': me.reverse,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    /**\r\n     * Show at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {HTMLElement} caller\r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n\r\n        const me = this;\r\n        // offset to render under the mouse,\r\n        // important for GSGrid for better UI experience\r\n        const offset = GSUtil.asNum(me.offset, 0);\r\n        let target = caller;\r\n\r\n        if (GSEvents.isMouseOrPointerEvent(x)) {\r\n            const e = x;\r\n            target = e.target;\r\n            y = e.clientY;\r\n            x = e.clientX;\r\n            let offset = GSDOM.offsetParent(me);\r\n            offset = offset ? offset.getBoundingClientRect() : null;\r\n            x = x - (offset?.left || 0);\r\n            y = y - (offset?.top || 0);\r\n        }\r\n\r\n        const cfg = { clientX: x - offset, clientY: y - offset, target: target };\r\n\r\n        requestAnimationFrame(() => {\r\n            const style = {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                left: '0px',\r\n                translate: `${cfg.clientX}px ${cfg.clientY}px`\r\n            };\r\n            const rule = me.dynamicStyle(me.#styleID);\r\n            Object.assign(rule.style, style);\r\n        });\r\n        me.open();\r\n\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    #items(root) {\r\n        const me = this;\r\n        return root.map(el => me.#item(el));\r\n    }\r\n\r\n    #item(el) {\r\n        const me = this;\r\n        const isSub = el.items?.length > 0;\r\n        if (isSub) return me.#renderSubmenu(el);\r\n        if (!(el.header || el.name)) return me.#renderDivider();\r\n        return el.header ? me.#renderHeader(el) : me.#renderMenu(el);\r\n    }\r\n\r\n    #renderHeader(el) {\r\n        return html`<li data-inert=\"true\"><h6 class=\"dropdown-header\">${this.#renderIcon(el)}${el.header}</h6></li>`;\r\n    }\r\n\r\n    #renderDivider() {\r\n        return html`<li data-inert=\"true\"><hr class=\"dropdown-divider\"></li>`;\r\n    }\r\n\r\n    #renderSubmenu(el) {\r\n        const me = this;\r\n        return html`<li>\r\n            <a class=\"dropdown-item dropdown-toggle\" data-toggle=\"true\" href=\"#\">\r\n                <div class=\"d-inline-block w-100\">${me.#renderIcon(el)}${el.name}</div>\r\n            </a>\r\n            <gs-menu auto \r\n                .data=${el.items} \r\n                ?dark=${me.dark} \r\n                ?reverse=\"${me.reverse}\" \r\n                language=\"${ifDefined(me.language)}\" \r\n                data-submenu=\"true\">\r\n            </gs-menu>\r\n        </li>`;\r\n    }\r\n\r\n    #renderIcon(el) {\r\n        return el.icon ? html`<gs-icon css=\"mx-1\" name=\"${el.icon}\"></gs-icon>` : '';\r\n    }\r\n\r\n    #renderMenu(el) {\r\n        return html`<li>\r\n                <gs-button css=\"dropdown-item shadow-none\" \r\n                    ${dataset(el, false)}\r\n                    url=\"${el.url}\"\r\n                    title=\"${el.name}\" \r\n                    language=\"${ifDefined(this.language)}\" \r\n                    icon=\"${ifDefined(el.icon)}\" \r\n                    text=\"${ifDefined(el.color)}\"\r\n                    data-gs-target=\"${ifDefined(el.target || 'self')}\"\r\n                    data-gs-action=\"${ifDefined(el.action)}\">\r\n                </gs-button></li>`;\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSMenuElement.options));\r\n    }\r\n\r\n    #closeSubmenus(menu) {\r\n        GSDOM.queryAll(this.renderRoot, 'gs-menu', false, false)\r\n            .filter(el => el != menu)\r\n            .forEach(el => el.close());\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.key) {\r\n            case 'Escape':\r\n                me.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        submenu?.close();\r\n        if (me.auto) me.close();\r\n    }\r\n\r\n    #onMouseLeave(e) {\r\n        GSEvents.prevent(e);\r\n        if (this.auto) this.close();\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        me.#closeSubmenus(submenu);\r\n        submenu?.open();\r\n    }\r\n\r\n    #toSubmenu(e) {\r\n        const menuItem = e.target.closest('li');\r\n        return menuItem?.querySelector('gs-menu');\r\n    }\r\n\r\n    #updatePosition() {\r\n        const me = this;\r\n        if (!me.opened) return;\r\n        const rule = me.dynamicStyle(me.#styleID);\r\n        if (me.isSubmenu) {\r\n            const opt = { translate: `0px -25px` };\r\n            if (me.reverse) {\r\n                opt.left = 'inherited';\r\n                opt.right = '100%';\r\n            } else {\r\n                opt.right = 'inherited';\r\n                opt.left = '100%';\r\n            }\r\n            Object.assign(rule.style, opt);\r\n        } else {\r\n            rule.style.translate = null;\r\n            const rect = me.#menu.getBoundingClientRect();\r\n            const offset = window.innerWidth - rect.right;\r\n            me.reverse = offset - 5 < 0;\r\n            if (me.reverse) rule.style.translate = `${offset - 2}px`;\r\n        }\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.dataset.submenu;\r\n    }\r\n\r\n    get #menu() {\r\n        return this.#menuRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-menu');\r\n    }\r\n}\r\n","/*GSContextElement\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContextElement class\r\n * @module components/GSContextElement\r\n */\r\n\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for context menu\r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSContextElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        target: {},\r\n        filter: {},\r\n        altContext: { type: Boolean, attribute: 'altcontext' },\r\n        disabled: { type: Boolean },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;        \r\n        me.auto = true;\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n            me.target = \"tbody\";\r\n            me.filter = \"[selected]\";\r\n            me.offset =\"4\";\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', me.close.bind(me));        \r\n        if (!me.slot) me.#attachTarget();\r\n    }\r\n    \r\n    onSlotInjected(slot) {\r\n        this.#attachTarget();\r\n    }\r\n\r\n    #attachTarget() {\r\n        const me = this;        \r\n        const owner = GSDOM.parent(me.assignedSlot || me);\r\n        let targets = me.target ? GSDOM.queryAll(owner, me.target) : [owner];\r\n        if (!targets.length) targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    }\r\n\r\n    #match(e) {\r\n        const me = this;\r\n        return e.composedPath().filter(el => el.matches)\r\n            .filter(el => el.matches(me.filter ? me.filter : me.target));\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        if (e.shiftKey && me.altContext) return;\r\n        const list = me.#match(e);\r\n        if (list.length === 0) return;\r\n        GSEvents.prevent(e);\r\n        me.popup(e);\r\n        return true;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    /**\r\n     * Show submenu at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n        return this.disabled ? false : super.popup(x, y, caller);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-context');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, notEmpty } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\nexport class GSCompareElement extends GSElement {\r\n\r\n  static styles = css`.slider {\r\n         --gs-position : 50%;\r\n          left : var(--gs-position);\r\n          width: 8px;\r\n          height: 100%;\r\n          border-width: 1px;\r\n          cursor: w-resize;\r\n          border-color: darkgray;\r\n          border-style: solid;\r\n          background-color: lightgray;\r\n      }\r\n      .clipper {\r\n        --gs-position : 50%;\r\n        clip-path: inset(0px var(--gs-position) 0px 0px);\r\n      }\r\n    `;\r\n\r\n  static properties = {\r\n    background: { ...color },\r\n    width: { type: Number },\r\n    height: { type: Number },\r\n    before: { hasChanged: notEmpty },\r\n    after: { hasChanged: notEmpty },\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  #elRef = createRef();\r\n  #clipRef = createRef();\r\n  #slideRef = createRef();\r\n\r\n  #mouseController;\r\n  #elPosition;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.width = 0;\r\n    me.height = 0;\r\n    me.dynamicStyle(me.#styleID);\r\n    me.#mouseController = new ElementMoveController(me);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#mouseController.attach(this.#splitter);\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n         dir=\"${ifDefined(me.direction)}\"\r\n         @loaded=\"${me.#onLoad}\" \r\n         @dblclick=\"${me.#onDoubleClick}\"\r\n         data-gs-class=\"${me.#styleID}\"\r\n         class=\"${classMap(me.renderClass())}\">\r\n      <div class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden\"><slot name=\"before\">${me.#before}</slot></div>\r\n      <div ${ref(me.#clipRef)} class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden clipper\"><slot name=\"after\">${me.#after}</slot></div>\r\n      <div ${ref(me.#slideRef)} class=\"slider position-absolute top-0><slot name=\"control\"></slot></div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      \"position-relative\": true,\r\n      \"user-select-none\": true,\r\n      \"d-contents\": me.isAuto,\r\n      \"h-100\": me.isAuto,\r\n      \"w-100\": me.isAuto,\r\n      \"overflow-hidden\": true,\r\n      [`bg-${me.background}`]: me.background,\r\n      [`${me.#styleID}`]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Handles resizing based on mouse move event\r\n   * @param {MouseEvent} e \r\n   */\r\n  onStartMove(e) {\r\n    this.#elPosition = this.#splitter.getBoundingClientRect();\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    const me = this;\r\n    const offset = me.#elPosition.left;\r\n    const width = me.#elPosition.width;\r\n    const pos = GSUtil.range(e.clientX - offset, 0, width);\r\n    const pct = (pos / width) * 100;\r\n    me.#update(pct);\r\n  }\r\n\r\n  get isAuto() {\r\n    return this.width == 0 || this.height == 0;\r\n  }\r\n\r\n  get isFixed() {\r\n    return !this.isAuto;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  get #before() {\r\n    return this.before ? html`<img @load=\"${this.#onLoad}\" src=\"${me.before}\"></img>` : '';\r\n  }\r\n\r\n  get #after() {\r\n    return this.after ? html`<img @load=\"${this.#onLoad}\" src=\"${me.after}\"></img>` : '';\r\n  }\r\n\r\n  get #isAuto() {\r\n    return this.width === 0 || this.height === 0;\r\n  }\r\n\r\n  get #splitter() {\r\n    return this.#elRef.value;\r\n  }\r\n\r\n  get #slider() {\r\n    return this.#slideRef.value;\r\n  }\r\n\r\n  get #clip() {\r\n    return this.#clipRef.value;\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const me = this;\r\n    if (me.#isAuto) {\r\n      const el = e.target;\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n    }\r\n  }\r\n\r\n  #onDoubleClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#update();\r\n    me.#mouseController.reset();\r\n  }\r\n\r\n  #update(pct = 50) {\r\n    const me = this;\r\n    me.#clip.style.setProperty('--gs-position', `${100 - pct}%`);\r\n    me.#slider.style.setProperty('--gs-position', `${pct}%`);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-compare');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\n\r\n/**\r\n * Helper component to enable controller attachment to the GS WebComponent.\r\n * It is used to simplify and separate templates from logic.\r\n */\r\nexport class GSControllerElement extends GSElement {\r\n\r\n  static properties = {\r\n    module: {},\r\n    controller: {},\r\n  }\r\n\r\n  #clazz = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  updated(changes) {\r\n    super.updated(changes);\r\n    const me = this;\r\n    if (me.isConnected && me.isValid) {\r\n      me.#initialize();\r\n    }\r\n  }\r\n\r\n  get isValid() {\r\n    return this.parentElement instanceof GSElement;\r\n  }\r\n\r\n  async #initialize() {\r\n\r\n    const me = this;\r\n    const host = me.parentElement;\r\n\r\n    if (me.#clazz) return;\r\n\r\n    let clazz = globalThis[me.controller];\r\n    if (!clazz && me.module) {\r\n      const url = GSLoader.normalizeURL(me.module);\r\n      const module = await import(url);\r\n      clazz = module[me.controller];\r\n    }\r\n\r\n    if (clazz) {\r\n      new clazz(host);\r\n      me.#clazz = clazz;\r\n      globalThis[me.controller] = clazz;\r\n    }\r\n\r\n  }\r\n\r\n  static {\r\n    this.define('gs-controller');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSCopyrightElement extends GSElement {\r\n\r\n  static properties = {\r\n    year: { reflect: true, type: Number },\r\n    company: { reflect: true },\r\n    url: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    if (!(me.isCompany && me.isYear)) return '';\r\n    const year = new Date().getFullYear();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"${classMap(me.renderClass())}\"><a target=\"_blank\" href=\"${me.url ? me.url : '#'}\"><small>&copy; ${me.company} ${me.year}. - ${year}.</small></a></div>`;\r\n  }\r\n\r\n  get isCompany() {\r\n    return GSUtil.isStringNonEmpty(this.company);\r\n  }\r\n\r\n  get isYear() {\r\n    return GSUtil.isStringNonEmpty(this.year);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-copyright');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSFunction } from '../base/GSFunction.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/verificator.mjs';\r\nimport { GSReadWriteRegistry } from '../data/ReadWriteRegistry.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for easier access to the GSReadWrite/GSTreeReader\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSDataHandler extends GSElement {\r\n\r\n    static properties = {\r\n        storage: { state: true },\r\n        src: { reflect: true },\r\n        action: { reflect: true },\r\n        mode: { reflect: true },\r\n        reader: { reflect: true },\r\n        writer: { reflect: true },\r\n        limit: { type: Number, reflect: true },\r\n        skip: { type: Number, reflect: true },\r\n        filter: { type: Array, reflect: true },\r\n        sort: { type: Array, reflect: true },\r\n        type: {},\r\n        autoload: { type: Boolean },\r\n        autorefresh: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    }\r\n\r\n    #iid = 0;\r\n    #config = null;\r\n    #handler = null;\r\n    #lifoReadRef = null;\r\n    #lifoWriteRef = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        me.autorefresh = 0;\r\n        me.autoload = false;\r\n        me.flat = true;\r\n        me.filter = [];\r\n        me.sort = [];\r\n        me.limit = 0;\r\n        me.skip = 0;\r\n        me.src = '';\r\n        me.type = 'remote';\r\n        me.mode = 'query';\r\n        me.reader = 'GET';\r\n        me.writer = 'POST';\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n          }\r\n        if (!me.isGenerated && !me.id) throw new Error('Element ID is required attribute!');\r\n        GSItem.validate(me, me.tagName);\r\n    }\r\n    \r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        const itemHolder = me.isGenerated && me.childElementCount === 0 ? me.parentComponent : me;\r\n        me.#config = GSItem.proxify(itemHolder, GSData.PROPERTIES);\r\n        me.#initLIFO(true);\r\n        me.#initLIFO(false);\r\n    }\r\n    \r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        me.#handler?.disable();\r\n        me.#handler?.removeProcessor(me);\r\n        me.#lifoReadRef = null;\r\n        me.#lifoWriteRef = null;\r\n        clearTimeout(me.#iid);\r\n    }\r\n    \r\n    firstUpdated() {\r\n        const me = this;\r\n        me.#handler = GSReadWriteRegistry.newHandler(me.type, me.storage, false);\r\n        if (me.#config?.length > 0) me.#handler?.addProcessor(me);\r\n        me.#updateHandler(true);                \r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        const me = this;\r\n        me.#updateHandler();\r\n        if (changed.has('autorefresh')) me.schedule(me.autorefresh);\r\n    }\r\n\r\n    #updateHandler(first = false) {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.key = me.key;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.formatSort(me.sort);\r\n        me.#handler.filter = me.formatFilter(me.filter);\r\n        if (me.autoload) me.read();\r\n        if (first) {\r\n            me.#handler.enable();\r\n            // to prevent double read by this component and table\r\n            if (me.autoload) {\r\n                me.dataController?.read();\r\n            } \r\n        }\r\n    }\r\n\r\n    get isDebug() {\r\n        return this.dataset.gsDebug;\r\n    }\r\n\r\n    get handler() {\r\n        return this.#handler;\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    get isCached() {\r\n        return this.#handler?.type == 'cached';\r\n    }\r\n\r\n    set search(val) {\r\n        if (this.#handler) this.#handler.search = val;\r\n    }\r\n\r\n    get key() {\r\n        return this.#config.filter(o => o.key).map(o => o.name).pop() || null;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    formatFilter(val) {\r\n        val = this.#formated(val);\r\n        return Array.isArray(val) ? val : [];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    formatSort(val) {\r\n        val = this.#formated(val);\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort || [];\r\n    }\r\n\r\n    schedule(time = 0) {\r\n        const me = this;\r\n        time = GSUtil.asNum(time) * 1000;\r\n        clearInterval(me.#iid);\r\n        if (time > 0) me.#iid = setInterval(() => {\r\n            me.read(me);\r\n        }, time);\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data, append = false) {\r\n        return this.#lifoWriteRef(data, append);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return this.#handler?.selected;\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        return this.#handler?.addSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        return this.#handler?.removeSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        return this.#handler?.clearSelected();\r\n    }\r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onDataRead(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data Read: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onDataWrite(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data write: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Process data after receive, before notifying \r\n     * @param {*} data \r\n     */\r\n    postRead(data) {\r\n        const me = this;\r\n        if (!Array.isArray(data)) data = [data];\r\n        data.forEach(r => {\r\n            me.#config.forEach(c => {\r\n                let val = r[c.name];\r\n                if (!GSUtil.isNull(val)) {\r\n                    val = GSData.format(c, val);\r\n                    r[c.name] = val;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onDataError(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data error: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #initLIFO(read = true) {\r\n        const me = this;\r\n        if (read) {\r\n            me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n        } else {\r\n            me.#lifoWriteRef = GSFunction.callOnceLifo(me.#lifoWriteRefCallback, me);\r\n        }\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO(true);\r\n        return me.#lifoCall(true);\r\n    }\r\n\r\n    #lifoWriteRefCallback(data, append) {\r\n        const me = this;\r\n        me.#initLIFO(false);\r\n        return me.#lifoCall(false, data, append);\r\n    }\r\n    \r\n    #lifoCall(read = true, data, append) {\r\n        const me = this;\r\n        me.#verifyHandler();        \r\n        if (read) return me.#handler?.read(me);        \r\n        if (!append) me.#handler.clear();\r\n        return me.#handler?.write(me, data);\r\n    }\r\n\r\n    #formated(val) {\r\n        return GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    static {\r\n        this.define('gs-data-handler');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { size, SizeTypes } from '../properties/size.mjs';\r\n\r\nexport class GSDialogElement extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n  static ALIGN = 'end';\r\n  static CANCEL = 'Cancel';\r\n  static CONFIRM = 'Ok';\r\n\r\n  static #STACK = [];\r\n\r\n  static styles = css`dialog {\r\n      --bs-modal-width: 500px;\r\n      width:var(--bs-modal-width);\r\n      outline:none;\r\n    }\r\n    dialog::backdrop {\r\n      backdrop-filter: blur(4px);\r\n      backdrop-filter: blur(var(--gs-backdrop-blur));      \r\n      background-color: var(--gs-backdrop-color);\r\n      display: var(--gs-backdrop-display);\r\n    }`;\r\n\r\n  static properties = {\r\n\r\n    standard: { reflect: true, type: Boolean },\r\n    opened: { reflect: true, type: Boolean },\r\n    cancelable: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    escapable: { reflect: true, type: Boolean },\r\n    disabled: { reflect: true, type: Boolean },\r\n\r\n    size: size,\r\n\r\n    title: { reflect: true },\r\n    message: { reflect: true },\r\n    cancelText: { reflect: true, attribute: 'text-cancel' },\r\n    confirmText: { reflect: true, attribute: 'text-confirm' },\r\n\r\n    minWidth: { reflect: true, type: Number, attribute: 'min-width' },\r\n    buttonAlign: { reflect: true, attribute: 'button-align' },\r\n\r\n    iconCancel: { reflect: true, attribute: 'icon-cancel' },\r\n    iconConfirm: { reflect: true, attribute: 'icon-confirm' },\r\n\r\n    colorCancel: { attribute: 'color-cancel' },\r\n    colorConfirm: { attribute: 'color-confirm' },\r\n\r\n    cssCancel: { attribute: 'css-cancel' },\r\n    cssConfirm: { attribute: 'css-confirm' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssContent: { attribute: 'css-content' },\r\n\r\n  }\r\n\r\n  #pass = false;\r\n  #styleID = GSID.id;\r\n  #dialogRef = createRef();\r\n  #btnConfirmRef = createRef();\r\n  #btnCancelRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    const clazz = GSDialogElement;\r\n    me.opened = false;\r\n    me.standard = false;\r\n    me.cancelable = false;\r\n    me.closable = false;\r\n    me.escapable = false;\r\n    me.disabled = false;\r\n    me.shadow = false;\r\n    me.rounded = false;\r\n\r\n    me.minWidth = 0;\r\n    me.css = clazz.CSS;\r\n    me.cssTitle = clazz.TITLE_CSS;\r\n    me.cssHeader = clazz.HEADER_CSS;\r\n    me.buttonAlign = clazz.ALIGN;\r\n    me.cancelText = clazz.CANCEL;\r\n    me.confirmText = clazz.CONFIRM;\r\n    me.colorCancel = 'secondary';\r\n    me.colorConfirm = 'primary';\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialogElement.#updateStack();\r\n  }\r\n\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    this.#pass = true;\r\n  }\r\n\r\n  _shouldUpdate(changed) {\r\n    const me = this;\r\n    return me.opened === true || me.#pass;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    const allowed = me.opened === true || me.#pass;\r\n    // initially hidden dialogs rendering are posponed\r\n    if (!allowed) {\r\n      GSUtil.timeout(1000).then(() => {\r\n        queueMicrotask(() => { \r\n          const allowed = me.opened === true || me.#pass;\r\n          if (!allowed) {\r\n            me.#pass = true;\r\n            if (me.isConnected) me.requestUpdate();\r\n          }\r\n        });          \r\n      });\r\n    }\r\n    return allowed;\r\n  }\r\n\r\n  updated(changed) {\r\n    super.updated(changed);\r\n    if (changed.has('opened')) {\r\n      this.#onOpenChanged();\r\n    }\r\n  }\r\n\r\n  #onOpenChanged() {\r\n    const me = this;\r\n    let state = null;\r\n    if (me.opened) {\r\n      GSDialogElement.#STACK.push(me);\r\n      state = 'opening';\r\n      if (me.standard) {\r\n        me.#dialog?.open();\r\n      } else {\r\n        me.#dialog?.showModal();\r\n      }\r\n      me.#focusable()?.focus();\r\n    } else {\r\n      state = 'closing';\r\n      if (me.isHashed) location.hash = '';\r\n      GSDialogElement.#STACK.pop();\r\n      me.#dialog?.close();\r\n    }\r\n    me.notify(true, false, state);\r\n  }\r\n\r\n  #renderConfirm() {\r\n    const me = this;\r\n    if (!me.closable) return '';\r\n    return html`<gs-button  ${ref(me.#btnConfirmRef)} \r\n      @click=\"${me.#onConfirm.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconConfirm)}\"\r\n      language=\"${ifDefined(me.language)}\"\r\n      .disabled=\"${me.disabled}\"  \r\n      css=\"${ifDefined(me.cssConfirm)}\" \r\n      color=\"${ifDefined(me.colorConfirm)}\" \r\n      title=\"${me.confirmText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderCancel() {\r\n    const me = this;\r\n    if (!me.cancelable) return '';\r\n    return html`<gs-button ${ref(me.#btnCancelRef)}\r\n      @click=\"${me.#onCancel.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconCancel)}\"\r\n      language=\"${ifDefined(me.language)}\"\r\n      css=\"${ifDefined(me.cssCancel)}\" \r\n      color=\"${ifDefined(me.colorCancel)}\" \r\n      title=\"${me.cancelText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderFooter() {\r\n    const me = this;\r\n    const isFooter = me.cancelable || me.closable;\r\n    if (!isFooter) return '';\r\n    return html`<div class=\"card-footer d-flex user-select-none justify-content-${me.buttonAlign} ${me.cssFooter}\">\r\n       <slot name=\"actions\"></slot>\r\n      ${me.#renderCancel()} &nbsp;${me.#renderConfirm()}\r\n      </div>`;\r\n  }\r\n\r\n  #renderContent() {\r\n    const me = this;\r\n    const css = {\r\n      card : true,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0      \r\n    }\r\n    me.cssContent?.match(/[^ ]+/g).forEach(v => css[v]=true);\r\n    return css;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    //...super.renderClass(),\r\n    const css = {\r\n      'dialog': true,\r\n      'p-0': true,\r\n      'border': me.bordered,\r\n      'border-0': !me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,      \r\n      [me.#styleID]: true,\r\n      [`modal-${size}`]: size ? true : false\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const styles = {\r\n      'min-width': me.minWidth > 0 ? `${me.minWidth}px` : undefined\r\n    };\r\n    me.dynamicStyle(me.#styleID, styles);\r\n    return html`\r\n        <dialog tabindex=\"-1\" ${ref(me.#dialogRef)} \r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @close=\"${me.#onCancel.bind(me)}\"\r\n            @cancel=\"${me.#onCancel.bind(me)}\"\r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @form=\"${me.#onForm.bind(me)}\"\r\n            @confirm=\"${me.#onConfirm.bind(me)}\"\r\n            @submit=\"${me.#onSubmit.bind(me)}\"\r\n            class=\"${classMap(me.renderClass())}\">\r\n            <div class=\"${classMap(me.#renderContent())}\">\r\n                <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n                  <div class=\"card-title ${me.cssTitle}\">\r\n                    <slot name=\"title\">${me.translate(me.title)}</slot>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body ${me.cssBody}\">\r\n                  <slot name=\"body\">\r\n                  ${me.translate(me.message)}\r\n                  ${me.renderTemplate()}\r\n                  </slot>\r\n                  </div>\r\n                  ${me.#renderFooter()}\r\n                  </div>\r\n                  <slot name=\"extra\"></slot>\r\n                  <div class=\"toast-container position-fixed\"></slot></div>\r\n                  </dialog>\r\n                  `;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.closable = closable;\r\n    me.cancelable = cancelable;\r\n    me.escapable = cancelable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('click-action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    return this.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    return this.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    index = GSUtil.asNum(index, 0);\r\n    const me = this;\r\n    me.forms?.forEach?.(f => { f.reset(); f.data = data; });\r\n    const tab = me.tab;\r\n    if (tab && index > -1) tab.index = index;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Retrun true if dialog is opened by hashbang.\r\n   * Used to clear the hashbang on close\r\n   */\r\n  get isHashed() {\r\n    return GSUtil.asBool(this.dataset.gsHashed);\r\n  }\r\n\r\n  get form() {\r\n    return this.query('gs-form', true, true);\r\n  }\r\n\r\n  get forms() {\r\n    return this.queryAll('gs-form', true, true);\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('gs-tab', true, true);\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.#dialogRef.value;\r\n  }\r\n\r\n  get #btnConfirm() {\r\n    return this.#btnConfirmRef.value;\r\n  }\r\n\r\n  get #btnCancel() {\r\n    return this.#btnCancelRef.value;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  #focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#btnCancel;\r\n    if (me.closable) return me.#btnConfirm;\r\n    return me;\r\n  }\r\n\r\n  async #onConfirm(e) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const ret = await Promise.all(me.forms?.map?.(form => form.submit()));\r\n    if (ret.indexOf(false) < 0) me.close();\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.close();\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle injected form events\r\n   * @param {*} e \r\n   */\r\n  #onForm(e) {\r\n    let sts = true;\r\n    const me = this;\r\n    const data = e.detail;\r\n    switch (data.type) {\r\n      case 'submit':\r\n        sts = me.emit('data', data.data, false, false, true);\r\n        if (!sts) GSEvents.prevent(e);\r\n        //me.opened = false;\r\n        break;\r\n      case 'valid':\r\n        me.disabled = data.data === false;\r\n        break;\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  #onSubmit(e) {\r\n    debugger;\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialogElement.#STACK = GSDialogElement.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  /**\r\n   * Return number of dialogs in a stack\r\n   */\r\n  static get size() {\r\n    return GSDialogElement.#STACK.length;\r\n  }\r\n\r\n  static get top() {\r\n    GSDialogElement.#updateStack();\r\n    const size = GSDialogElement.size;\r\n    return size === 0 ? null : GSDialogElement.#STACK[size - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialogElement.#updateStack();\r\n    return Array.from(GSDialogElement.#STACK);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-dialog');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, unsafeHTML, html, ifDefined } from '../lib.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSDrawerElement extends GSElement {\r\n\r\n  static properties = {\r\n    autoclose: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    backdrop: { reflect: true, type: Boolean },\r\n    expanded: { reflect: true, type: Boolean },\r\n    scroll: { reflect: true, type: Boolean },\r\n\r\n    min: { reflect: true, type: Number},\r\n    max: { reflect: true},\r\n    fingers: { reflect: true, type: Number},\r\n    placement: {...placement},\r\n    \r\n    transition: { reflect: true },\r\n    duration: { reflect: true, type: Number },\r\n\r\n    title: { reflect: true},\r\n\r\n    cssTitle: { reflect: true, attribute: \"css-title\"},\r\n    cssHead: { reflect: true, attribute: \"css-head\" },\r\n    cssBody: { reflect: true, attribute: \"css-body\" },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.placement = 'start';\r\n    me.cssTitle = 'fs-5';\r\n    me.transition = 'linear';\r\n    me.duration = 0.2;\r\n    me.min = 0;\r\n    me.max = 'auto';\r\n    me.fingers = 2;\r\n    me.on('mouseleave', me.#onLeave.bind(me));\r\n    me.on('mouseenter', me.#onEnter.bind(me));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`${unsafeHTML(me.#style)}\r\n    <div tabindex=\"-1\" dir=\"${ifDefined(me.direction)}\"\r\n     class=\"offcanvas overflow-hidden anime ${classMap(me.renderClass())}\">\r\n      ${me.#header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        ${me.renderTemplate()}\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>${me.#backdrop}`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': true,\r\n      'anime-open' : me.expanded,\r\n      'anime-close' : !me.expanded,\r\n      [`offcanvas-${me.placement}`]: me.placement,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #style() {\r\n    const me = this;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    return `<style>\r\n    .anime {\r\n      transition-property: ${pos} !important;\r\n      transition-duration: ${me.duration}s  !important;\r\n      transition-timing-function: ${me.transition} !important;\r\n    }\r\n    .anime-open {\r\n        ${pos} : ${me.max}${GSUtil.isNumber(me.max) ? 'px':''} !important;\r\n    }\r\n    .anime-close {\r\n      ${pos} : ${me.min}${GSUtil.isNumber(me.min) ? 'px':''} !important;\r\n    }    \r\n    </style>`;\r\n  }\r\n\r\n  get #backdrop() {\r\n    const me = this;\r\n    if (!me.backdrop) return '';\r\n    return html`<div class=\"offcanvas-backdrop fade ${me.expanded ? 'show' : 'invisible'}\" @click=\"${me.close}\"></div>`;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    return me.closable ? html`<button type=\"button\" class=\"btn-close text-reset\" @click=\"${me.close}\"></button>` : '';\r\n  }\r\n\r\n  get #title() {\r\n    const me = this;\r\n    return me.title ? html`<div class=\"offcanvas-title ${me.cssTitle}\">${me.translate(me.title)}</div>` : '';\r\n  }\r\n\r\n  get #header() {\r\n    const me = this;\r\n    return me.#hasHeader ? html`<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${me.#title}${me.#button}</slot></div>` : '';\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]', false, true);\r\n  }\r\n\r\n  get #hasHeader() {\r\n    return this.title || this.closable || this.#headSlot;\r\n  }\r\n\r\n  #notify(val) {\r\n    const me = this;\r\n    me.expanded = val == true;\r\n    me.notify();\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  open() {\r\n    this.#notify(true);\r\n  }\r\n\r\n  close() {\r\n    this.#notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.#notify(!this.expanded);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return !this.isVertical;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-drawer');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdownElement class\r\n * @module components/GSDropdownElement\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { cssMap } from '../directives/css-map.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDropdownElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        icon: {},\r\n        text: {...color},\r\n        color: {...color},\r\n        size: {},\r\n        title: {},\r\n        tooltip: {},\r\n        group: {},\r\n        simple: {type:Boolean}\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"dropdown\"  dir=\"${ifDefined(me.direction)}\">\r\n                ${me.#renderButton()}\r\n                ${super.renderUI()}\r\n            </div>`;\r\n    }\r\n\r\n    #buttonClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'btn': true,\r\n            [`btn-${me.color}`] : me.color ? true : false,\r\n            'dropdown-toggle': !me.simple,\r\n            'shadow-none' : true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    #renderButton() {\r\n        const me = this;\r\n        return html`<gs-link css=\"${cssMap(me.#buttonClass())}\"\r\n            url=\"#\"         \r\n            icon=\"${ifDefined(me.icon)}\"\r\n            text=\"${ifDefined(me.text)}\"\r\n            size=\"${ifDefined(me.size)}\"\r\n            title=\"${ifDefined(me.title)}\"\r\n            tooltip=\"${ifDefined(me.tooltip)}\"\r\n            @notify=\"${me.toggle}\">\r\n            </gs-link>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-dropdown');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html, unsafeHTML } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Safe email rendering to protect from spam bots.\r\n */\r\nexport class GSEmailElement extends GSElement {\r\n\r\n  static shadowRootOptions = { mode: 'closed' }\r\n\r\n  static style = css`.e-mail:before {\r\n    content: attr(data-website) \"\\0040\" attr(data-user);\r\n    unicode-bidi: bidi-override;\r\n    direction: rtl;\r\n    }`;\r\n\r\n  static properties = {\r\n    user: { reflect: true },\r\n    domain: { reflect: true },\r\n    dev: { type: Boolean }\r\n  }\r\n\r\n  #user;\r\n  #domain;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  willUpdate(changes) {\r\n    super.willUpdate(changes);\r\n    this.#updateUser();\r\n    this.#updateDomain()\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${unsafeHTML(this.#style)}<a @click=\"${this.#onClick}\" class=\"e-mail\" data-user=\"${this.#user}\" data-website=\"${this.#domain}\"  href=\"mailto://\"></a>`;\r\n  }\r\n\r\n  get #style() {\r\n    return '<style>.e-mail:before { content: attr(data-website) \"\\u0040\" attr(data-user); unicode-bidi: bidi-override; direction: rtl; }</style>';\r\n  }\r\n\r\n  get #url() {\r\n    return `mailto://${GSUtil.reverse(this.dataset.user)}@${GSUtil.reverse(this.dataset.domain)}`;\r\n  }\r\n\r\n  #updateUser() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.user) {\r\n      me.#user = dataset.user || GSUtil.reverse(me.user);\r\n      if (me.dev) dataset.user = me.#user;\r\n      me.user = '';\r\n    }\r\n  }\r\n\r\n  #updateDomain() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.domain) {\r\n      me.#domain = dataset.domain || GSUtil.reverse(me.domain);\r\n      if (me.dev) dataset.domain = me.#domain;\r\n      me.domain = '';\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    window.location.href = me.#url;\r\n    //window.open(me.#url, '_blank');  \r\n  }\r\n\r\n  static {\r\n    this.define('gs-email');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref, templateContent } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSFormElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    disabled: { reflect: true, type: Boolean },\r\n\r\n    url: { reflect: true },\r\n    name: { reflect: true },\r\n    rel: { reflect: true },\r\n    acceptCharset: { reflect: true, attribute: 'accept-charset' },\r\n    autocapitalize: { reflect: true },\r\n    autocomplete: { reflect: true },\r\n\r\n    // default settings for FormGroup or gs-ext-* form elements\r\n    autocopy: { reflect: true, type: Boolean },\r\n    autofocus: { reflect: true, type: Boolean },\r\n    autoselect: { reflect: true, type: Boolean },\r\n    autovalidate: { reflect: true, type: Boolean },\r\n    autoreport: { reflect: true, type: Boolean },\r\n\r\n    action: { reflect: true },\r\n    enctype: { reflect: true },\r\n    method: { reflect: true },\r\n    novalidate: { reflect: true, type: Boolean },\r\n    target: { reflect: true },\r\n\r\n    block: { reflect: true, type: Boolean },\r\n    beep: { reflect: true, type: Boolean },\r\n    timeout: { reflect: true, type: Number }\r\n  }\r\n\r\n  #formRef = createRef();\r\n  #lastState = undefined;\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n    this.disabled = false;\r\n    this.method = \"dialog\";\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<form is=\"gs-ext-form\"\r\n      ${ref(me.#formRef)}\r\n      id=\"${ifDefined(me.name)}\"\r\n      name=\"${ifDefined(me.name)}\"\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\"\r\n      \r\n      @blur=\"${me.#onBlur}\"\r\n      @change=\"${me.#onChange}\"\r\n      @invalid=\"${me.#onInvalid}\"\r\n      @submit=\"${me.submit}\"\r\n      @reset=\"${me.reset}\"\r\n      \r\n      method=\"${me.method}\"      \r\n      url=\"${ifDefined(me.url)}\"\r\n      \r\n      rel=\"${ifDefined(me.rel)}\"\r\n      acceptCharset=\"${ifDefined(me.acceptCharset)}\"\r\n      autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n      autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n      action=\"${ifDefined(me.action)}\"\r\n      enctype=\"${ifDefined(me.enctype)}\"\r\n      target=\"${ifDefined(me.target)}\"\r\n\r\n      ?novalidate=\"${me.novalidate}\">\r\n      ${templateContent(me.#elementTemplate)}\r\n      <slot></slot>\r\n    </form>`;\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    me.dataController?.read();\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {\r\n      if (GSUtil.isNull(me.data)) {\r\n        me.reset();\r\n      } else {\r\n        me.asJSON = Object.assign(me.asJSON, me.data);\r\n      }\r\n    }\r\n  }\r\n\r\n  templateInjected() {\r\n    const me = this;\r\n  }\r\n\r\n  async reset(e) {\r\n    const me = this;\r\n    me.form?.reset();\r\n    me.data = {};\r\n    await me.dataController?.read(me.asJSON);\r\n  }\r\n\r\n  async submit(e) {\r\n    GSEvents.prevent(e, true, false, false);\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    if (!me.validate()) return;\r\n    const json = me.asJSON;\r\n    await me.dataController?.write(json);\r\n    const data = { type: 'submit', data: json, source: e, owner: me };\r\n    return me.emit('form', data, true, true, true);\r\n  }\r\n\r\n  get submitButton() {\r\n    return this.form?.submitButton;\r\n  }\r\n\r\n  get resetButton() {\r\n    return this.form?.resetButton;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  /**\r\n  * Overide native to pickup all form elements, including ones in shadow dom\r\n  */\r\n  get elements() {\r\n    return this.form?.elements || [];\r\n  }\r\n\r\n  /**\r\n   * Get all form attached native fields unwrapepd from GSWebComponents\r\n   */\r\n  get fields() {\r\n    return this.form?.fields || [];\r\n  }\r\n\r\n  /**\r\n   * Find all inputs by querying across inner shadow \r\n   */\r\n  get inputs() {\r\n    return this.form?.inputs || [];\r\n  }\r\n\r\n  get invalid() {\r\n    return this.form?.invalid;\r\n  }\r\n\r\n  get isValid() {\r\n    return this.form?.isValid;\r\n  }\r\n\r\n  get asJSON() {\r\n    return this.form?.asJSON;\r\n  }\r\n\r\n  set asJSON(data) {\r\n    const me = this;\r\n    if (me.form) {\r\n      me.form.asJSON = data;\r\n      me.validate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find field by name\r\n   * @param {*} name \r\n   * @returns \r\n   */\r\n  field(name) {\r\n    return this.form?.field(name);\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.form?.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.form?.reportValidity();\r\n  }\r\n\r\n  validate(e) {\r\n    const me = this;\r\n    let isValid = me.form?.validate();\r\n    isValid = me.onValidate(isValid);\r\n    me.#notify(isValid, e);\r\n    me.invalid[0]?.focus();\r\n    return isValid;\r\n  }\r\n\r\n  disable(all = false) {\r\n    this.form?.disable(all);\r\n  }\r\n\r\n  enable(all = false) {\r\n    this.form?.enable(all);\r\n  }\r\n\r\n  /**\r\n   * For DataController read callback\r\n   * \r\n   * @param {Array} data \r\n   */\r\n  onDataRead(data) {\r\n    const me = this;\r\n    if (Array.isArray(data)) {\r\n      data.forEach(o => me.asJSON = o);\r\n    } else {\r\n      me.asJSON = data;\r\n    }\r\n  }\r\n\r\n  onDataWrite(data) {\r\n\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  onValidate(sts) {\r\n\r\n    return sts;\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    const me = this;\r\n    me.prevent(e, false, true, false);\r\n    me.#notify(false, e);\r\n  }\r\n\r\n  #onBlur(e) {\r\n    const me = this;\r\n    me.prevent(e, false, true, false);\r\n    me.#notify(me.isValid, e);\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    //me.prevent(e, false, true, false);\r\n    me.#notify(me.isValid, e);\r\n  }\r\n\r\n  #notify(isValid = false, e) {\r\n    const me = this;\r\n    if (me.#lastState === isValid) return;\r\n    me.#lastState = isValid;\r\n    const data = { type: 'valid', data: isValid, owner: me, event: e };\r\n    me.emit('form', data, true, true);\r\n  }\r\n\r\n  get #elementTemplate() {\r\n    const tplEl = this.firstElementChild;\r\n    return GSDOM.isTemplateElement(tplEl) ? tplEl : undefined;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, unsafeHTML, ifDefined } from '../lib.mjs';\r\nimport { inputType, numGT0, numGE0, autocapitalize, autocorrect } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSFormGroupElement extends GSElement {\r\n\r\n  static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2';\r\n  static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n  static CSS_ICON = 'text-primary me-2 fs-5';\r\n  static ICON = 'info-circle-fill';\r\n\r\n  static formAssociated = true;\r\n\r\n  static #SELECTOPT = {\r\n    name: {},\r\n    value: {},\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  static properties = {\r\n    icon: { reflect: true },\r\n    layout: { reflect: true },\r\n    placement: { reflect: true },\r\n\r\n    label: { reflect: true },\r\n    description: { reflect: true },\r\n    placeholder: { reflect: true },\r\n\r\n    pattern: { reflect: true },\r\n    mask: { reflect: true },\r\n\r\n    form: { reflect: true },\r\n    wrap: { reflect: true },\r\n    spellcheck: { reflect: true },\r\n\r\n    type: { reflect: true, ...inputType },\r\n    name: { reflect: true },\r\n    list: { reflect: true },\r\n    accept: { reflect: true },\r\n    value: { noAccessor: true },\r\n\r\n    values: {},\r\n\r\n    lang: { reflect: true },\r\n    title: { reflect: true },\r\n    rows: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    cols: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    step: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    min: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    max: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    minLength: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    maxLength: { type: Number, reflect: true, hasChanged: numGT0 },\r\n\r\n    reverse: { reflect: true, type: Boolean },\r\n    selectable: { reflect: true, type: Boolean },\r\n\r\n    autoid: { type: Boolean, reflect: true },\r\n    autocopy: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    autocapitalize: { ...autocapitalize, reflect: true },\r\n    autocorrect: { ...autocorrect, reflect: true },\r\n    autocomplete: { reflect: true },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n    autovalidate: { type: Boolean, reflect: true },\r\n    autoreport: { type: Boolean, reflect: true },\r\n\r\n    disabled: { type: Boolean, reflect: true },\r\n    checked: { type: Boolean, reflect: true },\r\n    multiple: { type: Boolean, reflect: true },\r\n    reveal: { type: Boolean, reflect: true },\r\n    readonly: { type: Boolean, reflect: true },\r\n    required: { type: Boolean, reflect: true },\r\n\r\n    invalidMessage: { reflect: true, attribute: 'invalid-message' },\r\n\r\n    cellField: { reflect: true, attribute: 'cell-field' },\r\n    cellLabel: { reflect: true, attribute: 'cell-label' },\r\n    cssLabel: { reflect: true, attribute: 'css-label' },\r\n    cssField: { reflect: true, attribute: 'css-field' },\r\n\r\n    block: { reflect: true, type: Boolean },\r\n    beep: { reflect: true, type: Boolean },\r\n    timeout: { reflect: true, type: Number }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #inputRef = createRef();\r\n  #ouptutRef = createRef();\r\n  #patterns = [];\r\n  #options = [];\r\n  #internals = null;\r\n\r\n  constructor() {\r\n    super();\r\n    this.#internals = this.attachInternals();\r\n    this.#validateAllowed();\r\n    this.dynamicStyle(this.#styleID);\r\n    this.rows = 0;\r\n    this.cols = 0;\r\n    this.type = 'text';\r\n    this.placement = 'top';\r\n    this.layout = 'horizontal';\r\n    this.invalidMessage = 'Invalid input',\r\n      this.icon = GSFormGroupElement.ICON;\r\n    this.cssLabel = GSFormGroupElement.CSS_LABEL;\r\n    this.cellLabel = GSFormGroupElement.CSS_LABEL_CELL;\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    const form = me.formComponent;\r\n    me.layout = GSAttr.get(form, 'layout', me.layout);\r\n\r\n    if (!me.form && form) me.form = form.name;\r\n\r\n    if (me.selectable) {\r\n      me.#options = GSItem.proxify(me, GSFormGroupElement.#SELECTOPT);\r\n    } else {\r\n      me.#patterns = GSItem.collect(me)\r\n        .filter(el => el.dataset.pattern)\r\n        .map(el => new RegExp(el.dataset.pattern));\r\n    }\r\n    super.connectedCallback();\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    //me.#onInput();\r\n    me.emit('input');\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    switch (me.layout) {\r\n      case 'floating': return me.#renderFloating();\r\n      case 'vertical': return me.#renderVertical();\r\n      default: return me.#renderHorizontal();\r\n    }\r\n  }\r\n\r\n\r\n  #renderFloating() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n       <div class=\"form-floating ${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n          ${me.#renderLabel()}\r\n       </div>\r\n       ${me.#renderInfo()}\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n      <div class=\"col-12 text-md-start ${me.cellLabel}\">\r\n          ${me.#renderLabel()}\r\n      </div>\r\n       <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n       </div>\r\n       ${me.#renderInfo()}   \r\n    </div>      \r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row form-group ${classMap(me.renderClass())}\">    \r\n       <slot name=\"header\"></slot>\r\n       ${me.#renderLabelWrap()}\r\n       ${me.#renderField()}\r\n       ${me.#renderInfo()}\r\n       <slot name=\"footer\"></slot>\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderLabel() {\r\n    const me = this;\r\n    return html`<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.translate(me.label)}</label>`;\r\n  }\r\n\r\n  #renderLabelWrap() {\r\n    const me = this;\r\n    return html`<div class=\" text-md-end ${me.cellLabel}\">${me.#renderLabel()}</div>`;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.#isIcon ? html`<gs-icon size=\"5\" css=\"${GSFormGroupElement.CSS_ICON}}\" name=\"${me.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderTooltip() {\r\n    const me = this;\r\n    const tgt = me.#isIcon ? '@parent' : `[name='${me.name}']`;\r\n    return me.description ? html`<gs-tooltip local language=\"${ifDefined(me.language)}\" placement=\"${me.placement}\" title=\"${me.description}\" target=${ifDefined(tgt)}></gs-tooltip>` : '';\r\n  }\r\n\r\n  #renderInfo() {\r\n    const me = this;\r\n    const tooltip = me.#renderTooltip();\r\n    if (tooltip && me.#isIcon) return html`\r\n    <div class=\"col-auto\">\r\n       ${tooltip}\r\n       ${me.#renderIcon()}\r\n    </div>`;\r\n    return tooltip;\r\n  }\r\n\r\n  #renderField() {\r\n    const me = this;\r\n    return html`\r\n    <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n       <slot name=\"body\">${me.#renderInput()}${me.#renderOutput()}</slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderOutput() {\r\n    const me = this;\r\n    if (!me.isRange) return \"\";\r\n    return html`<span ${ref(me.#ouptutRef)} class=\"position-absolute px-1\">${me.value}</span>`;\r\n  }\r\n\r\n  #renderInput() {\r\n\r\n    const me = this;\r\n\r\n    const idattr = me.autoid ? me.name : undefined;\r\n    const val = me.isFieldset ? me.values.split(',') : me.value;\r\n\r\n    if (Array.isArray(val)) {\r\n      const wrap = me.dataset.radioLayout === 'vertical';\r\n      return val.map((it, i) => { return { v: it, id: `${me.name}_${i}` } })\r\n        .map((o, i) => me.#fieldSet(me.name + i, o.v, me.#inputHTML(o.id, me.name, o.v), wrap));\r\n    }\r\n\r\n    if (me.selectable) return me.#selectHTML(idattr, me.name, me.value);\r\n\r\n    if (me.#isTextArea) return me.#textArea(idattr, me.name, me.value);\r\n\r\n    return me.#inputHTML(idattr, me.name, me.value);\r\n  }\r\n\r\n  #fieldSet(id, val, fld, vertical = false) {\r\n    const me = this;\r\n    return vertical ?\r\n      html`<div class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></div>`\r\n      :\r\n      html`<span class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></span>`;\r\n  }\r\n\r\n  #initStyle() {\r\n    const me = this;\r\n    const style = {\r\n      transform: me.reverse && me.isRange ? 'rotateY(180deg)' : ''\r\n    }\r\n    me.dynamicStyle(me.#styleID, style);\r\n  }\r\n\r\n  #renderOption(el) {\r\n    const title = el.name || el.innerText || el.value;\r\n    return html`<option ${dataset(el, false)} value=\"${el.value}\" ?selected=\"${el.selected}\">${title}</option>`;\r\n  }\r\n\r\n  #renderOptions() {\r\n    const me = this;\r\n    return me.#options.map(el => me.#renderOption(el));\r\n    /*\r\n    return repeat(me.#options, (el) => el.value, (el, index) => {\r\n      return html`<option value=\"${el.value}\">${el.name || el.innerText || el.value}</option>`\r\n    });\r\n    */\r\n  }\r\n\r\n  #selectHTML(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n\r\n    // not used \r\n    // id=${ifDefined(id)} \r\n    return html`<select ais=\"gs-ext-select\"\r\n            ${ref(me.#inputRef)}\r\n            ${dataset(me, false)}\r\n\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n        \r\n            name=\"${name}\"             \r\n            form=\"${ifDefined(me.form)}\"\r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            ?autofocus=\"${me.autofocus || me.form?.autofocus}\"\r\n            ?autocopy=\"${me.autocopy || me.form?.autocopy}\"\r\n            ?autoselect=\"${me.autoselect || me.form?.autoselect}\"\r\n            ?autovalidate=\"${me.autovalidate || me.form?.autovalidate}\"\r\n            ?autoreport=\"${me.autoreport || me.form?.autoreport}\"\r\n\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\">\r\n              ${me.#renderOptions()}\r\n            </select>`;\r\n  }\r\n\r\n  get #isTextArea() {\r\n    const me = this;\r\n    return (me.rows > 0 || me.cols > 0) && me.type === 'text';\r\n  }\r\n\r\n  get #listHTML() {\r\n    const me = this;\r\n    let list = '';\r\n    if (me.list) {\r\n      const root = me.parentComponent || me.parentElement;\r\n      const el = GSDOM.query(root, `datalist[id=\"${me.list}\"]`, true, true);\r\n      if (el) list = html`${unsafeHTML(el.outerHTML)}`;\r\n    }\r\n    return list;\r\n  }\r\n\r\n  get #isBlock() {\r\n    return this.block || this.formComponent?.block || false;\r\n  }\r\n\r\n  get #isBeep() {\r\n    return this.beep || this.formComponent?.beep || false;\r\n  }\r\n\r\n  #timeout() {\r\n    return this.timeout || this.formComponent?.timeout || 0;\r\n  }\r\n\r\n  #textArea(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder, false) : null;\r\n    const title = me.title ? me.translate(me.title, false) : null;\r\n\r\n    // not used\r\n    // id=${ifDefined(id)}\r\n\r\n    return html`<textarea is=\"gs-ext-textarea\" \r\n            ${ref(me.#inputRef)}\r\n            ${dataset(me, false)}\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @invalid=\"${me.#onInvalid.bind(me)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n            cols=\"${me.cols}\"\r\n            rows=\"${me.rows}\"\r\n\r\n            ?block=\"${me.#isBlock}\"\r\n            ?beep=\"${me.#isBeep}\"\r\n            timeout=\"${me.#timeout()}\"\r\n\r\n            spellcheck=\"${ifDefined(me.spellcheck)}\" \r\n            wrap=\"${ifDefined(me.wrap)}\" \r\n            form=\"${ifDefined(me.form)}\" \r\n            name=\"${name}\" \r\n            value=\"${ifDefined(value)}\"\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            title=\"${ifDefined(title)}\"\r\n    \r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus || me.form?.autofocus}\"\r\n            ?autocopy=\"${me.autocopy || me.form?.autocopy}\"\r\n            ?autoselect=\"${me.autoselect || me.form?.autoselect}\"\r\n            ?autovalidate=\"${me.autovalidate || me.form?.autovalidate}\"\r\n            ?autoreport=\"${me.autoreport || me.form?.autoreport}\"\r\n\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"      \r\n      ></textarea>`;\r\n  }\r\n\r\n  #inputHTML(id, name, value) {\r\n    const me = this;\r\n    const type = me.isSwitch ? 'checkbox' : me.type;\r\n    let title = me.isRange ? me.defaultValue : me.title;\r\n    title = title ? me.translate(me.title, false) : title;\r\n\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder, false) : null;\r\n    const description = me.description ? me.translate(me.description, false) : null;\r\n\r\n    me.#initStyle();\r\n\r\n    // this does not work, \"is\" must be set explicitly, or it will not initialize element properly\r\n    // is=\"${ifDefined(me.isDate ? '' : 'gs-ext-input')}\"\r\n\r\n    // not used\r\n    // id=${ifDefined(id)} \r\n\r\n    return html`<input is=\"gs-ext-input\"\r\n            ${ref(me.#inputRef)}\r\n            ${dataset(me, false)}\r\n\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @invalid=\"${me.#onInvalid.bind(me)}\"\r\n        \r\n            name=\"${name}\" \r\n            type=\"${type}\" \r\n            form=\"${ifDefined(me.form)}\"\r\n            value=\"${ifDefined(value)}\"\r\n            title=\"${ifDefined(title)}\"\r\n\r\n\r\n            ?block=\"${me.#isBlock}\"\r\n            ?beep=\"${me.#isBeep}\"\r\n            timeout=\"${me.#timeout()}\"\r\n\r\n            class=\"${me.#cssField} ${me.cssField} ${me.mask ? 'font-monospace' : ''} ${me.#styleID}\" \r\n\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            description=\"${ifDefined(description)}\"\r\n\r\n            .multipattern=\"${ifDefined(me.#patterns)}\"\r\n            mask=\"${ifDefined(me.mask)}\"\r\n            pattern=\"${ifDefined(me.pattern)}\"\r\n            list=\"${ifDefined(me.list)}\"\r\n            accept=\"${ifDefined(me.accept)}\"\r\n             \r\n            step=\"${ifDefined(me.step)}\"\r\n            min=\"${ifDefined(me.min)}\"\r\n            max=\"${ifDefined(me.max)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus || me.form?.autofocus}\"\r\n            ?autocopy=\"${me.autocopy || me.form?.autocopy}\"\r\n            ?autoselect=\"${me.autoselect || me.form?.autoselect}\"\r\n            ?autovalidate=\"${me.autovalidate || me.form?.autovalidate}\"\r\n            ?autoreport=\"${me.autoreport || me.form?.autoreport}\"            \r\n\r\n            ?multiple=\"${me.multiple}\"\r\n            ?checked=\"${me.checked}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"\r\n            ?reveal=\"${me.reveal}\"\r\n            >${me.#listHTML}`;\r\n  }\r\n\r\n  get #cssField() {\r\n    const me = this;\r\n    if (me.selectable) return 'form-select ms-0';\r\n    if (me.isCheckable) return 'form-check-input ms-0';\r\n    if (me.isRange) return 'form-range';\r\n    return 'form-control';\r\n  }\r\n\r\n  get #cssLabel() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-label';\r\n    if (me.isFloating) return 'ms-2';\r\n    return me.isVertical ? 'form-label' : '';\r\n  }\r\n\r\n  get #cssCheck() {\r\n    const me = this;\r\n    if (me.isCheckable) {\r\n      //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      if (me.isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n      return me.isFieldset ? '' : 'form-check';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get #cellField() {\r\n    const me = this;\r\n    const val = (me.isHorizontal) ? '6' : '11';\r\n    return me.cellField || `col-md-${val} col-sm-${val} col-xs-11`;\r\n  }\r\n\r\n  get #isIcon() {\r\n    return GSUtil.isStringNonEmpty(this.icon);\r\n  }\r\n\r\n  #onInput(e) {\r\n    if (!e.composed) this.emit(e.type, e);\r\n  }\r\n\r\n  #onBlur(e) {\r\n    if (!e.composed) this.emit(e.type, e, true, true);\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    const field = me.field;\r\n    me.#internals?.setFormValue(field.value);\r\n    me.#internals?.setValidity(field.validity, field.validationMessage, field);\r\n    if (!e.composed) me.emit(e.type, e, true, true);\r\n    me.requestUpdate();\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    if (!e.composed) this.emit('invalid', e, true, true);\r\n  }\r\n\r\n  #validateAllowed() {\r\n    const me = this;\r\n    const slots = ['header', 'body', 'footer'];\r\n    let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n    if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n    list = Array.from(me.children).filter(el => !el.slot);\r\n    const tagList = ['GS-ITEM', 'DATALIST'];\r\n    const allowed = GSDOM.isAllowed(list, tagList);\r\n    if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n  translate(value = '', sanitize) {\r\n    value = super.translate(value);\r\n    return sanitize ? GSUtil.sanitize(value) : value;\r\n  }\r\n\r\n  reset() {\r\n    this.field?.reset?.();\r\n  }\r\n\r\n  get isFloating() {\r\n    return this.layout === 'floating';\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.layout === 'horizontal';\r\n  }\r\n\r\n  get isVertical() {\r\n    return this.layout === 'vertical';\r\n  }\r\n\r\n  get isFieldset() {\r\n    const me = this;\r\n    return me.type === 'radio' && me.values?.includes(',');\r\n  }\r\n\r\n  get isCheckable() {\r\n    const me = this;\r\n    return me.isCheck || me.isRadio || me.isSwitch;\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.field?.checked;\r\n  }\r\n\r\n  get isCheck() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get isRadio() {\r\n    return this.type === 'radio';\r\n  }\r\n\r\n  get isSwitch() {\r\n    return this.type === 'switch';\r\n  }\r\n\r\n  get isNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  get isRange() {\r\n    return this.type === 'range';\r\n  }\r\n\r\n  get isText() {\r\n    return this.type === 'text';\r\n  }\r\n\r\n  get isPassword() {\r\n    return this.type === 'passsword';\r\n  }\r\n\r\n  get isEmail() {\r\n    return this.type === 'email';\r\n  }\r\n\r\n  get isURL() {\r\n    return this.type === 'url';\r\n  }\r\n\r\n  get isFile() {\r\n    return this.type === 'file';\r\n  }\r\n\r\n  get isDate() {\r\n    return this.type === 'date';\r\n  }\r\n\r\n  get field() {\r\n    return this.#inputRef.value;\r\n  }\r\n\r\n  get value() {\r\n    const me = this;\r\n    return me.field ? me.field?.value : me.defaultValue;\r\n  }\r\n\r\n  set value(val) {\r\n    const me = this;\r\n    if (me.field) me.field.value = val;\r\n  }\r\n\r\n  get defaultValue() {\r\n    const me = this;\r\n    return me.field ? me.field.defaultValue : GSAttr.get(me, 'value', '');\r\n  }\r\n\r\n  set defaultValue(val) {\r\n    const me = this;\r\n    if (me.field) me.field.defaultValue = val;\r\n    GSAttr.set(me, 'value', val);\r\n\r\n  }\r\n\r\n  get validity() {\r\n    return this.#internals.validity;\r\n  }\r\n\r\n  get formComponent() {\r\n    return GSDOM.closest(this, 'gs-form');\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, render, unsafeHTML, templateContent, ifDefined, ref, repeat } from '../lib.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSFormGroupElement } from './FormGroup.mjs';\r\n\r\n// TODO: Make generic JSON to template generator, \r\n// then create string template and apply it to the lit html function.\r\n// Use all properties exstractor from super components and use type definition for bool proeprties.\r\n// Use xtype(#tagName) to define component type and use it to create component instance.\r\n\r\n/**\r\n * Component is responsible for auto-building gs-form and gs-form-group elements\r\n * from either JSON data or GS-ITEM elements.\r\n */\r\nexport class GSFormPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.#proxify;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const data = me.data || {};\r\n    // const tpl = me.#renderContent(); \r\n    const tpl = me.#renderTemplate();\r\n    return html`<gs-form ${ref(me.#formRef)}\r\n\r\n      storage=\"${ifDefined(data.storage)}\" \r\n      disabled=${ifDefined(data.disabled)}.\r\n      data=\"${ifDefined(data.data)}\"\r\n      \r\n      name=\"${ifDefined(data.name)}\"\r\n      rel=\"${ifDefined(data.rel)}\"\r\n      acceptCharset=\"${ifDefined(data.acceptCharset)}\"\r\n      autocapitalize=\"${ifDefined(data.autocapitalize)}\"\r\n      autocomplete=\"${ifDefined(data.autocomplete)}\"\r\n\r\n      action=\"${ifDefined(data.action)}\"\r\n      enctype=\"${ifDefined(data.enctype)}\"\r\n      method=\"${ifDefined(data.method)}\"\r\n      novalidate=\"${ifDefined(data.novalidate)}\"\r\n      target=\"${ifDefined(data.target)}\"\r\n\r\n      block=\"${ifDefined(data.block)}\"\r\n      beep=\"${ifDefined(data.beep)}\"\r\n      timeout=\"${ifDefined(data.timeout)}\"\r\n\r\n      flat=\"${ifDefined(data.flat)}\"\r\n      rtl=\"${ifDefined(data.rtl)}\"\r\n      hide=\"${ifDefined(data.hide)}\"\r\n      padding=\"${ifDefined(data.padding)}\"\r\n      margin=\"${ifDefined(data.margin)}\"\r\n      rounded=\"${ifDefined(data.rounded)}\"\r\n      bordered=\"${ifDefined(data.bordered)}\"\r\n      shadow=\"${ifDefined(data.shadow)}\"\r\n      keep=\"${ifDefined(data.keep)}\"\r\n      css=\"${ifDefined(data.css)}\"\r\n      theme=\"${ifDefined(data.theme)}\"\r\n      os=\"${ifDefined(data.os)}\"\r\n      browser=\"${ifDefined(data.browser)}\"\r\n      language=\"${ifDefined(data.language)}\"\r\n      environment=\"${ifDefined(data.environment)}\"\r\n      orientation=\"${ifDefined(data.orientation)}\"\r\n      protocol=\"${ifDefined(data.protocol)}\"\r\n      template=\"${ifDefined(data.template)}\"      \r\n      >${tpl}</gs-form>`;\r\n    //${templateContent(tpl)}\r\n    //${unsafeHTML(tpl.outerHTML)}\r\n  }\r\n\r\n  #renderTemplate() {\r\n    const tpl = document.createElement('template');\r\n    const content = this.#renderContent();\r\n    render(content, tpl.content);\r\n    return tpl;\r\n  }\r\n\r\n  #renderContent() {\r\n    const me = this;\r\n    const items = me.data?.items || [];\r\n    return html`${repeat(items, (item) => me.#renderFormGroup(me.data, item))}`;\r\n  }\r\n\r\n  // to generate into a template, all properties must be attributes, \r\n  // as properties are not transferable outside of template\r\n  #renderFormGroup(definition, item) {\r\n    return html`<gs-form-group \r\n      icon=\"${ifDefined(item.icon)}\"\r\n      layout=\"${ifDefined(item.layout)}\"\r\n      placement=\"${ifDefined(item.placement)}\"\r\n\r\n      label=\"${ifDefined(item.label)}\"\r\n      description=\"${ifDefined(item.description)}\"\r\n      placeholder=\"${ifDefined(item.placeholder)}\"\r\n      \r\n      pattern=\"${ifDefined(item.pattern)}\"\r\n      mask=\"${ifDefined(item.mask)}\"\r\n\r\n      form=\"${ifDefined(item.form)}\"\r\n      formaction=\"${ifDefined(item.formaction)}\"\r\n      formenctype=\"${ifDefined(item.formenctype)}\"\r\n      formmethod=\"${ifDefined(item.formmethod)}\"\r\n      formnovalidate=\"${ifDefined(item.formnovalidate)}\"\r\n      formtarget=\"${ifDefined(item.formtarget)}\"\r\n      wrap=\"${ifDefined(item.wrap)}\"\r\n      spellcheck=\"${ifDefined(item.spellcheck)}\"\r\n\r\n      type=\"${ifDefined(item.type)}\"\r\n      name=\"${ifDefined(item.name)}\"\r\n      list=\"${ifDefined(item.list)}\"\r\n      accept=\"${ifDefined(item.accept)}\"\r\n      value=\"${ifDefined(item.value)}\"\r\n      \r\n      lang=\"${ifDefined(item.lang)}\"\r\n      title=\"${ifDefined(item.title)}\"\r\n      cols=\"${ifDefined(item.cols)}\"\r\n      rows=\"${ifDefined(item.rows)}\"\r\n      step=\"${ifDefined(item.step)}\"\r\n      min=\"${ifDefined(item.min)}\"\r\n      max=\"${ifDefined(item.max)}\"\r\n      maxlength=\"${ifDefined(item.maxlength)}\"\r\n      minlength=\"${ifDefined(item.minlength)}\"\r\n\r\n      reverse=\"${ifDefined(item.reverse)}\"\r\n      selectable=\"${ifDefined(item.selectable)}\"\r\n\r\n      autoid=\"${ifDefined(item.autoid)}\"\r\n      autocopy=\"${ifDefined(item.autocopy)}\"\r\n      autoselect=\"${ifDefined(item.autoselect)}\"\r\n\r\n      autocapitalize=\"${ifDefined(item.autocapitalize)}\"\r\n      autocorrect=\"${ifDefined(item.autocorrect)}\"\r\n      autocomplete=\"${ifDefined(item.autocomplete)}\"\r\n\r\n      autofocus=\"${ifDefined(item.autofocus)}\"\r\n      autoselect=\"${ifDefined(item.autoselect)}\"\r\n\r\n      disabled=\"${ifDefined(item.disabled)}\"\r\n      checked=\"${ifDefined(item.checked)}\"\r\n      multiple=\"${ifDefined(item.multiple)}\"\r\n      reveal=\"${ifDefined(item.reveal)}\"\r\n      readonly=\"${ifDefined(item.readonly)}\"\r\n      required=\"${ifDefined(item.required)}\"\r\n\r\n      invalidMessage=\"${ifDefined(item.invalidMessage)}\"  \r\n      \r\n      block=\"${ifDefined(item.block || definition.block)}\"\r\n      beep=\"${ifDefined(item.beep || definition.beep)}\"\r\n      timeout=\"${ifDefined(item.timeout || definition.timeout)}\"\r\n\r\n      flat=\"${ifDefined(item.flat)}\"\r\n      rtl=\"${ifDefined(item.rtl)}\"\r\n      hide=\"${ifDefined(item.hide)}\"\r\n      padding=\"${ifDefined(item.padding)}\"\r\n      margin=\"${ifDefined(item.margin)}\"\r\n      rounded=\"${ifDefined(item.rounded)}\"\r\n      bordered=\"${ifDefined(item.bordered)}\"\r\n      shadow=\"${ifDefined(item.shadow)}\"\r\n      keep=\"${ifDefined(item.keep)}\"\r\n      css=\"${ifDefined(item.css)}\"\r\n      theme=\"${ifDefined(item.theme)}\"\r\n      os=\"${ifDefined(item.os)}\"\r\n      browser=\"${ifDefined(item.browser)}\"\r\n      language=\"${ifDefined(item.language || definition.language)}\"\r\n      environment=\"${ifDefined(item.environment)}\"\r\n      orientation=\"${ifDefined(item.orientation)}\"\r\n      protocol=\"${ifDefined(item.protocol)}\"\r\n      template=\"${ifDefined(item.template)}\">\r\n      </gs-form-group>`;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  get #proxify() {\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, GSFormGroupElement.properties));\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGroupElement class\r\n * @module components/GSGroupElement\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSAttributeHandler } from '../base/GSAttributeHandler.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { ElementNavigationController } from '../controllers/ElementNavigationController.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { classMap, createRef, html, render, ifDefined, ref } from '../lib.mjs';\r\n\r\n/**\r\n * Renderer for grouped elements such as Buttons, Navs, Tabs and lists.\r\n * Components handles grouped elements navigation, selection and focus.\r\n * \r\n * @class\r\n * @extends { GSElement }\r\n */\r\nexport class GSGroupElement extends GSElement {\r\n\r\n  static properties = {\r\n    // multiple lists with single select across \r\n    group : {},\r\n    storage: {},    \r\n    circular: { type: Boolean },\r\n    multiple: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #elRef = createRef();\r\n  #controller;\r\n  #controllerGroup;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.data = me.initData();\r\n    me.#controller = new ElementNavigationController(me);\r\n    me.#controllerGroup = new GroupController(me);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    // allow single setting at the container component to apply to the child\r\n    Array.from(me.children).forEach(it => {\r\n      GSAttributeHandler.clone(me, it, false);\r\n    });\r\n  }  \r\n\r\n\r\n  #prerender() {\r\n    const me = this;\r\n    me.queryAll('[generated]').forEach(el => el.remove());\r\n    if (me.data.length > 0) {\r\n      const items = me.renderItems();\r\n      const tpl = document.createElement('template');\r\n      render(items, tpl);\r\n      Array.of(...tpl.children).forEach(el => GSDOM.appendChild(me, el));\r\n    }\r\n  }\r\n  \r\n  firstUpdated(changed) {\r\n    const me = this;\r\n    me.#controller.init();\r\n    me.#controller.attach(me.#elRef.value);\r\n    super.firstUpdated(changed);\r\n    //me.#prerender();\r\n  }  \r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.#prerender();\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      ${me.renderWrappedUI()}\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedUI(name) {\r\n    const me = this;\r\n    return html`<div \r\n      class=\"${classMap(me.renderWrappedClass())}\">\r\n      <slot name=\"${ifDefined(name)}\"></slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    return {};\r\n  }\r\n\r\n  renderItems() {\r\n    return '';\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSItem);\r\n  }\r\n\r\n  previous() {\r\n    this.#controller.previous();\r\n  }\r\n\r\n  next() {\r\n    this.#controller.next();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    this.#controller.reset();\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  isNavigable(el) {\r\n    return el?.tagName === this.childTagName;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onBusEvent(e) {\r\n    let owner, item;  \r\n    ({owner, item} = e.detail);\r\n    if (owner != this) {\r\n      if (!item?.disabled || owner?.selectable) {\r\n        this.reset();\r\n      }\r\n    }\r\n  }\r\n  \r\n  onSelected(el) {\r\n    this.#controllerGroup.notify(el);\r\n  }\r\n\r\n  get focused() {\r\n    return this.#controller.focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#controller.selected;\r\n  }\r\n\r\n  get childTagName() {\r\n    return '';\r\n  }\r\n    \r\n  get items() {\r\n    const me = this;\r\n    return me.queryAll(me.childTagName, true);\r\n  }\r\n\r\n  get generated() {\r\n    return this.items.filter(el => el.hasAttribute('generated'));\r\n  }\r\n\r\n  get active() {\r\n    const me = this;\r\n    const list = me.items.filter(el => el.hasAttribute('active'));\r\n    return me.multiple ? list : list.pop();\r\n  }\r\n\r\n  childByName(name = '', shadow = false) {\r\n    return this.query(`${this.childTagName}[name=\"${name}\"]`, shadow, true);\r\n  }\r\n\r\n  settings(el) {\r\n    const tagName = customElements.getName(el)?.toUpperCase() || 'GS-ITEM';\r\n    const cfg = GSElement.allProperties(el);\r\n    const items = Array.from(this.children).filter(e => e.tagName === tagName ).map(el => GSAttr.proxify(el, cfg));\r\n    const active = items.filter(el => el.active);\r\n    active.forEach((el, idx) => el.active = idx === 0);\r\n    return items;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-group');\r\n  }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGT0 } from '../properties/index.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSIconElement extends GSElement {\r\n\r\n  static styles = css`\r\n    :host {\r\n      --gs-icon-super-color : cornflowerblue;\r\n      --gs-icon-content : '';\r\n    }\r\n    i::after {\r\n      top: -8px;\r\n      font-size: 0.7em;\r\n      position: relative;\r\n      content: var(--gs-icon-content);\r\n      content: attr(data-super);\r\n      color: var(--gs-icon-super-color);\r\n    }`;\r\n\r\n  static properties = {\r\n    name: { reflect: true, hasChanged: notEmpty },\r\n    size: { reflect: true, type: Number, hasChanged: numGT0 },\r\n    color: { reflect: true, ...color },\r\n    superColor: { attribute : 'super-color'},\r\n    super: { reflect: true },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    _clicked: { attribute:false},\r\n    _hovered: { attribute:false},\r\n  }\r\n\r\n  #ref = createRef();\r\n  \r\n  constructor() {\r\n    super();\r\n    //this.flat = true;\r\n  }\r\n\r\n  /*\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    this.#embdeded = GSDOM.matches(this.parentComponent, '[icon]');\r\n  }\r\n  */\r\n\r\n  updated(changed) {\r\n    if (changed.has('_clicked')) {\r\n      if (this._clicked) this.#postAnimate();\r\n    } \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.setCSSProperty(':host', '--gs-icon-super-color', me.superColor);\r\n    return html`<i  ${ref(me.#ref)}\r\n       class=\"bi ${classMap(me.renderClass())}\"\r\n       data-super=\"${ifDefined(me.super)}\"\r\n       @click=\"${me.animate}\"\r\n       @mouseover=\"${me.#onMouseOver}\"\r\n       @mouseout=\"${me.#onMouseOut}\"></i>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      [`text-${me.color}`]: me.color,\r\n      [`bi-${me.name}`]: me.name,\r\n      'fs': me.size > 0,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.clickCss]: me._clicked,\r\n      [me.hoverCss]: me._hovered,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  async #postAnimate() {\r\n    const me = this;\r\n    const delay = GSUtil.asNum(me.dataset.delay, 1);\r\n    if (delay > 0) {\r\n      await GSUtil.timeout(delay * 1000);\r\n      me._clicked = false;\r\n    }    \r\n  }\r\n\r\n  #onMouseOver(e) {\r\n    this.hover(true);\r\n  }\r\n\r\n  #onMouseOut(e) {\r\n    this.hover(false);\r\n  }\r\n\r\n  animate() {\r\n    const me = this;\r\n    me._hovered = false;\r\n    me._clicked = true;\r\n  }\r\n\r\n  hover(sts = false) {\r\n    const me = this;\r\n    if (sts) {\r\n      me._clicked = false;\r\n    }\r\n    me._hovered = sts;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-icon');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/index.mjs';\r\n\r\nexport class GSIndentElement extends GSElement {\r\n\r\n  static styles = css`.indent {\r\n      --gs-indent : 10px;\r\n      margin-left: var(--gs-indent);\r\n      margin-right: var(--gs-indent);\r\n    }`;\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    size: { type: Number, hasChanged: numGT0 },\r\n    multiplier: { type: Number, hasChanged: numGT0 }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.size = 1;\r\n    me.multiplier = 10;\r\n  }\r\n\r\n  renderUI() {\r\n    const size = this.size * this.multiplier;\r\n    return html`<span class=\"indent\" style=\"--gs-indent: ${size}px;\"></span>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-indent');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nconst numdef = { reflect: true, type: Number, hasChanged: numGE0 };\r\n\r\nexport class GSImageElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { hasChanged: notEmpty },\r\n    width: numdef,\r\n    height: numdef,\r\n    opacity: numdef,\r\n    invert: numdef,\r\n    grayscale: numdef,\r\n    brightness: numdef,\r\n    blur: numdef,\r\n    contrast: numdef,\r\n    saturate: numdef,\r\n    hue: numdef,\r\n    sepia: numdef,\r\n\r\n    alt: {},\r\n    loading: {}\r\n\r\n  }\r\n\r\n  #imageRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    this.#update();\r\n    return this.src;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<img ${ref(me.#imageRef)} \r\n            @load=\"${me.#onLoad}\"\r\n            src=\"${me.src}\" \r\n            alt=\"${me.alt}\" \r\n            loading=\"${ifDefined(me.loading)}\" \r\n            class=\"${me.#styleID}\" \r\n            data-gs-class=\"${me.#styleID}\">\r\n          </img>`;\r\n  }\r\n\r\n  get complete() {\r\n    return this.#imageRef.value?.complete || false;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  #renderStyle() {\r\n    const me = this;\r\n    const filter = me.#buildFilter();\r\n    const css = {\r\n      width: me.width > 0 ? me.width : undefined,\r\n      height: me.height > 0 ? me.height : undefined,\r\n      filter: filter.length > 0 ? filter.join(' ') : ''\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #buildFilter() {\r\n    const me = this;\r\n    const o = [];\r\n\r\n    if (me.blur > 0) o.push(`blur(${me.blur}px)`);\r\n    if (me.invert > 0) o.push(`invert(${me.invert})`);\r\n    if (me.opacity > 0) o.push(`opacity(${me.opacity})`);\r\n    if (me.contrast > 0) o.push(`contrast(${me.contrast})`);\r\n    if (me.grayscale > 0) o.push(`grayscale(${me.grayscale})`);\r\n    if (me.brightness > 0) o.push(`brightness(${me.brightness})`);\r\n\r\n    if (me.hue > 0) o.push(`hue-rotate(${me.hue}deg)`);\r\n    if (me.sepia > 0) o.push(`sepia(${me.sepia}%)`);\r\n    if (me.saturate > 0) o.push(`saturate(${me.saturate}%)`);\r\n\r\n    return o;\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.filter = me.#buildFilter().join(' ').trim();\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const el = e.target;\r\n    const me = this;\r\n    if (el) {\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n      me.emit('loaded', { width: el.width, height: el.height, element: el }, true);\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-image');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayoutElement\r\n */\r\n\r\nimport { classMap, html, ifDefined, templateContent } from '../lib.mjs';\r\nimport { orientation, OrientationTypes } from '../properties/orientation.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSLayoutElement extends GSElement {\r\n\r\n    static properties = {\r\n        type: { ...orientation }\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        id : {},\r\n        type: {},\r\n        min: { type: Number },\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        resizable: { type: Boolean },\r\n        autofit: { type: Boolean },\r\n        vPos: { attribute: 'h-pos' },\r\n        hPos: { attribute: 'v-pos' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.autofit = true;  \r\n        me.#items(me).map((el, idx, els) => me.#dyncss(el, idx, els, 0));\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if ( this.autofit && GSDOM.root(this) === document.body) document.body.classList.add('vh-100');\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const list = me.#items(me).map((el, idx, els) => me.#build(el, idx, els));\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"d-flex flex-fill w-100 h-100 ${classMap(me.renderClass())}\">${list}</div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const horizontal = OrientationTypes.isHorizontal(me.type);\r\n        return {\r\n            ...super.renderClass(),\r\n            'flex-column': horizontal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #items(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSLayoutElement.options));\r\n    }\r\n\r\n    #resizable(el) {\r\n        return el.size > 0 || el.min > 0 || el.max > 0 || el.resizable;\r\n    }\r\n\r\n    #dyncss(el, idx, els, lev = 0) {\r\n        const me = this;\r\n        me.#items(el.self).map((it, idx, items) => me.#dyncss(it, idx, items, lev+1));\r\n        if(me.#resizable(el)) me.dynamicStyle(`gsd-${lev}-${idx}`);\r\n    }\r\n\r\n    #build(el, idx, els, lev = 0) {\r\n\r\n        const me = this;\r\n        const type = el.self.parentElement.type || 'vertical';\r\n\r\n        const list = me.#items(el.self).map((it, idx, items) => me.#build(it, idx, items, lev+1));\r\n        \r\n        const min = el.min;\r\n        const max = el.max;\r\n        const template = el.template;\r\n        const tplEl = me.#elementTemplate(el);\r\n\r\n        const tc = `#${tplEl?.id}` !== template;\r\n\r\n        const dir = el.type || type || 'vertical';\r\n        const horizontal = OrientationTypes.isHorizontal(dir);\r\n        \r\n        const col = list.length > 0 && horizontal ? 'flex-column' : '';\r\n\r\n        const did = `gsd-${lev}-${idx}`;\r\n        const css = me.#panelCSS(el, col, did);\r\n        const style = me.#panelStyle(el, horizontal);\r\n        me.dynamicStyle(did, style);\r\n\r\n        const slot = el.name ? html`<slot name=\"${el.name}\"></slot>` : '';\r\n        const src = html`<div id=\"${ifDefined(el.id)}\" class=\"d-flex ${classMap(css)}\">\r\n            ${list}\r\n            ${templateContent(tplEl)}\r\n            ${template && tc ? html`<gs-template flat src=\"${template}\"></gs-template>` : ''}\r\n            ${slot}\r\n            </div>`;\r\n            // ${tc ? me.renderTemplate() : ''}\r\n            \r\n\r\n        if (!el.resizable) return src;\r\n\r\n        const resize = (idx === els.length - 1) ? 'end' : 'start';\r\n        const splitter = me.#splitter(min, max, type, resize);\r\n\r\n        if (idx === els.length - 1) return [splitter , src];\r\n        return [src, splitter];\r\n    }\r\n    \r\n    #elementTemplate(el) {\r\n        const tplEl = el.self.firstElementChild;\r\n        return  GSDOM.isTemplateElement(tplEl) ? tplEl : undefined;\r\n    }\r\n\r\n    #panelCSS(el, col, did) {\r\n\r\n        const resizable = this.#resizable(el);\r\n        const grow = resizable ? '' : 'flex-grow-1';\r\n\r\n        let vpos = el.vPos;\r\n        let hpos = el.hPos;\r\n\r\n        hpos = hpos ? `align-items-${hpos}` : '';\r\n        vpos = vpos ? `justify-content-${vpos}` : '';\r\n\r\n        const css = this.mapCSS(el.css, {\r\n            [did] : resizable,\r\n            [col] : col,\r\n            [grow] : grow,\r\n            [hpos] : hpos,\r\n            [vpos] : vpos\r\n        });\r\n    \r\n        return css;        \r\n    }\r\n\r\n    #panelStyle(el, horizontal) {\r\n        const min = el.size || el.min;\r\n        const max = el.max || el.size;\r\n        const style = {};\r\n        if (horizontal) {\r\n            style['min-height'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-height'] = max > 0 ? `${max}px` : undefined;\r\n        } else {\r\n            style['min-width'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-width'] = max > 0 ? `${max}px` : undefined;\r\n        }\r\n        return style;        \r\n    }\r\n\r\n    #splitter(min, max, dir, resize) {\r\n        return html`<gs-splitter split=\"${dir}\" resize=\"${resize}\" min=\"${min}\" max=\"${max}\"></gs-splitter>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-layout');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSLinklement extends GSElement {\r\n\r\n  static properties = {\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    size: { type: Number },\r\n    text: { ...color },\r\n    color: { ...color },\r\n    url: {},\r\n    ping: {},\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    target: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.url = '#';\r\n    // this.text = 'primary'; // do not set as default -> gs-dropdown\r\n    // this.target = '_blank'; // not used \r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n      <a ${ref(me.#refEl)}  \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        title=\"${ifDefined(me.translate(me.tooltip))}\" \r\n        href=\"${ifDefined(me.url)}\" \r\n        ping=\"${ifDefined(me.ping)}\" \r\n        target=\"${ifDefined(me.target)}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        ?disabled=${me.disabled} \r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"        \r\n        @click=\"${me.#onClick}\">\r\n        ${me.#first}${me.#second}\r\n        </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,      \r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [`text-${me.text}`]: me.text,\r\n      [`bg-${me.color}`]: me.color\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.iconEl?.animate();\r\n    me.notify();\r\n    if (me.url === '#' || GSUtil.isStringEmpty(me.url)) {\r\n      GSEvents.prevent(e);\r\n      me.handle(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon css=\"mx-1\" ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    size=\"${this.size}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  /**\r\n   * Generate clickable link\r\n   * @param {*} options \r\n   * @param {*} css \r\n   * @param {*} before \r\n   * @param {*} after \r\n   * @returns \r\n   */\r\n  static generate(options, css, before, after) {\r\n    const opt = options;\r\n    return html`<a class=\"${classMap(css)}\"\r\n        tabindex=\"0\"    \r\n        ${dataset(opt, true)}\r\n        part=\"${ifDefined(opt.part)}\"\r\n        tooltip=\"${ifDefined(opt.tooltip)}\"\r\n        href=\"${ifDefined(opt.url)}\">        \r\n        ${before || ''}\r\n        ${ifDefined(opt.title)}\r\n        <slot></slot> \r\n        ${after || ''}\r\n    </a>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-link');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\n\r\nexport class GSListElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    selectable: { reflect: true, type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = false;\r\n    this.multiple = false;\r\n    this.selectable = false;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  renderClass() {\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group': true,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    return html`<slot></slot>`;\r\n  }\r\n\r\n  reset() {\r\n    this.items.forEach(el => el.reset());\r\n    this.notify();\r\n  }\r\n\r\n  renderItems() {    \r\n    return this.data.map(o => {\r\n      return html`<gs-list-item generated\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-list-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return super.isNavigable(el) && this.selectable;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-LIST-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSListItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    url: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    size: { type: Number },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true }\r\n  }\r\n\r\n  #initial;\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.binded();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.#initial = this.active;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-LIST';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n        // allow single setting at the gs-list to apply to the child\r\n        // GSAttributeHandler.clone(this.parentComponent, this, false);\r\n        const me = this;\r\n        if (me.isMatchHashBang) me.active = true;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<a  tabindex=\"0\" ${ref(me.#refEl)}\r\n       href=\"${ifDefined(me.href)}\" \r\n       target=\"${ifDefined(me.target)}\" \r\n       class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()} \r\n        ${me.#renderSecond()}\r\n        <slot>${me.renderTemplate()}</slot>\r\n      </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.#itemCSS] : true,\r\n      'active': me.isActive\r\n    }\r\n    return me.mapCSS(me.#itemStatusCSS, css);\r\n  }\r\n\r\n  get isActive() {\r\n    return this.active && this.isSelectable;\r\n  }\r\n\r\n  get isSelectable() {\r\n    return !GSUtil.asBool(this.disabled) || GSUtil.asBool(this.parentComponent.selectable);\r\n  }\r\n\r\n  get isMatchHashBang() {\r\n    return GSUtil.isStringNonEmpty(this.url) && this.url === location.hash;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.icon ? html`<gs-icon name=\"${me.icon}\" size=\"${me.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderText() {\r\n    return this.title ? html`<span>${this.translate(this.title)}</span>` : html`<slot name=\"title\"></slot>`;\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.rtl ? this.#renderText() : this.#renderIcon();\r\n  }\r\n\r\n  #renderSecond() {\r\n    return this.rtl ? this.#renderIcon() : this.#renderText();\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || this.#initial || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get href() {\r\n    return this.url ? this.url : '#';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #inactiveCSS() {\r\n    return this.parentComponent.dataset?.cssInactive || '';\r\n  }\r\n\r\n  get #itemCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #itemStatusCSS() {\r\n    return this.isActive ? this.#activeCSS : this.#inactiveCSS;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\n/**\r\n * For debugging purposes for floating element such as popup, popover, menus... \r\n * https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_view/Coordinate_systems\r\n */\r\nexport class GSMouseElement extends GSElement {\r\n\r\n  static properties = {\r\n    pageX: { type: Number },\r\n    pageY: { type: Number },\r\n    screenX: { type: Number },\r\n    screenY: { type: Number },\r\n    clientX: { type: Number },\r\n    clientY: { type: Number },       \r\n    offsetX: { type: Number },       \r\n    offsetY : { type: Number }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.attachEvent(window, 'mousemove', this.#onMouse.bind(this));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    Offset(${me.offsetX}, ${me.offsetY}) \r\n    Viewport(${me.clientX}, ${me.clientY}) \r\n    Page(${me.pageX}, ${me.pageY}) \r\n    Screen(${me.screenX}, ${me.screenY})`;\r\n  }\r\n\r\n  #onMouse(e) {\r\n    const me = this;\r\n    me.offsetX = e.offsetX;\r\n    me.offsetY = e.offsetY;\r\n    me.clientX = e.clientX;\r\n    me.clientY = e.clientY;\r\n    me.pageX = e.pageX;\r\n    me.pageY = e.pageY;\r\n    me.screenX = e.screenX;\r\n    me.screenY = e.screenY;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-mouse');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\n/**\r\n * This component allow moving contained elements acroos UI\r\n */\r\nexport class GSMovableElement extends GSElement {\r\n\r\n  static styles = css`\r\n  :host {\r\n      --gs-width : inherited;\r\n      --gs-height : inherited;\r\n      --gs-min-width: inherited;\r\n      --gs-max-width: inherited;\r\n      --gs-min-height: inherited;\r\n      --gs-max-height: inherited;\r\n  }\r\n  .gs-movable {\r\n    left: var(--mouse-x) !important;\r\n    top: var(--mouse-y) !important;\r\n   }`;\r\n\r\n  static properties = {\r\n    shadow: { type: Boolean},\r\n    border: { type: Boolean},\r\n    color: { reflect: true, ...color }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #refEl = createRef();\r\n  #enabled = false;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    const root = document.documentElement;\r\n    me.attachEvent(root, 'mousemove', me.#onMove.bind(me));\r\n    me.attachEvent(root, 'mousedown', me.#onMouseDown.bind(me));\r\n    me.attachEvent(root, 'mouseup', me.#onMouseUp.bind(me));\r\n  }\r\n\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    Object.assign(rule.style, {cursor: 'move'});\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#refEl)} \r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\"\r\n      @mousedown=\"${() => me.#enabled = true}\"\r\n      @mouseup=\"${() => me.#enabled = false}\">\r\n      <slot></slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'gs-movable' : true,\r\n      [me.#styleID]: true,\r\n      'position-absolute' : true,\r\n      'border' : me.border,\r\n      'shadow-sm' : me.shadow,\r\n      [`text-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #updateCursor(move) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    Object.assign(rule.style, {'user-select': move ? 'none' : ''});\r\n  }\r\n\r\n  #onMove(e) {\r\n    if (this.#enabled) {\r\n      const style = this.#refEl.value.style;\r\n      style?.setProperty('--mouse-x', e.clientX + \"px\");\r\n      style?.setProperty('--mouse-y', e.clientY + \"px\");\r\n    }\r\n  }\r\n\r\n  #onMouseDown(e) {\r\n    this.#updateCursor(true);\r\n  }\r\n\r\n  #onMouseUp(e) {\r\n    this.#updateCursor(false);\r\n  }\r\n\r\n\r\n  static {\r\n    this.define('gs-movable');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { PlacementTypes, nav, placement } from '../properties/index.mjs';\r\n\r\nexport class GSNavElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    type: nav,\r\n    placement: placement,\r\n    vertical: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = true;\r\n    this.multiple = false;\r\n    this.type = 'pills';\r\n    this.placement = 'start';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-nav-item', false, true);\r\n  }\r\n  \r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const isBefore = PlacementTypes.isBefore(me.placement);\r\n    const isTab = me.type === 'tabs';\r\n    const css = {\r\n      'nav': true,\r\n      [`nav-${me.type}`]: me.type,\r\n      'flex-column': me.vertical,\r\n      'border-bottom-0': me.vertical,\r\n      'border-end': isTab && isBefore && me.vertical,\r\n      'border-start': isTab && !isBefore && me.vertical,\r\n      [`justify-content-${me.placement}`]: !me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Render items based on data propprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-nav-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\">\r\n        </gs-nav-item>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  onFocused(el) {\r\n    // el?.click();\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-NAV-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { NavTypes, PlacementTypes, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSNavItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    disabled: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    active: { type: Boolean, reflect: true },\r\n    tooltip: {}, // Add tooltip property\r\n    badge: { type: Boolean },\r\n    badgeColor: {...color},\r\n    badgeValue: { }\r\n  }\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.badgeColor = 'danger';\r\n    this.badgeValue = '!';\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    delete this[Symbol.for('gs-element')];\r\n    super.disconnectedCallback();\r\n  }\r\n  \r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === this.parentType;\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div class=\"nav-item position-relative ${classMap(me.renderClass())}\">${me.#button}${me.#badgeUI}</div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    return this.mapCSS(this.#itemsCSS, super.renderClass());\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get parentType() {\r\n    return 'GS-NAV';\r\n  }\r\n\r\n  get isNav() {\r\n    return true;\r\n  }\r\n\r\n  get vertical() {\r\n    return this.parentComponent.vertical || false;\r\n  }\r\n\r\n  get placement() {\r\n    return this.parentComponent.placement;\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #title() {\r\n    return html`<slot>${this.translate(this.title)}</slot>`;\r\n  }\r\n\r\n  get #icon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  get #first() {\r\n    return this.rtl ? this.#title : this.#icon;\r\n  }\r\n\r\n  get #second() {\r\n    return this.rtl ? this.#icon : this.#title;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#buttonCSS, {});\r\n    if (me.active) obj = me.mapCSS(me.#buildCSS + ' ' + me.#activeCSS, obj);\r\n    return html`<a tabindex=\"0\" type=\"button\" role=\"nav\" \r\n     ${ref(me.#refEl)}\r\n     class=\"nav-link ${classMap(obj)}\"\r\n     href=\"${ifDefined(me.url)}\" \r\n     target=\"${ifDefined(me.target)}\"\r\n     title=\"${ifDefined(me.tooltip)}\"> \r\n        ${me.#first} \r\n        ${me.#second}\r\n      </a>`;\r\n  }\r\n\r\n  get #badgeUI() {\r\n    const me = this;\r\n    if (!me.badge) return '';\r\n    const css = {\r\n      'top-0' : true,\r\n      'end-0' : true,\r\n      'translate-middle-y' : true,\r\n      [`text-bg-${me.badgeColor}`]: me.badgeColor,\r\n    };\r\n    return html`<span class=\"badge rounded-pill position-absolute ${classMap(css)}\">${me.badgeValue}</span>`;\r\n  }\r\n\r\n  get #itemsCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #buttonCSS() {\r\n    return this.parentComponent.dataset?.cssButton || '';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #navType() {\r\n    return NavTypes.indexOf(this.parentComponent.type);\r\n  }\r\n\r\n  // fiix for shadowed DOM, parent class=\"nav nav-pills..\" \r\n  // do not cross shadow dom, so item elements does not see CSS\r\n  // we have to simulate\r\n  get #buildCSS() {\r\n    const isVertical = this.vertical;\r\n    const isBefore = PlacementTypes.isBefore(this.placement);\r\n    switch (this.#navType) {\r\n      // pills\r\n      case 1: return 'rounded text-bg-primary';\r\n      // tabs\r\n      case 2:\r\n        if (isVertical) {\r\n          if (isBefore) {\r\n            return 'shadow-none border border-end-0';\r\n          } else {\r\n            return 'shadow-none border border-start-0';\r\n          }\r\n        }\r\n        return 'shadow-none border border-bottom-0';\r\n      // underline\r\n      case 3: return 'shadow-none border-bottom border-3 fw-medium';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { svg, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSOverlayElement extends GSElement {\r\n\r\n    static properties = {\r\n        color: {},\r\n        target: {},\r\n        autoremove: { type: Boolean },\r\n        opened: { type: Boolean },\r\n        opacity: { type: Number },\r\n        padding: { type: Number },\r\n        radius: { type: Number },\r\n    }\r\n\r\n    #styleID = GSID.id;\r\n    #styleID2 = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        //this.color = 'rgb(0,0,0)';\r\n        this.color = '#000';\r\n        this.opacity = 0.7;\r\n        this.padding = 1;\r\n        this.radius = 6;\r\n        this.dynamicStyle(this.#styleID);\r\n        this.dynamicStyle(this.#styleID2);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', () => me.requestUpdate());\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        if (!me.opened) return '';\r\n        const path = me.#path;\r\n        return path ? html`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:space=\"preserve\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\" preserveAspectRatio=\"xMinYMin slice\"\r\n            viewBox=\"0 0 ${window.innerWidth} ${window.innerHeight}\"\r\n            class=\"gs-overlay gs-overlay-animated ${me.#styleID}\"\r\n            @click=\"${me.reset.bind(me)}\">\r\n            ${path}\r\n        </svg>` : '';\r\n    }\r\n\r\n    async firstUpdated(changed) {\r\n        const me = this;\r\n        const opt = {\r\n            fillRule: \"evenodd\",\r\n            clipRule: \"evenodd\",\r\n            strokeLinejoin: \"round\",\r\n            strokeMiterlimit: \"2\",\r\n            zIndex: \"10000\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    get #path() {\r\n        const me = this;\r\n        const el = GSDOM.query(me.target);\r\n        if (!me.target) return '';\r\n        const pathStr = me.#createSVGPathString(el);\r\n        const opt = { fill: me.color, opacity: me.opacity, pointerEvents: 'auto', cursor: 'auto' };\r\n        me.dynamicStyle(me.#styleID2, opt);\r\n        return svg`<path class=\"${me.#styleID2}\"  d=\"${pathStr}\"></path>`;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n\r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n\r\n        const rect = target.getBoundingClientRect();\r\n\r\n        const padding = me.padding;\r\n        const radius = me.radius;\r\n\r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n\r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n\r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n\r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n\r\n        const val = `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n            M${highlightBoxX},${highlightBoxY} \r\n            h${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n            v${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n            h-${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n            v-${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;\r\n        return val.replace(/[\\t\\n]/g, ' ');\r\n    }\r\n\r\n    static {\r\n        this.define('gs-overlay');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, map, range, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { size, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSPagerElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    size: { ...size },\r\n    first: { type: Boolean },\r\n    last: { type: Boolean },\r\n    next: { type: Boolean },\r\n    previous: { type: Boolean },\r\n    pages: { type: Number },\r\n\r\n    labelFirst: { attribute: 'label-first' },\r\n    labelLast: { attribute: 'label-last' },\r\n    labelNext: { attribute: 'label-next' },\r\n    labelPrevious: { attribute: 'label-previous' },\r\n\r\n    cssItem: { attribute: 'css-item' },\r\n\r\n  }\r\n\r\n  #ref = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.pages = 5;\r\n    me.labelFirst = '&laquo;';\r\n    me.labelLast = '&raquo;';\r\n    me.labelNext = '&rsaquo;';\r\n    me.labelPrevious = '&lsaquo;';\r\n    if (me.#isInTable) {\r\n      me.slot = \"extra\";\r\n    }\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const half = Math.floor((me.pages - 1) / 2);\r\n    const page = me.dataController?.page || 0;\r\n    const start = page - half < 1 ? 1 : page - half;\r\n    const end = page > 0 ? page + half : me.pages;\r\n\r\n    return html`<nav \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        @click=\"${me.#onClick}\"\r\n        @keyup=\"${me.#onKeyUp}\"\r\n        @keydown=\"${me.#onKeyDown}\">\r\n        <ul ${ref(me.#ref)} class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()}\r\n        ${me.#renderPrevious()}\r\n        ${map(range(start, end + 1), (i) => me.#renderItem(i, '', '', i  === page))}\r\n        ${me.#renderNext()}\r\n        ${me.#renderLast()}\r\n        </ul></nav>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = me.size ? SizeTypes[me.size] || me.size : '';\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'pagination': true,\r\n      [`pagination-${size}`]: size,\r\n\r\n    }\r\n    return css;\r\n  }\r\n\r\n  updated() {\r\n    const target = this.#ref.value;\r\n    if (target && this.isFocused) {\r\n      target.querySelector('.active > a')?.focus();\r\n    }\r\n  }\r\n\r\n  onDataRead() {\r\n    this.requestUpdate();\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.first ? this.#renderItem(this.labelFirst, 'first', 'First page') : '';\r\n  }\r\n\r\n  #renderLast() {\r\n    return this.last ? this.#renderItem(this.labelLast, 'last', 'Last page') : '';\r\n  }\r\n\r\n  #renderPrevious() {\r\n    return this.previous ? this.#renderItem(this.labelPrevious, 'previous', 'Previous page') : '';\r\n  }\r\n\r\n  #renderNext() {\r\n    return this.next ? this.#renderItem(this.labelNext, 'next', 'Next page') : '';\r\n  }\r\n\r\n  #renderItem(text = '', name = '', title = '', active = false) {\r\n    const me = this;\r\n    text = GSUtil.decodeHTMLEntities(text);\r\n    return html`<li class=\"page-item ${active ? 'active' : ''}\">\r\n              <a class=\"page-link ${this.cssItem}\" \r\n                 name=\"${name}\" \r\n                 title=\"${me.translate(title)}\" \r\n                 href=\"#\">${me.translate(text)}</a>\r\n            </li>`;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const el = this.#toTarget(e, 'a');\r\n    if (!el) return;\r\n\r\n    const ctrl = me.dataController;\r\n    if (!ctrl) return;\r\n\r\n    const val = el.name || el.text;\r\n    me.emit(val, el);\r\n    \r\n    switch (val) {\r\n      case 'first':\r\n        return ctrl.firstPage();\r\n      case 'last':\r\n        return ctrl.lastPage();\r\n      case 'next':\r\n        return ctrl.nextPage();\r\n      case 'previous':\r\n        return ctrl.prevPage();\r\n    }\r\n\r\n    ctrl.page = val;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const current = this.#toTarget(e, 'li');\r\n    let el = null;\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        el = current?.previousElementSibling;\r\n        break;\r\n      case 'ArrowRight':\r\n        el = current?.nextElementSibling;\r\n        break;\r\n    }\r\n    el = el?.querySelector('a');\r\n    el?.focus();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') {\r\n      this.#toTarget(e, 'a')?.click();\r\n    }\r\n  }\r\n\r\n  #toTarget(e, name) {\r\n    const el = e.target.closest(name) || e.target;\r\n    return el.tagName === name.toUpperCase() ? el : undefined;\r\n  }\r\n\r\n  get #isInTable() {\r\n    return this.parentComponent?.tagName === 'GS-TABLE';\r\n  }\r\n  \r\n  static {\r\n    this.define('gs-pagination');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, position } from '../properties/index.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSPopper } from \"../base/GSPopper.mjs\";\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopupElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    position: { ...position },\r\n    trigger: {},\r\n    target: {},\r\n    autoclose: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    opened: { type: Boolean },\r\n    hPos: { type: Number, attribute: 'h-pos' },\r\n    vPos: { type: Number, attribute: 'v-pos' },\r\n    wMin: { type: Number, attribute: 'w-min' },\r\n    wMax: { type: Number, attribute: 'w-max' },\r\n    hMin: { type: Number, attribute: 'h-min' },\r\n    hMax: { type: Number, attribute: 'h-max' },\r\n\r\n  }\r\n\r\n  #caller = null;\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.autofocus = true;\r\n    this.autoclose = true;\r\n    this.trigger = 'click';\r\n    this.position = 'absolute';\r\n    this.placement = 'bottom';\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachTarget(); // Fixed typo: #attachTaraget -> #attachTarget\r\n    me.attachEvent(window, 'resize', me.close.bind(me));\r\n    me.on('mouseleave', me.#onAuto.bind(me));\r\n  }\r\n\r\n  firstUpdated(changedProperties) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#resize();\r\n      me.#reposition();\r\n    });\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#reposition();\r\n    if (me.autofocus) me.focus();\r\n    me.notify();\r\n    me.#postPopup();\r\n  }\r\n\r\n  willUpdate(changedProperties) {\r\n    if (changedProperties.has('opened')) {\r\n      this.#postPopup();\r\n    }\r\n    return super.willUpdate(changedProperties); \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div \r\n      ${ref(me.#panelRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"fade ${classMap(me.renderClass())}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      @keydown=\"${me.#onKeyDown}\">\r\n      ${me.renderTemplate()}\r\n      <slot></slot>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': me.opened,\r\n      //'d-none' : !me.opened,\r\n      [me.#styleID]: true,\r\n      [`position-${me.position}`]: me.position,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  focus() {\r\n    this.query('[tabindex], input, select, textarea, button, a', true)?.focus();\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Show popup at x/y position on the screen\r\n   * @param {Number} x \r\n   * @param {Number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const obj = {\r\n      top: '0px',\r\n      left: '0px',\r\n      translate: `${x}px ${y}px`\r\n    };\r\n    me.#resize(obj);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      case 'Escape':\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    //if (!me.opened) return;\r\n    if (me.vPos || me.hPos) {\r\n      const opt = {\r\n        top: '0px',\r\n        left: '0px',\r\n        translate: `${me.hPos}px ${me.vPos}px`\r\n      };\r\n      const rule = me.dynamicStyle(me.#styleID);\r\n      Object.assign(rule.style, opt);\r\n    } else if (me.target) {\r\n      let target = GSDOM.query(document.documentElement, me.target);\r\n      target = target.renderRoot?.firstElementChild || target;\r\n      GSPopper.popupFixed(me.placement, me.#panel, target);\r\n    }\r\n\r\n  }\r\n\r\n  #resize(obj = {}) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n    if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n    if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n    if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n    Object.assign(rule.style, obj);\r\n  }\r\n\r\n  #onPopup(e) {\r\n    const me = this;\r\n    me.#caller = e;\r\n    if (e instanceof Event) {\r\n      GSEvents.prevent(e);\r\n      me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n    }\r\n\r\n    if (me.placement) {\r\n      GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n      me.opened = true;\r\n      return;\r\n    }\r\n\r\n    let x = e.clientX, y = e.clientY;\r\n    const rect = me.#panel.getBoundingClientRect();\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #postPopup() {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    Object.assign(rule.style, {display: me.opened ? '' : 'none'}); \r\n  }\r\n\r\n  #attachTarget() { // Fixed typo: #attachTaraget -> #attachTarget\r\n    const me = this;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    me.trigger.split(' ').forEach(evt => {\r\n      targets.forEach(target => me.attachEvent(target, evt, me.#onPopup.bind(me)));\r\n    });\r\n  }\r\n\r\n  #onAuto(e) {\r\n    if (this.autoclose) this.close();\r\n  }\r\n\r\n  get #panel() {\r\n    return this.#panelRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-popup');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopoverElement extends GSElement { // Fixed typo: GSPopoverlement -> GSPopoverElement\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    target: {},\r\n    trigger: {},\r\n    title: {},\r\n    content: {},\r\n    opened: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    // added to the GSCacheStyle\r\n    //this.style.position = 'fixed';\r\n    this.placement = 'top';\r\n    this.trigger = 'hover';\r\n    this.content = '';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowID);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n  \r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const head = me.title ? html`<div class=\"popover-header ${me.cssHead}\">${me.translate(me.title)}</div>` : '';\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        data-popper-placement=\"${me.placement}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        data-gs-class=\"${me.#styleID}\" \r\n        role=\"tooltip\">\r\n        <div ${ref(me.#arrowRef)} \r\n          class=\"popover-arrow ${me.#arrowID}\" \r\n          data-gs-class=\"${me.#arrowID}\">\r\n        </div>\r\n        ${head}\r\n        <div class=\"popover-body\">\r\n          ${me.renderTemplate()}\r\n          ${me.content}\r\n          <slot></slot>\r\n        </div>\r\n    </div>            \r\n    `;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'popover': true,\r\n      'bs-popover-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  get isFocusTrigger() {\r\n    return this.trigger.includes('focus');\r\n  }\r\n\r\n  get isHoverTrigger() {\r\n    return this.trigger.includes('hover');\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return GSDOM.query(document.body, me.target);\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const source = me.#panel;\r\n    if (!source) return;\r\n    if (me.opened) {\r\n      GSPopper.popupAbsolute(me.placement, source, me.#ref, me.#arrow);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, {top:'-1000px', left:'-1000px'});\r\n    }\r\n  }\r\n\r\n  // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n  #attachEvents() {\r\n\r\n    const me = this;\r\n    const el = me.#ref;\r\n\r\n    if (me.isHoverTrigger) {\r\n      GSEvents.attach(me, el, 'mouseover', me.open.bind(me));\r\n      GSEvents.attach(me, el, 'mouseleave', me.close.bind(me));\r\n    }\r\n\r\n    if (me.isFocusTrigger) {\r\n      GSEvents.attach(me, el, 'click', me.#onFocus.bind(me));\r\n      GSEvents.attach(me, me.#panel, 'mouseleave', me.close.bind(me));\r\n      GSEvents.attach(me, window, 'click', me.close.bind(me));\r\n    }\r\n\r\n  }\r\n\r\n  #onFocus(e) {\r\n    GSEvents.prevent(e);\r\n    this.toggle();\r\n  }\r\n  \r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-popover');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, classMap, ifDefined } from '../lib.mjs';\r\nimport { literalTemplate } from '../directives/literal.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSProgressElement extends GSElement {\r\n\r\n  static properties = {\r\n    min: { reflect: true, type: Number },\r\n    max: { reflect: true, type: Number },\r\n    step: { reflect: true, type: Number },\r\n    value: { reflect: true, type: Number },\r\n    label: { reflect: true }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.min = 0;\r\n    this.step = 1;\r\n    this.max = 100;\r\n    this.value = 0;\r\n    this.styles = { width: '0%' };\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'progress-bar' : true,\r\n      [me.#styleID] : true\r\n    }\r\n    return css;\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#updateStyle();\r\n    const obj = {min :me.min, max:me.max, step:me.step, value:me.value, percentage:me.percentage};\r\n    return html`\r\n    <div class=\"progress\" @keydown=\"${me.#onKeySelect}\" dir=\"${ifDefined(me.direction)}\">\r\n        <div class=\"${classMap(me.renderClass())}\" \r\n             \r\n             role=\"progressbar\"\r\n             tabindex=\"0\">\r\n             ${literalTemplate(me.label, obj)}\r\n        </div>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    if (changed.has('value')) {\r\n      let val = me.step + changed.get('value');\r\n      val = me.#update(val, val);\r\n      changed.set('value', val);\r\n    }\r\n  }\r\n\r\n  updated(changed) {\r\n    if (changed.has('value')) {\r\n      this.notify();\r\n    }\r\n  }\r\n\r\n  increase(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value + val, me.value);\r\n    return true;\r\n  }\r\n\r\n  decrease(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value - val, me.value);\r\n    return true;\r\n  }\r\n\r\n  get percentage() {\r\n    const me = this;\r\n    return Math.trunc((me.value / me.max) * 100);\r\n  }\r\n\r\n  #updateStyle() {\r\n    const me = this;\r\n    me.styles.width = `${me.percentage}%`;\r\n    me.dynamicStyle(me.#styleID, me.styles);\r\n  }\r\n\r\n  #update(val, old = 0) {\r\n    val = GSUtil.asNum(val, GSUtil.asNum(old));\r\n    const me = this;\r\n    if (val > me.max) val = me.max;\r\n    if (val < me.min) val = me.min;\r\n    return val;\r\n  }\r\n\r\n  #onKeySelect(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp' :\r\n      case 'ArrowRight' :\r\n          return me.increase();\r\n      case 'ArrowLeft' :\r\n      case 'ArrowDown' :\r\n         return me.decrease();\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-progress');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\n\r\nexport class GSSpinnerElement extends GSElement {\r\n\r\n    static styles = css`.spinner-border { border: var(--bs-spinner-border-width) solid currentcolor; border-right-color: transparent; }`;\r\n\r\n    static properties = {\r\n        color: { ...color, reflect: true },\r\n        small: { type: Boolean, reflect: true },\r\n        pulsar: { type: Boolean }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\" role=\"status\"></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"spinner-border\": !me.pulsar,\r\n            \"spinner-grow\": me.pulsar,\r\n            [`text-${me.color}`]: me.color,\r\n            [`spinner-border-sm`]: !me.pulsar && me.small,\r\n            [`spinner-grow-sm`]: me.pulsar && me.small,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-spinner');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitterElement class\r\n * @module components/GSSplitterElement\r\n */\r\n\r\nimport { classMap, createRef, ref, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCSSMap } from '../base/GSCSSMap.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { notEmpty, numGT0, placement } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSSplitterElement extends GSElement {\r\n\r\n    static properties = {\r\n        // Check if splitter use vertical or horizontal splitting\r\n        split: { reflect: true },\r\n        // start|end|top|bottom\r\n        resize: { ...placement, hasChanged: notEmpty },\r\n        size: { type: Number, hasChanged: numGT0 }\r\n    }\r\n\r\n    #cursor = 0;\r\n    #styleID = GSID.id;\r\n    #styleTGT = GSID.id;\r\n    #elRef = createRef();\r\n    #mouseController;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.size = 8;\r\n        me.resize = 'start';\r\n        me.dynamicStyle(me.#styleID);\r\n        me.#load();\r\n        me.#mouseController = new ElementMoveController(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        //this.dynamicStyle(this.#styleTGT, null, true);\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        super.firstUpdated(changed);\r\n        const me = this;\r\n        me.#mouseController.attach(me.#splitter);\r\n        //const shadow = GSDOM.root(me.target) instanceof ShadowRoot;\r\n        //me.dynamicStyle(me.#styleTGT, {}, !shadow);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#elRef)} \r\n            @dblclick=\"${me.#onDoubleClick}\"\r\n            data-gs-class=\"${me.#styleID}\" \r\n            class=\"${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'splitter': true,\r\n            [me.#styleID]: true\r\n        }\r\n        return css;\r\n    }\r\n\r\n    updated(changedProperties) {\r\n        const me = this;\r\n        me.#cssUpdate();\r\n    }\r\n\r\n    /**\r\n    * Lock UI for mouse events to enable resizing over embedded iframes\r\n    * @param {MouseEvent} e \r\n    */\r\n    onStartMove(e) {\r\n        const me = this;\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', { start: true });\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    onMouseMove(e) {\r\n        const me = this;\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Save last position and unlock mouse UI events when resizing finished\r\n     * @param {*} e \r\n     */\r\n    onEndMove(e) {\r\n        const me = this;\r\n        me.#save();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', { stop: true });\r\n    }\r\n\r\n    /**\r\n    * Check if splitter use vertical or hotizontal splitting\r\n    * @returns {Boolean}\r\n    */\r\n    get isVertical() {\r\n        return this.split === 'vertical';\r\n    }\r\n\r\n    get isHorizontal() {\r\n        return !this.isVertical;\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display', 'none')).pop();\r\n        }\r\n        el.classList?.add(me.#styleTGT);\r\n        return el;\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.#elRef.value;\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        return this.target.style;\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n\r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n                .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, true);\r\n                    el.dataset.gsSplitter = true;\r\n                });\r\n        } else {\r\n            me.#lockable\r\n                .filter(el => el.dataset.gsSplitter)\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, false);\r\n                    delete el.dataset.gsSplitter;\r\n                });\r\n        }\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { width: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { height: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        const key = me.isVertical ? 'width' : 'height';\r\n        me.#styleDynamic[key] = val + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { [key]: val + \"px\" }, true);\r\n    }\r\n\r\n    #cssUpdate() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        const opt = {\r\n            [size]: `${me.size}px`,\r\n            [full]: '100%',\r\n            'border-width': '1px',\r\n            cursor: cursor,\r\n            'border-color': 'darkgray',\r\n            'border-style': 'solid',\r\n            'background-color': 'lightgray',\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-splitter');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNavItemElement } from '../NavItem.mjs';\r\n\r\n/**\r\n * Tab component (gs-tab-header), generate selectable/switchable tabs on a panel\r\n */\r\nexport class GSTabItemElement extends GSNavItemElement {\r\n\r\n  static properties = {\r\n    name: {}\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.#updateCSS + this.css;\r\n  }\r\n\r\n  get #updateCSS() {\r\n    const me = this;\r\n    return me.shouldUpdate() ? GSUtil.normalize(me.parentComponent?.tabCSS) : '';\r\n  }\r\n\r\n  get parentType() {\r\n    return 'GS-TAB-GROUP';\r\n  }\r\n\r\n  get panel() {\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    return me[key] || me.owner.panelByName(me.name);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-header');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\n\r\n/**\r\n * Container for individual tab; part of tabed panel\r\n */\r\nexport class GSTabPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    name: {},\r\n    template: {},\r\n    active: { type: Boolean, reflect : true }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.active = false;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    delete this[Symbol.for('gs-element')];\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === this.parentType;\r\n  }\r\n\r\n  /*\r\n  @invalid=\"${me.#onInvalid}\"\r\n  @change=\"${me.#onChange}\"\r\n  */\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  \r\n      dir=\"${ifDefined(me.direction)}\" \r\n      class=\"${classMap(this.renderClass())}\">\r\n      <slot>\r\n      ${me.renderTemplate()}\r\n      </slot></div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tab-pane': true,\r\n      'd-none' : !me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get parentType() {\r\n    return 'GS-TAB-GROUP';\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest(this.parentType.toLowerCase(), -1, true) || GSDOM.component(this);\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('form', -1, true);\r\n  }\r\n\r\n  get tab() {\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    return me[key] || me.owner.tabByName(me.name);\r\n  }\r\n\r\n  get tabs() {\r\n    return this.owner.tabs;\r\n  }\r\n\r\n  /*\r\n  #onChange(e) {\r\n    const me = this;\r\n    if (me.form) {\r\n      const isValid = me.form.isValid;\r\n      me.tabs?.forEach(el => el.badge = !isValid);\r\n    }\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    const me = this;\r\n    if (me.form) me.badge = false;\r\n  }\r\n  */\r\n\r\n  static {\r\n    this.define('gs-tab-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../../base/GSID.mjs';\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { PlacementTypes } from '../../properties/placement.mjs';\r\nimport { GSNavElement } from '../Nav.mjs';\r\n\r\n/**\r\n * Panel with tabs component (gs-tab-group), generate childrens gs-tab-header and gs-tab-panel \r\n */\r\nexport class GSTabGroupElement extends GSNavElement {\r\n\r\n  static properties = {\r\n    panelCSS: { attribute: 'css-panel' },\r\n    tabCSS: { attribute: 'css-tab' },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n   \r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    // link tabs and panels\r\n    me.items.forEach(el => me.#findPanel(el));\r\n    me.onSelected(me.active);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.items.forEach(el => me.#findPanel(el));\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'd-flex': me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    const me = this;\r\n    const reverse = PlacementTypes.isAfter(me.placement);\r\n    const list = [super.renderWrappedUI('tabs'),\r\n    html`<div class=\"tab-content flex-fill ${me.panelCSS}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <slot name=\"panels\"></slot>\r\n      </div>\r\n      <slot class=\"d-none\"></slot>`];\r\n    return reverse ? list.reverse() : list;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const css = super.renderWrappedClass();\r\n    return me.mapCSS(me.tabCSS, css);\r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    const me = this;\r\n    const tabs =  me.#renderTabs();\r\n    const panels = me.#renderPanels();\r\n    return tabs.concat(...panels);\r\n  }\r\n\r\n  #renderTabs() {    \r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-header generated slot=\"tabs\"\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\"\r\n        title=\"${ifDefined(o.title)}\"\r\n        name=\"${o.name}\"></gs-tab-header>`;\r\n    });    \r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  #renderPanels() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-panel generated  \r\n        slot=\"panels\" name=\"${o.name}\" \r\n        .active=\"${ifDefined(o.active)}\"\r\n        template=\"${ifDefined(o.template)}\"></gs-tab-panel>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when tab selected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onSelected(el) {\r\n    el?.click();\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = true;\r\n  }\r\n\r\n  /**\r\n   * Callback when tab deselected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onDeselected(el) {\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = false;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-TAB-HEADER';\r\n  }\r\n\r\n  get tabs() {\r\n    return this.items;\r\n  }\r\n\r\n  get panels() {\r\n    return this.queryAll('gs-tab-panel', false, true);\r\n  }\r\n\r\n  tabByName(name = '', shadow = false) {\r\n    return super.childByName(name, shadow);\r\n  }\r\n\r\n  panelByName(name = '', shadow = false) {\r\n    return this.query(`gs-tab-panel[name=\"${name}\"]`, shadow, true);\r\n  }\r\n\r\n  /**\r\n   * Selected Tab node name is used to find the panel.\r\n   * If panel found, auto-link it with node element\r\n   * @param {GSTabElement} el \r\n   */\r\n  #findPanel(el) {\r\n    if (!el) return null;\r\n    const me = this;\r\n    const generated = me.data?.length > 0;\r\n    const key = Symbol.for('gs-element');\r\n    let panel = el[key] || me.panelByName(el.name, generated);\r\n    if (panel && !el[key]) {\r\n      el[key] = panel;\r\n      panel[key] = el;\r\n    }\r\n    return panel;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { DataSelector } from '../data/DataSelector.mjs';\r\n\r\n/**\r\n * A HTML Table renderer for tabular data representation.\r\n * Either use \"storage\" property to point to data handler\r\n * or use simpler form by using \"data\" property.\r\n * \r\n * NOTE: Simpler form currently does not suport data filter.\r\n * Simpler form is only for read-ony static data representation.\r\n */\r\nexport class GSTableElement extends GSElement {\r\n\r\n  static #icons = ['sort-up', 'arrow-down-up', 'sort-down-alt'];\r\n\r\n  static styles = css`th:hover { opacity: 50% !important; }`;\r\n\r\n  static CELLS = {\r\n    align: {},\r\n    width: {},\r\n    width: {},\r\n    css: {},\r\n    title: {},\r\n    colspan: {},\r\n    storage: {},\r\n    ref: {}, // if set; use storage or gs-items to map ref value to virtual field\r\n    list : { type: Boolean }, // if set, use storage record column as a filter\r\n    filter: { type: Boolean },\r\n    hidden: { type: Boolean },\r\n    fixed: { type: Boolean },\r\n    filterType: { attribute: 'filter-type' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    color: { ...color},\r\n    ...GSData.PROPERTIES\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    color: { ...color },\r\n    colorFilter: { ...color, attribute: 'filter-color' },\r\n    colorHead: { ...color, attribute: 'head-color' },\r\n    colorSelect: { ...color, attribute: 'select-color' },\r\n    colorSort: { ...color, attribute: 'sort-color' },\r\n    stripedColumn: { type: Boolean, attribute: 'striped-column' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    divider: { type: Boolean },\r\n    striped: { type: Boolean },\r\n    hover: { type: Boolean },\r\n    small: { type: Boolean },\r\n    grid: { type: Boolean },\r\n    borderless: { type: Boolean },\r\n\r\n    sort: { type: Array, state: true },\r\n    columns: { type: Array, state: true },\r\n    key: { type: Number, state: true },\r\n    data: { type: Array },\r\n    \r\n    datacolumn: { type: Boolean },\r\n    multisort: { type: Boolean },\r\n    multiselect: { type: Boolean },\r\n    protected: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n    toggle: { type: Boolean },\r\n    sortable: { type: Boolean },\r\n  }\r\n\r\n  #config = [];\r\n  #sortOrder = [];\r\n  #auto = false;\r\n\r\n  constructor() {\r\n    super();\r\n    this.headColor = 'secondary';\r\n    this.colorSelect = 'info';\r\n    this.columns = [];    \r\n    this.data = [];\r\n    this.sort = [];\r\n    this.key = 0;\r\n  }\r\n\r\n  get selected() {\r\n    return this.dataController?.selected;\r\n  }\r\n\r\n  set search(val) {\r\n    const me = this;\r\n    if (me.storage && me.dataController) {\r\n      return me.dataController.search = val;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#config = GSItem.proxify(me, GSTableElement.CELLS);\r\n    if (me.columns.length === 0) me.columns = me.#config.map(v => v.name);\r\n    /* TODO - auto storage prevents using plain table with \r\n       columns, data properties programmatically\r\n    if (!me.storage) {      \r\n      me.storage = me.#auto = GSID.next('table-');\r\n    }\r\n    */\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.dataController?.clearSelected(this.data);\r\n    this.data = [];\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'user-select-none': me.protected,\r\n      'table': true,\r\n      'table-sm': me.small,\r\n      'table-hover': me.hover,\r\n      'table-striped': me.striped,\r\n      'table-bordered': me.grid,\r\n      'table-borderless': me.borderless,\r\n      'table-striped-columns': me.stripedColumns,\r\n      [`table-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.dataController?.read();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (me.columns.length != me.sort.length) me.sort = Array(me.columns.length).fill(0);\r\n    if (me.datacolumn && me.data.length > 0) {\r\n      me.columns = me.data[0];\r\n      me.data = me.data.slice(1);\r\n    }\r\n    if (changed.has('multiselect') && !me.multiselect) me.dataController?.clearSelected();\r\n    if (changed.has('selectable') && !me.selectable) me.dataController?.clearSelected();\r\n    if (changed.has('sortable') || changed.has('multisort')) {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [];\r\n    }\r\n\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const headColor = me.colorHead ? `table-${me.colorHead}` : '';\r\n    return html`\r\n      <table  \r\n       dir=\"${ifDefined(me.direction)}\"\r\n       @keyup=\"${me.#onKeyUp}\"\r\n       @keydown=\"${me.#onKeyDown}\"\r\n       class=\"${classMap(me.renderClass())}\">\r\n        <thead class=\"${ifDefined(headColor)}\">\r\n          ${me.#renderFilters()}\r\n          <tr @click=${me.#onSort}>\r\n            ${me.columns.map((entry, index) => me.#renderColumn(entry, index))}\r\n          </tr>\r\n        </thead>\r\n        <tbody @click=${me.#onSelect} @contextmenu=${me.#onSelect} class=\"${me.divider ? 'table-group-divider' : ''}\" role=\"button\">\r\n          ${me.data.map((entry, index) => me.#renderRecord(entry, index))}\r\n          ${me.#renderEmpty()}\r\n        </tbody>\r\n      </table>\r\n      <slot name=\"extra\">${me.#renderHandler()}</slot>\r\n    `;\r\n  }\r\n\r\n  #renderHandler() {\r\n    const me = this;\r\n    return me.#auto ? html`<gs-data-handler type=\"cached\" mode=\"\" id=${me.#auto} generated></gs-data-handler>` : '';\r\n  }\r\n\r\n  onDataRead(data) {\r\n    const me = this;\r\n    me.data = data;\r\n    //me.dataController?.clearSelected();\r\n\r\n    // update filtering\r\n    if (data.length > 0 && me.#hasFilters) {\r\n      me.#config.forEach((entry, index) => {\r\n        entry.columnType = me.#columType(index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear table filters\r\n   */\r\n  clear() {\r\n    this.#input.forEach(el => el.value = '');\r\n    this.dataController?.filter([]);\r\n  }\r\n\r\n  valueAt(row, cell) {\r\n    return this.data.length > row ? this.data[row][cell] : undefined;\r\n  }\r\n\r\n  get #input() {\r\n    return this.queryAll('th > input, th > select', true, true);\r\n  }\r\n\r\n  get #hasFilters() {\r\n    return this.#config.filter(o => o.filter).length > 0;\r\n  }\r\n\r\n  #columType(index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const cell = me.valueAt(0, me.columns[index]);\r\n    cfg.type = cfg.type || 'text';\r\n    const cfgType = { 'string': 'text', 'currency': 'number', 'timestamp': 'datetime-local' }[cfg.type]\r\n    const dataType = cell instanceof Date ? 'date' : typeof cell;\r\n    return cell ? dataType : cfgType || cfg.type;\r\n  }\r\n\r\n  #renderFilters() {\r\n    const me = this;\r\n    return me.#hasFilters ? html`<tr>${me.columns.map((entry, index) => me.#renderFilter(entry, index))}</tr>` : '';\r\n  }\r\n\r\n  #renderFilter(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (!cfg?.filter) return html`<th></th>`;\r\n\r\n    let mask = undefined;\r\n    const hasSub = cfg.childElementCount > 0;\r\n    const isDate = cfg.columnType === 'date';\r\n    if (isDate) mask = cfg.format || GSUtil.getDateFormat(cfg.language || GSUtil.language);\r\n    const css = `${GSUtil.normalize(me.cssFilter)} ${GSUtil.normalize(cell.cssFilter)}`; \r\n    const color = `text-bg-${GSUtil.normalize(cell.color || me.colorFilter)}`; \r\n    \r\n\r\n    if ((hasSub || cfg.list) && cfg.fixed) {\r\n      return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n          <select is=\"gs-ext-select\" .index=${index}\r\n              class=\"form-select ${css} ${color}\" \r\n              name=\"${cell}\"\r\n              storage=\"${ifDefined(cfg.list ? me.storage : null)}\"\r\n              key=\"${ifDefined(cfg.list ? cfg.name : null)}\"> \r\n              ${me.#renderOption(cfg)}\r\n              </select>\r\n          </th>`;\r\n    }\r\n\r\n    let listid = '';\r\n    let list = undefined;\r\n    if (hasSub || cfg.list) {\r\n      listid = `${me.id}-list-${index}`;\r\n      list = html`<datalist id=\"${listid}\" is=\"gs-ext-datalist\"\r\n              storage=\"${ifDefined(cfg.list ? me.storage : null)}\"\r\n              key=\"${ifDefined(cfg.list ? cfg.name : null)}\"> \r\n              ${me.#renderOption(cfg)}</datalist>`;\r\n    } \r\n\r\n    return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n    <input is=\"gs-ext-input\" .index=${index}\r\n      class=\"form-control ${css} ${color}\" \r\n      mask=\"${ifDefined(mask)}\"\r\n      list=\"${ifDefined(listid)}\"\r\n      name=\"${cell}\" \r\n      placeholder=\"${ifDefined(cfg.title)}\" \r\n      type=\"${cfg.filterType || cfg.columnType}\"\r\n      data-slots=\"${ifDefined(isDate ? 'DMY' : undefined)}\"/>\r\n    ${list}\r\n    </th>`;\r\n  }\r\n\r\n  #renderOption(cfg) {\r\n    if (cfg.childElementCount == 0) return '';\r\n    const sub = GSItem.proxify(cfg);\r\n    return sub.map(el => html`<option value=\"${el.value}\">${cfg.fixed ? el.map : ''}</option>`);\r\n  }\r\n\r\n  #renderColumn(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    const css = `${GSUtil.normalize(me.cssHeader)} ${GSUtil.normalize(cell.cssHeader)}`; \r\n    return html`\r\n      <th .index=${index} class=\"${css}\" \r\n        colspan=\"${ifDefined(cfg?.colspan)}\"\r\n        width=\"${ifDefined(cfg?.width)}\">\r\n        <div class=\"d-flex justify-content-between\"> \r\n          <span>${cfg?.title || cell}</span>\r\n          ${me.#renderIcon(index)}\r\n        </div>\r\n      </th>\r\n    `\r\n  }\r\n\r\n  #renderIcon(index) {\r\n    const me = this;\r\n    if (!me.sortable) return '';\r\n    const icons = GSTableElement.#icons;\r\n    const sortType = me.sort[index];\r\n    const order = me.multisort ? me.#sortOrder.indexOf(index) + 1 : '';\r\n    return html`<gs-icon name=\"${icons[sortType + 1]}\" super=\"${order > 0 ? order : ''}\" color=\"${ifDefined(me.colorSort)}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderRecord(entry, index) {\r\n    const me = this;\r\n    const controller = me.dataController || DataSelector;\r\n    const selected = controller?.isSelected(entry);\r\n    const color = me.colorSelect && selected ? `table-${me.colorSelect}` : '';\r\n    const cells = me.#remapRecord(entry);\r\n    return html`\r\n        <tr .index=${index} class=\"${color}\" tabindex=\"0\" ?selected=${selected}>\r\n          ${cells.map((cell, i) => me.#renderCell(cell, i))}\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  #renderCell(cell, index) {\r\n    const cfg = this.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    return html`<td class=\"text-${cfg?.align}\" colspan=\"${ifDefined(cfg?.colspan)}\" ><span>${cell}</span></td>`;\r\n  }\r\n\r\n  #remapRecord(record) {\r\n    const me = this;\r\n    if (!Array.isArray(record)) record = me.columns.map(v => record[v]);\r\n    return record.map((val, i) => me.#config[i] ? GSData.format(me.#config[i], val) : val);\r\n  }\r\n\r\n  #renderEmpty() {\r\n    const me = this;\r\n    return me.data.length > 0 ?  '' :\r\n    html`<tr data-ignore=\"true\"><td colspan=\"${me.columns.length}\" class=\"text-center fw-bold text-muted\">${me.translate('No Data')}</td></tr>`;\r\n  }\r\n\r\n  #elementTofilter(el) {\r\n    if (!el.value) return undefined;\r\n    const isDate = el.type === 'date';\r\n    const val = isDate ? el.valueAsDate : el.value;\r\n    const cfg = this.#config[el.index];\r\n    return { name: el.name, value: val, language : cfg?.language };\r\n  }\r\n\r\n  #onFilter(e) {\r\n    \r\n    const me = this;\r\n    \r\n    const filter = me.#input\r\n      .map(el => me.#elementTofilter(el))\r\n      .filter(el => el?.value);\r\n\r\n    if (me.storage) {\r\n      me.dataController?.filter(filter);\r\n    } else {\r\n      // TODO keep full data, use sorted\r\n      // GSData.filter(me.data, filter);\r\n    }\r\n  }  \r\n\r\n  #onSort(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.sortable) return;\r\n    \r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const column = e.target.closest('th');\r\n    if (!icon || !column) return;\r\n\r\n    const idx = column.index !== undefined ? column.index : GSDOM.getElementIndex(column);\r\n    const current = me.sort[idx];\r\n    const sortType = current === 1 ? -1 : current + 1;\r\n\r\n    if (me.multisort) {\r\n      if (sortType == 0) {\r\n        me.#sortOrder = me.#sortOrder.filter(v => v != idx);\r\n      } else if (!me.#sortOrder.includes(idx)) {\r\n        me.#sortOrder.push(idx);\r\n      }\r\n    } else {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [idx];\r\n    }\r\n\r\n    me.sort[idx] = sortType;\r\n\r\n    const sort = me.#prepareSorter(me.sort, me.#sortOrder);\r\n\r\n    if (me.storage) {\r\n      me.dataController?.sort(sort);\r\n    } else {\r\n      me.data = GSData.sortData(me.data, sort);\r\n    }\r\n\r\n    me.emit('sort');\r\n  }\r\n\r\n  #prepareSorter(sort, sortOrder) {\r\n    \r\n    const me = this;\r\n\r\n    if (sort.filter(v => v).length === 0) {\r\n      sort = Array(me.columns.length).fill(0);\r\n      sort[me.key] = 1;\r\n    }\r\n\r\n    // if data record is object (not simple array)\r\n    const isComplex = me.data[0] && !Array.isArray(me.data[0]);\r\n\r\n    // sort list \r\n    const list = sort.map((v, i) => v ? { name: isComplex ? me.columns[i] : undefined, col: i, ord: v, idx: sortOrder.indexOf(i) } : null).filter(v => v);\r\n\r\n    // order sort list by idx\r\n    sort = GSData.sortData(list, [{ name: 'idx', ord: 1 }]);\r\n\r\n    return sort;\r\n  }\r\n\r\n  #onSelect(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.selectable) return;\r\n    \r\n    const tr = e.target.tagName === 'TR' ? e.target : e.target.closest('tr');\r\n    if (!tr) return;\r\n    \r\n    // if context menu is attached and right click made\r\n    if (e.button === 2 && !me.query('gs-context', false, true)) return;\r\n    \r\n    const controller = me.dataController || DataSelector;\r\n    if (!controller) return;\r\n\r\n    const record = me.data[tr.index];\r\n    const isSelected = controller.isSelected(record);\r\n    if (me.multiselect) {\r\n      if (isSelected) {\r\n        controller.removeSelected(record);\r\n      } else {\r\n        controller.addSelected(record);\r\n      }\r\n    } else if (me.toggle) {\r\n      controller.clearSelected(me.data);\r\n      if (!isSelected) {\r\n        controller.addSelected(record);\r\n      }\r\n    } else {\r\n      controller.clearSelected(me.data);\r\n      controller.addSelected(record);\r\n    }\r\n    me.requestUpdate();\r\n    me.emit('select');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    if (!e.target.matches('tbody tr')) return;\r\n    let el = null;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        el = e.target.previousElementSibling;\r\n        break;\r\n      case 'ArrowDown':\r\n        el = e.target.nextElementSibling;\r\n        break;\r\n    }\r\n\r\n    if (el) {\r\n      el.focus();\r\n      this.emit('focus', el);\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') this.#onSelect(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-table');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport { createRef, ref, classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { stringArrayConverter, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSTagElement}\r\n */\r\nexport default class GSTagElement extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static styles = css`\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n\r\n    static properties = {\r\n        placeholder: {},\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        name: {},\r\n        data: { type: Array },\r\n        values: { type: Array, reflect: true, converter: stringArrayConverter },\r\n        appendable: { type: Boolean },\r\n        color: { ...color },\r\n        closeColor: { ...color, attribute: 'close-color' },\r\n        cssClose: { attribute: 'css-close' },\r\n        cssTag: { attribute: 'css-tag' },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {}\r\n    }\r\n\r\n    #dataListRef = createRef();\r\n    #inputRef = createRef();\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = '';\r\n        this.data = this.#items;\r\n        this.closeColor = 'light';\r\n        this.color = 'primary';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const tags = me.#renderTags();\r\n        return html`\r\n        <div  dir=\"${ifDefined(me.direction)}\" \r\n            class=\"${classMap(me.renderClass())}\"\r\n            @click=\"${me.#onClick.bind(me)}\">\r\n            ${tags}\r\n            <input type=\"text\" \r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            ${ref(me.#inputRef)}\r\n            name=\"${me.name}\" \r\n            list=\"${me.name}_list\"\r\n            class=\"form-control d-flex w-auto flex-grow-1\" \r\n            placeholder=\"${me.#info}\">\r\n            <datalist ${ref(me.#dataListRef)} id=\"${me.name}_list\">${me.#renderList()}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"d-flex\": true,\r\n            \"flex-wrap\": true,\r\n            \"align-items-center\": true,\r\n            \"gap-1 \": true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    get #info() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return me.placeholder ? me.placeholder : alt;\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTagElement.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.data.length >= me.max;\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax || (!optEl && me.appendable == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (!me.values.includes(fld.value)) {\r\n            me.values.push(fld.value);\r\n            fld.value = '';\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const value = tagEl.dataset.value;\r\n        me.values = me.values.filter(v => v != value);\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v));\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        const size = me.size > 0 ? `fs-${me.size}` : '';\r\n        return html`<div class=\"${classMap(me.#tagClass)}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"${classMap(me.#btnClass)}\"></button></div>`;\r\n    }\r\n\r\n    get #tagClass() {\r\n        const me = this;\r\n        const opt = {\r\n            badge: true,\r\n            tag: true,\r\n            [`fs-${me.size}`]: me.size > 0,\r\n            [`text-bg-${me.color}`]: me.color ? true : false\r\n        }\r\n        return me.mapCSS(me.cssTag, opt);\r\n    }\r\n\r\n    get #btnClass() {\r\n        const me = this;\r\n        const opt = {\r\n            'btn-close': true,\r\n            'ms-1': true,\r\n            [`text-bg-${me.closeColor}`]: me.closeColor ? true : false\r\n        }\r\n        return me.mapCSS(me.cssClose, opt);\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        return me.data.map(v => html`<option value=\"${v}\">`);\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el));\r\n    }\r\n\r\n    get #items() {\r\n        return this.#proxify(this).map(el => el.name).filter(v => v ? true : false);\r\n    }\r\n\r\n    get #input() {\r\n        return this.#inputRef.value;\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.#dataListRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-tag');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSTextElement extends GSElement {\r\n\r\n  #text = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.#text = this.innerText;\r\n    this.innerText = \"\";\r\n  }\r\n\r\n  renderUI() {\r\n    return this.translate(this.#text);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-text');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSTooltipElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    title: {},\r\n    target: {},\r\n    opened: { type: Boolean },\r\n    local: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowStyle = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.placement = 'top';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowStyle);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      role=\"tooltip\"\r\n      data-popper-placement=\"${me.placement}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      <div ${ref(me.#arrowRef)} \r\n          class=\"tooltip-arrow ${me.#arrowStyle}\" \r\n          data-gs-class=\"${me.#arrowStyle}\">\r\n      </div>\r\n      <div class=\"tooltip-inner\">${me.translate(me.title)}</div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tooltip': true,\r\n      'bs-tooltip-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  #attachEvents() {\r\n    const me = this;\r\n    me.attachEvent(me.#ref, 'mouseenter', me.open.bind(me));\r\n    me.attachEvent(me.#ref, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const arrowEl = me.#arrow;\r\n    const panelEl = me.#panel;\r\n    if (!panelEl) return;\r\n    if (me.opened) {\r\n      GSPopper.popupFixed(me.placement, panelEl, me.#ref, arrowEl);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, { top: '-1000px', left: '-1000px' });\r\n    }\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return me.local ? me.#refLocal : me.#refGlobal;\r\n    }\r\n  }\r\n\r\n  get #refLocal() {\r\n    const root = GSDOM.root(this);\r\n    return GSDOM.query(root, this.target);\r\n  }\r\n  \r\n  get #refGlobal() {\r\n    return GSDOM.query(document.body, this.target);\r\n  }\r\n\r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-tooltip');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty } from '../properties/index.mjs';\r\n\r\nexport class GSTemplateElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { reflect: true, hasChanged: notEmpty }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    const me = this;\r\n    if (me.flat) {\r\n      me.renderOptions.renderBefore = me;\r\n      return me.parentElement;\r\n    }\r\n    return super.createRenderRoot();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${this.renderTemplate()}`;\r\n  }\r\n\r\n\ttemplateInjected() {\r\n\t\tthis.emit('template-injected', null, true, true);\r\n\t}\r\n\r\n  static {\r\n    this.define('gs-template');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle automatic field value copy and select\r\n */\r\nexport class CopySelectController {\r\n\r\n  #host;\r\n\r\n  #clickCallback;\r\n  #copyCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#clickCallback = me.onClick.bind(me);\r\n    me.#copyCallback = me.onCopy.bind(me);\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on?.('click', me.#clickCallback);\r\n    me.#host.on?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host.off?.('click', me.#clickCallback);\r\n    me.#host.off?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  onCopy(e) {\r\n    GSUtil.writeToClipboard(this.#host.value);\r\n  }\r\n\r\n  onClick(e) {\r\n      const me = this;\r\n      if (me.#host.autocopy) me.onCopy(e);\r\n      if (me.#host.autoselect) me.#host.select();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Handle field mask \r\n */\r\nexport class MaskController {\r\n\r\n  static #special = '.^$*+?()[]{}\\|';\r\n\r\n  static #maskType = {\r\n    x: /[0-9a-fA-F]/g,\r\n    n: /[0-9]/g,\r\n    y: /[0-9]/g,\r\n    m: /[0-9]/g,\r\n    d: /[0-9]/g,\r\n    h: /[0-9]/g,\r\n    s: /[0-9]/g,\r\n    '.': /[0-9]/g,\r\n    '#': /[a-zA-Z]/g,\r\n    '*': /[0-9a-zA-Z]/g,\r\n    '_': /./g\r\n  };\r\n\r\n  #back = false;\r\n  #slots;\r\n  #prev;\r\n  #first;\r\n  #accept;\r\n  #pattern;\r\n\r\n  #host;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.initRules();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  initRules() {\r\n    const me = this;\r\n    if (!me.pattern) return;\r\n    me.#slots = me.#buildSlots();\r\n    me.#prev = (j => Array.from(me.pattern, (c, i) => me.#slots.has(c) ? j = i + 1 : j))(0);\r\n    me.#first = [...me.pattern].findIndex(c => me.#slots.has(c));\r\n    me.#accept = me.#buildAccept();\r\n    me.#toPattern();\r\n  }\r\n\r\n  validate() {  \r\n    const me = this;  \r\n    const isMatch = me.isEmpty ? true :me.isMatch;\r\n    me.setCustomValidity(isMatch ? '' : 'Mask not matched!');\r\n    return isMatch;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n    \r\n  setSelectionRange(i, j) {\r\n    this.#host.setSelectionRange(i, j);\r\n  }\r\n\r\n  select() {\r\n    this.#host.select();\r\n  }\r\n\r\n  get isEmpty() {\r\n    return GSUtil.isStringEmpty(this.raw);\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get disabled() {\r\n    return this.#host.disabled;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }    \r\n\r\n  get value() {\r\n    const [i, j] = this.#range();\r\n    return this.raw.substring(0, j);\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get pattern() {\r\n    return this.#host.mask;\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get selectionStart() {\r\n    return this.#host.selectionStart;\r\n  }\r\n\r\n  get selectionEnd() {\r\n    return this.#host.selectionEnd;\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.#host.autoselect;\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n\r\n    let isMatch = true;\r\n    if (me.#pattern) {\r\n      me.#pattern.lastIndex = 0;\r\n      isMatch = me.#pattern.test(me.raw);\r\n    }\r\n\r\n    return isMatch;\r\n  }\r\n\r\n  onInput(e) {\r\n    this.#format();\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    me.#back = e.key === \"Backspace\";\r\n    const isTab = e.key === \"Tab\";\r\n    if (isTab) {\r\n      me.#format();\r\n      me.validate();\r\n    }\r\n  }\r\n\r\n  onFocus(e) {\r\n    const me = this;\r\n    me.#format();\r\n    if (me.autoselect) me.select();\r\n  }\r\n\r\n  onChange(e) {\r\n    const me = this;\r\n    me.#format();\r\n  }\r\n\r\n  onBlur(e) {\r\n    this.validate();\r\n  }\r\n\r\n  /**\r\n   * If data-slots not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildSlots() {\r\n    const me = this;\r\n    let slots = me.dataset.slots;\r\n    if (!slots) {\r\n      const maskType = MaskController.#maskType;\r\n      slots = [...new Set(me.pattern)]\r\n        .filter(v => maskType[v.toLowerCase()])\r\n        .join('');\r\n    }\r\n    return new Set(slots || \"_\");\r\n  }\r\n\r\n  /**\r\n   * If data-accept not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildAccept() {\r\n    const me = this;\r\n    let accept = me.dataset.accept;\r\n    if (!accept) {\r\n      const maskType = MaskController.#maskType;\r\n      accept = [...new Set(me.pattern)]\r\n        .map(v => maskType[v.toLowerCase()])\r\n        .filter(v => v);\r\n      if (accept.length > 0) {\r\n        const tmp = {};\r\n        accept.forEach(v => tmp[v.src] = v);\r\n        accept = Object.values(tmp);\r\n        return accept.length === 1 ? accept.pop() : accept;\r\n      }\r\n\r\n    }\r\n    return new RegExp(accept || \"\\\\d\", \"g\");\r\n  }\r\n\r\n  #range() {\r\n    const me = this;\r\n    const value = me.raw;\r\n    return [me.selectionStart, me.selectionEnd].map(i => {\r\n      i = me.#clean(value.slice(0, i)).findIndex(c => me.#slots.has(c));\r\n      return i < 0 ? me.#prev[me.#prev.length - 1] : me.#back ? me.#prev[i - 1] || me.#first : i;\r\n    });\r\n  }\r\n\r\n  #format() {\r\n    const me = this;\r\n    const [i, j] = me.#range();\r\n    const val = me.#clean(me.#host.raw);\r\n    me.value = val.join``;\r\n    me.setSelectionRange(i, j);\r\n    me.#back = false;\r\n  }\r\n\r\n  #clean(input) {\r\n    const me = this;\r\n    input = input.match(me.#accept) || [];\r\n    return Array.from(me.pattern, (c, i) => input[i] === c || me.#slots.has(c) ? input.shift() || c : c);\r\n  }\r\n\r\n  #toPattern() {\r\n\r\n    const me = this;\r\n\r\n    if (me.pattern.length === 0) return;\r\n\r\n    const chars = me.pattern.split('');\r\n    const masks = ['^'];\r\n\r\n    const maskType = MaskController.#maskType;\r\n    const special = MaskController.#special;\r\n\r\n    let cnt = 0;\r\n    chars.forEach((v, i) => {\r\n      const m = me.#slots.has(v) ? maskType[v.toLowerCase()] : null;\r\n      if (!m) {\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        cnt = 0;\r\n        if (special.includes(v)) masks.push('\\\\');\r\n        return masks.push(v);\r\n      }\r\n\r\n      chars[i] = new RegExp(m, 'g');\r\n\r\n      if (masks.length === 0) return masks.push(m.source);\r\n\r\n      if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n      if (cnt > 0) masks.push(`{${++cnt}}`);\r\n      cnt = 0;\r\n      masks.push(m.source);\r\n    });\r\n\r\n    if (cnt > 0) masks.push(`{${++cnt}}`);\r\n    masks.push('$');\r\n\r\n    me.#pattern = new RegExp(masks.join(''), 'g');\r\n    // me.#max = me.pattern.length;\r\n    // me.#masks = chars;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle multiple patterns\r\n */\r\nexport class MultipatternController {\r\n\r\n  #host;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n  \r\n  validate() {    \r\n    const me = this;  \r\n    const isMatch = me.isEmpty ? true :me.isMatch;\r\n    me.setCustomValidity(isMatch ? '' : 'Pattern not matched!');\r\n    return isMatch;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  get isEmpty() {\r\n    return GSUtil.isStringEmpty(this.raw);\r\n  }\r\n    \r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get disabled() {\r\n    return this.#host.disabled;\r\n  }    \r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get patterns() {\r\n    const obj = this.#host.multipattern;\r\n    if (obj instanceof RegExp) return [obj];\r\n    if (Array.isArray(obj)) return obj.filter(o => o instanceof RegExp);\r\n    throw new Error('Invalid multipattern value. Expected RegExp object or array.');\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n    let isMatch = true;\r\n    for (const r of me.patterns) {\r\n      isMatch = r.test(me.value);\r\n      if (isMatch) break;\r\n    }\r\n   \r\n    return isMatch;\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const isTab = e.key === 'Tab';\r\n    if (isTab) {\r\n      this.validate();\r\n    } \r\n  }\r\n\r\n  onBlur(e) {\r\n    this.validate();\r\n  }\r\n\r\n  onChange(e) {\r\n    this.validate();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type number to support max length entry\r\n */\r\nexport class NumberController {\r\n\r\n  #host;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  get maxLength() {\r\n    return GSUtil.asNum(this.#host.maxLength, 0);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n    \r\n  onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'number') {\r\n      if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n          me.value = me.value.substring(0, me.maxLength);\r\n      }\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle for input tpye password to support keyboard shortcut for password reveal.\r\n */\r\nexport class PasswordController {\r\n\r\n  #host;\r\n\r\n  #revealing = false;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  get reveal() {\r\n    return this.#host.reveal;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  set type(val) {\r\n    if (this.#host) this.#host.type = val;\r\n  }\r\n\r\n  #isReveal(e) {\r\n    return this.reveal && e.key === 'Shift' && e.altKey && e.ctrlKey && e.shiftKey && this.type === 'password';\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    if (e.key === 'Shift' && me.#revealing) {\r\n      me.type = 'password';\r\n    }\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    if (me.#isReveal(e)) {\r\n      me.#revealing = true;\r\n      me.type = 'text';\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCSSMap } from \"../../../base/GSCSSMap.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type text to support text value changes based on CSS\r\n */\r\nexport class TextController {\r\n\r\n  #host;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  onInput(e) {\r\n    const input = e.target;\r\n    const start = input.selectionStart;\r\n    const end = input.selectionEnd;\r\n    input.value = this.#transform();\r\n    input.setSelectionRange(start, end);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.value = this.#transform();\r\n  }\r\n\r\n  onBlur(e) {\r\n    this.value = this.#transform();\r\n  }\r\n\r\n  #transform() {\r\n    const me = this;\r\n    if (me.type === 'text') {\r\n      const map = GSCSSMap.styleValue(this.#host, 'text-transform');\r\n      if (map) return GSUtil.textTransform(map.value, me.raw);\r\n    }\r\n    return me.value;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Handle data filtering for options atribute (combo and data lists)\r\n * Changes in one field list, updates available selections in another field selections.\r\n * \r\n * Options element data-* attributes matching other elements changes \r\n * \"disabled\" attribute for fields, and visibility for non field elements.\r\n * \r\n * NOTE: This applies only for \"gs-form\" or \"form\" child elements.\r\n */\r\nexport class InteractiveController {\r\n\r\n  #host;\r\n\r\n  #monitorCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#monitorCallback = me.#onMonitor.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (list) {\r\n      me.#host.attachEvent(me.filter, 'change', me.#monitorCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.removeEvent(me.filter, 'change', me.#monitorCallback);\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n      this.onChange();\r\n    }\r\n  }\r\n\r\n  get component() {\r\n    return this.#host\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get list() {\r\n    return this.#host;\r\n  }\r\n\r\n  get filter() {\r\n    const me = this;\r\n    const filter = GSAttr.get(me.#host, 'data-filter');\r\n    return GSDOM.getByID(me.owner, filter);\r\n  }\r\n\r\n  get owner() {\r\n    //return this.#host.owner;\r\n    return this.#host.form || GSDOM.closest(this.#host, 'form');\r\n  }\r\n\r\n  get formElements() {\r\n    return GSDOM.formElements(this.owner, true);\r\n  }\r\n\r\n  get strict() {\r\n    return GSAttr.get(this.#host, 'strict', '');\r\n  }\r\n\r\n  onBlur(e) {\r\n    if (!this.#isInList()) GSEvents.send(this.#host, 'strict', { ok: false, source: e });\r\n  }\r\n\r\n  onChange(e) {\r\n\r\n    const me = this;\r\n    const own = me.owner;\r\n    let clean = false;\r\n    let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n    if (!opt) {\r\n        opt = me.list?.querySelector('option');\r\n        clean = true;\r\n    }\r\n\r\n    const obj = opt?.dataset || {};\r\n    Object.entries(obj).forEach(p => {\r\n        const val = clean ? '' : p[1];\r\n        const key = p[0];\r\n        if (key === 'id' || key === 'group') {\r\n          GSAttr.set(me.#host, `data-${key}`, p[1]);\r\n          return;\r\n        } \r\n\r\n        const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n        const els = Array.from(GSDOM.queryAll(own, filter));\r\n        els.filter(el => el.tagName !== 'OPTION')\r\n            .filter(el => el.tagName !== 'GS-ITEM')\r\n            .filter(el => el !== me.#host)\r\n            .filter(el => el !== me.filter) \r\n            .filter(v => GSDOM.closest(v, 'gs-form-group') ? false: true ) \r\n            //.filter(el => GSAttr.get(el, 'list').length === 0)\r\n            .forEach(el => me.#togleEl(el, key, val))\r\n    });\r\n  }\r\n\r\n  #onMonitor(e) {\r\n    const me = this;\r\n    const list = me.list;\r\n    me.value = '';\r\n    me.#host.disabled = false;\r\n    const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n    const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n    GSDOM.queryAll(list, 'option').forEach(el => me.#togleOption(el, true));\r\n    GSDOM.queryAll(list, filter).forEach(el => me.#togleOption(el, false));\r\n\r\n  }\r\n\r\n  #togleOption(el, value) {\r\n      GSAttr.toggle(el, 'disabled', value);\r\n      GSDOM.toggleClass(el, 'd-none', value);\r\n  }\r\n\r\n  #togleEl(el, key = '', value = '') {\r\n\r\n    const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n    const isMatch = value.length > 0 && data.includes(value);\r\n    const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el) || el.tagName === \"GS-FORM-GROUP\";\r\n\r\n    if (frmel) {\r\n      GSAttr.toggle(el, 'disabled', !isMatch);\r\n    } else {\r\n      isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n    }\r\n\r\n    //this.formElements.forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    GSAttr.set(el, 'data-ignore', isMatch ? null : true);\r\n    GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n  }\r\n\r\n  #isInList() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (!list) return true;\r\n    if (!me.strict) return true;\r\n    if (!list.querySelector('option')) return true;\r\n    const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n    return opt != null;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { InteractiveController } from \"./InteractiveController.mjs\";\r\n\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update available selections in another field selections.\r\n */\r\nexport class ComboController extends InteractiveController {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n  }\r\n\r\n  get list() {\r\n    return this.component;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { InteractiveController } from \"./InteractiveController.mjs\";\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update available selections in another field selections.\r\n */\r\nexport class ListController extends InteractiveController {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n  }\r\n\r\n  get list() {\r\n    const me = this;\r\n    if (me.component.list) return me.component.list;\r\n    const list = GSAttr.get(me.component, 'list');\r\n    return GSDOM.getByID(me.owner, list);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSBeep } from \"../../../base/GSBeep.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Handle for input/textarea to support validity checkups\r\n */\r\nexport class ValidityController {\r\n\r\n  #host = undefined;\r\n  #processing = false;  \r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#processing = false;\r\n    me.#host = host;\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host = undefined;\r\n    me.#processing = false;\r\n  }\r\n  \r\n  get autoreport() {\r\n    return this.#host.autoreport;\r\n  }\r\n\r\n  get autovalidate() {\r\n    return this.#host.autovalidate;\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get disabled() {\r\n    return this.#host.disabled;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }  \r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  get beep() {\r\n    return this.#host.beep;\r\n  }\r\n\r\n  get block() {\r\n    return this.#host.block;\r\n  }\r\n\r\n  get timeout() {\r\n    return this.#host.timeout;\r\n  }\r\n\r\n  get isVisible() {\r\n    return GSDOM.isVisible(this.#host);\r\n  }\r\n\r\n  validate() {\r\n    const me = this;    \r\n    const sts = me.isValid || me.disabled;\r\n    me.#togglUI(sts);\r\n    return sts;\r\n  }  \r\n    \r\n  onFocus(e) {\r\n    this.validate();\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    const isTab = e.key === 'Tab';\r\n    if (isTab && !me.validate()) {\r\n        me.#onBlock(e);\r\n        me.#report();\r\n    }\r\n  }\r\n\r\n  onInvalid(e) {\r\n    this.validate();\r\n  }\r\n\r\n  onChange(e) {\r\n    this.#onAutoValidity(e);    \r\n  }\r\n\r\n  onBlur(e) {\r\n    const me = this;\r\n    me.#onBlock(e);\r\n    me.#onAutoValidity(e);\r\n  }\r\n\r\n  #onBlock(e) {    \r\n    const me = this;\r\n    if (me.isValid) return;\r\n    if (me.isVisible && me.block) {\r\n      GSEvents.prevent(e, false, true, false);\r\n      me.#focus();\r\n    }        \r\n  }\r\n\r\n  #onAutoValidity(e) {\r\n    return this.autoreport ? this.#reportValidity() : this.autovalidate ? this.#checkValidity() : this.validate();\r\n  }  \r\n\r\n  #focus() {\r\n    return this.#host.focus();\r\n  }\r\n\r\n  #checkValidity() {\r\n    const me = this;  \r\n    me.validate();\r\n    return me.#host.checkValidity();\r\n  }\r\n\r\n  #reportValidity() {\r\n    const me = this;  \r\n    me.validate();\r\n    return me.#host.reportValidity();\r\n  }  \r\n\r\n  async #report() {    \r\n    const me = this;\r\n    if (me.#processing || me.isValid || !me.isVisible) return;\r\n    me.#processing = true;\r\n    if (me.beep) {\r\n      try {\r\n        await me.#beep();\r\n        await GSUtil.timeout(me.timeout);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    me.#processing = false;\r\n  }\r\n\r\n  #togglUI(isValid) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      GSDOM.toggleClass(me.#host, 'is-invalid', !isValid);\r\n    });\r\n  }\r\n\r\n  #beep() {\r\n    return GSBeep.beep(100, 1200, 150, 'triangle');\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSElement } from \"../../GSElement.mjs\";\r\n\r\n/*\r\n* Shared event handling extensions\r\n*/\r\nconst EventsMixin = {\r\n\r\n  [Symbol.for('gs-owner')]() {\r\n    const own = GSDOM.root(this);\r\n    return GSDOM.unwrap(own);\r\n  },\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  [Symbol.for('gs-parent')]() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  },\r\n\r\n  ////////////////////////////////////////////////////////////////////////\r\n  // cross shadow query\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  },\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  },\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  },\r\n\r\n\r\n  ////////////////////////////////////////////////////////////////////////\r\n  // event handling helpers\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  },\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  },\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  },\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  },\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  },\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  },\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e, defaults = true, propagate = true, immediate = true) {\r\n    GSEvents.prevent(e, defaults, propagate, immediate);\r\n  },\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  },\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  },\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent: (el, name = '', fn, once = false) => {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  },\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////\r\n\r\n}\r\n\r\n/**\r\n * Function to apply mixin into defiend class\r\n * @param {*} clazz \r\n * @returns \r\n */\r\nexport const mixin = (clazz) => {\r\n  return Object.assign(clazz.prototype || clazz, EventsMixin);\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class FormController {\r\n\r\n  #host = undefined;\r\n  #processing = false;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#processing = false;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = undefined;\r\n    me.#processing = false;\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Form reset event\r\n   * @param {*} e \r\n   */\r\n  onReset(Event) {\r\n    const me = this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Form submit event\r\n   * @param {*} e \r\n   */\r\n  onSubmit(Event) {\r\n    const me = this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Event triggered on new FormData(form)\r\n   * @param {Event} e \r\n   */\r\n  onFormData(e) {\r\n    const me = this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Field event propagated to the form\r\n   * @param {Event} e \r\n   */\r\n  onInvalid(e) {\r\n    const me = this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Field event propagated to the form\r\n   * @param {Event} e \r\n   */  \r\n  onChange(e) {\r\n    const me = this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Field event propagated to the form\r\n   * @param {Event} e \r\n   */  \r\n  onBlur(e) {\r\n\r\n  }  \r\n\r\n  get form() {\r\n    return this.#host.form;\r\n  }\r\n\r\n  get inputs() {\r\n    return this.form?.inputs;\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\nimport { ValidityController } from './controllers/ValidityController.mjs';\r\nimport { CopySelectController } from './controllers/CopySelectController.mjs';\r\nimport { PasswordController } from './controllers/PasswordController.mjs';\r\nimport { NumberController } from './controllers/NumberController.mjs';\r\nimport { TextController } from './controllers/TextController.mjs';\r\nimport { ComboController } from './controllers/ComboController.mjs';\r\nimport { FormController } from './controllers/FormController.mjs';\r\nimport { DataController } from \"../../controllers/DataController.mjs\";\r\n\r\n/**\r\n * Helper class wizh shared code for form elements to process controllers.\r\n */\r\nexport class ControllerHandler {\r\n\r\n\r\n  #host = undefined;\r\n  #handlers = undefined;\r\n  #controllers = undefined;\r\n\r\n  #copyselect = undefined;\r\n  #typeController = undefined;\r\n  #validityController = undefined;\r\n  #comboController = undefined;\r\n\r\n  #formController = undefined;\r\n  #dataController = undefined;\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    const host = me.#host;\r\n\r\n    if (me.isForm) {\r\n      host.on('reset', me.#onReset.bind(me));\r\n      host.on('submit', me.#onSubmit.bind(me));\r\n      host.on('formdata', me.#onFormData.bind(me));\r\n    } else {\r\n      host.on('keydown', me.#onKeyDown.bind(me));\r\n      host.on('keyup', me.#onKeyUp.bind(me));\r\n      host.on('input', me.#onInput.bind(me));\r\n      host.on('focus', me.#onFocus.bind(me));\r\n    }\r\n\r\n    // field events catched at the form level also \r\n    host.on('change', me.#onChange.bind(me));\r\n    host.on('blur', me.#onBlur.bind(me));\r\n    host.on('invalid', me.#onInvalid.bind(me));\r\n\r\n    me.#invoke((c) => c.hostConnected?.());\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.detachListeners(me.#host);\r\n    me.#invoke((c) => c.hostDisconnected?.());\r\n\r\n    me.#controllers?.clear();\r\n\r\n    me.#host = undefined;\r\n    me.#handlers = undefined;\r\n    me.#controllers = undefined;\r\n    me.#comboController = undefined;\r\n\r\n    me.#formController = undefined;\r\n    me.#dataController = undefined;\r\n\r\n    me.#copyselect = undefined;\r\n    me.#typeController = undefined;\r\n    me.#validityController = undefined;\r\n  }\r\n\r\n  hostUpdated(name) {\r\n    const me = this;\r\n    if (!me.#host.hostUpdated) {\r\n      me.#initControllers();\r\n      me.#host.checkValidity?.();\r\n    }\r\n    this.#invoke((c) => c.hostUpdated?.(name));\r\n  }\r\n\r\n  validate() {\r\n    this.#invoke((c) => c.validate?.());\r\n  }\r\n\r\n  addController(controller) {\r\n    if (!controller) return;\r\n    const me = this;\r\n    me.#controllers ??= new Set();\r\n    me.#controllers.add(controller);\r\n    me.#prepare();\r\n    if (me.#host.isConnected) {\r\n      controller.hostConnected?.();\r\n    }\r\n  }\r\n\r\n  removeController(controller) {\r\n    const me = this;\r\n    me.#controllers?.delete(controller);\r\n    me.#prepare();\r\n  }\r\n\r\n  #prepare() {\r\n    const me = this;\r\n    me.#handlers = me.#controllers ? Array.from(me.#controllers).reverse() : [];\r\n  }\r\n\r\n  #invoke(callback) {\r\n    if (typeof callback === 'function') {\r\n      this.#handlers?.forEach(callback);\r\n    }\r\n  }\r\n\r\n  validate(e) {\r\n    return this.#handlers ? this.#handlers.every(c => c.validate ? c.validate(e) : true) : true;\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    this.#invoke(c => c.onInvalid?.(e));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    this.#invoke(c => c.onKeyDown?.(e));\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    this.#invoke(c => c.onKeyUp?.(e));\r\n  }\r\n\r\n  #onInput(e) {\r\n    this.#invoke(c => c.onInput?.(e));\r\n  }\r\n\r\n  #onFocus(e) {\r\n    this.#invoke(c => c.onFocus?.(e));\r\n  }\r\n\r\n  #onChange(e) {\r\n    this.#invoke(c => c.onChange?.(e));\r\n  }\r\n\r\n  #onBlur(e) {\r\n    this.#invoke(c => c.onBlur?.(e));\r\n  }\r\n\r\n  #onReset(e) {\r\n    this.#invoke(c => c.onReset?.(e));\r\n  }\r\n  \r\n  #onSubmit(e) {\r\n    this.#invoke(c => c.onSubmit?.(e));\r\n  }\r\n  \r\n  #onFormData(e) {\r\n    this.#invoke(c => c.onFormData?.(e));\r\n  }\r\n\r\n  #initControllers() {\r\n    const me = this;\r\n    const host = me.#host;\r\n\r\n    if (me.isForm) {\r\n      me.#formController ??= new FormController(host);\r\n    } else {\r\n      me.#validityController ??= new ValidityController(host);\r\n      if (me.isInput) me.#initIinputControllers();\r\n      if (me.isTextArea) me.#initTextAreaControllers();\r\n      if (me.isSelect) me.#comboController ??= new ComboController(host);\r\n    }\r\n\r\n    if (host.storage) {\r\n      if (me.isSelect || me.isDataList ) {\r\n        me.#dataController ??= new DataController(host);\r\n      }\r\n    }\r\n  }\r\n\r\n  #initTextAreaControllers() {\r\n      const me = this;\r\n      const host = me.#host;\r\n      me.#typeController ??= new TextController(host);\r\n      me.#copyselect ??= new CopySelectController(host);\r\n  }\r\n\r\n  #initIinputControllers() {\r\n    const me = this;\r\n    const host = me.#host;\r\n    let ok = false;\r\n    switch (host.type) {\r\n      case 'text':\r\n        ok = true;\r\n        me.#typeController ??= new TextController(host);\r\n        break;\r\n      case 'password':\r\n        ok = true;\r\n        me.#typeController ??= new PasswordController(host);\r\n        break;\r\n      case 'number':\r\n        ok = true;\r\n        me.#typeController ??= new NumberController(host);\r\n        break;\r\n    }\r\n    if (ok) {\r\n      me.#copyselect ??= new CopySelectController(host);\r\n    }\r\n  }\r\n\r\n  get tagName() {\r\n    return this.#host?.tagName;\r\n  }\r\n\r\n  get isForm() {\r\n    return (this.tagName === 'FORM');\r\n  }\r\n\r\n  get isTextArea() {\r\n    return (this.tagName === 'TEXTAREA');\r\n  }\r\n\r\n  get isInput() {\r\n    return (this.tagName === 'INPUT');\r\n  }\r\n\r\n  get isSelect() {\r\n    return (this.tagName === 'SELECT');\r\n  }\r\n\r\n  get isDataList() {\r\n    return (this.tagName === 'DATALIST');\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { ButtonTypes } from '../../properties/index.mjs';\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { mixin } from \"./EventsMixin.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <textarea is=\"gs-ext-textarea\"></textarea>\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends { HTMLButtonElement }\r\n */\r\nexport class GSButtonElement extends HTMLButtonElement {\r\n\r\n    static {\r\n        mixin(GSButtonElement);\r\n        GSDOM.define('gs-ext-button', GSButtonElement, { extends: 'button' });\r\n        Object.seal(GSButtonElement);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['disabled'];\r\n    }\r\n\r\n    #hasUpdated = false;\r\n    #controllerHandler = undefined;\r\n    #formEl = undefined;\r\n\r\n    constructor() {\r\n        super();\r\n        //this.#controllerHandler = ???\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.connectedCallback();\r\n        me.#formEl = me.form;\r\n        me.#preupdate();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSEvents.detachListeners(me);\r\n        me.#controllerHandler?.disconnectedCallback();\r\n        me.#controllerHandler = undefined;\r\n        me.#formEl = undefined;\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        me.#preupdate(name);\r\n        me.willUpdate(name, oldValue, newValue);\r\n        me.#controllerHandler?.hostUpdated(name);\r\n    }\r\n\r\n    #preupdate(name) {\r\n        const me = this;\r\n        if (!me.#hasUpdated) {\r\n            me.firstUpdated(name);\r\n            me.#controllerHandler?.hostUpdated(name);\r\n            me.#hasUpdated = true;\r\n        }\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        const me = this;\r\n        const form = me.#formEl;\r\n        if (me.isSubmit && form) {\r\n            me.attachEvent(form, 'change', me.#onFormState.bind(me));\r\n            me.attachEvent(form, 'invalid', me.#onFormState.bind(me));\r\n            me.on('click', me.#onClick.bind(me));\r\n        }\r\n    }\r\n\r\n    willUpdate(changed, oldValue, newValue) {\r\n        if (changed === 'disabled') {\r\n            this.emit('disabled', this.disabled, true, true, true);\r\n        }\r\n    }\r\n\r\n    addController(controller) {\r\n        this.#controllerHandler?.addController(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllerHandler?.removeController(controller);\r\n    }\r\n\r\n    get owner() {\r\n        return this[Symbol.for('gs-owner')]();\r\n    }\r\n\r\n    get parentComponent() {\r\n        return this[Symbol.for('gs-parent')]();\r\n    }\r\n\r\n    get hasUpdated() {\r\n        return this.#hasUpdated;\r\n    }\r\n\r\n    get form() {\r\n        const me = this;\r\n        return super.form || me.owner?.form || me.closest?.('form');\r\n    }\r\n\r\n    get isSubmit() {\r\n        return ButtonTypes.isSubmit(this.type);\r\n    }\r\n\r\n    get isReset() {\r\n        return ButtonTypes.isReset(this.type);\r\n    }\r\n\r\n    /**\r\n     * If the button is part fo the form, check if form is valid\r\n     * ba iterating all field elements and checkin it's validity state.\r\n     * If not part of the form, always return true.\r\n     * We use basic functionality, to support native non-extended form also\r\n     */\r\n    get isValid() {\r\n        const elements = this.#formEl?.elements;\r\n        return elements ? Array.from(elements)\r\n            .filter(el => GSDOM.isFormElement(el))\r\n            .filter(el => el.validity?.valid === false)\r\n            .length === 0\r\n            : true;\r\n    }\r\n\r\n    /**\r\n     * If form is available, monitor elements change events\r\n     * and validate form for validity to update disabled state button[type=\"submit\"]\r\n     * \r\n     * @param {*} e \r\n     */\r\n    #onFormState(e) {\r\n        const me = this;\r\n        if (me.#formEl && me.isSubmit) {\r\n            me.disabled = me.isValid === false;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.#formEl && me.isSubmit) {\r\n            if (me.isValid) {\r\n                if (me.isSubmit) me.#formEl.requestSubmit();\r\n                if (me.isReset) me.#formEl.reset();\r\n            } else {\r\n                GSEvents.prevent(e);\r\n                me.disabled = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\nimport { MaskController } from './controllers/MaskController.mjs';\r\nimport { MultipatternController } from './controllers/MultipatternController.mjs';\r\nimport { ListController } from './controllers/ListController.mjs';\r\nimport { GSAttr } from '../../base/GSAttr.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { ControllerHandler } from './ControllerHandler.mjs';\r\nimport { mixin } from './EventsMixin.mjs';\r\n\r\n\r\n/**\r\n * Extended HTMLInputElement with controllers support\r\n * adding various features such as masked input support \r\n */\r\nexport class GSInputElement extends HTMLInputElement {\r\n\r\n  static {\r\n    mixin(GSInputElement);\r\n    GSDOM.define('gs-ext-input', GSInputElement, { extends: 'input' });\r\n    Object.seal(GSInputElement);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    // 'autocopy', 'autofocus', 'autoselect', 'autovalidate','autoreport', 'block', 'beep', 'timeout', \r\n    return ['multipattern', 'mask', 'required', 'disabled'];\r\n  }\r\n\r\n  #controllerHandler = undefined;\r\n  #maskController = undefined;\r\n  #patternController = undefined;\r\n  #listController = undefined;\r\n\r\n  #pattern = undefined;\r\n  #hasUpdated = false;\r\n\r\n  constructor() {\r\n    super();\r\n    this.#controllerHandler = new ControllerHandler(this);\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#controllerHandler?.connectedCallback();\r\n    me.#preupdate();\r\n    me.dataset.value = me.value;\r\n    me.on('change', e => me.dataset.value = me.value);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#controllerHandler?.disconnectedCallback();\r\n    me.#controllerHandler = undefined;\r\n\r\n    me.#maskController = undefined;\r\n    me.#patternController = undefined;\r\n    me.#listController = undefined;\r\n    me.#pattern = undefined;\r\n\r\n    GSEvents.detachListeners(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    const me = this;    \r\n    if (me.isCheckBox && name === 'required' && me.required) return me.required = false;\r\n    me.#preupdate(name);\r\n    me.willUpdate(name, oldValue, newValue);\r\n    me.#controllerHandler?.hostUpdated(name);\r\n  }\r\n\r\n  addController(controller) {\r\n    this.#controllerHandler?.addController(controller);\r\n  }\r\n\r\n  removeController(controller) {\r\n    this.#controllerHandler?.removeController(controller);\r\n  }\r\n\r\n  get owner() {\r\n    return this[Symbol.for('gs-owner')]();\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return this[Symbol.for('gs-parent')]();\r\n  }\r\n\r\n\r\n  get hasUpdated() {\r\n    return this.#hasUpdated;\r\n  }\r\n\r\n  get autocopy() {\r\n    return this.hasAttribute('autocopy');\r\n  }\r\n\r\n  get autofocus() {\r\n    return this.hasAttribute('autofocus');\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.hasAttribute('autoselect');\r\n  }\r\n\r\n  /**\r\n   * If set, autoamtically calls reportValidity\r\n   */\r\n  get autoreport() {\r\n    return this.hasAttribute('autoreport');\r\n  }\r\n\r\n  /**\r\n   * If set, autoamtically calls checkValidity\r\n   */\r\n  get autovalidate() {\r\n    return this.hasAttribute('autovalidate');\r\n  }\r\n\r\n  get beep() {\r\n    return this.hasAttribute('beep');\r\n  }\r\n\r\n  get block() {\r\n    return this.hasAttribute('block');\r\n  }\r\n\r\n  get mask() {\r\n    return GSAttr.get(this, 'mask');\r\n  }\r\n\r\n  get multipattern() {\r\n    return this.#pattern;\r\n    //return GSDOM.getValue(this, 'multipattern');\r\n  }\r\n\r\n  // enable password reveal\r\n  get reveal() {\r\n    return this.hasAttribute('reveal');\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 0);\r\n  }\r\n\r\n  set autocopy(value) {\r\n    GSAttr.toggle(this, 'autocopy', value);\r\n  }\r\n\r\n  set autofocus(value) {\r\n    GSAttr.toggle(this, 'autocopy', value);\r\n  }\r\n\r\n  set autoselect(value) {\r\n    GSAttr.toggle(this, 'autocopy', value);\r\n  }\r\n\r\n  set autoreport(value) {\r\n    GSAttr.toggle(this, 'autoreport', value);\r\n  }\r\n\r\n  set autovalidate(value) {\r\n    GSAttr.toggle(this, 'autovalidate', value);\r\n  }\r\n\r\n  set beep(value) {\r\n    GSAttr.toggle(this, 'beep', value);\r\n  }\r\n\r\n  set block(value) {\r\n    GSAttr.toggle(this, 'block', value);\r\n  }\r\n\r\n  set mask(value) {\r\n    GSAttr.set(this, 'mask', value);\r\n  }\r\n\r\n  set multipattern(value) {\r\n    let data = value;\r\n    // convert to array if not, and stringify if values are regex\r\n    if (GSUtil.isJsonType(value)) {\r\n      const tmp = (Array.isArray(value) ? value : [value]).map(v => v.source || v.toString?.() || v);\r\n      data = JSON.stringify(tmp);\r\n    }\r\n    GSAttr.set(this, 'multipattern', data);\r\n  }\r\n\r\n  /**\r\n   * Useds only on password type to reveal \r\n   * password with key shortcut ctrl-altt-shift\r\n   */\r\n  set reveal(value) {\r\n    if (this.type === 'password') GSAttr.toggle(this, 'reveal', value);\r\n  }\r\n\r\n  set timeout(value) {\r\n    GSAttr.setAsNum(this, 'timeout', value);\r\n  }\r\n\r\n  get required() {\r\n    return super.required;\r\n  }\r\n\r\n  set required(value) {\r\n    super.required = this.isCheckBox ? false : GSUtil.asBool(value);\r\n  }  \r\n\r\n  get raw() {\r\n    return super.value;\r\n  }\r\n\r\n  get value() {\r\n    return this.#maskController ? this.#maskController.value : super.value;\r\n  }\r\n\r\n  set value(val) {\r\n    super.value = this.mask === val ? '' : val;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  get isCheckBox() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get form() {\r\n    const me = this;\r\n    return super.form || me.owner?.form || me.closest?.('form');\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.setCustomValidity('');\r\n    GSDOM.reset(me);\r\n    return me.validate();\r\n  }\r\n\r\n  checkValidity() {\r\n    this.validate();\r\n    return super.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    this.validate();\r\n    return super.reportValidity();\r\n  }\r\n\r\n  validate(e) {\r\n    return this.#controllerHandler.validate(e);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n\r\n  firstUpdated(changed) {\r\n    const me = this;\r\n    if (me.autofocus) me.focus();\r\n    const data = me.formComponent?.data;\r\n    if (data) GSDOM.fromObject2Element(me, data);\r\n  }\r\n\r\n  willUpdate(changed, oldValue, newValue) {\r\n\r\n    const me = this;\r\n\r\n    if ('mask' === changed) {\r\n      me.#updateMask();\r\n    }\r\n\r\n    if ('multipattern' === changed) {\r\n      me.#updateMultipattern(newValue);\r\n    }\r\n\r\n    if ('list' === changed) {\r\n      me.#updateList();\r\n    }\r\n\r\n    if (changed === 'required' || changed === 'disabled') {\r\n      me.validate();\r\n    }\r\n  }\r\n\r\n  #preupdate(name) {\r\n    const me = this;\r\n    if (!me.#hasUpdated) {\r\n      me.#updateMask();\r\n      me.#updateMultipattern(me.pattern);\r\n      me.#updateList();\r\n      me.firstUpdated(name);\r\n      me.#controllerHandler?.hostUpdated(name);\r\n      me.#hasUpdated = true;\r\n      me.validate();\r\n    }\r\n  }\r\n\r\n  #updateMask() {\r\n    const me = this;\r\n    if (me.mask && me.type === 'text') {\r\n      me.placeholder = me.mask;\r\n      me.#maskController ??= new MaskController(me);\r\n    } else {\r\n      me.removeController(me.#maskController);\r\n      me.#maskController = null;\r\n    }\r\n  }\r\n\r\n  #updateMultipattern(newValue) {\r\n    const me = this;\r\n    if (GSUtil.isJsonString(newValue)) {\r\n      const tmp = GSUtil.toJson(newValue, []);\r\n      me.#pattern = (Array.isArray(tmp) ? tmp : []).map(v => new RegExp(v));\r\n    } else {\r\n      me.#pattern = undefined;\r\n    }\r\n\r\n    const isMulti = Array.isArray(me.#pattern) && me.#pattern.length > 0;\r\n    const isType = ['text', 'password'].includes(me.type);\r\n    if (isMulti && isType) {\r\n      me.#patternController ??= new MultipatternController(me);\r\n    } else {\r\n      me.removeController(me.#patternController);\r\n      me.#patternController = null;\r\n    }\r\n  }\r\n\r\n  #updateList() {\r\n    const me = this;\r\n    if (me.list) {\r\n      me.#listController ??= new ListController(me);\r\n    } else {\r\n      me.removeController(me.#listController);\r\n      me.#listController = null;\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { ControllerHandler } from \"./ControllerHandler.mjs\";\r\nimport { mixin } from \"./EventsMixin.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <textarea is=\"gs-ext-textarea\"></textarea>\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends { HTMLTextAreaElement }\r\n */\r\nexport class GSTextAreaElement extends HTMLTextAreaElement {\r\n\r\n    static {\r\n        mixin(GSTextAreaElement);\r\n        GSDOM.define('gs-ext-textarea', GSTextAreaElement, { extends: 'textarea' });\r\n        Object.seal(GSTextAreaElement);\r\n    }\r\n\r\n    #hasUpdated = false;\r\n    #controllerHandler = undefined;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#controllerHandler = new ControllerHandler(this);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.connectedCallback();\r\n        me.#preupdate();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.disconnectedCallback();\r\n        me.#controllerHandler = undefined;\r\n        GSEvents.detachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        me.#preupdate(name);\r\n        me.willUpdate(name, oldValue, newValue);\r\n        me.#controllerHandler?.hostUpdated(name);\r\n    }\r\n\r\n    #preupdate(name) {\r\n        const me = this;\r\n        if (!me.#hasUpdated) {\r\n            me.firstUpdated(name);\r\n            me.#controllerHandler?.hostUpdated(name);\r\n            me.#hasUpdated = true;\r\n        }\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        const me = this;\r\n        const data = me.formComponent?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        if (me.autofocus) me.focus();\r\n    }\r\n\r\n    willUpdate(changed, oldValue, newValue) {\r\n        if (changed === 'required' || changed === 'disabled') {\r\n            this.validate();\r\n        }\r\n    }\r\n\r\n    addController(controller) {\r\n        this.#controllerHandler?.addController(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllerHandler?.removeController(controller);\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.setCustomValidity('');\r\n        GSDOM.reset(me);\r\n        me.validate();\r\n    }\r\n\r\n    checkValidity() {\r\n        this.validate();\r\n        return super.checkValidity();\r\n    }\r\n\r\n    reportValidity() {\r\n        this.validate();\r\n        return super.reportValidity();\r\n    }\r\n\r\n    validate(e) {\r\n        return this.#controllerHandler.validate(e);\r\n    }\r\n\r\n    get owner() {\r\n        return this[Symbol.for('gs-onwner')]();\r\n    }\r\n\r\n    get parentComponent() {\r\n        return this[Symbol.for('gs-parent')]();\r\n    }\r\n\r\n    get hasUpdated() {\r\n        return this.#hasUpdated;\r\n    }\r\n\r\n    /**\r\n     * If set, autoamtically calls reportValidity\r\n     */\r\n    get autoreport() {\r\n        return this.hasAttribute('autoreport');\r\n    }\r\n\r\n    /**\r\n     * If set, automatically calls checkValidity\r\n     */\r\n    get autovalidate() {\r\n        return this.hasAttribute('autovalidate');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get block() {\r\n        return this.hasAttribute('block');\r\n    }\r\n\r\n    get beep() {\r\n        return this.hasAttribute('beep');\r\n    }\r\n\r\n    get timeout() {\r\n        return GSAttr.getAsNum(this, 'timeout', 0);\r\n    }\r\n\r\n    set autoreport(value) {\r\n        GSAttr.toggle(this, 'autoreport', value);\r\n    }\r\n\r\n    set autovalidate(value) {\r\n        GSAttr.toggle(this, 'autovalidate', value);\r\n    }\r\n\r\n    set autoselect(value) {\r\n        GSAttr.toggle(this, 'autoselect', value);\r\n    }\r\n\r\n    set autocopy(value) {\r\n        GSAttr.toggle(this, 'autocopy', value);\r\n    }\r\n\r\n    set block(val = false) {\r\n        GSAttr.toggle(this, 'block', val);\r\n    }\r\n\r\n    set beep(val = false) {\r\n        GSAttr.toggle(this, 'beep', val);\r\n    }\r\n\r\n    set timeout(val = 0) {\r\n        return GSAttr.setAsNum(this, 'timeout', val);\r\n    }\r\n\r\n    get form() {\r\n        const me = this;\r\n        return super.form || me.owner?.form || me.closest?.('form');\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        this.value = await GSLoader.loadSafe(url, 'GET', null, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { mixin } from \"./EventsMixin.mjs\";\r\nimport { GSLog } from \"../../base/GSLog.mjs\";\r\nimport { ControllerHandler } from \"./ControllerHandler.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport class GSSelectElement extends HTMLSelectElement {\r\n\r\n    static {\r\n        mixin(GSSelectElement);\r\n        GSDOM.define('gs-ext-select', GSSelectElement, { extends: 'select' });\r\n        Object.seal(GSSelectElement);\r\n    }\r\n\r\n    #data = [];\r\n\r\n    #controllerHandler = undefined;\r\n    #hasUpdated = false;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#controllerHandler = new ControllerHandler(this);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['url'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.connectedCallback();\r\n        me.#preupdate();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.disconnectedCallback();\r\n        me.#controllerHandler = undefined;\r\n        GSEvents.detachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        me.#preupdate(name);\r\n        me.willUpdate(name, oldValue, newValue);\r\n        me.#controllerHandler?.hostUpdated(name);\r\n    }\r\n\r\n    #preupdate(name) {\r\n        const me = this;\r\n        if (!me.#hasUpdated) {\r\n            me.firstUpdated(name);\r\n            me.#controllerHandler?.hostUpdated(name);\r\n            me.#hasUpdated = true;\r\n        }\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        const me = this;\r\n        const data = me.form?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        if (me.autofocus) me.focus();\r\n        me.on('reset', me.#onReset);\r\n    }\r\n\r\n    willUpdate(changed, oldValue, newValue) {\r\n\r\n        if (changed === 'url') this.load(newValue);\r\n        if (changed === 'required' || changed === 'disabled') {\r\n            this.validate();\r\n        }\r\n    }\r\n\r\n    addController(controller) {\r\n        this.#controllerHandler?.addController(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllerHandler?.removeController(controller);\r\n    }\r\n\r\n    get owner() {\r\n        return this[Symbol.for('gs-owner')]();\r\n    }\r\n\r\n    get parentComponent() {\r\n        return this[Symbol.for('gs-parent')]();\r\n    }    \r\n\r\n    get asJSON() {\r\n        return this.query('option').forEach(el => GSDOM.fromElement2Object(el, {}));\r\n    }\r\n\r\n    set asJSON(data) {\r\n        this.apply(data);\r\n    }\r\n\r\n    /**\r\n     * Storage records key to use to generate unique list\r\n     */\r\n    get key() {\r\n        return GSAttr.get(this, 'key', 0);\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage');\r\n    }\r\n\r\n    get form() {\r\n        const me = this;\r\n        return super.form || me.owner?.form || me.closest?.('form');\r\n    }\r\n\r\n    /**\r\n     * Support for multiple selections\r\n     */\r\n    get values() {\r\n        return Array.from(this.selectedOptions).map(el => el.value);\r\n    }\r\n\r\n    /**\r\n     * String array ov values to match for selection\r\n     */\r\n    set values(values) {\r\n        values ??= [];\r\n        if (GSUtil.isString(values)) values = values.split(',');\r\n        Array.from(el.options).forEach(el => el.selected = values.indexOf(el.value) > -1);\r\n    }\r\n\r\n    checkValidity() {\r\n        this.validate();\r\n        return super.checkValidity();\r\n    }\r\n\r\n    reportValidity() {\r\n        this.validate();\r\n        return super.reportValidity();\r\n    }\r\n\r\n    validate(e) {\r\n        return this.#controllerHandler.validate(e);\r\n    }\r\n\r\n    reset() {\r\n        GSDOM.resetSelect(this);\r\n    }\r\n        \r\n    /**\r\n     * For DataController read callback\r\n     * Convert record data to html JSON format \r\n     * @param {Array} data \r\n     */\r\n    onDataRead(data = []) {\r\n        const me = this;\r\n        const key = me.key;\r\n        data = Array.isArray(data) ? data : [data];\r\n        data = data.map(o => GSUtil.isString(o) ? o : o[key])\r\n            .filter(v => v)\r\n            .map(v => {return {text: v, value: v}});\r\n        me.apply(data);\r\n    }\r\n\r\n    /**\r\n     * Load html definition in JSON format\r\n     * @param {string} url \r\n     * @returns \r\n     */\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        try {\r\n            const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n            this.apply(data);\r\n        } catch (error) {\r\n            console.error('Failed to load data:', error);\r\n            GSLog.error(this, error);\r\n        }\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n    #onReset(e) {\r\n        this.reset();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListElement class\r\n * @module components/ext/GSDataListElement\r\n */\r\n\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSLog } from \"../../base/GSLog.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { mixin } from \"./EventsMixin.mjs\";\r\nimport { ControllerHandler } from \"./ControllerHandler.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport class GSDataListElement extends HTMLDataListElement {\r\n\r\n    static {\r\n        mixin(GSDataListElement);\r\n        GSDOM.define('gs-ext-datalist', GSDataListElement, { extends: 'datalist' });\r\n        Object.seal(GSDataListElement);\r\n    }\r\n\r\n    #data = [];\r\n\r\n    #controllerHandler = undefined;\r\n    #hasUpdated = false;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#controllerHandler = new ControllerHandler(this);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['url'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#controllerHandler?.connectedCallback();\r\n        me.#preupdate();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.disconnectedCallback();\r\n        me.#controllerHandler = undefined;\r\n        GSEvents.detachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        me.#preupdate(name);\r\n        me.willUpdate(name, oldValue, newValue);\r\n        me.#controllerHandler?.hostUpdated(name);\r\n    }\r\n\r\n    #preupdate(name) {\r\n        const me = this;\r\n        if (!me.#hasUpdated) {\r\n            me.firstUpdated(name);\r\n            me.#controllerHandler?.hostUpdated(name);\r\n            me.#hasUpdated = true;\r\n        }\r\n    }\r\n   \r\n    firstUpdated(changed) {\r\n        const me = this;\r\n        if (me.autofocus) me.focus();\r\n        const data = me.form?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n    }\r\n\r\n    willUpdate(changed, oldValue, newValue) {\r\n\r\n        if (changed === 'url') this.load(newValue);\r\n        if (changed === 'required' || changed === 'disabled') {\r\n            this.validate();\r\n        }\r\n    }\r\n\r\n    addController(controller) {\r\n        this.#controllerHandler?.addController(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllerHandler?.removeController(controller);\r\n    }\r\n    \r\n    get owner() {\r\n        return this[Symbol.for('gs-owner')]();\r\n    }\r\n\r\n    get parentComponent() {\r\n        return this[Symbol.for('gs-parent')]();\r\n    }    \r\n\r\n    get asJSON() {\r\n        return this.query('option').forEach(el => GSDOM.fromElement2Object(el, {}));\r\n    }\r\n\r\n    set asJSON(data) {\r\n        this.apply(data);\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage');\r\n    }\r\n\r\n    /**\r\n     * Storage records key to use to generate unique list\r\n     */\r\n    get key() {\r\n        return GSAttr.get(this, 'key', 0);\r\n    }   \r\n\r\n    /**\r\n     * For DataController read callback\r\n     * Convert record data to html JSON format \r\n     * \r\n     * @param {Array} data \r\n     */\r\n    onDataRead(data = []) {\r\n        const me = this;\r\n        const key = me.key;\r\n        data = Array.isArray(data) ? data : [data];\r\n        data = data.map(o => GSUtil.isString(o) ? o : o[key])\r\n            .filter(v => v)\r\n            .map(v => {return {value: v}});\r\n        me.apply(data);\r\n    }   \r\n\r\n    /**\r\n     * Load html definition in JSON format\r\n     * @param {string} url \r\n     * @returns \r\n     */\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        try {\r\n            const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n            this.apply(data);\r\n        } catch (error) {\r\n            console.error('Failed to load data:', error);\r\n            GSLog.error(this, error);\r\n        }\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = { value: o };\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        if (o.text) {\r\n            seg.push('>')\r\n            seg.push(o.text);\r\n            seg.push('</option>')\r\n        } else {\r\n            seg.push('>')\r\n        }\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { ControllerHandler } from \"./ControllerHandler.mjs\";\r\nimport { mixin } from './EventsMixin.mjs';\r\nimport { GSLog } from \"../../base/GSLog.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Extended native forn with additional functionality\r\n * \r\n * @class\r\n * @extends { HTMLFormElement }\r\n */\r\nexport class GSFormElement extends HTMLFormElement {\r\n\r\n    static {\r\n        mixin(GSFormElement);\r\n        GSDOM.define('gs-ext-form', GSFormElement, { extends: 'form' });\r\n        Object.seal(GSFormElement);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['disabled', 'url'];\r\n    }\r\n\r\n    #hasUpdated = false;\r\n    #controllerHandler = undefined;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#controllerHandler = new ControllerHandler(this);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.connectedCallback?.();\r\n        me.#preupdate();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.disconnectedCallback?.();\r\n        me.#controllerHandler = undefined;\r\n        GSEvents.detachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        me.#preupdate(name);\r\n        me.willUpdate(name, oldValue, newValue);\r\n        me.#controllerHandler?.hostUpdated?.(name);\r\n    }\r\n\r\n    #preupdate(name) {\r\n        const me = this;\r\n        if (!me.#hasUpdated) {\r\n            me.firstUpdated(name);\r\n            me.#controllerHandler?.hostUpdated?.(name);\r\n            me.#hasUpdated = true;\r\n        }\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        const me = this;\r\n        const data = me.formComponent?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        if (me.autofocus) me.focus();\r\n    }\r\n\r\n    willUpdate(changed, oldValue, newValue) {\r\n        const me = this;\r\n        if (changed === 'url') me.load(newValue);\r\n        if (changed === 'disabled') {\r\n            me.disable ? me.disable(true) : me.enable(true);\r\n        }\r\n    }\r\n\r\n    addController(controller) {\r\n        this.#controllerHandler?.addController(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllerHandler?.removeController(controller);\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        // reset non shadeowed\r\n        super.reset();\r\n        // reset shadowed\r\n        me.inputs\r\n            .filter(el => GSDOM.isShadowed(el))\r\n            .forEach(el => GSDOM.reset(el));\r\n        me.validate();\r\n    }\r\n\r\n    checkValidity() {\r\n        this.validate();\r\n        return super.checkValidity();\r\n    }\r\n\r\n    reportValidity() {\r\n        this.validate();\r\n        return super.reportValidity();\r\n    }\r\n\r\n    checkValidity() {\r\n        return super.checkValidity() &&\r\n            this.inputs\r\n                .filter(el => !el.disabled)\r\n                .every(el => el.checkValidity());\r\n    }\r\n\r\n    reportValidity() {\r\n        return super.reportValidity() &&\r\n            this.inputs\r\n                .filter(el => !el.disabled)\r\n                .every(el => el.reportValidity());\r\n    }\r\n    /**\r\n     * Validate each individual field, return true only if all fields are valid\r\n     * @returns \r\n     */\r\n    validate(e) {\r\n        return this.inputs\r\n            .filter(el => !el.disabled)\r\n            .every(c => c.validate ? c.validate(e) : true);\r\n    }\r\n\r\n    /**\r\n     * Find field by name\r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    field(name) {\r\n        return name && this.inputs.filter(f => f.name === name);\r\n    }\r\n\r\n    disable(all = false) {\r\n        GSDOM.disableInput(this, 'input, textarea, select', all, 'gs-ext-form');\r\n        const btn = this.submitButton;\r\n        if (btn) btn.disabled = true;\r\n    }\r\n\r\n    enable(all = false) {\r\n        GSDOM.enableInput(this, 'input, textarea, select', all, 'gs-ext-form');\r\n        const btn = this.submitButton;\r\n        if (btn) btn.disabled = false;\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        try {\r\n            const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n            this.onDataRead(data);\r\n        } catch (error) {\r\n            console.error('Failed to load data:', error);\r\n            GSLog.error(this, error);\r\n        }\r\n    }\r\n\r\n    #button(type) {\r\n        return this.queryAll(`button[type=\"${type}\"]`, true);\r\n    }\r\n\r\n    #childrens(shadow = false) {\r\n        return this.queryAll('input,select,output,textarea', shadow);\r\n    }\r\n\r\n    get owner() {\r\n        return this[Symbol.for('gs-owner')]();\r\n    }\r\n\r\n    get parentComponent() {\r\n        return this[Symbol.for('gs-parent')]();\r\n    }    \r\n\r\n    get hasUpdated() {\r\n        return this.#hasUpdated;\r\n    }\r\n\r\n    get asJSON() {\r\n        const data = {};\r\n        this.inputs.forEach(field => GSDOM.fromElement2Object(field, data));\r\n        return data;\r\n    }\r\n\r\n    set asJSON(data) {\r\n        const me = this;\r\n        me.inputs.forEach(field => GSDOM.fromObject2Element(field, data));\r\n        me.validate();\r\n    }\r\n        \r\n    /**\r\n     * If set, autoamtically calls reportValidity\r\n     */\r\n    get autoreport() {\r\n        return this.hasAttribute('autoreport');\r\n    }\r\n\r\n    /**\r\n     * If set, autoamtically calls checkValidity\r\n     */\r\n    get autovalidate() {\r\n        return this.hasAttribute('autovalidate');\r\n    }\r\n\r\n    get block() {\r\n        return this.hasAttribute('block');\r\n    }\r\n\r\n    get beep() {\r\n        return this.hasAttribute('beep');\r\n    }\r\n\r\n    get timeout() {\r\n        return GSAttr.getAsNum(this, 'timeout', 0);\r\n    }\r\n\r\n    set autoreport(value) {\r\n        GSAttr.toggle(this, 'autoreport', value);\r\n    }\r\n\r\n    set autovalidate(value) {\r\n        GSAttr.toggle(this, 'autovalidate', value);\r\n    }\r\n\r\n    set block(val = false) {\r\n        GSAttr.toggle(this, 'block', val);\r\n    }\r\n\r\n    set beep(val = false) {\r\n        GSAttr.toggle(this, 'beep', val);\r\n    }\r\n\r\n    set timeout(val = 0) {\r\n        return GSAttr.setAsNum(this, 'timeout', val);\r\n    }\r\n\r\n    get submitButton() {\r\n        return this.#button('submit');\r\n    }\r\n\r\n    get resetButton() {\r\n        return this.#button('reset');\r\n    }\r\n\r\n    /**\r\n     * Pickup all form elements, including custom ones\r\n     */\r\n    get elements() {\r\n        return super.elements;\r\n    }\r\n\r\n    /**\r\n     * Get all form attached native fields unwrapepd from GSWebComponents\r\n     */\r\n    get fields() {\r\n        return Array.from(this.elements).map(el => el.field || el);\r\n    }\r\n\r\n    /**\r\n     * Find all inputs by querying across inner shadow \r\n     */\r\n    get inputs() {\r\n        return this.#childrens(true);\r\n    }\r\n\r\n    get invalid() {\r\n        return this.inputs\r\n        .filter(el => !el.disabled)\r\n        .filter(el => !el.validity.valid);\r\n    }\r\n\r\n    get isValid() {\r\n        return this.invalid.length === 0;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined, repeat } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSBreadcrumbElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n    color: { ...color },\r\n    divider: { reflect: true },\r\n    spacing: { reflect: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.spacing = 1;\r\n    me.divider = 'chevron-right';\r\n    me.#updateChildren();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#updateChildren();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<nav part=\"base\" class=\"breadcrumb\" @click=\"${me.#onClick}\" dir=\"${ifDefined(me.direction)}\"><slot>\r\n      ${repeat(me.data || [], (item) => item, (item) => html`\r\n        <gs-breadcrumb-item  \r\n        href=\"${item.href}\"\r\n        color=\"${item.color}\"\r\n        .data=${item}     \r\n        .active=${item.active}\r\n        .divider=\"${item.divider || me.divider}\"\r\n        .spacing=\"${item.spacing || me.spacing}\">\r\n          ${item.$text}\r\n        </gs-breadcrumb-item>\r\n      `)}\r\n    </slot></nav>`;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #updateChildren() {\r\n    const me = this;\r\n    me.queryAll('gs-breadcrumb-item').forEach(el => {\r\n      el.divider = me.divider;\r\n      el.spacing = me.spacing;\r\n      el.color = me.color;\r\n    });\r\n  }\r\n\r\n  #onClick(e) {\r\n    const el = e.target.closest('gs-bradcrumb-item');\r\n    el?.handle(e);\r\n  } \r\n\r\n  static {\r\n    this.define('gs-breadcrumb');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSBreadcrumbItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    color: { ...color },\r\n    data: { state: true, type: Object },\r\n    active: { reflect: true, type: Boolean },\r\n    divider: { state: true, type: Boolean },\r\n    spacing: { state: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div part=\"base\" class=\"breadcrumb-item ${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <span part=\"prefix\"><slot name=\"prefix\"></slot></span>        \r\n        ${me.#label}\r\n        <span part=\"suffix\"><slot name=\"suffix\"></slot></span>\r\n        <span part=\"separator\"><slot name=\"separator\">${me.#separator}</slot></span>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #label() {\r\n    const me = this;\r\n    if (me.active) return html`<slot></slot>`;\r\n    me.data.url = me.data.url || me.href;\r\n    me.data.part = 'label';\r\n    return GSLinklement.generate(me.data, {})\r\n  }\r\n\r\n  get #separator() {\r\n    const me = this;\r\n    return me.nextElementSibling && me.divider ? html`<gs-icon size=\"7\" color=\"${me.color}\" css=\"mx-${me.spacing}\" name=\"${me.divider}\"></gs-icon>` : '';\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.query('a', true), e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-breadcrumb-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport { classMap, createRef, ref, css, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSAttachment } from './Attachment.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSFileBoxElement extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    static properties = {\r\n        cssList: { attribute: 'css-list' },\r\n        cssLabel: { attribute: 'css-label' },\r\n        cssInput: { attribute: 'css-input' },\r\n\r\n        multiple: { reflect: true, type: Boolean },\r\n        directory: { reflect: true, type: Boolean },\r\n        name: {},\r\n        title: {},\r\n        accept: {},\r\n        filter: {},\r\n        maxFileSize: { reflect: true, attribute: 'max-file-size', type: Number }, // New property\r\n    }\r\n\r\n    #listEl = createRef();\r\n    #fileEl = createRef();\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = GSFileBoxElement.CSS;\r\n        this.cssInput = 'd-none';\r\n        this.multiple = true;\r\n        this.title = GSFileBoxElement.TITLE;\r\n        this.filter = '^image\\/(gif|png|jpeg)$'\r\n        this.directory = false;\r\n        this.maxFileSize = 0; // Default to 0, meaning no limit\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div part=\"border\" class=\"${classMap(me.renderClass())}\"\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @click=\"${me.#onClick}\"\r\n            @dragenter=\"${me.#onDragenter}\"\r\n            @dragover=\"${me.#onDragenter}\"\r\n            @dragleave=\"${me.#onDragleave}\"\r\n            @drop=\"${me.#onDrop}\"\r\n            @paste=\"${me.#onPaste}\"\r\n            @change=\"${me.#onChange}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.translate(me.title)}</label>\r\n            <input ${ref(me.#fileEl)}  part=\"input\" \r\n                type=\"file\" accept=\"${me.accept}\" \r\n                class=\"${me.cssInput}\" \r\n                name=\"${me.name}\" \r\n                id=\"${me.name}\" \r\n                ${me.multiple ? \"multiple\" : \"\"} \r\n                ${me.directory ? \"directory webkitdirectory\" : \"\"}>\r\n            <pre ${ref(me.#listEl)} part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    get listEl() {\r\n        return this.#listEl.value;\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.#fileEl.value;\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        // Filter out files that exceed the maxFileSize\r\n        const validAttachments = me.maxFileSize > 0 \r\n            ? attachments.filter(a => a.file.size <= me.maxFileSize)\r\n            : attachments;\r\n\r\n        const accepted = me.emit('accept', { attachments: validAttachments }, true, false, true);\r\n        if (accepted && validAttachments.length) {\r\n            me.#accept(validAttachments);\r\n            me.emit('accepted', { attachments: validAttachments }, true);\r\n        }\r\n    }\r\n\r\n    static styles = css`\r\n        .dash {\r\n            border-style: var(--gs-fieldbox-border, dashed) !important;\r\n            border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n        }\r\n        input[type=file] {\r\n            color : var(--gs-fieldbox-color, transparent);\r\n        } \r\n        input[type=file]::file-selector-button {}             \r\n        input[type=file]::file-selector-button:hover {}`;\r\n\r\n    static {\r\n        this.define('gs-filebox');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/TimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSTimeFormat extends GSElement {\r\n\r\n    static properties = {\r\n        interval: {reflect:true, type:Number},\r\n        language: {reflect:true},\r\n    }\r\n\r\n    #id = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.interval = 1;\r\n        this.language = GSUtil.language;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const date = new Date();\r\n        return date.toLocaleTimeString(this.language);\r\n    }    \r\n\r\n    start() {\r\n        const me = this;\r\n        if (me.interval >0 && me.#id === 0) {\r\n            me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n        } else {\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n        this.#id = 0;\r\n    }\r\n    \r\n    #update() {\r\n       requestAnimationFrame(() => this.requestUpdate());\r\n    }\r\n\r\n    static {\r\n        this.define('gs-time-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/DateFormat\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDate } from '../../base/GSDate.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSDateFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        format: {},\r\n        language: {},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = navigator.language;\r\n        this.value = new Date();\r\n    }\r\n\r\n    renderUI() {\r\n        return this.result;\r\n    }    \r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.date;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.language, me.dataset).format(val);\r\n    }\r\n\r\n    get date() {\r\n        const me = this;\r\n        const o = Date.parse(me.value || new Date());\r\n        const date = new GSDate(o);\r\n        date.language = me.language;\r\n        return date;\r\n    }\r\n\r\n\r\n    static {\r\n        this.define('gs-date-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/YearFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSYearFormat extends GSElement {\r\n\r\n    static properties = {\r\n        offset: {type :Number},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n    }\r\n\r\n    renderUI() {\r\n        return this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        this.define('gs-year-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/CurrencyFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSCurrencyFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        currency: {},\r\n        language: {},\r\n    }\r\n\r\n    renderUI() {\r\n        return this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.language, me.#options).format(me.value);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-currency-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCacheStyles } from \"../../base/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepElement class\r\n * @module components/steps/GSStepElement\r\n */\r\n\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepElement extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-primary';\r\n    static COMPLETED = 'text-bg-secondary';\r\n\r\n    static ICON_CSS = 'border rounded-circle fs-1';\r\n    static TITLE_CSS = 'mb-0 fs-6 mt-3 fw-bold';\r\n\r\n    static properties = {\r\n        title: {},\r\n        icon: {},\r\n        color: {},\r\n        iconCSS: { attribute: 'icon-css' },\r\n        titleCSS: { attribute: 'title-css' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const clazz = GSStepElement;\r\n        this.icon = clazz.INACTIVE;\r\n        this.iconCSS = clazz.ICON_CSS;\r\n        this.titleCSS = clazz.TITLE_CSS;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"step d-block w-100 text-center mb-4\"  dir=\"${ifDefined(me.direction)}\">\r\n            <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color || GSStepElement.INACTIVE}\">\r\n                    ${me.#renderIcon()}\r\n                </div>\r\n            </div>\r\n            <div class=\"step-title ${me.titleCSS}\">${me.translate(me.title)}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    #renderIcon() {\r\n        return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-step');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepsElement class\r\n * @module components/steps/GSStepsElement\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSStepStyle } from \"./StepStyle.mjs\";\r\nimport GSStepElement from './Step.mjs';\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepsElement extends GSElement {\r\n\r\n    static CSS = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n\r\n    #index = -1;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldUpdate(changedProperties) { \r\n        return this.steps.length > 0;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\"><slot></slot></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        return this.mapCSS(GSStepsElement.CSS, super.renderClass());\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step', false, true);\r\n    }\r\n\r\n    get length() {\r\n        return this.steps.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length - 1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isLast) return false;\r\n        if (me.#index > - 1) me.current.color = GSStepElement.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStepElement.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStepElement.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStepElement.SELECTED;\r\n        });\r\n    }\r\n\r\n    static {\r\n        GSStepStyle.style;\r\n        this.define('gs-steps', GSStepsElement);\r\n    }\r\n\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSAttr } from '../../base/GSAttr.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\n\r\nexport class GSNotificationElement extends GSElement {\r\n\r\n    static TOP_START = \"position-fixed top-0 start-0\";\r\n    static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n    static TOP_END = \"position-fixed top-0 end-0\";\r\n\r\n    static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n    static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n    static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n    \r\n    static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n    static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n    static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n    static DEFAULT = GSNotificationElement.BOTTOM_END;\r\n\r\n    static properties = {\r\n        position: { reflect: true },\r\n        native: { reflect: true, type: Boolean }\r\n    };\r\n\r\n    #list = new Set();\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = 'p-3';\r\n        this.position = GSNotificationElement.DEFAULT;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n            class=\"toast-container z-10k ${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        return me.mapCSS(me.#positionCSS, super.renderClass());\r\n    }    \r\n\r\n    get #positionCSS() {\r\n        const clazz = GSNotificationElement;\r\n        const val = this.position || clazz.DEFAULT;\r\n        return val.indexOf('_') > 0 && clazz[val] ? clazz[val] : val;\r\n    }\r\n\r\n    clear() {\r\n        this.queryAll('gs-toast').forEach(el => el.dismiss());\r\n    }\r\n\r\n    info(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n    }\r\n\r\n    success(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n    }\r\n\r\n    warn(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n    }\r\n\r\n    danger(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n    }\r\n\r\n    primary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n    }\r\n\r\n    secondary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n    }\r\n\r\n    dark(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n    }\r\n\r\n    light(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n    }\r\n\r\n    /**\r\n     * Main function to show notification. \r\n     * It has support for Bootstrap based and web based notifications.\r\n     * \r\n     * @async\r\n     * @param {String} title Notification title\r\n     * @param {String} message Notification message\r\n     * @param {String} css CSS styling (web only)\r\n     * @param {Boolean} closable Can user close it (web only)\r\n     * @param {Number} timeout Timeout after which to close notification  (default 2 sec)\r\n     * @param {Number} delay Timeout after which to show notification (default 1 sec)\r\n     * @param {Object} options Options for native Notification\r\n     * @returns {Promise<Notification|GSToast>}\r\n     */\r\n    async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n        if (!message) return;\r\n        const me = this;\r\n        if (me.native) {\r\n            let sts = await GSNotificationElement.requestPermission();\r\n            if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n            if (sts) return sts;\r\n        }\r\n        return me.#showWeb(title, message, css, closable, timeout, delay);\r\n    }\r\n\r\n    #showWeb(title, message, css, closable, timeout, delay) {\r\n        const me = this;\r\n        const tpl = `<gs-toast css=\"${css}\"  opened ${closable ? 'closable' : ''} timeout=\"${timeout}\"  delay=\"${delay}\" message=\"${message}\" title=\"${title}\" language=\"${me.language}\" ></gs-toast>`;\r\n        const el = GSDOM.parse(tpl, true);\r\n        requestAnimationFrame(async () => {\r\n            await me.#delay(delay);\r\n            const toast = me.#dialogToast;\r\n            if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n            toast.appendChild(el);\r\n        });\r\n        return el;\r\n    }\r\n\r\n    async #showNative(title, message, timeout, delay, options = {}) {\r\n        const me = this;\r\n        await me.#delay(delay);\r\n        options.body = options.body || message;\r\n        const notification = new Notification(title, options);\r\n        me.#list.add(notification);\r\n        const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n        notification.addEventListener('close', callback);\r\n        if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n        return notification;\r\n    }\r\n\r\n    get #dialogToast() {\r\n        const dlg = customElements.get('gs-dialog')?.top;\r\n        return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n    }\r\n\r\n    async #delay(delay = 0) {\r\n        if (GSUtil.isNumber(delay) && delay > 0) await GSUtil.timeout(delay * 1000);\r\n    }\r\n\r\n    #clearNative() {\r\n        const me = this;\r\n        me.notification.close();\r\n        me.owner.#list.delete(me.notification);\r\n        if (me.notification.iid) clearTimeout(me.notification.iid);\r\n    }\r\n\r\n    /**\r\n     * Clear all triggered notifications\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n        me.#list.forEach(nn => nn.close());\r\n        me.#list.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is supported\r\n     * @returns {Boolean} \r\n     */\r\n    static get isNativeSupported() {\r\n        return \"Notification\" in self;\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is allowed\r\n     * @returns {Boolean} \r\n     */\r\n    static get isGranted() {\r\n        return Notification.permission === \"granted\";\r\n    }\r\n\r\n    /**\r\n     * Request useage for browser native notification\r\n     * \r\n     * @async\r\n     * @returns {Promise<boolean>} Return granted status\r\n     */\r\n    static async requestPermission() {\r\n        const clazz = GSNotificationElement;\r\n        if (!clazz.isNativeSupported) return false;\r\n        if (!clazz.isGranted) await Notification.requestPermission();\r\n        return clazz.isGranted;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-notification');\r\n    }\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNotificationElement } from './Notification.mjs';\r\n\r\nexport class GSToastElement extends GSElement {\r\n\r\n    static properties = {\r\n        closable: { reflect: true, type: Boolean },\r\n        opened: { reflect: true, type: Boolean },\r\n        message: { reflect: true },\r\n        title: { reflect: true },\r\n        delay: { reflect: true, type: Number },\r\n        timeout: { reflect: true, type: Number }\r\n    }\r\n\r\n    #pending = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.timeout = 2;\r\n        me.delay = 2;\r\n        me.auto = true; \r\n    }\r\n\r\n    shouldUpdate(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.delay > 0 && me.opened && visibilityChange) {\r\n            me.#pending = true;\r\n            me.#pendingUpdate();\r\n        }\r\n        return me.#validParent && (!me.#pending);\r\n    }\r\n\r\n    #isVisibilityChanged(changedProperties) {\r\n        return changedProperties.has('opened');\r\n    }\r\n\r\n    async #pendingUpdate() {\r\n        const me = this;\r\n        await GSUtil.timeout(me.delay * 1000);\r\n        me.#pending = false;\r\n        me.requestUpdate();\r\n    }\r\n\r\n    async updated(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.timeout > 0 && me.opened) {\r\n            await GSUtil.timeout(me.timeout * 1000);\r\n            me.opened = false;\r\n        } else if (visibilityChange && !me.opened) { \r\n            me.remove();\r\n        };\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return me.title ? me.#renderWithHeader() : me.#renderSimple();\r\n    }\r\n\r\n    #renderWithHeader() {\r\n        const me = this;\r\n        return html`\r\n        <div dir=\"${ifDefined(me.direction)}\"\r\n            class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n            <div class=\"toast-header\">\r\n                ${me.translate(me.title)}\r\n                <slot name=\"header\"></slot>\r\n                ${me.closable ? me.#button : ''}\r\n            </div>\r\n            <div class=\"toast-body\">\r\n                ${me.translate(me.message)}\r\n                <slot name=\"body\"></slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    #renderSimple() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.translate(me.message)}\r\n              <slot name=\"body\"></slot>\r\n              </div>\r\n              ${me.closable ? me.#button : ''}\r\n          </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': me.opened,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    dismiss() {\r\n        this.opened = false;\r\n    }\r\n\r\n    get #button() {\r\n        const me = this;\r\n        return html`<button type=\"button\" class=\"btn-close me-2 m-auto\" @click=\"${me.dismiss}\"></button>`;\r\n    }\r\n\r\n    get #validParent() {\r\n        const isToast = GSDOM.hasClass(this.parentElement, 'toast-container');\r\n        const isNotify = this.parentElement instanceof GSNotificationElement;\r\n        return isToast || isNotify;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-toast');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller managing data tree navigation.\r\n * Controller is added to every gs-tree-node and \r\n * reacts on Tree node changes to update UI\r\n */\r\nexport class AbstractTreeController {\r\n\r\n    #host;\r\n    #node;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        host.addController(me);\r\n    }\r\n    \r\n    hostConnected() {\r\n        const me = this;\r\n        me.#node = me.#host.node;\r\n        me.#addNodeController(me);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        const me = this;\r\n        me.#removeNodeController(me);\r\n        me.#host.removeController(me);\r\n    }\r\n\r\n    // before rendering\r\n    hostUpdate() {\r\n        const me = this;\r\n        const oldNode = me.#node;\r\n        me.#node = me.#host.node;\r\n        if (oldNode != me.#node) {\r\n            me.#removeNodeController(me);\r\n            me.#addNodeController(me);\r\n        }\r\n    }\r\n\r\n    // link Tree node callbacks with controller and component\r\n    #addNodeController(controller) {\r\n        this.#host.node?.addController?.(controller);\r\n    }\r\n\r\n    // unlink Tree node callbacks with controller and component\r\n    #removeNodeController(controller) {\r\n        this.#node?.removeController?.(controller);\r\n    }\r\n\r\n    host(node) {\r\n        return node[Symbol.for('gs-element')] || this.#host;\r\n    }\r\n\r\n    match(node) {\r\n        const host = this.host(node);\r\n        return host?.node === node;\r\n    }\r\n\r\n    get store() {\r\n        return this.#host.dataController?.store;\r\n    }\r\n\r\n    requestUpdate(node) {\r\n        if (this.match(node)) this.host(node).requestUpdate();\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { AbstractTreeController } from './AbstractTreeController.mjs';\r\n\r\n/**\r\n * Controller managing data TreeNode callbacks to reflect UI.\r\n */\r\nexport class TreeController extends AbstractTreeController {\r\n\r\n    constructor(host) {\r\n        super(host);\r\n    }\r\n\r\n    #toggleState(node, state = false) {\r\n        const el = this.host(node);\r\n        if (el) el.loading = state;\r\n    }\r\n\r\n    // Tree controller callbacks\r\n    onLoad(node) {\r\n        this.#toggleState(node, true);\r\n    }\r\n\r\n    onRefresh(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onAppend(node, addedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onInsert(node, insertedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onExpand(node) {\r\n        const store = this.store;\r\n        if (store) {\r\n            store.onExpand(node);\r\n        } else {\r\n            this.requestUpdate(node);\r\n        }\r\n    }\r\n\r\n    onCollapse(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onFocusChanged(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onSelectionChanged(node, selectedNode) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onRemove(node) {\r\n        if (this.match(node)) this.host(node).remove();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../../lib.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSTreeItemElement extends GSElement {\r\n\r\n  /*\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n    */\r\n\r\n  static properties = {\r\n    loading: { state: true },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('node')) this.node[Symbol.for('gs-element')] = this;\r\n  }\r\n\r\n  updated() {\r\n    if (this.focused) this.#link?.focus();\r\n    this.dataset.visible = this.visible;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const opt = me.value || {};\r\n    opt.tooltip = me.translate(opt.tooltip)\r\n    opt.title = me.translate(opt.title)\r\n    const before = me.loading ? me.#renderSpinner(node.level) : me.#renderIcon(node.level);\r\n    return GSLinklement.generate(opt, me.renderClass(), before);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const opt = {\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      'user-select-none  ': true,\r\n      'border-0': me.#border ? false : true,\r\n      'gs-hide': !me.visible\r\n    };\r\n    return me.mapCSS(me.#cssFocus, me.mapCSS(me.#cssSelected, opt, me.selected && !me.multiselect), me.focused);\r\n  }\r\n\r\n  /**\r\n   * Toggle folder\r\n   */\r\n  toggle() {\r\n    this.opened ? this.close() : this.open();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open() {\r\n    this.#status(true);\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   */\r\n  close() {\r\n    this.#status(false);\r\n  }\r\n\r\n  /**\r\n   * Toggle selection state\r\n   */\r\n  toggleSelection() {\r\n    this.select(!this.selected);\r\n  }\r\n\r\n  focus(val = true) {\r\n    if (val) super.focus();\r\n    this.focused = val == true;\r\n  }\r\n\r\n  select(val = true) {\r\n    this.selected = val == true;\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.#link, e);\r\n    /*\r\n    const me = this;\r\n    const isIcon = e.target.tagName === 'GS-ICON';\r\n    if (me.multiselect && isIcon) {\r\n      me.toggleSelection();\r\n    } else {\r\n      GSAttributeHandler.process(me.#link, e);\r\n    }\r\n    */\r\n  }\r\n\r\n  get #link() {\r\n    return this.query('a');\r\n  }\r\n\r\n  get isLeaf() {\r\n    return this.node?.isLeaf;\r\n  }\r\n\r\n  get isFolder() {\r\n    return !this.isLeaf;\r\n  }\r\n\r\n  get key() {\r\n    return this.node?.key;\r\n  }\r\n\r\n  get value() {\r\n    return this.node?.value || {};\r\n  }\r\n\r\n  get level() {\r\n    return this.node?.level || -1;\r\n  }\r\n\r\n  get focused() {\r\n    return this.node?.focused;\r\n  }\r\n\r\n  get visible() {\r\n    const parent = this.parent;\r\n    return parent?.opened || parent?.level === -1;\r\n  }\r\n\r\n  get parent() {\r\n    return this.node?.parent;\r\n  }\r\n\r\n  get parentItem() {\r\n    const item = this.parent?.[Symbol.for('gs-element')];\r\n    return item instanceof GSTreeItemElement ? item : undefined;\r\n  }\r\n\r\n  set focused(val) {\r\n    val = val === true;\r\n    this.node.focused = val;\r\n  }\r\n\r\n  get selected() {\r\n    return this.node?.selected;\r\n  }\r\n\r\n  set selected(val) {\r\n    val = val === true;\r\n    const me = this;\r\n    if (me.isFolder && me.owner.leaf) val = false;\r\n\r\n    if (me.multiselect) {\r\n      if (val) {\r\n        me.node.selectAll();\r\n      } else {\r\n        me.node.deselectAll();\r\n      }\r\n    } else {\r\n      me.node.selected = val;\r\n    }\r\n  }\r\n\r\n  get opened() {\r\n    return this.node?.opened;\r\n  }\r\n\r\n  set opened(val) {\r\n    this.#status(val === true);\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tree');\r\n  }\r\n\r\n  get multiselect() {\r\n    return this.owner.multiselect;\r\n  }\r\n\r\n  get #cssFocus() { return this.owner.cssFocus || 'focus-ring'; }\r\n  get #cssSelected() { return this.owner.cssSelected || 'active'; }\r\n  get #cssCheck() { return this.owner.cssCheck || ''; }\r\n  get #checkColor() { return this.owner.checkColor || 'secondary'; }\r\n  get #checkColorSelected() { return this.owner.checkColorSelected || 'primary'; }\r\n\r\n  get #border() {\r\n    return this.value?.border === true || this.owner.border === true;\r\n  }\r\n\r\n  get #icon() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const data = me.value;\r\n    const ui = me.owner;\r\n    let itemIco = data.icon || ui.itemIcon;\r\n    if (node.isFolder) itemIco = node.opened ? (data.openIcon || ui.openIcon) : (data.closeIcon || ui.closeIcon);\r\n    return itemIco;\r\n  }\r\n\r\n  #renderIndent(level) {\r\n    return html`<gs-indent size=\"${level}\"></gs-indent>`;\r\n  }\r\n\r\n  #renderSpinner(level) {\r\n    return html`${this.#renderIndent(level)}<gs-spinner small></gs-spinner>`;\r\n  }\r\n\r\n  #renderIcon(level) {\r\n    return html`${this.#renderIndent(level)}${this.#renderMulti()}<gs-icon size=\"5\" name=\"${this.#icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderMulti() {\r\n    const me = this;\r\n    if (!me.multiselect) return '';\r\n    const color = me.selected ? me.#checkColorSelected : me.#checkColor;\r\n    const icon = me.node.isPartialySelected ? 'dash-square-fill' : me.selected ? 'check-square-fill' : 'square';\r\n    return html`<gs-icon size=\"6\" data-type=\"state\" \r\n                css=\"me-1 text-${color} ${me.#cssCheck}\"\r\n                name=\"${icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #status(val = false) {\r\n    const me = this;\r\n    if (me.node?.isFolder) {\r\n      me.node.opened = val;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, css, createRef, ref, repeat, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { TreeController } from './controllers/TreeController.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSTreeElement extends GSElement {\r\n\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n\r\n  static shared = {\r\n    itemIcon: { attribute: 'icon-item' },\r\n    closeIcon: { attribute: 'icon-close' },\r\n    openIcon: { attribute: 'icon-open' },\r\n    cssCheck: { attribute: 'css-check' },\r\n    cssFocus: { attribute: 'css-focus' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    checkColor: { attribute: 'check-color', ...color },\r\n    checkColorSelected: { attribute: 'check-color-selected', ...color },\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode },\r\n    border: { type: Boolean, reflect: true },\r\n    guide: { type: Boolean, reflect: true },\r\n    leaf: { type: Boolean, reflect: true },\r\n    multiselect: { type: Boolean, reflect: true },\r\n    circular: { type: Boolean, reflect: true },\r\n    ...GSTreeElement.shared\r\n  }\r\n\r\n  // GS-ITEM attributes mapping\r\n  static options = {\r\n    ...GSTreeElement.shared,\r\n    css: {},\r\n    icon: {},\r\n    color: {},\r\n    title: {},\r\n    tooltip: {},\r\n    opened: { type: Boolean },\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  #queued = false;\r\n  #listRef = createRef();\r\n\r\n  #controller = null;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.leaf = false;\r\n    me.multiselect = false;\r\n    me.data = GSDOM.toJson(me, true, true).items;\r\n    me.node = new TreeNode(null, { '#tagName': this.tagName }, null, -1);\r\n    me.itemIcon = 'file-earmark';\r\n    me.closeIcon = 'folder'; // caret-right; chevron-right\r\n    me.openIcon = 'folder2-open'; // caret-down; chevron-down\r\n    me.cssSelected = 'active'; // fw-bold\r\n    me.cssFocus = 'focus-ring';\r\n    me.node[Symbol.for('gs-element')] = me;\r\n    me.#controller = new TreeController(me);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n          class=\"treeview ${classMap(me.renderClass())}\"          \r\n          @click=\"${me.#onClick}\"\r\n          @keydown=\"${me.#onKeyDown}\"\r\n          @keyup=\"${me.#onKeyUp}\">\r\n          <div class=\"list-group\" ${ref(me.#listRef)}>\r\n          ${repeat(me.node.walk(me.node, false, false), (node) => node.key, (node) => html`\r\n            <gs-tree-item .node=\"${node}\"></gs-tree-item>\r\n          `)}\r\n          </div>    \r\n        </div>`;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data') && me.data && !me.#queued) {\r\n      me.#queued = true;\r\n      queueMicrotask(() => {\r\n        me.node.clear();\r\n        me.node.fromJSON(me.data);\r\n        me.#queued = false;\r\n        me.requestUpdate();\r\n      });\r\n    }\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('multiselect') && !this.multiselect) this.node?.deselectAll();\r\n    this.node.multi = this.multiselect;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    if (data instanceof TreeNode) {\r\n      if (data.root !== this.node) this.node = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n\r\n  next(expand = false) {\r\n    const me = this;\r\n    let item = me.nextItem;\r\n    if (!item & me.circular) item = me.#first;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (expand && me.focused?.isFolder) me.focused.open();\r\n    }\r\n    return me.focused;\r\n  }\r\n\r\n  previous(collapse = false) {\r\n    const me = this;\r\n    let item = me.previousItem;\r\n    if (!item & me.circular) item = me.#last;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (item.isFolder && collapse) item.close();\r\n    }\r\n    return me.focused;\r\n\r\n  }\r\n\r\n  expandAll() {\r\n    this.node?.expandAll();\r\n  }\r\n\r\n  collapseAll() {\r\n    this.node?.collapseAll();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open(path) {\r\n    const me = this;\r\n    me.focused?.open();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   * TODO - path navigation\r\n   */\r\n  close(path) {\r\n    const me = this;\r\n    me.focused?.close();\r\n  }\r\n\r\n  clear() {\r\n    this.node?.clear();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  reload() {\r\n    this.clear();\r\n    this.dataController?.read();\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host(this.node.selectedNodes());\r\n  }\r\n\r\n  get focused() {\r\n    return this.#host(this.node.focusedNode());\r\n  }\r\n\r\n  /**\r\n   * Previous visible ge-node-item\r\n   */\r\n  get previousItem() {\r\n    return this.focused?.node.find(n => n?.visible, true, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  /**\r\n   * Next visible ge-node-item\r\n   */\r\n  get nextItem() {\r\n    return this.focused?.node.find(n => n?.visible, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  get #list() {\r\n    return this.#listRef.value;\r\n  }\r\n\r\n  get #first() {\r\n    return this.#list.firstElementChild;\r\n  }\r\n\r\n  get #last() {\r\n    return this.#list.lastElementChild;\r\n  }\r\n\r\n  #host(node) {\r\n    if (Array.isArray(node)) {\r\n      return node.map(n =>n[Symbol.for('gs-element')]).filter( n=> n);\r\n    }\r\n    return node?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  #onClick(e) {\r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const isIcon = icon?.dataset.type === 'state';\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!el.node) return;\r\n\r\n    const me = this;\r\n\r\n    if (me.multiselect) {\r\n      if (isIcon) el.toggleSelection();\r\n    } else {\r\n      el.select(true);\r\n    }\r\n\r\n    const expandable = (me.multiselect && !isIcon) || (!me.multiselect);\r\n    if (el.isFolder && expandable) el.toggle();\r\n\r\n    el.focus();\r\n    el.handle(e);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    const me = this;\r\n    const el = me.focused;\r\n    if (!el) return;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n        me.next();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (el.isFolder) {\r\n          if (el.opened) {\r\n            me.close();\r\n          } else {\r\n            (el.parentItem || el)?.focus();\r\n          }\r\n        } else {\r\n          me.previous();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if (el.isFolder && !el.opened) {\r\n          me.open();\r\n        } else {\r\n          me.next();\r\n        }\r\n        break;\r\n      case 'Enter':\r\n          if (el.isFolder) {\r\n            el.toggle();\r\n          }        \r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!(el?.node)) return;\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        el.handle(e);\r\n        break;\r\n      case 'Tab':\r\n        el.focus();\r\n        break;\r\n      case 'Space':\r\n        el.select(this.multiselect ? !el.selected : true);\r\n        el.focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading ServiceWorkkerElement class\r\n * @module components/ServiceWorkkerElement\r\n */\r\n\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\n/**\r\n * An easy way to register a service worker in the browser.\r\n * @class\r\n * @extends { GSlement }\r\n */\r\nexport class ServiceWorkkerElement extends GSElement {\r\n\r\n    static properties = {\r\n        src: {},\r\n        scope: {},\r\n        module: { type: Boolean, default: false },\r\n        trace: { type: Boolean, reflect: true, default: false },\r\n        disabled: { type: Boolean, reflect: true, default: false }\r\n    }\r\n\r\n    #registration = false\r\n    #workerMessage = null;\r\n    #messageChannel = null;\r\n\r\n    #nocache = false;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#workerMessage = me.#onWorkerMessage.bind(me);\r\n        me.#load();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#unload();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('trace')) {\r\n            me.#ServiceWorkerTraceUpdate();\r\n        }\r\n        if (changed.has('disabled')) {\r\n            me.disabled ? me.#unload() : me.#load();\r\n        }\r\n        super.willUpdate(changed);\r\n    }\r\n\r\n    /**\r\n     * Returns true if the service worker is available in the browser and the src is a valid URL.\r\n     */\r\n    get available() {\r\n        const me = this;\r\n        return 'serviceWorker' in navigator && me.src && GSUtil.isURL(me.src);\r\n    }\r\n\r\n    /**\r\n     * Returns the service worker registration object.\r\n     */\r\n    get registration() {\r\n        return this.#registration;\r\n    }\r\n\r\n    /**\r\n     * Request the service worker to clear its cache.\r\n     * @returns \r\n     */\r\n    clearCache() {\r\n        return this.postMessage(\"CLEAR_CACHE\");\r\n    }\r\n\r\n    /**\r\n     * Request the service worker to pupdate preloads\r\n     * @returns \r\n     */\r\n    refresh() {\r\n        return this.postMessage(\"REFRESH_CACHE\");\r\n    }\r\n\r\n    /**\r\n     * Send a message to the service worker.\r\n     * @param {*} message The message to send to the service worker.\r\n     * @returns {boolean} Returns true if the message was sent, false if the service worker is not active or not registered.\r\n     */\r\n    postMessage(message) {\r\n        const me = this;\r\n        const sts = GSUtil.nonNull(message) && me.isLoaded;\r\n        if (sts) {\r\n            if (me.#messageChannel) {\r\n                me.#messageChannel.port1.postMessage(message);\r\n            } else {\r\n                me.#registration?.active?.postMessage(message);\r\n            }\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Method to handle messages from the service worker.\r\n     * Override this method to handle messages from the service worker.\r\n     * The default implementation does nothing.\r\n     * @param {Event} event \r\n     * @returns {boolean} Return false to stop the event propagation, true to continue.\r\n     */\r\n    onMessage(event) {\r\n        me.#trace('ServiceWorker message received:', event);\r\n        return true;\r\n    }\r\n\r\n    #onWorkerMessage = (event) => {\r\n        const me = this;\r\n        if (event.data) {\r\n            if (me.onMessage(event)) {\r\n                me.emit('message', event.data, true, true, true);\r\n            }\r\n        } else {\r\n            me.#trace('ServiceWorker message is empty:', event);\r\n        }\r\n    }\r\n\r\n    #initChannel() {\r\n        const me = this;\r\n        if (me.#registration?.active) {\r\n            me.#messageChannel = new MessageChannel();\r\n            me.#messageChannel.port1.onmessage = me.#workerMessage;\r\n            me.#ServiceWorkerTraceUpdate();\r\n            me.#registration.active.postMessage('INIT_PORT', [me.#messageChannel.port2]);\r\n            //me.emit('activated', isActive, true, true, true);\r\n        }\r\n    }\r\n\r\n    #ServiceWorkerTraceUpdate() {\r\n        const me = this;\r\n        me.#registration?.active?.postMessage(me.trace ? 'TRACE_ON' : 'TRACE_OFF');\r\n    }\r\n\r\n    // Show a notification to the user that a new version of the app is available\r\n    async #invokeServiceWorkerUpdateFlow(registration) {\r\n        return registration?.waiting?.postMessage('NOTIFICATION_WAITING');\r\n    }\r\n\r\n    // detect Service Worker update available and wait for it to become installed\r\n    #monitorServiceWorkerUpdate(registration) {\r\n        const me = this;\r\n        registration.addEventListener('updatefound', () => {\r\n            // wait until the new Service worker is actually installed (ready to take over)\r\n            registration.installing?.addEventListener('statechange', () => {\r\n                if (registration.waiting) {\r\n                    // if there's an existing controller (previous Service Worker), show the prompt\r\n                    if (navigator.serviceWorker.controller) {\r\n                        me.#invokeServiceWorkerUpdateFlow(registration);\r\n                    } else {\r\n                        // otherwise it's the first install, nothing to do\r\n                        me.#trace('Service Worker initialized for the first time');\r\n                    }\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    // detect controller change and refresh the page\r\n    #monitorController() {\r\n        let refreshing = false;\r\n        navigator.serviceWorker.addEventListener('controllerchange', () => {\r\n            if (!refreshing) {\r\n                window.location.reload();\r\n                refreshing = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    async #unload() {\r\n        const me = this;\r\n        GSLoader.NO_CACHE = me.#nocache;\r\n        if (me.disabled) {\r\n            await me.#registration?.unregister();\r\n        }\r\n        me.#messageChannel?.port1.close();\r\n        me.#messageChannel?.port2.close();\r\n        me.#messageChannel = null;\r\n        me.#registration = null;\r\n    }\r\n\r\n    // Load the service worker\r\n    async #load() {\r\n        const me = this;\r\n        if (me.disabled) return;\r\n        me.#nocache = GSLoader.NO_CACHE;\r\n        GSLoader.NO_CACHE = false;\r\n\r\n        if (!me.available) {\r\n            console.warn('Service Worker is not available in this browser or src is not valid.');\r\n            return;\r\n        }        \r\n        try {\r\n            const opt = me.scope ? { scope: me.scope } : {};\r\n            if (me.module) opt.type = 'module';\r\n            me.#registration = await navigator.serviceWorker.register(me.src, opt);\r\n            me.#trace('ServiceWorker registration started:', me.#registration);\r\n\r\n            me.#monitorController();\r\n            me.#invokeServiceWorkerUpdateFlow(me.#registration);\r\n            me.#monitorServiceWorkerUpdate(me.#registration);\r\n            me.#initChannel(me.#registration);\r\n\r\n            me.#trace('ServiceWorker registration successful with scope: ', me.#registration.scope);\r\n\r\n        } catch (error) {\r\n            me.#registration = false;\r\n            console.error('Service Worker registration failed:', error);\r\n        }\r\n        me.emit('loaded', me.isLoaded, true, true, true);\r\n    }\r\n\r\n    #trace(message, data = '') {\r\n        if (this.trace) {\r\n            console.log(message, data);\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-service-worker');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\n\r\nexport class GSChartElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/bootstrap-lit';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        config: {},\r\n        storage: {},\r\n        height: { type: Number },\r\n        width: { type: Number },\r\n        data: { type: Array },\r\n        options: { type: Object },\r\n    }\r\n\r\n    #canvasRef = createRef();\r\n    #chart = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.height = 0;\r\n        this.width = 0;\r\n        GSChartElement.#init();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#waitInit();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    shouldUpdate(changed) {\r\n        return GSChartElement.#isChart;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#render();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        const me = this;\r\n        if (changed.has('url') || changed.has('config')) me.#render();\r\n        if (changed.has('data') || changed.has('options')) me.#renderData(me.data, me.options);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<canvas ${ref(me.#canvasRef)} \r\n                class=\"${classMap(me.renderClass())}\"\r\n                width=\"${ifDefined(me.width > 0 ? me.width : false)}\" \r\n                height=\"${ifDefined(me.height > 0 ? me.height : false)}\" >\r\n            </canvas>`;\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.#canvasRef.value;\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    refresh() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    updateChart(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n        const me = this;\r\n        try {\r\n            const options = await GSLoader.loadSafe(me.config, 'GET', null, true, {});\r\n            const data = await GSLoader.loadSafe(me.url, 'GET', null, true, []);\r\n            me.data = data;\r\n            me.options = options;\r\n        } catch (error) {\r\n            GSLog.error(null, error);\r\n        }\r\n    }\r\n\r\n    #renderData(data, options) {\r\n        const me = this;\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChartElement.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => o.data = sets.length === 1 ? data : data[i] || []);\r\n\r\n        if (me.#chart) return me.updateChart(opt);\r\n\r\n        const ctx = me.canvas?.getContext('2d');\r\n        if (ctx) {\r\n            me.#chart = new GSChartElement.#Chart(ctx, opt);\r\n        } else {\r\n            GSLog.error(null, 'Failed to get canvas context');\r\n        }\r\n    }\r\n\r\n    async #waitInit() {\r\n        if (!GSChartElement.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        this.requestUpdate();\r\n    }\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    static async #init() {\r\n        const me = GSChartElement;\r\n        if (me.URL_LIB === false) return;\r\n        if (me.#isChart || me.#initializing) return;\r\n        me.#initializing = true;\r\n        try {\r\n            const origin = GSChartElement.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);\r\n            me.#Chart = Chart;\r\n            me.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            me.#initializing = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert DOM tree into a JSON structure\r\n     * \r\n     * @param {HTMLElement} obj HTML element instance to convert\r\n     * @param {string} name DOM attribute name for object key\r\n     * @param {string} value DOM attribute name for object value\r\n     * @param {string} type DOM attribute name for object type\r\n     * @returns {object}\r\n     */\r\n    static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n        if (!(el instanceof HTMLElement)) return {};\r\n\r\n        const nameV = el.getAttribute(name);\r\n        const valV = el.getAttribute(value);\r\n        const typeV = el.getAttribute(type);\r\n\r\n        let obj = null;\r\n\r\n        switch (typeV) {\r\n            case 'array':\r\n                obj = [];\r\n                break;\r\n            case 'object':\r\n                obj = {};\r\n                break;\r\n            default:\r\n                return GSChartElement.#toType(valV, typeV);\r\n        }\r\n\r\n        const childs = Array.from(el.children);\r\n        const isArray = typeV === 'array';\r\n        const isObject = typeV === 'object';\r\n\r\n        childs.forEach(el => {\r\n            const _nam = el.getAttribute(name);\r\n            if (isArray) {\r\n                obj.push(GSChart.toJson(el, name, value, type));\r\n            } else if (isObject) {\r\n                const tmp = GSChartElement.toJson(el, name, value, type);\r\n                obj[_nam] = tmp;\r\n            } else {\r\n                const _val = el.getAttribute(value);\r\n                const _typ = el.getAttribute(type);\r\n                obj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    static #toType(val, type) {\r\n        switch (type) {\r\n            case 'boolean': return val === 'true';\r\n            case 'number': return parseFloat(val);\r\n            default: return val\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-chart');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        try {\r\n            const data = await GSLoader.load(me.url);\r\n            if (!data) throw new Error(`Code URL ${me.url} unreachable!`);\r\n            me.#data = data;\r\n            me.#onHighlight(data);\r\n        } catch (error) {\r\n            GSDOM.setHTML(me.#code, error.message);\r\n        }\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        try {\r\n            const response = me.#worker;\r\n            const blob = new Blob([response], { type: 'application/javascript' });\r\n            const blobURL = URL.createObjectURL(blob);\r\n            const worker = new Worker(blobURL);\r\n            worker.onmessage = me.#onMessage.bind(me);\r\n            worker.postMessage({ data: data, url: blobURL, append: append });\r\n        } catch (error) {\r\n            GSDOM.setHTML(me.#code, error.message);\r\n        }\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSMarkdownElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        history: { type: Number },\r\n        maxHeight: { type: Number, attribute: 'max-height' },\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        this.history = 10;\r\n        this.dynamicStyle(this.#styleID);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const me = this;\r\n        await me.#initLib();\r\n        if (globalThis.showdown) {\r\n            const opt = { tasklists: true, tables: true };\r\n            me.#converter = new globalThis.showdown.Converter(opt);\r\n            super.connectedCallback();\r\n        }\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('url')) {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url);\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const height = me.maxHeight > 0 ? `${me.maxHeight}px;` : false;\r\n        const opt = { 'max-height': height }\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        return html`<div ${ref(me.#containerRef)} class=\"overflow-auto ${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [me.#styleID] : true,\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        me.#onURL(url);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n\r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n\r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });\r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n            GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n\r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list = GSDOM.queryAll(me.#container, qry);\r\n        requestAnimationFrame(() => list.forEach(el => GSDOM.toggleClass(el, css)) );\r\n    }\r\n\r\n    #handleLinks() {\r\n        const me = this;\r\n        const links = GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n            .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')))\r\n            .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n            .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/'))\r\n            .forEach(el => GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me)));\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        if (me.#cache.length === 0 ) return me.#first;\r\n        const url = me.#cache.pop();\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if (me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdownElement.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-markdown');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSMonacoElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #editor = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = '';\r\n        this.theme = 'vs-dark';\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonacoElement.#init();\r\n        super.connectedCallback();\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.#onMonacoReady();\r\n        super.firstUpdated();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        if (changed.has('theme')) me.#onTheme(me.theme);\r\n        if (changed.has('target')) me.#onTarget(me.target);\r\n        if (changed.has('url')) me.#onURL(me.url);\r\n        if (changed.has('language')) me.#onLanguage(me.language);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#containerRef)} class=\"${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        return this.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    get owner() {\r\n        return this.parentElement;\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        try {\r\n            const data = url ? await GSLoader.load(url) : null;\r\n            if (!data) throw new Error(`Code URL ${url} unreachable!`);\r\n            me.code = '';\r\n            me.#onLanguage(me.language);\r\n            me.code = data;\r\n        } catch (error) {\r\n            me.code = error.message;\r\n        }\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n\r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner?.getBoundingClientRect();\r\n            if (rect) {\r\n                me.#editor.layout({ width: rect.width, height: rect.height });\r\n            }\r\n        });\r\n    }\r\n\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    static #initialized;\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonacoElement.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        const url = GSMonacoElement.URL_LIB;\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${url}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${url}'};\r\n                importScripts('${url}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({\r\n                paths: { 'vs': `${GSMonacoElement.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false }\r\n            });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static async #init() {\r\n        const me = GSMonacoElement;\r\n        if (me.#initialized) return;\r\n        me.#initEnv();\r\n        await me.#initLib();\r\n        await me.#initMonaco();\r\n        me.#initialized = true;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-monaco');\r\n    }\r\n\r\n}"],"mappings":"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"}