{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/GSVersion.mjs","../../modules/base/style.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSID.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSDynamicStyle.mjs","../../modules/base/GSCacheStyles.mjs","../../modules/base/GSAdoptedEngine.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSLocalization.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSTemplateCache.mjs","../../modules/base/GSTheme.mjs","../../modules/base/GSAttributeHandler.mjs","../../modules/helpers/Stack.mjs","../../modules/helpers/Queue.mjs","../../modules/helpers/BinaryTree.mjs","../../modules/helpers/DoublyLinkedList.mjs","../../modules/helpers/Tree.mjs","../../modules/data/ReadWriteRegistry.mjs","../../modules/data/AbstractReadWrite.mjs","../../modules/data/ReadWrite.mjs","../../modules/data/CachedReader.mjs","../../modules/data/TreeNode.mjs","../../modules/data/TreeReader.mjs","../../modules/lib.mjs","../../modules/directives/dataset.mjs","../../modules/directives/literal.mjs","../../modules/directives/css-map.mjs","../../modules/properties/verificator.mjs","../../modules/properties/buttonType.mjs","../../modules/properties/color.mjs","../../modules/properties/environment.mjs","../../modules/properties/inputType.mjs","../../modules/properties/nav.mjs","../../modules/properties/orientation.mjs","../../modules/properties/placement.mjs","../../modules/properties/position.mjs","../../modules/properties/protocol.mjs","../../modules/properties/size.mjs","../../modules/properties/arrayConverter.mjs","../../modules/controllers/AdoptedController.mjs","../../modules/controllers/AttributeController.mjs","../../modules/controllers/ContentController.mjs","../../modules/controllers/DataController.mjs","../../modules/controllers/ElementMoveController.mjs","../../modules/controllers/ElementNavigationController.mjs","../../modules/controllers/GroupController.mjs","../../modules/controllers/OrientationController.mjs","../../modules/controllers/ThemeController.mjs","../../modules/controllers/TemplateController.mjs","../../modules/controllers/SlotController.mjs","../../modules/controllers/LocalizationController.mjs","../../modules/GSElement.mjs","../../modules/components/Accordion.mjs","../../modules/components/AccordionItem.mjs","../../modules/components/Alert.mjs","../../modules/components/Button.mjs","../../modules/components/Calendar.mjs","../../modules/components/Card.mjs","../../modules/components/Center.mjs","../../modules/components/Menu.mjs","../../modules/components/Context.mjs","../../modules/components/Compare.mjs","../../modules/components/Controller.mjs","../../modules/components/Copyright.mjs","../../modules/components/DataHandler.mjs","../../modules/components/Dialog.mjs","../../modules/components/Drawer.mjs","../../modules/components/Dropdown.mjs","../../modules/components/Email.mjs","../../modules/components/Form.mjs","../../modules/components/FormGroup.mjs","../../modules/components/FormPanel.mjs","../../modules/components/Group.mjs","../../modules/components/Icon.mjs","../../modules/components/Indent.mjs","../../modules/components/Image.mjs","../../modules/components/Layout.mjs","../../modules/components/Link.mjs","../../modules/components/ListItem.mjs","../../modules/components/List.mjs","../../modules/components/NavItem.mjs","../../modules/components/Nav.mjs","../../modules/components/Overlay.mjs","../../modules/components/Pager.mjs","../../modules/components/Popup.mjs","../../modules/components/Progress.mjs","../../modules/components/Spinner.mjs","../../modules/components/Splitter.mjs","../../modules/components/tab/Tab.mjs","../../modules/components/tab/TabPanel.mjs","../../modules/components/tab/TabGroup.mjs","../../modules/components/Table.mjs","../../modules/components/Tag.mjs","../../modules/components/Text.mjs","../../modules/components/Tooltip.mjs","../../modules/components/Template.mjs","../../modules/components/ext/controllers/CopySelectController.mjs","../../modules/components/ext/controllers/MaskController.mjs","../../modules/components/ext/controllers/NumberController.mjs","../../modules/components/ext/controllers/PasswordController.mjs","../../modules/components/ext/controllers/TextController.mjs","../../modules/components/ext/controllers/ListController.mjs","../../modules/components/ext/ReactiveInput.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSInputElement.mjs","../../modules/components/breadcrumb/Breadcrumb.mjs","../../modules/components/breadcrumb/BreadcrumbItem.mjs","../../modules/components/filebox/Attachment.mjs","../../modules/components/filebox/FileBox.mjs","../../modules/components/intl/TimeFormat.mjs","../../modules/components/intl/DateFormat.mjs","../../modules/components/intl/YearFormat.mjs","../../modules/components/intl/CurrencyFormat.mjs","../../modules/components/steps/StepStyle.mjs","../../modules/components/steps/Step.mjs","../../modules/components/steps/Steps.mjs","../../modules/components/toast/Notification.mjs","../../modules/components/toast/Toast.mjs","../../modules/components/tree/controllers/AbstractTreeController.mjs","../../modules/components/tree/controllers/TreeController.mjs","../../modules/components/tree/TreeItem.mjs","../../modules/components/tree/Tree.mjs","../../modules/extra/Chart.mjs","../../modules/extra/Highlight.mjs","../../modules/extra/Markdown.mjs","../../modules/extra/Monaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport class GSVersion {\r\n\r\n    get version() {\r\n        return '2.0.0';\r\n    }\r\n\r\n    get build() {\r\n        return 20251227;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Required CSS Styles for WebCompoents, regardless Bootstrap CSS.\r\n */\r\nexport const gsstyles = `.z-10k{z-index:10000 !important;}\r\n.gs-hide,gs-item{display:none !important;}\r\ngs-popover,gs-tooltip{position:fixed;top:0px;left:0px;},\r\n.d-contents{display:contents;}';\r\ngs-button-group::part(.btn-group){box-shadow:rgba(72, 72, 72, 0.4) 0px 0.125rem 0.25rem;}\r\ngs-group>gs-button::part(button) {box-shadow: none;}\r\ngs-group>gs-button:not(:last-child)::part(button) {border-top-right-radius: 0;border-bottom-right-radius: 0;}\r\ngs-group>gs-button:not(:first-child)::part(button) {margin-left: calc(var(--bs-border-width) * -5);border-top-left-radius: 0;border-bottom-left-radius: 0;}\r\ngs-layout {width: 100%;height: 100%;}\r\ngs-split-panel{flex: 1 1 auto !important;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]:before {content: attr(data-value);}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {visibility: hidden;display: inline-block;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-calendar-picker-indicator {position: relative;top: 0px;right: 0;color: black;opacity: 0.5;}\r\n`;","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic asNum(val, dft = 0, locale) {\r\n\t\tlocale = locale || GSUtil.locale;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(locale);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(locale = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(locale).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t};\r\n\t\tconst reg = /[&<>\"'/]/ig;\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\t\t\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to write to the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async writeToClipboard(value = '') {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-write\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.writeText(value);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to read from the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async readFromClipboard() {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-read\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.readText();\r\n\t\t}\r\n\t\treturn '';\r\n\t}\t\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribite name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop];\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\t\t\t\t\r\n\t\t\t\tconst tmp = opt; // Object.hasOwn(opt, prop) ? opt : target;\r\n\t\t\t\t\r\n\t\t\t\tconst type = tmp[prop]?.type;\r\n\t\t\t\tconst safe = tmp[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = tmp[prop]?.default;\r\n\t\t\t\tconst multi = tmp[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = tmp[prop]?.attribute || prop;\r\n\t\t\t\tlet val = target.hasAttribute(prop) ? GSAttr.get(target, prop) : target[prop];\r\n\r\n\t\t\t\tif (GSFunction.isFunction(val)) return val.bind(target);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, locale) {\r\n        format = format || GSUtil.getDateFormat(locale);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, locale: {}, extract: {} };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', locale:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const locale = cfg.locale || GSUtil.locale;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, locale);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'text':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(locale);\r\n                    return new GSDate(val).format(fmt, locale);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, locale);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static *filter(data = [], filter = [], fields, limit = 0) {\r\n        let cnt = 0;\r\n        let sts = false;\r\n        for (let rec of data) {\r\n            sts = GSData.filterRecord(rec, filter, fields);\r\n            if (sts) {\r\n                cnt++\r\n                yield rec;\r\n            }\r\n            if (limit > 0 && cnt >= limit) break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields, limit = 0) {\r\n        data = Array.isArray(data) ? data : [];\r\n        filter = Array.isArray(filter) ? filter : [];\r\n        if (filter.length === 0) return data;\r\n        return [...GSData.filter(data, filter, fields, limit)];\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (GSData.filterValue(value, filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let value = null;\r\n\r\n        for (let flt of filter) {\r\n            value = rec[flt.name];\r\n            if (flt.name) {\r\n                found = found && GSData.filterValue(value, flt)\r\n            } else {\r\n                found = found && GSData.filterSimple(rec, flt.value);\r\n            }\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static filterValue(value, filter) {\r\n        if (value instanceof Date) {\r\n            return GSData.matchDate(value, filter);\r\n        } else if (value instanceof Date) {\r\n            return GSData.matchNumber(value, GSUtil.asNum(filter.value), filter.op);\r\n        } else {\r\n            return ('' + value).toLocaleLowerCase().includes(('' + filter.value).toLocaleLowerCase());\r\n        }\r\n    }\r\n\r\n    static matchDate(val, filter, locale) {\r\n\r\n        if (typeof filter === 'string') {\r\n            const value = '' + filter;\r\n            const local = val.toLocaleDateString(locale);\r\n            const iso = val.toISOString();\r\n            return local.includes(value) || iso.includes(value);\r\n        }\r\n\r\n        if (!filter.value) return false;\r\n\r\n        const qry = filter.value instanceof Date ? 'date' : typeof filter.value;\r\n\r\n        switch (qry) {\r\n            case 'number':\r\n                return GSData.matchNumber(val.getTime(), filter.value, filter.op);\r\n            case 'date':\r\n                return GSData.matchNumber(val.getTime(), filter.value.getTime(), filter.op);\r\n        }\r\n\r\n        return GSData.matchDate(val, '' + filter.value, filter.locale);\r\n    }\r\n\r\n    /**\r\n     * Match number by operator\r\n     * @param {*} value \r\n     * @param {*} query \r\n     * @param {*} operator \r\n     */\r\n    static matchNumber(value = 0, query = 0, operator = 'eq') {\r\n        switch (operator) {\r\n            case 'gt': return query > value;\r\n            case 'lt': return query < value;\r\n            case 'ge': return query >= value;\r\n            case 'le': return query <= value;\r\n        }\r\n        return value === query;\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToOject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name, partial = false) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj[n][i] : null;\r\n        } else if (obj.hasOwnProperty(n)) {\r\n            obj = partial ? obj[n] || obj : obj[n];\r\n        } else {\r\n            obj = null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n\tstatic readFromObject(obj, name) {\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSlotElement\r\n\t * @returns {Boolean}\r\n\t */\t\r\n\tstatic isSlotElement(el) {\r\n\t\treturn el instanceof HTMLSlotElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @param {Number} level How many levels to wal, 0 = all\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry, levels = 0) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tlevels = GSUtil.asNum(levels, 0);\r\n\t\tconst limit = levels > 0;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t\tif (limit && --levels == 0) return null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value') && el.value) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t}\r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = GSUtil.normalize(data);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\t// if (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t */\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', '');\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = GSUtil.isString(data) ? data : data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(me.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {Boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el, opt) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el, opt);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {Boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {Boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {Boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {Boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {Boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {Boolean} forRemove - call on node remove or add\r\n     * @param {HTMLElement} target - element to monitor\r\n     * @returns {Boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {Boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {Boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = (style || '').toString();\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop();\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n    * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\nimport { gsstyles } from \"./style.mjs\";\r\n\r\n/**\r\n * Cache for dynaamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Create a new CSSStyleSheet\r\n\t * @param {String} id Unique ID\r\n\t * @returns {CSSStyleSheet} Created instance\r\n\t */\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {String} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\t\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\t\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {String} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {String} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id, style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSID.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(gsstyles);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\nimport { GSDOM } from './GSDOM.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSDOMObserver } from './GSDOMObserver.mjs';\r\nimport { GSCacheStyles } from './GSCacheStyles.mjs';\r\n\r\nconst adoptedId = Symbol();\r\nconst observer = Symbol();\r\n\r\n/**\r\n * Monitor HTMLStyleElement & HTMLLinkElement (of type stylesheet) for changes.\r\n * Every such element marked with data-adoptable=\"true\" will be cached and\r\n * will trigger gs-adopted event to notify component controller to update adoptableStyleSheet list\r\n */\r\nexport class GSAdoptedEngine {\r\n\r\n  static #timerID = 0;\r\n  static #ID = Date.now();\r\n  static #scheduled = false;\r\n\r\n  static #init() {\r\n    const me = GSAdoptedEngine;\r\n    me.observe(document.head);\r\n    me.#preload();\r\n    me.#timerID = setInterval(() => me.#adopt(), me.timeout);\r\n  }\r\n\r\n  static #clear() {\r\n    const me = GSAdoptedEngine;\r\n    clearInterval(me.#timerID);\r\n    me.#timerID = undefined;\r\n  }\r\n\r\n  static #adopt() {\r\n    const me = GSAdoptedEngine;\r\n    const sheets = me.#adoptable;\r\n    if (sheets.length == 0) return me.#clear();\r\n    sheets.map(s => me.#adoptSheet(s));\r\n    me.update();\r\n  }\r\n\r\n  static update() {\r\n    const me = GSAdoptedEngine;\r\n    if (me.#scheduled) return;\r\n    me.#scheduled = true;\r\n    queueMicrotask(() => {\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          document.adoptedStyleSheets = me.#sorted;\r\n          document.adoptedStyleSheets.id = ++me.#ID;\r\n        } finally {\r\n          me.#scheduled = false;\r\n          globalThis.dispatchEvent(new CustomEvent('gs-adopted'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static #asText(sheet) {\r\n    return Object.values(sheet.cssRules).map(o => o.cssText).join('');\r\n  }\r\n\r\n  static #adoptLink(el) {\r\n    const me = GSAdoptedEngine;\r\n    GSAdoptedEngine.#monitorAttributes(el);\r\n    Array.from(document.styleSheets).filter(s => s.ownerNode === el).map(s => me.#adoptSheet(s));\r\n  }\r\n\r\n  static #adoptSheet(sheet) {\r\n    const me = GSAdoptedEngine;\r\n    const style = me.#asText(sheet);\r\n    return me.#adoptStyle(sheet.ownerNode, style);\r\n  }\r\n\r\n  static #adoptStyle(ownerNode, style) {\r\n    const me = GSAdoptedEngine;\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(style);\r\n    sheet.id = ++me.#ID;\r\n    ownerNode[adoptedId] = sheet.id;\r\n    me.#store(ownerNode, sheet);\r\n    return sheet;\r\n  }\r\n\r\n  static #store(ownerNode, sheet) {\r\n    GSCacheStyles.set(sheet.id, sheet);\r\n  }\r\n\r\n  static #remove(ownerNode, sheet) {\r\n    GSCacheStyles.remove(sheet.id);\r\n    ownerNode[observer]?.disconnect?.();\r\n    ownerNode[observer] = undefined;\r\n  }\r\n\r\n  static get #sorted() {\r\n    return GSCacheStyles.styles;\r\n  }\r\n\r\n  /**\r\n   * List of adoptable styles or links. Filter only those with dataset.adoptable=true\r\n   * @returns {HTMLStyleElement|HTMLLinkElement}\r\n   */\r\n  static get #adoptable() {\r\n    return Object.values(document.styleSheets)\r\n      .filter(o => o.ownerNode)\r\n      .filter(o => o.ownerNode.dataset.adoptable)\r\n      .filter(o => !o.ownerNode[adoptedId]);\r\n  }\r\n\r\n  static #preload() {\r\n    GSDOM.queryAll(document.head, 'link[rel=\"preload\"][as=\"style\"]')\r\n    .forEach(el => {\r\n      el.remove();\r\n      document.head.appendChild(el);\r\n    });\r\n  }\r\n\r\n  static #onAttributeChange(mutationList) {\r\n    mutationList.forEach((mutation) => {\r\n       const id = mutation.target[adoptedId];\r\n       const style = GSCacheStyles.get(id);\r\n       if(style) style.disabled = mutation.target.hasAttribute('disabled');\r\n    });\r\n    GSAdoptedEngine.update();\r\n  }\r\n  \r\n  static #monitorAttributes(element) {\r\n    const me = GSAdoptedEngine;\r\n    const callback = me.#onAttributeChange.bind(me);\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(element, {\r\n      attributeFilter: [\"disabled\"],\r\n      attributeOldValue: true,\r\n      subtree: false,\r\n    });\r\n    return observer;\r\n  }\r\n  \r\n  /**\r\n   * Filter style and link(css) elements which will be shared\r\n   * with all web componentes. Filter only those marked with data-adoptable\r\n   * @param {HTMLElement} el \r\n   * @returns {Boolean} Return true if monotired element is selected for further processing\r\n   */\r\n  static #onMonitorFilter(el) {\r\n    return (Boolean(el.dataset?.adoptable))\r\n      && (\r\n        (el instanceof HTMLLinkElement && (el.rel === 'stylesheet' || el.as === \"style\"))\r\n        || el instanceof HTMLStyleElement\r\n      );\r\n  }\r\n\r\n  /**\r\n   * When style added to the HTML page, attach it to the WebComponents\r\n   * @param {HTMLStyleElement|HTMLLinkElement} el \r\n   */\r\n  static #onMonitorConnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    if (el instanceof HTMLStyleElement) {\r\n      me.#adoptStyle(el, el.innerText);\r\n      me.update();\r\n    } else if (el instanceof HTMLLinkElement) {\r\n      GSEvents.wait(el, 'load', 0, false).then(e => {\r\n        if (el.rel === 'preload') return el.rel = \"stylesheet\";\r\n        me.#adoptLink(e.target);\r\n        me.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When style removed, remove from adoptable and update\r\n   * @param {HTMLElement} el \r\n   */\r\n  static #onMonitorDisconnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    me.#sorted.filter(o => o.id === el[adoptedId])\r\n          .forEach(o => me.#remove(el, o));\r\n    me.update();\r\n  }\r\n\r\n  /**\r\n   * Observe DOM tree from mutations\r\n   * @param {HTMLElement} owner Root element to watch DOM tree from \r\n   */\r\n  static observe(owner) {\r\n    const me = GSAdoptedEngine;\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorConnect, false, owner);\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorDisconnect, true, owner);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promisses sequentially\r\n\t * @param {Arrayy<Promise>} ps \r\n\t * @returns \r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport { GSEvent } from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport class GSEventBus {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {String} name EventBus name\r\n     * @param {String} type Event name\r\n     * @param {Object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {String} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {String} name unique buss name\r\n     * @returns {Boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constructor to attach Gesture featuer to an HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {Boolean} swipe Monitor swipe gesture\r\n     * @param {Boolean} tap Monitor tap gesture\r\n     * @param {Boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move: me.#handleTouchMove.bind(me),\r\n            start: me.#handleTouchStart.bind(me),\r\n            end: me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) {\r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 && Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {Number}\r\n     */\r\n    static fingers(e) {\r\n        return e.detail.touches?.length;\r\n    }\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns {GSGesture}\r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport class GSItem extends HTMLElement {\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return template content of GS-ITEM element (if exists)\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tget body() {\r\n\t\tlet tpl = GSAttr.get(this, 'template');\r\n\t\tif (tpl) return `<gs-template flat src=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = this.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item elements\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tget items() {\r\n\t\treturn Array.from(this.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSAttr.get(this, 'name', '');\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate that parent element contains only specific childrens\r\n\t * @param {*} own \r\n\t * @param {*} tagName \r\n\t * @returns \r\n\t */\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic collect(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Convert GS-ITEM list to JSON\r\n\t * @param {HTMLElement} root Element containing GS-ITEM childs \r\n\t * @returns {Array} Arary of JSON objects\r\n\t */\r\n\tstatic toJSON(root) {\r\n\t\treturn GSItem.collect(root).map(el => el.asJSON(true));\r\n\t}\r\n\r\n\t/**\r\n\t * Make GS-ITEM attributes JSON compatible \r\n\t * @param {*} root \r\n\t * @param {*} definition \r\n\t * @returns \r\n\t */\r\n    static proxify(root, definition) {        \r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, definition));\r\n    }\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSVersion } from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        //if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        }\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport class GSPopper {\r\n\r\n\t/**\r\n\t * A simple wrapper to get element DOMRect\r\n\t * @param {HTMLElement} el \r\n\t * @returns {DOMRect}\r\n\t */\r\n\tstatic asRect(el) {\r\n\t\treturn el.getBoundingClientRect();\r\n\t}\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = GSPopper.asRect(el);\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = GSPopper.asRect(element);\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\r\n\t\tconst css = {\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '0px',\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.translate = `${obj.x}px ${obj.y}px`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tconst astyle = GSDynamicStyle.dynamicStyle(arrow);\r\n\r\n\t\tconst css = {\r\n\t\t\tinset: GSPopper.#inset(pos),\r\n\t\t\tposition: 'absolute',\r\n\t\t\tmargin: '0px',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\twidth: 'max-content',\r\n\t\t\theight: 'max-content',\t\t\t\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\t\tastyle.position = 'absolute';\r\n\r\n\t\tconst srect = GSPopper.asRect(source);\r\n\t\tconst arect = GSPopper.asRect(arrow);\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tconst aopt = {\r\n\t\t\ttranslate: `${arr.x}px ${arr.y}px`,\r\n\t\t\ttop: arr.top ? arr.top : '',\r\n\t\t\tleft: arr.left ? arr.left : ''\r\n\t\t}\r\n\r\n\t\tconst opt = {\r\n\t\t\ttranslate : `${obj.x}px ${obj.y}px`\r\n\t\t};\r\n\r\n\t\tObject.assign(style, opt);\r\n\t\tObject.assign(astyle, aopt);\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst opt = {};\r\n\r\n\t\topt.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\topt.left = '';\r\n\t\t\topt.top = '0px';\r\n\t\t\tshift = 0; //pos.isStart ? size : -1 * size;\r\n\t\t\topt.translate = `${shift}px ${arrowPosH / 2}px`;\r\n\t\t} else {\r\n\t\t\topt.top = '';\r\n\t\t\topt.left = '0px';\r\n\t\t\tshift = 0; //pos.isTop ? size : -1 * size;\r\n\t\t\topt.translate = `${arrowPosW}px ${shift}px`;\r\n\t\t}\r\n\r\n\t\tGSDynamicStyle.applyDynamicStyle(arrow, opt);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {\r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSQueryCSS } from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value);\r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n\r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\treturn document.getElementById(tpl.slice(1));\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTheme class\r\n * @module base/GSTheme\r\n */\r\n\r\n/**\r\n * Switch between dark and light mode\r\n * @Class\r\n */\r\nexport class GSTheme {\r\n\r\n    static #STORAGE = 'gs-theme-mode';\r\n\r\n    /**\r\n     * Changes the theme to 'dark mode' and save settings to local stroage.\r\n     * Basically, replaces/toggles every CSS class that has '-light' class with '-dark'\r\n     * @param {HTMLElement} el \r\n     */\r\n    static darkMode(el) {\r\n        GSTheme.#switch(el, 'light', 'dark');\r\n    }\r\n\r\n    /**\r\n     * Changes the theme to 'light mode' and save settings to local stroage.\r\n     * @param {HTMLElement} el \r\n     */\r\n    static lightMode(el) {\r\n        GSTheme.#switch(el, 'dark', 'light');\r\n    }\r\n\r\n    static #switch(el, from = 'light', to = 'dark') {\r\n\r\n        const root = el || document.body;\r\n\r\n        // TODO  switch dark/light mode ?!??!? \r\n\r\n        // save last state\r\n        GSTheme.theme = to;\r\n    }\r\n\r\n    static get theme() {\r\n        return localStorage.getItem(GSTheme.#STORAGE);\r\n    }\r\n\r\n    static set theme(val) {\r\n        localStorage.setItem(GSTheme.#STORAGE, val);\r\n        window.dispatchEvent(new CustomEvent('gs-theme', { detail: val }));\r\n        const htmlEl = document.head.parentElement;\r\n        if (val) {\r\n            htmlEl.dataset.bsTheme = val;\r\n        } else {\r\n            delete htmlEl.dataset.bsTheme;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get system default theme by media query\r\n     * @returns {String} dark|light \r\n     */\r\n    static getSystemDefaultTheme() {\r\n        const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\r\n        return darkThemeMq.matches ? 'dark' : 'light';\r\n    }\r\n\r\n    static #onTheme(e) {\r\n        const q = new URLSearchParams(location.hash.slice(1));\r\n        GSTheme.theme = q.get('theme');\r\n    }\r\n\r\n    static #setup() {\r\n        window.addEventListener('hashchange', GSTheme.#onTheme)\r\n        let settings = localStorage.getItem(GSTheme.#STORAGE);\r\n        if (settings == null) {\r\n            settings = GSTheme.getSystemDefaultTheme();\r\n        }\r\n\r\n\r\n        if (settings == 'dark') return GSTheme.darkMode();\r\n        if (settings == 'light') return GSTheme.lightMode();\r\n        // TODO switch\r\n\r\n    }\r\n\r\n    static {\r\n        GSTheme.#setup();\r\n        globalThis.GSTheme = GSTheme;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-attribute - toggle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-call - calls a function on a given target (multipel functions supported)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: \r\n * data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * \r\n * data-gs-target determine element on which to execute,\r\n * if not specified, it means current element\r\n * \r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el) {\r\n        const me = this;\r\n        me.#host = el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = GSAttributeHandler.proxify(me.#host);\r\n    }\r\n\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleSwap(target);\r\n        me.#handleInject(host, target);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    #handleBinding(target, evt) {\r\n        const source = evt.target.field || evt.target.form || evt.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (!(isField || isForm)) return;\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n    }\r\n\r\n    #handleAction(target) {\r\n        if (this.action) GSEvents.send(target, 'action', this.action, true, true);\r\n    }\r\n\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)();\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    #handleInject(host, target) {\r\n        if (this.inject) {\r\n            const src = this.#toHTML(this.inject);\r\n            const content = GSDOM.parse(src, true);\r\n            this.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n    #handleSwap(target) {\r\n        if (this.swap) target.innerHTML =  this.#toHTML(this.swap);\r\n    }\r\n\r\n    #toHTML(value = '') {\r\n        return value.indexOf('/') < 0 ? `<${value}></${value}>` : `<gs-template flat src=\"${value}\"></gs-template>`;\r\n    }\r\n\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    #applyContent(host, target, content) {\r\n        if (host.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    deattach(name = 'click') {\r\n        //GSEvents.deattachListeners(this.#host);\r\n        const me = this;\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        me.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n        const me = this;\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                return [GSDOM.root(me.#host)];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n        const list = GSDOM.queryAll(document.body, me.target, false, true).filter(el => el.tagName !== 'GS-ITEM'); \r\n        if (list.length === 0) list.push(me.#host);\r\n        return list;\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     * @param {boolean} override If 'false' will skip existing atributes\r\n     */\r\n    static clone(from, to, override = true) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .filter(o => override || !to.hasAttribute(o.attribute))          \r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    /**\r\n     * Check if component is bindable to events\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static isBindable(el) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        return Object.values(def)\r\n            .filter(o => el.hasAttribute(o.attribute))\r\n            .length > 0;\r\n\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig  last in, first out (LIFO) order of operations.\r\n */\r\nexport class Stack extends Array {\r\n    \r\n    push(item) {\r\n        this.unshift(item);\r\n    }\r\n\r\n    pop() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig first in, first out (FIFO) order of operations.\r\n */\r\nexport class Queue extends Array {\r\n    \r\n    enqueue(item) {\r\n        this.push(item);\r\n    }\r\n\r\n    dequeue() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst tree = new BinaryTree(1, 'AB');\r\n\r\ntree.insert(1, 11, 'AC');\r\ntree.insert(1, 12, 'BC');\r\ntree.insert(12, 121, 'BG', { right: true });\r\n\r\n[...tree.preOrderTraversal()].map(x => x.value);\r\n// ['AB', 'AC', 'BC', 'BCG']\r\n\r\n[...tree.inOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB', 'BC', 'BG']\r\n\r\ntree.value;                // 'AB'\r\ntree.hasChildren;          // true\r\n\r\ntree.find(12).isLeaf;           // false\r\ntree.find(121).isLeaf;          // true\r\ntree.find(121).parent.value;    // 'BC'\r\ntree.find(12).left;             // null\r\ntree.find(12).right.value;      // 'BG'\r\n\r\ntree.remove(12);\r\n\r\n[...tree.postOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB']\r\n*/\r\n\r\n/**\r\n * Binary Tree Node data holder\r\n */\r\nexport class BinaryTreeNode {\r\n\r\n    constructor(key, value = key, parent = null) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n\r\n    /**\r\n     * Check if both left and right are empty.\r\n     */\r\n    get isLeaf() {\r\n        return this.left === null && this.right === null;\r\n    }\r\n\r\n    /**\r\n     * Check if node has children\r\n     */\r\n    get hasChildren() {\r\n        return !this.isLeaf;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Binary tree implementation\r\n */\r\nexport class BinaryTree extends BinaryTreeNode {\r\n\r\n    constructor(key, value = key) {\r\n        super(key, value);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in in-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *inOrderTraversal(node = this) {\r\n        if (node.left) yield* this.inOrderTraversal(node.left);\r\n        yield node;\r\n        if (node.right) yield* this.inOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in post-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *postOrderTraversal(node = this) {\r\n        if (node.left) yield* this.postOrderTraversal(node.left);\r\n        if (node.right) yield* this.postOrderTraversal(node.right);\r\n        yield node;\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in pre-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *preOrderTraversal(node = this) {\r\n        yield node;\r\n        if (node.left) yield* this.preOrderTraversal(node.left);\r\n        if (node.right) yield* this.preOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to find the given parent node and \r\n     * insert a new child BinaryTreeNode either as the left or right child, \r\n     * depending on the passed options object.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @param {*} options \r\n     * @returns {boolean} Return true if data inserted\r\n     */\r\n    insert(\r\n        parentNodeKey,\r\n        key,\r\n        value = key,\r\n        { left, right } = { left: true, right: true }\r\n    ) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === parentNodeKey) {\r\n                const canInsertLeft = left && node.left === null;\r\n                const canInsertRight = right && node.right === null;\r\n                if (!canInsertLeft && !canInsertRight) return false;\r\n                if (canInsertLeft) {\r\n                    node.left = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n                if (canInsertRight) {\r\n                    node.right = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to remove a BinaryTreeNode from the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.left.key === key) {\r\n                node.left = null;\r\n                return true;\r\n            }\r\n            if (node.right.key === key) {\r\n                node.right = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to retrieve the given node in the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    find(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new DoublyLinkedList();\r\n\r\nlist.insertFirst(1);\r\nlist.insertFirst(2);\r\nlist.insertFirst(3);\r\nlist.insertLast(4);\r\nlist.insertAt(3, 5);\r\n\r\nlist.size;                      // 5\r\nlist.head.value;                // 3\r\nlist.head.next.value;           // 2\r\nlist.tail.value;                // 4\r\nlist.tail.previous.value;       // 5\r\n[...list].map(e => e.value);    // [3, 2, 1, 5, 4]\r\n\r\nlist.removeAt(1);               // 2\r\nlist.getAt(1).value;            // 1\r\nlist.head.next.value;           // 1\r\n[...list].map(e => e.value);    // [3, 1, 5, 4]\r\n\r\nlist.reverse();\r\n[...list].map(e => e.value);    // [4, 5, 1, 3]\r\n\r\nlist.clear();\r\nlist.size;                      // 0\r\n*/\r\n\r\n/**\r\n * Node data holder\r\n */\r\nexport class Node {\r\n\r\n    value = null;\r\n    next = null;\r\n    previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    release() {\r\n        this.value = undefined;\r\n        this.next = undefined;\r\n        this.previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DoublyLinkedList {\r\n\r\n    #nodes = [];\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     */\r\n    get size() {\r\n        return this.#nodes.length;\r\n    }\r\n\r\n    /**\r\n     * First element in the list\r\n     */\r\n    get head() {\r\n        return this.size ? this.#nodes[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Last elemet in the list\r\n     */\r\n    get tail() {\r\n        return this.size ? this.#nodes[this.size - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Create new linked node\r\n     * @param {*} value \r\n     * @param {*} nextNode \r\n     * @param {*} previousNode \r\n     * @returns \r\n     */\r\n    create(value, nextNode, previousNode) {\r\n        return new Node(value, nextNode, previousNode);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the given position in the list\r\n     * @param {*} index \r\n     * @param {*} value \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    insertAt(index, value, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index] || null;\r\n        const node = create(value, nextNode, previousNode);\r\n\r\n        if (previousNode) previousNode.next = node;\r\n        if (nextNode) nextNode.previous = node;\r\n        this.#nodes.splice(index, 0, node);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the beginning of the list\r\n     * @param {*} value \r\n     */\r\n    insertFirst(value) {\r\n        this.insertAt(0, value);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the end of the list\r\n     * @param {*} value \r\n     */\r\n    insertLast(value) {\r\n        this.insertAt(this.size, value);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data in the given index\r\n     * @param {Number} index \r\n     * @returns \r\n     */\r\n    getAt(index) {\r\n        return this.#nodes[index];\r\n    }\r\n\r\n    indexOf(val) {\r\n        return this.#nodes.indexOf(val);\r\n    }\r\n\r\n    /**\r\n     * Remove the data at the given index\r\n     * @param {*} index \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    removeAt(index, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index + 1] || null;\r\n\r\n        if (previousNode) previousNode.next = nextNode;\r\n        if (nextNode) nextNode.previous = previousNode;\r\n\r\n        return this.#nodes.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    clear(full = true) {\r\n        if (full) this.#nodes.forEach(o => o.release());\r\n        this.#nodes = [];\r\n    }\r\n\r\n    /**\r\n     * Reverse data order\r\n     */\r\n    reverse() {\r\n        this.#nodes = this.#nodes.reduce((acc, { value }) => {\r\n            const nextNode = acc[0] || null;\r\n            const node = new Node(value, nextNode, null);\r\n            if (nextNode) nextNode.previous = node;\r\n            return [node, ...acc];\r\n        }, []);\r\n    }\r\n\r\n    toArray() {\r\n        return this.#nodes.map(e => e.value);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#nodes;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield* this.#nodes;\r\n    }\r\n\r\n    #validate(index, safe = false) {\r\n        const isInvalid = this.#isInvalidIndex(index);\r\n        if (isInvalid) {\r\n            if (safe) {\r\n                console.log(this.#error());\r\n            } else {\r\n                throw new Error(this.#error());\r\n            }\r\n        }\r\n        return !isInvalid;\r\n    }\r\n\r\n    #isInvalidIndex(index) {\r\n        return !Number.isInteger(index) || index < 0 || index > this.size;\r\n    }\r\n\r\n    #error() {\r\n        return `Invalid index. Current length is ${this.size}.`;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        const list = new DoublyLinkedList();\r\n        if (Array.isArray(data)) data.forEach(v => list.insertLast(v));\r\n        return list;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Tree Node data holder\r\n */\r\nexport class Tree {\r\n\r\n    value;\r\n\r\n    #key = null;\r\n    #parent = null;\r\n    #children;\r\n\r\n    #folder = false;\r\n    #level = 0;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        this.#key = key;\r\n        this.#parent = parent;\r\n        this.#folder = value?.leaf === false;\r\n        this.#level = parent ? parent.level + 1 : level;\r\n        this.#children = this.#folder ? [] : undefined;\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Return tree list from root to this node.\r\n     * TODO: Refactor when iterator \"map\" become available\r\n     */\r\n    get subtree() {\r\n        return Array.from(this.up(undefined, false, true, true));\r\n    }\r\n\r\n    get levelID() {\r\n        return this.subtree.map(o => o.level).join('.');\r\n    }\r\n\r\n    /**\r\n     * Unique node canonical form\r\n     */\r\n    get nodeID() {\r\n        //if (this.parent?.level < 0) return this.index;\r\n        return this.subtree.map(o => o.index).join('.');\r\n    }\r\n\r\n    get path() {\r\n        return this.subtree.map(o => o.key).join('/');\r\n    }\r\n\r\n    get index() {\r\n        return this.parent?.nodes.indexOf(this) || 0;\r\n    }\r\n\r\n    get size() {\r\n        return this.#children?.length || -1;\r\n    }\r\n\r\n    get level() {\r\n        return this.#level;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Check if #children is empty\r\n     */\r\n    get isLeaf() {\r\n        return !this.#folder;\r\n    }\r\n\r\n    get isFolder() {\r\n        return this.#folder;\r\n    }\r\n\r\n    /**\r\n     * Check if has #childrens\r\n     */\r\n    get hasChildren() {\r\n        return this.#folder && this.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get key() {\r\n        this.#key ??= this.nodeID;\r\n        return this.#key;\r\n    }\r\n\r\n    get nodes() {\r\n        return this.#children;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get parent() {\r\n        return this.#parent;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n    /**\r\n     * Check if there are more siblings \r\n     */\r\n    get hasMore() {\r\n        return this.#parent?.size > this.index + 1;\r\n    }\r\n\r\n    get firstChild() {\r\n        return this.hasMore ? this.#children[0] : undefined;\r\n    }\r\n\r\n    get lastChild() {\r\n        return this.hasMore ? this.#children[this.#children.length - 1] : undefined;\r\n    }\r\n\r\n    get next() {\r\n        return this.down(this, false, false).next().value || this.nextSibling || this.parent?.nextSibling;\r\n    }\r\n\r\n    get previous() {\r\n        const node = this.previousSibling;\r\n        return (node?.hasChildren) ? node.lastChild : node || this.up(this, false, false).next().value;\r\n    }\r\n\r\n    get nextSibling() {\r\n        return this.hasMore ? this.#parent.#children[this.index + 1] : undefined;\r\n    }\r\n\r\n    get previousSibling() {\r\n        return this.index > 0 ? this.#parent.#children[this.index - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Clear all #children\r\n     */\r\n    clear() {\r\n        if (this.#children) {\r\n            this.#children.forEach(o => o.release?.());\r\n            this.#children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally, if called externally, \r\n     * make sure node is removed from parent \r\n     */\r\n    release() {\r\n        this.clear();\r\n        this.#key = null;\r\n        this.value = null;\r\n        this.#parent = null;\r\n    }\r\n\r\n    /**\r\n     * Walk down the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     * @param {Boolean} flat Navigate all nodes out of subtree\r\n     */\r\n    *down(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (node.#children?.length) {\r\n            for (let child of node.#children) {\r\n                yield* this.down(child, values, true, reverse, flat);\r\n            }\r\n        }\r\n        if (flat) {\r\n            const item = node.nextSibling || node.parent.nextSibling;\r\n            if (item) yield* this.down(item, values, true, reverse, flat);\r\n        }\r\n        /*\r\n        */\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk up the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     */\r\n    *up(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (flat) {\r\n            let item = node.previousSibling;\r\n            item = item?.isFolder ? item.lastChild : item\r\n            if (item) yield* this.up(item, values, true, reverse, flat);\r\n        }        \r\n        if (node.parent) {\r\n            yield* this.up(node.parent, values, true, reverse, flat);\r\n        }\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk through all nodes\r\n     * @param {*} node \r\n     */\r\n    walk = this.down;\r\n\r\n    /**\r\n     * Simulate array function \"forEach\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */\r\n    forEach(callback, flat = false, reverse = false) {\r\n        this.every((node, index) => {\r\n            callback(node, index);\r\n            return true;\r\n        }, flat, reverse);\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"every\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    every(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let sts = true;\r\n        let i = 0;\r\n        for (let node of it) {\r\n            sts = callback(node, i++);\r\n            if (!sts) break;\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"find\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    find(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let i = 0;\r\n        for (let node of it) {\r\n            if (callback(node, i++)) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"filter\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only childrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    filter(callback, flat, reverse) {\r\n        return [...this.#filtered(callback, flat, reverse)];\r\n    }\r\n\r\n    *#filtered(callback, flat, reverse) {\r\n        const it = this.iterate(flat, reverse);\r\n        for (let node of it) {\r\n            let res = callback(node);\r\n            if (res) yield node;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Iterate all nodes\r\n     * @param {boolean} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {boolean} reverse If set, will iterate up the tree\r\n     */\r\n    *iterate(flat, reverse) {\r\n        reverse ? yield* this.up(this, false, false, false, flat) : yield* this.down(this, false, false,  false, flat);\r\n    }\r\n\r\n    /**\r\n     * Add a new Tree to the tree.\r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    append(key, value = key) {\r\n        let newOne = undefined;\r\n        if (key instanceof Tree) {\r\n            key.#parent = this;\r\n            key.#level = this.#level + 1;\r\n            newOne = key;\r\n        } else {\r\n            newOne = new Tree(key, value, this);\r\n        }\r\n        this.#folder = true;\r\n        this.#children ??= [];\r\n        this.#children.push(newOne);\r\n        return newOne;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method and Array.prototype.push() \r\n     * to add a new Tree to the tree.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    insert(parentNodeKey, key, value = key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === parentNodeKey) {\r\n                const newOne = new Tree(key, value, node);\r\n                this.#folder = true;\r\n                this.#children ??= [];\r\n                node.#children.push(newOne);\r\n                return newOne;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove node from tree. If key is set, will search for first node with matching key.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n\r\n        const me = this;\r\n\r\n        if (key) {\r\n            const node = me.findByKey(key);\r\n            node?.remove();\r\n            return node;\r\n        }\r\n\r\n        if (me.isRoot) throw new Error('Root node can\\'t be removed!');\r\n        const node = me.parent;\r\n        const filtered = node.#children.filter(c => c !== me);\r\n        if (filtered.length !== node.#children.length) {\r\n            node.#children = filtered;\r\n            return me;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method to retrieve the given node in the tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    findByKey(key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convert tree into array list\r\n     * @returns \r\n     */\r\n    flatten(values, inclusive, reverse) {\r\n        return [...this.down(this, values, inclusive, reverse)];\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) Tree.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.#children?.map(o => o.toJSON()) || {};\r\n        return this.isLeaf ? { key: this.key, value: this.value } :\r\n            {\r\n                key: this.key,\r\n                value: this.value,\r\n                items: this.#children.map(o => o.toJSON())\r\n            }\r\n    }\r\n\r\n    /**\r\n     * Make node iterable\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.down();\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof Tree;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) throw new Error('Parent required when data is array');\r\n            raw.forEach(o => Tree.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        const tree = new Tree(obj.key, obj, data ? parent : undefined);\r\n        if (hasParent) parent.append(tree);\r\n        if (items) Tree.from(tree, items);\r\n        return tree;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../base/GSID.mjs\";\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n    #processors = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to register\r\n     * @param {object} processor\r\n     */\r\n    addProcessor(processor) {\r\n        if (!processor) return;\r\n        this.#processors ??= new Set();\r\n        this.#processors.add(processor);\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to remove\r\n     * @param {object} processor \r\n     */    \r\n    removeProcessor(processor) {\r\n        if (processor) this.#processors?.delete(processor);\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Generic event dispatcher, can be overriden to controll when to fire event\r\n     * @param {*} owner \r\n     * @param {*} type \r\n     * @param {*} data \r\n     * @param {*} error \r\n     */\r\n    notify(owner, type, data, error) {\r\n        this.emit(error ? 'error' : type, { type: type, error: error, owner: owner, data: data }, true);\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.#processors?.forEach(c => c.postRead?.(data));\r\n            if (data) me.notify(owner, 'read', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'read', data, e);\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.#processors?.forEach(c => c.postWrite?.(data));\r\n            if (result) me.notify(owner, 'write', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'write', data, e);\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"../base/GSFunction.mjs\";\r\nimport { GSLoader } from \"../base/GSLoader.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSAbstractReadWrite } from \"./AbstractReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically register in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */\r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */\r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return { ...this.#headers };\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = { ...val };\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */\r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#filter = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#sort = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest', 'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#writer);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('remote', GSReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSData } from \"../base/GSData.mjs\";\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * ReadWrite with cached memory data. \r\n * @Class\r\n */\r\nexport class GSCachedReader extends GSReadWrite {\r\n\r\n    #data = [];\r\n\r\n    #reformat(data = []) {\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        return records;\r\n    }\r\n\r\n    #postFilter(data) {\r\n        const me = this;\r\n        data = GSData.sortData(data, me.sort);        \r\n        let limit = me.limit === 0 ? data.length : me.limit;\r\n        data = data.slice(me.skip, me.skip + limit);\r\n        return data;\r\n    }\r\n\r\n    clear() {\r\n        this.#data = [];\r\n    }\r\n\r\n    append(data) {\r\n        if(!data) return false;\r\n        const me = this;\r\n        data = me.#reformat(data);\r\n        me.#data = me.#data.concat(data);\r\n        return me.#data;\r\n    }\r\n\r\n    remove(data) {\r\n        const me = this;\r\n        me.#data = me.#data.filter(o => o =! data);\r\n        return me.#data;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n\r\n        if (me.#data.length === 0) {\r\n            const data = await super.onRead();\r\n            me.#data = me.#reformat(data);\r\n        }\r\n\r\n        let data = GSData.filterData(me.#data, me.filter, me.fields, me.limit);\r\n        data = me.#postFilter(data);\r\n        return data;\r\n    }\r\n\r\n    disable() {\r\n        this.#data = [];\r\n        super.disable();\r\n    }\r\n\r\n    set search(val) {\r\n        const me = this;\r\n        me.filter = val ? [{value : val}] : [];\r\n        me.read();\r\n        /*\r\n        let data = GSData.filterData(me.#data, [{value : val}]);\r\n        data = me.#postFilter(data);\r\n        me.notify(me, 'read', data);\r\n        */\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSCachedReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('cached', GSCachedReader);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { Tree } from \"../helpers/Tree.mjs\";\r\n\r\n/**\r\n * A module loading TreeNode class\r\n * @module data/TreeNode\r\n */\r\n\r\n/**\r\n * UI mediator between Tree linked nodes and WebComponents\r\n * @Class\r\n */\r\nexport class TreeNode extends Tree {\r\n\r\n    #multi = false;\r\n    #opened = false;\r\n    #focused = false;\r\n    #selected = false;\r\n    \r\n    #focusedNode = undefined;\r\n    #selectedNode = undefined;\r\n    #controllers = undefined;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        super(key, value, parent, level);\r\n\r\n        if (value?.select === true || (this.multi && parent?.selected)) this.selected = true;\r\n        if (value?.focus === true) this.focused = true;\r\n        if (value?.open === true) this.opened = true;\r\n    }\r\n\r\n    addController(controller) {\r\n        const root = this.root;\r\n        (root.#controllers ??= new Set()).add(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.root.#controllers?.delete(controller);\r\n    }\r\n\r\n    /**\r\n     * Is multi selection available\r\n     */\r\n    get multi() {\r\n        return this.root.#multi === true;\r\n    }\r\n\r\n    set multi(val) {\r\n        this.root.#multi = val === true;\r\n    }\r\n\r\n    get visible() {\r\n        if (this.level < 0) return true;\r\n        return this.parent?.opened;\r\n    }\r\n\r\n    /**\r\n     * select single node, removing seelction flag from all other nodes\r\n     */\r\n    get opened() {\r\n        if (this.level < 0) return true;\r\n        return this.isLeaf ? this.parent?.opened : this.#opened;\r\n    }\r\n\r\n    set opened(val) {\r\n        val = val === true;\r\n        if (val) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus single node, removing focus flag from all other nodes\r\n     */\r\n    get focused() {\r\n        return this.#focused;\r\n    }\r\n\r\n    set focused(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const changed = this.#focused != val;\r\n        const focusedNode = root.focusedNode();\r\n        \r\n        root.#focusedNode = undefined;        \r\n        this.#focused = val;\r\n        if (focusedNode && focusedNode !== this) {\r\n            focusedNode.focused = false;\r\n        }\r\n\r\n        if (val) root.#focusedNode = this;\r\n        if (changed) root.#controllers?.forEach((c) => c.onFocusChanged?.(this));\r\n    }\r\n\r\n    /**\r\n     * Select single or multi node, depending on multi selection flag\r\n     * If single, remove selection flag from all other nodes\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    set selected(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const selectedNode = root.selectedNode();\r\n        const changed = this.#selected != val;\r\n        this.#selected = val;\r\n        if (val) {\r\n            if (selectedNode && selectedNode !== this && !root.multi) {\r\n                selectedNode.selected = false;\r\n            }\r\n            root.#selectedNode = this;\r\n        }\r\n        if (changed) {\r\n            root.#controllers?.forEach((c) => c.onSelectionChanged?.(this, selectedNode));\r\n            if (root.multi) root.#controllers?.forEach((c) => c.onSelectionChanged?.(this.parent, selectedNode));\r\n        } \r\n    }\r\n\r\n    get isPartialySelected() {\r\n        return this.selected && this.hasChildren && this.nodes.length > this.nodes.filter(n => n.selected).length;\r\n    }\r\n\r\n    /* hide from public\r\n    get host() {\r\n        return this[Symbol.for('gs-element')];\r\n    }\r\n\r\n    set host(el) {\r\n        this[Symbol.for('gs-element')] = el;\r\n    }\r\n    */\r\n\r\n    selectAll() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            this.deselectAll();\r\n            this.selected = true;\r\n            return\r\n        }\r\n        this.#selectionFlag(true);\r\n        root.#selectedNode = this;\r\n        root.#controllers?.forEach((c) => c.onSelectAll?.(root));\r\n    }\r\n\r\n    deselectAll() {\r\n        const root = this.root;\r\n        this.#selectionFlag(false);\r\n        root.#selectedNode = undefined;\r\n        root.#controllers?.forEach((c) => c.onDeselectAll?.(root));\r\n    }\r\n\r\n    /**\r\n     * Return last focused node\r\n     * @returns \r\n     */\r\n    focusedNode() {\r\n        const node = this.root.#focusedNode;\r\n        return node?.focused ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * Return last selected node\r\n     * @returns \r\n     */\r\n    selectedNode() {\r\n        const node = this.root.#selectedNode;\r\n        return node?.selected ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * List all selected nodes.\r\n     * TODO; refactor when Iterator.filter become available \r\n     * @returns \r\n     */\r\n    selectedNodes() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            const node = root.selectedNode()\r\n            return node?.selected ? [node] : [];\r\n        }\r\n        const result = [];\r\n        for (let node of root.walk()) {\r\n            if (node.selected) result.push(node);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Call from external controller data must be refresshed (to notify UI optionally)\r\n     * @param {*} root \r\n     */\r\n    refresh(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onRefresh?.(this));\r\n    }\r\n\r\n    /**\r\n     * Notify controllers about data loading (from async controller)\r\n     * @param {*} root \r\n     */\r\n    loading(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onLoad?.(this));\r\n    }\r\n\r\n    expandAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.expand(root);\r\n        }\r\n    }\r\n\r\n    collapseAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.collapse(root);\r\n        }\r\n    }\r\n\r\n    expand(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        if (!me.parent?.opened) {\r\n            me.parent?.expand(root);\r\n        }\r\n        const update = !me.opened;\r\n        me.#opened = true;\r\n        if (update) me.#expanded(root);\r\n        //me.nodes?.filter( n => !n.opened).forEach(c => c.refresh(root));\r\n        me.nodes?.forEach(c => c.refresh(root));\r\n    }\r\n\r\n    collapse(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        const update = me.#opened || me.parent.#opened;\r\n        me.nodes?.filter(n => n.opened || n.parent.opened).forEach(o => o.collapse(root));\r\n        //me.nodes?.forEach(o => o.collapse(root));\r\n        me.#opened = false;\r\n        if (update) me.#collapsed(root);\r\n    }\r\n\r\n    select(val = true) {\r\n        this.selected = val === true;\r\n    }\r\n\r\n    #expanded(root) {\r\n        root.#controllers?.forEach((c) => c.onExpand?.(this));\r\n    }\r\n\r\n    #collapsed(root) {\r\n        root.#controllers?.forEach((c) => c.onCollapse?.(this));\r\n    }\r\n\r\n    release() {\r\n        if (this.#selected) this.selected = false;\r\n        super.release();\r\n    }\r\n\r\n    append(key, value = key) {\r\n        const me = this;\r\n        const node = super.append(key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onAppend?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    insert(parentNodeKey, key, value = key) {\r\n        const me = this;\r\n        const node = super.insert(parentNodeKey, key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onInsert?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    remove() {\r\n        const node = super.remove();\r\n        if (node) this.root.#controllers?.forEach((c) => c.onInsert?.(node));\r\n        return node;\r\n    }\r\n\r\n    #selectionFlag(val = false) {\r\n        val = val === true\r\n        for (let node of this.walk()) {\r\n            node.selected = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) TreeNode.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.nodes?.map(o => o.toJSON()) || {};\r\n        const obj = Object.assign({\r\n            key: this.key,\r\n            opened: this.#opened,\r\n            focused: this.#focused,\r\n            selected: this.#selected,\r\n            items: undefined\r\n        }, this.value);\r\n        obj.items = this.nodes?.map(o => o.toJSON());\r\n        return obj;\r\n    }\r\n\r\n    static get root() {\r\n        return new TreeNode(null, null, null, -1);\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof TreeNode;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) return TreeNode.from(TreeNode.root, raw);\r\n            raw.forEach(o => TreeNode.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        obj.leaf = !Array.isArray(items);\r\n        const tree = new TreeNode(obj.key, obj, data ? parent : undefined);\r\n        if (items) TreeNode.from(tree, items);\r\n        if (hasParent) parent.append(tree);\r\n        return tree;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { TreeNode } from \"./TreeNode.mjs\";\r\n\r\n/**\r\n * A module loading GSTreeReader class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for reading Tree nodes\r\n * @Class\r\n */\r\nexport class GSTreeReader extends GSReadWrite {\r\n\r\n    #data = TreeNode.root;\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    async write(val) {\r\n        throw new Error('Writer not available for TreeReader')\r\n    }\r\n\r\n    async read(owner) {\r\n        const me = this;\r\n        let node = undefined;\r\n        const data = await super.read(owner);\r\n        if (!this.#data) {\r\n            node = TreeNode.from(data);\r\n            this.#data = node;\r\n        } else {\r\n            const parent = me.filter?.length > 0 ? me.#data.findByKey(me.filter[0]) : me.#data;\r\n            parent.clear();\r\n            node = parent.fromJSON(data);\r\n        }\r\n        me.filter = undefined;\r\n        me.notify(owner, 'read', node);\r\n        return node;\r\n    }\r\n\r\n    disable() {\r\n        super.disable();\r\n        this.#data?.release();\r\n    }\r\n\r\n    notify(owner, type, data, error) {\r\n        const isNode = data instanceof TreeNode;\r\n        if (!error && !isNode && type === 'read') return;\r\n        super.notify(owner, type, data, error);\r\n    }\r\n\r\n    /**\r\n     * Called from Tree when node is expanded \r\n     * @param {*} node \r\n     */\r\n    async onExpand(node) {\r\n        if (node.hasChildren) return;\r\n        node.loading();\r\n        this.filter = node.key;\r\n        return await this.read();\r\n    }\r\n\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSTreeReader} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSTreeReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('tree', GSTreeReader);\r\n    }\r\n\r\n}","// Lit 3.0 Google\r\nconst litUrl = globalThis.GS_LIT_URL || '/bootstrap-lit/assets/lib/lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const Directive = litModule.Directive;\r\nexport const LitElement = litModule.LitElement;\r\nexport const PartType = litModule.PartType;\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const adoptStyles = litModule.adoptStyles;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const createRef = litModule.createRef;\r\nexport const css = litModule.css;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const directive = litModule.directive;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getCompatibleStyle = litModule.getCompatibleStyle;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const guard = litModule.guard;\r\nexport const html = litModule.html;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isServer = litModule.isServer;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const literal = litModule.literal;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const noChange = litModule.noChange;\r\nexport const notEqual = litModule.notEqual;\r\nexport const nothing = litModule.nothing;\r\nexport const range = litModule.range;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const render = litModule.render;\r\nexport const repeat = litModule.repeat;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const staticHtml = litModule.staticHtml;\r\nexport const staticSvg = litModule.staticSvg;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const svg = litModule.svg;\r\nexport const templateContent = litModule.templateContent;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const unsafeStatic = litModule.unsafeStatic;\r\nexport const until = litModule.until;\r\nexport const when = litModule.when;\r\nexport const withStatic = litModule.withStatic;","import { Directive, directive, nothing } from \"../lib.mjs\";\r\n\r\nconst definition = {\r\n    'action': 'gsAction',\r\n    'anchor': 'gsAnchor',\r\n    'attribute': 'gsAttribute',\r\n    'call': 'gsCall',\r\n    'exec': 'gsExec',\r\n    'inject': 'gsInject',\r\n    'property': 'gsProperty',\r\n    'swap': 'gsSwap',\r\n    'target': 'gsTarget',\r\n    'template': 'gsTemplate',\r\n    'toggle': 'gsToggle',\r\n    'trigger': 'gsTrigger',\r\n    'value': 'gsValue'\r\n}\r\n\r\nconst template = {\r\n    'gsAction': undefined,\r\n    'gsAnchor': undefined,\r\n    'gsAttribute': undefined,\r\n    'gsCall': undefined,\r\n    'gsExec': undefined,\r\n    'gsInject': undefined,\r\n    'gsProperty': undefined,\r\n    'gsSwap': undefined,\r\n    'gsTarget': undefined,\r\n    'gsTemplate': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTrigger': undefined,\r\n    'gsValue': undefined\r\n}\r\n\r\nclass DatasetDirective extends Directive {\r\n\r\n    render(obj) {\r\n        console.log(obj);\r\n        return nothing;\r\n    }\r\n\r\n    update(part, [obj, flat = true]) {\r\n\r\n        if (!obj) return nothing;\r\n\r\n        const dataset = part.element.dataset;\r\n        const srcset = obj.dataset || obj;\r\n        const isDataset = srcset instanceof DOMStringMap;\r\n\r\n        if (isDataset) {\r\n            Object.assign(dataset, srcset);\r\n        } \r\n        \r\n        if (flat) this.#remap(dataset, obj);\r\n\r\n        return nothing;\r\n    }\r\n\r\n    #remap(dataset, obj) {\r\n        const opt = Object.assign({}, template);\r\n        const list = Object.entries(obj).filter(v => Object.hasOwn(definition, v[0]));\r\n        if (list.length > 0) {\r\n            list.forEach(kv => opt[definition[kv[0]]] = kv[1]);\r\n            Object.assign(dataset, opt);\r\n        }\r\n    }\r\n}\r\n\r\nexport const dataset = directive(DatasetDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\n\r\n/**\r\n * Generic object property descritptor getter\r\n * @param {Object} instance \r\n * @returns {PropertyDescriptor}\r\n */\r\nfunction descriptors(instance) {\r\n  return Object.entries(Object.getOwnPropertyDescriptors(instance));\r\n}\r\n\r\n/**\r\n * List of all object property descriptors \r\n * @param {Object} instance Object instance \r\n * @returns {Array<PropertyDescriptor>}\r\n */\r\nfunction listProperties(instance) {\r\n  return descriptors(instance)\r\n    .filter(e => typeof e[1].value !== 'function')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List all object property getters\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGetters(instance) {\r\n  return descriptors(Reflect.getPrototypeOf(instance))\r\n    .filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List of all getteble properties from an object\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGettable(instance) {\r\n  return new Set([...listGetters(instance), ...listProperties(instance)]);\r\n}\r\n\r\n/**\r\n * Parse string literal template into Lit html instance\r\n * @param {*} tpl \r\n * @param {*} params \r\n * @returns {function}\r\n */\r\nexport function literalTemplate(tpl, params) {\r\n  const names = Array.from(listGettable(params));\r\n  const vals = names.map(v => params[v]);\r\n  names.push('html');\r\n  vals.push(html);\r\n  return new Function(...names, `return html\\`${tpl}\\`;`)(...vals);\r\n}","/**\r\n * A clone of classMap directive to support CSS directive.\r\n * Lit classs is not expoed, so we have to clone it and create our own.\r\n */\r\n\r\nimport { Directive, PartType, directive, noChange } from \"../lib.mjs\";\r\n\r\nclass CssMapDirective extends Directive {\r\n\r\n    constructor(partInfo) {\r\n        super(partInfo);\r\n        if (partInfo.type !== PartType.ATTRIBUTE ||\r\n            partInfo.name !== 'css' ||\r\n            partInfo.strings?.length > 2) {\r\n            throw new Error('`classMap()` can only be used in the `css` attribute ' +\r\n                'and must be the only part in the attribute.');\r\n        }\r\n    }\r\n\r\n    render(classInfo) {\r\n        // Add spaces to ensure separation from static classes\r\n        return (' ' +\r\n            Object.keys(classInfo)\r\n                .filter((key) => classInfo[key])\r\n                .join(' ') +\r\n            ' ');\r\n    }\r\n\r\n    update(part, [classInfo]) {\r\n\r\n        // Remember dynamic classes on the first render\r\n        if (this._previousClasses === undefined) {\r\n            this._previousClasses = new Set();\r\n            if (part.strings !== undefined) {\r\n                this._staticClasses = new Set(part.strings\r\n                    .join(' ')\r\n                    .split(/\\s/)\r\n                    .filter((s) => s !== ''));\r\n            }\r\n\r\n            for (const name in classInfo) {\r\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\r\n                    this._previousClasses.add(name);\r\n                }\r\n            }\r\n            return this.render(classInfo);\r\n        }\r\n\r\n        const classList = part.element.classList;\r\n\r\n        // Remove old classes that no longer apply\r\n        for (const name of this._previousClasses) {\r\n            if (!(name in classInfo)) {\r\n                classList.remove(name);\r\n                this._previousClasses.delete(name);\r\n            }\r\n        }\r\n\r\n        // Add or remove classes based on their classMap value\r\n        for (const name in classInfo) {\r\n            // We explicitly want a loose truthy check of `value` because it seems\r\n            // more convenient that '' and 0 are skipped.\r\n            const value = !!classInfo[name];\r\n            if (value !== this._previousClasses.has(name) &&\r\n                !this._staticClasses?.has(name)) {\r\n                if (value) {\r\n                    classList.add(name);\r\n                    this._previousClasses.add(name);\r\n                } else {\r\n                    classList.remove(name);\r\n                    this._previousClasses.delete(name);\r\n                }\r\n            }\r\n        }\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * A directive that applies dynamic CSS classes.\r\n *\r\n * This must be used in the `css` attribute and must be the only part used in\r\n * the attribute. It takes each property in the `classInfo` argument and adds\r\n * the property name to the element's `classList` if the property value is\r\n * truthy; if the property value is falsey, the property name is removed from\r\n * the element's `css`.\r\n *\r\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\r\n * truthy.\r\n *\r\n * @param classInfo\r\n */\r\nexport const cssMap = directive(CssMapDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nexport class ButtonTypes {\r\n\r\n    static values = ['button', 'reset', 'submit'];\r\n\r\n    static is(val) {\r\n        return ButtonTypes.values.includes(val);\r\n    }\r\n\r\n    static isReest(val) {\r\n        return ButtonTypes.values.indexOf(val) === 1;\r\n    }\r\n\r\n    static isSubmit(val) {\r\n        return ButtonTypes.values.indexOf(val) === 2;\r\n    }\r\n} \r\n\r\nexport const buttonType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ButtonTypes.is(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nexport const ColorTypes = ['', 'primary', 'secondary', 'dark', 'light', 'info', 'warning', 'danger', 'alert', 'link', 'success'];\r\n\r\nexport const color = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ColorTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'dektop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n\r\nexport const InputTypes = ['checkbox', 'radio', 'switch', 'number', 'range', 'text', 'passsword', 'email', 'url', 'file'];\r\n\r\nexport const inputType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && InputTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nexport const NavTypes = ['', 'pills', 'tabs', 'underline'];\r\n\r\nexport const nav = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && NavTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nexport class PlacementTypes {\r\n\r\n    static values = ['center', 'left', 'right', 'start', 'end', 'top', 'bottom'];\r\n\r\n    static includes(val) {\r\n        return PlacementTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        return PlacementTypes.values.indexOf(val) > 4;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = PlacementTypes.values.indexOf(val)\r\n        return idx > 0 && idx < 5;\r\n    }\r\n\r\n    static isCenter(val) {\r\n        return PlacementTypes.values.indexOf(val) === 0;\r\n    }\r\n\r\n    static isBefore(val) {\r\n        return ['left', 'start', 'top'].includes(val);\r\n    }\r\n\r\n    static isAfter(val) {\r\n        return ['right', 'end', 'bottom'].includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const placement = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PlacementTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nexport class PositionTypes {\r\n\r\n    static values = ['absolute', 'fixed', 'relative', 'sticky', 'static'];\r\n\r\n    static includes(val) {\r\n        return PositionTypes.values.includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const position = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PositionTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nexport const SizeTypes = { 'default' : '', 'normal': '',  'medium': '', 'small': 'sm', 'large': 'lg', 'big' : 'lg' };\r\n\r\nexport const size = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && Object.hasOwn(SizeTypes, newVal);\r\n    }\r\n\r\n};","export const stringArrayConverter = {\r\n    fromAttribute: (value, type) => {\r\n        return (value || '').split(',');\r\n    },\r\n    toAttribute: (value, type) => {\r\n        return (value || []).join(',');\r\n    }\r\n  }","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCacheStyles } from '../base/GSCacheStyles.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time even gs-adopted is triggered by the GSAdoptedEngien class,\r\n * all registerd controller will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to preven dom node polution; \r\n * Style  changes  are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me.#host);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values, isGlobal = false) {\r\n    const me = this;\r\n    let style = null;\r\n    if (isGlobal) {\r\n      style = GSCacheStyles.dynamic;\r\n    } else {\r\n      me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');      \r\n      style = me.#dynamic;\r\n    }    \r\n    if (values === null && style.rules.length > 0 ) return style.removeRule(name);\r\n    return style.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.deattach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (!me.#isSelf()) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs).forEach(el => el?.remove());\r\n      me.#refs.clear();\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async relink(read = true) {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#listen(read);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.filter = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    storage?.on('read', me.#readCallback);\r\n    storage?.on('write', me.#writeCallback);\r\n    storage?.on('error', me.#errorCallback);\r\n    if (read) storage.read(me.#host);\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    storage?.off('read', me.#readCallback);\r\n    storage?.off('write', me.#writeCallback);\r\n    storage?.off('error', me.#errorCallback);\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for elment move events, properly handling mouse events.\r\n */\r\nexport class ElementMoveController {\r\n\r\n  #host;\r\n  #element;\r\n  #attached = false;\r\n\r\n  #cursorX = 0;\r\n  #cursorY = 0;\r\n\r\n  #mouseUpCallback;\r\n  #mouseDownCallback;\r\n  #mouseMoveCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n    me.#mouseUpCallback = me.#onMouseUp.bind(me);\r\n    me.#mouseDownCallback = me.#onMouseDown.bind(me);\r\n    me.#mouseMoveCallback = me.#onMouseMove.bind(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  attach(element) {\r\n    const me = this;\r\n    if (!me.#attached) {\r\n      me.#element = element;\r\n      me.#attached = true;\r\n      me.#host.attachEvent(me.#element, 'mousedown', me.#mouseDownCallback);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.#cursorX = 0;\r\n    me.#cursorY = 0;\r\n    me.#host.removeEvent(document, 'mouseup', me.#mouseUpCallback);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n  * Call host onStartMove function\r\n  * @param {MouseEvent} e \r\n  */\r\n  #onMouseDown(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n    me.#host.onStartMove?.(e, me.#cursorX, me.#cursorY);\r\n    me.#host.attachEvent(document, 'mouseup', me.#mouseUpCallback, true);\r\n    me.#host.attachEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n   * Remove mousemove listener and call host onEndMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseUp(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n    return me.#host.onEndMove?.(e, me.#cursorX, me.#cursorY);\r\n  }\r\n\r\n  /**\r\n   * Call host onMouseMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseMove(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n\r\n    me.#host.onMouseMove?.(e, me.#cursorX, me.#cursorY);\r\n\r\n    if (me.#cursorX < e.clientX) {\r\n      me.#host.onCursorRight?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorX > e.clientX) {\r\n      me.#host.onCursorLeft?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    if (me.#cursorY < e.clientY) {\r\n      me.#host.onCursorUp?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorY > e.clientY) {\r\n      me.#host.onCursorDown?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for child element navigation / selection / focusing\r\n */\r\nexport class ElementNavigationController {\r\n\r\n  #host;\r\n  #attached;\r\n  #selected;\r\n  #focused;\r\n  #multiselect = new Set();\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.init();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#attached = false;\r\n  }\r\n\r\n  get circular() {\r\n    return this.#host?.circular === true;\r\n  }\r\n\r\n  get multiple() {\r\n    return this.#host?.multiple === true;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.multiple ? [...this.#multiselect.values()] : this.#selected;\r\n  }\r\n\r\n  init() {\r\n    const me = this;\r\n    me.#selected = me.#host.data?.filter(o => o.active).pop();\r\n  }\r\n\r\n  attach(el) {\r\n    const me = this;\r\n    if (me.#attached) return;\r\n    me.#attached = true;\r\n    me.#host.attachEvent(el, 'keydown', e => me.onKeyDown(e));\r\n    me.#host.attachEvent(el, 'keyup', e => me.onKeyUp(e));\r\n    me.#host.attachEvent(el, 'click', e => me.onClick(e));\r\n    me.#host.attachEvent(el, 'focusin', e => me.onFocusIn(e));\r\n    me.#host.attachEvent(el, 'focusout', e => me.onFocusOut(e));\r\n  }\r\n\r\n  previous() {\r\n    const me = this;\r\n    let el = me.#focused?.previousElementSibling;\r\n    while (el?.disabled) el = el.previousElementSibling;\r\n    if (me.circular && !el) el = me.lastElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  next() {\r\n    const me = this;\r\n    let el = me.#focused?.nextElementSibling;\r\n    while (el?.disabled) el = el.nextElementSibling;\r\n    if (me.circular && !el) el = me.firstElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    const me = this;\r\n    if (me.multiple) {\r\n      me.#multiselect.forEach(el => {\r\n        el.active = false;\r\n        el.blur();\r\n      });\r\n    } else if (me.#selected) {\r\n      me.#selected.active = false;\r\n      me.#selected.blur();\r\n    }\r\n    me.#multiselect.clear();\r\n    me.#focused = undefined;\r\n    me.#selected = undefined;\r\n    me.#host?.emit('group-reset', undefined, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element selected\r\n   * @param {*} el \r\n   */\r\n  #onSelected(el) {\r\n    const me = this;\r\n    me.#host?.onSelected?.(el);\r\n    me.#host?.emit('group-selected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element deselected\r\n   * @param {*} el \r\n   */\r\n  #onDeselected(el) {\r\n    this.#host?.onDeselected?.(el);\r\n    this.#host?.emit('group-deselected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  #onFocused(el) {\r\n    this.#host?.onFocused?.(el);\r\n    this.#host?.emit('group-focused', el, true);\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  #isNavigable(el) {\r\n    return this.#host?.isNavigable ? this.#host?.isNavigable(el) : true;\r\n  }\r\n\r\n  #focus(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    me.#focused = el;\r\n    if (el) {\r\n      me.#onFocused(me.#focused);\r\n    }\r\n  }\r\n\r\n  #toggle(el) {\r\n    if (!el) return;\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    if (el.active) {\r\n      me.#multiselect.add(el);\r\n      me.#onSelected(el);\r\n    } else {\r\n      me.#multiselect.delete(el);\r\n      me.#onDeselected(el);\r\n    }\r\n  }\r\n\r\n  #select(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n\r\n    if (me.#selected && !me.multiple) {\r\n      me.#selected.active = false;\r\n      me.#toggle(me.#selected);\r\n    }\r\n\r\n    me.#selected = el;\r\n    if (el) {\r\n      if (me.multiple) {\r\n        el.active = !el.active;\r\n      } else {\r\n        el.active = true;\r\n      }\r\n      me.#toggle(el);\r\n    }\r\n  }\r\n\r\n  onFocusOut(e) {\r\n    const me = this;\r\n    //if (me.#focused === e.target) me.#focused = undefined;\r\n  }\r\n\r\n  onFocusIn(e) {\r\n    const me = this;\r\n    me.#focus(e.target)\r\n  }\r\n\r\n  onClick(e) {\r\n    const me = this;\r\n    const el = e.composedPath().filter(el => el.parentElement === me.#host).pop();\r\n    if (!me.#isNavigable(el)) return;\r\n    if (e.ctrlKey) me.reset();\r\n    me.#onDeselected(me.#selected);\r\n    me.#select(el);\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        me.next();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'Space':\r\n      case 'Enter':\r\n        me.#focused?.click();\r\n        break;\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSEventBus } from \"../base/GSEventBus.mjs\";\r\n\r\n/**\r\n * Controller for multiple elements groups\r\n */\r\nexport class GroupController {\r\n\r\n  #host;\r\n\r\n  #busEvent;\r\n  #busCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    if (me.#host.group) {\r\n      me.#busCallback = me.#onBusEvent.bind(me);\r\n      me.#busEvent = GSEventBus.register(me.#host.clazzName);\r\n      me.#busEvent.on(me.#host.group, me.#busCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#busEvent?.off(me.#host.group, me.#busCallback);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  #onBusEvent(e) {\r\n    this.#host.onBusEvent?.(e);\r\n  }\r\n\r\n  notify(data) {\r\n    const me = this;\r\n    me.#busEvent.emit(me.#host.group, {owner: me.#host, item:data}); \t\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me.#host);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n  #injected;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#injected = false;\r\n    me.#request();    \r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  hostUpdate() {\r\n    this.#request();\r\n  }\r\n\r\n  requestUpdate() {\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (me.#injected) {\r\n      me.#injected = false;\r\n      me.#host.templateInjected?.();\r\n    }\r\n  }\r\n\r\n  #request() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      me.#lastRef = ref;\r\n      if (ref) TemplateController.#schedule(this);\r\n    }\r\n  }\r\n\r\n  async #load() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (!ref) return;\r\n    const isTplEl = ref instanceof HTMLTemplateElement;\r\n    const template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n    if (template) {\r\n      me.#template = template;\r\n      me.#injected = true;\r\n      me.#host.requestUpdate();\r\n    }\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    const host = this.#host;\r\n    if (!host) return;\r\n    if(this.isTemplateElement) return host.src;\r\n    return host.template || host.query('template', false);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    await GSUtil.timeout(100);\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = false));\r\n    }\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle event when template slot changes\r\n */\r\nexport class SlotController {\r\n\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      const me = this;\r\n      const target = me.#host.renderRoot || me.#host;\r\n      me.#host.attachEvent(target, 'slotchange', me.#onSlotChanged.bind(me));\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    #onSlotChanged(e) {\r\n      e.target.assignedElements().forEach(el => {\r\n        el.onSlotInjected?.(e.target);\r\n      });\r\n    }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #locale;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#locale = host.locale;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#locale !== me.#host?.locale) {\r\n      me.#locale === me.#host?.locale;\r\n      me.updateLanguage(me.#locale);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#locale) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\nimport { SlotController } from './controllers/SlotController.mjs';\r\nimport { GSAttributeHandler } from './base/GSAttributeHandler.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    locale: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n  #orientation;\r\n  #localization;\r\n  #dataController;\r\n  #slotController;\r\n  #themes\r\n  #template;\r\n  #content;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.locale = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n    me.#slotController = new SlotController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('storage')) {\r\n      if (me.storage) {\r\n        if (!me.#dataController) {\r\n          me.#dataController = new DataController(me);\r\n        } else {\r\n          me.#dataController.relink();\r\n        }\r\n      } else {\r\n        me.#dataController?.hostDisconnected();\r\n        me.#dataController = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when this element injected in some slot\r\n   * @param {*} slot \r\n   */\r\n  onSlotInjected(slot) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return this.renderTemplate();\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : noChange;\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Called when asynchronnous template is injected into component\r\n   */\r\n  templateInjected() {\r\n    \r\n\t}\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to witch to add parsed CSS\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @param {boolean} isGlobal \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value, isGlobal = false) {\r\n    return this.#adopted.style(id, value, isGlobal);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @param {Number} levels - walk limit\r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '', levels = -1) {\r\n    return GSDOM.closest(this, query, levels);\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.locale, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    //return this.dataset.gsTarget;\r\n    return GSAttributeHandler.isBindable(this);\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment);\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os);\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol);\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Get instance of internal styles\r\n   */\r\n  get elementStyles() {\r\n    return this.constructor.elementStyles.map(s => Object.values(s).filter(o => o instanceof CSSStyleSheet).pop()).pop();\r\n  }\r\n\r\n  /**\r\n   * Internal shadow styles rule\r\n   * @param {*} name \r\n   * @returns \r\n   */\r\n  cssRule(name) {\r\n    return Array.from(this.elementStyles.rules).filter(r => r.selectorText === name).pop();\r\n  }\r\n\r\n  /**\r\n   * Set dynamic CSS rule \r\n   * See GSIcon hot it is done\r\n   * @param {*} rule \r\n   * @param {*} name \r\n   * @param {*} value \r\n   */\r\n  setCSSProperty(rule, name, value) {\r\n    this.cssRule(rule).style.setProperty(name, value);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, opt);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\n\r\nexport class GSAccordionElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    autoclose: { type: Boolean },\r\n    cssItem: { reflect: true, attribute: 'css-item' },\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    data: { type: Array }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.settings;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n       @notify=\"${me.#onNotify.bind(me)}\"\r\n       @click=\"${me.#onClick}\" \r\n       @keyup=\"${me.#onKeyUp}\" \r\n       class=\"accordion ${classMap(me.renderClass())}\">\r\n       ${this.#renderItems()}\r\n       <slot></slot></div>`\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-accordion-item');\r\n  }\r\n\r\n  get settings() {\r\n    const cfg = this.constructor.properties;\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n  }\r\n\r\n  close() {\r\n    this.#state(false);\r\n  }\r\n\r\n  open() {\r\n    this.#state(true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-accordion-item generated\r\n        .opened=\"${ifDefined(o.disabled === true)}\" \r\n        message=\"${ifDefined(o.message)}\" \r\n        template=\"${ifDefined(o.template)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-accordion-item>`;\r\n    });\r\n  }\r\n\r\n  #state(val = false) {\r\n    this.items.forEach(el => el.opened = val);\r\n    this.notify();\r\n  }\r\n\r\n  #onNotify(e) {\r\n    const me = this;\r\n    if (me.autoclose && e.target.opened) {\r\n      me.items.filter(el => el != e.target).forEach(el => el.opened = false);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const isItemCloser = e?.composedPath()[0]?.matches('.accordion-button');\r\n    if(isItemCloser) e.target.toggle?.();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        e.target.close?.();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.target.open?.();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSAccordionItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    message: { reflect: true, },\r\n    title: { reflect: true, },\r\n    opened: { type: Boolean, reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-ACCORDION';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const owner = me.owner;\r\n    const cssHeader = me.cssHeader || owner?.cssHeader;\r\n    const cssBody = me.cssBody || owner?.cssBody;\r\n    return html`<div class=\"accordion-item ${me.css}\">\r\n             <h2 class=\"accordion-header\">\r\n               <button type=\"button\" \r\n                class=\"accordion-button  ${cssHeader} ${me.opened ? '' : 'collapsed'}\"> \r\n                 ${me.translate(me.title)}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse  ${cssBody} ${me.opened ? 'show' : ''}\">\r\n               <div class=\"accordion-body\">\r\n                   ${me.translate(me.message)}\r\n                   ${me.renderTemplate()}\r\n                   <slot></slot>\r\n               </div>\r\n             </div>      \r\n     </div>`\r\n  }\r\n\r\n  open() {\r\n    this.notify(true);\r\n  }\r\n  \r\n  close() {\r\n    this.notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.notify(!this.opened);\r\n  }\r\n\r\n  notify(val = false) {\r\n    const me = this;\r\n    me.opened = val;\r\n    super.notify();\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-accordion') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSAlertElement extends GSElement {\r\n\r\n    static properties = {\r\n        message: { reflect: true },\r\n        color: { ...color },\r\n        closed: { reflect: true, type: Boolean },\r\n        closable: { reflect: true, type: Boolean },\r\n        delay: { reflect: true, type: Number },\r\n    }\r\n\r\n    #ref;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.delay = 1;\r\n        this.#ref = createRef();\r\n        this.#data = this.#proxify(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div role=\"alert\" dir=\"${ifDefined(me.direction)}\" ${ref(me.#ref)} \r\n            @mouseover=\"${() => me.#pause = true}\"\r\n            @mouseout=\"${() => me.#pause = false}\"\r\n            class=\"alert fade ${classMap(me.renderClass())}\" >\r\n            ${me.#first}\r\n            ${me.renderTemplate()}\r\n            <slot></slot>\r\n            ${me.#second}\r\n        </div>`;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#handleBillboard();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        if (!changed.has('opened')) return;\r\n        this.#handleBillboard();\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': !me.closed,\r\n            'alert-dismissible': me.closable,\r\n            [`alert-${this.color}`]: me.color,\r\n\r\n        }\r\n        return css;\r\n    }\r\n\r\n    open() {\r\n        this.notify(false);\r\n    }\r\n\r\n    close() {\r\n        this.notify(true);\r\n    }\r\n\r\n    toggle() {\r\n        this.notify(!this.closed);\r\n    }\r\n\r\n    notify(val = false) {\r\n        const me = this;\r\n        me.closed = val;\r\n        if (me.closed) setTimeout(() => { me.#ref.value.classList.toggle('d-none', true) }, 250);\r\n        super.notify();\r\n    }\r\n\r\n    get isBillboard() {\r\n        return this.#data?.length > 0;\r\n    }\r\n\r\n    get #message() {\r\n        return this.translate(this.message);\r\n    }\r\n\r\n    get #first() { return this.rtl ? this.#button : this.#message; };\r\n\r\n    get #second() { return this.rtl ? this.#message : this.#button; };\r\n\r\n    get #button() {\r\n        return this.closable ? html`<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"${this.close}\"></button>` : '';\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, {message:{}}));\r\n    }\r\n\r\n    #handleBillboard() {\r\n        const me = this;\r\n        if (me.closed) {\r\n            clearInterval(me.#interval);\r\n            me.#interval = 0;\r\n        } else {\r\n            me.#billboard();\r\n        }        \r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        if (!me.isBillboard) return;\r\n        const items = me.#data;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].message;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].message;\r\n        }, me.delay * 1000);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-alert');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, size, buttonType, ButtonTypes, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSButtonElement extends GSElement {\r\n\r\n  static properties = {\r\n    type: { ...buttonType }, // reset, submit\r\n    size: { ...size }, // small, large, normal\r\n    color: { ...color },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    toggleColor: { ...color, attribute : 'toggle-color' },\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    outline: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    toggling: { type: Boolean },\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    text: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'button';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<button part=\"button\" role=\"button\" ${ref(me.#refEl)}\r\n        dir=\"${ifDefined(me.direction)}\"\r\n        type=\"${ifDefined(me.type)}\" \r\n        class=\"btn ${classMap(me.renderClass())}\" \r\n        title=\"${ifDefined(me.#tooltip)}\"\r\n        ?disabled=${me.disabled}\r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"\r\n        @click=\"${me.#onClick}\">\r\n          ${me.#first} ${me.#second}</button>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n      'focus-ring': document.activeElement === me,\r\n      [`text-${me.text}`]: me.text,\r\n      [`btn-${size}`]: size,\r\n      [`btn-outline-${me.color}`]: me.outline,\r\n      [`btn-${me.color}`]: !me.outline && me.color,\r\n      [`btn-${me.toggleColor}`]: me.active && me.toggleColor,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    if(me.toggling) me.toggle();\r\n    me.iconEl?.animate();\r\n    if (me.isReset) return me.form?.reset();\r\n    if (me.isSubmit) return me.form?.submit();\r\n    me.notify();\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get isReset() {\r\n    return ButtonTypes.isReest(this.type);\r\n  }\r\n\r\n  get isSubmit() {\r\n    return ButtonTypes.isSubmit(this.type);\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form, form');\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #tooltip() {\r\n    return this.translate(this.tooltip);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-button');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { unsafeHTML, classMap, html, ifDefined, css } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\n\r\nexport class GSCalendarElement extends GSElement {\r\n\r\n  static style = css`.year::-webkit-outer-spin-button,.year::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;} .year {-moz-appearance: textfield;} .day:focus{font-weight: bold;}`\r\n\r\n  static properties = {\r\n    date: {},\r\n    target: {},\r\n    format: { hasChanged: notEmpty },\r\n    year: { type: Number },\r\n    month: { type: Number, hasChanged: numGE0 },\r\n    day: { type: Number, hasChanged: numGE0 },\r\n    arrovPrev: { attribute: 'arrow-prev' },\r\n    arrowNext: { attribute: 'arrow-next' },\r\n    cssDays: { attribute: 'css-days' },\r\n    cssToday: { attribute: 'css-today' },\r\n    cssWeeks: { attribute: 'css-weeks' },\r\n    cssMonth: { attribute: 'css-month' },\r\n    cssYear: { attribute: 'css-year' },\r\n    cssNav: { attribute: 'css-nav' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    minYear: { attribute: 'year-min', type: Number },\r\n    maxYear: { attribute: 'year-max', type: Number },\r\n  }\r\n\r\n  #date;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.#date = new GSDate();\r\n    me.#date.locale = GSUtil.locale;\r\n    me.locale = GSUtil.locale;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.minYear = 1900;\r\n    me.maxYear = 2100;\r\n    me.arrowPrev = '&#10094;';\r\n    me.arrowNext = '&#10095;';\r\n    me.cssNav = 'btn-light';\r\n    me.cssToday = 'btn-secondary';\r\n    me.cssSelected = 'btn-primary';\r\n    me.cssWeeks = 'fw-bold text-bg-dark';\r\n    me.cssYear = 'form-control fs-5 fw-bold border-0 text-center m-1 p-0';\r\n    me.cssMonth = 'form-control fs-3 fw-bold border-0 text-center m-1 p-0';\r\n  }\r\n\r\n  get date() {\r\n    const me = this;\r\n    //return this.#date.toISOString();\r\n    return new Proxy(this.#date, {\r\n      set(target, prop, value) {\r\n        if (typeof target[prop] != 'function') {\r\n          target[prop] = value;\r\n          me.#update();\r\n        }\r\n        return true;\r\n      },\r\n      get(target, prop, receiver) {\r\n        const value = target[prop];\r\n        if (value instanceof Function) {\r\n          return function (...args) {\r\n            try {\r\n              return value.apply(this === receiver ? target : this, args);\r\n            } finally {\r\n              me.#update();\r\n            }\r\n          };\r\n        }\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  previousMonth() {\r\n    const me  =this;\r\n    if (me.month == 0) {\r\n      me.month = 11;\r\n      me.year--;\r\n    } else {\r\n      me.month--;\r\n    }\r\n  }\r\n\r\n  nextMonth() {\r\n    const me  =this;\r\n    if (me.month == 11) {\r\n      me.month = 0;\r\n      me.year++;\r\n    } else {\r\n      me.month++;\r\n    } \r\n  }\r\n\r\n  previousYear() {\r\n    this.year--;\r\n  }\r\n\r\n  nextYear() {\r\n    this.year++;\r\n  }\r\n\r\n  formatted(date) {\r\n    const me = this;\r\n    return (date || me.#date).format(me.format, me.locale);\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    const date = new GSDate(me.#date);\r\n    me.#updateTarget(date);\r\n    me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#date.year = me.year;\r\n    me.#date.month = me.month;\r\n    me.#date.day = me.day;\r\n    me.#date.locale = me.locale;\r\n\r\n    const week = GSDate.dayList(true, me.locale).map(v => html`<div class=\"col\">${v}</div>`);\r\n    const months = me.#monthsHTML();\r\n    const year = me.#yearHTML();\r\n\r\n    return html`\r\n          <div class=\"container-fluid text-center ${classMap(me.renderClass())}\"\r\n          dir=\"${ifDefined(me.direction)}\"\r\n          @keydown=\"${me.#onKey}\"\r\n          @click=\"${me.#onDay}\">\r\n          <div class=\"row align-items-center ${me.cssHeader} header\">\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.previousMonth}\" class=\"btn ${me.cssNav} arrow prev\">${unsafeHTML(me.arrowPrev)}</a>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  ${months}\r\n                  ${year}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.nextMonth}\" class=\"btn ${me.cssNav} arrow next\">${unsafeHTML(me.arrowNext)}</a>\r\n              </div>\r\n          </div>\r\n          <div class=\"row weeks ${me.cssWeeks}\">${week}</div>\r\n          ${unsafeHTML(me.#daysHTML())}\r\n      </div>`;\r\n  }\r\n\r\n  #updateTarget(date) {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    const tgt = GSDOM.query(document.documentElement, me.target);\r\n    if (!tgt) return;\r\n\r\n    if (tgt instanceof HTMLInputElement) {\r\n      if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n      return tgt.value = me.formatted(date);\r\n    }\r\n    GSDOM.setHTML(tgt, me.formatted(date));\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.locale = me.#date.locale;\r\n  }\r\n\r\n  #isToday(v, date) {\r\n    const me = this;\r\n    return v && GSUtil.asNum(v) === date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n  }\r\n\r\n  #daysHTML() {\r\n    const me = this;\r\n    const today = new GSDate();\r\n    today.locale = me.locale;\r\n    const list = me.#date.build(me.locale);\r\n    const result = list\r\n      .map(v => {\r\n        const c1 = me.#isToday(v, today) ? me.cssToday : '';\r\n        const c2 = me.#isToday(v, me.#date) ? me.cssSelected : '';\r\n\r\n        const d = v ? `<a tabindex=\"0\" href=\"#\" class=\"btn shadow-none ${c1} ${c2} day\" data-day=\"${v}\">${v}</a>` : ''\r\n        return `<div class=\"col p-0\">${d}</div>`;\r\n      })\r\n      .map((v, i) => {\r\n        if (i === 0) return `<div class=\"row days\">${v}`;\r\n        const isBreak = i % 7 == 0;\r\n        return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n      });\r\n    result.push('</div>');\r\n    return result.join('');\r\n  }\r\n\r\n\r\n  #monthsHTML() {\r\n    const me = this;\r\n    const current = me.#date.MMMM;\r\n    const months = GSDate.monthList(false, me.locale);\r\n    const list = months.map((v, i) => html`<option value=\"${i}\" selected=${ifDefined(current == v ? true : undefined)}>${v}</option>`);\r\n    //const list = GSDate.monthList(false, me.locale).map((v, i) => html`<option value=\"${i}\" ${current == v ? 'selected' : ''}>${v}</option>`);\r\n    return html`<select @change=\"${me.#onMonth}\" name=\"month\" class=\"month ${me.cssMonth}\" value=\"${months.indexOf(current)}\">${list}</select>`;\r\n  }\r\n\r\n  #yearHTML() {\r\n    const me = this;\r\n    return html`<input @change=\"${me.#onYear}\" name=\"year\" class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n  }\r\n\r\n  #onDay(e) {\r\n    GSEvents.prevent(e);\r\n    if (!e.target.classList.contains('day')) return;\r\n    this.day = GSUtil.asNum(e.target.dataset.day, this.day);\r\n  }\r\n\r\n  #onMonth(e) {\r\n    this.month = e.target.selectedIndex;\r\n  }\r\n\r\n  #onYear(e) {\r\n    this.year = e.target.value;\r\n  }\r\n\r\n  #onKey(e) {\r\n    console.log(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-calendar');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCardElement extends GSElement {\r\n\r\n  static styles = css`.card-header, .card-footer{ background-color: inherit; color: inherit;}`;\r\n\r\n  static properties = {\r\n\r\n    imageStyle: { type: Object, attribute: 'image-style', reflect : true },\r\n\r\n    overlay: { type: Boolean },\r\n    placement: { ...placement },\r\n    align: { ...placement },\r\n\r\n    image: {},\r\n    title: {},\r\n    subtitle: {},\r\n    text: {},\r\n    footer: {},\r\n    header: {},\r\n\r\n    colorText: { attribute: 'color-text' },\r\n    colorBack: { attribute: 'color-back' },\r\n    colorBorder: { attribute: 'color-border' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssSubtitle: { attribute: 'css-subtitle' },\r\n    cssText: { attribute: 'css-text' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssImage: { attribute: 'css-image' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.border = false;\r\n    this.shadow = false;\r\n    this.align = 'start';\r\n    this.placement = 'top';\r\n    this.imageStyle = this.imageStyle || {};\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const content =  me.isVertical ? me.#renderVertical() : me.#renderHorizontal();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"card ${classMap(me.renderClass())}\">${content}</div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return [me.#imageTop, me.#header, me.#body, me.#footer, me.#imageBottom];\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    const start = PlacementTypes.isBefore(me.placement);\r\n    const startClass = start ? 'col-4' : 'col-8';\r\n    const endClass = start ? 'col-8' : 'col-4';\r\n    const startHtml = start ? me.#images : me.#body;\r\n    const endHtml =  start ? me.#body : me.#images;\r\n    return html`<div class=\"row g-0\">\r\n        <div class=\"${startClass}\">\r\n            ${startHtml}\r\n        </div>\r\n        <div class=\"${endClass}\">\r\n          ${endHtml}\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      border: me.border || me.colorBorder,\r\n      [`text-${me.align}`]: me.align,\r\n      [`text-${me.colorText}`]: me.colorText,\r\n      [`bg-${me.colorBack}`]: me.colorBack,\r\n      [`border-${me.colorBorder}`]: me.colorBorder,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return PlacementTypes.isHorizontal(this.placement);\r\n  }\r\n\r\n  get #body() {\r\n    const me = this;\r\n    return html`<div class=\"${me.overlay ? 'card-img-overlay' : 'card-body'} ${me.cssBody}\">\r\n      <h5 class=\"card-title  ${me.cssTitle}\"><slot name=\"title\">${me.translate(me.title)}</slot></h5>\r\n      <h6 class=\"card-subtitle  ${me.cssSubtitle}\"><slot name=\"subtitle\">${me.translate(me.subtitle)}</slot></h6>\r\n      <p class=\"card-text ${me.cssText}\"><slot name=\"text\">${me.translate(me.text)}</slot></p>\r\n      <slot name=\"body\"></slot>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  get #header() {\r\n    return this.overlay ? '' : html`<div class=\"card-header  ${this.cssHeader}\"><slot name=\"header\">${this.header}</slot></div>`;\r\n  }\r\n\r\n  get #footer() {\r\n    return this.overlay ? '' : html`<div class=\"card-footer ${this.cssFooter}\"><slot name=\"footer\">${this.footer}</slot></div>`;\r\n  }\r\n\r\n  get #imageSlot() {\r\n    return html`<slot name=\"image\"></slot>`;\r\n  }\r\n\r\n  get #image() {\r\n    const me = this;\r\n    const css = me.isHorizontal ? 'img-fluid' : 'card-img';\r\n    me.dynamicStyle(me.#styleID, me.imageStyle);\r\n    return html`<img src=\"${me.image}\" class=\"rounded-${me.placement} ${css} ${me.cssImage} ${me.#styleID}\" alt=\"...\">`;\r\n  }\r\n\r\n  get #images() {\r\n    return this.image ? this.#image : this.#imageSlot;\r\n  }\r\n\r\n  get #imageTop() {\r\n    return this.placement === 'top' ? this.#images : '';\r\n  }\r\n\r\n  get #imageBottom() {\r\n    return this.placement === 'bottom' ? this.#images : '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-card');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSCenterElement extends GSElement {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n      class=\"position-absolute top-50 start-50 translate-middle ${classMap(me.renderClass())}\">\r\n    ${me.renderTemplate()}<slot></slot></div>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-center');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenuElement class\r\n * @module components/GSMenuElement\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSMenuElement extends GSElement {\r\n\r\n    static properties = {\r\n        storage: {},\r\n        auto: { type: Boolean, reflect: true },\r\n        opened: { type: Boolean, reflect: true },\r\n        dark: { type: Boolean },\r\n        reverse: { type: Boolean },\r\n        data: { type: Array },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {},\r\n        title: {},\r\n        header: {},\r\n        color: {},\r\n        icon: {},\r\n        url: { default: '#' }\r\n    }\r\n\r\n    #menuRef = createRef();\r\n    #styleID = GSID.id;\r\n    #controller = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.dynamicStyle(me.#styleID);\r\n        me.data = me.#proxify(me);\r\n        me.#controller = new GroupController(this);\r\n    }\r\n\r\n    onBusEvent(e) {\r\n       if (e.detail.owner != this) {\r\n            this.opened = false;\r\n       }\r\n     }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        if (changed.has('opened') && !this.opened) {\r\n            this.#closeSubmenus();\r\n        }\r\n    }\r\n\r\n    updated() {\r\n        this.#updatePosition();\r\n        if (this.opened) {\r\n            this.#controller.notify();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<ul \r\n            ${ref(me.#menuRef)}\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            class=\"dropdown-menu ${classMap(me.renderClass())}\"\r\n            data-gs-class=\"${me.#styleID}\"\r\n            data-menu=\"true\"\r\n            @mouseover=\"${me.#onMouseOver}\"\r\n            @mouseleave=\"${me.#onMouseLeave}\"\r\n            @keydown=\"${me.#onKeyDown}\"\r\n            @click=\"${me.#onClick}\">\r\n            ${me.#items(me.data)}\r\n        </ul>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'submenu': me.dataset.submenu,\r\n            'dropdown-menu-dark': me.dark,\r\n            [me.#styleID]: true,\r\n            'show': me.opened,\r\n            'dropend': !me.reverse,\r\n            'dropstart': me.reverse,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    /**\r\n     * Show at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {HTMLElement} caller\r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n\r\n        const me = this;\r\n        let target = caller;\r\n\r\n        if (GSEvents.isMouseOrPointerEvent(x)) {\r\n            const e = x;\r\n            target = e.target;\r\n            y = e.clientY;\r\n            x = e.clientX;\r\n            let offset = GSDOM.offsetParent(me);\r\n            offset = offset ? offset.getBoundingClientRect() : null;\r\n            x = x - (offset?.left || 0);\r\n            y = y - (offset?.top || 0);\r\n        }\r\n\r\n        const cfg = { clientX: x, clientY: y, target: target };\r\n\r\n        requestAnimationFrame(() => {\r\n            const style = {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                left: '0px',\r\n                translate: `${cfg.clientX}px ${cfg.clientY}px`\r\n            };\r\n            const rule = me.dynamicStyle(me.#styleID);\r\n            Object.assign(rule.style, style);\r\n        });\r\n        me.open();\r\n\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    #items(root) {\r\n        const me = this;\r\n        return root.map(el => me.#item(el));\r\n    }\r\n\r\n    #item(el) {\r\n        const me = this;\r\n        const isSub = el.items?.length > 0;\r\n        if (isSub) return me.#renderSubmenu(el);\r\n        if (!(el.header || el.name)) return me.#renderDivider();\r\n        return el.header ? me.#renderHeader(el) : me.#renderMenu(el);\r\n    }\r\n\r\n    #renderHeader(el) {\r\n        return html`<li data-inert=\"true\"><h6 class=\"dropdown-header\">${this.#renderIcon(el)}${el.header}</h6></li>`;\r\n    }\r\n\r\n    #renderDivider() {\r\n        return html`<li data-inert=\"true\"><hr class=\"dropdown-divider\"></li>`;\r\n    }\r\n\r\n    #renderSubmenu(el) {\r\n        const me = this;\r\n        return html`<li>\r\n            <a class=\"dropdown-item dropdown-toggle\" data-toggle=\"true\" href=\"#\">\r\n                <div class=\"d-inline-block w-100\">${me.#renderIcon(el)}${el.name}</div>\r\n            </a>\r\n            <gs-menu auto \r\n                .data=${el.items} \r\n                ?dark=${me.dark} \r\n                ?reverse=\"${me.reverse}\" \r\n                locale=\"${ifDefined(me.locale)}\" \r\n                data-submenu=\"true\">\r\n            </gs-menu>\r\n        </li>`;\r\n    }\r\n\r\n    #renderIcon(el) {\r\n        return el.icon ? html`<gs-icon css=\"mx-1\" name=\"${el.icon}\"></gs-icon>` : '';\r\n    }\r\n\r\n    #renderMenu(el) {\r\n        return html`<li>\r\n                <gs-button css=\"dropdown-item shadow-none\" \r\n                    ${dataset(el, false)}\r\n                    url=\"${el.url}\"\r\n                    title=\"${el.name}\" \r\n                    locale=\"${ifDefined(this.locale)}\" \r\n                    icon=\"${ifDefined(el.icon)}\" \r\n                    text=\"${ifDefined(el.color)}\"\r\n                    data-gs-target=\"${ifDefined(el.target || 'self')}\"\r\n                    data-gs-action=\"${ifDefined(el.action)}\">\r\n                </gs-button></li>`;\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSMenuElement.options));\r\n    }\r\n\r\n    #closeSubmenus(menu) {\r\n        GSDOM.queryAll(this.renderRoot, 'gs-menu', false, false)\r\n            .filter(el => el != menu)\r\n            .forEach(el => el.close());\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.key) {\r\n            case 'Escape':\r\n                me.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        submenu?.close();\r\n        if (me.auto) me.close();\r\n    }\r\n\r\n    #onMouseLeave(e) {\r\n        GSEvents.prevent(e);\r\n        if (this.auto) this.close();\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        me.#closeSubmenus(submenu);\r\n        submenu?.open();\r\n    }\r\n\r\n    #toSubmenu(e) {\r\n        const menuItem = e.target.closest('li');\r\n        return menuItem?.querySelector('gs-menu');\r\n    }\r\n\r\n    #updatePosition() {\r\n        const me = this;\r\n        if (!me.opened) return;\r\n        const rule = me.dynamicStyle(me.#styleID);\r\n        if (me.isSubmenu) {\r\n            const opt = { translate: `0px -25px` };\r\n            if (me.reverse) {\r\n                opt.left = 'inherited';\r\n                opt.right = '100%';\r\n            } else {\r\n                opt.right = 'inherited';\r\n                opt.left = '100%';\r\n            }\r\n            Object.assign(rule.style, opt);\r\n        } else {\r\n            rule.style.translate = null;\r\n            const rect = me.#menu.getBoundingClientRect();\r\n            const offset = window.innerWidth - rect.right;\r\n            me.reverse = offset - 5 < 0;\r\n            if (me.reverse) rule.style.translate = `${offset - 2}px`;\r\n        }\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.dataset.submenu;\r\n    }\r\n\r\n    get #menu() {\r\n        return this.#menuRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-menu');\r\n    }\r\n}\r\n","/*GSContextElement\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContextElement class\r\n * @module components/GSContextElement\r\n */\r\n\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSContextElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        target: {},\r\n        filter: {},\r\n        altContext: { type: Boolean },\r\n        disabled: { type: Boolean },\r\n    }\r\n\r\n    constructor() {\r\n        super();        \r\n        this.auto = true;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', me.close.bind(me));        \r\n        if (!me.slot) me.#attachTarget();\r\n    }\r\n    \r\n    onSlotInjected(slot) {\r\n        this.#attachTarget();\r\n    }\r\n\r\n    #attachTarget() {\r\n        const me = this;        \r\n        const owner = GSDOM.parent(me.assignedSlot || me);\r\n        let targets = me.target ? GSDOM.queryAll(owner, me.target) : [owner];\r\n        if (!targets.length) targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    }\r\n\r\n    #match(e) {\r\n        const me = this;\r\n        return e.composedPath().filter(el => el.matches)\r\n            .filter(el => el.matches(me.target || me.filter));\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        if (e.shiftKey && me.altContext) return;\r\n        const list = me.#match(e);\r\n        if (list.length === 0) return;\r\n        GSEvents.prevent(e);\r\n        me.popup(e);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show submenu at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n        return this.disabled ? false : super.popup(x, y, caller);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-context');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, notEmpty } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\nexport class GSCompareElement extends GSElement {\r\n\r\n  static styles = css`.slider {\r\n         --gs-position : 50%;\r\n          left : var(--gs-position);\r\n          width: 8px;\r\n          height: 100%;\r\n          border-width: 1px;\r\n          cursor: w-resize;\r\n          border-color: darkgray;\r\n          border-style: solid;\r\n          background-color: lightgray;\r\n      }\r\n      .clipper {\r\n        --gs-position : 50%;\r\n        clip-path: inset(0px var(--gs-position) 0px 0px);\r\n      }\r\n    `;\r\n\r\n  static properties = {\r\n    background: { ...color },\r\n    width: { type: Number },\r\n    height: { type: Number },\r\n    before: { hasChanged: notEmpty },\r\n    after: { hasChanged: notEmpty },\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  #elRef = createRef();\r\n  #clipRef = createRef();\r\n  #slideRef = createRef();\r\n\r\n  #mouseController;\r\n  #elPosition;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.width = 0;\r\n    me.height = 0;\r\n    me.dynamicStyle(me.#styleID);\r\n    me.#mouseController = new ElementMoveController(me);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#mouseController.attach(this.#splitter);\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n         dir=\"${ifDefined(me.direction)}\"\r\n         @loaded=\"${me.#onLoad}\" \r\n         @dblclick=\"${me.#onDoubleClick}\"\r\n         data-gs-class=\"${me.#styleID}\"\r\n         class=\"${classMap(me.renderClass())}\">\r\n      <div class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden\"><slot name=\"before\">${me.#before}</slot></div>\r\n      <div ${ref(me.#clipRef)} class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden clipper\"><slot name=\"after\">${me.#after}</slot></div>\r\n      <div ${ref(me.#slideRef)} class=\"slider position-absolute top-0><slot name=\"control\"></slot></div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      \"position-relative\": true,\r\n      \"user-select-none\": true,\r\n      \"d-contents\": me.isAuto,\r\n      \"h-100\": me.isAuto,\r\n      \"w-100\": me.isAuto,\r\n      \"overflow-hidden\": true,\r\n      [`bg-${me.background}`]: me.background,\r\n      [`${me.#styleID}`]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Handles resizing based on mouse move event\r\n   * @param {MouseEvent} e \r\n   */\r\n  onStartMove(e) {\r\n    this.#elPosition = this.#splitter.getBoundingClientRect();\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    const me = this;\r\n    const offset = me.#elPosition.left;\r\n    const width = me.#elPosition.width;\r\n    const pos = GSUtil.range(e.clientX - offset, 0, width);\r\n    const pct = (pos / width) * 100;\r\n    me.#update(pct);\r\n  }\r\n\r\n  get isAuto() {\r\n    return this.width == 0 || this.height == 0;\r\n  }\r\n\r\n  get isFixed() {\r\n    return !this.isAuto;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  get #before() {\r\n    return this.before ? html`<img @load=\"${this.#onLoad}\" src=\"${me.before}\"></img>` : '';\r\n  }\r\n\r\n  get #after() {\r\n    return this.after ? html`<img @load=\"${this.#onLoad}\" src=\"${me.after}\"></img>` : '';\r\n  }\r\n\r\n  get #isAuto() {\r\n    return this.width === 0 || this.height === 0;\r\n  }\r\n\r\n  get #splitter() {\r\n    return this.#elRef.value;\r\n  }\r\n\r\n  get #slider() {\r\n    return this.#slideRef.value;\r\n  }\r\n\r\n  get #clip() {\r\n    return this.#clipRef.value;\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const me = this;\r\n    if (me.#isAuto) {\r\n      const el = e.target;\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n    }\r\n  }\r\n\r\n  #onDoubleClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#update();\r\n    me.#mouseController.reset();\r\n  }\r\n\r\n  #update(pct = 50) {\r\n    const me = this;\r\n    me.#clip.style.setProperty('--gs-position', `${100 - pct}%`);\r\n    me.#slider.style.setProperty('--gs-position', `${pct}%`);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-compare');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\n\r\n/**\r\n * Helper component to enable controller attachment to the GS WebComponent.\r\n * It is used to simplify and separate templates from logic.\r\n */\r\nexport class GSControllerElement extends GSElement {\r\n\r\n  static properties = {\r\n    module: {},\r\n    controller: {},\r\n  }\r\n\r\n  #clazz = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  updated(changes) {\r\n    super.updated(changes);\r\n    const me = this;\r\n    if (me.isConnected && me.isValid) {\r\n      me.#initialize();\r\n    }\r\n  }\r\n\r\n  get isValid() {\r\n    return this.parentElement instanceof GSElement;\r\n  }\r\n\r\n  async #initialize() {\r\n\r\n    const me = this;\r\n    const host = me.parentElement;\r\n\r\n    if (me.#clazz) return;\r\n\r\n    let clazz = globalThis[me.controller];\r\n    if (!clazz && me.module) {\r\n      const url = GSLoader.normalizeURL(me.module);\r\n      const module = await import(url);\r\n      clazz = module[me.controller];\r\n    }\r\n\r\n    if (clazz) {\r\n      new clazz(host);\r\n      me.#clazz = clazz;\r\n      globalThis[me.controller] = clazz;\r\n    }\r\n\r\n  }\r\n\r\n  static {\r\n    this.define('gs-controller');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSCopyrightElement extends GSElement {\r\n\r\n  static properties = {\r\n    year: { reflect: true, type: Number },\r\n    company: { reflect: true },\r\n    url: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    if (!(me.isCompany && me.isYear)) return '';\r\n    const year = new Date().getFullYear();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"${classMap(me.renderClass())}\"><a target=\"_blank\" href=\"${me.url ? me.url : '#'}\"><small>&copy; ${me.company} ${me.year}. - ${year}.</small></a></div>`;\r\n  }\r\n\r\n  get isCompany() {\r\n    return GSUtil.isStringNonEmpty(this.company);\r\n  }\r\n\r\n  get isYear() {\r\n    return GSUtil.isStringNonEmpty(this.year);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-copyright');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSFunction } from '../base/GSFunction.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/verificator.mjs';\r\nimport { GSReadWriteRegistry } from '../data/ReadWriteRegistry.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for easier access to the GSReadWrite/GSTreeReader\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSDataHandler extends GSElement {\r\n\r\n    static properties = {\r\n        storage: { state: true },\r\n        src: { reflect: true },\r\n        action: { reflect: true },\r\n        mode: { reflect: true },\r\n        reader: { reflect: true },\r\n        writer: { reflect: true },\r\n        limit: { type: Number, reflect: true },\r\n        skip: { type: Number, reflect: true },\r\n        filter: { type: Array, reflect: true },\r\n        sort: { type: Array, reflect: true },\r\n        type: {},\r\n        autoload: { type: Boolean },\r\n        autorefresh: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    }\r\n\r\n    #iid = 0;\r\n    #config = null;\r\n    #handler = null;\r\n    #lifoReadRef = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        if (!me.id) throw new Error('Element ID is required attribute!');\r\n        GSItem.validate(me, me.tagName);\r\n        me.autorefresh = 0;\r\n        me.autoload = false;\r\n        me.flat = true;\r\n        me.filter = [];\r\n        me.sort = [];\r\n        me.limit = 0;\r\n        me.skip = 0;\r\n        me.type = 'remote';\r\n        me.mode = 'query';\r\n        me.reader = 'GET';\r\n        me.writer = 'POST';\r\n        me.storage = me.id;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#initLIFO();\r\n        me.#config = GSItem.proxify(me, GSData.PROPERTIES);\r\n        me.#handler = GSReadWriteRegistry.newHandler(me.type, me.id, false);\r\n        if (me.#config?.length > 0) me.#handler?.addProcessor(me);\r\n        me.#handler?.enable();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#handler?.disable();\r\n        this.#handler?.removeProcessor(this);\r\n        this.#lifoReadRef = null;\r\n        clearTimeout(this.#iid);\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.dataController?.read();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        const me = this;\r\n        me.#updateHandler();\r\n        if (changed.has('autorefresh')) me.schedule(me.autorefresh);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.formatSort(me.sort);\r\n        me.#handler.filter = me.formatFilter(me.filter);\r\n        if (me.autoload) me.read();\r\n    }\r\n\r\n    get isDebug() {\r\n        return this.dataset.gsDebug;\r\n    }\r\n\r\n    get handler() {\r\n        return this.#handler;\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    set search(val) {\r\n        if (this.#handler) this.#handler.search = val;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    formatFilter(val) {\r\n        val = this.#formated(val);\r\n        return Array.isArray(val) ? val : [];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    formatSort(val) {\r\n        val = this.#formated(val);\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort || [];\r\n    }\r\n\r\n    schedule(time = 0) {\r\n        const me = this;\r\n        time = GSUtil.asNum(time) * 1000;\r\n        clearInterval(me.#iid);\r\n        if (time > 0) me.#iid = setInterval(() => {\r\n            me.read(me);\r\n        }, time);\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data) {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        me.#handler?.write(me, data);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onDataRead(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data Read: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onDataWrite(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data write: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Process data after receive, before notifying \r\n     * @param {*} data \r\n     */\r\n    postRead(data) {\r\n        const me = this;\r\n        if (!Array.isArray(data)) data = [data];\r\n        data.forEach(r => {\r\n            me.#config.forEach(c => {\r\n                let val = r[c.name];\r\n                if (!GSUtil.isNull(val)) {\r\n                    val = GSData.format(c, val);\r\n                    r[c.name] = val;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onDataError(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data error: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #initLIFO() {\r\n        const me = this;\r\n        me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO();\r\n        return me.#lifoRead();\r\n    }\r\n\r\n    #lifoRead() {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        return me.#handler?.read(me);\r\n    }\r\n\r\n    #formated(val) {\r\n        return GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-data-handler');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSDialogElement extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n  static ALIGN = 'end';\r\n  static CANCEL = 'Cancel';\r\n  static CONFIRM = 'Ok';\r\n\r\n  static #STACK = [];\r\n\r\n  static styles = css`dialog{outline:none;}dialog::backdrop{backdrop-filter: blur(4px);}`;\r\n\r\n  static properties = {\r\n\r\n    standard: { reflect: true, type: Boolean },\r\n    opened: { reflect: true, type: Boolean },\r\n    cancelable: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    escapable: { reflect: true, type: Boolean },\r\n    disabled: { reflect: true, type: Boolean },\r\n\r\n\r\n    title: { reflect: true },\r\n    message: { reflect: true },\r\n    cancelText: { reflect: true, },\r\n    confirmText: { reflect: true, },\r\n\r\n    minWidth: { reflect: true, type: Number, attribute: 'min-width' },\r\n    buttonAlign: { reflect: true, attribute: 'button-align' },\r\n\r\n    iconCancel: { reflect: true, attribute: 'icon-cancel' },\r\n    iconConfirm: { reflect: true, attribute: 'icon-confirm' },\r\n\r\n    colorCancel: { attribute: 'color-cancel' },\r\n    colorConfirm: { attribute: 'color-confirm' },\r\n\r\n    cssCancel: { attribute: 'css-cancel' },\r\n    cssConfirm: { attribute: 'css-confirm' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssContent: { attribute: 'css-content' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #dialogRef = createRef();\r\n  #btnConfirmRef = createRef();\r\n  #btnCancelRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    const clazz = GSDialogElement;\r\n    me.opened = false;\r\n    me.standard = false;\r\n    me.cancelable = false;\r\n    me.closable = false;\r\n    me.escapable = false;\r\n    me.disabled = false;\r\n    me.shadow = false;\r\n    me.rounded = false;\r\n\r\n    me.minWidth = 0;\r\n    me.css = clazz.CSS;\r\n    me.cssTitle = clazz.TITLE_CSS;\r\n    me.cssHeader = clazz.HEADER_CSS;\r\n    me.buttonAlign = clazz.ALIGN;\r\n    me.cancelText = clazz.CANCEL;\r\n    me.confirmText = clazz.CONFIRM;\r\n    me.colorCancel = 'secondary';\r\n    me.colorConfirm = 'primary';\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialogElement.#updateStack();\r\n  }\r\n\r\n  updated(changed) {\r\n    super.updated(changed);\r\n    const me = this;\r\n    if (me.opened) {\r\n      GSDialogElement.#STACK.push(me);\r\n      if (me.standard) {\r\n        me.#dialog?.open();\r\n      } else {\r\n        me.#dialog?.showModal();\r\n      }\r\n      me.#focusable()?.focus();\r\n    } else {\r\n      GSDialogElement.#STACK.pop();\r\n      me.#dialog?.close();\r\n    }\r\n    me.notify();\r\n  }\r\n\r\n  #renderConfirm() {\r\n    const me = this;\r\n    if (!me.closable) return '';\r\n    return html`<gs-button  ${ref(me.#btnConfirmRef)} \r\n      @click=\"${me.#onConfirm.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconConfirm)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      .disabled=\"${me.disabled}\"  \r\n      css=\"${ifDefined(me.cssConfirm)}\" \r\n      color=\"${ifDefined(me.colorConfirm)}\" \r\n      title=\"${me.confirmText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderCancel() {\r\n    const me = this;\r\n    if (!me.cancelable) return '';\r\n    return html`<gs-button ${ref(me.#btnCancelRef)}\r\n      @click=\"${me.#onCancel.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconCancel)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      css=\"${ifDefined(me.cssCancel)}\" \r\n      color=\"${ifDefined(me.colorCancel)}\" \r\n      title=\"${me.cancelText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderFooter() {\r\n    const me = this;\r\n    const isFooter = me.cancelable || me.closable;\r\n    if (!isFooter) return '';\r\n    return html`<div class=\"card-footer d-flex user-select-none justify-content-${me.buttonAlign} ${me.cssFooter}\">\r\n      ${me.#renderCancel()} &nbsp;${me.#renderConfirm()}\r\n      </div>`;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const styles = { 'min-width': me.minWidth > 0 ? `${me.minWidth}px` : undefined };\r\n    me.dynamicStyle(me.#styleID, styles);\r\n    return html`\r\n        <dialog tabindex=\"-1\" ${ref(me.#dialogRef)} \r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @close=\"${me.#onCancel.bind(me)}\"\r\n            @cancel=\"${me.#onCancel.bind(me)}\"\r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @form=\"${me.#onForm.bind(me)}\"\r\n            @submit=\"${me.#onSubmit.bind(me)}\"\r\n            class=\"${classMap(me.renderClass())}\">\r\n            <div class=\"card ${me.cssContent}\">\r\n                <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n                  <div class=\"card-title ${me.cssTitle}\">\r\n                    <slot name=\"title\">${me.translate(me.title)}</slot>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body ${me.cssBody}\">\r\n                  <slot name=\"body\">\r\n                  ${me.translate(me.message)}\r\n                  ${me.renderTemplate()}\r\n                  </slot>\r\n                </div>\r\n                ${me.#renderFooter()}\r\n            </div>\r\n            <slot name=\"extra\"></slot>\r\n            <div class=\"toast-container position-fixed\"></slot></div>\r\n        </dialog>`\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'dialog': true,\r\n      'p-0': true,\r\n      'border-0': true,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.closable = closable;\r\n    me.cancelable = cancelable;\r\n    me.escapable = cancelable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('click-action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    return this.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    return this.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    index = GSUtil.asNum(index, 0);\r\n    const me = this;\r\n    me.forms?.forEach?.(f => { f.reset(); f.values = data; });\r\n    const tab = me.tab;\r\n    if (tab && index > -1) tab.index = index;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  get form() {\r\n    return this.query('gs-form', true);\r\n  }\r\n\r\n  get forms() {\r\n    return this.queryAll('gs-form', true);\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('gs-tab', true);\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.#dialogRef.value;\r\n  }\r\n\r\n  get #btnConfirm() {\r\n    return this.#btnConfirmRef.value;\r\n  }\r\n\r\n  get #btnCancel() {\r\n    return this.#btnCancelRef.value;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  #focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#btnCancel;\r\n    if (me.closable) return me.#btnConfirm;\r\n    return me;\r\n  }\r\n\r\n  async #onConfirm(e) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const ret = await Promise.all(me.forms?.map?.(form => form.submit()));\r\n    if (ret.indexOf(false) < 0) me.close();\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.close();\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle injected form events\r\n   * @param {*} e \r\n   */\r\n  #onForm(e) {\r\n    let  sts = true;\r\n    const me = this;\r\n    const data = e.detail;\r\n    switch (data.type) {\r\n      case 'submit':\r\n        sts = me.emit('data', data.data, false, false, true);\r\n        if (!sts) GSEvents.prevent(e);\r\n        //me.opened = false;\r\n        break;\r\n      case 'valid':\r\n        me.disabled = data.data === false;     \r\n        break;\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  #onSubmit(e) {\r\n    debugger;\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialogElement.#STACK = GSDialogElement.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  /**\r\n   * Return number of dialogs in a stack\r\n   */\r\n  static get size() {\r\n    return GSDialogElement.#STACK.length;\r\n  }\r\n\r\n  static get top() {\r\n    GSDialogElement.#updateStack();\r\n    const size = GSDialogElement.size;\r\n    return size === 0 ? null :  GSDialogElement.#STACK[size - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialogElement.#updateStack();\r\n    return Array.from(GSDialogElement.#STACK);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-dialog');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, unsafeHTML, html, ifDefined } from '../lib.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSDrawerElement extends GSElement {\r\n\r\n  static properties = {\r\n    autoclose: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    backdrop: { reflect: true, type: Boolean },\r\n    expanded: { reflect: true, type: Boolean },\r\n    scroll: { reflect: true, type: Boolean },\r\n\r\n    min: { reflect: true, type: Number},\r\n    max: { reflect: true},\r\n    fingers: { reflect: true, type: Number},\r\n    placement: {...placement},\r\n    \r\n    transition: { reflect: true },\r\n    duration: { reflect: true, type: Number },\r\n\r\n    title: { reflect: true},\r\n\r\n    cssTitle: { reflect: true, attribute: \"css-title\"},\r\n    cssHead: { reflect: true, attribute: \"css-head\" },\r\n    cssBody: { reflect: true, attribute: \"css-body\" },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.placement = 'start';\r\n    me.cssTitle = 'fs-5';\r\n    me.transition = 'linear';\r\n    me.duration = 0.2;\r\n    me.min = 0;\r\n    me.max = 'auto';\r\n    me.fingers = 2;\r\n    me.on('mouseleave', me.#onLeave.bind(me));\r\n    me.on('mouseenter', me.#onEnter.bind(me));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`${unsafeHTML(me.#style)}\r\n    <div tabindex=\"-1\" dir=\"${ifDefined(me.direction)}\"\r\n     class=\"offcanvas overflow-hidden anime ${classMap(me.renderClass())}\">\r\n      ${me.#header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        ${me.renderTemplate()}\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>${me.#backdrop}`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': true,\r\n      'anime-open' : me.expanded,\r\n      'anime-close' : !me.expanded,\r\n      [`offcanvas-${me.placement}`]: me.placement,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #style() {\r\n    const me = this;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    return `<style>\r\n    .anime {\r\n      transition-property: ${pos} !important;\r\n      transition-duration: ${me.duration}s  !important;\r\n      transition-timing-function: ${me.transition} !important;\r\n    }\r\n    .anime-open {\r\n        ${pos} : ${me.max}${GSUtil.isNumber(me.max) ? 'px':''} !important;\r\n    }\r\n    .anime-close {\r\n      ${pos} : ${me.min}${GSUtil.isNumber(me.min) ? 'px':''} !important;\r\n    }    \r\n    </style>`;\r\n  }\r\n\r\n  get #backdrop() {\r\n    const me = this;\r\n    if (!me.backdrop) return '';\r\n    return html`<div class=\"offcanvas-backdrop fade ${me.expanded ? 'show' : 'invisible'}\" @click=\"${me.close}\"></div>`;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    return me.closable ? html`<button type=\"button\" class=\"btn-close text-reset\" @click=\"${me.close}\"></button>` : '';\r\n  }\r\n\r\n  get #title() {\r\n    const me = this;\r\n    return me.title ? html`<div class=\"offcanvas-title ${me.cssTitle}\">${me.translate(me.title)}</div>` : '';\r\n  }\r\n\r\n  get #header() {\r\n    const me = this;\r\n    return me.#hasHeader ? html`<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${me.#title}${me.#button}</slot></div>` : '';\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  get #hasHeader() {\r\n    return this.title || this.closable || this.#headSlot;\r\n  }\r\n\r\n  #notify(val) {\r\n    const me = this;\r\n    me.expanded = val == true;\r\n    me.notify();\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  open() {\r\n    this.#notify(true);\r\n  }\r\n\r\n  close() {\r\n    this.#notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.#notify(!this.expanded);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return !this.isVertical;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-drawer');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdownElement class\r\n * @module components/GSDropdownElement\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { cssMap } from '../directives/css-map.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDropdownElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        icon: {},\r\n        text: {...color},\r\n        color: {...color},\r\n        size: {},\r\n        title: {},\r\n        tooltip: {},\r\n        group: {},\r\n        simple: {type:Boolean}\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"dropdown\"  dir=\"${ifDefined(me.direction)}\">\r\n                ${me.#renderButton()}\r\n                ${super.renderUI()}\r\n            </div>`;\r\n    }\r\n\r\n    #buttonClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'btn': true,\r\n            [`btn-${me.color}`] : me.color ? true : false,\r\n            'dropdown-toggle': !me.simple,\r\n            'shadow-none' : true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    #renderButton() {\r\n        const me = this;\r\n        return html`<gs-link css=\"${cssMap(me.#buttonClass())}\"\r\n            url=\"#\"         \r\n            icon=\"${ifDefined(me.icon)}\"\r\n            text=\"${ifDefined(me.text)}\"\r\n            size=\"${ifDefined(me.size)}\"\r\n            title=\"${ifDefined(me.title)}\"\r\n            tooltip=\"${ifDefined(me.tooltip)}\"\r\n            @notify=\"${me.toggle}\">\r\n            </gs-link>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-dropdown');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { css, html, unsafeHTML } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Safe email rendering to protect from spam bots.\r\n */\r\nexport class GSEmailElement extends GSElement {\r\n\r\n  static shadowRootOptions = { mode: 'closed' }\r\n\r\n  static style = css`.e-mail:before {\r\n    content: attr(data-website) \"\\0040\" attr(data-user);\r\n    unicode-bidi: bidi-override;\r\n    direction: rtl;\r\n    }`;\r\n\r\n  static properties = {\r\n    user: { reflect: true },\r\n    domain: { reflect: true },\r\n    dev: { type: Boolean }\r\n  }\r\n\r\n  #user;\r\n  #domain;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  willUpdate(changes) {\r\n    super.willUpdate(changes);\r\n    this.#updateUser();\r\n    this.#updateDomain()\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${unsafeHTML(this.#style)}<a @click=\"${this.#onClick}\" class=\"e-mail\" data-user=\"${this.#user}\" data-website=\"${this.#domain}\"  href=\"mailto://\"></a>`;\r\n  }\r\n\r\n  get #style() {\r\n    return '<style>.e-mail:before { content: attr(data-website) \"\\u0040\" attr(data-user); unicode-bidi: bidi-override; direction: rtl; }</style>';\r\n  }\r\n\r\n  get #url() {\r\n    return `mailto://${GSUtil.reverse(this.dataset.user)}@${GSUtil.reverse(this.dataset.domain)}`;\r\n  }\r\n\r\n  #updateUser() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.user) {\r\n      me.#user = dataset.user || GSUtil.reverse(me.user);\r\n      if (me.dev) dataset.user = me.#user;\r\n      me.user = '';\r\n    }\r\n  }\r\n\r\n  #updateDomain() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.domain) {\r\n      me.#domain = dataset.domain || GSUtil.reverse(me.domain);\r\n      if (me.dev) dataset.domain = me.#domain;\r\n      me.domain = '';\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    window.location.href = me.#url;\r\n    //window.open(me.#url, '_blank');  \r\n  }\r\n\r\n  static {\r\n    this.define('gs-email');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSFormElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    disabled: { type: Boolean },\r\n    data: { type: Object },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<form ${ref(me.#formRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      @change=\"${me.#onChange}\"\r\n      @submit=\"${me.submit}\"\r\n      @reset=\"${me.reset}\"\r\n      method=\"dialog\">\r\n      <slot></slot>\r\n    </form>`;\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    this.dataController?.read();\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    if (changed.has('disabled')) {\r\n      if (me.disabled) {\r\n        me.disable();\r\n      } else {\r\n        me.enable();\r\n      }\r\n    }\r\n    if (changed.has('data')) {\r\n      me.asJSON = me.data;\r\n    }\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  get isValid() {\r\n    return this.elements\r\n      .filter(el => GSDOM.isVisible(el))\r\n      .map(el => el.checkValidity())\r\n      .filter(v => v === false).length === 0;\r\n  }\r\n\r\n  /**\r\n  * Overide native to pickup all form elements, including ones in shadow dom\r\n  */\r\n  get elements() {\r\n    return this.queryAll('input,select,output,textarea', true);\r\n  }\r\n\r\n  get fields() {\r\n    return this.elements;\r\n  }\r\n\r\n  get inputs() {\r\n    return this.elements;\r\n  }\r\n\r\n  get asJSON() {\r\n    return GSDOM.toObject(this);\r\n  }\r\n\r\n  set asJSON(data) {\r\n    const me = this;\r\n    GSDOM.fromObject(me, data);\r\n    return me.validate();\r\n  }\r\n\r\n  disable() {\r\n    GSDOM.disableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  enable() {\r\n    GSDOM.enableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.form.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    this.elements\r\n      .filter(el => GSDOM.isVisible(el))\r\n      .filter(el => !el.checkValidity())\r\n      .forEach(el => el.reportValidity() );\r\n    return this.form.reportValidity();\r\n  }\r\n\r\n  async reset(e) {\r\n    const me = this;\r\n    const internal = e?.target === me.form;\r\n\r\n    if (internal) {\r\n      me.elements.forEach(el => el.value = el.defaultValue);\r\n      await me.dataController?.read(me.asJSON);\r\n    } else {\r\n      me.data = {};\r\n      me.form.reset();\r\n    }\r\n  }\r\n\r\n  async submit(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    if (!me.validate()) return;\r\n    const json = me.asJSON;\r\n    await me.dataController?.write(json);\r\n    const data = { type: 'submit', data: json, source: e, owner : me};\r\n    return me.emit('form', data, true, true, true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataWrite(data) {\r\n\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  onFieldChange(el) {\r\n\r\n  }\r\n\r\n  onValidate(sts) {\r\n\r\n    return sts;\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    let isValid = me.checkValidity() && me.isValid;\r\n    if (!isValid) me.reportValidity();\r\n    const data = { type: 'valid', data: isValid, owner : me};\r\n    isValid = me.onValidate(isValid);\r\n    if (isValid) me.emit('form', data, true, true);\r\n    return isValid;\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if (me.isBindable) me.handle(e);\r\n    if (me.validate()) me.onFieldChange(e.detail);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { inputType, numGT0, numGE0 } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSFormGroupElement extends GSElement {\r\n\r\n  static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2';\r\n  static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n  static CSS_ICON = 'text-primary me-2 fs-5';\r\n  static ICON = 'info-circle-fill';\r\n\r\n  static properties = {\r\n    icon: {},\r\n    layout: {},\r\n    placement: {},\r\n\r\n    description: {},\r\n    label: {},\r\n    placeholder: {},\r\n    pattern: {},\r\n    mask: {},\r\n\r\n    name: {},\r\n    type: { ...inputType },\r\n    list: {},\r\n    accept: {},\r\n\r\n    lang: {},\r\n    default: { reflect: true },\r\n    step: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    min: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    max: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    minLength: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    maxLength: { type: Number, reflect: true, hasChanged: numGT0 },\r\n\r\n    reverse: { type: Boolean },\r\n\r\n    autoid: { type: Boolean },\r\n    autocopy: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    autocapitalize: { type: Boolean, reflect: true },\r\n    autocomplete: { type: Boolean, reflect: true },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    checked: { type: Boolean, reflect: true },\r\n    multiple: { type: Boolean, reflect: true },\r\n    reveal: { type: Boolean, reflect: true },\r\n    readonly: { type: Boolean, reflect: true },\r\n    required: { type: Boolean, reflect: true },\r\n\r\n    cellField: { attribute: 'cell-field' },\r\n    cellLabel: { attribute: 'cell-label' },\r\n    cssLabel: { attribute: 'css-label' },\r\n    cssField: { attribute: 'css-field' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #inputRef = createRef();\r\n  #ouptutRef = createRef();\r\n  #patterns = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.#validateAllowed();\r\n    this.dynamicStyle(this.#styleID);\r\n    this.type = 'text';\r\n    this.placement = 'top';\r\n    this.layout = 'horizontal';\r\n    this.icon = GSFormGroupElement.ICON;\r\n    this.cssLabel = GSFormGroupElement.CSS_LABEL;\r\n    this.cellLabel = GSFormGroupElement.CSS_LABEL_CELL;\r\n\r\n  }\r\n  \r\n  connectedCallback() {\r\n    const me = this;\r\n    const form = GSDOM.closest(me, 'gs-form');\r\n    me.layout = GSAttr.get(form, 'layout', me.layout);\r\n    me.#patterns = GSItem.collect(me)\r\n    .filter(el => el.dataset.pattern)\r\n    .map(el => new RegExp(el.dataset.pattern));\r\n    super.connectedCallback();\r\n  }\r\n\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    me.value = me.default;\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#onRange();\r\n    if (me.templateRef && !me.field) {\r\n      const field = GSDOM.formElements(me.renderRoot).pop();\r\n      me.#inputRef.value = field;\r\n      if (field) {\r\n        field.name = this.name;\r\n        me.attachEvent(field, 'change', me.#onChange.bind(me));\r\n      }\r\n    }\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    switch (me.layout) {\r\n      case 'floating': return me.#renderFloating();\r\n      case 'vertical': return me.#renderVertical();\r\n      default: return me.#renderHorizontal();\r\n    }\r\n  }\r\n\r\n  #renderFloating() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n       <div class=\"form-floating ${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n          ${me.#renderLabel()}\r\n       </div>\r\n       ${me.#renderInfo()}\r\n    </div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n      <div class=\"col-12 text-md-start ${me.cellLabel}\">\r\n          ${me.#renderLabel()}\r\n      </div>\r\n       <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n       </div>\r\n       ${me.#renderInfo()}   \r\n    </div>      \r\n    `;\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row form-group ${classMap(me.renderClass())}\">    \r\n       <slot name=\"header\"></slot>\r\n       ${me.#renderLabelWrap()}\r\n       ${me.#renderField()}\r\n       ${me.#renderInfo()}\r\n       <slot name=\"footer\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderLabel() {\r\n    const me = this;\r\n    return html`<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.translate(me.label)}</label>`;\r\n  }\r\n\r\n  #renderLabelWrap() {\r\n    const me = this;\r\n    return html`<div class=\" text-md-end ${me.cellLabel}\">${me.#renderLabel()}</div>`;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.#isIcon ? html`<gs-icon size=\"5\" css=\"${GSFormGroupElement.CSS_ICON}}\" name=\"${me.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderTooltip() {\r\n    const me = this;\r\n    const tgt = me.#isIcon ? '@parent' : `[name='${me.name}']`;\r\n    return me.description ? html`<gs-tooltip local locale=\"${ifDefined(me.locale)}\" placement=\"${me.placement}\" title=\"${me.description}\" target=${ifDefined(tgt)}></gs-tooltip>` : '';\r\n  }\r\n\r\n  #renderInfo() {\r\n    const me = this;\r\n    const tooltip = me.#renderTooltip();\r\n    if (tooltip && me.#isIcon) return html`\r\n    <div class=\"col-auto\">\r\n       ${tooltip}\r\n       ${me.#renderIcon()}\r\n    </div>`;\r\n    return tooltip;\r\n  }\r\n\r\n  #renderField() {\r\n    const me = this;\r\n    return html`\r\n    <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n       <slot name=\"body\">${me.#renderInput()}${me.#renderOutput()}</slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderOutput() {\r\n    const me = this;\r\n    if (!me.isRange) return \"\";\r\n    return html`<span ${ref(me.#ouptutRef)} class=\"position-absolute px-1\">${me.value}</span>`;\r\n  }\r\n\r\n  #renderInput() {\r\n\r\n    const me = this;\r\n\r\n    const tpl = me.query('template') || me.template;\r\n    if (tpl) return me.renderTemplate();\r\n\r\n    const idattr = me.autoid ? me.name : undefined;\r\n    const val = me.isFieldset ? me.value.split(',') : me.value;\r\n\r\n    if (Array.isArray(val)) {\r\n      const wrap = me.dataset.radioLayout === 'vertical';\r\n      return val.map((it, i) => { return { v: it, id: `${me.name}_${i}` } })\r\n        .map((o, i) => me.#fieldSet(me.name + i, o.v, me.#inputHTML(o.id, me.name, o.v), wrap));\r\n    }\r\n\r\n    return me.#inputHTML(idattr, me.name, me.value);\r\n  }\r\n\r\n  #fieldSet(id, val, fld, vertical = false) {\r\n    const me = this;\r\n    return vertical ?\r\n      html`<div class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></div>`\r\n      :\r\n      html`<span class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></span>`;\r\n  }\r\n\r\n  #inputHTML(id, name, value) {\r\n    const me = this;\r\n    const type = me.isSwitch ? 'checkbox' : me.type;\r\n\r\n    const style = {\r\n      transform: me.reverse && me.isRange ? 'rotateY(180deg)' : ''\r\n    }\r\n    me.dynamicStyle(me.#styleID, style);\r\n\r\n    return html`<input is=\"gs-ext-input\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n        \r\n            name=\"${name}\" \r\n            type=\"${type}\" \r\n            value=\"${ifDefined(value)}\"\r\n    \r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            placeholder=\"${ifDefined(me.translate(me.placeholder))}\"\r\n            description=\"${ifDefined(me.translate(me.description))}\"\r\n\r\n            mask=\"${ifDefined(me.mask)}\"\r\n            pattern=\"${ifDefined(me.pattern)}\"\r\n            list=\"${ifDefined(me.list)}\"\r\n            accept=\"${ifDefined(me.accept)}\"\r\n             \r\n            step=\"${ifDefined(me.step)}\"\r\n            min=\"${ifDefined(me.min)}\"\r\n            max=\"${ifDefined(me.max)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n            \r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?autocomplete=\"${me.autocomplete}\"\r\n            ?multiple=\"${me.multiple}\"\r\n            ?checked=\"${me.checked}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"\r\n            ?reveal=\"${me.reveal}\"\r\n            >`;\r\n  }\r\n\r\n  get #cssField() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-input ms-0';\r\n    if (me.isRange) return 'form-range';\r\n    return 'form-control';\r\n  }\r\n\r\n  get #cssLabel() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-label';\r\n    if (me.isFloating) return 'ms-2';\r\n    return me.isVertical ? 'form-label' : '';\r\n  }\r\n\r\n  get #cssCheck() {\r\n    const me = this;\r\n    if (me.isCheckable) {\r\n      //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      if (me.isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n      return me.isFieldset ? '' : 'form-check';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get #cellField() {\r\n    const me = this;\r\n    const val = (me.isHorizontal) ? '6' : '11';\r\n    return me.cellField || `col-md-${val} col-sm-${val} col-xs-11`;\r\n  }\r\n\r\n  get #isIcon() {\r\n    return GSUtil.isStringNonEmpty(this.icon);\r\n  }\r\n\r\n  #onRange(e) {\r\n    const me = this;\r\n    if (me.isRange) {\r\n      const el = me.#ouptutRef.value;\r\n      if (el) el.innerHTML = me.value || '';\r\n      me.field.title = me.value;\r\n    }\r\n    me.emit('input', e);\r\n  }\r\n\r\n  #onChange(e) {\r\n    this.emit('change', e, true);\r\n  }\r\n\r\n  async #onBlur(e) {\r\n\r\n    const me = this;\r\n    const el = me.field;\r\n\r\n    if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n    const isValid = me.checkValidity();\r\n    if (!isValid) {\r\n      me.reportValidity();\r\n      el.focus();\r\n      await GSUtil.timeout(2000);\r\n      el.setCustomValidity('');\r\n    }\r\n\r\n    me.emit('change', e);\r\n  }\r\n\r\n  #validateAllowed() {\r\n    const me = this;\r\n    const slots = ['header', 'body', 'footer'];\r\n    let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n    if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n    list = Array.from(me.children).filter(el => !el.slot);\r\n    const tagList = ['TEMPLATE', 'GS-ITEM'];\r\n    const allowed = GSDOM.isAllowed(list, tagList);\r\n    if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    const isValid = me.checkValidity();\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  checkValidity() {\r\n\r\n    const me = this;\r\n    const el = me.field;\r\n\r\n    let isValid = el?.checkValidity();\r\n    for (const r of me.#patterns) {\r\n      isValid = r.test(el?.value);\r\n      if (!isValid) break;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  reportValidity() {\r\n    const me = this;\r\n    const el = me.field;\r\n    const msg = me.#patterns.length > 0 ? 'Invalid input' : '';\r\n    el?.setCustomValidity(msg);\r\n    return el?.reportValidity();\r\n  }\r\n\r\n  get value() {\r\n    return this.field?.value;\r\n  }\r\n\r\n  set value(val) {\r\n    GSDOM.fromObject2Element(this.field, { [this.name]: val });\r\n    this.validate();\r\n    this.#onRange();\r\n  }\r\n\r\n  get isFloating() {\r\n    return this.layout === 'floating';\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.layout === 'horizontal';\r\n  }\r\n\r\n  get isVertical() {\r\n    return this.layout === 'vertical';\r\n  }\r\n\r\n  get isFieldset() {\r\n    const me = this;\r\n    return me.type === 'radio' && me.value?.includes(',');\r\n  }\r\n\r\n  get isCheckable() {\r\n    const me = this;\r\n    return me.isCheck || me.isRadio || me.isSwitch;\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.field.checked;\r\n  }\r\n\r\n  get isCheck() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get isRadio() {\r\n    return this.type === 'radio';\r\n  }\r\n\r\n  get isSwitch() {\r\n    return this.type === 'switch';\r\n  }\r\n\r\n  get isNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  get isRange() {\r\n    return this.type === 'range';\r\n  }\r\n\r\n  get isText() {\r\n    return this.type === 'text';\r\n  }\r\n\r\n  get isPassword() {\r\n    return this.type === 'passsword';\r\n  }\r\n\r\n  get isEmail() {\r\n    return this.type === 'email';\r\n  }\r\n\r\n  get isURL() {\r\n    return this.type === 'url';\r\n  }\r\n\r\n  get isFile() {\r\n    return this.type === 'file';\r\n  }\r\n\r\n  get field() {\r\n    return this.#inputRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref, repeat } from '../lib.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSFormGroupElement } from './FormGroup.mjs';\r\n\r\n/**\r\n * Component is responsible for auto-building gs-form and gs-form-group elements\r\n * from either JSON data or GS-ITEM elements.\r\n */\r\nexport class GSFormPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    formStorage: { attribute: 'form-storage' },\r\n    disabled: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.#proxify;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<gs-form ${ref(me.#formRef)}\r\n      ?disabled=${me.disabled} \r\n      storage=\"${ifDefined(me.formStorage)}\" \r\n      .locale=\"${me.locale}\"\r\n      .rtl=\"${me.rtl}\"\r\n      .css=\"${me.css}\"\r\n      .theme=\"${me.theme}\"\r\n      .margin=\"${me.margin}\"\r\n      .padding=\"${me.padding}\"\r\n      .border=\"${me.border}\"\r\n      .shadow=\"${me.shadow}\"\r\n      .os=\"${me.os}\"\r\n      .browser=\"${me.browser}\"\r\n      .environment=\"${me.environment}\"\r\n      .orientation=\"${me.orientation}\"\r\n      .protocol=\"${me.protocol}\">\r\n      <slot>\r\n        ${repeat(me.data, (r) => html`<gs-form-group .data=${r} locale=\"${ifDefined(me.locale)}\" ></gs-form-group>`)}\r\n      </slot>\r\n    </form>`;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  get #proxify() {\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, GSFormGroupElement.properties));\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGroupElement class\r\n * @module components/GSGroupElement\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { ElementNavigationController } from '../controllers/ElementNavigationController.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\n\r\n/**\r\n * Renderer for grouped elements such as Buttons, Navs, Tabs and lists.\r\n * Components handles grouped elements navigation, selection and focus.\r\n * \r\n * @class\r\n * @extends { GSElement }\r\n */\r\nexport class GSGroupElement extends GSElement {\r\n\r\n  static properties = {\r\n    // multiple lists with single select across \r\n    group : {},\r\n    storage: {},    \r\n    circular: { type: Boolean },\r\n    multiple: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #elRef = createRef();\r\n  #controller;\r\n  #controllerGroup;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.data = me.initData();\r\n    me.#controller = new ElementNavigationController(me);\r\n    me.#controllerGroup = new GroupController(me);\r\n  }\r\n\r\n  onBusEvent(e) {\r\n    let owner, item;  \r\n    ({owner, item} = e.detail);\r\n    if (owner != this) {\r\n      if (!item?.disabled || owner?.selectable) {\r\n        this.reset();\r\n      }\r\n    }\r\n  }\r\n\r\n  onSelected(el) {\r\n    this.#controllerGroup.notify(el);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    const me = this;\r\n    me.#controller.init();\r\n    me.#controller.attach(me.#elRef.value);\r\n    super.firstUpdated(changed);\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      ${me.renderWrappedUI()}\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedUI(name) {\r\n    const me = this;\r\n    return html`<div \r\n      class=\"${classMap(me.renderWrappedClass())}\">\r\n      <slot name=\"${ifDefined(name)}\">${me.renderItems()}</slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    return {};\r\n  }\r\n\r\n  renderItems() {\r\n    return '';\r\n  }\r\n\r\n  initData() {\r\n    return undefined;\r\n  }\r\n\r\n  previous() {\r\n    this.#controller.previous();\r\n  }\r\n\r\n  next() {\r\n    this.#controller.next();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    this.#controller.reset();\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  isNavigable(el) {\r\n    return true;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#controller.focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#controller.selected;\r\n  }\r\n\r\n  settings(el) {\r\n    const tagName = customElements.getName(el).toUpperCase() || 'GS-ITEM';\r\n    const cfg = GSElement.allProperties(el);\r\n    const items = Array.from(this.children).filter(e => e.tagName === tagName ).map(el => GSAttr.proxify(el, cfg));\r\n    const active = items.filter(el => el.active);\r\n    active.forEach((el, idx) => el.active = idx === 0);\r\n    return items;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-group');\r\n  }\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGT0 } from '../properties/index.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSIconElement extends GSElement {\r\n\r\n  static styles = css`\r\n    :host {\r\n      --gs-icon-super-color : cornflowerblue;\r\n      --gs-icon-content : '';\r\n    }\r\n    i::after {\r\n      top: -8px;\r\n      font-size: 0.7em;\r\n      position: relative;\r\n      content: var(--gs-icon-content);\r\n      content: attr(data-super);\r\n      color: var(--gs-icon-super-color);\r\n    }`;\r\n\r\n  static properties = {\r\n    name: { reflect: true, hasChanged: notEmpty },\r\n    size: { reflect: true, type: Number, hasChanged: numGT0 },\r\n    color: { reflect: true, ...color },\r\n    superColor: { attribute : 'super-color'},\r\n    super: { reflect: true },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    _clicked: { attribute:false},\r\n    _hovered: { attribute:false},\r\n  }\r\n\r\n  #ref = createRef();\r\n  \r\n  constructor() {\r\n    super();\r\n    //this.flat = true;\r\n  }\r\n\r\n  /*\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    this.#embdeded = GSDOM.matches(this.parentComponent, '[icon]');\r\n  }\r\n  */\r\n\r\n  updated(changed) {\r\n    if (changed.has('_clicked')) {\r\n      if (this._clicked) this.#postAnimate();\r\n    } \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.setCSSProperty(':host', '--gs-icon-super-color', me.superColor);\r\n    return html`<i  ${ref(me.#ref)}\r\n       class=\"bi ${classMap(me.renderClass())}\"\r\n       data-super=\"${ifDefined(me.super)}\"\r\n       @click=\"${me.animate}\"\r\n       @mouseover=\"${me.#onMouseOver}\"\r\n       @mouseout=\"${me.#onMouseOut}\"></i>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      [`text-${me.color}`]: me.color,\r\n      [`bi-${me.name}`]: me.name,\r\n      'fs': me.size > 0,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.clickCss]: me._clicked,\r\n      [me.hoverCss]: me._hovered,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  async #postAnimate() {\r\n    const me = this;\r\n    const delay = GSUtil.asNum(me.dataset.delay, 1);\r\n    if (delay > 0) {\r\n      await GSUtil.timeout(delay * 1000);\r\n      me._clicked = false;\r\n    }    \r\n  }\r\n\r\n  #onMouseOver(e) {\r\n    this.hover(true);\r\n  }\r\n\r\n  #onMouseOut(e) {\r\n    this.hover(false);\r\n  }\r\n\r\n  animate() {\r\n    const me = this;\r\n    me._hovered = false;\r\n    me._clicked = true;\r\n  }\r\n\r\n  hover(sts = false) {\r\n    const me = this;\r\n    if (sts) {\r\n      me._clicked = false;\r\n    }\r\n    me._hovered = sts;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-icon');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/index.mjs';\r\n\r\nexport class GSIndentElement extends GSElement {\r\n\r\n  static styles = css`.indent {\r\n      --gs-indent : 10px;\r\n      margin-left: var(--gs-indent);\r\n      margin-right: var(--gs-indent);\r\n    }`;\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    size: { type: Number, hasChanged: numGT0 },\r\n    multiplier: { type: Number, hasChanged: numGT0 }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.size = 1;\r\n    me.multiplier = 10;\r\n  }\r\n\r\n  renderUI() {\r\n    const size = this.size * this.multiplier;\r\n    return html`<span class=\"indent\" style=\"--gs-indent: ${size}px;\"></span>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-indent');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nconst numdef = { reflect: true, type: Number, hasChanged: numGE0 };\r\n\r\nexport class GSImageElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { hasChanged: notEmpty },\r\n    width: numdef,\r\n    height: numdef,\r\n    opacity: numdef,\r\n    invert: numdef,\r\n    grayscale: numdef,\r\n    brightness: numdef,\r\n    blur: numdef,\r\n    contrast: numdef,\r\n    saturate: numdef,\r\n    hue: numdef,\r\n    sepia: numdef,\r\n\r\n    alt: {},\r\n    loading: {}\r\n\r\n  }\r\n\r\n  #imageRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    this.#update();\r\n    return this.src;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<img ${ref(me.#imageRef)} \r\n            @load=\"${me.#onLoad}\"\r\n            src=\"${me.src}\" \r\n            alt=\"${me.alt}\" \r\n            loading=\"${ifDefined(me.loading)}\" \r\n            class=\"${me.#styleID}\" \r\n            data-gs-class=\"${me.#styleID}\">\r\n          </img>`;\r\n  }\r\n\r\n  get complete() {\r\n    return this.#imageRef.value?.complete || false;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  #renderStyle() {\r\n    const me = this;\r\n    const filter = me.#buildFilter();\r\n    const css = {\r\n      width: me.width > 0 ? me.width : undefined,\r\n      height: me.height > 0 ? me.height : undefined,\r\n      filter: filter.length > 0 ? filter.join(' ') : ''\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #buildFilter() {\r\n    const me = this;\r\n    const o = [];\r\n\r\n    if (me.blur > 0) o.push(`blur(${me.blur}px)`);\r\n    if (me.invert > 0) o.push(`invert(${me.invert})`);\r\n    if (me.opacity > 0) o.push(`opacity(${me.opacity})`);\r\n    if (me.contrast > 0) o.push(`contrast(${me.contrast})`);\r\n    if (me.grayscale > 0) o.push(`grayscale(${me.grayscale})`);\r\n    if (me.brightness > 0) o.push(`brightness(${me.brightness})`);\r\n\r\n    if (me.hue > 0) o.push(`hue-rotate(${me.hue}deg)`);\r\n    if (me.sepia > 0) o.push(`sepia(${me.sepia}%)`);\r\n    if (me.saturate > 0) o.push(`saturate(${me.saturate}%)`);\r\n\r\n    return o;\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.filter = me.#buildFilter().join(' ').trim();\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const el = e.target;\r\n    const me = this;\r\n    if (el) {\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n      me.emit('loaded', { width: el.width, height: el.height, element: el }, true);\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-image');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayoutElement\r\n */\r\n\r\nimport { classMap, html, ifDefined, templateContent } from '../lib.mjs';\r\nimport { orientation, OrientationTypes } from '../properties/orientation.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSLayoutElement extends GSElement {\r\n\r\n    static properties = {\r\n        type: { ...orientation }\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        id : {},\r\n        type: {},\r\n        min: { type: Number },\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        resizable: { type: Boolean },\r\n        autofit: { type: Boolean },\r\n        vPos: { attribute: 'h-pos' },\r\n        hPos: { attribute: 'v-pos' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.autofit = true;  \r\n        me.#items(me).map((el, idx, els) => me.#dyncss(el, idx, els, 0));\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if ( this.autofit && GSDOM.root(this) === document.body) document.body.classList.add('vh-100');\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const list = me.#items(me).map((el, idx, els) => me.#build(el, idx, els));\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"d-flex flex-fill w-100 h-100 ${classMap(me.renderClass())}\">${list}</div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const horizontal = OrientationTypes.isHorizontal(me.type);\r\n        return {\r\n            ...super.renderClass(),\r\n            'flex-column': horizontal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #items(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSLayoutElement.options));\r\n    }\r\n\r\n    #resizable(el) {\r\n        return el.size > 0 || el.min > 0 || el.max > 0 || el.resizable;\r\n    }\r\n\r\n    #dyncss(el, idx, els, lev = 0) {\r\n        const me = this;\r\n        me.#items(el.self).map((it, idx, items) => me.#dyncss(it, idx, items, lev+1));\r\n        if(me.#resizable(el)) me.dynamicStyle(`gsd-${lev}-${idx}`);\r\n    }\r\n\r\n    #build(el, idx, els, lev = 0) {\r\n\r\n        const me = this;\r\n        const type = el.self.parentElement.type || 'vertical';\r\n\r\n        const list = me.#items(el.self).map((it, idx, items) => me.#build(it, idx, items, lev+1));\r\n        \r\n        const min = el.min;\r\n        const max = el.max;\r\n        const template = el.template;\r\n        const tplEl = me.#elementTemplate(el);\r\n\r\n        const tc = `#${tplEl?.id}` !== template;\r\n\r\n        const dir = el.type || type || 'vertical';\r\n        const horizontal = OrientationTypes.isHorizontal(dir);\r\n        \r\n        const col = list.length > 0 && horizontal ? 'flex-column' : '';\r\n\r\n        const did = `gsd-${lev}-${idx}`;\r\n        const css = me.#panelCSS(el, col, did);\r\n        const style = me.#panelStyle(el, horizontal);\r\n        me.dynamicStyle(did, style);\r\n\r\n        const slot = el.name ? html`<slot name=\"${el.name}\"></slot>` : '';\r\n        const src = html`<div id=\"${ifDefined(el.id)}\" class=\"d-flex ${classMap(css)}\">\r\n            ${list}\r\n            ${templateContent(tplEl)}\r\n            ${template && tc ? html`<gs-template flat src=\"${template}\"></gs-template>` : ''}\r\n            ${slot}\r\n            </div>`;\r\n\r\n        if (!el.resizable) return src;\r\n\r\n        const resize = (idx === els.length - 1) ? 'end' : 'start';\r\n        const splitter = me.#splitter(min, max, type, resize);\r\n\r\n        if (idx === els.length - 1) return [splitter , src];\r\n        return [src, splitter];\r\n    }\r\n    \r\n    #elementTemplate(el) {\r\n        const tplEl = el.self.firstElementChild;\r\n        return tplEl instanceof HTMLTemplateElement ? tplEl : undefined;\r\n    }\r\n\r\n    #panelCSS(el, col, did) {\r\n\r\n        const resizable = this.#resizable(el);\r\n        const grow = resizable ? '' : 'flex-grow-1';\r\n\r\n        let vpos = el.vPos;\r\n        let hpos = el.hPos;\r\n\r\n        hpos = hpos ? `align-items-${hpos}` : '';\r\n        vpos = vpos ? `justify-content-${vpos}` : '';\r\n\r\n        const css = this.mapCSS(el.css, {\r\n            [did] : resizable,\r\n            [col] : col,\r\n            [grow] : grow,\r\n            [hpos] : hpos,\r\n            [vpos] : vpos\r\n        });\r\n    \r\n        return css;        \r\n    }\r\n\r\n    #panelStyle(el, horizontal) {\r\n        const min = el.size || el.min;\r\n        const max = el.max || el.size;\r\n        const style = {};\r\n        if (horizontal) {\r\n            style['min-height'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-height'] = max > 0 ? `${max}px` : undefined;\r\n        } else {\r\n            style['min-width'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-width'] = max > 0 ? `${max}px` : undefined;\r\n        }\r\n        return style;        \r\n    }\r\n\r\n    #splitter(min, max, dir, resize) {\r\n        return html`<gs-splitter split=\"${dir}\" resize=\"${resize}\" min=\"${min}\" max=\"${max}\"></gs-splitter>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-layout');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSLinklement extends GSElement {\r\n\r\n  static properties = {\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    size: { type: Number },\r\n    text: { ...color },\r\n    color: { ...color },\r\n    url: {},\r\n    ping: {},\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    target: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.url = '#';\r\n    // this.text = 'primary'; // do not set as default -> gs-dropdown\r\n    // this.target = '_blank'; // not used \r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n      <a ${ref(me.#refEl)}  \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        title=\"${ifDefined(me.translate(me.tooltip))}\" \r\n        href=\"${ifDefined(me.url)}\" \r\n        ping=\"${ifDefined(me.ping)}\" \r\n        target=\"${ifDefined(me.target)}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        ?disabled=${me.disabled} \r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"        \r\n        @click=\"${me.#onClick}\">\r\n        ${me.#first}${me.#second}\r\n        </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,      \r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [`text-${me.text}`]: me.text,\r\n      [`bg-${me.color}`]: me.color\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.iconEl?.animate();\r\n    me.notify();\r\n    if (me.url === '#' || GSUtil.isStringEmpty(me.url)) {\r\n      GSEvents.prevent(e);\r\n      me.handle(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon css=\"mx-1\" ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    size=\"${this.size}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  /**\r\n   * Generate clickable link\r\n   * @param {*} options \r\n   * @param {*} css \r\n   * @param {*} before \r\n   * @param {*} after \r\n   * @returns \r\n   */\r\n  static generate(options, css, before, after) {\r\n    const opt = options;\r\n    return html`<a class=\"${classMap(css)}\"\r\n        tabindex=\"0\"    \r\n        ${dataset(opt, true)}\r\n        part=\"${ifDefined(opt.part)}\"\r\n        tooltip=\"${ifDefined(opt.tooltip)}\"\r\n        href=\"${ifDefined(opt.url)}\">        \r\n        ${before || ''}\r\n        <slot>${opt.title}</slot> \r\n        ${after || ''}\r\n    </a>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-link');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttributeHandler } from '../base/GSAttributeHandler.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSListItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    size: { type: Number },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    generated: { state: true, type: Boolean }\r\n  }\r\n\r\n  #initial;\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.binded();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.#initial = this.active;\r\n    // allow single setting at the gs-list to applay to the child\r\n    GSAttributeHandler.clone(this.owner, this, false);\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-LIST';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<a  tabindex=\"0\" ${ref(me.#refEl)}\r\n       href=\"${ifDefined(me.url)}\" \r\n       target=\"${ifDefined(me.target)}\" \r\n       class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()} \r\n        ${me.#renderSecond()}\r\n        <slot>${me.renderTemplate()}</slot>\r\n      </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.#itemCSS] : true,\r\n      'active': me.active && me.isSelectable()\r\n    }\r\n    return me.mapCSS(me.#itemStatusCSS, css);\r\n  }\r\n\r\n  isSelectable() {\r\n    return !GSUtil.asBool(this.disabled) || GSUtil.asBool(this.owner.selectable);\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.icon ? html`<gs-icon name=\"${me.icon}\" size=\"${me.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderText() {\r\n    return this.title ? html`<span>${this.translate(this.title)}</span>` : html`<slot name=\"title\"></slot>`;\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.rtl ? this.#renderText() : this.#renderIcon();\r\n  }\r\n\r\n  #renderSecond() {\r\n    return this.rtl ? this.#renderIcon() : this.#renderText();\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || this.#initial || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  // TODO Can I use this.parentComponent ? \r\n  get owner() {\r\n    return (this.hasAttribute('generated') ? GSDOM.component(this) : this.parentElement);\r\n  }\r\n  \r\n  get #activeCSS() {\r\n    return this.owner.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #inactiveCSS() {\r\n    return this.owner.dataset?.cssInactive || '';\r\n  }\r\n\r\n  get #itemCSS() {\r\n    return this.owner.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #itemStatusCSS() {\r\n    return this.active && this.isSelectable() ? this.#activeCSS : this.#inactiveCSS;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { GSListItemElement } from './ListItem.mjs';\r\n\r\nexport class GSListElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    selectable: { reflect: true, type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = false;\r\n    this.multiple = false;\r\n    this.selectable = false;\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSListItemElement);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-list-item');\r\n  }\r\n\r\n  renderClass() {\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group': true,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    return html`<slot>${this.renderItems()}</slot>`;\r\n  }\r\n\r\n  reset() {\r\n    this.items.forEach(el => el.reset());\r\n    this.notify();\r\n  }\r\n\r\n  renderItems() {\r\n    const me = this;\r\n    return this.data.map(o => {\r\n      return html`<gs-list-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-list-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-LIST-ITEM';\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-list-item');\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { NavTypes, PlacementTypes } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSNavItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    disabled: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    active: { type: Boolean, reflect: true },\r\n    generated: { state: true, type : Boolean }\r\n  }\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-NAV';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div class=\"nav-item ${classMap(me.renderClass())}\">${me.#button}</div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    return this.mapCSS(this.#itemsCSS, super.renderClass());\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get isNav() {\r\n    return true;\r\n  }\r\n\r\n  get vertical() {\r\n    return this.parentElement.vertical || false;\r\n  }\r\n\r\n  get placement() {\r\n    return this.parentElement.placement;\r\n  }\r\n\r\n  get owner() {\r\n    return (this.hasAttribute('generated') ? GSDOM.component(this) : this.parentElement);\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #title() {\r\n    return html`<slot>${this.translate(this.title)}</slot>`;\r\n  }\r\n\r\n  get #icon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  get #first() {\r\n    return this.rtl ? this.#title : this.#icon;\r\n  }\r\n\r\n  get #second() {\r\n    return this.rtl ? this.#icon : this.#title;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#buttonCSS, {});\r\n    if (me.active) obj = me.mapCSS(me.#buildCSS + ' ' + me.#activeCSS, obj);\r\n    return html`<a tabindex=\"0\" type=\"button\" role=\"nav\" \r\n     ${ref(me.#refEl)}\r\n     class=\"nav-link ${classMap(obj)}\"\r\n     href=\"${ifDefined(me.url)}\" \r\n     target=\"${ifDefined(me.target)}\">\r\n        ${me.#first} \r\n        ${me.#second}\r\n      </a>`;\r\n  }\r\n\r\n  get #itemsCSS() {\r\n    return this.owner.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #buttonCSS() {\r\n    return this.owner.dataset?.cssButton || '';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.owner.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #navType() {\r\n    return NavTypes.indexOf(this.owner.type);\r\n  }\r\n\r\n  // fiix for shadowed DOM, parent class=\"nav nav-pills..\" \r\n  // do not cross shadow dom, so item elements does not see CSS\r\n  // we have to simulate\r\n  get #buildCSS() {\r\n    const isVertical = this.vertical;\r\n    const isBefore = PlacementTypes.isBefore(this.placement);\r\n    switch (this.#navType) {\r\n      // pills\r\n      case 1: return 'rounded text-bg-primary';\r\n      // tabs\r\n      case 2:\r\n        if (isVertical) {\r\n          if (isBefore) {\r\n            return 'shadow-none border border-end-0';\r\n          } else {\r\n            return 'shadow-none border border-start-0';\r\n          }\r\n        }\r\n        return 'shadow-none border border-bottom-0';\r\n      // underline\r\n      case 3: return 'shadow-none border-bottom border-3 fw-medium';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { GSNavItemElement } from './NavItem.mjs';\r\nimport { PlacementTypes, nav, placement } from '../properties/index.mjs';\r\n\r\nexport class GSNavElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    type: nav,\r\n    placement: placement,\r\n    vertical: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = true;\r\n    this.multiple = false;\r\n    this.type = 'pills';\r\n    this.placement = 'start';\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSNavItemElement);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-nav-item');\r\n  }\r\n  \r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const isBefore = PlacementTypes.isBefore(me.placement);\r\n    const isTab = me.type === 'tabs';\r\n    const css = {\r\n      'nav': true,\r\n      [`nav-${me.type}`]: me.type,\r\n      'flex-column': me.vertical,\r\n      'border-bottom-0': me.vertical,\r\n      'border-end': isTab && isBefore && me.vertical,\r\n      'border-start': isTab && !isBefore && me.vertical,\r\n      [`justify-content-${me.placement}`]: !me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Render items based on data propprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-nav-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-nav-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-NAV-ITEM';\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  onFocused(el) {\r\n    // el?.click();\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { svg, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSOverlayElement extends GSElement {\r\n\r\n    static properties = {\r\n        color: {},\r\n        target: {},\r\n        autoremove: { type: Boolean },\r\n        opened: { type: Boolean },\r\n        opacity: { type: Number },\r\n        padding: { type: Number },\r\n        radius: { type: Number },\r\n    }\r\n\r\n    #styleID = GSID.id;\r\n    #styleID2 = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        //this.color = 'rgb(0,0,0)';\r\n        this.color = '#000';\r\n        this.opacity = 0.7;\r\n        this.padding = 1;\r\n        this.radius = 6;\r\n        this.dynamicStyle(this.#styleID);\r\n        this.dynamicStyle(this.#styleID2);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', () => me.requestUpdate());\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        if (!me.opened) return '';\r\n        const path = me.#path;\r\n        return path ? html`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlspce=\"preserve\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\" preserveAspectRatio=\"xMinYMin slice\"\r\n            viewvbox=\"0 0 ${window.innerWidth} ${window.innerHeight}\"\r\n            class=\"gs-overlay gs-overlay-animated ${me.#styleID}\"\r\n            @click=\"${me.reset.bind(me)}\">\r\n            ${path}\r\n        </svg>` : '';\r\n    }\r\n\r\n    async firstUpdated(changed) {\r\n        const me = this;\r\n        const opt = {\r\n            fillRule: \"evenodd\",\r\n            clipRule: \"evenodd\",\r\n            strokeLinejoin: \"round\",\r\n            strokeMiterlimit: \"2\",\r\n            zIndex: \"10000\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    get #path() {\r\n        const me = this;\r\n        const el = GSDOM.query(me.target);\r\n        if (!me.target) return '';\r\n        const pathStr = me.#createSVGPathString(el);\r\n        const opt = { fill: me.color, opacity: me.opacity, pointerEvents: 'auto', cursor: 'auto' };\r\n        me.dynamicStyle(me.#styleID2, opt);\r\n        return svg`<path class=\"${me.#styleID2}\"  d=\"${pathStr}\"></path>`;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n\r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n\r\n        const rect = target.getBoundingClientRect();\r\n\r\n        const padding = me.padding;\r\n        const radius = me.radius;\r\n\r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n\r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n\r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n\r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n\r\n        const val = `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n            M${highlightBoxX},${highlightBoxY} \r\n            h${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n            v${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n            h-${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n            v-${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;\r\n        return val.replace(/[\\t\\n]/g, ' ');\r\n    }\r\n\r\n    static {\r\n        this.define('gs-overlay');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, map, range, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { size, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSPagerElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    size: { ...size },\r\n    first: { type: Boolean },\r\n    last: { type: Boolean },\r\n    next: { type: Boolean },\r\n    previous: { type: Boolean },\r\n    pages: { type: Number },\r\n\r\n    labelFirst: { attribute: 'label-first' },\r\n    labelLast: { attribute: 'label-last' },\r\n    labelNext: { attribute: 'label-next' },\r\n    labelPrevious: { attribute: 'label-previous' },\r\n\r\n    cssItem: { attribute: 'css-item' },\r\n\r\n  }\r\n\r\n  #ref = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.pages = 5;\r\n    this.labelFirst = '&laquo;';\r\n    this.labelLast = '&raquo;';\r\n    this.labelNext = '&rsaquo;';\r\n    this.labelPrevious = '&lsaquo;';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const half = Math.floor((me.pages - 1) / 2);\r\n    const page = me.dataController?.page || 0;\r\n    const start = page - half < 1 ? 1 : page - half;\r\n    const end = page > 0 ? page + half : me.pages;\r\n\r\n    return html`<nav \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        @click=\"${me.#onClick}\"\r\n        @keyup=\"${me.#onKeyUp}\"\r\n        @keydown=\"${me.#onKeyDown}\">\r\n        <ul ${ref(me.#ref)} class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()}\r\n        ${me.#renderPrevious()}\r\n        ${map(range(start, end + 1), (i) => me.#renderItem(i, '', '', i  === page))}\r\n        ${me.#renderNext()}\r\n        ${me.#renderLast()}\r\n        </ul></nav>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = me.size ? SizeTypes[me.size] || me.size : '';\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'pagination': true,\r\n      [`pagination-${size}`]: size,\r\n\r\n    }\r\n    return css;\r\n  }\r\n\r\n  updated() {\r\n    const target = this.#ref.value;\r\n    if (target && this.isFocused) {\r\n      target.querySelector('.active > a')?.focus();\r\n    }\r\n  }\r\n\r\n  onDataRead() {\r\n    this.requestUpdate();\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.first ? this.#renderItem(this.labelFirst, 'first', 'First page') : '';\r\n  }\r\n\r\n  #renderLast() {\r\n    return this.last ? this.#renderItem(this.labelLast, 'last', 'Last page') : '';\r\n  }\r\n\r\n  #renderPrevious() {\r\n    return this.previous ? this.#renderItem(this.labelPrevious, 'previous', 'Previous page') : '';\r\n  }\r\n\r\n  #renderNext() {\r\n    return this.next ? this.#renderItem(this.labelNext, 'next', 'Next page') : '';\r\n  }\r\n\r\n  #renderItem(text = '', name = '', title = '', active = false) {\r\n    const me = this;\r\n    text = GSUtil.decodeHTMLEntities(text);\r\n    return html`<li class=\"page-item ${active ? 'active' : ''}\">\r\n              <a class=\"page-link ${this.cssItem}\" \r\n                 name=\"${name}\" \r\n                 title=\"${me.translate(title)}\" \r\n                 href=\"#\">${me.translate(text)}</a>\r\n            </li>`;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const el = this.#toTarget(e, 'a');\r\n    if (!el) return;\r\n\r\n    const ctrl = me.dataController;\r\n    if (!ctrl) return;\r\n\r\n    const val = el.name || el.text;\r\n    me.emit(val, el);\r\n    \r\n    switch (val) {\r\n      case 'first':\r\n        return ctrl.firstPage();\r\n      case 'last':\r\n        return ctrl.lastPage();\r\n      case 'next':\r\n        return ctrl.nextPage();\r\n      case 'previous':\r\n        return ctrl.prevPage();\r\n    }\r\n\r\n    ctrl.page = val;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const current = this.#toTarget(e, 'li');\r\n    let el = null;\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        el = current?.previousElementSibling;\r\n        break;\r\n      case 'ArrowRight':\r\n        el = current?.nextElementSibling;\r\n        break;\r\n    }\r\n    el = el?.querySelector('a');\r\n    el?.focus();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') {\r\n      this.#toTarget(e, 'a')?.click();\r\n    }\r\n  }\r\n\r\n  #toTarget(e, name) {\r\n    const el = e.target.closest(name) || e.target;\r\n    return el.tagName === name.toUpperCase() ? el : undefined;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-pagination');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, position } from '../properties/index.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSPopper } from \"../base/GSPopper.mjs\";\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopupElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    position: { ...position },\r\n    trigger: {},\r\n    target: {},\r\n    autoclose: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    opened: { type: Boolean },\r\n    hPos: { type: Number, attribute: 'h-pos' },\r\n    vPos: { type: Number, attribute: 'v-pos' },\r\n    wMin: { type: Number, attribute: 'w-min' },\r\n    wMax: { type: Number, attribute: 'w-max' },\r\n    hMin: { type: Number, attribute: 'h-min' },\r\n    hMax: { type: Number, attribute: 'h-max' },\r\n\r\n  }\r\n\r\n  #caller = null;\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.autofocus = true;\r\n    this.autoclose = true;\r\n    this.trigger = 'click';\r\n    this.position = 'absolute';\r\n    this.placement = 'bottom';\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachTaraget();\r\n    me.attachEvent(window, 'resize', me.close.bind(me));\r\n    me.on('mouseleave', me.#onAuto.bind(me));\r\n  }\r\n\r\n  firstUpdated(changedProperties) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#resize();\r\n      me.#reposition();\r\n    });\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#reposition();\r\n    if (me.autofocus) me.focus();\r\n    me.notify();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div \r\n      ${ref(me.#panelRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"fade ${classMap(me.renderClass())}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      @keydown=\"${me.#onKeyDown}\">\r\n      ${me.renderTemplate()}\r\n      <slot></slot>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': me.opened,\r\n      //'d-none' : !me.opened,\r\n      [me.#styleID]: true,\r\n      [`position-${me.position}`]: me.position,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  focus() {\r\n    this.query('[tabindex], input, select, textarea, button, a', true)?.focus();\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Show popup at x/y position on the screen\r\n   * @param {Number} x \r\n   * @param {Number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const obj = {\r\n      top: '0px',\r\n      left: '0px',\r\n      translate: `${x}px ${y}px`\r\n    };\r\n    me.#resize(obj);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      case 'Escape':\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    //if (!me.opened) return;\r\n    if (me.vPos || me.hPos) {\r\n      const opt = {\r\n        top: '0px',\r\n        left: '0px',\r\n        translate: `${me.hPos}px ${me.vPos}px`\r\n      };\r\n      const rule = me.dynamicStyle(me.#styleID);\r\n      Object.assign(rule.style, opt);\r\n    } else if (me.target) {\r\n      let target = GSDOM.query(document.documentElement, me.target);\r\n      target = target.renderRoot?.firstElementChild || target;\r\n      GSPopper.popupFixed(me.placement, me.#panel, target);\r\n    }\r\n\r\n  }\r\n\r\n  #resize(obj = {}) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n    if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n    if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n    if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n    Object.assign(rule.style, obj);\r\n  }\r\n\r\n  #onPopup(e) {\r\n    const me = this;\r\n    me.#caller = e;\r\n    if (e instanceof Event) {\r\n      GSEvents.prevent(e);\r\n      me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n    }\r\n\r\n    if (me.placement) {\r\n      GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n      me.opened = true;\r\n      return;\r\n    }\r\n\r\n    let x = e.clientX, y = e.clientY;\r\n    const rect = me.#panel.getBoundingClientRect();\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #attachTaraget() {\r\n    const me = this;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    me.trigger.split(' ').forEach(evt => {\r\n      targets.forEach(target => me.attachEvent(target, evt, me.#onPopup.bind(me)));\r\n    });\r\n  }\r\n\r\n  #onAuto(e) {\r\n    if (this.autoclose) this.close();\r\n  }\r\n\r\n  get #panel() {\r\n    return this.#panelRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-popup');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { html, classMap, ifDefined } from '../lib.mjs';\r\nimport { literalTemplate } from '../directives/literal.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSProgressElement extends GSElement {\r\n\r\n  static properties = {\r\n    min: { reflect: true, type: Number },\r\n    max: { reflect: true, type: Number },\r\n    step: { reflect: true, type: Number },\r\n    value: { reflect: true, type: Number },\r\n    label: { reflect: true }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.min = 0;\r\n    this.step = 1;\r\n    this.max = 100;\r\n    this.value = 0;\r\n    this.styles = { width: '0%' };\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'progress-bar' : true,\r\n      [me.#styleID] : true\r\n    }\r\n    return css;\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#updateStyle();\r\n    const obj = {min :me.min, max:me.max, step:me.step, value:me.value, percentage:me.percentage};\r\n    return html`\r\n    <div class=\"progress\" @keydown=\"${me.#onKeySelect}\" dir=\"${ifDefined(me.direction)}\">\r\n        <div class=\"${classMap(me.renderClass())}\" \r\n             \r\n             role=\"progressbar\"\r\n             tabindex=\"0\">\r\n             ${literalTemplate(me.label, obj)}\r\n        </div>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    if (changed.has('value')) {\r\n      let val = me.step + changed.get('value');\r\n      val = me.#update(val, val);\r\n      changed.set('value', val);\r\n    }\r\n  }\r\n\r\n  updated(changed) {\r\n    if (changed.has('value')) {\r\n      this.notify();\r\n    }\r\n  }\r\n\r\n  increase(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value + val, me.value);\r\n    return true;\r\n  }\r\n\r\n  decrease(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value - val, me.value);\r\n    return true;\r\n  }\r\n\r\n  get percentage() {\r\n    const me = this;\r\n    return Math.trunc((me.value / me.max) * 100);\r\n  }\r\n\r\n  #updateStyle() {\r\n    const me = this;\r\n    me.styles.width = `${me.percentage}%`;\r\n    me.dynamicStyle(me.#styleID, me.styles);\r\n  }\r\n\r\n  #update(val, old = 0) {\r\n    val = GSUtil.asNum(val, GSUtil.asNum(old));\r\n    const me = this;\r\n    if (val > me.max) val = me.max;\r\n    if (val < me.min) val = me.min;\r\n    return val;\r\n  }\r\n\r\n  #onKeySelect(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp' :\r\n      case 'ArrowRight' :\r\n          return me.increase();\r\n      case 'ArrowLeft' :\r\n      case 'ArrowDown' :\r\n         return me.decrease();\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-progress');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\n\r\nexport class GSSpinnerElement extends GSElement {\r\n\r\n    static styles = css`.spinner-border { border: var(--bs-spinner-border-width) solid currentcolor; border-right-color: transparent; }`;\r\n\r\n    static properties = {\r\n        color: { ...color, reflect: true },\r\n        small: { type: Boolean, reflect: true },\r\n        pulsar: { type: Boolean }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\" role=\"status\"></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"spinner-border\": !me.pulsar,\r\n            \"spinner-grow\": me.pulsar,\r\n            [`text-${me.color}`]: me.color,\r\n            [`spinner-border-sm`]: !me.pulsar && me.small,\r\n            [`spinner-grow-sm`]: me.pulsar && me.small,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-spinner');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitterElement class\r\n * @module components/GSSplitterElement\r\n */\r\n\r\nimport { classMap, createRef, ref, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCSSMap } from '../base/GSCSSMap.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { notEmpty, numGT0, placement } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSSplitterElement extends GSElement {\r\n\r\n    static properties = {\r\n        // Check if splitter use vertical or horizontal splitting\r\n        split: { reflect: true },\r\n        // start|end|top|bottom\r\n        resize: { ...placement, hasChanged: notEmpty },\r\n        size: { type: Number, hasChanged: numGT0 }\r\n    }\r\n\r\n    #cursor = 0;\r\n    #styleID = GSID.id;\r\n    #styleTGT = GSID.id;\r\n    #elRef = createRef();\r\n    #mouseController;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.size = 8;\r\n        me.resize = 'start';\r\n        me.dynamicStyle(me.#styleID);\r\n        me.#load();\r\n        me.#mouseController = new ElementMoveController(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        //this.dynamicStyle(this.#styleTGT, null, true);\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        super.firstUpdated(changed);\r\n        const me = this;\r\n        me.#mouseController.attach(me.#splitter);\r\n        //const shadow = GSDOM.root(me.target) instanceof ShadowRoot;\r\n        //me.dynamicStyle(me.#styleTGT, {}, !shadow);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#elRef)} \r\n            @dblclick=\"${me.#onDoubleClick}\"\r\n            data-gs-class=\"${me.#styleID}\" \r\n            class=\"${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'splitter': true,\r\n            [me.#styleID]: true\r\n        }\r\n        return css;\r\n    }\r\n\r\n    updated(changedProperties) {\r\n        const me = this;\r\n        me.#cssUpdate();\r\n    }\r\n\r\n    /**\r\n    * Lock UI for mouse events to enable resizing over embedded iframes\r\n    * @param {MouseEvent} e \r\n    */\r\n    onStartMove(e) {\r\n        const me = this;\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', { start: true });\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    onMouseMove(e) {\r\n        const me = this;\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Save last position and unlock mouse UI events when resizing finished\r\n     * @param {*} e \r\n     */\r\n    onEndMove(e) {\r\n        const me = this;\r\n        me.#save();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', { stop: true });\r\n    }\r\n\r\n    /**\r\n    * Check if splitter use vertical or hotizontal splitting\r\n    * @returns {Boolean}\r\n    */\r\n    get isVertical() {\r\n        return this.split === 'vertical';\r\n    }\r\n\r\n    get isHorizontal() {\r\n        return !this.isVertical;\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display', 'none')).pop();\r\n        }\r\n        el.classList?.add(me.#styleTGT);\r\n        return el;\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.#elRef.value;\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        return this.target.style;\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n\r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n                .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, true);\r\n                    el.dataset.gsSplitter = true;\r\n                });\r\n        } else {\r\n            me.#lockable\r\n                .filter(el => el.dataset.gsSplitter)\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, false);\r\n                    delete el.dataset.gsSplitter;\r\n                });\r\n        }\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { width: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { height: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        const key = me.isVertical ? 'width' : 'height';\r\n        me.#styleDynamic[key] = val + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { [key]: val + \"px\" }, true);\r\n    }\r\n\r\n    #cssUpdate() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        const opt = {\r\n            [size]: `${me.size}px`,\r\n            [full]: '100%',\r\n            'border-width': '1px',\r\n            cursor: cursor,\r\n            'border-color': 'darkgray',\r\n            'border-style': 'solid',\r\n            'background-color': 'lightgray',\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-splitter');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNavItemElement } from '../NavItem.mjs';\r\n\r\n/**\r\n * Tab component (gs-tab), generate selectable/switchable tabs on a panel\r\n */\r\nexport class GSTabItemElement extends GSNavItemElement {\r\n\r\n  static properties = {\r\n    name: {}\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.#updateCSS + this.css;\r\n  }\r\n\r\n  get #updateCSS() {\r\n    const me = this;\r\n    return me.shouldUpdate() ? GSUtil.normalize(me.parentElement?.tabCSS) : '';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.owner?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\n\r\n/**\r\n * Container for individual tab; part of tabed panel\r\n */\r\nexport class GSTabPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    name: {},\r\n    template: {},\r\n    active: { type: Boolean, reflect : true }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.active = false;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" \r\n      class=\"${classMap(this.renderClass())}\">\r\n      <slot>\r\n      ${this.template ? html`<gs-template flat src=\"${this.template}\"></gs-template>` : ''}\r\n      </slot></div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tab-pane': true,\r\n      'd-none' : !me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tab-group') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../../base/GSID.mjs';\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { PlacementTypes } from '../../properties/placement.mjs';\r\nimport { GSNavElement } from '../Nav.mjs';\r\nimport { GSTabItemElement } from './Tab.mjs';\r\n\r\n/**\r\n * Panel with tabs component (gs-tab-group), generate childrens gs-tab and gs-tab-panel \r\n */\r\nexport class GSTabGroupElement extends GSNavElement {\r\n\r\n  static properties = {\r\n    panelCSS: { attribute: 'css-panel' },\r\n    tabCSS: { attribute: 'css-tab' },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    // link tabs and panels\r\n    me.queryAll('gs-tab').forEach(el => me.#findPanel(el));\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSTabItemElement);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    const tabEl = me.query('gs-tab[active],gs-tab[autofocus],gs-tab');\r\n    me.onSelected(tabEl);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-tab');\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'd-flex': me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    const me = this;\r\n    const reverse = PlacementTypes.isAfter(me.placement);\r\n    const list = [super.renderWrappedUI('tabs'),\r\n    html`<div class=\"tab-content flex-fill ${me.panelCSS}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <slot name=\"panels\"></slot>\r\n      </div>\r\n      <slot class=\"d-none\"></slot>`];\r\n    return reverse ? list.reverse() : list;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const css = super.renderWrappedClass();\r\n    return me.mapCSS(me.tabCSS, css);\r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab generated\r\n        .active=\"${o.active}\"\r\n        .autofocus=\"${o.autofocus || o.active}\"\r\n        .disabled=\"${ifDefined(o.disabled)}\" \r\n        icon=\"${ifDefined(o.icon)}\"    \r\n        title=\"${ifDefined(o.title)}\"\r\n        name=\"${o.name}\"></gs-tab>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderPanels() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-panel name=\"${o.name}\" \r\n        template=\"${ifDefined(o.template)}\"></gs-tab-panel>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Filter navigable element\r\n   * @param {HTMLElement} el \r\n   */\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-TAB';\r\n  }\r\n\r\n  /**\r\n   * Callback when tab selected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onSelected(el) {\r\n    el?.click();\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = true;\r\n  }\r\n\r\n  /**\r\n   * Callback when tab deselected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onDeselected(el) {\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = false;\r\n  }\r\n\r\n  /**\r\n   * Selected Tab node name is used to find the panel.\r\n   * If panel found, auto-link it with node element\r\n   * @param {GSTabElement} el \r\n   */\r\n  #findPanel(el) {\r\n    if (!el) return null;\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    const generated = false; // me.data?.length > 0;\r\n    let panel = el[key] || me.query(`gs-tab-panel[name=\"${el.name}\"]`, generated);\r\n    if (!el[key]) el[key] = panel;\r\n    return panel;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\n\r\n/**\r\n * A simple HTML Table rederer for read-only tabular data representation\r\n * For complex interactive dat use gs-table\r\n */\r\nexport class GSTableElement extends GSElement {\r\n\r\n  static #icons = ['sort-up', 'arrow-down-up', 'sort-down-alt'];\r\n\r\n  static styles = css`th:hover { opacity: 50% !important; }`;\r\n\r\n  static CELLS = {\r\n    align: {},\r\n    width: {},\r\n    width: {},\r\n    css: {},\r\n    title: {},\r\n    filter: { type: Boolean },\r\n    filterType: { attribute: 'filter-type' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    ...GSData.PROPERTIES\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    color: { ...color },\r\n    colorHead: { ...color, attribute: 'head-color' },\r\n    colorSelect: { ...color, attribute: 'select-color' },\r\n    colorSort: { ...color, attribute: 'sort-color' },\r\n    stripedColumn: { type: Boolean, attribute: 'striped-column' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    divider: { type: Boolean },\r\n    striped: { type: Boolean },\r\n    hover: { type: Boolean },\r\n    small: { type: Boolean },\r\n    grid: { type: Boolean },\r\n    borderless: { type: Boolean },\r\n\r\n    sort: { type: Array, state: true },\r\n    columns: { type: Array, state: true },\r\n    selections: { type: Array, state: true },\r\n    key: { type: Number, state: true },\r\n\r\n    data: { type: Array },\r\n    datacolumn: { type: Boolean },\r\n    multisort: { type: Boolean },\r\n    multiselect: { type: Boolean },\r\n    protected: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n    sortable: { type: Boolean },\r\n  }\r\n\r\n  #config = [];\r\n  #sortOrder = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.headColor = 'secondary';\r\n    this.colorSelect = 'info';\r\n    this.columns = [];\r\n    this.selections = [];\r\n    this.data = [];\r\n    this.sort = [];\r\n    this.key = 0;\r\n  }\r\n\r\n  get selected() {\r\n    const me = this;\r\n    return me.data.filter((v, i) => me.selections.includes(i));\r\n  }\r\n\r\n  set search(val) {\r\n    const me = this;\r\n    if (me.storage) {\r\n      return me.dataController.search = val;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#config = GSItem.proxify(me, GSTableElement.CELLS);\r\n    if (me.columns.length === 0) me.columns = me.#config.map(v => v.name);\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.data = [];\r\n    this.selections = [];\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'user-select-none': me.protected,\r\n      'table': true,\r\n      'table-sm': me.small,\r\n      'table-hover': me.hover,\r\n      'table-striped': me.striped,\r\n      'table-bordered': me.grid,\r\n      'table-borderless': me.borderless,\r\n      'table-striped-columns': me.stripedColumns,\r\n      [`table-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.dataController?.read();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (me.columns.length != me.sort.length) me.sort = Array(me.columns.length).fill(0);\r\n    if (me.datacolumn && me.data.length > 0) {\r\n      me.columns = me.data[0];\r\n      me.data = me.data.slice(1);\r\n    }\r\n    if (changed.has('multiselect') && !me.multiselect) me.selections = [];\r\n    if (changed.has('selectable') && !me.selectable) me.selections = [];\r\n    if (changed.has('sortable') || changed.has('multisort')) {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [];\r\n    }\r\n\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const headColor = me.colorHead ? `table-${me.colorHead}` : '';\r\n    return html`\r\n      <table  \r\n       dir=\"${ifDefined(me.direction)}\"\r\n       @keyup=\"${me.#onKeyUp}\"\r\n       @keydown=\"${me.#onKeyDown}\"\r\n       class=\"${classMap(me.renderClass())}\">\r\n        <thead class=\"${ifDefined(headColor)}\">\r\n          ${me.#renderFilters()}\r\n          <tr @click=${me.#onSort}>\r\n            ${me.columns.map((entry, index) => me.#renderColumn(entry, index))}\r\n          </tr>\r\n        </thead>\r\n        <tbody @click=${me.#onSelect} class=\"${me.divider ? 'table-group-divider' : ''}\" role=\"button\">\r\n          ${me.data.map((entry, index) => me.#renderRecord(entry, index))}\r\n          ${me.#renderEmpty()}\r\n        </tbody>\r\n      </table>\r\n      <slot name=\"extra\"></slot>\r\n    `;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    const me = this;\r\n    me.data = data;\r\n    me.selections = [];\r\n\r\n    // update filtering\r\n    if (data.length > 0 && me.#hasFilters) {\r\n      me.#config.forEach((entry, index) => {\r\n        entry.columnType = me.#columType(index);\r\n      });\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.#input.forEach(el => el.value = '');\r\n    this.dataController?.filter([]);\r\n  }\r\n\r\n  valueAt(row, cell) {\r\n    return this.data.length > row ? this.data[row][cell] : undefined;\r\n  }\r\n\r\n  get #input() {\r\n    return this.queryAll('th > input', true);\r\n  }\r\n\r\n  get #hasFilters() {\r\n    return this.#config.filter(o => o.filter).length > 0;\r\n  }\r\n\r\n  #columType(index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const cell = me.valueAt(0, me.columns[index]);\r\n    cfg.type = cfg.type || 'text';\r\n    const cfgType = { 'string': 'text', 'currency': 'number', 'timestamp': 'datetime-local' }[cfg.type]\r\n    const dataType = cell instanceof Date ? 'date' : typeof cell;\r\n    return cell ? dataType : cfgType || cfg.type;\r\n  }\r\n\r\n  #renderFilters() {\r\n    const me = this;\r\n    return me.#hasFilters ? html`<tr>${me.columns.map((entry, index) => me.#renderFilter(entry, index))}</tr>` : '';\r\n  }\r\n\r\n  #renderFilter(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (!cfg?.filter) return html`<th></th>`;\r\n    let mask = '';\r\n    const isDate = cfg.columnType === 'date';\r\n    if (isDate) mask = cfg.format || GSUtil.getDateFormat(cfg.locale || GSUtil.locale);\r\n    const css = `${GSUtil.normalize(me.cssFilter)} ${GSUtil.normalize(cell.cssFilter)}`; \r\n\r\n    return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n        <input is=\"gs-ext-input\" .index=${index}\r\n            class=\"form-control ${css}\" \r\n            mask=\"${ifDefined(mask)}\"\r\n            name=\"${cell}\" \r\n            type=\"${cfg.filterType || cfg.columnType}\"\r\n            data-slots=\"${ifDefined(isDate ? 'DMY' : undefined)}\">\r\n        </th>`;\r\n  }\r\n\r\n  #renderColumn(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const css = `${GSUtil.normalize(me.cssHeader)} ${GSUtil.normalize(cell.cssHeader)}`; \r\n    return html`\r\n      <th .index=${index} class=\"${css}\" width=\"${ifDefined(me.#config[index]?.width)}\">\r\n        <div class=\"d-flex justify-content-between\"> \r\n          <span>${cfg?.title || cell}</span>\r\n          ${me.#renderIcon(index)}\r\n        </div>\r\n      </th>\r\n    `\r\n  }\r\n\r\n  #renderIcon(index) {\r\n    const me = this;\r\n    if (!me.sortable) return '';\r\n    const icons = GSTableElement.#icons;\r\n    const sortType = me.sort[index];\r\n    const order = me.multisort ? me.#sortOrder.indexOf(index) + 1 : '';\r\n    return html`<gs-icon name=\"${icons[sortType + 1]}\" super=\"${order > 0 ? order : ''}\" color=\"${ifDefined(me.colorSort)}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderRecord(entry, index) {\r\n    const me = this;\r\n    if (!Array.isArray(entry)) entry = me.columns.map(v => entry[v]);\r\n    entry = entry.map((val, i) => me.#config[i] ? GSData.format(me.#config[i], val) : val);\r\n    const color = me.colorSelect && me.selections.includes(index) ? `table-${me.colorSelect}` : '';\r\n    return html`\r\n        <tr .index=${index} class=\"${color}\" tabindex=\"0\">\r\n          ${entry.map((cell, i) => html`<td class=\"text-${me.#config[i]?.align}\"><span>${cell}</span></td>`)}\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  #renderEmpty() {\r\n    const me = this;\r\n    if (me.data.length > 0 ) return '';\r\n    return html`<tr data-ignore=\"true\"><td colspan=\"${me.columns.length}\" class=\"text-center fw-bold text-muted\">${me.translate('No Data')}</td></tr>`;\r\n\r\n  }\r\n\r\n  #onFilter(e) {\r\n    const me = this;\r\n    const filter = me.#input\r\n      .map(el => {\r\n        if (!el.value) return undefined;\r\n        const isDate = el.type === 'date';\r\n        const val = isDate ? el.valueAsDate : el.value;\r\n        const cfg = me.#config[el.index];\r\n        return { name: el.name, value: val, locale : cfg?.locale }\r\n      })\r\n      .filter(el => el?.value);\r\n    me.dataController.filter(filter);\r\n  }  \r\n\r\n  #onSort(e) {\r\n    const me = this;\r\n    if (!me.sortable) return;\r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const column = e.target.closest('th');\r\n    if (!icon || !column) return;\r\n    const idx = column.index !== undefined ? column.index : GSDOM.getElementIndex(column);\r\n    const current = me.sort[idx];\r\n    const sortType = current === 1 ? -1 : current + 1;\r\n\r\n    if (me.multisort) {\r\n      if (sortType == 0) {\r\n        me.#sortOrder = me.#sortOrder.filter(v => v != idx);\r\n      } else if (!me.#sortOrder.includes(idx)) {\r\n        me.#sortOrder.push(idx);\r\n      }\r\n    } else {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [idx];\r\n    }\r\n\r\n    me.sort[idx] = sortType;\r\n\r\n    const sort = me.#prepareSorter(me.sort, me.#sortOrder);\r\n\r\n    if (me.storage) {\r\n      return me.dataController.sort(sort);\r\n    }\r\n\r\n    me.data = GSData.sortData(me.data, sort);\r\n    me.emit('sort');\r\n  }\r\n\r\n  #prepareSorter(sort, sortOrder) {\r\n    const me = this;\r\n\r\n    if (sort.filter(v => v).length === 0) {\r\n      sort = Array(me.columns.length).fill(0);\r\n      sort[me.key] = 1;\r\n    }\r\n\r\n    // if data record is object (not simple array)\r\n    const isComplex = me.data[0] && !Array.isArray(me.data[0]);\r\n\r\n    // sort list \r\n    const list = sort.map((v, i) => v ? { name: isComplex ? me.columns[i] : undefined, col: i, ord: v, idx: sortOrder.indexOf(i) } : null).filter(v => v);\r\n\r\n    // order sort list by idx\r\n    sort = GSData.sortData(list, [{ name: 'idx', ord: 1 }]);\r\n\r\n    return sort;\r\n  }\r\n\r\n  #onSelect(e) {\r\n    const me = this;\r\n    if (!me.selectable) return;\r\n    const tr = e.target.tagName === 'TR' ? e.target : e.target.closest('tr');\r\n    if (!tr) return;\r\n    const isSelected = me.selections.includes(tr.index);\r\n    if (me.multiselect) {\r\n      if (isSelected) {\r\n        me.selections = me.selections.filter(v => v != tr.index);\r\n      } else {\r\n        me.selections.push(tr.index);\r\n        me.requestUpdate();\r\n      }\r\n    } else {\r\n      me.selections = isSelected ? [] : [tr.index];\r\n    }\r\n    me.emit('select');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    if (!e.target.matches('tbody tr')) return;\r\n    let el = null;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        el = e.target.previousElementSibling;\r\n        break;\r\n      case 'ArrowDown':\r\n        el = e.target.nextElementSibling;\r\n        break;\r\n    }\r\n\r\n    if (el) {\r\n      el.focus();\r\n      this.emit('focus', el);\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') this.#onSelect(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-table');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport { createRef, ref, classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { stringArrayConverter, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSTagElement}\r\n */\r\nexport default class GSTagElement extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static styles = css`\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n\r\n    static properties = {\r\n        placeholder: {},\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        name: {},\r\n        data: { type: Array },\r\n        values: { type: Array, reflect: true, converter: stringArrayConverter },\r\n        appendable: { type: Boolean },\r\n        color: { ...color },\r\n        closeColor: { ...color, attribute: 'close-color' },\r\n        cssClose: { attribute: 'css-close' },\r\n        cssTag: { attribute: 'css-tag' },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {}\r\n    }\r\n\r\n    #dataListRef = createRef();\r\n    #inputRef = createRef();\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = '';\r\n        this.data = this.#items;\r\n        this.closeColor = 'light';\r\n        this.color = 'primary';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const tags = me.#renderTags();\r\n        return html`\r\n        <div  dir=\"${ifDefined(me.direction)}\" \r\n            class=\"${classMap(me.renderClass())}\"\r\n            @click=\"${me.#onClick.bind(me)}\">\r\n            ${tags}\r\n            <input type=\"text\" \r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            ${ref(me.#inputRef)}\r\n            name=\"${me.name}\" \r\n            list=\"${me.name}_list\"\r\n            class=\"form-control d-flex w-auto flex-grow-1\" \r\n            placeholder=\"${me.#info}\">\r\n            <datalist ${ref(me.#dataListRef)} id=\"${me.name}_list\">${me.#renderList()}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"d-flex\": true,\r\n            \"flex-wrap\": true,\r\n            \"align-items-center\": true,\r\n            \"gap-1 \": true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    get #info() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return me.placeholder ? me.placeholder : alt;\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTagElement.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.data.length >= me.max;\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax || (!optEl && me.appendable == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (!me.values.includes(fld.value)) {\r\n            me.values.push(fld.value);\r\n            fld.value = '';\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const value = tagEl.dataset.value;\r\n        me.values = me.values.filter(v => v != value);\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v));\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        const size = me.size > 0 ? `fs-${me.size}` : '';\r\n        return html`<div class=\"${classMap(me.#tagClass)}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"${classMap(me.#btnClass)}\"></button></div>`;\r\n    }\r\n\r\n    get #tagClass() {\r\n        const me = this;\r\n        const opt = {\r\n            badge: true,\r\n            tag: true,\r\n            [`fs-${me.size}`]: me.size > 0,\r\n            [`bg-${me.color}`]: me.color ? true : false\r\n        }\r\n        return me.mapCSS(me.cssTag, opt);\r\n    }\r\n\r\n    get #btnClass() {\r\n        const me = this;\r\n        const opt = {\r\n            'btn-close': true,\r\n            'ms-1': true,\r\n            [`bg-${me.closeColor}`]: me.closeColor ? true : false\r\n        }\r\n        return me.mapCSS(me.cssClose, opt);\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        return me.data.map(v => html`<option value=\"${v}\">`);\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el));\r\n    }\r\n\r\n    get #items() {\r\n        return this.#proxify(this).map(el => el.name).filter(v => v ? true : false);\r\n    }\r\n\r\n    get #input() {\r\n        return this.#inputRef.value;\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.#dataListRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-tag');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSTextElement extends GSElement {\r\n\r\n  #text = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.#text = this.innerText;\r\n    this.innerText = \"\";\r\n  }\r\n\r\n  renderUI() {\r\n    return this.translate(this.#text);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-text');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSTooltipElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    title: {},\r\n    target: {},\r\n    opened: { type: Boolean },\r\n    local: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowStyle = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.placement = 'top';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowStyle);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      role=\"tooltip\"\r\n      data-popper-placement=\"${me.placement}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      <div ${ref(me.#arrowRef)} \r\n          class=\"tooltip-arrow ${me.#arrowStyle}\" \r\n          data-gs-class=\"${me.#arrowStyle}\">\r\n      </div>\r\n      <div class=\"tooltip-inner\">${me.translate(me.title)}</div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tooltip': true,\r\n      'bs-tooltip-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  #attachEvents() {\r\n    const me = this;\r\n    me.attachEvent(me.#ref, 'mouseenter', me.open.bind(me));\r\n    me.attachEvent(me.#ref, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const arrowEl = me.#arrow;\r\n    const panelEl = me.#panel;\r\n    if (!panelEl) return;\r\n    if (me.opened) {\r\n      GSPopper.popupFixed(me.placement, panelEl, me.#ref, arrowEl);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, { top: '-1000px', left: '-1000px' });\r\n    }\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return me.local ? me.#refLocal : me.#refGlobal;\r\n    }\r\n  }\r\n\r\n  get #refLocal() {\r\n    const root = GSDOM.root(this);\r\n    return GSDOM.query(root, this.target);\r\n  }\r\n  \r\n  get #refGlobal() {\r\n    return GSDOM.query(document.body, this.target);\r\n  }\r\n\r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-tooltip');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty } from '../properties/index.mjs';\r\n\r\nexport class GSTemplateElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { reflect: true, hasChanged: notEmpty }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    const me = this;\r\n    if (me.flat) {\r\n      me.renderOptions.renderBefore = me;\r\n      return me.parentElement;\r\n    }\r\n    return super.createRenderRoot();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${this.renderTemplate()}`;\r\n  }\r\n\r\n\ttemplateInjected() {\r\n\t\tthis.emit('template-injected', null, true, true);\r\n\t}\r\n\r\n  static {\r\n    this.define('gs-template');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle automatic field value copy and select\r\n */\r\nexport class CopySelectController {\r\n\r\n  #host;\r\n\r\n  #clickCallback;\r\n  #copyCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#clickCallback = me.#onClick.bind(me);\r\n    me.#copyCallback = me.#onCopy.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('click', me.#clickCallback);\r\n    me.#host.on('copy', me.#copyCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('click', me.#clickCallback);\r\n    me.#host.off('copy', me.#copyCallback);\r\n  }\r\n\r\n  #onCopy() {\r\n    GSUtil.writeToClipboard(this.#host.value);\r\n  }\r\n\r\n  #onClick(e) {\r\n      const me = this;\r\n      if (me.#host.autocopy) GSUtil.writeToClipboard(me.#host.value);\r\n      if (me.#host.autoselect) me.#host.select();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle field mask \r\n */\r\nexport class MaskController {\r\n\r\n  static #special = '.^$*+?()[]{}\\|';\r\n\r\n  static #maskType = {\r\n    x: /[0-9a-fA-F]/g,\r\n    n: /[0-9]/g,\r\n    y: /[0-9]/g,\r\n    m: /[0-9]/g,\r\n    d: /[0-9]/g,\r\n    h: /[0-9]/g,\r\n    s: /[0-9]/g,\r\n    '.': /[0-9]/g,\r\n    '#': /[a-zA-Z]/g,\r\n    '*': /[0-9a-zA-Z]/g,\r\n    '_': /./g\r\n  };\r\n\r\n  #back = false;\r\n  #slots;\r\n  #prev;\r\n  #first;\r\n  #accept;\r\n  #pattern;\r\n\r\n  #host;\r\n\r\n  #keyDownCallback;\r\n  #inputCallback;\r\n  #focusCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    me.#inputCallback = me.#format.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.initRules();\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n    me.#host.on('input', me.#inputCallback);\r\n    me.#host.on('focus', me.#focusCallback);\r\n    me.#host.on('blur', me.#blurCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n    me.#host.off('input', me.#inputCallback);\r\n    me.#host.off('focus', me.#focusCallback);\r\n    me.#host.off('blur', me.#blurCallback);\r\n  }\r\n\r\n  initRules() {\r\n    const me = this;\r\n    if (!me.pattern) return;\r\n    me.#slots = me.#builSlots();\r\n    me.#prev = (j => Array.from(me.pattern, (c, i) => me.#slots.has(c) ? j = i + 1 : j))(0);\r\n    me.#first = [...me.pattern].findIndex(c => me.#slots.has(c));\r\n    me.#accept = me.#builAccept();\r\n    me.#toPattern();    \r\n  }\r\n  \r\n  validate() {\r\n    const me = this;\r\n    me.setCustomValidity('');\r\n    me.#pattern.lastIndex = 0;\r\n    const isMatch = me.required ? me.#pattern.test(me.raw) : true;\r\n    const isValid = isMatch && me.checkValidity();\r\n    if (!isMatch) me.setCustomValidity('Data did not match pattern!');\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.#host.checkValidity();\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.#host.reportValidity();\r\n  }\r\n\r\n  setSelectionRange(i, j) {\r\n    this.#host.setSelectionRange(i, j);\r\n  }\r\n  \r\n  select() {\r\n    this.#host.select();\r\n  }\r\n\r\n  get value() {\r\n    const [i, j] = this.#range();\r\n    return this.raw.substring(0, j);\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get pattern() {\r\n    return this.#host.mask;\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get selectionStart() {\r\n    return this.#host.selectionStart;\r\n  }\r\n\r\n  get selectionEnd() {\r\n    return this.#host.selectionEnd;\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.#host.autoselect;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    this.#back = e.key === \"Backspace\";\r\n  }\r\n\r\n  #onFocus(e) {\r\n    const me = this;\r\n    me.#format(e);\r\n    if (me.autoselect) me.select();\r\n  }\r\n\r\n  #onBlur(e) {\r\n    // me.value === me.pattern && (me.value = \"\");\r\n    this.validate();\r\n  }\r\n\r\n  /**\r\n   * If data-slots not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #builSlots() {\r\n    const me = this;\r\n    let slots = me.dataset.slots;\r\n    if (!slots) {\r\n      const maskType = MaskController.#maskType;\r\n      slots = [...new Set(me.pattern)]\r\n        .filter(v => maskType[v.toLowerCase()])\r\n        .join('');\r\n    }\r\n    return new Set(slots || \"_\");\r\n  }\r\n\r\n  /**\r\n   * If data-accept not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #builAccept() {\r\n    const me = this;\r\n    let accept = me.dataset.accept;\r\n    if (!accept) {\r\n      const maskType = MaskController.#maskType;\r\n      accept = [...new Set(me.pattern)]\r\n      .map(v => maskType[v.toLowerCase()])\r\n      .filter(v => v);\r\n      if (accept.length > 0) {\r\n        const tmp = {};\r\n        accept.forEach(v => tmp[v.src] = v);\r\n        accept = Object.values(tmp);\r\n        return accept.length === 1 ? accept.pop() : accept;\r\n      } \r\n\r\n    }\r\n    return new RegExp(accept || \"\\\\d\", \"g\");\r\n  }\r\n\r\n  #range() {\r\n    const me = this;\r\n    const value = me.raw;\r\n    return [me.selectionStart, me.selectionEnd].map(i => {\r\n      i = me.#clean(value.slice(0, i)).findIndex(c => me.#slots.has(c));\r\n      return i < 0 ? me.#prev[me.#prev.length - 1] : me.#back ? me.#prev[i - 1] || me.#first : i;\r\n    });\r\n  }\r\n\r\n  #format(e) {\r\n    const me = this;\r\n    const [i, j] = me.#range();\r\n    me.value = me.#clean(me.#host.raw).join``;\r\n    me.setSelectionRange(i, j);\r\n    me.#back = false;\r\n  }\r\n\r\n  //  TODO support multi #accecpt\r\n  #clean(input) {\r\n    const me = this;\r\n    input = input.match(me.#accept) || [];\r\n    return Array.from(me.pattern, c => input[0] === c || me.#slots.has(c) ? input.shift() || c : c);\r\n  }\r\n\r\n  #toPattern() {\r\n\r\n    const me = this;\r\n\r\n    if (me.pattern.length === 0) return;\r\n\r\n    const chars = me.pattern.split('');\r\n    const masks = ['^'];\r\n\r\n    const maskType = MaskController.#maskType;\r\n    const special = MaskController.#special;\r\n\r\n    let cnt = 0;\r\n    chars.forEach((v, i) => {\r\n      const m = maskType[v.toLowerCase()];\r\n      if (!m) {\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        cnt = 0;\r\n        if (special.includes(v)) masks.push('\\\\');\r\n        return masks.push(v);\r\n      }\r\n\r\n      chars[i] = new RegExp(m, 'g');\r\n\r\n      if (masks.length === 0) return masks.push(m.source);\r\n\r\n      if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n      if (cnt > 0) masks.push(`{${++cnt}}`);\r\n      cnt = 0;\r\n      masks.push(m.source);\r\n    });\r\n\r\n    if (cnt > 0) masks.push(`{${++cnt}}`);\r\n    masks.push('$');\r\n\r\n    me.#pattern = new RegExp(masks.join(''), 'g');\r\n    // me.#max = me.pattern.length;\r\n    // me.#masks = chars;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type number to support max length entry\r\n */\r\nexport class NumberController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get maxLength() {\r\n    return GSUtil.asNum(this.#host.maxLength, 0);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n    \r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'number') return me.#onNumberInput(e);\r\n  }\r\n\r\n  #onNumberInput(e) {\r\n    const me = this;\r\n    if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n        me.value = me.value.substring(0, me.maxLength);\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle for input tpye password tosupport keyboard shortcut for password reveal.\r\n */\r\nexport class PasswordController {\r\n\r\n  #host;\r\n\r\n  #revealing = false;\r\n\r\n  #keyUpCallback;\r\n  #keyDownCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyUpCallback = me.#onKeyUp.bind(me);\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('keyup', me.#keyUpCallback);\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keyup', me.#keyUpCallback);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  get reveal() {\r\n    return this.#host.hasAttribute('reveal');\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  set type(val) {\r\n    if (this.#host) this.#host.type = val;\r\n  }\r\n\r\n  #isReveal(e) {\r\n    return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    const me = this;\r\n    if (e.key === 'Shift' && me.#revealing) {\r\n      me.type = 'password';\r\n    }\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (me.#isReveal(e)) {\r\n      me.#revealing = true;\r\n      me.type = 'text';\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSCSSMap } from \"../../../base/GSCSSMap.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type text to support text value changes based on CSS\r\n */\r\nexport class TextController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'text') me.value = me.#updateText(me.value);\r\n  }\r\n\r\n  #updateText(value = '') {\r\n    const map = GSCSSMap.styleValue(this.#host, 'text-transform');\r\n    if (map) value = GSUtil.textTransform(map.value, value);\r\n    return value;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update avaialble selections in another field selections.\r\n */\r\nexport class ListController {\r\n\r\n  #host;\r\n\r\n  #monitorCallback;\r\n  #changeCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#monitorCallback = me.#onMonitor.bind(me);\r\n    me.#changeCallback = me.#onDataChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (list) {\r\n      me.#host.on('blur', me.#blurCallback);\r\n      me.#host.on('change', me.#changeCallback);\r\n      me.#host.attachEvent(me.filter, 'change', me.#monitorCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('blur', me.#blurCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n    me.#host.removeEvent(me.filter, 'change', me.#monitorCallback);\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n      this.#onDataChange();\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get list() {\r\n    const me = this;\r\n    if (me.#host.list) return me.#host.list;\r\n    const list = GSAttr.get(me.#host, 'list');\r\n    return GSDOM.getByID(me.#host.owner, list);\r\n  }\r\n\r\n  get filter() {\r\n    const me = this;\r\n    const filter = GSAttr.get(me.#host, 'data-filter');\r\n    return GSDOM.getByID(me.#host.owner, filter);\r\n  }\r\n\r\n  get owner() {\r\n    return this.#host.owner;\r\n  }\r\n\r\n  get strict() {\r\n    return GSAttr.get(this.#host, 'strict', '');\r\n  }\r\n\r\n  #onBlur(e) {\r\n    if (!this.#isInList()) GSEvents.send(this.#host, 'strict', { ok: false, source: e });\r\n  }\r\n\r\n  #onDataChange(e) {\r\n    const me = this;\r\n    const own = me.owner;\r\n    let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n    let clean = false;\r\n    if (!opt) {\r\n        opt = me.list?.querySelector('option');\r\n        clean = true;\r\n    }\r\n\r\n    const obj = opt?.dataset || {};\r\n    Object.entries(obj).forEach(p => {\r\n        const val = clean ? '' : p[1];\r\n        const key = p[0];\r\n        GSAttr.set(me.#host, `data-${key}`, p[1]);\r\n        if (key === 'id' || key === 'group') return;\r\n\r\n        const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n        const els = Array.from(GSDOM.queryAll(own, filter));\r\n        els.filter(el => el.tagName !== 'OPTION')\r\n            .filter(el => el !== me)\r\n            .filter(el => GSAttr.get(el, 'list').length === 0)\r\n            .forEach(el => me.#togleEl(el, key, val))\r\n    });\r\n  }\r\n\r\n  #onMonitor(e) {\r\n    const me = this;\r\n    const list = me.list;\r\n    me.value = '';\r\n    const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n    GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n    const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n    GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n\r\n  }\r\n\r\n  #togleEl(el, key = '', value = '') {\r\n\r\n    const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n    const isMatch = value.length > 0 && data.includes(value);\r\n    const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n\r\n    if (frmel) {\r\n      GSAttr.toggle(el, 'disabled', !isMatch);\r\n    } else {\r\n      isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n    }\r\n\r\n    const form = GSDOM.closest(el, 'form');\r\n    GSDOM.formElements(form)\r\n      .forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n  }\r\n\r\n  #isInList() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (!list) return true;\r\n    if (!me.strict) return true;\r\n    if (!list.querySelector('option')) return true;\r\n    const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n    return opt != null;\r\n  }\r\n\r\n}  ","\r\nimport { notEqual, defaultConverter } from '../../lib.mjs';\r\n\r\n\r\nconst defaultPropertyDeclaration = {\r\n    attribute: true,\r\n    reflect: false,\r\n    type: String,\r\n    converter: defaultConverter,\r\n    hasChanged: notEqual,\r\n}\r\n\r\nconst attributeToPropertyMap = Symbol();\r\nconst prepare = Symbol();\r\nconst elementProperties = Symbol();\r\nconst finalize = Symbol();\r\nconst finalized = Symbol();\r\n\r\nconst prepareFn = function () {\r\n    const me = this;\r\n    if (Object.getOwnPropertySymbols(me).includes(elementProperties)) return;\r\n    const superCtor = Object.getPrototypeOf(me);\r\n    if (typeof superCtor[finalize] === 'function') superCtor[finalize]();\r\n    me[elementProperties] = new Map(superCtor[elementProperties]);\r\n}\r\n\r\nconst attributeNameForProperty = (name, options) => {\r\n    const attribute = options.attribute;\r\n    return attribute === false\r\n        ? undefined\r\n        : typeof attribute === 'string'\r\n            ? attribute\r\n            : typeof name === 'string'\r\n                ? name.toLowerCase()\r\n                : undefined;\r\n}\r\n\r\n/**\r\n * Reactivity for HTMLInputElement based on Google ltd. Lit ReactiveElement\r\n */\r\nexport class ReactiveInput extends HTMLInputElement {\r\n\r\n    // user defiend \r\n    static properties = {};\r\n    \r\n    static [finalized] = false;\r\n\r\n    #reflectingProperties = undefined;\r\n    #instanceProperties = undefined;\r\n\r\n    #controllers = undefined;\r\n    #updatePromise = undefined;\r\n    #changedProperties = undefined;\r\n    #reflectingProperty = undefined;\r\n\r\n    #hasUpdated = false;\r\n    #isUpdatePending = false;\r\n\r\n    /**\r\n     * Returns a list of attributes corresponding to the registered properties.\r\n    */\r\n    static get observedAttributes() {\r\n        Object.defineProperty(ReactiveInput.__proto__, prepare, { value: prepareFn });\r\n        const me = this;\r\n        me[finalize]();\r\n        return me[attributeToPropertyMap] && [...me[attributeToPropertyMap].keys()];\r\n    }\r\n\r\n    static addInitializer(initializer) {\r\n        const me = this;\r\n        me[prepare]();\r\n        me.initializers ??= [].push(initializer);\r\n    }\r\n\r\n    static [finalize]() {\r\n        const me = this;\r\n        //if (Object.hasOwn(me, 'finalized')) return;\r\n        if (me[finalized] === true) return;\r\n        me[finalized] = true;\r\n        me[prepare]();\r\n\r\n        if (Object.hasOwn(me, 'properties')) {\r\n            const props = me.properties;\r\n            const propKeys = [\r\n                ...Object.getOwnPropertyNames(props),\r\n                ...Object.getOwnPropertySymbols(props),\r\n            ];\r\n            for (const p of propKeys) {\r\n                me.createProperty(p, props[p]);\r\n            }\r\n        }\r\n\r\n        // Create the attribute-to-property map\r\n        me[attributeToPropertyMap] = new Map();\r\n        for (const [p, options] of me[elementProperties]) {\r\n            const attr = attributeNameForProperty(p, options);\r\n            if (attr !== undefined) {\r\n                me[attributeToPropertyMap].set(attr, p);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static createProperty(name, options) {\r\n        const me = this;\r\n        if (options.state) options.attribute = false;\r\n        me[prepare]();\r\n        me[elementProperties].set(name, options);\r\n        if (!options.noAccessor) {\r\n            const key = Symbol();\r\n            const descriptor = me.getPropertyDescriptor(name, key, options);\r\n            if (descriptor !== undefined) {\r\n                Object.defineProperty(me.prototype, name, descriptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    static getPropertyDescriptor(name, key, options) {\r\n        const { get, set } = Object.getOwnPropertyDescriptor(this.prototype, name) ?? {\r\n            get() {\r\n                return this[key];\r\n            },\r\n            set(v) {\r\n                this[key] = v;\r\n            },\r\n        }\r\n        return {\r\n            get() {\r\n                return get?.call(this);\r\n            },\r\n            set(value) {\r\n                const me = this;\r\n                const oldValue = get?.call(me);\r\n                set?.call(me, value);\r\n                me.requestUpdate(name, oldValue, options);\r\n            },\r\n            configurable: true,\r\n            enumerable: true,\r\n        }\r\n    }\r\n\r\n    static getPropertyOptions(name) {\r\n        return this[elementProperties].get(name) ?? defaultPropertyDeclaration;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initialize();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.enableUpdating(true);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        this.#attributeToProperty(name, newValue);\r\n    }\r\n\r\n    // ******************************\r\n    // PUBLIC GETTERS\r\n    // ******************************\r\n\r\n    get hasUpdated() { return this.#hasUpdated; }\r\n    get isUpdatePending() { return this.#isUpdatePending; }\r\n    get renderRoot() { return this; }\r\n\r\n    // ******************************\r\n    // PROTECTED FUNCTIONS \r\n    // ******************************\r\n\r\n    addController(controller) {\r\n        // if (!(controller instanceof ReactiveController)) throw new Error('Argument not instance of ReactiveController');\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    enableUpdating(requestedUpdate) { }\r\n\r\n    firstUpdated(changedProperties) { }\r\n\r\n    updated(changedProperties) { }\r\n\r\n    getUpdateComplete() { return this.#updatePromise; }\r\n\r\n    scheduleUpdate() { return this.performUpdate(); }\r\n\r\n    shouldUpdate(changedProperties) { return true; }\r\n\r\n    willUpdate(changedProperties) { }\r\n\r\n    update(changedProperties) {\r\n        const me = this;\r\n        // The forEach() expression will only run when when #reflectingProperties is\r\n        // defined, and it returns undefined, setting #reflectingProperties to undefined\r\n        me.#reflectingProperties &&= me.#reflectingProperties.forEach((p) => me.#propertyToAttribute(p, this[p]));\r\n        me.#markUpdated();\r\n    }\r\n\r\n    get updateComplete() {\r\n        return this.getUpdateComplete();\r\n    }\r\n\r\n    requestUpdate(name, oldValue, options) {\r\n        const me = this;\r\n        if (name !== undefined) {\r\n            options ??= (me.constructor).getPropertyOptions(name);\r\n            const hasChanged = options.hasChanged ?? notEqual;\r\n            const newValue = me[name];\r\n            if (hasChanged(newValue, oldValue)) {\r\n                me.#changeProperty(name, oldValue, options);\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (me.#isUpdatePending === false) {\r\n            me.#updatePromise = me.#enqueueUpdate();\r\n        }\r\n    }\r\n\r\n    performUpdate() {\r\n\r\n        const me = this;\r\n        if (!me.#isUpdatePending) return;\r\n\r\n        if (!me.#hasUpdated) {\r\n\r\n            // Mixin instance properties once, if they exist.\r\n            if (me.#instanceProperties) {\r\n                for (const [p, value] of me.#instanceProperties) {\r\n                    this[p] = value;\r\n                }\r\n                me.#instanceProperties = undefined;\r\n            }\r\n\r\n            const elementProps = me.constructor[elementProperties];\r\n            if (elementProps.size > 0) {\r\n                for (const [p, options] of elementProps) {\r\n                    if (\r\n                        options.wrapped === true &&\r\n                        !me.#changedProperties.has(p) &&\r\n                        me[p] !== undefined\r\n                    ) {\r\n                        me.#changeProperty(p, this[p], options);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let shouldUpdate = false;\r\n        const changedProperties = me.#changedProperties;\r\n        try {\r\n            shouldUpdate = me.shouldUpdate(changedProperties);\r\n            if (shouldUpdate) {\r\n                me.willUpdate(changedProperties);\r\n                me.#controllers?.forEach((c) => c.hostUpdate?.());\r\n                me.update(changedProperties);\r\n            } else {\r\n                me.#markUpdated();\r\n            }\r\n        } catch (e) {\r\n            shouldUpdate = false;\r\n            me.#markUpdated();\r\n            throw e;\r\n        }\r\n\r\n        if (shouldUpdate) {\r\n            me.#didUpdate(changedProperties);\r\n        }\r\n    }\r\n\r\n    // ******************************\r\n    // PRIVATE FUNCTIONS \r\n    // ******************************\r\n\r\n    #didUpdate(changedProperties) {\r\n        const me = this;\r\n        me.#controllers?.forEach((c) => c.hostUpdated?.());\r\n        if (!me.#hasUpdated) {\r\n            me.#hasUpdated = true;\r\n            me.firstUpdated(changedProperties);\r\n        }\r\n        me.updated(changedProperties);\r\n    }\r\n\r\n    #markUpdated() {\r\n        const me = this;\r\n        me.#changedProperties = new Map();\r\n        me.#isUpdatePending = false;\r\n    }\r\n\r\n    async #enqueueUpdate() {\r\n        const me = this;\r\n        me.#isUpdatePending = true;\r\n        try {\r\n            await me.#updatePromise;\r\n        } catch (e) {\r\n            Promise.reject(e);\r\n        }\r\n        const result = me.scheduleUpdate();\r\n\r\n        if (result != null) {\r\n            await result;\r\n        }\r\n        return !me.#isUpdatePending;\r\n    }\r\n\r\n    #changeProperty(name, oldValue, options) {\r\n        const me = this;\r\n        if (!me.#changedProperties.has(name)) {\r\n            me.#changedProperties.set(name, oldValue);\r\n        }\r\n\r\n        if (options.reflect === true && me.#reflectingProperty !== name) {\r\n            (me.#reflectingProperties ??= new Set()).add(name);\r\n        }\r\n    }\r\n\r\n    #attributeToProperty(name, value) {\r\n        const me = this;\r\n        const ctor = me.constructor;\r\n        const propName = (ctor[attributeToPropertyMap]).get(name);\r\n        if (propName !== undefined && me.#reflectingProperty !== propName) {\r\n            const options = ctor.getPropertyOptions(propName);\r\n            const converter =\r\n                typeof options.converter === 'function'\r\n                    ? { fromAttribute: options.converter }\r\n                    : options.converter?.fromAttribute !== undefined\r\n                        ? options.converter\r\n                        : defaultConverter;\r\n            // mark state reflecting\r\n            me.#reflectingProperty = propName;\r\n            me[propName] = converter?.fromAttribute(value, options.type);\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #propertyToAttribute(name, value) {\r\n        const me = this;\r\n        const elementProps = me.constructor[elementProperties];\r\n        const options = elementProps?.get(name);\r\n        const attr = attributeNameForProperty(name, options);\r\n        if (attr !== undefined && options.reflect === true) {\r\n            const converter =\r\n                (options.converter)?.toAttribute !==\r\n                    undefined\r\n                    ? (options.converter)\r\n                    : defaultConverter;\r\n            const attrValue = converter?.toAttribute(value, options.type);\r\n\r\n            me.#reflectingProperty = name;\r\n            if (attrValue == null) {\r\n                me.removeAttribute(attr);\r\n            } else {\r\n                me.setAttribute(attr, attrValue);\r\n            }\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #saveInstanceProperties() {\r\n        const me = this;\r\n        const instanceProperties = new Map();\r\n        const elementProps = me.constructor[elementProperties];\r\n        for (const p of elementProps.keys()) {\r\n            if (Object.hasOwn(me, p)) {\r\n                instanceProperties.set(p, me[p]);\r\n                delete me[p];\r\n            }\r\n        }\r\n        if (instanceProperties.size > 0) {\r\n            me.#instanceProperties = instanceProperties;\r\n        }\r\n    }\r\n\r\n    #initialize() {\r\n        const me = this;\r\n        me.#updatePromise = new Promise((res) => me.enableUpdating = res);\r\n        me.#changedProperties = new Map();\r\n        me.#saveInstanceProperties();\r\n        me.requestUpdate();\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n        const data = this.form?.data;\r\n        if (data) GSDOM.fromObject2Element(this, data);\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity();\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get form() {\r\n        return this.closest('gs-form');\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Find closest top element by CSS selector\r\n     * @param {String} query \r\n     * @returns {HTMLElement}\r\n     */\r\n    closest(query = '') {\r\n        return GSDOM.closest(this, query);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = { value: o };\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSData } from '../../base/GSData.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\nimport { AdoptedController } from '../../controllers/AdoptedController.mjs';\r\nimport { AttributeController } from '../../controllers/AttributeController.mjs';\r\nimport { CopySelectController } from './controllers/CopySelectController.mjs';\r\nimport { MaskController } from './controllers/MaskController.mjs';\r\nimport { PasswordController } from './controllers/PasswordController.mjs';\r\nimport { NumberController } from './controllers/NumberController.mjs';\r\nimport { TextController } from './controllers/TextController.mjs';\r\nimport { ListController } from './controllers/ListController.mjs';\r\n\r\nimport { ReactiveInput } from './ReactiveInput.mjs';\r\n\r\n/**\r\n * Extended HTMLInputElement with controllers support\r\n * adding various feature such as masked input support \r\n */\r\nexport class GSInputElement extends ReactiveInput {\r\n\r\n  static properties = {\r\n    autocopy: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    autoselect: { type: Boolean },\r\n    reveal: { type: Boolean },\r\n    mask: { reflect: true }\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n\r\n  #copyselect;\r\n  #maskController;\r\n  #passwordController;\r\n  #numberController;\r\n  #textController;\r\n  #listController;\r\n\r\n  constructor() {\r\n    super();\r\n    this.#copyselect = new CopySelectController(this);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n\r\n    super.willUpdate(changed);\r\n\r\n    if (changed.has('mask') && this.mask && this.type === 'text') {\r\n      this.placeholder = this.mask;\r\n      this.#maskController ??= new MaskController(this);\r\n      this.#maskController.initRules();\r\n    }\r\n\r\n    if (this.list) {\r\n      this.#listController ??= new ListController(this);\r\n    }\r\n\r\n    switch (this.type) {\r\n      case 'text':\r\n        this.#textController ??= new TextController(this);\r\n        break;\r\n      case 'password':\r\n        this.#passwordController ??= new PasswordController(this);\r\n        break;\r\n      case 'number':\r\n        this.#numberController ??= new NumberController(this);\r\n        break;\r\n    }\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus) this.focus();    \r\n    const data = this.form?.data;\r\n    if (data) GSDOM.fromObject2Element(this, data);\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value) {\r\n    this.#adopted ??= new AdoptedController(me);\r\n    return this.#adopted.style(id, value);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form');\r\n  }\r\n\r\n  get owner() {\r\n    const own = GSDOM.root(this);\r\n    return GSDOM.unwrap(own);\r\n  }\r\n\r\n  get raw() {\r\n    return super.value;\r\n  }\r\n\r\n  get value() {\r\n    return this.#maskController ? this.#maskController.value : super.value;\r\n  }\r\n\r\n  set value(val) {\r\n    super.value = val;\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSInputElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   */\r\n  static define(name, clazz) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, { extends: 'input' });\r\n    }\r\n  }\r\n\r\n  static {\r\n    GSInputElement.define('gs-ext-input', GSInputElement);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined, repeat } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSBreadcrumbElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n    color: { ...color },\r\n    divider: { reflect: true },\r\n    spacing: { reflect: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.spacing = 1;\r\n    me.divider = 'chevron-right';\r\n    me.#updateChildren();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#updateChildren();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<nav part=\"base\" class=\"breadcrumb\" @click=\"${me.#onClick}\" dir=\"${ifDefined(me.direction)}\"><slot>\r\n      ${repeat(me.data || [], (item) => item, (item) => html`\r\n        <gs-breadcrumb-item  \r\n        href=\"${item.href}\"\r\n        color=\"${item.color}\"\r\n        .data=${item}     \r\n        .active=${item.active}\r\n        .divider=\"${item.divider || me.divider}\"\r\n        .spacing=\"${item.spacing || me.spacing}\">\r\n          ${item.$text}\r\n        </gs-breadcrumb-item>\r\n      `)}\r\n    </slot></nav>`;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #updateChildren() {\r\n    const me = this;\r\n    me.queryAll('gs-breadcrumb-item').forEach(el => {\r\n      el.divider = me.divider;\r\n      el.spacing = me.spacing;\r\n      el.color = me.color;\r\n    });\r\n  }\r\n\r\n  #onClick(e) {\r\n    const el = e.target.closest('gs-bradcrumb-item');\r\n    el?.handle(e);\r\n  } \r\n\r\n  static {\r\n    this.define('gs-breadcrumb');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSBreadcrumbItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    color: { ...color },\r\n    data: { state: true, type: Object },\r\n    active: { reflect: true, type: Boolean },\r\n    divider: { state: true, type: Boolean },\r\n    spacing: { state: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div part=\"base\" class=\"breadcrumb-item ${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <span part=\"prefix\"><slot name=\"prefix\"></slot></span>        \r\n        ${me.#label}\r\n        <span part=\"suffix\"><slot name=\"suffix\"></slot></span>\r\n        <span part=\"separator\"><slot name=\"separator\">${me.#separator}</slot></span>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #label() {\r\n    const me = this;\r\n    if (me.active) return html`<slot></slot>`;\r\n    me.data.url = me.data.url || me.href;\r\n    me.data.part = 'label';\r\n    return GSLinklement.generate(me.data, {})\r\n  }\r\n\r\n  get #separator() {\r\n    const me = this;\r\n    return me.nextElementSibling && me.divider ? html`<gs-icon size=\"7\" color=\"${me.color}\" css=\"mx-${me.spacing}\" name=\"${me.divider}\"></gs-icon>` : '';\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.query('a', true), e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-breadcrumb-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport { classMap, createRef, ref, css, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSAttachment } from './Attachment.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSFileBoxElement extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    static properties = {\r\n        cssList: { attribute: 'css-list' },\r\n        cssLabel: { attribute: 'css-label' },\r\n        cssInput: { attribute: 'css-input' },\r\n\r\n        multiple: { reflect: true, type: Boolean },\r\n        directory: { reflect: true, type: Boolean },\r\n        name: {},\r\n        title: {},\r\n        accept: {},\r\n        filter: {},\r\n    }\r\n\r\n    #listEl = createRef();\r\n    #fileEl = createRef();\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = GSFileBoxElement.CSS;\r\n        this.cssInput = 'd-none';\r\n        this.multiple = true;\r\n        this.title = GSFileBoxElement.TITLE;\r\n        this.filter = '^image\\/(gif|png|jpeg)$'\r\n        this.directory = false;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div part=\"border\" class=\"${classMap(me.renderClass())}\"\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @click=\"${me.#onClick}\"\r\n            @dragenter=\"${me.#onDragenter}\"\r\n            @dragover=\"${me.#onDragenter}\"\r\n            @dragleave=\"${me.#onDragleave}\"\r\n            @drop=\"${me.#onDrop}\"\r\n            @paste=\"${me.#onPaste}\"\r\n            @change=\"${me.#onChange}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.translate(me.title)}</label>\r\n            <input ${ref(me.#fileEl)}  part=\"input\" \r\n                type=\"file\" accept=\"${me.accept}\" \r\n                class=\"${me.cssInput}\" \r\n                name=\"${me.name}\" \r\n                id=\"${me.name}\" \r\n                ${me.multiple ? \"multiple\" : \"\"} \r\n                ${me.directory ? \"directory webkitdirectory\" : \"\"}>\r\n            <pre ${ref(me.#listEl)} part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    get listEl() {\r\n        return this.#listEl.value;\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.#fileEl.value;\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = me.emit('accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            me.emit('accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static styles = css`\r\n        .dash {\r\n            border-style: var(--gs-fieldbox-border, dashed) !important;\r\n            border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n        }\r\n        input[type=file] {\r\n            color : var(--gs-fieldbox-color, transparent);\r\n        } \r\n        input[type=file]::file-selector-button {}             \r\n        input[type=file]::file-selector-button:hover {}`;\r\n\r\n    static {\r\n        this.define('gs-filebox');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/TimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSTimeFormat extends GSElement {\r\n\r\n    static properties = {\r\n        interval: {reflect:true, type:Number},\r\n        locale: {reflect:true},\r\n    }\r\n\r\n    #id = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.interval = 1;\r\n        this.locale = GSUtil.locale;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const date = new Date();\r\n        return date.toLocaleTimeString(this.locale);\r\n    }    \r\n\r\n    start() {\r\n        const me = this;\r\n        if (me.interval >0 && me.#id === 0) {\r\n            me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n        } else {\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n        this.#id = 0;\r\n    }\r\n    \r\n    #update() {\r\n       requestAnimationFrame(() => this.requestUpdate());\r\n    }\r\n\r\n    static {\r\n        this.define('gs-time-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/DateFormat\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDate } from '../../base/GSDate.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSDateFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        format: {},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.locale = navigator.locale;\r\n        this.value = new Date();\r\n    }\r\n\r\n    renderUI() {\r\n        return this.result;\r\n    }    \r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.date;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get date() {\r\n        const me = this;\r\n        const o = Date.parse(me.value || new Date());\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n\r\n    static {\r\n        this.define('gs-date-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/YearFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSYearFormat extends GSElement {\r\n\r\n    static properties = {\r\n        offset: {type :Number},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n    }\r\n\r\n    renderUI() {\r\n        return this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        this.define('gs-year-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/CurrencyFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSCurrencyFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        currency: {},\r\n    }\r\n\r\n    renderUI() {\r\n        return this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-currency-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { GSCacheStyles } from \"../../base/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepElement class\r\n * @module components/steps/GSStepElement\r\n */\r\n\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepElement extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-primary';\r\n    static COMPLETED = 'text-bg-secondary';\r\n\r\n    static ICON_CSS = 'border rounded-circle fs-1';\r\n    static TITLE_CSS = 'mb-0 fs-6 mt-3 fw-bold';\r\n\r\n    static properties = {\r\n        title: {},\r\n        icon: {},\r\n        color: {},\r\n        iconCSS: { attribute: 'icon-css' },\r\n        titleCSS: { attribute: 'title-css' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const clazz = GSStepElement;\r\n        this.icon = clazz.INACTIVE;\r\n        this.iconCSS = clazz.ICON_CSS;\r\n        this.titleCSS = clazz.TITLE_CSS;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"step d-block w-100 text-center mb-4\"  dir=\"${ifDefined(me.direction)}\">\r\n            <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color || GSStepElement.INACTIVE}\">\r\n                    ${me.#renderIcon()}\r\n                </div>\r\n            </div>\r\n            <div class=\"step-title ${me.titleCSS}\">${me.translate(me.title)}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    #renderIcon() {\r\n        return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-step');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepsElement class\r\n * @module components/steps/GSStepsElement\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSStepStyle } from \"./StepStyle.mjs\";\r\nimport GSStepElement from './Step.mjs';\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepsElement extends GSElement {\r\n\r\n    static CSS = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n\r\n    #index = -1;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldUpdate(changedProperties) { \r\n        return this.steps.length > 0;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\"><slot></slot></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        return this.mapCSS(GSStepsElement.CSS, super.renderClass());\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get length() {\r\n        return this.steps.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length - 1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isLast) return false;\r\n        if (me.#index > - 1) me.current.color = GSStepElement.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStepElement.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStepElement.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStepElement.SELECTED;\r\n        });\r\n    }\r\n\r\n    static {\r\n        GSStepStyle.style;\r\n        this.define('gs-steps', GSStepsElement);\r\n    }\r\n\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\nexport class GSNotificationElement extends GSElement {\r\n\r\n    static TOP_START = \"position-fixed top-0 start-0\";\r\n    static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n    static TOP_END = \"position-fixed top-0 end-0\";\r\n\r\n    static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n    static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n    static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n    \r\n    static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n    static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n    static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n    static DEFAULT = GSNotificationElement.BOTTOM_END;\r\n\r\n    static properties = {\r\n        position: { reflect: true },\r\n        native: { reflect: true, type: Boolean }\r\n    };\r\n\r\n    #list = new Set();\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = 'p-3';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n            class=\"toast-container z-10k ${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        return me.mapCSS(me.#positionCSS, super.renderClass());\r\n    }    \r\n\r\n    get #positionCSS() {\r\n        const clazz = GSNotificationElement;\r\n        const val = this.position || clazz.DEFAULT;\r\n        return val.indexOf('_') > 0 && clazz[val] ? clazz[val] : val;\r\n    }\r\n\r\n    clear() {\r\n        this.queryAll('gs-toast').forEach(el => el.dismiss());\r\n    }\r\n\r\n    info(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n    }\r\n\r\n    success(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n    }\r\n\r\n    warn(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n    }\r\n\r\n    danger(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n    }\r\n\r\n    primary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n    }\r\n\r\n    secondary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n    }\r\n\r\n    dark(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n    }\r\n\r\n    light(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n    }\r\n\r\n    /**\r\n     * Main function to show notification. \r\n     * It has support for Bootstrap based and web based notifications.\r\n     * \r\n     * @async\r\n     * @param {String} title Notification title\r\n     * @param {String} message Notification message\r\n     * @param {String} css CSS styling (web only)\r\n     * @param {Boolean} closable Can user close it (web only)\r\n     * @param {Number} timeout Timeout after which to close notification  (default 2 sec)\r\n     * @param {Number} delay Timeout after which to show notification (default 1 sec)\r\n     * @param {Object} options Options for native Notification\r\n     * @returns {Promise<Notification|GSToast>}\r\n     */\r\n    async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n        if (!message) return;\r\n        const me = this;\r\n        if (me.native) {\r\n            let sts = await GSNotificationElement.requestPermission();\r\n            if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n            if (sts) return sts;\r\n        }\r\n        return me.#showWeb(title, message, css, closable, timeout, delay);\r\n    }\r\n\r\n    #showWeb(title, message, css, closable, timeout, delay) {\r\n        const me = this;\r\n        const tpl = `<gs-toast css=\"${css}\"  opened ${closable ? 'closable' : ''} timeout=\"${timeout}\"  delay=\"${delay}\" message=\"${message}\" title=\"${title}\" locale=\"${me.locale}\" ></gs-toast>`;\r\n        const el = GSDOM.parse(tpl, true);\r\n        requestAnimationFrame(async () => {\r\n            await me.#delay(delay);\r\n            const toast = me.#dialogToast;\r\n            if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n            toast.appendChild(el);\r\n        });\r\n        return el;\r\n    }\r\n\r\n    async #showNative(title, message, timeout, delay, options = {}) {\r\n        const me = this;\r\n        await me.#delay(delay);\r\n        options.body = options.body || message;\r\n        const notification = new Notification(title, options);\r\n        me.#list.add(notification);\r\n        const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n        notification.addEventListener('close', callback);\r\n        if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n        return notification;\r\n    }\r\n\r\n    get #dialogToast() {\r\n        const dlg = customElements.get('gs-dialog')?.top;\r\n        return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n    }\r\n\r\n    async #delay(delay = 0) {\r\n        if (GSUtil.isNumber(delay) && delay > 0) await GSUtil.timeout(delay * 1000);\r\n    }\r\n\r\n    #clearNative() {\r\n        const me = this;\r\n        me.notification.close();\r\n        me.owner.#list.delete(me.notification);\r\n        if (me.notification.iid) clearTimeout(me.notification.iid);\r\n    }\r\n\r\n    /**\r\n     * Clear all triggered notifications\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n        me.#list.forEach(nn => nn.close());\r\n        me.#list.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is supported\r\n     * @returns {Boolean} \r\n     */\r\n    static get isNativeSupported() {\r\n        return \"Notification\" in self;\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is allowed\r\n     * @returns {Boolean} \r\n     */\r\n    static get isGranted() {\r\n        return Notification.permission === \"granted\";\r\n    }\r\n\r\n    /**\r\n     * Request useage for browser native notification\r\n     * \r\n     * @async\r\n     * @returns {Promise<boolean>} Return granted status\r\n     */\r\n    static async requestPermission() {\r\n        const clazz = GSNotificationElement;\r\n        if (!clazz.isNativeSupported) return false;\r\n        if (!clazz.isGranted) await Notification.requestPermission();\r\n        return clazz.isGranted;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-notification');\r\n    }\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNotificationElement } from './Notification.mjs';\r\n\r\nexport class GSToastElement extends GSElement {\r\n\r\n    static properties = {\r\n        closable: { reflect: true, type: Boolean },\r\n        opened: { reflect: true, type: Boolean },\r\n        message: { reflect: true },\r\n        title: { reflect: true },\r\n        delay: { reflect: true, type: Number },\r\n        timeout: { reflect: true, type: Number }\r\n    }\r\n\r\n    #pending = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.timeout = 2;\r\n        me.delay = 2;\r\n        me.auto = true; \r\n    }\r\n\r\n    shouldUpdate(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = changedProperties.has('opened');\r\n        if (me.delay > 0 && me.opened && visibilityChange) {\r\n            me.#pending = true;\r\n            me.#pendingUpdate();\r\n        }\r\n        return me.#validParent && (!me.#pending);\r\n    }\r\n\r\n    async #pendingUpdate() {\r\n        const me = this;\r\n        await GSUtil.timeout(me.delay * 1000);\r\n        me.#pending = false;\r\n        me.requestUpdate();\r\n    }\r\n\r\n    async updated(changedProperties) {\r\n        const me = this;\r\n        if (me.timeout > 0) {\r\n            await GSUtil.timeout(me.timeout * 1000);\r\n            me.opened = false;\r\n            await GSUtil.timeout(GSDOM.SPEED);\r\n            me.remove();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return me.title ? me.#renderWithHeader() : me.#renderSimple();\r\n    }\r\n\r\n    #renderWithHeader() {\r\n        const me = this;\r\n        return html`\r\n        <div dir=\"${ifDefined(me.direction)}\"\r\n            class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n            <div class=\"toast-header\">\r\n                ${me.translate(me.title)}\r\n                <slot name=\"header\"></slot>\r\n                ${me.closable ? me.#button : ''}\r\n            </div>\r\n            <div class=\"toast-body\">\r\n                ${me.translate(me.message)}\r\n                <slot name=\"body\"></slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    #renderSimple() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.translate(me.message)}\r\n              <slot name=\"body\"></slot>\r\n              </div>\r\n              ${me.closable ? me.#button : ''}\r\n          </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': me.opened,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    dismiss() {\r\n        this.opened = false;\r\n    }\r\n\r\n    get #button() {\r\n        const me = this;\r\n        return html`<button type=\"button\" class=\"btn-close me-2 m-auto\" @click=\"${me.dismiss}\"></button>`;\r\n    }\r\n\r\n    get #validParent() {\r\n        return this.parentElement instanceof GSNotificationElement;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-toast');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller managing data tree navigation.\r\n * Controller is added to every gs-tree-node and \r\n * reacts on Tree node changes to update UI\r\n */\r\nexport class AbstractTreeController {\r\n\r\n    #host;\r\n    #node;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        host.addController(me);\r\n    }\r\n    \r\n    hostConnected() {\r\n        const me = this;\r\n        me.#node = me.#host.node;\r\n        me.#addNodeController(me);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        const me = this;\r\n        me.#removeNodeController(me);\r\n        me.#host.removeController(me);\r\n    }\r\n\r\n    // before rendering\r\n    hostUpdate() {\r\n        const me = this;\r\n        const oldNode = me.#node;\r\n        me.#node = me.#host.node;\r\n        if (oldNode != me.#node) {\r\n            me.#removeNodeController(me);\r\n            me.#addNodeController(me);\r\n        }\r\n    }\r\n\r\n    // link Tree node callbacks with controller and component\r\n    #addNodeController(controller) {\r\n        this.#host.node?.addController?.(controller);\r\n    }\r\n\r\n    // unlink Tree node callbacks with controller and component\r\n    #removeNodeController(controller) {\r\n        this.#node?.removeController?.(controller);\r\n    }\r\n\r\n    host(node) {\r\n        return node[Symbol.for('gs-element')] || this.#host;\r\n    }\r\n\r\n    match(node) {\r\n        const host = this.host(node);\r\n        return host?.node === node;\r\n    }\r\n\r\n    get store() {\r\n        return this.#host.dataController?.store;\r\n    }\r\n\r\n    requestUpdate(node) {\r\n        if (this.match(node)) this.host(node).requestUpdate();\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { AbstractTreeController } from './AbstractTreeController.mjs';\r\n\r\n/**\r\n * Controller managing data TreeNode callbacks to reflect UI.\r\n */\r\nexport class TreeController extends AbstractTreeController {\r\n\r\n    constructor(host) {\r\n        super(host);\r\n    }\r\n\r\n    #toggleState(node, state = false) {\r\n        const el = this.host(node);\r\n        if (el) el.loading = state;\r\n    }\r\n\r\n    // Tree controller callbacks\r\n    onLoad(node) {\r\n        this.#toggleState(node, true);\r\n    }\r\n\r\n    onRefresh(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onAppend(node, addedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onInsert(node, insertedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onExpand(node) {\r\n        const store = this.store;\r\n        if (store) {\r\n            store.onExpand(node);\r\n        } else {\r\n            this.requestUpdate(node);\r\n        }\r\n    }\r\n\r\n    onCollapse(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onFocusChanged(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onSelectionChanged(node, selectedNode) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onRemove(node) {\r\n        if (this.match(node)) this.host(node).remove();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../../lib.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSTreeItemElement extends GSElement {\r\n\r\n  /*\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n    */\r\n\r\n  static properties = {\r\n    loading: { state: true },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('node')) this.node[Symbol.for('gs-element')] = this;\r\n  }\r\n\r\n  updated() {\r\n    if (this.focused) this.query('a')?.focus();\r\n    this.dataset.visible = this.visible;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const opt = me.value || {};\r\n    opt.tooltip = me.translate(opt.tooltip)\r\n    opt.title = me.translate(opt.title)\r\n    const before = me.loading ? me.#renderSpinner(node.level) : me.#renderIcon(node.level);\r\n    return GSLinklement.generate(opt, me.renderClass(), before);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const opt = {\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      'user-select-none  ': true,\r\n      'border-0': me.#border ? false : true,\r\n      'gs-hide': !me.visible\r\n    };\r\n    return me.mapCSS(me.#cssFocus, me.mapCSS(me.#cssSelected, opt, me.selected && !me.multiselect), me.focused);\r\n  }\r\n\r\n  /**\r\n   * Toggle folder\r\n   */\r\n  toggle() {\r\n    this.opened ? this.close() : this.open();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open() {\r\n    this.#status(true);\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   */\r\n  close() {\r\n    this.#status(false);\r\n  }\r\n\r\n  focus(val = true) {\r\n    if (val) super.focus();\r\n    this.focused = val == true;\r\n  }\r\n\r\n  select(val = true) {\r\n    this.selected = val == true;\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.querySelector('a'), e);\r\n  }\r\n\r\n  get isLeaf() {\r\n    return this.node?.isLeaf;\r\n  }\r\n\r\n  get isFolder() {\r\n    return !this.isLeaf;\r\n  }\r\n\r\n  get key() {\r\n    return this.node?.key;\r\n  }\r\n\r\n  get value() {\r\n    return this.node?.value || {};\r\n  }\r\n\r\n  get level() {\r\n    return this.node?.level || -1;\r\n  }\r\n\r\n  get focused() {\r\n    return this.node?.focused;\r\n  }\r\n\r\n  get visible() {\r\n    const parent = this.parent;\r\n    return parent?.opened || parent?.level === -1;\r\n  }\r\n\r\n  get parent() {\r\n    return this.node?.parent;\r\n  }\r\n\r\n  get parentItem() {\r\n    const item = this.parent?.[Symbol.for('gs-element')];\r\n    return item instanceof GSTreeItemElement ? item : undefined;\r\n  }\r\n\r\n  set focused(val) {\r\n    val = val === true;\r\n    this.node.focused = val;\r\n  }\r\n\r\n  get selected() {\r\n    return this.node?.selected;\r\n  }\r\n\r\n  set selected(val) {\r\n    val = val === true;\r\n    const me = this;\r\n    if (me.isFolder && me.owner.leaf) val = false;\r\n\r\n    if (me.multiselect) {\r\n      if (val) {\r\n        me.node.selectAll();\r\n      } else {\r\n        me.node.deselectAll();\r\n      }\r\n    } else {\r\n      me.node.selected = val;\r\n    }\r\n  }\r\n\r\n  get opened() {\r\n    return this.node?.opened;\r\n  }\r\n\r\n  set opened(val) {\r\n    this.#status(val === true);\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tree');\r\n  }\r\n\r\n  get multiselect() {\r\n    return this.owner.multiselect;\r\n  }\r\n\r\n  get #cssFocus() { return this.owner.cssFocus || 'focus-ring'; }\r\n  get #cssSelected() { return this.owner.cssSelected || 'active'; }\r\n  get #cssCheck() { return this.owner.cssCheck || ''; }\r\n  get #checkColor() { return this.owner.checkColor || 'secondary'; }\r\n  get #checkColorSelected() { return this.owner.checkColorSelected || 'primary'; }\r\n\r\n  get #border() {\r\n    return this.value?.border === true || this.owner.border === true;\r\n  }\r\n\r\n  get #icon() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const data = me.value;\r\n    const ui = me.owner;\r\n    let itemIco = data.icon || ui.itemIcon;\r\n    if (node.isFolder) itemIco = node.opened ? (data.openIcon || ui.openIcon) : (data.closeIcon || ui.closeIcon);\r\n    return itemIco;\r\n  }\r\n\r\n  #renderIndent(level) {\r\n    return html`<gs-indent size=\"${level}\"></gs-indent>`;\r\n  }\r\n\r\n  #renderSpinner(level) {\r\n    return html`${this.#renderIndent(level)}<gs-spinner small></gs-spinner>`;\r\n  }\r\n\r\n  #renderIcon(level) {\r\n    return html`${this.#renderIndent(level)}${this.#renderMulti()}<gs-icon size=\"5\" name=\"${this.#icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderMulti() {\r\n    const me = this;\r\n    if (!me.multiselect) return '';\r\n    const color = me.selected ? me.#checkColorSelected : me.#checkColor;\r\n    const icon = me.node.isPartialySelected ? 'dash-square-fill' : me.selected ? 'check-square-fill' : 'square';\r\n    return html`<gs-icon size=\"6\" data-type=\"state\" \r\n                css=\"me-1 text-${color} ${me.#cssCheck}\"\r\n                name=\"${icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #status(val = false) {\r\n    const me = this;\r\n    if (me.node?.isFolder) {\r\n      me.node.opened = val;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, css, createRef, ref, repeat, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { TreeController } from './controllers/TreeController.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSTreeElement extends GSElement {\r\n\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n\r\n  static shared = {\r\n    itemIcon: { attribute: 'icon-item' },\r\n    closeIcon: { attribute: 'icon-close' },\r\n    openIcon: { attribute: 'icon-open' },\r\n    cssCheck: { attribute: 'css-check' },\r\n    cssFocus: { attribute: 'css-focus' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    checkColor: { attribute: 'check-color', ...color },\r\n    checkColorSelected: { attribute: 'check-color-selected', ...color },\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode },\r\n    border: { type: Boolean, reflect: true },\r\n    guide: { type: Boolean, reflect: true },\r\n    leaf: { type: Boolean, reflect: true },\r\n    multiselect: { type: Boolean, reflect: true },\r\n    circular: { type: Boolean, reflect: true },\r\n    ...GSTreeElement.shared\r\n  }\r\n\r\n  // GS-ITEM attributes mapping\r\n  static options = {\r\n    ...GSTreeElement.shared,\r\n    css: {},\r\n    icon: {},\r\n    color: {},\r\n    title: {},\r\n    tooltip: {},\r\n    opened: { type: Boolean },\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  #queued = false;\r\n  #listRef = createRef();\r\n\r\n  #controller = null;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.leaf = false;\r\n    me.multiselect = false;\r\n    me.data = GSDOM.toJson(me, true, true).items;\r\n    me.node = new TreeNode(null, { '#tagName': this.tagName }, null, -1);\r\n    me.itemIcon = 'file-earmark';\r\n    me.closeIcon = 'folder'; // caret-right; chevron-right\r\n    me.openIcon = 'folder2-open'; // caret-down; chevron-down\r\n    me.cssSelected = 'active'; // fw-bold\r\n    me.cssFocus = 'focus-ring';\r\n    me.node[Symbol.for('gs-element')] = me;\r\n    me.#controller = new TreeController(me);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n          class=\"treeview ${classMap(me.renderClass())}\"          \r\n          @click=\"${me.#onClick}\"\r\n          @keydown=\"${me.#onKeyDown}\"\r\n          @keyup=\"${me.#onKeyUp}\">\r\n          <div class=\"list-group\" ${ref(me.#listRef)}>\r\n          ${repeat(me.node.walk(me.node, false, false), (node) => node.key, (node) => html`\r\n            <gs-tree-item .node=\"${node}\"></gs-tree-item>\r\n          `)}\r\n          </div>    \r\n        </div>`;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data') && me.data && !me.#queued) {\r\n      me.#queued = true;\r\n      queueMicrotask(() => {\r\n        me.node.clear();\r\n        me.node.fromJSON(me.data);\r\n        me.#queued = false;\r\n        me.requestUpdate();\r\n      });\r\n    }\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('multiselect') && !this.multiselect) this.node?.deselectAll();\r\n    this.node.multi = this.multiselect;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    if (data instanceof TreeNode) {\r\n      if (data.root !== this.node) this.node = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n\r\n  next(expand = false) {\r\n    const me = this;\r\n    let item = me.nextItem;\r\n    if (!item & me.circular) item = me.#first;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (expand && me.focused?.isFolder) me.focused.open();\r\n    }\r\n    return me.focused;\r\n  }\r\n\r\n  previous(collapse = false) {\r\n    const me = this;\r\n    let item = me.previousItem;\r\n    if (!item & me.circular) item = me.#last;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (item.isFolder && collapse) item.close();\r\n    }\r\n    return me.focused;\r\n\r\n  }\r\n\r\n  expandAll() {\r\n    this.node?.expandAll();\r\n  }\r\n\r\n  collapseAll() {\r\n    this.node?.collapseAll();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open(path) {\r\n    const me = this;\r\n    me.focused?.open();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   * TODO - path navigation\r\n   */\r\n  close(path) {\r\n    const me = this;\r\n    me.focused?.close();\r\n  }\r\n\r\n  clear() {\r\n    this.node?.clear();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  reload() {\r\n    this.clear();\r\n    this.dataController?.read();\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host(this.node.selectedNode());\r\n  }\r\n\r\n  get focused() {\r\n    return this.#host(this.node.focusedNode());\r\n  }\r\n\r\n  /**\r\n   * Previous visible ge-node-item\r\n   */\r\n  get previousItem() {\r\n    return this.focused?.node.find(n => n?.visible, true, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  /**\r\n   * Next visible ge-node-item\r\n   */\r\n  get nextItem() {\r\n    return this.focused?.node.find(n => n?.visible, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  get #list() {\r\n    return this.#listRef.value;\r\n  }\r\n\r\n  get #first() {\r\n    return this.#list.firstElementChild;\r\n  }\r\n\r\n  get #last() {\r\n    return this.#list.lastElementChild;\r\n  }\r\n\r\n  #host(node) {\r\n    return node?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const isIcon = e.target.closest('gs-icon')?.dataset.type === 'state';\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!el.node) return;\r\n\r\n    const me = this;\r\n\r\n    if (me.multiselect) {\r\n      if (isIcon) el.select(!el.selected);\r\n    } else {\r\n      el.select(true);\r\n    }\r\n\r\n    const expandable = (me.multiselect && !isIcon) || (!me.multiselect);\r\n    if (el.isFolder && expandable) el.toggle();\r\n\r\n    el.focus();\r\n    el.handle(e);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    const me = this;\r\n    const el = me.focused;\r\n    if (!el) return;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n        me.next();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (el.isFolder) {\r\n          if (el.opened) {\r\n            me.close();\r\n          } else {\r\n            (el.parentItem || el)?.focus();\r\n          }\r\n        } else {\r\n          me.previous();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if (el.isFolder && !el.opened) {\r\n          me.open();\r\n        } else {\r\n          me.next();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!(el?.node)) return;\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        el.handle(e);\r\n        break;\r\n      case 'Tab':\r\n        el.focus();\r\n        break;\r\n      case 'Space':\r\n        el.select(this.multiselect ? !el.selected : true);\r\n        el.focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\n\r\nexport class GSChartElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/bootstrap-lit';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        config: {},\r\n        storage: {},\r\n        height: { type: Number },\r\n        width: { type: Number },\r\n        data: { type: Array },\r\n        options: { type: Object },\r\n    }\r\n\r\n    #canvasRef = createRef();\r\n    #chart = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.height = 0;\r\n        this.width = 0;\r\n        GSChartElement.#init();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#waitInit();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    shouldUpdate(changed) {\r\n        return GSChartElement.#isChart;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#render();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        const me = this;\r\n        if (changed.has('url') || changed.has('config')) me.#render();\r\n        if (changed.has('data') || changed.has('options')) me.#renderData(me.data, me.options);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<canvas ${ref(me.#canvasRef)} \r\n                class=\"${classMap(me.renderClass())}\"\r\n                width=\"${ifDefined(me.width > 0 ? me.width : false)}\" \r\n                height=\"${ifDefined(me.height > 0 ? me.height : false)}\" >\r\n            </canvas>`;\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.#canvasRef.value;\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    refresh() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    updateChart(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const options = await GSLoader.loadSafe(me.config, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.url, 'GET', null, true, []);\r\n        me.data = data;\r\n        me.options = options;\r\n    }\r\n\r\n    #renderData(data, options) {\r\n        const me = this;\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChartElement.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => o.data = sets.length === 1 ? data : data[i] || []);\r\n\r\n        if (me.#chart) return me.updateChart(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChartElement.#Chart(ctx, opt);\r\n    }\r\n\r\n    async #waitInit() {\r\n        if (!GSChartElement.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        this.requestUpdate();\r\n    }\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    static async #init() {\r\n        const me = GSChartElement;\r\n        if (me.URL_LIB === false) return;\r\n        if (me.#isChart || me.#initializing) return;\r\n        me.#initializing = true;\r\n        try {\r\n            const origin = GSChartElement.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);\r\n            me.#Chart = Chart;\r\n            me.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            me.#initializing = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert DOM tree into a JSON structure\r\n     * \r\n     * @param {HTMLElement} obj HTML element instance to convert\r\n     * @param {string} name DOM attribute name for object key\r\n     * @param {string} value DOM attribute name for object value\r\n     * @param {string} type DOM attribute name for object type\r\n     * @returns {object}\r\n     */\r\n    static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n        if (!(el instanceof HTMLElement)) return {};\r\n\r\n        const nameV = el.getAttribute(name);\r\n        const valV = el.getAttribute(value);\r\n        const typeV = el.getAttribute(type);\r\n\r\n        let obj = null;\r\n\r\n        switch (typeV) {\r\n            case 'array':\r\n                obj = [];\r\n                break;\r\n            case 'object':\r\n                obj = {};\r\n                break;\r\n            default:\r\n                return GSChartElement.#toType(valV, typeV);\r\n        }\r\n\r\n        const childs = Array.from(el.children);\r\n        const isArray = typeV === 'array';\r\n        const isObject = typeV === 'object';\r\n\r\n        childs.forEach(el => {\r\n            const _nam = el.getAttribute(name);\r\n            if (isArray) {\r\n                obj.push(GSChart.toJson(el, name, value, type));\r\n            } else if (isObject) {\r\n                const tmp = GSChartElement.toJson(el, name, value, type);\r\n                obj[_nam] = tmp;\r\n            } else {\r\n                const _val = el.getAttribute(value);\r\n                const _typ = el.getAttribute(type);\r\n                obj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    static #toType(val, type) {\r\n        switch (type) {\r\n            case 'boolean': return val === 'true';\r\n            case 'number': return parseFloat(val);\r\n            default: return val\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-chart');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#data = data;\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append: append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSMarkdownElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        history: { type: Number },\r\n        maxHeight: { type: Number, attribute: 'max-height' },\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        this.history = 10;\r\n        this.dynamicStyle(this.#styleID);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const me = this;\r\n        await me.#initLib();\r\n        if (globalThis.showdown) {\r\n            const opt = { tasklists: true, tables: true };\r\n            me.#converter = new globalThis.showdown.Converter(opt);\r\n            super.connectedCallback();\r\n        }\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('url')) {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url);\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const height = me.maxHeight > 0 ? `${me.maxHeight}px;` : false;\r\n        const opt = { 'max-height': height }\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        return html`<div ${ref(me.#containerRef)} class=\"overflow-auto ${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [me.#styleID] : true,\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        me.#onURL(url);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n\r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n\r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });\r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n            GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n\r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list = GSDOM.queryAll(me.#container, qry);\r\n        requestAnimationFrame(() => list.forEach(el => GSDOM.toggleClass(el, css)) );\r\n    }\r\n\r\n    #handleLinks() {\r\n        const me = this;\r\n        const links = GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n            .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')))\r\n            .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n            .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/'))\r\n            .forEach(el => GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me)));\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        if (me.#cache.length === 0 ) return me.#first;\r\n        const url = me.#cache.pop();\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if (me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdownElement.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-markdown');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSMonacoElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #editor = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = '';\r\n        this.theme = 'vs-dark';\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonacoElement.#init();\r\n        super.connectedCallback();\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.#onMonacoReady();\r\n        super.firstUpdated();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        if (changed.has('theme')) me.#onTheme(me.theme);\r\n        if (changed.has('target')) me.#onTarget(me.target);\r\n        if (changed.has('url')) me.#onURL(me.url);\r\n        if (changed.has('language')) me.#onLanguage(me.language);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#containerRef)} class=\"${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        return this.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    get owner() {\r\n        return this.parentElement;\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n\r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor?.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor?.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    static #initialized;\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonacoElement.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        const url = GSMonacoElement.URL_LIB;\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${url}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${url}'};\r\n                importScripts('${url}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({\r\n                paths: { 'vs': `${GSMonacoElement.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false }\r\n            });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static async #init() {\r\n        const me = GSMonacoElement;\r\n        if (me.#initialized) return;\r\n        me.#initEnv();\r\n        await me.#initLib();\r\n        await me.#initMonaco();\r\n        me.#initialized = true;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-monaco');\r\n    }\r\n\r\n}"],"names":["GSVersion","version","build","gsstyles","GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSUtil$1","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Date","Boolean","value","toString","val","trim","toLowerCase","str","obj","replace","x","g","split","reverse","join","word","toUpperCase","slice","map","i","capitalize","constructor","min","max","Math","match","dft","locale","isString","sep","numberSeparator","extractNumber","replaceAll","isNumber","url","test","startsWith","endsWith","pattern","charset","floor","random","length","navigator","language","languages","flags","RegExp","isStringEmpty","undefined","Intl","NumberFormat","format","DateTimeFormat","string","isNull","Array","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","separator","filter","capitalizeAll","tpl","params","names","keys","vals","values","Function","text","textArea","document","createElement","innerHTML","isStringNonEmpty","o","window","forEach","a","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","result","permissions","query","state","clipboard","writeText","readText","GSFunction$1","GSFunction","isFunction","includes","own","isFunctionDefined","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","from","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSID","prefx","next","s","l","h","charCodeAt","GSAttr$1","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","attributes","host","opt","recursive","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","children","proxify","safe","unsafe","dflt","default","multi","hasAttribute","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","first","getDay","mondayFirst","isMondayFirst","days","repeat","push","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","d","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","m","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","k","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Locale","weekInfo","firstDay","charAt","toLocaleString","size","isLowercase","hour","hour12","pop","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","getDateFormat","regex","getFormattedDateRegex","parseFormattedDate","groups","y","Y","valueOf","GSData","currency","extract","Set","b","every","index","toSorted","compareArrays","second","arr","indexOf","list","it","cfg","toType","rule","toRegex","fmt","style","fields","limit","sts","rec","filterRecord","filterSimple","filterComplex","key","filterValue","found","flt","matchDate","matchNumber","op","toLocaleLowerCase","local","toLocaleDateString","iso","toISOString","operator","sort","sortPair","ord","idx","col","v1","v2","compare","order","compareNum","compareString","isBool","compareBool","isDate","s1","s2","localeCompare","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","partial","r","readFromProperty","readFromObject","GSDOM$1","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","wrap","appendChild","link","slot","isText","tagName","FORMEL","queryAll","HTMLButtonElement","hasClass","ownClazz","inheritance","pel","HTMLSlotElement","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","parentElement","offsetParent","c","ShadowRoot","HTMLBodyElement","root","getByID","documentElement","walk","qry","levels","proxy","res","receiver","sanitize","sanitizer","setHTML","Document","textContent","requestAnimationFrame","toggleClass","contains","unwrap","querySelectorAll","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","fromValue","plain","innerText","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","location","hash","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","CLEANUP1","whiteList","asState","isAllowed","toValidationError","allowElement","allowTag","fetch","ok","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","detail","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","delete","removeListener","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","for","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","rid","waitAnimationFrame","onResize","attach","GSAbortController","AbortController","super","abort","clearInterval","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","isFunctions","getFilter","exec","create","GSDynamicStyle","deleteRule","getRule","setRule","sync","insertRule","updateRule","isImportant","setProperty","source","dynamicStyleSheetByID","dynamicStyleSheet","gsClass","dynamicRule","dynamicRuleByID","dynamicStyle","assign","dynamicStyleByID","GSCacheStyles","store","dynamic","styles","adopt","adoptedId","GSAdoptedEngine","now","preload","timerID","setInterval","sheets","adoptable","adoptSheet","update","scheduled","sorted","ID","cssText","monitorAttributes","ownerNode","adoptStyle","disconnect","mutationList","onAttributeChange","attributeFilter","attributeOldValue","HTMLLinkElement","rel","as","HTMLStyleElement","then","adoptLink","registerFilter","onMonitorFilter","onMonitorConnect","onMonitorDisconnect","init","GSEnvironment","isMobile","userAgentData","mobile","userAgent","isDesktop","isWebkit","protocol","strVal","brands","brand","strAgt","isEdge","isDevice","platform","screen","otype","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","ps","p","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","querySelector","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSItem","validate","tags","collect","definition","GSLoader","GS_TEMPLATE_URL","origin","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","UNIQUE","searchParams","append","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GS_LOCALIZATION_LANGUAGE","lang","GSLocalization","GSLocalizationImpl","queue","queued","GS_LOCALIZATION_URL","translate","deft","getLanguage","texthash","reset","promises","loadWait","sequential","Pragma","isDefault","hk","details","GSPopper","asRect","sx","scrollX","sy","scrollY","top","bottom","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","arrow","pos","fromPlacement","isPlacementValid","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","aopt","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","applyDynamicStyle","GSQueryCSS","property","object","GSQuery","instance","GSTemplateCache","template","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTheme","switch","theme","STORAGE","htmlEl","bsTheme","matchMedia","q","URLSearchParams","onTheme","settings","getSystemDefaultTheme","darkMode","lightMode","setup","GSAttributeHandler","anchor","call","inject","swap","trigger","calls","toggles","triggers","handle","targets","handleTarget","handleBinding","handleAction","handleAttribute","handleProperty","handleToggle","handleTrigger","handleCall","handleExec","handleSwap","handleInject","handleTemplate","field","form","isForm","HTMLFormElement","isField","isFormElement","toObject","isAttributeJSON","jsonToAttr","toggleAttribute","isPropertyJSON","properties","toggleProperty","tout","symbol","toHTML","applyContent","applyTemplate","clone","insertAdjacent","deattach","DEFINITION","override","Stack","item","unshift","peek","isEmpty","Queue","enqueue","dequeue","BinaryTreeNode","isLeaf","hasChildren","isRoot","BinaryTree","inOrderTraversal","postOrderTraversal","preOrderTraversal","insert","parentNodeKey","canInsertLeft","canInsertRight","find","Node","previous","release","toJSON","DoublyLinkedList","tail","previousNode","insertAt","splice","insertFirst","insertLast","getAt","removeAt","acc","toArray","iterator","isInvalid","isInvalidIndex","isInteger","Tree","folder","leaf","up","levelID","nodeID","isFolder","hasMore","firstChild","lastChild","down","previousSibling","inclusive","flat","iterate","filtered","Je","newOne","findByKey","flatten","fromJSON","raw","hasParent","GSReadWriteRegistryImpl","handlers","INTERNAL","addHandler","removeHandler","getHandler","newHandler","enabled","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","processors","enable","addProcessor","processor","removeProcessor","disable","isRegistered","notify","onRead","postRead","onWrite","postWrite","GSReadWrite","reader","writer","mode","skip","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCachedReader","reformat","records","postFilter","sortData","filterData","search","read","TreeNode","opened","focused","selected","focusedNode","selectedNode","controllers","select","focus","open","addController","removeController","visible","expand","collapse","changed","onFocusChanged","onSelectionChanged","isPartialySelected","selectAll","deselectAll","selectionFlag","onSelectAll","onDeselectAll","selectedNodes","refresh","onRefresh","loading","onLoad","expandAll","collapseAll","expanded","collapsed","onExpand","onCollapse","onAppend","onInsert","GSTreeReader","litUrl","GS_LIT_URL","litModule","ReactiveController","ReactiveElement","AsyncDirective","AsyncReplaceDirective","CSSResult","Directive","LitElement","PartType","TemplateResultType","UnsafeHTMLDirective","UntilDirective","_$LE","_$LH","adoptStyles","asyncAppend","asyncReplace","choose","classMap","clearPart","createRef","defaultConverter","directive","getCommittedValue","getCompatibleStyle","getDirectiveClass","guard","ifDefined","insertPart","isCompiledTemplateResult","isDirectiveResult","isPrimitive","isServer","isSingleExpression","isTemplateResult","keyed","literal","live","noChange","notEqual","nothing","range","ref","removePart","render","setChildPartValue","setCommittedValue","staticHtml","staticSvg","styleMap","supportsAdoptingStyleSheets","svg","templateContent","unsafeCSS","unsafeHTML","unsafeSVG","unsafeStatic","until","when","withStatic","gsAction","gsAnchor","gsAttribute","gsCall","gsExec","gsInject","gsProperty","gsSwap","gsTarget","gsTemplate","gsToggle","gsTrigger","gsValue","DatasetDirective","part","srcset","DOMStringMap","remap","hasOwn","descriptors","getOwnPropertyDescriptors","listProperties","listGetters","getPrototypeOf","literalTemplate","listGettable","cssMap","CssMapDirective","partInfo","ATTRIBUTE","strings","classInfo","_previousClasses","_staticClasses","notEmpty","newVal","oldVal","numGT0","numGE0","numLT0","numLE0","ButtonTypes","buttonType","hasChanged","is","ColorTypes","color","EnvironmentTypes","environment","InputTypes","inputType","NavTypes","nav","OrientationTypes","PlacementTypes","PositionTypes","ProtocolTypes","SizeTypes","normal","medium","small","large","big","stringArrayConverter","fromAttribute","toAttribute","AdoptedController","hostConnected","hostDisconnected","isGlobal","rules","removeRule","renderRoot","onAdopted","AttributeController","eventName","onNotify","isFormEl","ContentController","refs","removeContent","hostUpdated","isSelf","contentRef","options","renderOptions","renderBefore","previousElementSibling","keep","DataController","readCallback","writeCallback","errorCallback","write","storeID","storage","firstPage","page","lastPage","nextPage","prevPage","onDataRead","onDataWrite","onDataError","ElementMoveController","attached","cursorX","cursorY","mouseUpCallback","mouseDownCallback","mouseMoveCallback","onMouseUp","onMouseDown","onMouseMove","attachEvent","removeEvent","onStartMove","onEndMove","onCursorRight","onCursorLeft","onCursorUp","onCursorDown","ElementNavigationController","multiselect","circular","multiple","onKeyUp","onClick","onFocusIn","onFocusOut","lastElementChild","blur","onSelected","onDeselected","onFocused","isNavigable","composedPath","GroupController","busEvent","busCallback","onBusEvent","OrientationController","hosts","requestUpdate","onOrientation","ThemeController","hostUpdate","updateTheme","updateThemeExt","TemplateController","lastRef","injected","request","templateInjected","templateRef","schedule","tasks","task","process","finally","SlotController","onSlotChanged","assignedElements","onSlotInjected","LocalizationController","updateLanguage","updateLanguageExt","langauge","onLanguage","GSElement","rtl","reflect","hide","rounded","bordered","onready","os","browser","adopted","uiHandler","localization","dataController","slotController","themes","attributeChangedCallback","oldValue","newValue","connectedCallback","isBindable","binded","disconnectedCallback","deattachListeners","createRenderRoot","firstUpdated","willUpdate","relink","isAllowRender","renderUI","renderTemplate","renderClass","border","mapCSS","flag","waitEvent","direction","isFocused","isValidEnvironment","isValidBrowser","isValidOS","isValidProtocol","isValidOrientation","parentComponent","definitions","mergeObjects","elementStyles","cssRule","setCSSProperty","GSAccordionElement","autoclose","cssItem","cssHeader","cssBody","renderItems","close","message","isItemCloser","GSAccordionItemElement","shouldUpdate","changedProperties","component","GSAlertElement","closed","closable","pause","interval","handleBillboard","updated","show","isBillboard","button","billboard","GSButtonElement","clickCss","hoverCss","toggleColor","autofocus","outline","toggling","icon","tooltip","refEl","refIco","onMouseOver","onMouseOut","iconEl","animate","isReset","isSubmit","submit","hover","isReest","iconHtml","renderIcon","GSCalendarElement","arrovPrev","arrowNext","cssDays","cssToday","cssWeeks","cssMonth","cssYear","cssNav","cssSelected","minYear","maxYear","arrowPrev","previousMonth","nextMonth","previousYear","nextYear","formatted","updateTarget","week","dayList","months","monthsHTML","yearHTML","onKey","onDay","daysHTML","tgt","HTMLInputElement","valueAsDate","isToday","today","c1","c2","current","monthList","onMonth","onYear","selectedIndex","GSCardElement","imageStyle","overlay","align","image","subtitle","footer","header","colorText","colorBack","colorBorder","cssTitle","cssSubtitle","cssFooter","cssImage","styleID","isVertical","renderVertical","renderHorizontal","imageTop","imageBottom","isBefore","startClass","endClass","startHtml","images","endHtml","isHorizontal","imageSlot","GSCenterElement","GSMenuElement","auto","dark","menuRef","closeSubmenus","updatePosition","onMouseLeave","submenu","dropend","dropstart","popup","caller","isMouseOrPointerEvent","renderSubmenu","renderHeader","renderMenu","renderDivider","menu","toSubmenu","menuItem","isSubmenu","innerWidth","GSContextElement","attachTarget","assignedSlot","onPopup","GSCompareElement","background","before","after","elRef","clipRef","slideRef","mouseController","elPosition","splitter","onDoubleClick","isAuto","pct","isFixed","slider","clip","GSControllerElement","module","changes","initialize","GSCopyrightElement","company","isCompany","isYear","GSDataHandler","autoload","autorefresh","config","handler","lifoReadRef","initLIFO","PROPERTIES","updateHandler","formatSort","formatFilter","isDebug","gsDebug","formated","verifyHandler","save","callOnceLifo","lifoReadRefCallback","lifoRead","GSDialogElement","standard","escapable","cancelText","confirmText","minWidth","buttonAlign","iconCancel","iconConfirm","colorCancel","colorConfirm","cssCancel","cssConfirm","cssContent","dialogRef","btnConfirmRef","btnCancelRef","CSS","TITLE_CSS","HEADER_CSS","ALIGN","CANCEL","CONFIRM","updateStack","STACK","dialog","showModal","focusable","renderConfirm","onConfirm","renderCancel","onCancel","renderFooter","onForm","onSubmit","info","confirm","prompt","forms","f","tab","btnConfirm","btnCancel","QUERY_INPUT","isVisible","GSDrawerElement","backdrop","scroll","fingers","transition","duration","cssHead","onLeave","onEnter","hasHeader","headSlot","GSDropdownElement","simple","renderButton","buttonClass","btn","GSEmailElement","user","domain","dev","updateUser","updateDomain","GSFormElement","formRef","onChange","elements","inputs","fromObject","disableInput","enableInput","reportValidity","defaultValue","onFieldChange","onValidate","GSFormGroupElement","layout","description","label","placeholder","mask","step","minLength","maxLength","autoid","autocopy","autoselect","autocapitalize","autocomplete","reveal","readonly","required","cellField","cellLabel","cssLabel","cssField","inputRef","ouptutRef","patterns","validateAllowed","ICON","CSS_LABEL","CSS_LABEL_CELL","onRange","formElements","renderFloating","cssCheck","renderInput","renderOutput","renderLabel","renderInfo","renderLabelWrap","renderField","isIcon","CSS_ICON","renderTooltip","isRange","idattr","isFieldset","radioLayout","fieldSet","inputHTML","fld","vertical","isSwitch","onBlur","isCheckable","isFloating","setCustomValidity","slots","tagList","isCheck","isRadio","isChecked","isPassword","isEmail","isURL","GSFormPanelElement","formStorage","GSGroupElement","controllerGroup","initData","selectable","renderWrappedUI","renderWrappedClass","getName","allProperties","GSIconElement","superColor","_clicked","_hovered","postAnimate","fs","GSIndentElement","multiplier","numdef","GSImageElement","invert","grayscale","brightness","contrast","saturate","hue","sepia","alt","imageRef","complete","renderStyle","buildFilter","GSLayoutElement","resizable","autofit","vPos","hPos","els","dyncss","horizontal","lev","tplEl","elementTemplate","tc","dir","did","panelCSS","panelStyle","resize","grow","vpos","hpos","GSLinklement","ping","GSListItemElement","generated","initial","renderFirst","renderSecond","itemCSS","isSelectable","itemStatusCSS","renderText","activeCSS","cssActive","inactiveCSS","cssInactive","GSListElement","GSNavItemElement","itemsCSS","isNav","buttonCSS","buildCSS","cssButton","navType","GSNavElement","isTab","GSOverlayElement","autoremove","radius","styleID2","innerHeight","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathStr","createSVGPathString","fill","pointerEvents","cursor","windowX","windowY","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPagerElement","pages","labelFirst","labelLast","labelNext","labelPrevious","half","renderPrevious","renderItem","renderNext","renderLast","pagination","decodeHTMLEntities","toTarget","ctrl","GSPopupElement","wMin","wMax","hMin","hMax","panelRef","attachTaraget","onAuto","reposition","popupFixed","panel","Event","overflowH","overflowV","GSProgressElement","updateStyle","percentage","onKeySelect","increase","decrease","trunc","old","GSSpinnerElement","pulsar","GSSplitterElement","styleTGT","cssUpdate","lock","updateMouse","stop","isPreceeding","isStyleValue","styleDynamic","lockable","csize","cls","gsSplitter","updateX","updateY","dx","GSTabItemElement","updateCSS","tabCSS","GSTabPanelElement","GSTabGroupElement","findPanel","tabEl","isAfter","renderPanels","GSTableElement","filterType","cssFilter","colorHead","colorSelect","colorSort","stripedColumn","divider","striped","grid","borderless","columns","selections","datacolumn","multisort","protected","sortable","sortOrder","headColor","CELLS","table","stripedColumns","renderFilters","onSort","entry","renderColumn","onSelect","renderRecord","renderEmpty","columnType","columType","input","valueAt","row","cell","cfgType","timestamp","dataType","renderFilter","onFilter","icons","sortType","column","getElementIndex","prepareSorter","isComplex","tr","isSelected","GSTagElement","converter","appendable","closeColor","cssClose","cssTag","dataListRef","renderTags","onInput","renderList","updateTag","KEYS","srcElement","removeTag","addTag","isMax","datalist","optEl","tagEl","renderTag","tagClass","btnClass","badge","GSTextElement","GSTooltipElement","arrowRef","arrowStyle","attachEvents","fade","arrowEl","panelEl","refLocal","refGlobal","GSTemplateElement","CopySelectController","clickCallback","copyCallback","onCopy","writeToClipboard","MaskController","_","back","prev","keyDownCallback","inputCallback","focusCallback","blurCallback","onFocus","initRules","j","builSlots","findIndex","builAccept","toPattern","lastIndex","isMatch","setSelectionRange","substring","selectionStart","selectionEnd","maskType","clean","chars","masks","special","NumberController","onNumberInput","PasswordController","revealing","keyUpCallback","isReveal","altKey","TextController","updateText","ListController","monitorCallback","changeCallback","onMonitor","onDataChange","hasUpdated","strict","isInList","togleEl","dataGroup","isButtonElement","defaultPropertyDeclaration","attributeToPropertyMap","prepare","elementProperties","finalize","finalized","prepareFn","getOwnPropertySymbols","superCtor","attributeNameForProperty","ReactiveInput","reflectingProperties","instanceProperties","updatePromise","reflectingProperty","isUpdatePending","observedAttributes","initializer","initializers","props","propKeys","getOwnPropertyNames","createProperty","noAccessor","descriptor","getPropertyDescriptor","prototype","configurable","enumerable","enableUpdating","attributeToProperty","requestedUpdate","getUpdateComplete","scheduleUpdate","performUpdate","propertyToAttribute","markUpdated","updateComplete","getPropertyOptions","changeProperty","enqueueUpdate","elementProps","wrapped","didUpdate","ctor","propName","attrValue","saveInstanceProperties","GSComboExt","HTMLSelectElement","setIf","objToHTML","GSDataListExt","HTMLDataListElement","GSInputElement","copyselect","maskController","passwordController","numberController","textController","listController","GSBreadcrumbElement","spacing","updateChildren","$text","GSBreadcrumbItemElement","generate","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","hidden","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBoxElement","cssList","cssInput","listEl","fileEl","dragging","TITLE","onDragenter","onDragleave","onDrop","onPaste","dataTransfer","hasFile","dropEffect","clipboardData","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","GSTimeFormat","toLocaleTimeString","GSDateFormat","GSYearFormat","GSCurrencyFormat","GSStepStyle","GSStepElement","iconCSS","titleCSS","INACTIVE","ICON_CSS","GSStepsElement","steps","isFirst","isLast","COMPLETED","SELECTED","GSNotificationElement","BOTTOM_END","positionCSS","DEFAULT","dismiss","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","dlg","nn","isNativeSupported","isGranted","permission","GSToastElement","pending","visibilityChange","pendingUpdate","validParent","SPEED","renderWithHeader","renderSimple","AbstractTreeController","addNodeController","removeNodeController","oldNode","TreeController","toggleState","addedNode","insertedNode","onRemove","GSTreeItemElement","renderSpinner","cssFocus","status","parentItem","checkColor","checkColorSelected","ui","itemIco","itemIcon","openIcon","closeIcon","renderIndent","renderMulti","GSTreeElement","guide","shared","listRef","nextItem","previousItem","reload","expandable","GSChartElement","URL_LIB","GS_URL_CHART","canvasRef","chart","waitInit","destroy","isChart","renderData","canvas","updateChart","div","toBase64Image","quality","sets","datasets","ctx","getContext","Chart","initializing","registerables","nameV","valV","typeV","childs","isObject","_nam","GSChart","_val","_typ","GSHighlightElement","GS_URL_HLJS","codeRef","onTarget","onURL","onHighlight","hasLangauge","highlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMarkdownElement","GS_URL_MARKDOWN","history","maxHeight","containerRef","initLib","showdown","tasklists","tables","Converter","toCache","fromCache","container","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","script","GSMonacoElement","GS_URL_MONACO","editor","onMonacoReady","monaco","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","automaticLayout","minimap","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","paths","vs","initialized","initEnv","initMonaco"],"mappings":"AAaO,MAAMA,UAELC,cACA,MAAO,OACV,CAEGC,YACA,OAAO,QACV,ECdO,MAACC,EAAW,+hCCMjB,MAAMC,MAKZC,gBAAiB,EACjBA,gBAAiB,EAOjBA,YAAYC,EAAIC,GACfC,MAAKC,EAAOH,EAAIC,GAAK,EAAM,OAC3B,CAODF,YAAYC,EAAIC,GACfC,MAAKC,EAAOH,EAAIC,GAAK,EAAM,OAC3B,CAODF,aAAaC,EAAIC,GAChBC,MAAKC,EAAOH,EAAIC,GAAK,EAAM,QAC3B,CAODF,aAAaC,EAAIC,GACZH,MAAMM,SAASF,MAAKC,EAAOH,EAAIC,GAAK,EAAO,QAC/C,CAQDF,WAAWC,EAAIC,EAAKI,GACnBH,MAAKC,EAAOH,EAAIC,EAAKI,EACrB,CAEDN,SAAcC,EAAIC,EAAKI,EAAQC,GAC9B,IAAMD,IAAUH,KAAKK,QAAU,OAC/B,MAAMC,EAAMR,EAAK,GAAGA,EAAGS,eAAeT,EAAGU,OAAOT,IAAQA,EACxD,IAAIU,EAAKC,QAAQN,GAAQ,OACzBK,EAAmB,mBAAPA,EAAoBA,EAAKC,QAAQC,IAC7CF,EAAGH,GACCP,aAAea,OAAOH,EAAGV,EAC7B,QAGAc,OAAOC,KAAKlB,MACZ,EC/DK,IAAAmB,EAAA,MAAMC,OAEZnB,YAAoC,GAAtBoB,WAAWC,QACzBrB,gBAAkB,mBAClBA,SAAyB,qCAEzBA,gBAAmBsB,IAAgBC,MAAMC,WAAWF,KAAOG,SAASH,GAEpEtB,cAAiB0B,GAAeA,aAAaC,KAE7C3B,cAAiB0B,GAA4B,kBAANA,GAAmBA,aAAaE,QAEvE5B,gBAAkB6B,GAA0B,iBAAVA,EAElC7B,cAAgB6B,GAASA,QAEzB7B,gBAAkB,CAAC6B,EAAQ,IAAMA,EAAMC,SAAS,GAEhD9B,cAAgB,CAAC+B,GAAM,IAAmD,SAAzCA,GAAKD,WAAWE,OAAOC,cAExDjC,mBAAqB,CAACkC,EAAM,GAAIC,IAAQD,EAAIE,QAAQ,cAAc,CAACC,EAAGC,IAAMH,EAAIG,KAEhFtC,eAAkBkC,IAASA,GAAO,IAAIK,MAAM,IAAIC,UAAUC,KAAK,IAE/DzC,kBAAoB,CAAC0C,EAAO,KAAOA,EAAOA,EAAK,GAAGC,cAAgBD,EAAKE,MAAM,GAAGX,cAAgB,GAEhGjC,qBAAuB,CAAC0C,EAAO,GAAIH,EAAQ,MAAQG,EAAKH,MAAMA,GAAOM,KAAI,CAACnB,EAAGoB,IAAM3B,OAAO4B,WAAWrB,KAAIe,KAAKF,GAE9GvC,sBAAwB,CAAC0C,EAAO,KAAOA,EAAKH,MAAM,KAAKM,KAAI,CAACnB,EAAGoB,IAAMA,EAAI3B,OAAO4B,WAAWrB,GAAKA,IAAGe,KAAK,IAExGzC,iBAAmB,KAAQ,MAAM,IAAIe,MAAM,oCAAmC,EAE9Ef,kBAAqBC,GAAOA,aAAcA,EAAG+C,YAE7ChD,aAAe,CAAC+B,EAAM,EAAGkB,EAAM,GAAIC,EAAM,MAASC,KAAKD,IAAIC,KAAKF,IAAIC,EAAKnB,GAAMkB,GAE/EjD,qBAAuB,CAAC+B,EAAM,KAAOA,EAAIqB,MAAM,gBAAgB,GAE/DpD,aAAa+B,EAAKsB,EAAM,EAAGC,GAE1B,GADAA,EAASA,GAAUnC,OAAOmC,OACtBnC,OAAOoC,SAASxB,GAAM,CACzB,MAAMyB,EAAMrC,OAAOsC,gBAAgBH,GACnCvB,EAAMZ,OAAOuC,cAAc3B,IAAM4B,WAAWH,EAAK,KAAOzB,CACxD,CACD,OAAOZ,OAAOyC,SAAS7B,GAAOP,WAAWO,GAAOsB,CAChD,CAQDrD,aAAe,CAAC6D,EAAM,KAAO,8CAA8CC,KAAKD,EAAI7B,QAEpFhC,cAAgB,CAAC+B,EAAM,KAAOA,EAAIC,OAAO+B,WAAW,MAAQhC,EAAIC,OAAOgC,SAAS,KAQhFhE,oBAAsB,CAACiE,EAAU,2BAA4BC,EAAU,qBAAuBD,EAAQ7B,QAAQ,QAAQ,IAAM8B,EAAQf,KAAKgB,MAAMhB,KAAKiB,SAAWF,EAAQG,WAM5Jf,oBACV,OAAOgB,UAAUC,SAAWD,UAAUC,SAAWD,UAAUE,UAAU,EACrE,CAQDxE,eAAe+B,EAAK0C,GACnB,OAAI1C,aAAe2C,OAAe3C,EAC3BZ,OAAOwD,cAAc5C,QAAO6C,EAAY,IAAIF,OAAO3C,EAAK0C,EAC/D,CAODzE,wBAAwBsD,GACvB,OAAOuB,KAAKC,aAAaxB,GAAQyB,OAAO,KAAK,EAC7C,CAOD/E,uBAAuBsD,GACtB,OAAOuB,KAAKC,aAAaxB,GAAQyB,OAAO,KAAM,EAC9C,CAOD/E,qBAAqBsD,OAASsB,GAE7B,OADkB,IAAIC,KAAKG,eAAe1B,GAAQyB,OAAO,IAAIpD,KAAK,IAAM,EAAG,IAEzES,QAAQ,OAAQ,QAChBA,QAAQ,KAAM,MACdA,QAAQ,IAAK,KACbA,QAAQ,KAAM,MACdA,QAAQ,IAAK,IACf,CAODpC,gBAAgBiF,EAAS,IACxB,MAAMpC,EAAM,CACX,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,KAAK,SACL,IAAK,UAGN,OAAOoC,EAAO7C,QADF,cACgBgB,GAAWP,EAAIO,IAC3C,CAEDpD,oBAAoB+B,EAAM,IACzB,MAAqB,iBAAPA,IAAoBA,EAAIgC,WAAW,MAAQhC,EAAIgC,WAAW,KACxE,CAOD/D,kBAAkB+B,EAAM,IACvB,OAAQZ,OAAO+D,OAAOnD,KAASoD,MAAMC,QAAQrD,IAAsB,iBAAPA,EAC5D,CAOD/B,cAAc+B,EAAM,IACnB,OAAOZ,OAAOkE,aAAatD,IAAQZ,OAAOmE,WAAWvD,EACrD,CAOD/B,cAAc+B,EAAM,GAAIsB,EAAM,CAAE,EAAEkC,GAAY,GAC7C,OAAIpE,OAAOkE,aAAatD,GAAayD,KAAKC,MAAMF,EAAYpE,OAAOuE,cAAc3D,GAAOA,GACpFZ,OAAOmE,WAAWvD,GAAaA,GAC/BA,GAAKhC,MAAM4F,KAAK,KAAM,sCAAsC5D,KACzDsB,EACP,CAODrD,qBAAqB+B,EAAM,IAC1B,OAAOA,GAAKK,QAAQjB,QAAOyE,EAAiB,SAC5C,CAOD5F,iBAAiB+B,EAAK8D,EAAM,IAC3B,OAAQ9D,GAAO8D,GAAK/D,WAAWE,MAC/B,CAQDhC,qBAAqB+B,EAAM,GAAI+D,EAAY,KAC1C,OAAO/D,EAAIQ,MAAMuD,GAAWjD,KAAInB,GAAKA,EAAEM,SAAQ+D,QAAOrE,GAAKA,EAAE2C,OAAS,GACtE,CAQDrE,qBAAqB+E,EAAS,GAAIlD,EAAQ,IACzC,OAAQkD,GACP,IAAK,YACJlD,EAAQA,EAAMI,cACd,MACD,IAAK,YACJJ,EAAQA,EAAMc,cACd,MACD,IAAK,aACJd,EAAQV,OAAO6E,cAAcnE,GAG/B,OAAOA,CACP,CAYD7B,2BAA2BiG,EAAKC,GAC/B,MAAMC,EAAQnF,OAAOoF,KAAKF,GACpBG,EAAOrF,OAAOsF,OAAOJ,GAC3B,OAAO,IAAIK,YAAYJ,EAAO,YAAYF,OAAnC,IAAgDI,EACvD,CAODrG,0BAA0BwG,GACzB,MAAMC,EAAWC,SAASC,cAAc,YAExC,OADAF,EAASG,UAAYJ,EACdC,EAAS5E,KAChB,CAOD7B,kBAAkB6B,GACjB,IAAKV,OAAOoC,SAAS1B,GAAQ,OAC7B,IAAKV,OAAO0F,iBAAiBhF,GAAQ,OACrC,IAAIiF,EAAIC,OACJnG,EAAK,KAQT,OAPAiB,EAAMG,OAAOO,MAAM,KAAKyE,SAAQ,CAACtF,EAAGoB,EAAGmE,KACtC,GAAKH,EACL,OAAIhE,EAAImE,EAAE5C,OAAS,EACXyC,EAAIA,EAAEpF,QAEdd,EAAKkG,EAAEpF,GAAE,IAEHd,CACP,CAQDZ,wBAAwB+B,EAAM,IAC7B,OAAQZ,OAAOwD,cAAc5C,EAC7B,CAQD/B,qBAAqB+B,EAAM,IAC1B,OAA+C,IAAxCZ,OAAOoE,UAAUxD,GAAKC,OAAOqC,MACpC,CASDrE,qBAAqBkH,EAAMC,GAC1B,MAAMC,EAASjG,OAAO0F,iBAAiBK,GACjCG,EAASlG,OAAO0F,iBAAiBM,GACvC,OAAIC,GAAUC,EACNH,EAAKlF,OAAOC,eAAiBkF,EAAMnF,OAAOC,cAE3CmF,IAAWC,CAClB,CAUDrH,qBAAqBsH,EAAO,EAAGC,GAE9B,OADAA,EAASpG,OAAOyC,SAAS2D,GAAUC,YAAYC,QAAQF,GAAUA,EAC1D,IAAIG,SAAQ,CAACC,EAASC,KAC5B,MAAMC,EAAMC,WAAWH,EAAQI,KAAK,MAAM,GAAOT,GAC7CC,aAAkBC,aACrBD,EAAOS,iBAAiB,SAAS,KAChCC,aAAaJ,GACbD,EAAO,IAAI7G,MAAM,mBAAmB,GAErC,GAEF,CAUDf,oBAAoBkI,EAAMC,EAAM5H,EAAO,gBAEtC,MAAM6H,EAAO,IAAIC,KAAKH,EAAM,CAAE3H,KAAMA,IAC9BsD,EAAMyE,IAAIC,gBAAgBH,GAChC,IACC,MAAMnB,EAAIP,SAASC,cAAc,KACjCM,EAAEuB,KAAO3E,EACToD,EAAEwB,SAAWN,EACblB,EAAEyB,cAEIvH,OAAOsG,QAAQ,IAExB,CAAY,QACTa,IAAIK,gBAAgB9E,EACpB,CACD,CAiBD7D,gBAAgBmI,EAAMS,EAAOC,EAAK5H,GAAO,EAAM6H,GAAS,EAAOC,GAAS,GAClEC,YAAYC,cAAcL,KAC3BM,eAAeC,IAAIhB,KACvBe,eAAeE,OAAOjB,EAAMS,EAAO,CAAES,QAASR,GAAK5G,gBAC/ChB,IAASD,OAAOsI,SAASV,IAAQ5H,OAAOC,KAAK2H,GAC7CE,IAAW9H,OAAOuI,SAASX,IAAQ5H,OAAO8H,OAAOF,GACjDG,IAAQS,KAAKZ,EAAMT,MAAQS,IAC/B,CAQD5I,0BAA0ByJ,GACzB,MAAMrB,EAAO,IAAIC,KAAK,CAACoB,GAAM,CAAElJ,KAAM,oBAC/BsD,EAAMyE,IAAIC,gBAAgBH,GAChC,IACC,aAAasB,OAAO7F,EACvB,CAAY,QACTyE,IAAIK,gBAAgB9E,EACpB,CACD,CAMD7D,8BAA8B6B,EAAQ,IACrC,MAAM8H,QAAerF,UAAUsF,YAAYC,MAAM,CAAE1B,KAAM,oBACzD,MAAqB,YAAjBwB,EAAOG,OAAwC,WAAjBH,EAAOG,MAC/BxF,UAAUyF,UAAUC,UAAUnI,GAEjC,EACP,CAMD7B,iCACC,MAAM2J,QAAerF,UAAUsF,YAAYC,MAAM,CAAE1B,KAAM,mBACzD,MAAqB,YAAjBwB,EAAOG,OAAwC,WAAjBH,EAAOG,MAC/BxF,UAAUyF,UAAUE,WAEvB,EACP,QAGAjJ,OAAOC,KAAKE,QACZC,WAAWD,OAASA,MACpB,GC/ZK+I,EAAA,MAAMC,WAQTnK,kBAAqBY,GAAqB,mBAAPA,EAEnCZ,wBAAwBY,GACpB,OAAOuJ,WAAWC,WAAWxJ,IAAOA,EAAGkB,WAAWuI,SAAS,cAC9D,CASDrK,mBAAmB8G,EAAGlG,GAClB,OAAOkG,GAAKqD,WAAWC,WAAWtD,EAAElG,GACvC,CAQDZ,iBAAiBsK,EAAKnC,GAClB,OAAOgC,WAAWI,kBAAkBD,EAAKnC,EAAM,MAClD,CAQDnI,iBAAiBsK,EAAKnC,GAClB,OAAOgC,WAAWI,kBAAkBD,EAAKnC,EAAM,MAClD,CASDnI,yBAAyBsK,EAAKnC,EAAMvH,GAChC,MAAM4J,IAAOF,GAAMG,QAAQC,yBAAyBJ,EAAIK,UAAWxC,GACnE,OAAOqC,GAA4B,mBAAbA,EAAK5J,EAC9B,CAQDZ,uBAAuBY,GACnB,IAAKuJ,WAAWC,WAAWxJ,GAAK,OAAO,EAEvC,IAAIgK,EAAUhK,aADQuJ,WAAWU,kBAAkB7H,YAGnD,OADK4H,IAASA,EAAoC,iBAA1BhK,EAAGkK,OAAOC,cAC3BH,CACV,CAWD5K,+BAA+BY,EAAIoK,GAC/B,MAAMC,EAAOC,UAAY/F,MAAMgG,KAAKD,WAAWtI,MAAM,GAAK,GAC1D,aAAahC,EAAGwK,MAAMJ,GAAS,KAAMC,EACxC,CAUDjL,wBAAwBY,EAAIoK,GACxB,MAAMC,EAAOC,UAAY/F,MAAMgG,KAAKD,WAAWtI,MAAM,GAAK,GAC1D,OAAOhC,EAAGwK,MAAMJ,GAAS,KAAMC,EAClC,CASDjL,0BAA0BY,EAAIoK,EAAOK,GAAS,GAE1C,GADAzK,EAAKO,EAAOoC,SAAS3C,GAAMuJ,WAAWmB,cAAc1K,GAAMA,GACrDuJ,WAAWC,WAAWxJ,GAAK,OAChC,IAAKyK,GAAUlB,WAAWoB,iBAAiB3K,GAAK,OAChD,MAAMqK,EAAOC,UAAY/F,MAAMgG,KAAKD,WAAWtI,MAAM,GAAK,GAC1D,OAAIuH,WAAWqB,gBAAgB5K,SACduJ,WAAWU,kBAAkBjK,EAAIoK,KAAUC,GAErDd,WAAWsB,iBAAiB7K,EAAIoK,KAAUC,EACpD,CAQDjL,qBAAqB6B,GACjB,MAAMjB,EAAKO,EAAOuK,WAAW7J,GAC7B,OAAOsI,WAAWC,WAAWxJ,GAAMA,EAAK,IAC3C,CAEDZ,eAA4BY,EAAI+K,EAASV,GACrC,IAAKd,WAAWC,WAAWxJ,GAAK,OAEhC,OADgBuJ,WAAWqB,gBAAgB5K,SAE1BA,EAAGwK,MAAMO,EAASV,GAExBrK,EAAGwK,MAAMO,EAASV,EAEhC,CAQDjL,oBAAoBY,EAAI+K,GACpB,IAAIC,GAAM,EACV,OAAOC,SAAUZ,KACb,GAAIW,EAAK,OACTA,GAAM,EACN,MAAMtB,EAAMqB,GAAWxL,KACvB,aAAagK,YAAW2B,EAAelL,EAAI0J,EAAKW,EAAK,CAE5D,CAQDjL,oBAAoBY,EAAI+K,GACpB,IAAIC,EAAM,EACV,MAAO,IAAIX,KACP,GAAIW,EAAM,EAAG,OACbA,IACA,MAAMtB,EAAMqB,GAAWxL,KACvB,OAAO,IAAIuH,SAAQ,CAACqE,EAAQnE,KACxBoE,gBAAeH,UACX,KAAID,GAAO,KACXA,IACY,IAARA,GACJ,IACI,MAAM9E,QAAUqD,YAAW2B,EAAelL,EAAI0J,EAAKW,GACnDc,EAAOjF,EACV,CAAC,MAAOmF,GACLrE,EAAOqE,EAC/B,CAA8B,QACNL,GAAO,CACV,IACH,GACJ,CAET,QAGG5K,OAAOC,KAAKkJ,YACZ/I,WAAW+I,WAAaA,UAC3B,GC3LE,MAAM+B,KAEZlM,SAAa,EAKbA,eACCG,MAAKQ,EAAM,CACX,CAODX,YAAYmM,EAAQ,SACnB,MAAO,GAAGA,IAAQhM,MAAKQ,KACvB,CAMUA,gBACV,OAAOR,KAAKiM,MACZ,CAODpM,gBAAgBqM,GACf,MAAMC,GAAKD,GAAK,IAAIhI,OACpB,IAAIkI,EAAI,EAAGzJ,EAAI,EACf,GAAU,IAANwJ,EAAS,OAAOC,EACpB,KAAOzJ,EAAIwJ,GACVC,GAAKA,GAAK,GAAKA,EAAIF,EAAEG,WAAW1J,KAAO,EAExC,OAAOyJ,CACP,CAMDvM,aAAaC,GACRA,IACHA,EAAGU,GAAsB,iBAAVV,EAAGU,GAAkBuL,KAAKvL,GAAKV,EAAGU,IAAMuL,KAAKvL,GAE7D,QAGAK,OAAO8H,OAAOoD,KACd,ECpDK,IAAAO,EAAA,MAAMC,OAOZ1M,qBAAqBC,GACpB,OAAOA,aAAc+I,WACrB,CASDhJ,cAAcC,EAAIkI,EAAMpG,GAAM,GACxB2K,OAAOC,cAAc1M,KACtB8B,EACH9B,EAAG2M,aAAazE,EAAM,IAEtBlI,EAAG4M,gBAAgB1E,GAEpB,CASDnI,WAAWC,EAAIkI,EAAMpG,GACf2K,OAAOC,cAAc1M,KACtBkB,EAAOoE,UAAUxD,GACpB9B,EAAG2M,aAAazE,EAAMpG,GAEtB9B,EAAG4M,gBAAgB1E,GAEpB,CAUDnI,WAAWC,EAAIkI,EAAO,GAAIpG,EAAM,IAC/B,IAAK2K,OAAOC,cAAc1M,GAAK,OAAO8B,EACtC,IAAKZ,EAAO2L,WAAW7M,GAAK,OAC5B,MAAMyB,EAAIzB,EAAG8M,aAAa5E,IAASpG,EACnC,OAAOZ,EAAOoE,UAAU7D,EACxB,CAUD1B,iBAAiBC,EAAIkI,EAAO,GAAIpG,EAAM,SACrC,MAAMiL,EAAON,OAAOvD,IAAIlJ,EAAIkI,EAAMpG,GAClC,OAAOZ,EAAO8L,OAAOD,EAAMjL,EAC3B,CAUD/B,gBAAgBC,EAAIkI,EAAO,GAAIpG,EAAM,KACpC,MAAMiL,EAAON,OAAOvD,IAAIlJ,EAAIkI,EAAMpG,GAClC,OAAOZ,EAAO+L,MAAMF,EAAMjL,EAC1B,CAUD/B,iBAAiBC,EAAIkI,EAAO,GAAIpG,EAAM,KACrC,MAAMiL,EAAON,OAAOvD,IAAIlJ,EAAIkI,EAAMpG,EAAK,CAAA,GACvC,OAAOZ,EAAOgM,OAAOH,EACrB,CAQDhN,iBAAiBC,EAAIkI,EAAO,GAAIpG,EAAM,SACrC2K,OAAOU,IAAInN,EAAIkI,EAAMhH,EAAO8L,OAAOlL,IAAM,EAKzC,CAQD/B,gBAAgBC,EAAIkI,EAAO,GAAIpG,EAAM,KACpC2K,OAAOU,IAAInN,EAAIkI,EAAMhH,EAAO+L,MAAMnL,GAAMsL,IACxC,CAQDrN,iBAAiBC,EAAIkI,EAAO,GAAIpG,EAAM,KACrC2K,OAAOU,IAAInN,EAAIkI,EAAM3C,KAAK8H,UAAUvL,GAAM,KAC1C,CAOD/B,mBAAmBmC,GAClB,OAAOnB,OAAOuM,QAAQpL,GAAO,CAAE,GAAEU,KAAI2K,GAAM,GAAGA,EAAG,MAAMA,EAAG,OAAM/K,KAAK,IACrE,CAMDzC,kBAAkBmC,EAAKlC,GACjByM,OAAOC,cAAc1M,IAC1Be,OAAOuM,QAAQpL,GAAO,CAAE,GAAEU,KAAI2K,GAAMd,OAAOU,IAAInN,EAAIuN,EAAG,GAAIA,EAAG,KAC7D,CAODxN,oBAAoBC,GACnB,OAAOkF,MAAMgG,KAAKlL,EAAGwN,YACnB1H,QAAOrE,GAAKA,EAAEyG,KAAKpE,WAAW,WAC9BlB,KAAInB,GAAK,GAAGA,EAAEyG,SAASzG,EAAEG,WACzBY,KAAK,IACP,CAQDzC,eAAeC,EAAIuD,EAAM,KACxB,OAAO2B,MAAMgG,KAAKlL,GAAIwN,YAAc,IAAI5K,KAAIoE,GAAK,GAAGA,EAAEkB,SAASlB,EAAEpF,WAAUY,KAAKe,EAChF,CAODxD,eAAe0N,EAAMC,EAAM,CAAA,EAAIC,EAAY,SAiE1C,OA/DiB,IAAIC,MAAMH,EAAM,CAEhCN,IAAIU,EAAQC,EAAMlM,GAEjB,GAAa,SAATkM,EAAiB,OACrB,GAAa,YAATA,EAAoB,OAAOD,EAAOE,QAAUnM,EAEhD,MAAMtB,EAAOoN,EAAII,IAAOxN,KAGxB,OAFAwN,EAAOJ,EAAII,IAAOE,WAAaF,EAExBxN,GACN,KAAKqB,QACJ8K,OAAOwB,OAAOJ,EAAQC,EAAO5M,EAAO8L,OAAOpL,IAC3C,MACD,KAAKsM,OACJzB,OAAO0B,SAASN,EAAQC,EAAMlM,GAC9B,MACD,KAAKb,OACL,KAAKmE,MACJuH,OAAOU,IAAIU,EAAQC,EAAMvI,KAAK8H,UAAUzL,IACzC,QACC6K,OAAOU,IAAIU,EAAQC,EAAMlM,GAI3B,OAAO,CACP,EAEDsH,IAAI2E,EAAQC,GAEX,GAAa,SAATA,EAAiB,OAAOD,EAC5B,GAAa,YAATC,EAAoB,OAAOD,EAAOE,QACtC,GAAoB,iBAATD,EAAmB,OAAOD,EAAOC,GAC5C,GAAIA,IAASH,EAAW,OAAOzI,MAAMgG,KAAK2C,EAAOO,UAAUxL,KAAI5C,GAAMyM,OAAO4B,QAAQrO,EAAI0N,EAAKC,KAE7F,MAAMnN,EAAMkN,EAENpN,EAAOE,EAAIsN,IAAOxN,KAClBgO,IAAO9N,EAAIsN,IAAOS,OAClBC,EAAOhO,EAAIsN,IAAOW,QAClBC,GAA6B,IAArBlO,EAAIsN,IAAOY,MAEzBZ,EAAOtN,EAAIsN,IAAOE,WAAaF,EAC/B,IAAIhM,EAAM+L,EAAOc,aAAab,GAAQrB,OAAOvD,IAAI2E,EAAQC,GAAQD,EAAOC,GAExE,GAAI5D,EAAWC,WAAWrI,GAAM,OAAOA,EAAIgG,KAAK+F,GAEhD,OAAOvN,GACN,KAAKqB,QACJ,OAAOkM,EAAOc,aAAab,GAC5B,KAAKI,OACJ,OAAOhN,EAAO+L,MAAMnL,EAAK,GAC1B,KAAKf,OACJ,OAAOG,EAAOgM,OAAOpL,EAAK,CAAE,GAC7B,KAAKoD,MACJ,OAAOhE,EAAOgM,OAAOpL,EAAK,IAC3B,QAEC,OADAA,EAAMwM,EAAQxM,GAAO0M,GAAQ,GAAO1M,GAAO0M,QAAQ7J,EAC5C+J,EAAQxN,EAAO0N,cAAc9M,GAAOA,EAE7C,GAIF,QAGAf,OAAOC,KAAKyL,QACZtL,WAAWsL,OAASA,MACpB,GCvPKoC,EAAA,MAAMC,SAET/O,WAAiBoB,WAAWsF,UAAUsI,MAAMC,iBAE5CpM,GAEAG,YAAYkM,GACG/O,MACR0C,EAAOkM,UAASI,EAAQD,EAC9B,CAED/F,IAAIhB,GACA,MAAMiH,EAAKjP,KACX,GAAKiP,GAAGvM,EACR,OAAOkM,UAASM,EAAUD,GAAGvM,EAAKsG,IAAIhB,GAAQiH,GAAGvM,EAAK1B,EAAOmO,eAAenH,GAC/E,CAEDoH,OAAOpH,GACH,OAAQhI,KAAKgJ,IAAIhB,IAAS,KAAKrG,UAClC,CAEDmL,OAAO9E,GACH,MAAMpG,EAAM5B,KAAKgJ,IAAIhB,GACrB,OAAOhH,EAAO8L,OAAO8B,UAASM,EAAUtN,GAAKF,MAAQE,EACxD,CAEDmL,MAAM/E,GACF,IAAIpG,EAAM5B,KAAKgJ,IAAIhB,GAInB,OAHI4G,UAASM,GAAWlF,EAAWC,WAAWrI,GAAKyN,KAC9B,WAAbzN,EAAI0N,OAAmB1N,EAAMA,EAAIyN,GAAG,OAErCrO,EAAO+L,MAAM6B,UAASM,EAAUtN,GAAKF,MAAQE,EAAIqB,MAAM,gBAAgB2C,QAAOrE,GAAKP,EAAOyC,SAASlC,KAAIgO,QACjH,CAEDC,QAAQxH,EAAMtG,GACV,OAAO1B,KAAKoP,OAAOpH,IAAStG,CAC/B,CAOD7B,SAAeC,GACX,OAAI8O,UAASM,EAAgBpP,EAAGgP,mBAC5B7N,WAAW2F,QAAQ6I,iBAAyBxO,WAAW2F,OAAO6I,iBAAiB3P,GAC5E,IACV,CAODD,kBAAkBC,EAAIkI,GAClB,OAAO4G,SAASc,qBAAqB5P,GAAIkJ,IAAIhB,EAChD,CAODnI,4BAA4BkP,GACxB,OAAO,IAAIH,SAASG,EACvB,CAEDlP,SAAkBkC,GACd,OAAKA,GACLA,EAAM4N,OAAO5N,GAAKE,QAAQ,iBAAkB,SACjCA,QAAQ,SAAU,KAAKJ,OAFjB,EAGpB,CAEDhC,SAAckC,EAAK6N,GACf,OAAO7N,EAAIK,MAAMwN,GAAIlN,KAAIR,GAAKA,EAAEL,SAAQ+D,QAAO1D,GAAKA,GACvD,CAEDrC,SAAoBgQ,EAASC,GACzB,QAAOD,GAAUC,EAAIC,MAAK7N,GAAK2N,EAAQ3F,SAAShI,IACnD,CAODrC,gBAAgBmQ,GACZ,MAAMf,EAAKL,SACLqB,EAAahB,GAAG7M,EAAO6M,GAAG7J,EAAW4K,GAAW,KAItD,OAHehL,MAAMgG,KAAK/J,WAAWsF,SAAS2J,aACpBxN,KAAIR,GAAK8C,MAAMgG,KAAK9I,EAAEiO,UAAY,MAChCC,QAAO,CAACC,EAAKnO,IAAMmO,EAAIC,OAAOpO,IAAI,IAC9C0D,QAAQ1D,GAAM+M,GAAGsB,EAAatB,GAAG7J,EAAWlD,EAAEsO,cAAeP,IAChF,QAGGpP,OAAOC,KAAK8N,UACZ3N,WAAW2N,SAAWA,QACzB,GClGE,MAAM6B,eAAejP,KAExB3B,sBAAwB,uBACxBA,oBAAsB,sFAEtBsD,GAAUgB,UAAUhB,OAEpByB,OAAOhD,EAAM6O,OAAOC,eAAgBvN,GACrBnD,KACRmD,OAASA,EACZ,MAAMnB,EAFKhC,KAEI2Q,SACf,OAAO/O,EAAIK,QAAQwO,OAAOG,cAAc,CAAC3N,EAAOrB,IAAQA,GAAOI,EAAIiB,IACtE,CAMDvD,QACI,MAAMuP,EAAKjP,KACL6Q,EAAO5B,EAAG4B,KAAKC,UACfC,EAAQ9B,EAAG8B,MAAMC,SAEjBC,EAAchC,GAAGiC,IAGjBC,EAAiB,IAAVJ,EAAc,GAAK,IAAIK,OAAOL,GAD3BE,GAAe,GAAK,IACwB7O,MAAM,KAClE,IAAIO,EAAI,EACR,KAAOA,GAAKkO,GACRM,EAAKE,KAAK1O,EAAEhB,YACZgB,IAGJ,KAAOwO,EAAKjN,OAAS,GAAK,GAAGiN,EAAKE,KAAK,IAEvC,OAAOF,CACV,CAEGhO,aACA,OAAOnD,MAAKmD,CACf,CAEGA,WAAOvB,GACP5B,MAAKmD,EAAUvB,GAAOuC,UAAUC,QACnC,CAEGkN,WACA,OAAOtR,KAAKuR,aACf,CAEGD,SAAK1P,EAAM,GACX5B,KAAKwR,YAAY5P,EACpB,CAEG6P,YACA,OAAOzR,KAAK0R,UACf,CAEGD,UAAM7P,EAAM,GACZ5B,KAAK2R,SAAS/P,EACjB,CAEGgQ,UACA,OAAO5R,KAAK8Q,SACf,CAEGc,QAAIhQ,EAAM,GACV5B,KAAK6R,QAAQjQ,EAChB,CAMGmP,YACA,OAAO,IAAIN,OAAOzQ,KAAKuR,cAAevR,KAAK0R,WAAY,EAC1D,CAMGb,WACA,OAAO,IAAIJ,OAAOzQ,KAAKuR,cAAevR,KAAK0R,WAAa,EAAG,EAC9D,CAEGI,SACA,OAAOnC,OAAO3P,KAAK+R,MAAMtP,OAAO,EACnC,CAEGsP,WACA,OAAO/R,KAAKuR,aACf,CAEGS,QACA,OAAOhS,KAAK0R,WAAa,CAC5B,CAEGO,SACA,OAAOjS,KAAKgS,EAAErQ,WAAWuQ,SAAS,EAAG,IACxC,CAEGC,UACA,OAAOnS,MAAKoS,EAAU,CAAEX,MAAO,SAClC,CAEGY,WACA,OAAOrS,MAAKoS,EAAU,CAAEX,MAAO,QAClC,CAEGa,QACA,OAAOtS,KAAK8Q,UAAUnP,UACzB,CAEG4Q,SACA,OAAOvS,KAAKsS,EAAEJ,SAAS,EAAG,IAC7B,CAEGM,QACA,OAAOxS,KAAKgR,SAASrP,UACxB,CAEG8Q,SACA,OAAOzS,KAAK0S,IAAIjQ,MAAM,EAAG,EAC5B,CAEGiQ,UACA,OAAO1S,MAAKoS,EAAU,CAAEO,QAAS,SACpC,CAEGC,WACA,OAAO5S,MAAKoS,EAAU,CAAEO,QAAS,QACpC,CAEGE,QACA,OAAO7S,KAAK8S,WAAWnR,UAC1B,CAEGoR,SACA,OAAO/S,KAAK6S,EAAEX,SAAS,EAAG,IAC7B,CAEG9F,QACA,OAAOpM,MAAKgT,EAAY,EAC3B,CAEGC,SACA,OAAOjT,MAAKgT,EAAY,EAC3B,CAEGlM,QACA,OAAO9G,MAAKkT,GAAU,EACzB,CAEGC,QACA,OAAOnT,MAAKkT,GAAU,EACzB,CAEGE,QACA,OAAOpT,KAAKqT,aAAa1R,UAC5B,CAEG2R,SACA,OAAOtT,KAAKoT,EAAElB,SAAS,EAAG,IAC7B,CAEGhG,QACA,OAAOlM,KAAKuT,aAAa5R,UAC5B,CAEG6R,SACA,OAAOxT,KAAKkM,EAAEgG,SAAS,EAAG,IAC7B,CAEGuB,UACA,OAAOzT,KAAK0T,kBAAkB/R,WAAWuQ,SAAS,EAAG,IACxD,CAEGyB,QACA,OAAO3T,MAAK4T,GACf,CAEGC,SACA,OAAO7T,KAAK2T,EAAE1R,QAAQ,IAAK,GAC9B,CAEG6R,QACA,OAAO9Q,KAAK+Q,KAAK/T,KAAKgS,EAAI,EAC7B,CAEGgC,QACA,OAAQhU,KAAK8S,WAAa,GAAGnR,UAChC,CAEGsS,SACA,OAAOjU,KAAKgU,EAAE9B,SAAS,EAAG,IAC7B,CAEGgC,QACA,MAAMC,EAAO,IAAI3S,KAAKxB,KAAKoU,WAC3BD,EAAKE,SAAS,EAAG,EAAG,EAAG,GACvBF,EAAKtC,QAAQsC,EAAKrD,UAAY,GAAKqD,EAAKnD,SAAW,GAAK,GACxD,MAAMsD,EAAQ,IAAI9S,KAAK2S,EAAK5C,cAAe,EAAG,GAC9C,OAAO,EAAIvO,KAAKuR,QAAQJ,EAAKC,UAAYE,EAAMF,WAAa,MAAW,GAAKE,EAAMtD,SAAW,GAAK,GAAK,EAC1G,CAEGwD,SACA,OAAOxU,KAAKkU,EAAEvS,WAAWuQ,SAAS,EAAG,IACxC,CAEGhQ,QACA,OAAOlC,KAAKoU,SACf,CAEGK,QACA,OAAOzR,KAAKgB,MAAMhE,KAAKkC,EAAI,IAC9B,CAEDyO,SACI,MAAM1B,EAAKjP,KACX,MAAO,CACH8R,GAAI7C,EAAG6C,GACPC,KAAM9C,EAAG8C,KACTC,EAAG/C,EAAG+C,EACNC,GAAIhD,EAAGgD,GACPE,IAAKlD,EAAGkD,IACRE,KAAMpD,EAAGoD,KACTC,EAAGrD,EAAGqD,EACNC,GAAItD,EAAGsD,GACPC,EAAGvD,EAAGuD,EACNC,GAAIxD,EAAGwD,GACPC,IAAKzD,EAAGyD,IACRE,KAAM3D,EAAG2D,KACTC,EAAG5D,EAAG4D,EACNE,GAAI9D,EAAG8D,GACP3G,EAAG6C,EAAG7C,EACN6G,GAAIhE,EAAGgE,GACPnM,EAAGmI,EAAGnI,EACNqM,EAAGlE,EAAGkE,EACNC,EAAGnE,EAAGmE,EACNE,GAAIrE,EAAGqE,GACPpH,EAAG+C,EAAG/C,EACNsH,GAAIvE,EAAGuE,GACPC,IAAKxE,EAAGwE,IACRE,EAAG1E,EAAG0E,EACNE,GAAI5E,EAAG4E,GACPC,EAAG7E,EAAG6E,EACNE,EAAG/E,EAAG+E,EACNC,GAAIhF,EAAGgF,GACPC,EAAGjF,EAAGiF,EACNM,GAAIvF,EAAGuF,GACPtS,EAAG+M,EAAG/M,EACNuS,EAAGxF,EAAGwF,EAEb,CAED5U,iBAAiB6U,GAAQ,EAAOvR,EAASgB,UAAUhB,OAAQP,GAAa,GACpE,MAAMtC,EAAM,IAAImQ,OAChBnQ,EAAI6C,OAASA,EACb7C,EAAIqR,SAAS,GACb,MAAMR,EAAO,GACb,IAAIvP,EAAM,KACN4Q,EAAI,GACR,KAAOA,KACH5Q,EAAM8S,EAAQpU,EAAI6R,IAAM7R,EAAI+R,KAC5BzQ,EAAMgB,EAAatC,GAAIsC,EAAYhB,GAAOA,EAC1CuP,EAAKE,KAAKzP,GACVtB,EAAIqR,SAASrR,EAAIoR,WAAa,GAElC,OAAOP,CACV,CAEDtR,eAAe6U,GAAQ,EAAOvR,EAASgB,UAAUhB,OAAQP,GAAa,GAClE,MAAMtC,EAAM,IAAImQ,OAChBnQ,EAAI6C,OAASA,EACb,MACMwR,EADcrU,GAAI4Q,IACK,EAAI,EACjC5Q,EAAIuR,QAAQvR,EAAIwQ,UAAYxQ,EAAI0Q,SAAW2D,GAC3C,MAAMxD,EAAO,GACb,IAAIvP,EAAM,KACN4Q,EAAI,EACR,KAAOA,KACH5Q,EAAM8S,EAAQpU,EAAIoS,IAAMpS,EAAIsS,KAC5BhR,EAAMgB,EAAatC,GAAIsC,EAAYhB,GAAOA,EAC1CuP,EAAKE,KAAKzP,GACVtB,EAAIuR,QAAQvR,EAAIwQ,UAAY,GAEhC,OAAOK,CACV,CAEDD,KAEI,OAA6D,IAAtD,IAAIxM,KAAKkQ,OAAO5U,MAAKmD,IAAU0R,UAAUC,QACnD,CAEDlS,GAAYhB,EAAM,IACd,OAAOA,EAAImT,OAAO,GAAGvS,cAAgBZ,EAAIa,MAAM,EAClD,CAED2P,GAAU5E,GACN,OAAOxN,KAAKgV,eAAehV,MAAKmD,EAASqK,EAC5C,CAEDwF,GAAYiC,GACR,OAAQjV,KAAK8S,WAAa,IAAM,IAAInR,WAAWuQ,SAAS+C,EAAM,IACjE,CAED/B,GAAUgC,GACN,MACMtT,EAAM5B,MAAKoS,EADL,CAAE+C,KAAM,UAAWC,QAAQ,IACPhT,MAAM,KAAKiT,KAAK,GAChD,OAAOH,EAActT,EAAIE,cAAgBF,CAC5C,CAEDgS,KACI,MACM0B,GAAc,EADTtV,KACgBuV,oBACrBC,EAAUxS,KAAKyS,IAAIH,GAEnBI,EAAeF,EAAU,GAM/B,MAAO,GAJMF,GAAc,EAAI,IAAM,MAHlBtS,KAAKgB,MAAMwR,EAAU,IAIhB7T,WAAWuQ,SAAS,EAAG,QAClCwD,EAAa/T,WAAWuQ,SAAS,EAAG,MAGpD,CAEDrS,aAAa6B,EAAOkD,EAAQzB,GACxByB,EAASA,GAAU5D,EAAO2U,cAAcxS,GACxC,MAAMyS,EAAQnF,QAAOoF,EAAuBjR,GAC5C,OAAO6L,QAAOqF,EAAoBpU,EAAOkU,EAC5C,CAED/V,SAA8B+E,GAC1B,OAAO,IAAIL,OACP,QAAUK,EAAOpC,cAAcgB,WAAW,cAAe,eAAiB,QAEjF,CAED3D,SAA2B6B,EAAOkU,GAE9B,MAAMG,OAAEA,GAAWrU,EAAMuB,MAAM2S,IAAU,GAEzC,IAAKG,EAAQ,OAAO,KAEpB,MAAMC,EAAIhI,OAAO+H,EAAOE,GAClB7C,EAAIpF,OAAO+H,EAAO/D,GAClBQ,EAAIxE,OAAO+H,EAAOzD,GAGxB,GAAI0D,EAAI,KAAQA,EAAI,KAAM,OAAO,KACjC,GAAI5C,EAAI,GAAKA,EAAI,GAAI,OAAO,KAE5B,MAAMe,EAAO,IAAI3S,KAAKwU,EAAG5C,EAAI,EAAGZ,GAGhC,OAAIA,IAAM2B,EAAKrD,WAER1P,MAAM+S,EAAK+B,WAFe,KAEK/B,CACzC,QAGGlT,WAAWwP,OAASA,MACvB,EC3WE,MAAM0F,OAETtW,kBAAoB,CAAEmI,KAAM,CAAE,EAAE5H,KAAM,CAAE,EAAEwE,OAAQ,CAAE,EAAEwR,SAAU,CAAE,EAAEjT,OAAQ,CAAE,EAAEkT,QAAS,CAAE,GAO3FxW,aAAakI,GACT,OAAO/C,MAAMgG,KAAK,IAAIsL,IAAIvO,GAC7B,CAEDlI,qBAAuB,CAACiH,EAAGyP,IAAMzP,EAAE5C,SAAWqS,EAAErS,QAAU4C,EAAE0P,OAAM,CAACzH,EAAS0H,IAAU1H,IAAYwH,EAAEE,KASpG5W,mBAAmBiH,EAAGyP,GAElB,QAAKvR,MAAMC,QAAQ6B,OACd9B,MAAMC,QAAQsR,KACfzP,IAAMyP,IAEVzP,EAAIA,EAAE4P,WACNH,EAAIA,EAAEG,WAECP,OAAOQ,cAAc7P,EAAGyP,KAClC,CAQD1W,mBAAmBkR,EAAQ,GAAI6F,EAAS,IACpC,MAAO,IAAI7F,KAAU6F,GAAQhR,QAAO,CAAClE,EAAO+U,EAAOI,IAAQA,EAAIC,QAAQpV,KAAW+U,GACrF,CAOD5W,oBAAoBkX,EAAO,IACvB,IAAIpQ,EAAI,CAAA,EAER,OADAoQ,EAAKnR,QAAOe,GAAKA,IAAGE,SAAQmQ,GAAMrQ,EAAI,IAAKA,KAAMqQ,KAC1CrQ,CACV,CAQD9G,cAAcoX,EAAKrV,GAEf,MAAMxB,EAAO+V,QAAOe,EAAQD,EAAKrV,GAC3BuB,EAAS8T,EAAI9T,QAAUnC,EAAOmC,OAC9BgU,EAAOnW,EAAOoW,QAAQH,EAAIZ,QAAS,KAGzC,OAFAzU,EAAMuV,EAAOvV,EAAIqB,MAAMkU,GAAM,GAAKvV,EAE1BxB,GACJ,IAAK,YACD,OAAIwB,aAAeJ,KAAaI,EACzBJ,KAAK8D,MAAM1D,GACtB,IAAK,OACD,GAAIA,aAAeJ,KAAM,OAAOI,EAChC,MAAMyV,EAAMrW,EAAO8L,OAAOmK,EAAIrS,aAAUH,EAAYwS,EAAIrS,OACxD,OAAI5D,EAAOoC,SAASxB,GAAa6O,OAAOnL,MAAM1D,EAAKyV,EAAKlU,GACjDvB,GAAc,GAAPA,EAAW,IAAI6O,OAAO7O,GAAKgD,OAAOyS,EAAKlU,GAAUvB,EACnE,IAAK,SACL,IAAK,OACD,GAAIA,aAAeJ,KAAM,CACrB,MAAM6V,EAAMJ,EAAIrS,QAAU5D,EAAO2U,cAAcxS,GAC/C,OAAO,IAAIsN,OAAO7O,GAAKgD,OAAOyS,EAAKlU,EACvD,CACgB,MACJ,IAAK,UACD,OAAOnC,EAAO8L,OAAOlL,GAAK,GAC9B,IAAK,SACD,OAAOZ,EAAO+L,MAAMnL,EAAKA,EAAKuB,GAClC,IAAK,WACGnC,EAAOoC,SAASxB,KAAMA,EAAMZ,EAAO+L,MAAMnL,IAC7C,MAAM4L,EAAM,CAAE8J,MAAO,WAAYlB,SAAUa,EAAIb,UAC/C,OAAO,IAAI1R,KAAKC,aAAaxB,EAAQqK,GAAK5I,OAAOhD,GAGzD,OAAOA,CACV,CAED/B,SAAeoX,EAAKrV,GAChB,OAAIqV,EAAI7W,KAAa6W,EAAI7W,KACrBwB,aAAeJ,KAAa,OAC5BI,aAAeoM,OAAe,SAC9BpM,aAAeH,QAAgB,iBACrBG,CACjB,CASD/B,cAAekI,EAAO,GAAInC,EAAS,GAAI2R,EAAQC,EAAQ,GACnD,IAAI/L,EAAM,EACNgM,GAAM,EACV,IAAK,IAAIC,KAAO3P,EAMZ,GALA0P,EAAMtB,OAAOwB,aAAaD,EAAK9R,EAAQ2R,GACnCE,IACAhM,UACMiM,GAENF,EAAQ,GAAK/L,GAAO+L,EAAO,KAEtC,CASD3X,kBAAkBkI,EAAO,GAAInC,EAAS,GAAI2R,EAAQC,EAAQ,GAGtD,OAFAzP,EAAO/C,MAAMC,QAAQ8C,GAAQA,EAAO,GAEd,KADtBnC,EAASZ,MAAMC,QAAQW,GAAUA,EAAS,IAC/B1B,OAAqB6D,EACzB,IAAIoO,OAAOvQ,OAAOmC,EAAMnC,EAAQ2R,EAAQC,GAClD,CASD3X,oBAAoB6X,EAAK9R,EAAQ2R,GAE7B,MADmC,iBAAX3R,EACNuQ,OAAOyB,aAAaF,EAAK9R,EAAQ2R,GAAUpB,OAAO0B,cAAcH,EAAK9R,EAC1F,CASD/F,oBAAoB6X,EAAK9R,EAAS,GAAI2R,GAClC3R,EAASA,EAAO9D,cAChByV,EAASA,GAAU1W,OAAOoF,KAAKyR,GAC/B,IAAIhW,EAAQ,KACZ,IAAK,IAAIoW,KAAOP,EAEZ,GADA7V,EAAQgW,EAAII,GACR3B,OAAO4B,YAAYrW,EAAOkE,GAAS,OAAO,EAElD,OAAO,CACV,CAaD/F,qBAAqB6X,EAAK9R,GAEtB,IAAIoS,GAAQ,EACRtW,EAAQ,KAEZ,IAAK,IAAIuW,KAAOrS,EAOZ,GANAlE,EAAQgW,EAAIO,EAAIjQ,MAEZgQ,EADAC,EAAIjQ,KACIgQ,GAAS7B,OAAO4B,YAAYrW,EAAOuW,GAEnCD,GAAS7B,OAAOyB,aAAaF,EAAKO,EAAIvW,QAE7CsW,EAAO,MAGhB,OAAOA,CACV,CAEDnY,mBAAmB6B,EAAOkE,GACtB,OAAIlE,aAAiBF,KACV2U,OAAO+B,UAAUxW,EAAOkE,GACxBlE,aAAiBF,KACjB2U,OAAOgC,YAAYzW,EAAOV,EAAO+L,MAAMnH,EAAOlE,OAAQkE,EAAOwS,KAE5D,GAAK1W,GAAO2W,oBAAoBnO,UAAU,GAAKtE,EAAOlE,OAAO2W,oBAE5E,CAEDxY,iBAAiB+B,EAAKgE,EAAQzC,GAE1B,GAAsB,iBAAXyC,EAAqB,CAC5B,MAAMlE,EAAQ,GAAKkE,EACb0S,EAAQ1W,EAAI2W,mBAAmBpV,GAC/BqV,EAAM5W,EAAI6W,cAChB,OAAOH,EAAMpO,SAASxI,IAAU8W,EAAItO,SAASxI,EAChD,CAED,IAAKkE,EAAOlE,MAAO,OAAO,EAI1B,OAFYkE,EAAOlE,iBAAiBF,KAAO,cAAgBoE,EAAOlE,OAG9D,IAAK,SACD,OAAOyU,OAAOgC,YAAYvW,EAAIwS,UAAWxO,EAAOlE,MAAOkE,EAAOwS,IAClE,IAAK,OACD,OAAOjC,OAAOgC,YAAYvW,EAAIwS,UAAWxO,EAAOlE,MAAM0S,UAAWxO,EAAOwS,IAGhF,OAAOjC,OAAO+B,UAAUtW,EAAK,GAAKgE,EAAOlE,MAAOkE,EAAOzC,OAC1D,CAQDtD,mBAAmB6B,EAAQ,EAAGgI,EAAQ,EAAGgP,EAAW,MAChD,OAAQA,GACJ,IAAK,KAAM,OAAOhP,EAAQhI,EAC1B,IAAK,KAAM,OAAOgI,EAAQhI,EAC1B,IAAK,KAAM,OAAOgI,GAAShI,EAC3B,IAAK,KAAM,OAAOgI,GAAShI,EAE/B,OAAOA,IAAUgI,CACpB,CAQD7J,gBAAgBkI,EAAM4Q,GAClB,OAAoB,IAAhBA,EAAKzU,OAAqB6D,EACvBA,EAAK2O,UAAS,CAAC5P,EAAGyP,IAAMJ,OAAOyC,SAAS9R,EAAGyP,EAAGoC,IACxD,CASD9Y,gBAAgBiH,EAAGyP,EAAGoC,GAElB,MAAM1T,EAAUD,MAAMC,QAAQ6B,GAC9B,IAAI2Q,EAAM,EAaV,OAXAkB,EAAK9R,SAAQ,CAACF,EAAGhE,KACb,IAAKgE,EAAG,OACR,MAAMkS,EAAM7X,EAAOyC,SAASkD,GAAKA,EAAIA,EAAEkS,IACjCC,EAAM9X,EAAOyC,SAASkD,EAAEoS,KAAOpS,EAAEoS,IAAMpW,EACvCmV,EAAM7S,EAAU6T,EAAMnS,EAAEqB,KACxBgR,EAAKlS,EAAEgR,GACPmB,EAAK1C,EAAEuB,GAEbL,EAAMtB,OAAO+C,QAAQF,EAAIC,EAAIJ,EAAKpB,EAAI,IAGnCA,CACV,CAUD5X,eAAemZ,EAAIC,EAAIE,EAAO1B,GAC1B,OAAIzW,EAAOyC,SAASuV,IAAOhY,EAAOyC,SAASwV,GAChCxB,GAAOtB,OAAOiD,WAAWJ,EAAIC,EAAIE,GACjCnY,EAAOoC,SAAS4V,IAAOhY,EAAOoC,SAAS6V,GACvCxB,GAAOtB,OAAOkD,cAAcL,EAAIC,EAAIE,GACpCnY,EAAOsY,OAAON,IAAOhY,EAAOsY,OAAOL,GACnCxB,GAAOtB,OAAOoD,YAAYP,EAAIC,EAAIE,GAClCnY,EAAOwY,OAAOR,IAAOhY,EAAOwY,OAAOP,GACnCxB,GAAOtB,OAAOiD,WAAWpL,OAAOgL,GAAKhL,OAAOiL,GAAKE,GAErD1B,CACV,CASD5X,mBAAmBmZ,EAAIC,EAAIJ,GAGvB,OAFAG,EAAKA,EAAK,EAAI,EACdC,EAAKA,EAAK,EAAI,EACP9C,OAAOiD,WAAWJ,EAAIC,EAAIJ,EACpC,CASDhZ,qBAAqBmZ,EAAIC,EAAIJ,GACzB,MAAMY,GAAMT,GAAM,IAAIrX,WAChB+X,GAAMT,GAAM,IAAItX,WACtB,OAAOkX,EAAM,EAAIa,EAAGC,cAAcF,GAAMA,EAAGE,cAAcD,EAC5D,CASD7Z,kBAAkBmZ,EAAIC,EAAIJ,GACtB,OAAOA,EAAM,EAAII,EAAKD,EAAKA,EAAKC,CACnC,CAUDpZ,oBAAoBmC,EAAKgG,EAAMtG,EAAOkY,GAAa,GAC/C,GAAIA,GAAc5Y,EAAO+D,OAAOrD,GAAQ,OAExC,MAAMmY,EAAM7R,EAAK5F,MAAM,KACvB,GAAmB,IAAfyX,EAAI3V,OACJ,OAAOiS,QAAO2D,EAAoB9X,EAAKgG,EAAMtG,GAGjD,MAAMqY,EAAOF,EAAIpX,MAAM,GAAI,GACrBqV,EAAM+B,EAAIpX,OAAO,GAAG,GAO1B,OALAsX,EAAKlT,SAAQtF,IACJS,EAAIgY,eAAezY,KAAIS,EAAIT,GAAK,IACrCS,EAAMA,EAAIT,EAAE,IAGT4U,QAAO2D,EAAoB9X,EAAK8V,EAAKpW,EAC/C,CAED7B,SAA2BmC,EAAKgG,EAAMtG,GAalC,OAZIM,EAAIgY,eAAehS,IACdhD,MAAMC,QAAQjD,EAAIgG,MACnBhG,EAAIgG,GAAQ,CAAChG,EAAIgG,KAEjBhD,MAAMC,QAAQvD,GACdM,EAAIgG,GAAQhG,EAAIgG,GAAMsI,OAAO5O,GAE7BM,EAAIgG,GAAMqJ,KAAK3P,IAGnBM,EAAIgG,GAAQtG,EAETM,CACV,CASDnC,wBAAwBmC,EAAKgG,EAAMiS,GAAU,GACzC,GAAIjZ,EAAO+D,OAAO/C,GAAM,OACxB,MAAMkY,EAAI,YAEV,IAAI/Y,EAAI6G,EACJrF,EAAI,GAYR,OAdgBuX,EAAEvW,KAAKqE,IAKnB7G,EAAI6G,EAAK/F,QAAQiY,EAAG,IACpBvX,EAAIqF,EAAK/E,MAAMiX,GAAG3K,QAAQtM,MAAM,OAAOsM,QACvC5M,EAAI3B,EAAO+L,MAAMpK,GACjBX,EAAMA,EAAIgY,eAAe7Y,GAAKa,EAAIb,GAAGwB,GAAK,MAE1CX,EADOA,EAAIgY,eAAe7Y,GACpB8Y,EAAUjY,EAAIb,IAAMa,EAAMA,EAAIb,GAE9B,KAEHa,CACV,CASJnC,sBAAsBmC,EAAKgG,GAC1B,OAAOA,EAAOA,EAAK5F,MAAM,KAAKgO,QAAO,CAACtJ,EAAGvF,IAAM4U,OAAOgE,iBAAiBrT,EAAGvF,IAAIS,QAAOyC,CACrF,CAQD5E,uBAAuBmC,EAAKgG,GACrB,YAA4CvD,IAArC0R,OAAOiE,eAAepY,EAAKgG,EACxC,QAGMnH,OAAOC,KAAKqV,QACZlV,WAAWkV,OAASA,MACvB,EClbE,IAAAkE,EAAA,MAAMC,MAEZza,uBAAyB,0WACzBA,mBAAqB,iLACrBA,SAAiB,CAAC,QAAS,SAAU,WAAY,UAEjDA,SAAmB,eAGnBA,aAAe,IAMJ0a,2BACV,OAAOD,MAAME,OAAOjU,SAASgU,cAC7B,CAOD1a,cAAcC,GACb,OAAOA,EAAG2a,YAAYF,cAAgBD,MAAME,OAAO1a,EAAG2a,YAAYF,eAAiBza,CACnF,CAODD,iBAAiBC,GAChB,IAAKwa,MAAM9N,cAAc1M,GAAK,OAAO,EACrC,MAAM4a,EAAM9L,EAASc,qBAAqB5P,GACpC6a,GAAcD,EAAIlL,QAAQ,aAAc,UACxCoL,GAAWF,EAAIlL,QAAQ,UAAW,QAClCqL,EAAUH,EAAI3N,MAAM,WAAa,EACjC+N,EAAOhb,EAAGib,wBAEhB,OADcD,EAAKE,MAAQ,GAAKF,EAAKG,OAAS,GAC/BJ,GAAWF,GAAcC,CACxC,CAUD/a,aAAaqb,EAAO,GAAIC,GAAS,EAAOC,EAAO,aAC9C,IACC,MACMC,GADS,IAAIC,WACAC,gBAAgBL,EAAME,GACzC,OAAOD,EAAUE,GAAKG,MAAMC,mBAAqBJ,GAAKxM,MAAM4M,kBAAqBJ,CACjF,CAAC,MAAOvP,GAER,MADAlM,MAAM8b,MAAM,KAAM5P,GACZA,CACN,CACD,CAQDjM,oBAAoBsK,EAAKb,EAAM,GAAIqS,GAAY,GAE9C,MAAMN,EAAMf,MAAMhV,MAAMgE,GAIlBsS,EAAQ,IAHDtB,OAAMuB,EAAUR,EAAIG,KAAKtN,aACzBoM,OAAMuB,EAAUR,EAAIxM,KAAKX,WAIhC4N,EAAOH,GAA8B,IAAjBC,EAAM1X,OAE1B4B,EAAMwU,MAAMwB,KAAK3R,EAAK2R,EAAO,KAAOF,EAAMrM,SAEhD,KAAOqM,EAAM1X,OAAS,GAAG4B,EAAIiW,YAAYH,EAAMrM,SAE/C,OAAOzJ,CACP,CASDjG,YAAYsK,EAAKwD,GAChB,OAAO2M,MAAM0B,KAAK7R,EAAKwD,GAAUpH,SAASC,cAAc,YACxD,CASD3G,YAAYsK,EAAKwD,GAGhB,OAFAA,EAAOlB,aAAa,QAAS,IAAItC,EAAI3J,MACjC2J,EAAI8R,MAAMtO,EAAOlB,aAAa,OAAQtC,EAAI8R,MACvCtO,CACP,CAED9N,SAAiB+b,GAChB,OAAO5W,MAAMgG,KAAK4Q,GAAS,IAAIhW,QAAO9F,IAAOwa,MAAM4B,OAAOpc,IAC1D,CAODD,qBAAqBC,GACpB,MAAMkI,EAAOhH,EAAOoC,SAAStD,GAAMA,EAAKA,GAAIqc,QAC5C,OAAO7B,OAAM8B,EAAQlS,SAASlC,EAC9B,CAODnI,oBAAoBC,GACnB,OAAOwa,MAAM+B,SAASvc,EAAIwa,OAAM8B,EAAQ1Z,KAAInB,GAAKA,EAAEO,gBACnD,CAODjC,uBAAuBC,GACtB,OAAQA,aAAcwc,mBACF,cAAhBxc,GAAIqc,SACJ7B,MAAMiC,SAASzc,EAAI,MACvB,CASDD,iBAAiBC,EAAIM,GAGpB,KADeA,GAAQN,GACV,OAAO,EAIpB,IAFckB,EAAOoC,SAAShD,GAElB,OAAON,aAAcM,EAEjC,MAAMoc,EAAWzT,eAAeC,IAAI5I,EAAK0B,eACzC,GAAI0a,GAAY1c,aAAc0c,EAAU,OAAO1c,EAE/C,MAAMkX,EAAKsD,MAAMmC,YAAY3c,GAC7B,IAAK,IAAI4c,KAAO1F,EACf,GAAI0F,GAAK7Z,aAAamF,OAAS5H,EAAM,OAAON,EAG7C,OAAIM,EAAKoC,gBAAkB1C,EAAGqc,SAAgBrc,CAG9C,CAMDD,qBAAqBC,GACpB,OAAOA,aAAc6c,eACrB,CAMD9c,yBAAyBC,GACxB,OAAOA,aAAc8c,mBACrB,CAMD/c,qBAAqBC,GACpB,OAAOA,aAAc+I,WACrB,CAMDhJ,oBAAoBC,GACnB,OAAOA,aAAc+c,UACrB,CAMDhd,cAAcC,GACb,OAAOA,aAAcgd,IACrB,CAMDjd,iBAAiBC,GAChB,OAAOA,aAAcid,OACrB,CAMDld,mBAAmBC,GAClB,IAAKA,GAAIkd,UAAW,OAAO,EAC3B,MAAMhG,EAAKsD,MAAMmC,YAAY3c,GAC7B,IAAK,IAAIyB,KAAKyV,EAAI,CACjB,IAAKzV,EAAG,MACR,GAAqB,cAAjBA,GAAGyb,UAA2B,OAAO,CACzC,CACD,OAAO,CACP,CAODnd,iBAAiBC,GAChB,OAAkD,IAA3CA,GAAI8M,aAAa,OAAOkK,QAAQ,MACvC,CAODjX,iBAAiBC,GAChB,OAAOkF,MAAMgG,KAAKlL,GAAImd,YAAc,IAAIrX,QAAOkG,GAAKwO,MAAM4C,YAAYpR,IACtE,CAQDjM,YAAYC,EAAIqd,GAAc,GAC7B,OAAOrd,GAAIsd,WAAWC,IAAIF,EAAc,sBAAwB,UAChE,CAQDtd,YAAYC,EAAIqd,GAAc,GAC7B,OAAOrd,GAAIsd,WAAWE,OAAOH,EAAc,sBAAwB,UACnE,CAQDtd,kBAAkB8N,EAAQ4P,GACzB,MAAMC,EAAalD,MAAM9N,cAAc+Q,IAAUjD,MAAMmD,aAAaF,GAC9DG,EAAOpD,MAAM9N,cAAcmB,IAAW6P,EACtCG,EAAUhQ,IAAW4P,GAAS5P,EAAOiQ,aAAeL,GAAS5P,EAAOkQ,qBAAuBN,EACjG,SAAOG,GAASC,IAAUhQ,EAAOiQ,WAAWE,aAAaP,EAAO5P,EAAOkQ,mBACvE,CAQDhe,mBAAmB8N,EAAQ4P,GAE1B,UADajD,MAAM9N,cAAcmB,IAAW2M,MAAM9N,cAAc+Q,KACjD5P,IAAW4P,IAAQ5P,EAAOoO,YAAYwB,EACrD,CASD1d,sBAAsB8N,EAAQ4P,EAAOQ,GACpC,MAAMC,EAAO1D,MAAM9N,cAAcmB,IAAW2M,MAAM9N,cAAc+Q,GAC1DI,EAAUhQ,IAAW4P,GAAS5P,EAAOiQ,aAAeL,EAC1D,SAAOS,GAASL,IAAUhQ,EAAOsQ,sBAAsBF,EAAWR,EAClE,CAOD1d,qBAAqBC,GACpB,OAAOwa,MAAM4D,OAAOpe,IAAKqe,YAAYre,EACrC,CAWDD,YAAYue,EAAMC,GAAU,EAAOhO,GAAM,EAAOiO,GAAS,GACxD,OAAOD,EAAU/D,MAAMiE,UAAUH,GAAQ9D,MAAMkE,SAASJ,EAAM/N,EAAKiO,EACnE,CAWDze,gBAAiBue,EAAM/N,GAAM,EAAOiO,GAAS,EAAMG,GAAQ,GAC1D,IAAKL,EAAM,OACPK,UAAaL,GACbE,UAAehE,MAAMkE,SAASJ,EAAK3D,WAAYpK,EAAKiO,GAAQ,IAChE,MAAMvH,EAAO1G,EAAM+N,EAAKnB,WAAamB,EAAKlQ,SAC1C,GAAK6I,EACL,IAAK,IAAI0H,KAAS1H,QACVuD,MAAMkE,SAASC,EAAOpO,EAAKiO,GAAQ,EAE3C,CAQDze,cAAcC,GACb,OAAOA,EAAMA,EAAG4e,eAAiB5e,EAAG8d,YAAc9d,EAAGyN,KAAQ,IAC7D,CAQD1N,iBAAkBC,GACjB,IAAIgM,EAAIwO,MAAM4D,OAAOpe,GACrB,KAAOgM,SACAA,EACNA,EAAIwO,MAAM4D,OAAOpS,GAElB,GAAIA,EAAG,aAAaA,CACpB,CAQDjM,mBAAoBC,GACnB,IAAIgM,EAAIhM,EAAG0K,UACX,KAAOsB,SACAA,EACNA,EAAIA,EAAEtB,UAEP,GAAIsB,EAAG,aAAaA,CACpB,CAODjM,oBAAoBC,GACnB,IAAI6U,EAAS7U,GAAI6e,aACjB,GAAIhK,EAAQ,OAAOA,EACnB,MAAMqC,EAAKsD,MAAMiE,UAAUze,GAC3B,IAAK,MAAM8e,KAAK5H,EAEf,GADArC,EAASiK,EAAED,aACPhK,EAAQ,MAEb,OAAOA,CACP,CAOD9U,YAAYC,GAEX,IAAKA,EAAI,OAAO,KAEhB,MAAMkX,EAAKsD,MAAMiE,UAAUze,GAC3B,IAAK,IAAIyB,KAAKyV,EAAI,CACjB,GAAIzV,aAAasd,WAAY,OAAOtd,EACpC,GAAIA,aAAaud,gBAAiB,OAAOvd,CACzC,CAED,OAAO,IACP,CAOD1B,iBAAiBC,GAChB,OAAOwa,MAAM4D,OAAO5D,MAAMyE,KAAKjf,GAC/B,CAODD,uBAAuBue,GACtB,OAAK9D,MAAM9N,cAAc4R,GAClB,IAAIA,EAAKM,cAAcxQ,UAAU4I,QAAQsH,GADT,CAEvC,CAQDve,eAAeC,EAAIU,GAClB,GAAkB,iBAAPV,EAAiB,OAAOwa,MAAM0E,QAAQzY,SAAS0Y,gBAAiBnf,GAC3E,IAAMA,IAAMU,EAAK,OAAO,KACxB,MAAMwW,EAAKsD,MAAM4E,KAAKpf,GAAI,GAC1B,IAAK,IAAI6G,KAAKqQ,EACb,GAAIrQ,EAAEnG,KAAOA,EAAI,OAAOmG,EAEzB,OAAO,IACP,CASD9G,eAAeC,EAAIqf,EAAKC,EAAS,GAChC,GAAkB,iBAAPtf,EAAiB,OAAOwa,MAAM+D,QAAQ9X,SAAS0Y,gBAAiBE,GAC3E,IAAMrf,IAAMqf,EAAM,OAAO,KAEzB,MAAM3H,GADN4H,EAASpe,EAAO+L,MAAMqS,EAAQ,IACP,EACjBpI,EAAKsD,MAAM4E,KAAKpf,GAAI,GAC1B,IAAK,IAAI6G,KAAKqQ,EAAI,CACjB,GAAIsD,MAAM9K,QAAQ7I,EAAGwY,GAAM,OAAOxY,EAClC,GAAI6Q,GAAqB,KAAV4H,EAAa,OAAO,IACnC,CACD,OAAO,IACP,CASDvf,aAAaC,EAAIqf,EAAK9O,GAAM,EAAOiO,GAAS,GAC3C,GAAkB,iBAAPxe,EAAiB,OAAOwa,MAAM5Q,MAAMnD,SAAS0Y,gBAAiBnf,EAAIuQ,EAAKiO,GAClF,IAAMxe,IAAMqf,EAAM,OAAO,KACzB,GAAI7E,MAAM9K,QAAQ1P,EAAIqf,GAAM,OAAO7E,OAAM+E,EAAOvf,GAChD,MAAMkX,EAAKsD,MAAM4E,KAAKpf,GAAI,EAAOuQ,EAAKiO,GACtC,IAAK,IAAI3X,KAAKqQ,EACb,GAAIsD,MAAM9K,QAAQ7I,EAAGwY,GAAM,OAAO7E,OAAM+E,EAAO1Y,GAEhD,OAAO,IACP,CASD9G,gBAAgBC,EAAIqf,EAAK9O,GAAM,EAAOiO,GAAS,GAC9C,GAAkB,iBAAPxe,EAAiB,OAAOwa,MAAM+B,SAAS9V,SAAS0Y,gBAAiBnf,EAAIuQ,EAAKiO,GACrF,MAAMgB,EAAM,GACZ,IAAMxf,IAAMqf,EAAM,OAAOG,EACzB,MAAMtI,EAAKsD,MAAM4E,KAAKpf,GAAI,EAAOuQ,EAAKiO,GACtC,IAAK,IAAI3X,KAAKqQ,EACTsD,MAAM9K,QAAQ7I,EAAGwY,IAAMG,EAAIjO,KAAKiJ,OAAM+E,EAAO1Y,IAElD,OAAO2Y,CACP,CAMDzf,SAAcC,GACb,MAAmB,SAAfA,EAAGqc,QAA2Brc,EAC7Bwa,MAAM9N,cAAc1M,EAAGU,IACrB,IAAIkN,MAAM5N,EAAI,CACpBkJ,IAAK,CAAU2E,EAAQC,EAAM2R,KAC5B,GAAa,YAAT3R,EAAoB,OAAOD,EAC/B,GAAa,OAATC,EAAe,OAAOD,EAAOf,aAAa,MAC9C,MAAM0S,EAAMhV,QAAQtB,IAAI2E,EAAQC,GAChC,OAAO5D,WAAWC,WAAWqV,GAAOA,EAAI1X,KAAK+F,GAAU2R,CACvD,EACDrS,IAAK,CAAUU,EAAQC,EAAMlM,IACrBiM,EAAOC,GAAQlM,IATgB5B,CAYxC,CAQDD,eAAeC,EAAIqf,GAElB,OAAOrf,GAA4B,mBAAfA,EAAG0P,SAA0B1P,EAAG0P,QAAQ2P,EAC5D,CAaDtf,eAAeC,EAAI8B,EAAM,GAAI4d,GAAW,EAAOC,IAC9B3f,aAAc+e,YAAc/e,aAAc+I,aAAe/I,aAAc8c,uBAEnF4C,GAAY1f,GAAI4f,QACnBD,EAAY3f,EAAG4f,QAAQ9d,EAAK,CAAE6d,cAAe3f,EAAG4f,QAAQ9d,GAExD9B,EAAG2G,UAAY7E,aAAe+d,SAAW/d,EAAIiN,KAAKpI,UAAY7E,EAE/D,CAQD/B,eAAeC,EAAI8B,EAAM,IACpB9B,IAAIA,EAAG8f,YAAche,EACzB,CAOD/B,WAAWC,EAAIkC,GAGd,GAFIhB,EAAOoC,SAAStD,KAAKA,EAAKwa,MAAM+B,SAASvc,IACzCwa,MAAM9N,cAAc1M,KAAKA,EAAK,CAACA,MAC7BkF,MAAMC,QAAQnF,IAAOA,EAAGoE,OAAS,GAAI,OAAO,EAClD2b,uBAAsB,KACrB/f,EAAG+G,SAAQmQ,IACVnW,OAAOuM,QAAQpL,GAAK6E,SAAQwG,IAC3B2J,EAAGM,MAAMjK,EAAG,IAAMA,EAAG,EAAE,GACtB,GACD,GAEH,CASDxN,mBAAmBC,EAAI8B,EAAK6V,GAG3B,OAFIzW,EAAOoC,SAAStD,KAAKA,EAAKwa,MAAM+B,SAASvc,IACzCwa,MAAM9N,cAAc1M,KAAKA,EAAK,CAACA,OAC7BkF,MAAMC,QAAQnF,IAAOA,EAAGoE,OAAS,QAClCtC,GAA4B,GAArBA,EAAIC,OAAOqC,UACvBtC,EAAMA,EAAIQ,MAAM,KAAKwD,QAAOrE,GAAKA,GAAKA,EAAEM,OAAOqC,OAAS,IACpDlD,EAAO+D,OAAO0S,GAAa7V,EAAIiF,SAAQtF,IAC1CzB,EAAG+G,SAAQmQ,GAAMA,EAAGoG,UAAUrP,OAAOxM,IAAG,KAEzCzB,EAAG+G,SAAQmQ,IACVS,EAAMT,EAAGoG,UAAUC,IAAIpS,MAAM+L,EAAGoG,UAAWxb,GAAOoV,EAAGoG,UAAUE,OAAOrS,MAAM+L,EAAGoG,UAAWxb,EAAI,KAExF,IACP,CAOD/B,cAAcC,EAAI2X,GACjB,OAAO6C,MAAMwF,YAAYhgB,EAAI,SAAUkB,EAAO+D,OAAO0S,GAAOA,GAAOA,EACnE,CAQD5X,gBAAgBC,EAAI8B,EAAM,IACzB,OAAO9B,GAAIsd,WAAW2C,SAASne,EAC/B,CAOD/B,mBAAmBgL,EAAOsU,EAAM,2BAC/B,MAAMJ,EAAOzE,MAAM0F,OAAOnV,GAC1BgV,uBAAsB,KACrBd,EAAKkB,iBAAiBd,GAAKtY,SAAS/G,GAAOA,EAAG4B,MAAQ,IAAG,GAE1D,CAOD7B,gBAAgBC,GACf,OAAQA,EAAGM,MACV,IAAK,iBACL,IAAK,SACJ,OAAON,EAAG4B,MAAQ5B,EAAGogB,cAAgBpgB,EAAG4B,MACzC,IAAK,kBACJ,OAAOsD,MAAMgG,KAAKlL,EAAGqgB,iBAAiBzd,KAAIiE,GAAKA,EAAEjF,QAClD,IAAK,WACJ,OAAI5B,EAAG2O,aAAa,UAAY3O,EAAG4B,MAC3B5B,EAAGsgB,QAAUtgB,EAAG4B,MAAQ,KAEzB5B,EAAGsgB,QACX,QACC,OAAOtgB,EAAG4B,MAEZ,CAOD7B,eAAeC,GACd,IAAKwa,MAAM9N,cAAc1M,GAAK,OAC9B,IAAI4B,EAAQ4Y,MAAM+F,SAASvgB,GAC3B,GAAI,SAAWA,EAAGM,KAAM,CACvB,MAAMsC,EAAMkM,EAAS0R,WAAWxgB,EAAI,kBAChC4C,IAAKhB,EAAQV,EAAOuf,cAAc7d,EAAIhB,MAAOA,GACjD,CACD,OAAOA,CACP,CAOD7B,iBAAiBC,EAAI8B,GACpB,IAAK0Y,MAAM9N,cAAc1M,GAAK,OAC9B,MAAMiI,EAAO/C,MAAMC,QAAQrD,GAAOA,EAAI,IAAM,GAAKA,EAEjD,GACM,aADE9B,EAAGM,KAELN,EAAG2O,aAAa,SACnB3O,EAAGsgB,QAAUrY,IAASjI,EAAG4B,MAEzB5B,EAAGsgB,QAAkB,GAARrY,OAIdjI,EAAG4B,MAAQV,EAAOoE,UAAU2C,EAE9B,CASDlI,gBAAgBgL,EAAOsU,EAAM,kCAAmCxB,GAAU,GACzE,MAAMoB,EAAOzE,MAAM0F,OAAOnV,GACpB9E,EAAS,CAAA,EAcf,OAbAuU,MAAM+B,SAAS0C,EAAMI,GACnBvZ,QAAO9F,GAAMA,EAAGkI,OAChBpC,QAAO9F,GAA4B,SAAtBA,EAAG+N,QAAQ2S,SACxB5a,QAAO9F,KAAM6d,GAAiB7d,EAAG2gB,kBACjC5Z,SAAQ/G,KACQ,UAAZA,EAAGM,MAGIN,EAAGsgB,UADbjK,OAAOuK,aAAa3a,EAAQjG,EAAGkI,KAAMsS,MAAMqG,QAAQ7gB,GAInD,IAEIiG,CACP,CASDlG,kBAAkBgL,EAAO7I,EAAKmd,EAAM,mCACnCnd,EAAMhB,EAAOgM,OAAOhL,GAEpB,MAAM+c,EAAOzE,MAAM0F,OAAOnV,GACpBkM,EAAOuD,MAAM+B,SAAS0C,EAAMI,GAElC,OADAna,MAAMgG,KAAK+L,GAAMlQ,SAAQ/G,GAAMwa,MAAMsG,mBAAmB9gB,EAAIkC,KACrDA,CACP,CAODnC,0BAA0BC,EAAIkC,GAC7B,IAAKmU,OAAO0K,gBAAgB7e,EAAKlC,GAAIkI,MAAO,OAC5C,MAAMpG,EAAMuU,OAAOiE,eAAepY,EAAKlC,EAAGkI,MAC1B,UAAZlI,EAAGM,KAENka,MAAMwG,UAAUhhB,EAAI8B,GACV9B,EAAG4B,QAAUE,IAAK9B,EAAGsgB,SAAU,EAC1C,CASDvgB,cAAcsK,EAAKsD,GAAY,EAAMsT,GAAQ,GAC5C,GAAI/b,MAAMC,QAAQkF,GAAM,OAAOA,EAAIzH,KAAIiE,GAAK2T,MAAMtN,OAAOrG,EAAG8G,KAC5D,MAAMzL,EAAM,CAAA,EACZ,IAAKsY,MAAM9N,cAAcrC,GAAM,OAAOnI,EAOtC,GALK+e,IAAO/e,EAAI,YAAcmI,EAAIgS,QAAQra,eAC1CE,EAAW,MAAImI,EAAI6W,UAEnBhc,MAAMgG,KAAKb,EAAImD,YAAYzG,SAAQtF,GAAKS,EAAIT,EAAEyG,MAAQzG,EAAEG,QAEpD+L,EAAW,CACd,MAAMS,EAAWlJ,MAAMgG,KAAKb,EAAI+D,UAAUxL,KAAI5C,GAAMwa,MAAMtN,OAAOlN,EAAI2N,EAAWsT,KAC5E7S,EAAShK,OAAS,IAAGlC,EAAIif,MAAQ/S,EACrC,CAED,OAAOlM,CACP,CAQDnC,gBAAgBmC,EAAKkf,EAAM,UAAWC,GAAW,GAChD,OAAOA,EAAW7G,MAAM8G,iBAAiBpf,EAAKkf,GAAO5G,MAAM+G,cAAcrf,EAAKkf,EAC9E,CAQDrhB,qBAAqBmC,EAAKkf,EAAM,WAC/B,IAAKlf,EAAK,OAAO,KAGjB,GADoBhB,EAAOyC,SAASzB,IAAQhB,EAAOoC,SAASpB,GAC3C,OAAOsY,MAAM+G,cAAc,CAAEC,MAAOtf,GAAOkf,GAG5D,GADgBlc,MAAMC,QAAQjD,GACjB,OAAOA,EAAIU,KAAIiE,GAAK2T,MAAM+G,cAAc1a,EAAGua,KAExD,MAAMlZ,EAAOhG,EAAI,aAAekf,EAC1BphB,EAAKyG,SAASC,cAAcwB,GAYlC,OAVAnH,OAAOoF,KAAKjE,GAAK4D,QAAOrE,GAAU,SAALA,GAAwB,KAARA,EAAE,KAC7CsF,SAAQtF,GAAKzB,EAAG2M,aAAalL,EAAGS,EAAIT,MAElCyD,MAAMC,QAAQjD,EAAIif,QACrBjf,EAAIif,MAAMpa,SAAQF,IACjB,MAAM4a,EAAMjH,MAAM+G,cAAc1a,EAAGua,GACnCphB,EAAGic,YAAYwF,EAAI,IAIdzhB,CACP,CAQDD,wBAAwBmC,EAAKkf,EAAM,WAClC,IAAKlf,EAAK,OAAO,KAEjB,GAAIgD,MAAMC,QAAQjD,GAAM,OAAOA,EAAIU,KAAIiE,GAAK2T,MAAM8G,iBAAiBza,KAAIrE,KAAK,IAE5E,MAAM0F,EAAOhG,EAAI,aAAekf,EAC1B5X,EAAM,GAiBZ,OAhBAA,EAAI+H,KAAK,IAAIrJ,MAEbnH,OAAOoF,KAAKjE,GAAK4D,QAAOrE,GAAU,SAALA,GAAwB,KAARA,EAAE,KAC7CsF,SAAQtF,GAAK+H,EAAI+H,KAAK,IAAI9P,MAAMS,EAAIT,UAEtC+H,EAAI+H,KAAK,KAELrM,MAAMC,QAAQjD,EAAIif,QACrBjf,EAAIif,MAAMpa,SAAQF,IACjB,MAAM4a,EAAMjH,MAAM8G,iBAAiBza,EAAGua,GACtC5X,EAAI+H,KAAKkQ,EAAI,IAIfjY,EAAI+H,KAAK,KAAKrJ,MAEPsB,EAAIhH,KAAK,GAChB,CAMDzC,yBAAyBgL,GACxB2W,SAASC,KAAKhf,MAAM,GAAGL,MAAM,KAC3BwD,QAAOrE,GAAKA,EAAE2C,OAAS,IACvB2C,SAAQtF,IACR,MAAMiR,EAAIjR,EAAEa,MAAM,KAClBkY,MAAMoH,SAAS,cAAclP,EAAE,MAAOA,EAAE,GAAI3H,EAAM,GAEpD,CAODhL,cAAcgL,GACb,OAAOA,EAAQA,EAAMxB,MAAQwB,EAAQtE,QACrC,CAOD1G,mBAAmBsK,EAAKgV,EAAM,gCAAiC9O,GAAM,EAAMsR,EAAQ,IAClF,IAAI5K,EAAOuD,MAAM+B,SAASlS,EAAKgV,IAC1B9O,GAAOsR,IAAO5K,EAAOA,EAAKnR,QAAO9F,GAAMkB,EAAO8L,OAAOhN,EAAG+N,QAAQ8T,OACrE5K,EAAKlQ,SAAQ/G,GAAMA,EAAG4M,gBAAgB,aACtC,CAOD7M,oBAAoBsK,EAAKgV,EAAM,gCAAiC9O,GAAM,EAAMsR,EAAQ,IACnFrH,MAAM+B,SAASlS,EAAKgV,GAClBvZ,QAAO9F,KAAMuQ,IAAcvQ,EAAG8hB,WAC9B/a,SAAQ/G,IACRA,EAAG2M,aAAa,WAAY,IACxBkV,IAAO7hB,EAAG+N,QAAQ8T,IAAS,EAAI,GAErC,CAQD9hB,gBAAgBsf,EAAKvd,EAAKuI,GACdmQ,MAAM+B,SAASlS,EAAKgV,GAC5BtY,SAAQmQ,GAAMsD,MAAMwG,UAAU9J,EAAIpV,IACrC,CAOD/B,sBAAsBC,GACrB,MAAMof,EAAO3Y,SAASsb,iBAAiB/hB,GAAMyG,SAAUub,WAAWC,UAAW,MAAM,GAC7Ejb,EAAI,GACV,IAAI3F,EACJ,KAAOA,EAAI+d,EAAK8C,YAAYlb,EAAEuK,KAAKlQ,GACnC,OAAO2F,CACP,CAMDjH,iBAAiBkf,GAChB,MAAMkD,EAAK3H,MAAM4H,eAAenD,GAAQxY,UAAUX,QAAOuc,GAAmC,IAA9BA,EAAEC,UAAUvgB,OAAOqC,SACjF+d,EAAGrc,QAAO9F,GAAMA,EAAGuiB,uBAAuBvF,OAAMjW,SAAQ/G,GAAMA,EAAGwd,WACjE2E,EAAGpb,SAAQsb,GAAKA,EAAEG,UAAYH,EAAEC,UAAU5e,WAAW,aAAc,MAAMA,WAAW8W,OAAMiI,EAAW,KACrG,CAYD1iB,gBAAgBsK,EAAKgS,EAASqG,EAAWC,GAAU,GAClD,GAAItY,EAAIgS,UAAYA,EAAS,CAC5B,GAAIsG,EAAS,OAAO,EACpB,MAAM,IAAI7hB,MAAM,mBAAmBuJ,EAAIgS,eAAehS,EAAI3J,gCAAgC2b,IAC1F,CAED,GADW7B,MAAMoI,UAAU1d,MAAMgG,KAAKb,EAAI8S,YAAauF,GAC/C,OAAO,EACf,GAAIC,EAAS,OAAO,EACpB,MAAM1iB,EAAMua,MAAMqI,kBAAkBxY,EAAKqY,GACzC,MAAM,IAAI5hB,MAAMb,EAChB,CASDF,iBAAiBC,EAAI0iB,GACpB,GAAIxd,MAAMC,QAAQnF,GAAK,OAAkE,IAA3DA,EAAG8F,QAAO9F,GAAMwa,MAAMoI,UAAU5iB,EAAI0iB,KAAYte,OAC9E,MAAM0e,IAAiB9iB,aAAcgd,MAAQhd,aAAcid,SACrD8F,GAAYL,EAAUtY,SAASpK,EAAGqc,SACxC,OAAOyG,GAAgBC,CACvB,CAEDhjB,yBAAyBsK,EAAKqY,GAC7B,MAAMzL,EAAO,IAAIyL,EAAUlgB,KAAK,WAChC,MAAO,GAAG6H,EAAIgS,eAAehS,EAAI3J,qCAAqCuW,IACtE,CAUDlX,uBAAuBsK,EAAKzG,GAC3B,IAAKyG,GAAKsQ,sBAAsBoE,WAAY,OAAO,EACnD,IAAIpH,GAAM,EACV,IACC,MAAM6H,QAAYwD,MAAMpf,GACxB,IAAK4b,EAAIyD,GAAI,OACb,MAAMrI,QAAY4E,EAAIjZ,OAChB2c,EAAQ,IAAIC,cAClBD,EAAME,YAAYxI,GAClBvQ,EAAIsQ,WAAW0I,mBAAqB,CAACH,EACrC,CAAC,MAAOlX,GACRlM,MAAM8b,MAAM,KAAM5P,GAClB2L,GAAM,CACN,CACD,OAAOA,CACP,QAGA5W,OAAOC,KAAKwZ,OACZrZ,WAAWqZ,MAAQA,KACnB,GCn/BK,MAAM8I,SAEZvjB,SAAc,EACdA,UAAkB,EAClBA,SAAgB,IAAIwjB,IAEpBxjB,UAAiB,EACjBA,SAAqB,EAEjByjB,iBACH,OAAOF,UAASG,CAChB,CAEGD,eAAW1hB,GACdwhB,UAASG,EAAWviB,EAAO8L,OAAOlL,GAAK,EACvC,CAKD/B,iBACCujB,SAASI,OAAOviB,WAAY,KAAM,cAAemiB,UAASK,GAC1DL,SAASI,OAAOviB,WAAWsF,SAAU,KAAM,UAAW6c,UAASM,EAC/D,CAED7jB,SAAkB8jB,IACbP,UAASG,GAAaI,EAAMC,UAAUR,SAASS,QAAQF,EAC3D,CAED9jB,SAAkB8jB,GACjB,MAAMG,EAAOH,EAAMG,KACnB,MAAY,OAARA,MAEOH,EAAMI,UAAWJ,EAAMC,UAAoB,QAARE,SAAvC,EAGP,CAWDjkB,0BAA0B8N,EAAQ3F,EAAO,SAAUgc,EAAU1c,EAAU,IAAKuc,GAAU,GACrF,IAAKT,UAASa,EACb,UACOb,SAASc,KAAKjjB,WAAW2F,OAAQ,OAAQU,EAASuc,GACxDT,UAASa,GAAU,CACnB,CAAC,MAAOnY,GAER,OAGI9B,EAAWma,aAAaH,GAC9BZ,SAASgB,cAAczW,EAAQ3F,EAC/B,CAYDnI,YAAYsK,EAAKnC,EAAO,GAAIV,EAAU,EAAGuc,GAAU,GAClD,GAAI7iB,EAAOwD,cAAcwD,GAAO,MAAM,IAAIpH,MAAM,oBAChD,IAAKI,EAAOyC,SAAS6D,GAAU,MAAM,IAAI1G,MAAM,0BAC/C,OAAI0G,EAAU,EAAU8b,SAASiB,KAAKla,EAAK,KAAMnC,EAAM,KAAMV,GACtD,IAAIC,SAAQC,IAClB4b,SAASiB,KAAKla,EAAK,KAAMnC,GAAM8D,IAC1B+X,GAAST,SAASS,QAAQ/X,GAC9BtE,EAAQsE,EAAE,GACRxE,EAAQ,GAEZ,CAUDzH,gCAAgCmkB,EAAUM,GAAU,GAEnD,GAAIA,EAAS,CACZ,GAAwB,mBAAbN,EAAyB,OACpC,GAAIZ,UAASmB,EAAc,EAAG,OAAOva,EAAWma,aAAaH,GAC7DZ,UAASmB,GACT,CAED,OAAO,IAAIhd,SAAQ,CAACqE,EAAQnE,KAC3BoY,uBAAsBnU,UACrB,IACC,MAAM/E,QAAUqD,EAAWma,aAAaH,GACxCpY,EAAOjF,EACP,CAAC,MAAOmF,GACRrE,EAAOqE,EACZ,CAAc,QACLwY,GAAWlB,UAASmB,EAAc,GAAGnB,UAASmB,GAClD,IACA,GAEH,CAWD1kB,cAAcsK,EAAKgV,EAAKwE,EAAOK,EAAUxW,GAAM,GAC9C,OAAK2R,GAAOhV,EAAYA,EAAItC,iBAAiB8b,EAAOK,EAAUxW,GACvD8M,EAAM+B,SAASlS,EAAKgV,GAAKzc,KAAI5C,GAAMA,EAAG+H,iBAAiB8b,EAAOK,EAAUxW,IAC/E,CAUD3N,gBAAgBsK,EAAKgV,EAAKwE,EAAOK,GAChC,OAAK7E,GAAOhV,EAAYA,EAAIqa,oBAAoBb,EAAOK,GAChD1J,EAAM+B,SAASlS,EAAKgV,GAAKzc,KAAI5C,GAAMA,EAAG0kB,oBAAoBb,EAAOK,IACxE,CAEDnkB,UAAYujB,SAASI,OACrB3jB,WAAaujB,SAASqB,SAWtB5kB,YAAYsK,EAAKgV,EAAKwE,EAAOK,EAAU1c,EAAU,GAChD,MAAMF,EAASgc,UAASsB,EAAUpd,GAClC,OAAIF,GAAUA,EAAOud,SACb,IAAIpd,SAAQ,CAACC,EAASC,KAC5B2b,SAASI,OAAOrZ,EAAKgV,EAAKwE,EAAOK,GAAYxc,EAAS,CAAE6c,MAAM,EAAMjd,OAAQA,IAC5EA,EAAOS,iBAAiB,QAASJ,EAAO,IAGnC2b,SAASI,OAAOrZ,EAAKgV,EAAKwE,EAAOK,EAAU,CAAEK,MAAM,EAAMjd,OAAQA,GACxE,CAODvH,eAAeiM,EAAG8Y,GAAO,GACpB5a,EAAW6a,YAAY/Y,EAAG,mBAAmBA,EAAEgZ,iBAC/C9a,EAAW6a,YAAY/Y,EAAG,oBAAoBA,EAAEiZ,kBAChDH,GAAQ5a,EAAW6a,YAAY/Y,EAAG,6BAA6BA,EAAEkZ,0BACrE,CAcDnlB,YAAYolB,EAAS1e,SAAUyB,EAAMhG,EAAM,GAAIkjB,GAAU,EAAOC,GAAW,EAAOC,GAAa,GAC9F,MACMzB,EAAQ,IAAI0B,YAAYrd,EADlB,CAAEsd,OAAQtjB,EAAKkjB,QAASA,EAASC,SAAUA,EAAUC,WAAYA,IAE7E,OAAOH,GAAQM,cAAc5B,EAC7B,CAQD9jB,eAAeO,EAAMoN,GACpB,IAAIgY,EAAM,KACV,OAAQplB,GACP,IAAK,OACL,IAAK,MACL,IAAK,QACJolB,EAAM,IAAIC,eAAerlB,EAAMoN,GAC/B,MACD,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACJgY,EAAM,IAAIE,WAAWtlB,EAAMoN,GAC3B,MACD,IAAK,QACL,IAAK,cACJgY,EAAM,IAAIG,WAAWvlB,EAAMoN,GAC3B,MACD,IAAK,UACL,IAAK,QACL,IAAK,WACJgY,EAAM,IAAII,cAAcxlB,EAAMoN,GAC9B,MACD,IAAK,WACL,IAAK,YACL,IAAK,aACL,IAAK,aACL,IAAK,YACL,IAAK,WACL,IAAK,YACL,IAAK,UACJgY,EAAM,IAAIK,WAAWzlB,EAAMoN,GAC3B,MACD,IAAK,SACJgY,EAAM,IAAIM,YAAY1lB,EAAMoN,GAC5B,MACD,IAAK,aACL,IAAK,WACL,IAAK,YACL,IAAK,cACJgY,EAAM,IAAIO,WAAW3lB,EAAMoN,GAC3B,MACD,IAAK,QACJgY,EAAM,IAAIQ,WAAW5lB,EAAMoN,GAC3B,MACD,IAAK,cACL,IAAK,eACL,IAAK,cACL,IAAK,cACL,IAAK,YACL,IAAK,gBACL,IAAK,aACL,IAAK,eACL,IAAK,mBACL,IAAK,oBACL,IAAK,qBACJgY,EAAM,IAAIS,aAAa7lB,EAAMoN,GAC7B,MACD,QACCgY,EAAM,IAAIH,YAAYjlB,EAAMoN,GAE9B,OAAOgY,CACP,CAOD3lB,6BAA6BiM,GAC5B,OAAOA,aAAa+Z,YAAc/Z,aAAama,YAC/C,CAaDpmB,qBAAqBolB,EAAS1e,SAAUyB,EAAMhG,EAAM,GAAIkjB,GAAU,EAAOC,GAAW,EAAOC,GAAa,GACvG,OAAOvF,uBAAsB,KAC5BuD,SAAS8C,KAAKjB,EAAQjd,EAAMhG,EAAKkjB,EAASC,EAAUC,EAAW,GAEhE,CAcDvlB,mBAAmByH,EAAU,EAAG2d,EAAS1e,SAAUyB,EAAMhG,EAAM,GAAIkjB,GAAU,EAAOC,GAAW,EAAOC,GAAa,GAClH,OAAOzd,YAAW,IAAMyb,SAAS8C,KAAKjB,EAAQjd,EAAMhG,EAAKkjB,EAASC,EAAUC,IAAa9d,EACzF,CAYDzH,cAAcsK,EAAKrK,EAAIkI,EAAO,GAAIvH,EAAI4jB,GAAO,EAAO8B,GAAU,GAC7D,IAAKrmB,EAAI,OAAO,EAChB,KAAM8G,kBAAkBwf,QAAUtmB,EAAGumB,aAAc,OAAO,EAC1D,IAAKrc,EAAWC,WAAWxJ,GAAK,OAAO,EACvC,IAAKuJ,EAAW6a,YAAY/kB,EAAI,oBAAqB,OAAO,EAC5D,MAAMmP,EAAKjP,KACLgC,EAAMiN,GAAGqX,EAAUnc,EAAKrK,EAAIkI,EAAMvH,GAClC8lB,EAAQtX,GAAGuX,EAAerc,GAehC,OAdY8E,GAAGwX,EAAUF,EAAOvkB,EAAI8V,KAChC7K,IAAIjL,EAAI0kB,MAAO1kB,GACnBA,EAAImkB,QAAUA,EACV9B,IACHriB,EAAIqiB,KAAQvY,IACX,IACC9J,EAAIvB,GAAGqL,EACZ,CAAc,QACTmD,EAAGqO,OAAOtb,EAAImI,IAAKnI,EAAIlC,GAAIkC,EAAIgG,KAAMhG,EAAIqiB,KACzC,GAEFxjB,OAAO8lB,eAAe3kB,EAAIqiB,KAAM,OAAQ,CAAE3iB,MAAOjB,EAAGmmB,KAAMC,UAAU,KAErE/mB,EAAG+H,iBAAiBG,EAAMqc,EAAOriB,EAAIqiB,KAAOriB,EAAIvB,GAAI,CAAE4jB,KAAMA,EAAM8B,QAASA,KACpE,CACP,CASDtmB,cAAcsK,EAAKrK,EAAIkI,EAAO,GAAIvH,GACjC,MAAMwO,EAAKjP,KACLgC,EAAMiN,GAAGqX,EAAUnc,EAAKrK,EAAIkI,EAAMvH,GAClC8lB,EAAQtX,GAAGuX,EAAerc,GAC1BzH,EAAMuM,GAAGwX,EAAUF,EAAOvkB,EAAI8V,KAC9Bb,EAAMvU,EAAIsG,IAAIhH,EAAI0kB,OACxB,GAAIzP,EACHvU,EAAIokB,OAAO7P,EAAIyP,OACfzX,GAAG8X,EAAgB9P,QACb,GAAIjV,EAAI0kB,QAAU1kB,EAAI8V,IAC5B,IAAK,IAAI1E,KAAK1Q,EAAIyD,SACjBzD,EAAIokB,OAAO1T,EAAEsT,OACbzX,GAAG8X,EAAgB3T,GAGJ,IAAb1Q,EAAIuS,MAAYsR,EAAMO,OAAO9kB,EAAI8V,KAClB,IAAfyO,EAAMtR,MAAYhG,GAAG+X,EAAOF,OAAO3c,EACvC,CAMDtK,yBAAyBsK,GACxB,MAAM8E,EAAKjP,KACL0C,EAAMuM,GAAGgY,EAAkB9c,GACjC,IAAKzH,EAAK,OAEV,MAAMsU,EAAKtU,EAAIyD,SACf,IAAK,IAAIiN,KAAK4D,EAAI,CACjB,IAAK,IAAIrQ,KAAKyM,EAAEjN,SACf8I,GAAG8X,EAAgBpgB,GAEpByM,EAAE8T,OACF,CACDxkB,EAAIwkB,OACJ,CASDrnB,SAAiBsK,EAAKrK,EAAIkI,EAAO,GAAIvH,EAAK,IACzC,IAAKX,EAAI,OAAO,EAChB,MACMqnB,EADKnnB,MACKonB,EAActnB,GACxBunB,EAFKrnB,MAEKsnB,EAAe7mB,GAG/B,MAAO,CAAE0J,IAAKA,EAAK1J,GAAIA,EAAIX,GAAIA,EAAIkI,KAAMA,EAAM8P,IAFnC/L,KAAKwb,SAAS,GAAGJ,IAAOnf,KAEqB0e,MAD3C3a,KAAKwb,SAAS,GAAGJ,IAAOnf,IAAOqf,GAAQ,MAErD,CAQDxnB,SAAiB0mB,EAAOzO,GAEvB,IAAIpV,EAAM6jB,EAAMvd,IAAI8O,GAKpB,OAJKpV,IACJA,EAAM,IAAI2gB,IACVkD,EAAMtZ,IAAI6K,EAAKpV,IAETA,CACP,CAED7C,SAAsBY,GACrB,OAAKuJ,EAAWC,WAAWxJ,IACtBA,EAAGmmB,MAAM/lB,OAAO8lB,eAAelmB,EAAI,OAAQ,CAAEiB,MAAOqK,KAAKE,OAAQ4a,UAAU,IACzEpmB,EAAGmmB,MAF6B,IAGvC,CAED/mB,SAAqBC,GACpB,IAAIqnB,EAAOrnB,EAAG6K,OAAO6c,IAAI,gBAKzB,OAJKL,IACJA,EAAOpb,KAAKvL,GACZV,EAAG6K,OAAO6c,IAAI,gBAAkBL,GAE1BA,CACP,CAODtnB,SAAsBsK,GAErB,OADWnK,MACDymB,EADCzmB,MACYgnB,EAAQ7c,EAC/B,CAEDtK,SAAyBsK,GACxB,MACMzH,EADK1C,MACIgnB,EAAOhe,IAAImB,GAC1B,GAAKzH,EAEL,OAJW1C,MAGRgnB,EAAOF,OAAO3c,GACVzH,CACP,CAED7C,SAAuB8G,GACtBA,EAAE7G,GAAG0kB,oBAAoB7d,EAAEqB,KAAMrB,EAAE0d,KAAO1d,EAAE0d,KAAO1d,EAAElG,GAAI,CAAE0lB,QAASxf,EAAEwf,UACtExf,EAAE7G,GAAK,KACP6G,EAAElG,GAAK,KACPkG,EAAE0d,KAAO,IACT,CAMDxkB,SAAiByH,EAAU,GAC1B,OAAItG,EAAOyC,SAAS6D,IAAYA,EAAU,IACzCA,EAAUD,YAAYC,QAAQA,IACtBqd,UAAW,EACZrd,GAEJA,aAAmBD,YAAoBC,OAA3C,CAEA,CAODzH,qBAAqBgL,EAAOzK,GAC3ByK,EAAM+E,GAAG,UAAUlE,MAAOI,IACzB,MAAMmD,EAAKpE,EACL9C,EAAO+D,EAAEwZ,OACTmC,EAASzmB,EAAOoC,SAAS2E,GAAQA,EAAOA,EAAK0f,QAAU1f,EAAKA,MAAM0f,aAClErE,SAASsE,SAASzY,EAAIwY,EAAQrnB,EAAM0L,EAAE,GAE7C,CAUDjM,sBAAsBgL,EAAO4c,EAAQE,EAAQnC,GAE5C,MAAMxB,EAAWZ,SAASwE,WAAW/c,EAAO4c,EAAQE,GACpD,IAAK3D,EAAU,OAEfZ,SAASS,QAAQ2B,GACjB,IAAI/N,GAAM,EACV,IAEEA,EADGzN,EAAWqB,gBAAgB2Y,SAClBA,EAASwB,GAEfxB,EAASwB,EAEhB,CAAC,MAAO1Z,GAER,GADA2L,EAAM3L,GACD9B,EAAWC,WAAWY,EAAMgd,SAAU,MAAM/b,EACjDjB,EAAMgd,QAAQ/b,EACd,CACD,OAAO2L,CACP,CASD5X,kBAAkBgL,EAAO4c,EAAS,GAAIE,EAAS,IAC9C,IAAIlQ,GAAM,EACV,IAAKgQ,EAAQ,OAAOhQ,EACpB,MAAMxI,EAAKpE,EACX4c,EAASzmB,EAAOmO,eAAenO,EAAO4B,WAAW6kB,IAEjD,MAAMzf,EAAO,KADb2f,EAAS3mB,EAAOmO,eAAenO,EAAO4B,WAAW+kB,MACtBF,IACvBxmB,WAAW6mB,eAAeloB,MAAM4F,KAAKqF,EAAO,YAAY7C,KAC5D,MAAMvH,EAAKwO,EAAGjH,GAGd,OAFAyP,EAAMzN,EAAWC,WAAWxJ,GAC5BgX,EAAMA,IAAQzN,EAAWoB,iBAAiB3K,GACnCgX,EAAMxI,EAAGjH,GAAMJ,KAAKqH,GAAM,IACjC,CAEDpP,WACCiI,aAAasb,UAAS2E,GACtB3E,UAAS2E,EAAOpgB,YAAW+D,gBACpB0X,SAAS4E,qBACf5E,SAAS8C,KAAKtf,OAAQ,UAAU,GAC9B,IACH,CAOD/G,uBACC,MAAMoP,EAAKmU,SACLjZ,EAAM5D,SAAS0Y,gBACfjd,EAAMiN,GAAGqX,EAAUnc,EAAKvD,OAAQ,SAAUqI,GAAGgZ,GAC7C1B,EAAQtX,GAAGuX,EAAerc,GAC1BzE,EAAM6gB,EAAMvd,IAAIhH,EAAI8V,MAAM9O,IAAIhH,EAAI0kB,OACnChhB,GAAKuJ,EAAGiZ,OAAO/d,EAAKvD,OAAQ,SAAUqI,GAAGgZ,EAC9C,QAIApnB,OAAO8H,OAAOya,UACdniB,WAAWmiB,SAAWA,QACtB,QCrjBK,MAAM+E,0BAA0BC,gBAEnC1gB,GAAO,EAEP7E,YAAYyE,EAAU,GAElB,GADA+gB,SACKrnB,EAAOyC,SAAS6D,GAAU,MAAM,IAAI1G,MAAM,oCAC/C,MAAMqO,EAAKjP,KACPsH,IAAS2H,GAAGvH,EAAOC,WAAWsH,EAAGqZ,MAAM1gB,KAAKqH,GAAK3H,IACrD2H,EAAG7H,OAAOS,iBAAiB,SAAS,IAAM0gB,cAActZ,GAAGvH,IAC9D,CAEDwc,KAAK5c,EAAU,GACX,OAAO8b,SAASc,KAAKjV,GAAG7H,OAAQ,QAASE,EAC5C,GCVE,MAAMkhB,sBAAsBC,iBAE/B5oB,SAAqB,IAAIwjB,IACzBxjB,SAAqB,IAAIwjB,IAQzBqF,QAAQ5oB,EAAI0N,GACR,MAAMyJ,EAAMzJ,GAAO,CAAEmb,WAAW,EAAMC,SAAS,GAC/C,OAAOP,MAAMK,QAAQ5oB,EAAImX,EAC5B,CAQDpX,cAAcC,EAAI0N,GACd,MAAMqb,EAAW,IAAIL,cAAcA,eAAcM,GAEjD,OADAD,EAASH,QAAQ5oB,EAAI0N,GACdqb,CACV,CAODhpB,SAAkBkpB,GAAY,GAC1B,OAAOA,EAAYP,eAAcQ,EAAcR,eAAcS,CAChE,CAKUC,eACP,OAAOV,eAAcW,GAAkBX,eAAcY,CACxD,CAEUD,eACP,OAAOX,eAAcS,EAAYhU,KAAO,CAC3C,CAEUmU,eACP,OAAOZ,eAAcQ,EAAY/T,KAAO,CAC3C,CAMDpV,SAAkBwpB,GACTb,eAAcU,GACnBG,EAAUxiB,SAASyiB,IACXd,eAAcW,GAAgBG,EAASC,WAAW1iB,SAAQ/G,GAAM0oB,eAActJ,EAAMpf,EAAI0oB,eAAcS,KACtGT,eAAcY,GAAgBE,EAASE,aAAa3iB,SAAQ/G,GAAM0oB,eAActJ,EAAMpf,EAAI0oB,eAAcQ,IAAa,GAEhI,CAQDnpB,SAAa4pB,EAAQC,GACjB,OAAqB,IAAjBA,EAAQzU,OACZuT,eAAcljB,EAAOmkB,EAAQC,GAC7BD,EAAOxM,WAAWpW,SAAQ/G,GAAM0oB,eAActJ,EAAMpf,EAAI4pB,MACjD,EACV,CAQD7pB,SAAcC,EAAI4pB,GACdA,EAAQ7iB,SAAQ,CAACtF,EAAGyS,KAChB,IACQA,EAAElU,IAAKyB,EAAEzB,EAChB,CAAC,MAAOgM,GACLlM,MAAM8b,MAAM,KAAM5P,EACrB,IAER,CAWDjM,SAAaC,EAAI8F,EAAQoe,GACrB,GAAIlkB,aAAc+I,aAAe,EAAO,OAAO,EAC/C,MAAMvI,EAAM,IAAI+iB,IAEhB,OADA/iB,EAAI2M,IAAIrH,EAAQoe,GACTwE,eAActJ,EAAMpf,EAAIQ,EAClC,CAODT,SAAmBY,GACf,MAAqB,mBAAPA,CACjB,CAQDZ,SAAoB+F,EAAQoe,GACxB,OAAOwE,eAAcve,EAAYrE,IAAW4iB,eAAcve,EAAY+Z,EACzE,CAWDnkB,sBAAsB+F,EAAQoe,EAAU+E,GAAY,EAAOpb,GAEvD,QAAK6a,eAAcmB,EAAa/jB,EAAQoe,KAExCwE,eAAcoB,EAAWb,GAAW9b,IAAIrH,EAAQoe,GAG3C+E,GAAWP,eAAcqB,EAAMlc,GAAUpH,SAASsI,KAAMjJ,EAAQoe,IAE9D,EACV,CAUDnkB,wBAAwBY,EAAIsoB,GAAY,GACpC,QAAOP,eAAcve,EAAYxJ,IAAM+nB,eAAcoB,EAAWb,GAAWjC,OAAOrmB,EACrF,QAMGI,OAAO8H,OAAO6f,eACdvnB,WAAWunB,cAAgBA,cAC3BA,cAAcsB,OAAOvjB,SAAS0Y,gBACjC,EChLE,MAAM8K,uBAAuB9G,cAMhCpgB,YAAYrC,EAAK,WACb6nB,QACAroB,KAAKQ,GAAKA,GAAMuL,KAAKvL,EACxB,CAMJwpB,WAAWxpB,EAAK,IACT,MAAMyO,EAAKjP,KACjBgF,MAAMgG,KAAKiE,EAAGkB,UACZzN,KAAI,CAACnB,EAAGoB,IAAMpB,EAAEiP,eAAiB,IAAIhQ,IAAOmC,GAAK,IACjDiD,QAAOrE,GAAKA,GAAK,IACjBsF,SAAQtF,GAAK0N,EAAG+a,WAAWzoB,IAC7B,CAOE0oB,QAAQzpB,EAAK,IACT,OAAOwE,MAAMgG,KAAKhL,KAAKmQ,UAAUvK,QAAOrE,GAAKA,EAAEiP,eAAiB,IAAIhQ,MAAM6U,KAC7E,CAOD6U,QAAQ1pB,EAAI8W,EAAQ,GAAI6S,GAAO,GAE3B,MAAMlb,EAAKjP,KAEX,IAAKQ,EAAI,OAEf,IAAI2W,EAAOlI,EAAGgb,QAAQzpB,GACtB,IAAK2W,EAEJ,OADAlI,EAAGmb,WAAW,IAAI5pB,QACXyO,EAAGib,QAAQ1pB,EAAI8W,EAAO6S,GAGxB,IAAK7S,EAAO,OAAOH,EAEnB,IAAIpP,EAAO,GAeX,OAbIA,EADiB,iBAAVuP,EACAA,EAAM9T,WAAW,KAAM,IAAIpB,MAAM,KAAKM,KAAInB,GAAKA,EAAEM,OAAOO,MAAM,OAAMwD,QAAOrE,GAAkB,IAAbA,EAAE2C,SAElFrD,OAAOuM,QAAQkK,GAGtB6S,EACApiB,EAAKlB,SAAQwG,GAAM4B,GAAGob,GAAYlT,EAAM9J,EAAG,GAAIA,EAAG,MAElDwS,uBAAsB,KAClB9X,EAAKlB,SAAQwG,GAAM4B,GAAGob,GAAYlT,EAAM9J,EAAG,GAAIA,EAAG,KAAI,IAIvD8J,CACV,CAEDkT,IAAYlT,EAAMvJ,EAAO,GAAI0J,EAAQ,IAEjC,MAAMgT,GADNhT,GAASA,GAAS,IAAI3V,YACIuI,SAAS,cACnCoN,EAAQA,EAAMrV,QAAQ,aAAc,IACpC2L,EAAOA,EAAK/L,OACZsV,EAAKG,MAAMiT,YAAY3c,EAAM0J,EAAOgT,EAAc,YAAc,GACnE,CAQJzqB,yBAAyB2qB,GAExB,MAAMzL,EAAOzE,EAAMyE,KAAKyL,GACZhqB,EAAKgqB,EAAO3c,QAAQmV,OAAS,UAEzC,OAAO+G,eAAeU,sBAAsB1L,EAAMve,EAClD,CAQEX,6BAA6Bkf,EAAMve,GACrC,OAAOwE,MAAMgG,KAAK+T,GAAMoE,oBAAoBvd,QAAO9F,GAAMA,EAAGU,KAAOA,IAAI6U,KACpE,CAOJxV,mBAAmB2qB,GAClB,MAAMlT,EAAQyS,eAAeW,kBAAkBF,GAC/C,OAAOlT,GAAO2S,QAAQO,EAAO3c,QAAQ8c,QACrC,CAQE9qB,uBAAuBkf,EAAMve,GACzB,MAAM8W,EAAQyS,eAAeU,sBAAsB1L,EAAM,WACzD,OAAOzH,GAAO2S,QAAQzpB,EACzB,CAOJX,oBAAoB2qB,GACnB,MAAMrT,EAAO4S,eAAea,YAAYJ,GACxC,OAAOrT,GAAMG,KACb,CAODzX,wBAAwBkf,EAAMve,GAC7B,MAAM2W,EAAO4S,eAAec,gBAAgB9L,EAAMve,GAClD,OAAO2W,GAAMG,KACb,CASDzX,yBAAyB2qB,EAAQhd,GAC1BqS,uBAAsB,KAClB,MAAMvI,EAAQyS,eAAee,aAAaN,GAC1C,OAAO3pB,OAAOkqB,OAAOzT,EAAO9J,EAAI,GAE1C,CASD3N,6BAA6Bkf,EAAMve,EAAIgN,GAChCqS,uBAAsB,KAClB,MAAMvI,EAAQyS,eAAeiB,iBAAiBjM,EAAMve,GACpD,OAAOK,OAAOkqB,OAAOzT,EAAO9J,EAAI,GAE1C,EChKK,MAAMyd,cAEZprB,UAAgB,IAAIwjB,IAOpBxjB,cAAcW,GACb,MAAMwiB,EAAQ,IAAI+G,eAAevpB,GAEjC,OADAR,MAAKkrB,GAAOje,IAAIzM,EAAIwiB,GACbA,CACP,CAQDnjB,WAAWW,EAAI8W,GAEd,MAAMrI,EAAKjP,KAMX,GAJIsX,aAAiB2L,eACpBhU,GAAGic,GAAOje,IAAIzM,EAAI8W,GAGfA,GAA0B,iBAAVA,EAAoB,CACzB2T,cAAcnB,OAAOtpB,GAC7B0iB,YAAY5L,EAClB,CAED,OAAOrI,EAAGjG,IAAIxI,EAEd,CAODX,cAAcW,GACb,OAAOR,MAAKkrB,GAAOpE,OAAOtmB,EAC1B,CAODX,WAAWW,GACV,OAAOR,MAAKkrB,GAAOliB,IAAIxI,EACvB,CAMU2qB,qBAEV,MACM3qB,EAAK,aAEX,IAAIwiB,EAHOiI,cAGIjiB,IAAIxI,GAMnB,OALKwiB,IACJA,EAAQiI,cAAcnB,OAAOtpB,GAC7B+F,SAAS4c,mBAAqB8H,cAAcG,QAGtCpI,CACP,CAODnjB,eAAeW,EAAK,IACnB,OAAOyqB,cAAcE,QAAQlB,QAAQzpB,EACrC,CAODX,eAAeW,EAAK,GAAI8W,EAAQ,GAAI6S,GAAO,GAC1C,OAAOc,cAAcE,QAAQjB,QAAQ1pB,EAAI8W,EAAO6S,EAChD,CAMDtqB,kBAAkBW,EAAK,IACtByqB,cAAcE,QAAQnB,WAAWxpB,EACjC,CAMU4qB,oBACV,OAAOpmB,MAAMgG,KAAK,IAAIqY,IAAI,IAAI4H,eAAcC,IAAQvS,MAAK,CAAC7R,EAAGyP,IAAM5G,OAAO7I,EAAE,IAAI6S,cAAcpD,EAAE,OAAMpQ,SACtG,CAKDtG,aAAa6a,EAAM,GAAI+G,EAAO,GAC7B,GAAK/G,EACL,IACC+G,EAAOA,GAAQ1V,KAAKwb,SAAS7M,GAC7BuQ,cAAche,IAAIwU,EAAM/G,GACxBnU,SAAS4c,mBAAqB8H,cAAcG,MAC5C,CAAC,MAAOtf,GACRlM,MAAM8b,MAAM,KAAM5P,EAClB,CACD,QAGAjL,OAAO8H,OAAOsiB,eACdhqB,WAAWgqB,cAAgBA,cAC3BA,cAAcI,MAAM1rB,EACpB,EC1IF,MAAM2rB,EAAY3gB,SACZke,EAAWle,SAOV,MAAM4gB,gBAEX1rB,UAAkB,EAClBA,UAAa2B,KAAKgqB,MAClB3rB,WAAoB,EAEpBA,YACE,MAAMoP,EAAKsc,gBACXtc,EAAGyZ,QAAQniB,SAASiV,MACpBvM,GAAGwc,KACHxc,GAAGyc,GAAWC,aAAY,IAAM1c,GAAGoc,MAAUpc,EAAG3H,QACjD,CAEDzH,YACE,MAAMoP,EAAKsc,gBACXhD,cAActZ,GAAGyc,IACjBzc,GAAGyc,QAAWjnB,CACf,CAED5E,YACE,MAAMoP,EAAKsc,gBACLK,EAAS3c,GAAG4c,GAClB,GAAqB,GAAjBD,EAAO1nB,OAAa,OAAO+K,GAAGiY,KAClC0E,EAAOlpB,KAAIwJ,GAAK+C,GAAG6c,GAAY5f,KAC/B+C,EAAG8c,QACJ,CAEDlsB,gBACE,MAAMoP,EAAKsc,gBACPtc,GAAG+c,KACP/c,GAAG+c,IAAa,EAChBngB,gBAAe,KACbgU,uBAAsB,KACpB,IACEtZ,SAAS4c,mBAAqBlU,GAAGgd,GACjC1lB,SAAS4c,mBAAmB3iB,KAAOyO,GAAGid,EAChD,CAAkB,QACRjd,GAAG+c,IAAa,EAChB/qB,WAAWskB,cAAc,IAAIF,YAAY,cAC1C,IACD,IAEL,CAEDxlB,UAAemjB,GACb,OAAOniB,OAAOsF,OAAO6c,EAAM7S,UAAUzN,KAAIiE,GAAKA,EAAEwlB,UAAS7pB,KAAK,GAC/D,CAEDzC,UAAkBC,GAChB,MAAMmP,EAAKsc,gBACXA,iBAAgBa,GAAmBtsB,GACnCkF,MAAMgG,KAAKzE,SAAS2J,aAAatK,QAAOsG,GAAKA,EAAEmgB,YAAcvsB,IAAI4C,KAAIwJ,GAAK+C,GAAG6c,GAAY5f,IAC1F,CAEDrM,UAAmBmjB,GACjB,MAAM/T,EAAKsc,gBACLjU,EAAQrI,GAAGG,GAAQ4T,GACzB,OAAO/T,GAAGqd,GAAYtJ,EAAMqJ,UAAW/U,EACxC,CAEDzX,UAAmBwsB,EAAW/U,GAC5B,MAAMrI,EAAKsc,gBACLvI,EAAQ,IAAIC,cAKlB,OAJAD,EAAME,YAAY5L,GAClB0L,EAAMxiB,KAAOyO,GAAGid,GAChBG,EAAUf,GAAatI,EAAMxiB,GAC7ByO,GAAGic,GAAOmB,EAAWrJ,GACdA,CACR,CAEDnjB,UAAcwsB,EAAWrJ,GACvBiI,cAAche,IAAI+V,EAAMxiB,GAAIwiB,EAC7B,CAEDnjB,UAAewsB,EAAWrJ,GACxBiI,cAAc3N,OAAO0F,EAAMxiB,IAC3B6rB,EAAUxD,IAAW0D,eACrBF,EAAUxD,QAAYpkB,CACvB,CAEUwnB,gBACT,OAAOhB,cAAcG,MACtB,CAMUS,gBACT,OAAOhrB,OAAOsF,OAAOI,SAAS2J,aAC3BtK,QAAOe,GAAKA,EAAE0lB,YACdzmB,QAAOe,GAAKA,EAAE0lB,UAAUxe,QAAQge,YAChCjmB,QAAOe,IAAMA,EAAE0lB,UAAUf,IAC7B,CAEDzrB,YACEya,EAAM+B,SAAS9V,SAASiV,KAAM,mCAC7B3U,SAAQ/G,IACPA,EAAGwd,SACH/W,SAASiV,KAAKO,YAAYjc,EAAG,GAEhC,CAEDD,UAA0B2sB,GACxBA,EAAa3lB,SAASyiB,IACnB,MAAM9oB,EAAK8oB,EAAS3b,OAAO2d,GACrBhU,EAAQ2T,cAAcjiB,IAAIxI,GAC7B8W,IAAOA,EAAMsK,SAAW0H,EAAS3b,OAAOc,aAAa,YAAW,IAEtE8c,gBAAgBQ,QACjB,CAEDlsB,UAA0BkP,GACxB,MAAME,EAAKsc,gBACLvH,EAAW/U,GAAGwd,GAAmB7kB,KAAKqH,GACtC4Z,EAAW,IAAIJ,iBAAiBzE,GAMtC,OALA6E,EAASH,QAAQ3Z,EAAS,CACxB2d,gBAAiB,CAAC,YAClBC,mBAAmB,EACnB/D,SAAS,IAEJC,CACR,CAQDhpB,UAAwBC,GACtB,OAAQ2B,QAAQ3B,EAAG+N,SAASge,aAEvB/rB,aAAc8sB,kBAA+B,eAAX9sB,EAAG+sB,KAAkC,UAAV/sB,EAAGgtB,KAC9DhtB,aAAcitB,iBAEtB,CAMDltB,UAAyBC,GACvB,MAAMmP,EAAKsc,gBACPzrB,aAAcitB,kBAChB9d,GAAGqd,GAAYxsB,EAAIA,EAAGkhB,WACtB/R,EAAG8c,UACMjsB,aAAc8sB,iBACvBxJ,SAASc,KAAKpkB,EAAI,OAAQ,GAAG,GAAOktB,MAAKlhB,IACvC,GAAe,YAAXhM,EAAG+sB,IAAmB,OAAO/sB,EAAG+sB,IAAM,aAC1C5d,GAAGge,GAAWnhB,EAAE6B,QAChBsB,EAAG8c,QAAQ,GAGhB,CAMDlsB,UAA4BC,GAC1B,MAAMmP,EAAKsc,gBACXtc,GAAGgd,GAAQrmB,QAAOe,GAAKA,EAAEnG,KAAOV,EAAGwrB,KAC5BzkB,SAAQF,GAAKsI,GAAGqO,GAAQxd,EAAI6G,KACnCsI,EAAG8c,QACJ,CAMDlsB,eAAegL,GACb,MAAMoE,EAAKsc,gBACX/C,cAAc0E,eAAeje,GAAGke,GAAkBle,GAAGme,IAAmB,EAAOviB,GAC/E2d,cAAc0E,eAAeje,GAAGke,GAAkBle,GAAGoe,IAAsB,EAAMxiB,EAClF,QAGC7K,MAAKstB,IACN,ECrLI,MAAMC,cAMEC,sBACP,OAAIrpB,UAAUspB,cAAsBtpB,UAAUspB,cAAcC,OACrD,iEAAiE/pB,KAAKQ,UAAUwpB,UAC1F,CAMUC,uBACP,OAAQL,cAAcC,QACzB,CAEUK,sBACP,MAAO,SAASlqB,KAAKQ,UAAUwpB,UAAU7rB,cAC5C,CAMDjC,uBAAuB+B,EAAM,IACzB,OAAKA,GACE4f,SAASsM,SAASrrB,MAAM,GAAI,KAAOb,CAChD,CAOE/B,sBAAsB+B,EAAM,IACxB,IAAKA,EAAK,OAAO,EACjB,MAAMmsB,EAASnsB,EAAIE,cACnB,GAAIqC,UAAUspB,cAAe,CACzB,IAAIhW,GAAM,EAMV,OALAtT,UAAUspB,cAAcO,OAAOnnB,SAAStF,IAChCA,EAAE0sB,MAAMnsB,cAAcoI,SAAS6jB,KAC/BtW,GAAM,EACT,IAEEA,CACV,CACD,MAAMyW,EAAS/pB,UAAUwpB,UAAUtV,qBAAuB,GACpD8V,EAASD,EAAOhkB,SAAS,OAC/B,SAAIikB,IAAUJ,EAAOnqB,WAAW,UACxBuqB,GAAUD,EAAOhkB,SAAS6jB,EACrC,CAODluB,0BAA0B+B,EAAM,IAE5B,OAAKA,IAEO,YAARA,EACO2rB,cAAcK,UAGb,WAARhsB,EACO2rB,cAAcC,SAGlBD,cAAca,SAASxsB,GACjC,CAOD/B,gBAAgB+B,EAAM,IAClB,IAAKA,EAAK,OAAO,EACjB,MAAMmsB,EAASnsB,EAAIE,cAEnB,GAAIqC,UAAUspB,eAAiBtpB,UAAUspB,cAAcY,SAAU,CAE7D,OADiBlqB,UAAUspB,cAAcY,SAASvsB,gBAC9BisB,CACvB,CAGD,OADe5pB,UAAUwpB,UAAUtV,oBACrBvB,QAAQiX,GAAU,CACnC,CAUDluB,0BAA0B+B,EAAM,IAE5B,IAAKA,EAAK,OAAO,EAEjB,IAAK0sB,OAAOnR,YAAa,OAAO,EAEhC,MAAMoR,EAAQD,OAAOnR,YAAY/c,KAEjC,OAAImuB,EAAMrkB,SAAS,YACA,aAARtI,GAA8B,aAARA,GAG7B2sB,EAAMrkB,SAAS,eACA,cAARtI,GAA+B,eAARA,EAIrC,QAGGf,OAAOC,KAAKysB,cACf,ECzHE,MAAMiB,UAETpnB,IACA4c,IACAyK,IACAjnB,IACAC,IACAinB,IAOA7rB,YAAYmhB,EAAU5c,GAClB,MAAM6H,EAAKjP,KACXiP,GAAG+U,GAAYA,EACf/U,GAAG7H,GAAUA,aAAkBC,YAAcD,EAAS,KACtD6H,GAAG7H,GAAUpG,EAAOyC,SAAS2D,GAAUC,YAAYC,QAAQF,GAAU6H,GAAG7H,GACxE6H,GAAGwf,GAAa,CACZnG,MAAOrZ,GAAG0f,GAAS/mB,KAAKqH,GAE/B,CAED2f,QACI,MAAM3f,EAAKjP,KACX,OAAIiP,GAAGyf,KACPzf,GAAG7H,IAASS,iBAAiB,QAASoH,GAAGwf,GAAWnG,OACpDrZ,GAAGyf,GAAW,IAAInnB,QAAQ0H,GAAG6M,GAAMlU,KAAKqH,KAFhBA,GAAGyf,EAI9B,CAEGG,cACA,OAAiC,IAA1B7uB,MAAKoH,IAASynB,OACxB,CAED/S,IAAMtU,EAASC,GACX,MAAMwH,EAAKjP,KACXiP,GAAGzH,GAAWA,EACdyH,GAAGxH,GAAUA,EACb,IACIwH,GAAG+U,GAAU/U,GAAG6f,GAAWlnB,KAAKqH,GAAKA,GAAG8f,GAAUnnB,KAAKqH,GAC1D,CAAC,MAAOnD,GACLmD,GAAGiY,KACHzf,EAAOqE,EACV,CACJ,CAED6iB,MACe3uB,MACRknB,KADQlnB,MAERyH,GAAQ,IAAI7G,MAAM,oBACxB,CAEDkuB,IAAWnoB,GACP,MAAMsI,EAAKjP,KAEX,OADAiP,GAAGiY,KACIjY,EAAG4f,QAAU,KAAO5f,GAAGzH,GAASb,EAC1C,CAEDooB,IAAUjjB,GACN,MAAMmD,EAAKjP,KAEX,OADAiP,GAAGiY,KACIjY,EAAG4f,QAAU,KAAO5f,GAAGxH,GAAQqE,EACzC,CAEDob,MACelnB,MACRoH,IAASod,oBAAoB,QADrBxkB,MACiCyuB,GAAWnG,MAC1D,CAOJzoB,kBAAkBmvB,GAEjB,OADKhqB,MAAMC,QAAQ+pB,KAAKA,EAAK,IACtBA,EAAG5e,QAAO,CAAC6e,EAAGhjB,IAASgjB,EAAEjC,KAAK/gB,IAAO1E,QAAQC,UACpD,QAGMvG,WAAWutB,UAAYA,SAC1B,EClFE,MAAMU,gBAAgBC,YAEzBC,IAAa,IAAI9Y,IAEjBS,IAAM3W,EAAO,GAAIivB,GACb,MACMtY,EAAO/R,MAAMgG,KADRhL,MACgBovB,IAC3B,OAFWpvB,MAEDiK,EAAYolB,GAClBtY,EAAKnR,QAAOe,GAAKA,EAAEvG,OAASA,GAAQuG,EAAE0oB,WAAaA,IAEnDtY,EAAKnR,QAAOe,GAAKA,EAAEvG,OAASA,GACnC,CAED6J,GAAYxJ,GACR,MAAqB,mBAAPA,CACjB,CAUDmP,GAAGxP,EAAO,GAAIivB,EAAU/nB,EAAU,EAAGgoB,GAAY,GAC7C,IAAKlvB,EAAM,OAAOqH,OAAO,oBACzB,IAAI8nB,EAAa,KAEbA,EADAD,aAAqBlH,gBACRkH,EAEAA,EAAY,IAAInH,kBAAkB7gB,GAAW,KAE9D,MAAMF,EAASmoB,GAAyB,GAAXjoB,EAAeioB,GAAYnoB,OAASC,YAAYC,QAAQA,GAErF,OADAtH,KAAK6H,iBAAiBzH,EAAMivB,EAAU,CAAEjoB,OAAQA,IACzCmoB,GAAcnoB,CACxB,CAUDid,KAAKjkB,EAAMivB,EAAU/nB,EAAU,EAAGgoB,GAAY,GAC1C,IAAKlvB,EAAM,OAAOqH,OAAO,oBACzB,MAAMwH,EAAKjP,KACL8b,KAAQhQ,IACVujB,EAASvjB,GACTmD,GAAGmgB,GAAWtI,OAAOhL,KAAK,EAY9B,OAVAA,KAAK1b,KAAOA,EACZ0b,KAAKuT,SAAWA,EAChBvT,KAAKxU,QAAUA,EACXgoB,aAAqBlH,gBACrBtM,KAAKyT,WAAaD,EAElBxT,KAAKyT,WAAaD,EAAY,IAAInH,kBAAkB7gB,GAAW,KAEnEwU,KAAK1U,OAAS0U,KAAKyT,YAAyB,GAAXjoB,EAAewU,KAAKyT,YAAYnoB,OAASC,YAAYC,QAAQA,GAC9F2H,EAAGpH,iBAAiBzH,EAAM0b,KAAM,CAAEuI,MAAM,EAAMjd,OAAQ0U,KAAK1U,SACpD0U,KAAKyT,YAAczT,KAAK1U,MAClC,CAQDooB,IAAIpvB,EAAO,GAAIivB,GACXrvB,KAAKwkB,oBAAoBpkB,EAAMivB,EAClC,CASDI,KAAKrvB,EAAO,GAAI2H,EAAM2nB,EAAU,GAC5B,MAAMzgB,EAAKjP,KACX,OAAgB,IAAZ0vB,EACO7jB,gBAAe,IAAMoD,GAAGiX,GAAM9lB,EAAM2H,MAE/C2nB,EAAU1uB,EAAO+L,MAAM2iB,EAAS,KACjB,EAAUzgB,GAAGiX,GAAM9lB,EAAM2H,GACjCJ,YAAW,IAAMsH,GAAGiX,GAAM9lB,EAAM2H,IAAO2nB,EACjD,CAEDxJ,IAAM9lB,EAAO,GAAI2H,GACb,MAAMyd,EAAM,IAAIH,YAAYjlB,EAAM,CAAEklB,OAAQvd,IAC5C,OAAO/H,KAAKulB,cAAcC,EAC7B,CAQDtB,KAAK9jB,EAAO,GAAIgH,GACZ,MAAM6H,EAAKjP,KAIX,OAAO,IAAIwuB,WAHM,CAAChnB,EAASC,KACvBwH,EAAGoV,KAAKjkB,EAAMoH,EAAQ,GAEKJ,GAAQwnB,OAC1C,CAEDpL,OAAOpjB,EAAMivB,GAAYrvB,KAAK4P,GAAGxP,EAAMivB,EAAY,CACnD5K,SAASrkB,EAAMivB,GAAYrvB,KAAKwvB,IAAIpvB,EAAMivB,EAAY,CAKtDM,SAEI3qB,MAAMgG,KADKhL,MACGovB,IAAYvoB,SAAQF,IAC9B0hB,MAAM7D,oBAAoB7d,EAAEvG,KAAMuG,EAAE0oB,SAAS,IAFtCrvB,MAIRovB,GAAWlI,OACjB,CAEDrf,iBAAiBzH,EAAMivB,EAAU7hB,GAE7B,QADWxN,MACHiK,EAAYolB,KADTrvB,MAERovB,GAAW/R,IAAI,CAAEjd,KAAMA,EAAMivB,SAAUA,IACnChH,MAAMxgB,iBAAiBzH,EAAMivB,EAAU7hB,GACjD,CAEDgX,oBAAoBpkB,EAAMivB,GACtB,MAAMpgB,EAAKjP,KACL+W,EAAO9H,GAAG8H,GAAM3W,EAAMivB,GAC5BtY,EAAKlQ,SAAQF,GAAK0hB,MAAM7D,oBAAoB7d,EAAEvG,KAAMuG,EAAE0oB,YACtDtY,EAAKlQ,SAAQF,GAAKsI,GAAGmgB,GAAWtI,OAAOngB,IAC1C,QAGG9F,OAAO8H,OAAOumB,SACdjuB,WAAWiuB,QAAUA,OACxB,EC7IE,MAAMU,WAET/vB,UAAmB,IAAIwjB,IAWvBxjB,YAAYmI,EAAO,GAAI5H,EAAO,GAAI2H,GAC9B,OAAO6nB,WAAWC,SAAS7nB,GAAMynB,KAAKrvB,EAAM2H,EAC/C,CAQDlI,aAAamI,EAAO,IAChB,OAAOA,GAAQ4nB,YAAWE,GAAUC,IAAI/nB,EAC3C,CAODnI,gBAAgBmI,EAAO,IAInB,OAHK4nB,WAAWI,MAAMhoB,IAClB4nB,YAAWE,GAAU7iB,IAAIjF,EAAM,IAAIknB,SAEhCU,YAAWE,GAAU9mB,IAAIhB,EACnC,CAODnI,kBAAkBmI,EAAO,IACrB,MAAMioB,EAAML,YAAWE,GAAU9mB,IAAIhB,GAErC,OADIioB,GAAKN,QAAQM,EAAIN,SACdC,YAAWE,GAAUhJ,OAAO9e,EACtC,QAGGnH,OAAO8H,OAAOinB,YACd3uB,WAAW2uB,WAAaA,UAC3B,ECzDE,MAAMM,UAETC,IAAS,EACTC,IAAS,EACTC,IAAS,KACTC,IAAS,KACTvhB,IAAW,KACXwhB,IAAY,KAEZC,KAAS,EACTC,KAAO,EACPC,KAAa,EAGbC,IAAS,EAGT9wB,eAAiB,KASjBgD,YAAYkM,EAASyhB,EAAOC,EAAKC,GAC7B,MAAMzhB,EAAKjP,KACXiP,GAAGuhB,GAASA,EACZvhB,GAAGwhB,GAAOA,EACVxhB,GAAGyhB,GAAaA,EAChBzhB,GAAGohB,GAAS,KACZphB,GAAGqhB,GAAS,KACZrhB,GAAGF,GAAgC,iBAAb,EAAwBxI,SAASqqB,cAAc7hB,GAAWA,EAEhFE,GAAGshB,GAAY,CACXM,KAAM5hB,GAAG6hB,GAAiBlpB,KAAKqH,GAC/B8hB,MAAO9hB,GAAG+hB,GAAkBppB,KAAKqH,GACjCgiB,IAAKhiB,GAAGiiB,GAAgBtpB,KAAKqH,IAEjCmU,SAAS8E,OAAOjZ,GAAGF,GAAUE,GAAGF,GAAU,YAAaE,GAAGshB,GAAUM,MAAM,GAC1EzN,SAAS8E,OAAOjZ,GAAGF,GAAUE,GAAGF,GAAU,aAAcE,GAAGshB,GAAUQ,OAAO,GAC5E3N,SAAS8E,OAAOjZ,GAAGF,GAAUE,GAAGF,GAAU,WAAYE,GAAGshB,GAAUU,KAAK,EAC3E,CAKDtB,SACI,MAAM1gB,EAAKjP,KACXojB,SAAS9F,OAAOrO,GAAGF,GAAUE,GAAGF,GAAU,YAAaE,GAAGshB,GAAUM,MACpEzN,SAAS9F,OAAOrO,GAAGF,GAAUE,GAAGF,GAAU,aAAcE,GAAGshB,GAAUQ,OACrE3N,SAAS9F,OAAOrO,GAAGF,GAAUE,GAAGF,GAAU,WAAYE,GAAGshB,GAAUU,IACtE,CAEDD,IAAkBxL,GACd,MAAMvW,EAAKjP,KACXiP,GAAGohB,GAAS7K,EAAI2L,QAAQ,GAAGC,QAC3BniB,GAAGqhB,GAAS9K,EAAI2L,QAAQ,GAAGE,QACvBpiB,GAAGyhB,IAAY/oB,WAAWsH,GAAGqiB,GAAa1pB,KAAKqH,GAAKihB,UAAU5oB,QACrE,CAED4pB,IAAgB1L,GACZ1d,aAAa9H,MAAK2wB,GACrB,CAEDG,IAAiBtL,GAEb,MAAMvW,EAAKjP,KAEX,IAAKiP,GAAGohB,KAAWphB,GAAGqhB,GAClB,OAGJ,IAAKrhB,GAAGuhB,GAAQ,OAEhB,MAAMe,EAAM/L,EAAI2L,QAAQ,GAAGC,QACrBI,EAAMhM,EAAI2L,QAAQ,GAAGE,QAE3B,GAAIpiB,GAAGyhB,GAAY,CACE1tB,KAAKyS,IAAIxG,GAAGkhB,IAAU,IAAMntB,KAAKyS,IAAIxG,GAAGmhB,IAAU,IACrDtoB,aAAamH,GAAG0hB,GACjC,CAED1hB,GAAGkhB,GAASlhB,GAAGohB,GAASkB,EACxBtiB,GAAGmhB,GAASnhB,GAAGqhB,GAASkB,EAKxB,IAAIxpB,EAAO,GAEPA,EAJiBhF,KAAKyS,IAAIxG,GAAGkhB,IAAUntB,KAAKyS,IAAIxG,GAAGmhB,IAI5CnhB,GAAGkhB,GAAS,EAAI,aAAe,cAE/BlhB,GAAGmhB,GAAS,EAAI,WAAa,aAGxChN,SAAS8C,KAAKjX,GAAGF,GAAU/G,EAAMwd,GAGjCvW,GAAGohB,GAAS,KACZphB,GAAGqhB,GAAS,IACf,CAEDgB,MACIlO,SAAS8C,KAAKjX,IAAGF,GAAU,aAC9B,CAODlP,eAAeiM,GACX,OAAOA,EAAEwZ,OAAO6L,SAASjtB,MAC5B,CAODrE,cAAckP,EAASyhB,GAAQ,EAAMC,GAAM,EAAOC,GAAY,GAC1D,OAAO,IAAIR,UAAUnhB,EAASyhB,EAAOC,EAAKC,EAC7C,EC3HE,MAAMe,eAAe5oB,YAE3BhJ,UAAe,CAAC,UAAW,YAE3BgD,cACCwlB,QACAoJ,OAAOC,SAAS1xB,KAChB,CAQG6O,WACH,IAAI/I,EAAMyG,EAAOvD,IAAIhJ,KAAM,YAC3B,OAAI8F,EAAY,0BAA0BA,qBAC1CA,EAAM9F,KAAK4wB,cAAc,YAClB9qB,GAAKW,WAAa,GACzB,CAOGwa,YACH,OAAOjc,MAAMgG,KAAKhL,KAAKkO,UAAUtI,QAAO9F,GAAoB,WAAdA,EAAGqc,SACjD,CAEGnU,WACH,OAAOuE,EAAOvD,IAAIhJ,KAAM,OAAQ,GAChC,CAED2Q,OAAOlD,GAAY,GAClB,OAAO6M,EAAMtN,OAAOhN,KAAMyN,EAC1B,CAQD5N,gBAAgBsK,EAAKgS,EAAU,WAC9B,OAAO7B,EAAMoX,SAASvnB,EAAKgS,EAASsV,QAAOE,GAC3C,CAOD9xB,eAAekf,GACd,OAAKzE,EAAM9N,cAAcuS,GAClB/Z,MAAMgG,KAAK+T,EAAK7Q,UAAUtI,QAAO9F,GAAoB,WAAdA,EAAGqc,UADV,EAEvC,CAODtc,cAAckf,GACb,OAAO0S,OAAOG,QAAQ7S,GAAMrc,KAAI5C,GAAMA,EAAG6Q,QAAO,IAChD,CAQE9Q,eAAekf,EAAM8S,GACjB,OAAOJ,OAAOG,QAAQ7S,GAAMrc,KAAI5C,GAAMyM,EAAO4B,QAAQrO,EAAI+xB,IAC5D,QAGH9oB,eAAeE,OAAO,UAAWwoB,QACjC5wB,OAAOC,KAAK2wB,OACZ,EC7EK,MAAMK,SAETjyB,oBAAsBoB,WAAW8wB,iBAAmBvQ,SAASwQ,OAC7DnyB,iBAAkB,EAClBA,cAAgBL,UAAUE,aAGtB,IAAKuB,WAAW8wB,gBAAiB,CAC7B,MAAMruB,EAAM8d,SAASnZ,KAAKjG,MAAM,KAAKiT,MACrC,IAAIwE,EAAMnW,EAAItB,MAAM,KACpB0vB,SAASG,aAAevuB,EAAIG,SAAS,KAAOH,EAAMmW,EAAIpX,MAAM,GAAI,GAAGH,KAAK,KACxErB,WAAW8wB,gBAAkBD,SAASG,YACzC,CAGD,MAAMC,EAAS,gBAAiB7oB,KAC5B6oB,IACAJ,SAASK,UAAsC,IAA3BlxB,WAAWmxB,YAC3BC,cAAcA,aAAaC,QAAQ,cAAeR,SAASK,WAEnEL,SAASK,WAAWE,cAAsD,QAAvCA,aAAaE,QAAQ,cAE3D,CAMD1yB,oBAAoB6D,EAAM,GAAI8uB,GAAO,GAEjC9uB,EAAMA,GAAO,GACb,IAAI+uB,EAAO,KACX,MAAMC,EAASlR,SAASmR,SAASvwB,MAAM,KAAKiT,KAAK,GAAGnL,SAAS,KACvD0oB,EAAQlvB,EAAIwG,SAAS,eAIvBuoB,EAHU/uB,EAAIE,WAAW,SAEhBgvB,EACFlvB,EACAA,EAAIE,WAAW,KACf,GAAG4d,SAASwQ,UAAUtuB,IACtBgvB,EACA,GAAGlR,SAASwQ,SAASxQ,SAASmR,eAAejvB,IAE7C,GAAG8d,SAASwQ,SAASxQ,SAASmR,YAAYjvB,IAGrD+uB,EAAOA,EAAKrwB,MAAM,OAAOM,KAAInB,GAAKA,EAAEiC,WAAW,UAAW,OAAMlB,KAAK,OACrE,MAAMuwB,EAAM,IAAI1qB,IAAIsqB,GAIpB,IAAKD,EAAM,CACP,MAAM5wB,EAAMkwB,SAASK,SAAW3wB,KAAKgqB,MAAQsG,SAASgB,OACtDD,EAAIE,aAAaC,OAAO,MAAOpxB,EAClC,CAED,OAAOixB,EAAIxqB,IACd,CAQDxI,kBAAkB6D,EAAM,GAAIuvB,EAAQ,GAChC,OAAQvvB,GAAO,IAAItB,MAAM,KAAKK,MAAM,GAAI,EAAIwwB,GAAO3wB,KAAK,KAAO,GAClE,CAUDzC,yBAAyB6F,EAAM,IAE3B,IAAKA,EAAK,OAAOA,EAGjB,GADcA,EAAI9B,WAAW,KAClB,CACP,MAAM9D,EAAKwa,EAAM5Q,MAAMnD,SAAS0Y,gBAAiBvZ,GACjD,OAAO5F,EAAKA,EAAG2G,UAAYf,CAC9B,CAGD,OADe1E,EAAOkyB,OAAOxtB,GACVA,GAEnBA,EAAMosB,UAASqB,GAAgBztB,GACxBosB,SAASsB,SAAS1tB,GAC5B,CAOD7F,UAAuB6D,EAAM,IAMzB,OADAA,EAAMA,EAAIE,WAAW,MAAQkuB,UAASuB,GAAe,IAAM3vB,EAAMA,EAC1DouB,SAASwB,aAAa5vB,EAChC,CAMU2vB,gBACP,OAAOvB,SAASwB,aAAaxB,UAASyB,IAAe,EACxD,CAMUA,gBACP,OAAOzB,SAASG,aAAeH,SAASG,aAAahwB,QAAQ,KAAM,KAAO,EAC7E,CAWDpC,0BAA0B+B,EAAM,GAAI4xB,EAAS,OACzC,MAAM9vB,EAAMouB,UAASqB,GAAgBvxB,GACrC,aAAakwB,SAAS2B,KAAK/vB,EAAK8vB,EACnC,CAWD3zB,kBAAkB+B,EAAM,GAAI4xB,EAAS,MAAOE,EAASC,GAAS,EAAO9kB,GACjE,IAAI9G,EAAO,KACX,MAAM6rB,EAAK,gBACXF,EAAU,IAAKA,IACPE,GAAMD,EAAS,0BAA4BD,EAAQE,IAAO,aAClEF,EAAQG,OAAS,mBACjB,MAAMnwB,EAAMouB,SAASwB,aAAa1xB,GAAK,GACjC4L,EAAM,CAAEgmB,OAAQA,EAAQE,QAASA,IACxB,SAAXF,GAAgC,QAAXA,GAAoB3kB,KACzCrB,EAAIqB,KAAOxJ,KAAK8H,UAAU0B,IAE9B,MAAMyQ,QAAYwD,MAAMpf,EAAK8J,GAE7B,OADI8R,EAAIyD,KAAIhb,EAAO4rB,QAAerU,EAAIwU,aAAexU,EAAIjZ,QAClD0B,CACV,CAaDlI,sBAAsB6D,EAAM,GAAI8vB,EAAS,MAAOE,EAASC,GAAS,EAAOzwB,EAAK2L,GAC1E,IACI,GAAInL,EAAK,OAAOouB,SAAS2B,KAAK/vB,EAAK8vB,EAAQE,EAASC,EAAQ9kB,EAC/D,CAAC,MAAO/C,GACLlM,MAAM8b,MAAM,KAAM5P,EACrB,CACD,OAAI5I,IACGywB,EAAS,CAAE,EAAG,GACxB,CAUD9zB,sBAAsB+B,EAAM,IAExB,MAAMmyB,EAAS/yB,EAAO+yB,OAAOnyB,GACvBoyB,GAAQD,GAAU/pB,EAAWmB,cAAcvJ,GAC3CqyB,EAASD,GAAQhqB,EAAWC,WAAW+pB,GAO7C,KANgBC,GAAUjzB,EAAOuK,WAAW3J,IAE9BmyB,KAAQnyB,EAAMZ,EAAOgM,OAAOpL,IAEtCqyB,IAAQryB,QAAYoI,EAAWma,aAAa6P,IAE3ChzB,EAAOmE,WAAWvD,GAEvB,OAAOA,CACV,QAGGf,OAAOC,KAAKgxB,UACZ7wB,WAAW6wB,SAAWA,QACzB,ECxNL,MAAMoC,EAA2BjzB,WAAWizB,0BAA4B3tB,SAAS0Y,gBAAgBkV,MAAQhwB,UAAUC,SAgJvG,MAACgwB,EAAiB,IAvI9B,MAAMC,mBAEFhwB,IAAa,IAAIgf,IACjBiR,IAAS,IAAIhe,IACbie,KAAU,EAEV7wB,IAAOzC,WAAWuzB,oBAClBjmB,IAAW2lB,EACX9vB,IAEAvB,cACI7C,KAAKyzB,MACR,CAKGllB,cACA,OAAOvO,MAAKuO,EACf,CAEGA,YAAQ3M,EAAM,IACd5B,MAAKuO,GAAW3M,GAAOsyB,CAC1B,CAKGC,WACA,OAAOn0B,MAAKoE,IAAapE,KAAKuO,OACjC,CAEG4lB,SAAKvyB,EAAM,IACX5B,MAAKoE,GAAYxC,CACpB,CAKG8B,UACA,OAAO1D,MAAK0D,EACf,CAEGA,QAAI9B,EAAM,IACV5B,MAAK0D,GAAO9B,GAAOX,WAAWuzB,mBACjC,CAEDC,UAAUrwB,EAAW,GAAI1C,EAAQ,IAC7B,MAAMuN,EAAKjP,KACX,GAAIgB,EAAOwD,cAAcJ,GAAW,OAAO1C,EAC3C,IAAKuN,GAAG5K,GAAW0rB,IAAI3rB,GAEnB,OADA6K,EAAGwkB,KAAKrvB,GACD1C,EAEX,MAAMgzB,EAAOzlB,GAAG0lB,GAAa,WACvBR,EAAOllB,GAAG0lB,GAAavwB,GACvBwwB,EAAWF,EAAK1rB,IAAI+C,KAAKwb,SAAS7lB,IACxC,OAAOkzB,GAAWT,EAAKnrB,IAAI4rB,IAAqBlzB,CACnD,CAEDmzB,QACI,MAAM5lB,EAAKjP,KACXiP,GAAGV,GAAW2lB,EACdjlB,GAAG7K,QAAYK,EACfwK,EAAGwkB,MACN,CAEDA,KAAKrvB,EAAW,WACZ,MAAM6K,EAAKjP,KACPgB,EAAOwD,cAAcJ,IACrBpD,EAAOwD,cAAcyK,EAAGvL,MACxBuL,GAAG5K,GAAW0rB,IAAI3rB,KACtB6K,GAAGqlB,GAAOjX,IAAIjZ,GACV6K,GAAGslB,KACPtlB,GAAGslB,IAAU,EACb1oB,gBAAeH,UACX,MAAMopB,EAAW9vB,MAAMgG,KAAKiE,GAAGqlB,GAAOnuB,UAAUzD,KAAIyJ,GAAK8C,EAAG8lB,SAAS5oB,WAC/DqiB,UAAUwG,WAAWF,GAC3B7lB,GAAGslB,IAAU,CAAK,KAGzB,CAED7oB,eAAetH,GACX,MAAM6K,EAAKjP,KACX,GAAIgB,EAAOwD,cAAcJ,GAAW,OACpC,GAAIpD,EAAOwD,cAAcyK,EAAGvL,KAAM,OAClC,MAIMA,EAAMouB,SAASwB,aAAa,GAAGrkB,EAAGvL,OAAOU,UAC/C,IAAIkb,QAAYwS,SAASsB,SAAS1vB,EAAK,MALvB,CACZ,gBAAiB,WACjBuxB,OAAU,aAGyC,GAEvD,IADK3V,GAAOlb,EAAS0S,QAAQ,KAAO,IAAGwI,QAAYrQ,EAAG8lB,SAAS3wB,EAAShC,MAAM,KAAK,MAC9Ekd,EAAK,OAAO,EACjBrQ,GAAGqlB,GAAOxN,OAAO1iB,GACjB6K,GAAGic,GAAO9mB,EAAUkb,EACvB,CAWD4L,IAAOiJ,EAAMnyB,GACT,IAAMA,IAAOmyB,EAAO,OAAO,EAC3B,MAAMe,EAAqB,YAATf,EACZzxB,EAAM1C,MAAK20B,GAAaR,GAM9B,OALAtzB,OAAOuM,QAAQpL,GAAK6E,SAASwG,IACzB,MAAM8nB,EAAKppB,KAAKwb,SAASla,EAAG,GAAGxL,QAC/Ba,EAAIuK,IAAIkoB,EAAID,EAAYnpB,KAAKwb,SAASla,EAAG,IAAMA,EAAG,GAAG,IAEzD+V,SAAS8C,KAAKtf,OAAQ,cAAe,CAAEwuB,QAASjB,KACzC,CACV,CAODQ,IAAa/yB,EAAM,IACf,MAAMqN,EAAKjP,KAIX,OAHKiP,GAAG5K,GAAW0rB,IAAInuB,IACnBqN,GAAG5K,GAAW4I,IAAIrL,EAAK,IAAIyhB,KAExBpU,GAAG5K,GAAW2E,IAAIpH,EAC5B,GCvIE,MAAMyzB,SAOZx1B,cAAcC,GACb,OAAOA,EAAGib,uBACV,CAQDlb,iBAAiBC,GAChB,MAAMgb,EAAOua,SAASC,OAAOx1B,GACvBy1B,EAAK3uB,OAAO4uB,QACZC,EAAK7uB,OAAO8uB,QACZ1zB,EAAM,CACX+E,KAAM+T,EAAK/T,KAAOwuB,EAClBvuB,MAAO8T,EAAK9T,MAAQuuB,EACpBI,IAAK7a,EAAK6a,IAAMF,EAChBG,OAAQ9a,EAAK8a,OAASH,EACtBxa,OAAQH,EAAKG,OACbD,MAAOF,EAAKE,MACZ9Y,EAAG4Y,EAAK5Y,EAAIqzB,EACZvf,EAAG8E,EAAK9E,EAAIyf,GAIb,OAFAzzB,EAAI6zB,QAAU7zB,EAAI+E,KAAQ/E,EAAIgZ,MAAQ,EACtChZ,EAAI8zB,QAAU9zB,EAAI2zB,IAAO3zB,EAAIiZ,OAAS,EAC/BjZ,CACP,CAQDnC,oBAAoBkP,EAASgnB,GAE5B,MAAMjb,EAAOua,SAASC,OAAOvmB,GACvBinB,EAAUX,SAASY,eAAeF,EAAchnB,EAAU,MAE1DmnB,EAAWF,EAAQ9zB,EACnBi0B,EAAWH,EAAQhgB,EAEnBogB,EAAernB,EAAQsnB,YAAcH,EACrCI,EAAgBvnB,EAAQwnB,aAAeJ,EAEvCK,EAAW1b,EAAK/T,KAAOivB,EAAQjvB,KAC/B0vB,EAAW3b,EAAK6a,IAAMK,EAAQL,IAKpC,MAAO,CACN3a,MAAOob,EACPnb,OAAQqb,EACRX,IAAKc,EACL1vB,KAAMyvB,EACNt0B,EAAGs0B,EACHxgB,EAAGygB,EACHZ,QAVgBO,EAAe,EAAKI,EAWpCV,QAVeW,EAAYH,EAAgB,EAY5C,CAODz2B,sBAAsBkP,GAErB,MAAM/M,EAAM,CACX+E,KAAM,EACNC,MAAO,EACP2uB,IAAK,EACLC,OAAQ,EACR1zB,EAAG,EACH8T,EAAG,GAIJ,KADajH,aAAmBlG,aACrB,OAAO7G,EAClB,MAAM0Y,EAAM9L,EAASc,qBAAqBX,GAS1C,OAPA/M,EAAI+E,KAAO2T,EAAI3N,MAAM,gBACrB/K,EAAIgF,MAAQ0T,EAAI3N,MAAM,iBACtB/K,EAAI2zB,IAAMjb,EAAI3N,MAAM,eACpB/K,EAAI4zB,OAASlb,EAAI3N,MAAM,kBACvB/K,EAAIE,EAAIF,EAAI+E,KAAO/E,EAAIgF,MACvBhF,EAAIgU,EAAIhU,EAAI2zB,IAAM3zB,EAAI4zB,OAEf5zB,CACP,CAUDnC,kBAAkBke,EAAY,MAAOyM,EAAQ7c,EAAQ+oB,GAEpD,IAAMlM,IAAU7c,EAAS,OAAO,EAEhC,MAAMgpB,EAAMtB,UAASuB,GAAe7Y,GAEpC,IAAKsX,UAASwB,GAAkBF,GAE/B,YADA/2B,MAAM4F,KAAKglB,EAAQ,6BAA6BzM,MAIjD,MAAMzG,EAAQyS,eAAee,aAAaN,GAY1C3pB,OAAOkqB,OAAOzT,EAVF,CACXwf,SAAU,QACVnB,IAAK,MACL5uB,KAAM,MACNgwB,OAAQ,MACRf,QAAS,MACTgB,UAAW,GACXvC,UAAW,KAKZ,MAAMwC,EAAOzM,EAAO+L,aAAe,EAC7BW,EAAO1M,EAAO6L,YAAc,EAE5Bvb,EAAOua,SAAS8B,aAAaxpB,EAAQ+oB,aAAiB7tB,aACtDuuB,EAAQ/B,UAASgC,GAAa7M,EAAQkM,EAAOC,GAE7C30B,EAAM,CACXE,EAAG4Y,EAAK+a,QACR7f,EAAG8E,EAAKgb,QACRwB,KAAML,EACNM,KAAML,EACNM,KAAMhN,EAAO+L,aACbkB,KAAMjN,EAAO6L,aAGdhB,UAASqC,GAAWf,EAAK30B,EAAK8Y,EAAMsc,GACpC9f,EAAMmd,UAAY,GAAGzyB,EAAIE,OAAOF,EAAIgU,KAEpC,CAUDnW,qBAAqBke,EAAY,MAAOyM,EAAQ7c,EAAQ+oB,GAEvD,IAAMlM,IAAU7c,EAAS,OAAO,EAEhC,MAAMgpB,EAAMtB,UAASuB,GAAe7Y,GAEpC,IAAKsX,UAASwB,GAAkBF,GAE/B,YADA/2B,MAAM4F,KAAKglB,EAAQ,6BAA6BzM,MAIjD,MAAMzG,EAAQyS,eAAee,aAAaN,GACpCmN,EAAS5N,eAAee,aAAa4L,GAErChc,EAAM,CACXkd,MAAOvC,UAASuC,GAAOjB,GACvBG,SAAU,WACVC,OAAQ,MACRpB,IAAK,MACL5uB,KAAM,MACNiU,MAAO,cACPC,OAAQ,cACR+b,UAAW,GACXvC,UAAW,IAGZ5zB,OAAOkqB,OAAOzT,EAAOoD,GACrBid,EAAOb,SAAW,WAElB,MAAMe,EAAQxC,SAASC,OAAO9K,GACxB4M,EAAQ/B,SAASC,OAAOoB,GACxB/hB,EAAS0gB,SAASyC,UAAUnqB,GAE5B3L,EAAM,CACXE,EAAGyS,EAAOkhB,QACV7f,EAAGrB,EAAOmhB,SAGLjf,EAAM,CACX3U,EAAI21B,EAAM7c,MAAQ,EAAMoc,EAAMpc,MAAQ,EACtChF,EAAI6hB,EAAM5c,OAAS,EAAMmc,EAAMnc,OAAS,GAGzCoa,UAAS0C,GAAcpB,EAAK30B,EAAK6U,EAAKghB,EAAOT,EAAOziB,GAEpD,MAAMqjB,EAAO,CACZvD,UAAW,GAAG5d,EAAI3U,OAAO2U,EAAIb,MAC7B2f,IAAK9e,EAAI8e,IAAM9e,EAAI8e,IAAM,GACzB5uB,KAAM8P,EAAI9P,KAAO8P,EAAI9P,KAAO,IAGvByG,EAAM,CACXinB,UAAY,GAAGzyB,EAAIE,OAAOF,EAAIgU,OAG/BnV,OAAOkqB,OAAOzT,EAAO9J,GACrB3M,OAAOkqB,OAAO4M,EAAQK,EACtB,CAEDn4B,UAAqB82B,EAAK30B,EAAK6U,EAAKghB,EAAOT,EAAOziB,GAC7CgiB,EAAIsB,OACPphB,EAAIb,EAAI,EACRa,EAAI9P,KAAO,MACX/E,EAAIE,EAAIF,EAAIE,EAAK21B,EAAM7c,MAAQ,EAC/BhZ,EAAIgU,GAAK,GAAK6hB,EAAMjC,OAASjhB,EAAOghB,IAAMyB,EAAMnc,SACtC0b,EAAIuB,UACdrhB,EAAIb,EAAI,EACRa,EAAI9P,KAAO,MACX/E,EAAIE,EAAIF,EAAIE,EAAK21B,EAAM7c,MAAQ,EAC/BhZ,EAAIgU,EAAIrB,EAAOihB,OAASwB,EAAMnc,QACpB0b,EAAIwB,SACdthB,EAAI3U,EAAI,EACR2U,EAAI8e,IAAM,MACV3zB,EAAIE,GAAK,GAAK21B,EAAM7wB,MAAQ2N,EAAO5N,KAAOqwB,EAAMpc,OAChDhZ,EAAIgU,EAAIhU,EAAIgU,EAAK6hB,EAAM5c,OAAS,GACtB0b,EAAIyB,QACdvhB,EAAI3U,EAAI,EACR2U,EAAI8e,IAAM,MACV3zB,EAAIE,EAAIyS,EAAO3N,MAAQowB,EAAMpc,MAC7BhZ,EAAIgU,EAAIhU,EAAIgU,EAAK6hB,EAAM5c,OAAS,EAEjC,CAEDpb,UAAkB82B,EAAK30B,EAAKq2B,EAAOjB,GAC9BT,EAAIsB,OACPj2B,EAAIgU,EAAIqiB,EAAM1C,IAAM3zB,EAAIw1B,KAAOJ,EAAMniB,KACrCjT,EAAIE,EAAIF,EAAIE,EAAIF,EAAIu1B,MACVZ,EAAIuB,UACdl2B,EAAIgU,EAAIqiB,EAAM1C,IAAM0C,EAAMpd,OAASmc,EAAMniB,KACzCjT,EAAIE,EAAIF,EAAIE,EAAIF,EAAIu1B,MACVZ,EAAIwB,SACdn2B,EAAIE,EAAIm2B,EAAMtxB,KAAO/E,EAAIy1B,KAAOL,EAAMniB,KACtCjT,EAAIgU,EAAIhU,EAAIgU,EAAIhU,EAAIs1B,KAAOF,EAAMniB,MACvB0hB,EAAIyB,QACdp2B,EAAIE,EAAIm2B,EAAMtxB,KAAOsxB,EAAMrd,MAAQoc,EAAMniB,KACzCjT,EAAIgU,EAAIhU,EAAIgU,EAAIhU,EAAIs1B,KAAOF,EAAMniB,KAElC,CAEDpV,UAAcmC,GACb,OAAIA,EAAIi2B,MACA,oBACGj2B,EAAIk2B,SACP,oBACGl2B,EAAIm2B,QACP,oBACGn2B,EAAIo2B,MACP,yBADD,CAGP,CAEDv4B,UAAyBmC,GACxB,OAAOA,EAAIm2B,SAAWn2B,EAAIo2B,OAASp2B,EAAIi2B,OAASj2B,EAAIk2B,QACpD,CAEDr4B,UAAsBke,GACrB,MAAO,CACNoa,QAAsB,SAAbpa,GAAqC,QAAbA,EACjCqa,MAAoB,OAAbra,GAAmC,SAAbA,EAC7Bka,MAAoB,OAAbla,EACPma,SAAuB,UAAbna,EAEX,CAEDle,UAAoBkP,EAAS2nB,EAAOC,GAEnC,IAAKD,EAAO,MAAO,CAAEx0B,EAAG,EAAG8T,EAAG,EAAGf,KAAM,EAAG+F,MAAO,EAAGC,OAAQ,GAE5D,IAAI1L,EAAQ,EACZ,MAAM+oB,EAAQjD,SAAS8B,aAAapoB,GAC9BqoB,EAAQ/B,SAAS8B,aAAaT,GAE9BzhB,EAAO0hB,EAAIwB,SAAWxB,EAAIyB,MAAQhB,EAAMpc,MAAQoc,EAAMnc,OAEtDsd,EAAaD,EAAMtd,MAAQ,EAAM/F,EAAO,EACxCujB,EAAaF,EAAMrd,OAAS,EAAMhG,EAAO,EAE/CmiB,EAAMniB,KAAOA,EAEb,MAAMzH,EAAM,CAEZA,SAAe,YAgBf,OAdImpB,EAAIwB,SAAWxB,EAAIyB,OACtB5qB,EAAIzG,KAAO,GACXyG,EAAImoB,IAAM,MACVpmB,EAAQ,EACR/B,EAAIinB,UAAY,GAAGllB,OAAWipB,EAAY,QAE1ChrB,EAAImoB,IAAM,GACVnoB,EAAIzG,KAAO,MACXwI,EAAQ,EACR/B,EAAIinB,UAAY,GAAG8D,OAAehpB,OAGnCwa,eAAe0O,kBAAkB/B,EAAOlpB,GAEjC4pB,CACP,QAGAv2B,OAAOC,KAAKu0B,UACZp0B,WAAWo0B,SAAWA,QACtB,EC5UK,MAAMqD,WAETh2B,GAAO,KAEPG,YAAYkM,GACR,IAAKuL,EAAM9N,cAAcuC,GAAU,MAAM,IAAInO,MAAM,kCACnDZ,MAAK0C,EAAO,IAAIkM,SAASG,EAC5B,CAEDklB,IAAQ0E,GACJ,OAAO3uB,EAAW6a,YAAY7kB,MAAK0C,EAAMi2B,EAC5C,CAED3vB,IAAI4vB,EAAQD,EAAUpZ,GAClB,MAAO,CAAC7d,EAAOwB,KACX,MAAM+L,EAAKjP,KACX,OAAIgB,EAAO+D,OAAOrD,GAAeuN,GAAGvM,EAAKsG,IAAI2vB,GACzC1pB,GAAGglB,GAAQ0E,GAAkB1pB,GAAGvM,EAAKi2B,GAAUj3B,EAAOwB,IAC1D01B,EAAOD,GAAYj3B,EACZ6d,EAAQ,CAEtB,CAED1f,YAAYkP,GACR,OAAO,IAAIrB,MAAMqB,EAAQuI,MAAO,IAAIohB,WAAW3pB,GAClD,ECfE,MAAM8pB,QAETne,IAAO,KAEP7X,YAAYkM,GACH/J,MAAMC,QAAQ8J,KAAU/O,MAAK0a,GAAOge,WAAW5c,KAAK/M,GAC5D,CAED/F,IAAI4vB,EAAQD,GACR,MAAiB,QAAbA,EAA2B34B,MAAK0a,GACnB,UAAbie,EACO,CAACj3B,EAAO2O,EAAKiO,KAChB,MAAMxe,EAAKwa,EAAM5Q,MAAMkvB,EAAQl3B,EAAO2O,EAAKiO,GAC3C,OAAOua,QAAQ/c,KAAKhc,EAAG,EAGd,aAAb64B,EACO,CAACj3B,EAAO2O,EAAKiO,KAChB,MAAMxe,EAAKwa,EAAM+B,SAASuc,EAAQl3B,EAAO2O,EAAKiO,GAC9C,OAAOua,QAAQ/c,KAAKhc,EAAG,EAGxB84B,EAAOD,EACjB,CAED1rB,IAAI2rB,EAAQD,EAAUj3B,GAClB,GACS,QADDi3B,EAEI3zB,MAAMC,QAAQ2zB,GACdA,EAAO/xB,SAAQkI,GAAWA,EAAQ4pB,GAAYj3B,IAE9C4Y,EAAMI,IAAIke,EAAQl3B,QAItBk3B,EAAOD,GAAYj3B,EAE3B,OAAO,CACV,CAED7B,gBAAgBue,GACZ,OAAO,IAAI1Q,MAAM0Q,EAAM,IAAIya,QAAQza,GACtC,CAEDve,YAAYue,GACR,OAAI9D,EAAM9N,cAAc4R,GAAcya,QAAQC,SAAS1a,GAClDpZ,MAAMC,QAAQmZ,IACnBA,EAAOA,EAAK1b,KAAIqM,GAAW8pB,QAAQ/c,KAAK/M,KACjC8pB,QAAQC,SAAS1a,IAFSA,CAGpC,CAEDve,WAAWsK,EAAKgV,EAAK9O,EAAKiO,GACtB,OAAOua,QAAQ/c,KAAKxB,EAAM+B,SAASlS,EAAKgV,EAAK9O,EAAKiO,GACrD,CAEDze,aAAasK,EAAKgV,EAAK9O,EAAKiO,GACxB,OAAOua,QAAQ/c,KAAKxB,EAAM5Q,MAAMS,EAAKgV,EAAK9O,EAAKiO,GAClD,QAGGzd,OAAO8H,OAAOkwB,SACd53B,WAAW43B,QAAUA,OACxB,EClEE,MAAME,gBAEZl5B,UAAgB,IAAIwjB,IAQpBxjB,aAAamI,EAAMgxB,GAClBh5B,MAAKkrB,GAAOje,IAAIjF,EAAMgxB,EACtB,CAODn5B,cAAcmI,GACb,OAAOhI,MAAKkrB,GAAOpE,OAAO9e,EAC1B,CAODnI,YAAYmI,GACX,OAAOhI,MAAKkrB,GAAOliB,IAAIhB,EACvB,CASDnI,mBAAmBmI,EAAMgxB,GACxB,MAAM/pB,EAAK8pB,gBACX,IAAIj5B,EAAKmP,EAAGwkB,KAAKzrB,GACjB,OAAIlI,IACJA,EAAKmP,EAAG6a,OAAOkP,GACf/pB,EAAGic,MAAMljB,EAAMlI,GACRA,EACP,CAQDD,cAAcm5B,GACb,MAAMl5B,EAAKyG,SAASC,cAAc,YAElC,OADA8T,EAAMoF,QAAQ5f,EAAIk5B,GACXl5B,CACP,CAQDD,aAAam5B,GACZ,OAAO1e,EAAM2e,kBAAkBD,GAAYA,EAASE,QAAQC,WAAU,GAAQ,IAC9E,CAQDt5B,0BAA0BiG,GACzB,MAAMrF,EAAKuJ,EAAWmB,cAAcrF,GACpC,QAAOkE,EAAWC,WAAWxJ,IAAMA,CACnC,CAQDZ,sBAAsBiG,GACrB,MAAMlE,EAAMkE,EAAMA,EAAIjE,OAAS,GAE/B,QAAO,YAAY8B,KAAK/B,IAAOkE,CAC/B,CAQDjG,qBAAqBiG,GACpB,MAAMlE,EAAMkE,EAAMA,EAAIjE,OAAS,GAC/B,QAAO,gCAAgC8B,KAAK/B,IAAOkE,CACnD,CAUDjG,oBAAoBu5B,GAAS,EAAOpxB,EAAO,GAAIgxB,GAC9C,MAAM/pB,EAAK8pB,gBACX,OAAIK,EAAenqB,EAAGoqB,YAAYrxB,EAAMgxB,GACjC/pB,EAAG6a,OAAOkP,EACjB,CAUDn5B,wBAAwBu5B,GAAS,EAAOpxB,EAAO,GAAIlC,GAClD,MAAMmJ,EAAK8pB,gBACLpyB,EAAIsI,EAAGqqB,eAAexzB,GAC5B,OAAKa,EACEsI,EAAGsqB,aAAaH,EAAQpxB,EAAMrB,GADtBA,CAEf,CAWD9G,6BAA6Bu5B,GAAS,EAAOpxB,EAAO,GAAIlC,GACvD,MAAMmJ,EAAK8pB,gBACX,IACC,IAAIC,EAAW,KAEf,OADII,IAAQJ,EAAW/pB,EAAGwkB,KAAK3tB,IAC3BkzB,EAAiBA,GACrBA,QAAiBlH,SAAS0H,aAAa1zB,GAChCmJ,EAAGsqB,aAAaH,EAAQpxB,EAAMgxB,GACrC,CAAC,MAAOltB,GACRlM,MAAM8b,MAAMzM,EAAInD,EAChB,CACD,OAAO,CACP,CAWDjM,kCAAkCu5B,GAAS,EAAOpxB,EAAO,GAAIlC,GAC5D,MAAMmJ,EAAK8pB,gBACLt4B,EAAKwO,EAAGwqB,mBAAmB3zB,GACjC,IAAKrF,EAAI,OAAOA,EAChB,IACC,IAAIu4B,EAAW,KAEf,OADI/pB,EAAGmqB,SAAQJ,EAAW/pB,EAAGwkB,KAAK9sB,IAC9BqyB,EAAiBA,GACrBA,EAAWhvB,EAAWqB,gBAAgB5K,SAAYA,IAAOA,IAClDwO,EAAGsqB,aAAaH,EAAQpxB,EAAMgxB,GACrC,CAAC,MAAOltB,GACRlM,MAAM8b,MAAM,KAAM5P,EAClB,CACD,OAAOrL,CACP,CAWDZ,0BAA0Bu5B,GAAS,EAAOpxB,EAAO,GAAIlC,GAEpD,IAAKkC,EAAM,OAAO,EAClB,IAAKlC,EAAK,OAAO,EAEjB,MAAMmJ,EAAK8pB,gBAGX,IAAIC,GAAW,EAEf,OAAwB,GAApBlzB,EAAIgR,QAAQ,KACRvQ,SAASmzB,eAAe5zB,EAAIrD,MAAM,KAGrCu2B,IACJA,EAAW/pB,EAAG0qB,iBAAiBP,EAAQpxB,EAAMlC,IAGzCkzB,IACJA,QAAiB/pB,EAAG2qB,qBAAqBR,EAAQpxB,EAAMlC,IAGnDkzB,IACJA,QAAiB/pB,EAAG4qB,gBAAgBT,EAAQpxB,EAAMlC,IAG5CkzB,EACP,EC9NK,MAAMc,QAETj6B,UAAkB,gBAOlBA,gBAAgBC,GACZg6B,SAAQC,GAAQj6B,EAAI,QAAS,OAChC,CAMDD,iBAAiBC,GACbg6B,SAAQC,GAAQj6B,EAAI,OAAQ,QAC/B,CAEDD,UAAeC,EAAIkL,EAAO,QAASqE,EAAK,QAOpCyqB,QAAQE,MAAQ3qB,CACnB,CAEU2qB,mBACP,OAAO3H,aAAaE,QAAQuH,SAAQG,GACvC,CAEUD,iBAAMp4B,GACbywB,aAAaC,QAAQwH,SAAQG,GAAUr4B,GACvCgF,OAAO2e,cAAc,IAAIF,YAAY,WAAY,CAAEC,OAAQ1jB,KAC3D,MAAMs4B,EAAS3zB,SAASiV,KAAKkD,cACzB9c,EACAs4B,EAAOrsB,QAAQssB,QAAUv4B,SAElBs4B,EAAOrsB,QAAQssB,OAE7B,CAMDt6B,+BAEI,OADoB+G,OAAOwzB,WAAW,gCACnB5qB,QAAU,OAAS,OACzC,CAED3P,UAAgBiM,GACZ,MAAMuuB,EAAI,IAAIC,gBAAgB9Y,SAASC,KAAKhf,MAAM,IAClDq3B,QAAQE,MAAQK,EAAErxB,IAAI,QACzB,CAEDnJ,YACI+G,OAAOiB,iBAAiB,aAAciyB,SAAQS,IAC9C,IAAIC,EAAWnI,aAAaE,QAAQuH,SAAQG,IAM5C,OALgB,MAAZO,IACAA,EAAWV,QAAQW,yBAIP,QAAZD,EAA2BV,QAAQY,WACvB,SAAZF,EAA4BV,QAAQa,iBAAxC,CAGH,QAGGb,SAAQc,KACR35B,WAAW64B,QAAUA,OACxB,EC5CE,MAAMe,mBAETh7B,UAAkB8K,SAClB9K,UAAe8K,SAEf9K,kBAAoB,CAChB4nB,OAAQ,CAAE3Z,UAAW,kBACrBgtB,OAAQ,CAAEhtB,UAAW,kBACrBA,UAAW,CAAEA,UAAW,qBACxBitB,KAAM,CAAEjtB,UAAW,gBACnB+b,KAAM,CAAE/b,UAAW,gBACnBktB,OAAQ,CAAEltB,UAAW,kBACrB6qB,SAAU,CAAE7qB,UAAW,oBACvBmtB,KAAM,CAAEntB,UAAW,gBACnBH,OAAQ,CAAEG,UAAW,kBACrBkrB,SAAU,CAAElrB,UAAW,oBACvBC,OAAQ,CAAED,UAAW,kBACrBotB,QAAS,CAAEptB,UAAW,mBACtBpM,MAAO,CAAEoM,UAAW,iBAEpBqtB,MAAO,CAAErtB,UAAW,eAAgBU,OAAO,GAC3C4sB,QAAS,CAAEttB,UAAW,iBAAkBU,OAAO,GAC/ClH,QAAS,CAAEwG,UAAW,kBAAmB1N,KAAM4N,QAC/CqtB,SAAU,CAAEvtB,UAAW,kBAAmBU,OAAO,IAGrDjB,IACA8R,GACA7E,KAAU,EACVwJ,IAEAnhB,YAAY/C,GACR,MAAMmP,EAAKjP,KACXiP,GAAG1B,GAAQzN,EACXmP,GAAG+U,GAAY/U,EAAGqsB,OAAO1zB,KAAKqH,GAC9BA,GAAGoQ,EAASwb,mBAAmB1sB,QAAQc,GAAG1B,GAC7C,CAED+tB,OAAOxvB,GACH,MAAMmD,EAAKjP,KACXiP,EAAGssB,QAAQ10B,SAAQ/G,GAAMmP,GAAGusB,GAAcvsB,GAAG1B,GAAOzN,EAAIgM,IAC3D,CAED0vB,IAAcjuB,EAAMI,EAAQ6X,GACxB,MAAMvW,EAAKjP,KACXiP,GAAGwsB,GAAe9tB,EAAQ6X,GAC1BvW,GAAGysB,GAAc/tB,GACjBsB,GAAG0sB,GAAiBhuB,GACpBsB,GAAG2sB,GAAgBjuB,GACnBsB,GAAG4sB,GAAcluB,GACjBsB,GAAG6sB,GAAenuB,EAAQ6X,GAC1BvW,GAAG8sB,GAAYxuB,EAAMI,EAAQ6X,GAC7BvW,GAAG+sB,GAAYzuB,EAAMI,EAAQ6X,GAC7BvW,GAAGgtB,GAAYtuB,GACfsB,GAAGitB,GAAc3uB,EAAMI,GACvBsB,GAAGktB,GAAgB5uB,EAAMI,EAC5B,CAED8tB,IAAe9tB,EAAQ6X,GACnB,MAAMgF,EAAShF,EAAI7X,OAAOyuB,OAAS5W,EAAI7X,OAAO0uB,MAAQ7W,EAAI7X,OACpD2uB,EAAS9R,aAAkB+R,gBAC3BC,EAAUliB,EAAMmiB,cAAcjS,IAC9BgS,GAAWF,KACbE,EACA7uB,EAAO6c,EAAOxiB,MAAQsS,EAAM+F,SAASmK,GAErC3pB,OAAOkqB,OAAOpd,EAAQ2M,EAAMoiB,SAASlS,IAE5C,CAEDkR,IAAc/tB,GACN3N,KAAKynB,QAAQrE,SAAS8C,KAAKvY,EAAQ,SAAU3N,KAAKynB,QAAQ,GAAM,EACvE,CAEDkU,IAAiBhuB,GACb,MAAMsB,EAAKjP,KACX,GAAIiP,EAAG0tB,gBAAiB,CACpB,MAAM36B,EAAMhB,EAAOgM,OAAOiC,EAAGnB,WAC7B,OAAOvB,EAAOqwB,WAAWjvB,EAAQ3L,EACpC,CACaiN,EAAG3B,WACXzG,SAAQtF,GAAK0N,GAAG4tB,GAAiBlvB,EAAQpM,EAAE,GAAI0N,EAAGvN,OAASH,EAAE,KACtE,CAEDq6B,IAAgBjuB,GACZ,MAAMsB,EAAKjP,KACX,GAAIiP,EAAG6tB,eAAgB,CACnB,MAAM96B,EAAMhB,EAAOgM,OAAOiC,EAAG0pB,UAC7B,OAAO93B,OAAOkqB,OAAOpd,EAAQ3L,EAChC,CACaiN,EAAG8tB,WACXl2B,SAAQtF,GAAK0N,GAAG+tB,GAAgBrvB,EAAQpM,EAAE,GAAI0N,EAAGvN,OAASH,EAAE,KACrE,CAEDs7B,IAAiBlvB,EAAQ3F,EAAMtG,GAC3B,GAAIV,EAAOsY,OAAO3L,EAAO3F,IACrB,OAAOuE,EAAOwB,OAAOJ,EAAQ3F,GAAO2F,EAAO3F,IACpChH,EAAOyC,SAASkK,EAAO3F,MAC9BtG,EAAQV,EAAO+L,MAAMrL,IAEzB6K,EAAOU,IAAIU,EAAQ3F,EAAMtG,EAC5B,CAEDs7B,IAAgBrvB,EAAQ3F,EAAMtG,GACtBV,EAAOsY,OAAO3L,EAAO3F,IACjBhH,EAAOwD,cAAc9C,GACrBiM,EAAO3F,IAAS2F,EAAO3F,GAEvB2F,EAAO3F,GAAQhH,EAAO8L,OAAOpL,GAE1BV,EAAOyC,SAASkK,EAAO3F,IAC9B2F,EAAO3F,GAAQhH,EAAO+L,MAAMrL,GAE5BiM,EAAO3F,GAAQtG,CAEtB,CAEDgK,SAAoBiC,GAChB,MAAMsB,EAAKjP,KACLi9B,EAAoB,IAAbhuB,EAAG3H,QAChB,IAAI8zB,EAAUnsB,EAAGmsB,QACjB,GAAa,IAAT6B,EACA7B,EAAQv0B,SAAQtF,GAAK+Y,EAAMwF,YAAYnS,EAAQpM,SAC5C,CACCoM,EAAOsB,GAAGiuB,MAAU9B,EAAUA,EAAQ/4B,WAC1C,IAAK,MAAMd,KAAK65B,QACNp6B,EAAOsG,QAAQ21B,GACrB3iB,EAAMwF,YAAYnS,EAAQpM,GAE9BoM,EAAOsB,GAAGiuB,KAAYvvB,EAAOsB,GAAGiuB,GACnC,CACJ,CAEDnB,IAAYxuB,EAAMI,EAAQ6X,GACtB,MAAM5jB,EAAMZ,EAAOkE,aAAaqI,EAAK7L,OAASV,EAAOgM,OAAOO,EAAK7L,OAAS6L,EAAK7L,MAC/E1B,KAAKm7B,MAAMt0B,SAAQtF,GAAKyI,EAAWma,aAAaxW,EAAOpM,GAAIoM,GAAQ,EAAM/L,GAAO4jB,IACnF,CAEDwW,IAAYzuB,EAAMI,EAAQ6X,GACtB,GAAKxlB,KAAK6pB,KACV,IACI,IAAIzjB,SAASpG,KAAK6pB,MAAMjiB,KAAK+F,EAA7B,EACH,CAAC,MAAO7B,GACLlM,MAAM8b,MAAM/N,EAAQ7B,EACvB,CACJ,CAEDgwB,IAAenuB,EAAQ6X,GACnBxlB,KAAKq7B,SAASx0B,SAAQtF,GAAK6hB,SAAS8C,KAAKvY,EAAQpM,EAAGikB,IACvD,CAED0W,IAAc3uB,EAAMI,GAChB,GAAI3N,KAAKg7B,OAAQ,CACb,MAAM1xB,EAAMtJ,MAAKm9B,GAAQn9B,KAAKg7B,QACxB9B,EAAU5e,EAAMhV,MAAMgE,GAAK,GACjCtJ,MAAKo9B,GAAc7vB,EAAMI,EAAQurB,EACpC,CACJ,CAED+C,IAAYtuB,GACJ3N,KAAKi7B,OAAMttB,EAAOlH,UAAazG,MAAKm9B,GAAQn9B,KAAKi7B,MACxD,CAEDkC,IAAQz7B,EAAQ,IACZ,OAAOA,EAAMoV,QAAQ,KAAO,EAAI,IAAIpV,OAAWA,KAAW,0BAA0BA,mBACvF,CAEDgK,SAAsB6B,EAAMI,GACxB,MAAM7H,QAAYizB,gBAAgBS,cAAa,EAAMx5B,KAAKg5B,SAAUh5B,KAAKg5B,UACzEh5B,MAAKq9B,GAAe9vB,EAAMI,EAAQ7H,EACrC,CAEDu3B,IAAe9vB,EAAMI,EAAQqrB,GACzB,MAAME,EAAUH,gBAAgBuE,MAAMtE,GACtCh5B,MAAKo9B,GAAc7vB,EAAMI,EAAQurB,EACpC,CAEDkE,IAAc7vB,EAAMI,EAAQurB,GACpB3rB,EAAKutB,OACLxgB,EAAMijB,eAAe5vB,EAAQurB,EAAS3rB,EAAKutB,QAE3CxgB,EAAMyB,YAAYpO,EAAQurB,EAEjC,CAEDhR,OAAOlgB,EAAO,SACV,MAAMiH,EAAKjP,KACNiP,GAAGuL,KACJ4I,SAASxT,GAAGX,GAAG1B,GAAO,KAAMvF,EAAMiH,GAAG+U,IACrC/U,GAAGuL,IAAU,EAEpB,CAEDgjB,SAASx1B,EAAO,SAEZ,MAAMiH,EAAKjP,KACXojB,SAASoM,IAAIvgB,GAAG1B,GAAO,KAAMvF,EAAMiH,GAAG+U,IACtC/U,GAAGuL,IAAU,CAChB,CAEG0iB,SACA,OAAOrC,oBAAmBx4B,EAC7B,CAEGk5B,cACA,MAAMtsB,EAAKjP,KACX,OAAQiP,EAAGtB,QACP,IAAK,OACL,IAAK,OACD,MAAO,CAACsB,GAAG1B,IACf,IAAK,QACD,MAAO,CAAC+M,EAAMyE,KAAK9P,GAAG1B,KAC1B,IAAK,SACD,MAAO,CAAC0B,GAAG1B,GAAMmR,eAEzB,MAAM3H,EAAOuD,EAAM+B,SAAS9V,SAASsI,KAAMI,EAAGtB,QAAQ,GAAO,GAAM/H,QAAO9F,GAAqB,YAAfA,EAAGqc,UAEnF,OADoB,IAAhBpF,EAAK7S,QAAc6S,EAAK1F,KAAKpC,GAAG1B,IAC7BwJ,CACV,CAEGxJ,WAAS,OAAOvN,MAAKuN,EAAQ,CAE7Bka,aAAW,OAAOznB,MAAKqf,EAAOoI,MAAS,CACvCqT,aAAW,OAAO96B,MAAKqf,EAAOyb,MAAS,CACvChtB,gBAAc,OAAO9N,MAAKqf,EAAOvR,SAAY,CAC7C+b,WAAS,OAAO7pB,MAAKqf,EAAOwK,IAAO,CACnCkR,WAAS,OAAO/6B,MAAKqf,EAAO0b,IAAO,CACnCC,aAAW,OAAOh7B,MAAKqf,EAAO2b,MAAS,CACvCrC,eAAa,OAAO34B,MAAKqf,EAAOsZ,QAAW,CAC3CsC,WAAS,OAAOj7B,MAAKqf,EAAO4b,IAAO,CACnCttB,aAAW,OAAO3N,MAAKqf,EAAO1R,MAAS,CACvCI,aAAW,OAAO/N,MAAKqf,EAAOtR,MAAS,CACvCmtB,cAAY,OAAOl7B,MAAKqf,EAAO6b,OAAU,CACzC5zB,cAAY,OAAOtH,MAAKqf,EAAO/X,OAAU,CACzC0xB,eAAa,OAAOh5B,MAAKqf,EAAO2Z,QAAW,CAC3Ct3B,YAAU,OAAO1B,MAAKqf,EAAO3d,KAAQ,CAErCy5B,YAAU,OAAOn7B,MAAKqf,EAAO8b,KAAQ,CACrCC,cAAY,OAAOp7B,MAAKqf,EAAO+b,OAAU,CACzCC,eAAa,OAAOr7B,MAAKqf,EAAOgc,QAAW,CAE3C/tB,iBAEA,OADYtN,MAAKqf,EAAOvR,WAAa,IAC1B1L,MAAM,SAASM,KAAInB,GAAKA,EAAEa,MAAM,OAAMwD,QAAOrE,GAAKP,EAAO0F,iBAAiBnF,IACxF,CAEGw7B,iBAEA,OADY/8B,MAAKqf,EAAOsZ,UAAY,IACzBv2B,MAAM,SAASM,KAAInB,GAAKA,EAAEa,MAAM,OAAMwD,QAAOrE,GAAKP,EAAO0F,iBAAiBnF,IACxF,CAEGu7B,qBACA,OAAO97B,EAAO+yB,OAAO/zB,KAAK24B,SAC7B,CAEGgE,sBACA,OAAO37B,EAAO+yB,OAAO/zB,KAAK8N,UAC7B,CAEDjO,eAAeC,GACX,OAAOyM,EAAO4B,QAAQrO,EAAI+6B,mBAAmB4C,WAChD,CAED59B,eAAeC,EAAIgM,GACf,IAAKhM,GAAI2O,aAAa,aAAc,OACpC,IAAIQ,EAAKnP,EAAG+6B,oBAAmB7e,IACzB/M,aAAc4rB,qBAChB5rB,EAAK,IAAI4rB,mBAAmB/6B,GAC5BA,EAAG+6B,oBAAmB7e,IAAS/M,GAEnCA,EAAGqsB,OAAOxvB,EACb,CAEDjM,cAAcC,GACV,MAAMmP,EAAK,IAAI4rB,mBAAmB/6B,GAElC,OADAmP,EAAGiZ,SACIjZ,CACV,CAQDpP,aAAamL,EAAMqE,EAAIquB,GAAW,GAC9B,MAAMh4B,EAAMm1B,mBAAmB4C,WAC/B58B,OAAOsF,OAAOT,GACTE,QAAOe,GAAKqE,EAAKyD,aAAa9H,EAAEmH,aAChClI,QAAOe,GAAK+2B,IAAaruB,EAAGZ,aAAa9H,EAAEmH,aAC3CjH,SAAQF,GAAK0I,EAAG5C,aAAa9F,EAAEmH,UAAW9C,EAAK4B,aAAajG,EAAEmH,aACtE,CAODjO,kBAAkBC,GACd,MAAM4F,EAAMm1B,mBAAmB4C,WAC/B,OAAO58B,OAAOsF,OAAOT,GAChBE,QAAOe,GAAK7G,EAAG2O,aAAa9H,EAAEmH,aAC9B5J,OAAS,CAEjB,QAGG,MAAMwB,EAAMm1B,mBAAmB4C,WAC/B58B,OAAOsF,OAAOT,GAAKmB,SAAQF,GAAK9F,OAAO8H,OAAOhC,KAC9C9F,OAAO8H,OAAOjD,EACjB,EC7VE,MAAMi4B,cAAc34B,MAEvBqM,KAAKusB,GACD59B,KAAK69B,QAAQD,EAChB,CAEDvoB,MACI,OAAOrV,KAAKuP,OACf,CAEDuuB,OACI,OAAO99B,KAAK,EACf,CAED+9B,UACI,OAAuB,IAAhB/9B,KAAKkE,MACf,EChBE,MAAM85B,cAAch5B,MAEvBi5B,QAAQL,GACJ59B,KAAKqR,KAAKusB,EACb,CAEDM,UACI,OAAOl+B,KAAKuP,OACf,CAEDuuB,OACI,OAAO99B,KAAK,EACf,CAED+9B,UACI,OAAuB,IAAhB/9B,KAAKkE,MACf,ECYE,MAAMi6B,eAETt7B,YAAYiV,EAAKpW,EAAQoW,EAAKoG,EAAS,MACnCle,KAAK8X,IAAMA,EACX9X,KAAK0B,MAAQA,EACb1B,KAAKke,OAASA,EACdle,KAAK+G,KAAO,KACZ/G,KAAKgH,MAAQ,IAChB,CAKGo3B,aACA,OAAqB,OAAdp+B,KAAK+G,MAAgC,OAAf/G,KAAKgH,KACrC,CAKGq3B,kBACA,OAAQr+B,KAAKo+B,MAChB,CAKGE,aACA,OAAOt+B,KAAKke,MACf,CAKGa,WACA,OAAO/e,KAAKke,QAAQa,MAAQ/e,IAC/B,EAOE,MAAMu+B,mBAAmBJ,eAE5Bt7B,YAAYiV,EAAKpW,EAAQoW,GACrBuQ,MAAMvQ,EAAKpW,EACd,CAOD88B,kBAAkBpgB,EAAOpe,MACjBoe,EAAKrX,aAAa/G,KAAKw+B,iBAAiBpgB,EAAKrX,aAC3CqX,EACFA,EAAKpX,cAAchH,KAAKw+B,iBAAiBpgB,EAAKpX,OACrD,CAODy3B,oBAAoBrgB,EAAOpe,MACnBoe,EAAKrX,aAAa/G,KAAKy+B,mBAAmBrgB,EAAKrX,OAC/CqX,EAAKpX,cAAchH,KAAKy+B,mBAAmBrgB,EAAKpX,cAC9CoX,CACT,CAODsgB,mBAAmBtgB,EAAOpe,YAChBoe,EACFA,EAAKrX,aAAa/G,KAAK0+B,kBAAkBtgB,EAAKrX,OAC9CqX,EAAKpX,cAAchH,KAAK0+B,kBAAkBtgB,EAAKpX,OACtD,CAYD23B,OACIC,EACA9mB,EACApW,EAAQoW,GACR/Q,KAAEA,EAAIC,MAAEA,GAAU,CAAED,MAAM,EAAMC,OAAO,IAEvC,IAAK,IAAIoX,KAAQpe,KAAK0+B,oBAClB,GAAItgB,EAAKtG,MAAQ8mB,EAAe,CAC5B,MAAMC,EAAgB93B,GAAsB,OAAdqX,EAAKrX,KAC7B+3B,EAAiB93B,GAAwB,OAAfoX,EAAKpX,MACrC,IAAK63B,IAAkBC,EAAgB,OAAO,EAC9C,GAAID,EAEA,OADAzgB,EAAKrX,KAAO,IAAIo3B,eAAermB,EAAKpW,EAAO0c,IACpC,EAEX,GAAI0gB,EAEA,OADA1gB,EAAKpX,MAAQ,IAAIm3B,eAAermB,EAAKpW,EAAO0c,IACrC,CAEd,CAEL,OAAO,CACV,CAODd,OAAOxF,GACH,IAAK,IAAIsG,KAAQpe,KAAK0+B,oBAAqB,CACvC,GAAItgB,EAAKrX,KAAK+Q,MAAQA,EAElB,OADAsG,EAAKrX,KAAO,MACL,EAEX,GAAIqX,EAAKpX,MAAM8Q,MAAQA,EAEnB,OADAsG,EAAKpX,MAAQ,MACN,CAEd,CACD,OAAO,CACV,CAOD+3B,KAAKjnB,GACD,IAAK,IAAIsG,KAAQpe,KAAK0+B,oBAClB,GAAItgB,EAAKtG,MAAQA,EAAK,OAAOsG,CAGpC,ECjJE,MAAM4gB,KAETt9B,MAAQ,KACRuK,KAAO,KACPgzB,SAAW,KAEXp8B,YAAYnB,EAAOuK,EAAO,KAAMgzB,EAAW,MACvCj/B,KAAK0B,MAAQA,EACb1B,KAAKiM,KAAOA,EACZjM,KAAKi/B,SAAWA,CACnB,CAKDC,UACIl/B,KAAK0B,WAAQ+C,EACbzE,KAAKiM,UAAOxH,EACZzE,KAAKi/B,cAAWx6B,CACnB,CAED06B,SACI,OAAOn/B,KAAK0B,KACf,EAGE,MAAM09B,iBAETxjB,IAAS,GAKL3G,WACA,OAAOjV,MAAK4b,GAAO1X,MACtB,CAKGsX,WACA,OAAOxb,KAAKiV,KAAOjV,MAAK4b,GAAO,GAAK,IACvC,CAKGyjB,WACA,OAAOr/B,KAAKiV,KAAOjV,MAAK4b,GAAO5b,KAAKiV,KAAO,GAAK,IACnD,CASD6U,OAAOpoB,EAAOsgB,EAAUsd,GACpB,OAAO,IAAIN,KAAKt9B,EAAOsgB,EAAUsd,EACpC,CASDC,SAAS9oB,EAAO/U,EAAO0M,GAEnB,IAAKpO,MAAK0xB,GAAUjb,EAAOrI,GAAO,OAAO,EAEzC,MAAMkxB,EAAet/B,MAAK4b,GAAOnF,EAAQ,IAAM,KACzCuL,EAAWhiB,MAAK4b,GAAOnF,IAAU,KACjC2H,EAAO0L,OAAOpoB,EAAOsgB,EAAUsd,GAEjCA,IAAcA,EAAarzB,KAAOmS,GAClC4D,IAAUA,EAASid,SAAW7gB,GAClCpe,MAAK4b,GAAO4jB,OAAO/oB,EAAO,EAAG2H,EAChC,CAMDqhB,YAAY/9B,GACR1B,KAAKu/B,SAAS,EAAG79B,EACpB,CAMDg+B,WAAWh+B,GACP1B,KAAKu/B,SAASv/B,KAAKiV,KAAMvT,EAC5B,CAODi+B,MAAMlpB,GACF,OAAOzW,MAAK4b,GAAOnF,EACtB,CAEDK,QAAQlV,GACJ,OAAO5B,MAAK4b,GAAO9E,QAAQlV,EAC9B,CAQDg+B,SAASnpB,EAAOrI,GAEZ,IAAKpO,MAAK0xB,GAAUjb,EAAOrI,GAAO,OAAO,EAEzC,MAAMkxB,EAAet/B,MAAK4b,GAAOnF,EAAQ,IAAM,KACzCuL,EAAWhiB,MAAK4b,GAAOnF,EAAQ,IAAM,KAK3C,OAHI6oB,IAAcA,EAAarzB,KAAO+V,GAClCA,IAAUA,EAASid,SAAWK,GAE3Bt/B,MAAK4b,GAAO4jB,OAAO/oB,EAAO,EACpC,CAKDyQ,MAAMtC,GAAO,GACLA,GAAM5kB,MAAK4b,GAAO/U,SAAQF,GAAKA,EAAEu4B,YACrCl/B,MAAK4b,GAAS,EACjB,CAKDvZ,UACIrC,MAAK4b,GAAS5b,MAAK4b,GAAOxL,QAAO,CAACyvB,GAAOn+B,YACrC,MAAMsgB,EAAW6d,EAAI,IAAM,KACrBzhB,EAAO,IAAI4gB,KAAKt9B,EAAOsgB,EAAU,MAEvC,OADIA,IAAUA,EAASid,SAAW7gB,GAC3B,CAACA,KAASyhB,EAAI,GACtB,GACN,CAEDC,UACI,OAAO9/B,MAAK4b,GAAOlZ,KAAIoJ,GAAKA,EAAEpK,OACjC,CAEDy9B,SACI,OAAOn/B,MAAK4b,EACf,CAED,EAAEjR,OAAOo1B,kBACE//B,MAAK4b,EACf,CAED8V,IAAUjb,EAAOrI,GAAO,GACpB,MAAM4xB,EAAYhgC,MAAKigC,GAAgBxpB,GACvC,GAAIupB,IACI5xB,EAGA,MAAM,IAAIxN,MAAMZ,MAAK0b,MAG7B,OAAQskB,CACX,CAEDC,IAAgBxpB,GACZ,OAAQzI,OAAOkyB,UAAUzpB,IAAUA,EAAQ,GAAKA,EAAQzW,KAAKiV,IAChE,CAEDyG,MACI,MAAO,oCAAoC1b,KAAKiV,OACnD,CAODpV,YAAYkI,GACR,MAAMgP,EAAO,IAAIqoB,iBAEjB,OADIp6B,MAAMC,QAAQ8C,IAAOA,EAAKlB,SAAQtF,GAAKwV,EAAK2oB,WAAWn+B,KACpDwV,CACV,EC3NE,MAAMopB,KAETz+B,MAEAoW,IAAO,KACPoG,IAAU,KACVhQ,IAEAkyB,KAAU,EACVnN,IAAS,EAETpwB,YAAYiV,EAAKpW,EAAQoW,EAAKoG,EAAS,KAAM+U,EAAQ,GACjDjzB,MAAK8X,GAAOA,EACZ9X,MAAKke,GAAUA,EACfle,MAAKogC,IAA0B,IAAhB1+B,GAAO2+B,KACtBrgC,MAAKizB,GAAS/U,EAASA,EAAO+U,MAAQ,EAAIA,EAC1CjzB,MAAKkO,GAAYlO,MAAKogC,GAAU,QAAK37B,EACrCzE,KAAK0B,MAAQA,CAChB,CAMGknB,cACA,OAAO5jB,MAAMgG,KAAKhL,KAAKsgC,QAAG77B,GAAW,GAAO,GAAM,GACrD,CAEG87B,cACA,OAAOvgC,KAAK4oB,QAAQlmB,KAAIiE,GAAKA,EAAEssB,QAAO3wB,KAAK,IAC9C,CAKGk+B,aAEA,OAAOxgC,KAAK4oB,QAAQlmB,KAAIiE,GAAKA,EAAE8P,QAAOnU,KAAK,IAC9C,CAEGmwB,WACA,OAAOzyB,KAAK4oB,QAAQlmB,KAAIiE,GAAKA,EAAEmR,MAAKxV,KAAK,IAC5C,CAEGmU,YACA,OAAOzW,KAAKke,QAAQtC,MAAM9E,QAAQ9W,OAAS,CAC9C,CAEGiV,WACA,OAAOjV,MAAKkO,IAAWhK,SAAW,CACrC,CAEG+uB,YACA,OAAOjzB,MAAKizB,EACf,CAKGqL,aACA,OAAOt+B,KAAKke,MACf,CAKGkgB,aACA,OAAQp+B,MAAKogC,EAChB,CAEGK,eACA,OAAOzgC,MAAKogC,EACf,CAKG/B,kBACA,OAAOr+B,MAAKogC,IAAWpgC,KAAKiV,KAAO,CACtC,CAKG6C,UAEA,OADA9X,MAAK8X,KAAS9X,KAAKwgC,OACZxgC,MAAK8X,EACf,CAEG8D,YACA,OAAO5b,MAAKkO,EACf,CAKGgQ,aACA,OAAOle,MAAKke,EACf,CAKGa,WACA,OAAO/e,KAAKke,QAAQa,MAAQ/e,IAC/B,CAKG0gC,cACA,OAAO1gC,MAAKke,IAASjJ,KAAOjV,KAAKyW,MAAQ,CAC5C,CAEGkqB,iBACA,OAAO3gC,KAAK0gC,QAAU1gC,MAAKkO,GAAU,QAAKzJ,CAC7C,CAEGm8B,gBACA,OAAO5gC,KAAK0gC,QAAU1gC,MAAKkO,GAAUlO,MAAKkO,GAAUhK,OAAS,QAAKO,CACrE,CAEGwH,WACA,OAAOjM,KAAK6gC,KAAK7gC,MAAM,GAAO,GAAOiM,OAAOvK,OAAS1B,KAAKqiB,aAAeriB,KAAKke,QAAQmE,WACzF,CAEG4c,eACA,MAAM7gB,EAAOpe,KAAK8gC,gBAClB,OAAQ1iB,GAAMigB,YAAejgB,EAAKwiB,UAAYxiB,GAAQpe,KAAKsgC,GAAGtgC,MAAM,GAAO,GAAOiM,OAAOvK,KAC5F,CAEG2gB,kBACA,OAAOriB,KAAK0gC,QAAU1gC,MAAKke,IAAQhQ,GAAUlO,KAAKyW,MAAQ,QAAKhS,CAClE,CAEGq8B,sBACA,OAAO9gC,KAAKyW,MAAQ,EAAIzW,MAAKke,IAAQhQ,GAAUlO,KAAKyW,MAAQ,QAAKhS,CACpE,CAKDyiB,QACQlnB,MAAKkO,KACLlO,MAAKkO,GAAUrH,SAAQF,GAAKA,EAAEu4B,cAC9Bl/B,MAAKkO,GAAY,GAExB,CAMDgxB,UACIl/B,KAAKknB,QACLlnB,MAAK8X,GAAO,KACZ9X,KAAK0B,MAAQ,KACb1B,MAAKke,GAAU,IAClB,CAUD2iB,MAAMziB,EAAOpe,KAAMmG,GAAS,EAAO46B,GAAY,EAAM1+B,GAAU,EAAO2+B,GAAO,GACzE,MAAMr6B,EAAIR,EAASiY,EAAK1c,MAAQ0c,EAEhC,GADI2iB,IAAc1+B,GAAW+b,EAAK6U,OAAS,UAAStsB,GAChDyX,GAAKlQ,IAAWhK,OAChB,IAAK,IAAIua,KAASL,GAAKlQ,SACZlO,KAAK6gC,KAAKpiB,EAAOtY,GAAQ,EAAM9D,EAAS2+B,GAGvD,GAAIA,EAAM,CACN,MAAMpD,EAAOxf,EAAKiE,aAAejE,EAAKF,OAAOmE,YACzCub,UAAa59B,KAAK6gC,KAAKjD,EAAMz3B,GAAQ,EAAM9D,EAAS2+B,GAC3D,CAGGD,GAAa1+B,GAAW+b,EAAK6U,OAAS,UAAStsB,EACtD,CASD25B,IAAIliB,EAAOpe,KAAMmG,GAAS,EAAO46B,GAAY,EAAM1+B,GAAU,EAAO2+B,GAAO,GACvE,MAAMr6B,EAAIR,EAASiY,EAAK1c,MAAQ0c,EAEhC,GADI2iB,IAAc1+B,GAAW+b,EAAK6U,OAAS,UAAStsB,GAChDq6B,EAAM,CACN,IAAIpD,EAAOxf,EAAK0iB,gBAChBlD,EAAOA,GAAM6C,SAAW7C,EAAKgD,UAAYhD,EACrCA,UAAa59B,KAAKsgC,GAAG1C,EAAMz3B,GAAQ,EAAM9D,EAAS2+B,GACzD,CACG5iB,EAAKF,eACEle,KAAKsgC,GAAGliB,EAAKF,OAAQ/X,GAAQ,EAAM9D,EAAS2+B,IAEnDD,GAAa1+B,GAAW+b,EAAK6U,OAAS,UAAStsB,EACtD,CAMDuY,KAAOlf,KAAK6gC,KASZh6B,QAAQmd,EAAUgd,GAAO,EAAO3+B,GAAU,GACtCrC,KAAKwW,OAAM,CAAC4H,EAAM3H,KACduN,EAAS5F,EAAM3H,IACR,IACRuqB,EAAM3+B,EACZ,CASDmU,MAAMwN,EAAUgd,GAAO,EAAO3+B,GAAU,GACpC,MAAM2U,EAAKhX,KAAKihC,QAAQD,EAAM3+B,GAC9B,IAAIoV,GAAM,EACN9U,EAAI,EACR,IAAK,IAAIyb,KAAQpH,EAEb,GADAS,EAAMuM,EAAS5F,EAAMzb,MAChB8U,EAAK,MAEd,OAAOA,CACV,CASDsnB,KAAK/a,EAAUgd,GAAO,EAAO3+B,GAAU,GACnC,MAAM2U,EAAKhX,KAAKihC,QAAQD,EAAM3+B,GAC9B,IAAIM,EAAI,EACR,IAAK,IAAIyb,KAAQpH,EACb,GAAIgN,EAAS5F,EAAMzb,KAAM,OAAOyb,CAGvC,CASDxY,OAAOoe,EAAUgd,EAAM3+B,GACnB,MAAO,IAAIrC,MAAKkhC,GAAUld,EAAUgd,EAAM3+B,GAC7C,CAED8+B,KAAWnd,EAAUgd,EAAM3+B,GACvB,MAAM2U,EAAKhX,KAAKihC,QAAQD,EAAM3+B,GAC9B,IAAK,IAAI+b,KAAQpH,EAAI,CACPgN,EAAS5F,WACJA,EAClB,CACJ,CAOD6iB,SAASD,EAAM3+B,GACXA,QAAiBrC,KAAKsgC,GAAGtgC,MAAM,GAAO,GAAO,EAAOghC,SAAehhC,KAAK6gC,KAAK7gC,MAAM,GAAO,GAAQ,EAAOghC,EAC5G,CAQDhO,OAAOlb,EAAKpW,EAAQoW,GAChB,IAAIspB,EAWJ,OAVItpB,aAAeqoB,MACfroB,GAAIoG,GAAUle,KACd8X,GAAImb,GAASjzB,MAAKizB,GAAS,EAC3BmO,EAAStpB,GAETspB,EAAS,IAAIjB,KAAKroB,EAAKpW,EAAO1B,MAElCA,MAAKogC,IAAU,EACfpgC,MAAKkO,KAAc,GACnBlO,MAAKkO,GAAUmD,KAAK+vB,GACbA,CACV,CAUDzC,OAAOC,EAAe9mB,EAAKpW,EAAQoW,GAC/B,IAAK,IAAIsG,KAAQpe,KAAKkf,OAClB,GAAId,EAAKtG,MAAQ8mB,EAAe,CAC5B,MAAMwC,EAAS,IAAIjB,KAAKroB,EAAKpW,EAAO0c,GAIpC,OAHApe,MAAKogC,IAAU,EACfpgC,MAAKkO,KAAc,GACnBkQ,GAAKlQ,GAAUmD,KAAK+vB,GACbA,CACV,CAEL,OAAO,CACV,CAOD9jB,OAAOxF,GAEH,MAAM7I,EAAKjP,KAEX,GAAI8X,EAAK,CACL,MAAMsG,EAAOnP,EAAGoyB,UAAUvpB,GAE1B,OADAsG,GAAMd,SACCc,CACV,CAED,GAAInP,EAAGqvB,OAAQ,MAAM,IAAI19B,MAAM,gCAC/B,MAAMwd,EAAOnP,EAAGiP,OACVgjB,EAAW9iB,GAAKlQ,GAAUtI,QAAOgZ,GAAKA,IAAM3P,IAClD,OAAIiyB,EAASh9B,SAAWka,GAAKlQ,GAAUhK,SACnCka,GAAKlQ,GAAYgzB,EACVjyB,EAId,CAODoyB,UAAUvpB,GACN,IAAK,IAAIsG,KAAQpe,KAAKkf,OAClB,GAAId,EAAKtG,MAAQA,EAAK,OAAOsG,CAGpC,CAMDkjB,QAAQn7B,EAAQ46B,EAAW1+B,GACvB,MAAO,IAAIrC,KAAK6gC,KAAK7gC,KAAMmG,EAAQ46B,EAAW1+B,GACjD,CAMDk/B,SAASx5B,GAEL,OADIA,GAAMo4B,KAAKn1B,KAAKhL,KAAM+H,GACnB/H,IACV,CAMDm/B,SACI,OAAIn/B,KAAKizB,MAAQ,EAAUjzB,MAAKkO,IAAWxL,KAAIiE,GAAKA,EAAEw4B,YAAa,CAAA,EAC5Dn/B,KAAKo+B,OAAS,CAAEtmB,IAAK9X,KAAK8X,IAAKpW,MAAO1B,KAAK0B,OAC9C,CACIoW,IAAK9X,KAAK8X,IACVpW,MAAO1B,KAAK0B,MACZuf,MAAOjhB,MAAKkO,GAAUxL,KAAIiE,GAAKA,EAAEw4B,WAE5C,CAKD,EAAEx0B,OAAOo1B,kBACE//B,KAAK6gC,MACf,CAODhhC,YAAYqe,EAAQnW,GAChB,MAAMy5B,EAAMz5B,GAAQmW,EACdujB,EAAYvjB,aAAkBiiB,KACpC,GAAIn7B,MAAMC,QAAQu8B,GAAM,CACpB,IAAKC,EAAW,MAAM,IAAI7gC,MAAM,sCAEhC,OADA4gC,EAAI36B,SAAQF,GAAKw5B,KAAKn1B,KAAKkT,EAAQvX,KAC5BuX,CACV,CACD,MAAM+C,MAAEA,KAAUjf,GAAQw/B,EACpBznB,EAAO,IAAIomB,KAAKn+B,EAAI8V,IAAK9V,EAAK+F,EAAOmW,OAASzZ,GAGpD,OAFIg9B,GAAWvjB,EAAO8U,OAAOjZ,GACzBkH,GAAOkf,KAAKn1B,KAAK+O,EAAMkH,GACpBlH,CACV,EC/ZL,MAAM2nB,gCAAgCxS,QAElCrvB,UAAmB,KACnBA,UAAmB8K,SAEnBg3B,IAAY,IAAIte,IAEhB3gB,GAAO,IAAI2gB,IAEXxgB,YAAYiV,GACR,GAAIA,GAAO4pB,yBAAwBE,GAAW,MAAM,IAAIhhC,MAAM,sCAC9DynB,OACH,CAODwZ,WAAWzhC,EAAMqI,GACbzI,MAAK2hC,GAAU10B,IAAI7M,EAAMqI,EAC5B,CAMDq5B,cAAc1hC,GACVJ,MAAK2hC,GAAU7a,OAAO1mB,EACzB,CAMD2hC,WAAW3hC,GACP,OAAOJ,MAAK2hC,GAAU34B,IAAI5I,EAC7B,CAQD4hC,WAAW5hC,EAAM4H,EAAMi6B,GACnB,MAAMx5B,EAAQzI,KAAK+hC,WAAW3hC,GAC9B,OAAOqI,EAAQ,IAAIA,EAAMT,EAAMi6B,QAAWx9B,CAC7C,CAMDorB,SAAS7tB,GACL,MAAMiN,EAAKjP,KACXiP,GAAGizB,GAAQlgC,GACX,MAAMglB,EAAQ/X,EAAG8vB,KAAK/8B,EAAIxB,IAC1B,GAAIwmB,GAAShlB,EAAb,CACA,GAAIglB,EAAO,MAAM,IAAIpmB,MAAM,QAAQoB,EAAIxB,6CACvCyO,GAAGvM,EAAKuK,IAAIjL,EAAIxB,GAAIwB,GACpBiN,EAAGwgB,KAAK,YAAYztB,EAAIxB,KAAMwB,GAC9BiN,EAAGwgB,KAAK,WAAYztB,EAJK,CAK5B,CAODmgC,WAAWngC,GACP,MAAMiN,EAAKjP,KACPgB,EAAOoC,SAASpB,KAAMA,EAAMiN,EAAG8vB,KAAK/8B,IACxCiN,GAAGizB,GAAQlgC,GACX,MAAMyV,EAAMxI,GAAGvM,EAAKokB,OAAO9kB,EAAIxB,IAK/B,OAJIiX,IACAxI,EAAGwgB,KAAK,cAAcztB,EAAIxB,KAAMwB,GAChCiN,EAAGwgB,KAAK,aAAcztB,IAEnByV,CACV,CAODsnB,KAAKn9B,GACD,OAAO5B,MAAK0C,EAAKsG,IAAIpH,EACxB,CASD8J,WAAWlL,EAAK,GAAI4G,EAAQyoB,GAAW,GACnC,IAAKrvB,EAAI,MAAM,IAAII,MAAM,6BACzB,MAAMqO,EAAKjP,KACX,GAAI6vB,EAAU,CACV,MAAMuS,EAAKnzB,EAAG8vB,KAAKv+B,GACnB,GAAI4hC,EAAI,OAAOA,CAClB,CACD,MAAMhiC,EAAOyvB,EAAW,WAAa,aAErC,aADMxH,MAAMnE,KAAK,GAAG9jB,KAAQI,IAAM4G,GAC3B6H,EAAG8vB,KAAKv+B,EAClB,CAED0hC,IAAQlgC,GAEP,CAEUqH,gBAEP,OADKq4B,yBAAwB5I,KAAW4I,yBAAwB5I,GAAY,IAAI4I,wBAAwBA,yBAAwBE,KACzHF,yBAAwB5I,EAClC,QAGGj4B,OAAOC,KAAK4gC,yBACZzgC,WAAWohC,oBAAsBX,yBAAwBr4B,EAC5D,EAIO,MAACg5B,EAAsBphC,WAAWohC,oBC7HvC,MAAMC,4BAA4BpT,QAErC1uB,GAAM,KACN+hC,IAAc,KAEd1/B,YAAYmF,EAAMi6B,GAAU,GACxB5Z,QACWroB,MACRQ,EAAMwH,GAAQ+D,KAAKE,OAClBg2B,GAFOjiC,KAEKwiC,QACnB,CAMDC,aAAaC,GACJA,IACL1iC,MAAKuiC,KAAgB,IAAIjsB,IACzBtW,MAAKuiC,GAAYllB,IAAIqlB,GACxB,CAMDC,gBAAgBD,GACRA,GAAW1iC,MAAKuiC,IAAazb,OAAO4b,EAC3C,CAMGliC,SACA,OAAOR,MAAKQ,CACf,CAKDgiC,SAEIH,EAAoBxS,SADT7vB,WAERyvB,KAAK,UACX,CAKDmT,UAEIP,EAAoBF,WADTniC,WAERyvB,KAAK,WACX,CAMGoT,mBACA,QAAOR,EAAoBtD,KAAK/+B,KAAKQ,GACxC,CASDsiC,OAAOj4B,EAAOzK,EAAM2H,EAAM2T,GACtB1b,KAAKyvB,KAAK/T,EAAQ,QAAUtb,EAAM,CAAEA,KAAMA,EAAMsb,MAAOA,EAAO7Q,MAAOA,EAAO9C,KAAMA,IAAQ,EAC7F,CAOD2D,WAAWb,GACP,MAAMoE,EAAKjP,KACX,IAAI+H,EAAO,KACX,IACIA,QAAakH,EAAG8zB,OAAOl4B,GACvBoE,GAAGszB,IAAa17B,SAAQ+X,GAAKA,EAAEokB,WAAWj7B,KACtCA,GAAMkH,EAAG6zB,OAAOj4B,EAAO,OAAQ9C,EACtC,CAAC,MAAO+D,GAEL,MADAmD,EAAG6zB,OAAOj4B,EAAO,OAAQ9C,EAAM+D,GACzBA,CACT,CACD,OAAO/D,CACV,CAOD2D,YAAYb,EAAO9C,GACf,MAAMkH,EAAKjP,KACX,IAAIwJ,EAAS,KACb,IACIA,QAAeyF,EAAGg0B,QAAQp4B,EAAO9C,GACjCkH,GAAGszB,IAAa17B,SAAQ+X,GAAKA,EAAEskB,YAAYn7B,KACvCyB,GAAQyF,EAAG6zB,OAAOj4B,EAAO,QAAS9C,EACzC,CAAC,MAAO+D,GAEL,MADAmD,EAAG6zB,OAAOj4B,EAAO,QAAS9C,EAAM+D,GAC1BA,CACT,CACD,OAAOtC,CACV,CAODkC,aAAab,GACT,MAAM,IAAIjK,MAAM,8DACnB,CAQD8K,cAAcb,EAAO9C,GACjB,MAAM,IAAInH,MAAM,+DACnB,EC7HE,MAAMuiC,oBAAoBb,oBAE7BziC,UAAgB,CAAC,GAAI,OAAQ,QAAS,SACtCA,UAAiB,CAAC,MAAO,MAAO,OAAQ,UAExCyJ,IAAO,GACPoqB,IAAW,CAAA,EACX0P,IAAU,MACVC,IAAU,OACV5b,IAAU,GACV6b,IAAQ,GAERC,IAAQ,EACR/rB,IAAS,EAETmB,IAAQ,GACR/S,IAAU,GAOV/C,YAAYmF,EAAMi6B,GACd5Z,MAAMrgB,EAAMi6B,EACf,CAOGqB,WACA,OAAOtiC,EAAOoE,UAAUpF,MAAKsjC,GAChC,CAOGA,SAAK1hC,GACL,MAAMqN,EAAKjP,KACX4B,EAAMZ,EAAOoE,UAAUxD,GAEvB,IADauhC,aAAYK,GAAOt5B,SAAStI,GAC9B,MAAM,IAAIhB,MAAM,KAAM,0BAA0BuiC,aAAYK,MAKvE,MAJiB,UAAbv0B,GAAGq0B,IAAqBr0B,GAAGq0B,IAAS1hC,IACpCqN,GAAGm0B,GAAU,MACbn0B,GAAGo0B,GAAU,QAEVrjC,MAAKsjC,GAAQ1hC,CACvB,CAMGwhC,aACA,OAAOpjC,MAAKojC,EACf,CAOGA,WAAOxhC,GAGP,OAFW5B,KACKyjC,SAAiBN,aAAYO,GAAQx5B,SAAStI,IACnD,MAAM,IAAIhB,MAAM,KAAM,4BAA4BuiC,aAAYO,MACzE,OAHW1jC,MAGDojC,GAAUxhC,CACvB,CAMGyhC,aACA,OAAOrjC,MAAKqjC,EACf,CAOGA,WAAOzhC,GAGP,OAFW5B,KACKyjC,SAAiBN,aAAYO,GAAQx5B,SAAStI,IACnD,MAAM,IAAIhB,MAAM,KAAM,4BAA4BuiC,aAAYO,MACzE,OAAO1jC,MAAKqjC,GAAUzhC,CACzB,CAMG8xB,cACA,MAAO,IAAK1zB,MAAK0zB,GACpB,CAMGA,YAAQ9xB,EAAM,IACdA,EAAMZ,EAAOgM,OAAOpL,GACT5B,MACR0zB,GAAW,IAAK9xB,EACtB,CAMG0H,UACA,OAAOtJ,MAAKsJ,EACf,CAMGA,QAAI1H,EAAM,IACC5B,MACRsJ,GAAO1H,CACb,CAMG4V,YACA,OAAOxX,MAAKwX,EACf,CAMGA,UAAM5V,EAAM,IACZ5B,MAAKwX,GAASxW,EAAO+L,MAAMnL,EAAK,GACnC,CAMG2hC,WACA,OAAOvjC,MAAKujC,EACf,CAMGA,SAAK3hC,EAAM,GACX5B,MAAKujC,GAAQviC,EAAO+L,MAAMnL,EAAK,EAClC,CAOGgE,aACA,OAAO5F,MAAK4F,EACf,CAEGA,WAAOhE,GAEPA,EAAMA,GAAO,GACbA,EAAMZ,EAAO+yB,OAAOnyB,GAAOZ,EAAOgM,OAAOpL,GAAOA,EAFrC5B,MAGR4F,GAAUZ,MAAMC,QAAQrD,GAAOA,EAAM,CAACA,EAC5C,CAOG+W,WACA,OAAO3Y,MAAK2Y,EACf,CAEGA,SAAK/W,GAELA,EAAMA,GAAO,GACbA,EAAMZ,EAAO+yB,OAAOnyB,GAAOZ,EAAOgM,OAAOpL,GAAOA,EAFrC5B,MAGR2Y,GAAQ3T,MAAMC,QAAQrD,GAAOA,EAAM,CAACA,EAC1C,CASG6lB,aAEA,IAAI/hB,EAAM,GACV,OAFW1F,KAEAsjC,MACP,IAAK,QACD59B,EAAM,6DACN,MACJ,IAAK,OACDA,EAAM,kDAGd,OAVW1F,MAUDynB,IAAW/hB,CACxB,CAOG+hB,WAAO7lB,EAAM,IACF5B,MACRynB,GAAU7lB,CAChB,CAKG8B,UACA,MAAMuL,EAAKjP,KACX,OAAOiP,GAAG00B,GAAO10B,GAAG3F,GAAM2F,GAAGs0B,GAAOt0B,GAAGuI,GAAQvI,GAAGrJ,GAASqJ,GAAG0J,GACjE,CAEDgrB,IAAOr6B,EAAKi6B,EAAM/rB,EAAO5R,EAAQ+S,GAE7B,GAAI3X,EAAOwD,cAAc8E,GAAM,MAAM,IAAI1I,MAAM,4BAC/C+X,EAAOA,EAAOtT,KAAK8H,UAAUwL,GAAQ,GACrC/S,EAASA,EAASP,KAAK8H,UAAUvH,GAAU,GAC3C,MAAM4H,EAAM,CAAEgK,MAAOA,EAAO+rB,KAAMA,EAAM5qB,KAAMirB,mBAAmBjrB,GAAO/S,OAAQg+B,mBAAmBh+B,IACnG,OAAO0D,EAAMtI,EAAO6iC,YALT7jC,KAKwBynB,OAAQja,EAC9C,CAMGs2B,gBACA,MAAqB,KAAd9jC,KAAKsjC,IACf,CAMGG,cACA,MAAqB,UAAdzjC,KAAKsjC,IACf,CAMGS,eACA,MAAO,CAAC,OAAQ,SAAS75B,SAASlK,KAAKsjC,KAC1C,CAOD53B,aAAab,GACT,MAAMoE,EAAKjP,KACX,GAAIiP,EAAG60B,UAAW,OAClB,IAAK70B,GAAGm0B,GAAS,OAAO/a,MAAM0a,OAAOl4B,GACrC,GAAIoE,EAAG80B,SAAU,aAAajS,SAAS2B,KAAKxkB,EAAGvL,IAAKuL,GAAGm0B,GAASn0B,GAAGykB,IAAU,GAC7E,IAAKzkB,EAAGw0B,QAAS,OACjB,MAAMhjC,EAAKuJ,EAAWmB,cAAc8D,GAAGm0B,IACvC,IAAK3iC,EAAI,MAAM,IAAIG,MAAM,oCACzB,OAAOH,EAAGwO,EAAGs0B,KAAMt0B,EAAGuI,MAAOvI,EAAGrJ,OAAQqJ,EAAG0J,KAC9C,CAQDjN,cAAcb,EAAO9C,GACjB,MAAMkH,EAAKjP,KACX,GAAIiP,EAAG60B,UAAW,OAClB,IAAK70B,GAAGo0B,GAAS,OAAOhb,MAAM4a,QAAQp4B,GACtC,IAAKoE,EAAG80B,SAAU,aAAajS,SAAS2B,KAAKxkB,EAAGvL,IAAKuL,GAAGo0B,GAASp0B,GAAGykB,IAAU,EAAM3rB,GACpF,IAAKkH,EAAGw0B,QAAS,OACjB,MAAMhjC,EAAKuJ,EAAWmB,cAAc8D,GAAGo0B,IACvC,IAAK5iC,EAAI,MAAM,IAAIG,MAAM,oCACzB,OAAOH,EAAGsH,EACb,CAODlI,gBAAgBmI,GACZ,OAAO,IAAIm7B,YAAYn7B,GAAM,EAChC,QAGGq6B,EAAoBR,WAAW,SAAUsB,YAC5C,ECzTE,MAAMa,uBAAuBb,YAEhCp7B,IAAQ,GAERk8B,IAAUl8B,EAAO,IAEb,IAAIm8B,EAAU,GASd,OAPIA,EADAl/B,MAAMC,QAAQ8C,GACJA,EACH/C,MAAMC,QAAQ8C,EAAKA,MAChBA,EAAKA,KAEL,CAACA,GAGRm8B,CACV,CAEDC,IAAYp8B,GACR,MAAMkH,EAAKjP,KACX+H,EAAOoO,OAAOiuB,SAASr8B,EAAMkH,EAAG0J,MAChC,IAAInB,EAAqB,IAAbvI,EAAGuI,MAAczP,EAAK7D,OAAS+K,EAAGuI,MAE9C,OADAzP,EAAOA,EAAKtF,MAAMwM,EAAGs0B,KAAMt0B,EAAGs0B,KAAO/rB,EAExC,CAED0P,QACIlnB,MAAK+H,GAAQ,EAChB,CAEDirB,OAAOjrB,GACH,IAAIA,EAAM,OAAO,EACjB,MAAMkH,EAAKjP,KAGX,OAFA+H,EAAOkH,GAAGg1B,GAAUl8B,GACpBkH,GAAGlH,GAAQkH,GAAGlH,GAAMuI,OAAOvI,GACpBkH,GAAGlH,EACb,CAEDuV,OAAOvV,GACH,MAAMkH,EAAKjP,KAEX,OADAiP,GAAGlH,GAAQkH,GAAGlH,GAAMnC,QAAOe,IAAUoB,IAC9BkH,GAAGlH,EACb,CAOD2D,aAAab,GACT,MAAMoE,EAAKjP,KAEX,GAAwB,IAApBiP,GAAGlH,GAAM7D,OAAc,CACvB,MAAM6D,QAAasgB,MAAM0a,SACzB9zB,GAAGlH,GAAQkH,GAAGg1B,GAAUl8B,EAC3B,CAED,IAAIA,EAAOoO,OAAOkuB,WAAWp1B,GAAGlH,GAAOkH,EAAGrJ,OAAQqJ,EAAGsI,OAAQtI,EAAGuI,OAEhE,OADAzP,EAAOkH,GAAGk1B,GAAYp8B,GACfA,CACV,CAED66B,UACI5iC,MAAK+H,GAAQ,GACbsgB,MAAMua,SACT,CAEG0B,WAAO1iC,GACI5B,KACR4F,OAAShE,EAAM,CAAC,CAACF,MAAQE,IAAQ,GADzB5B,KAERukC,MAMN,CAOD1kC,gBAAgBmI,GACZ,OAAO,IAAIg8B,eAAeh8B,GAAM,EACnC,QAGGq6B,EAAoBR,WAAW,SAAUmC,eAC5C,EC3FE,MAAMQ,iBAAiBrE,KAE1B3xB,KAAS,EACTi2B,KAAU,EACVC,KAAW,EACXC,KAAY,EAEZC,SAAengC,EACfogC,SAAgBpgC,EAChBqgC,SAAergC,EAEf5B,YAAYiV,EAAKpW,EAAQoW,EAAKoG,EAAS,KAAM+U,EAAQ,GACjD5K,MAAMvQ,EAAKpW,EAAOwc,EAAQ+U,KAEJ,IAAlBvxB,GAAOqjC,QAAoB/kC,KAAKwO,OAAS0P,GAAQymB,YAAW3kC,KAAK2kC,UAAW,IAC3D,IAAjBjjC,GAAOsjC,QAAgBhlC,KAAK0kC,SAAU,IACtB,IAAhBhjC,GAAOujC,OAAejlC,KAAKykC,QAAS,EAC3C,CAEDS,cAAc3V,GACV,MAAMxQ,EAAO/e,KAAK+e,MACjBA,GAAK+lB,KAAiB,IAAIxuB,KAAO+G,IAAIkS,EACzC,CAED4V,iBAAiB5V,GACbvvB,KAAK+e,MAAK+lB,IAAche,OAAOyI,EAClC,CAKG/gB,YACA,OAA4B,IAArBxO,KAAK+e,MAAKvQ,EACpB,CAEGA,UAAM5M,GACN5B,KAAK+e,MAAKvQ,IAAiB,IAAR5M,CACtB,CAEGwjC,cACA,OAAIplC,KAAKizB,MAAQ,GACVjzB,KAAKke,QAAQumB,MACvB,CAKGA,aACA,OAAIzkC,KAAKizB,MAAQ,IACVjzB,KAAKo+B,OAASp+B,KAAKke,QAAQumB,OAASzkC,MAAKykC,GACnD,CAEGA,WAAO7iC,IACPA,GAAc,IAARA,GAEF5B,KAAKqlC,SAELrlC,KAAKslC,UAEZ,CAKGZ,cACA,OAAO1kC,MAAK0kC,EACf,CAEGA,YAAQ9iC,GACRA,GAAc,IAARA,EACN,MAAMmd,EAAO/e,KAAK+e,KACZwmB,EAAUvlC,MAAK0kC,IAAY9iC,EAC3BgjC,EAAc7lB,EAAK6lB,cAEzB7lB,GAAK6lB,QAAengC,EACpBzE,MAAK0kC,GAAW9iC,EACZgjC,GAAeA,IAAgB5kC,OAC/B4kC,EAAYF,SAAU,GAGtB9iC,IAAKmd,GAAK6lB,GAAe5kC,MACzBulC,GAASxmB,GAAK+lB,IAAcj+B,SAAS+X,GAAMA,EAAE4mB,iBAAiBxlC,OACrE,CAMG2kC,eACA,OAAO3kC,MAAK2kC,EACf,CAEGA,aAAS/iC,GACTA,GAAc,IAARA,EACN,MAAMmd,EAAO/e,KAAK+e,KACZ8lB,EAAe9lB,EAAK8lB,eACpBU,EAAUvlC,MAAK2kC,IAAa/iC,EAClC5B,MAAK2kC,GAAY/iC,EACbA,IACIijC,GAAgBA,IAAiB7kC,OAAS+e,EAAKvQ,QAC/Cq2B,EAAaF,UAAW,GAE5B5lB,GAAK8lB,GAAgB7kC,MAErBulC,IACAxmB,GAAK+lB,IAAcj+B,SAAS+X,GAAMA,EAAE6mB,qBAAqBzlC,KAAM6kC,KAC3D9lB,EAAKvQ,OAAOuQ,GAAK+lB,IAAcj+B,SAAS+X,GAAMA,EAAE6mB,qBAAqBzlC,KAAKke,OAAQ2mB,KAE7F,CAEGa,yBACA,OAAO1lC,KAAK2kC,UAAY3kC,KAAKq+B,aAAer+B,KAAK4b,MAAM1X,OAASlE,KAAK4b,MAAMhW,QAAOzE,GAAKA,EAAEwjC,WAAUzgC,MACtG,CAYDyhC,YACI,MAAM5mB,EAAO/e,KAAK+e,KAClB,IAAKA,EAAKvQ,MAGN,OAFAxO,KAAK4lC,mBACL5lC,KAAK2kC,UAAW,GAGpB3kC,MAAK6lC,IAAe,GACpB9mB,GAAK8lB,GAAgB7kC,KACrB+e,GAAK+lB,IAAcj+B,SAAS+X,GAAMA,EAAEknB,cAAc/mB,IACrD,CAED6mB,cACI,MAAM7mB,EAAO/e,KAAK+e,KAClB/e,MAAK6lC,IAAe,GACpB9mB,GAAK8lB,QAAgBpgC,EACrBsa,GAAK+lB,IAAcj+B,SAAS+X,GAAMA,EAAEmnB,gBAAgBhnB,IACvD,CAMD6lB,cACI,MAAMxmB,EAAOpe,KAAK+e,MAAK6lB,GACvB,OAAOxmB,GAAMsmB,QAAUtmB,OAAO3Z,CACjC,CAMDogC,eACI,MAAMzmB,EAAOpe,KAAK+e,MAAK8lB,GACvB,OAAOzmB,GAAMumB,SAAWvmB,OAAO3Z,CAClC,CAODuhC,gBACI,MAAMjnB,EAAO/e,KAAK+e,KAClB,IAAKA,EAAKvQ,MAAO,CACb,MAAM4P,EAAOW,EAAK8lB,eAClB,OAAOzmB,GAAMumB,SAAW,CAACvmB,GAAQ,EACpC,CACD,MAAM5U,EAAS,GACf,IAAK,IAAI4U,KAAQW,EAAKG,OACdd,EAAKumB,UAAUn7B,EAAO6H,KAAK+M,GAEnC,OAAO5U,CACV,CAMDy8B,QAAQlnB,GACJA,EAAOA,GAAQ/e,KAAK+e,KACpBA,GAAK+lB,IAAcj+B,SAAS+X,GAAMA,EAAEsnB,YAAYlmC,OACnD,CAMDmmC,QAAQpnB,GACJA,EAAOA,GAAQ/e,KAAK+e,KACpBA,GAAK+lB,IAAcj+B,SAAS+X,GAAMA,EAAEwnB,SAASpmC,OAChD,CAEDqmC,UAAUtnB,GAENA,EAAOA,GADI/e,KACO+e,KAClB,IAAK,IAAIX,KAAQpe,KAAKkf,OACbd,EAAKggB,QAAQhgB,EAAKinB,OAAOtmB,EAErC,CAEDunB,YAAYvnB,GAERA,EAAOA,GADI/e,KACO+e,KAClB,IAAK,IAAIX,KAAQpe,KAAKkf,OACbd,EAAKggB,QAAQhgB,EAAKknB,SAASvmB,EAEvC,CAEDsmB,OAAOtmB,GACH,MAAM9P,EAAKjP,KACX+e,EAAOA,GAAQ9P,EAAG8P,KACb9P,EAAGiP,QAAQumB,QACZx1B,EAAGiP,QAAQmnB,OAAOtmB,GAEtB,MAAMgN,GAAU9c,EAAGw1B,OACnBx1B,GAAGw1B,IAAU,EACT1Y,GAAQ9c,GAAGs3B,GAAUxnB,GAEzB9P,EAAG2M,OAAO/U,SAAQ+X,GAAKA,EAAEqnB,QAAQlnB,IACpC,CAEDumB,SAASvmB,GACL,MAAM9P,EAAKjP,KACX+e,EAAOA,GAAQ9P,EAAG8P,KAClB,MAAMgN,EAAS9c,GAAGw1B,IAAWx1B,EAAGiP,QAAOumB,GACvCx1B,EAAG2M,OAAOhW,QAAOzE,GAAKA,EAAEsjC,QAAUtjC,EAAE+c,OAAOumB,SAAQ59B,SAAQF,GAAKA,EAAE2+B,SAASvmB,KAE3E9P,GAAGw1B,IAAU,EACT1Y,GAAQ9c,GAAGu3B,GAAWznB,EAC7B,CAEDgmB,OAAOnjC,GAAM,GACT5B,KAAK2kC,UAAmB,IAAR/iC,CACnB,CAED2kC,IAAUxnB,GACNA,GAAK+lB,IAAcj+B,SAAS+X,GAAMA,EAAE6nB,WAAWzmC,OAClD,CAEDwmC,IAAWznB,GACPA,GAAK+lB,IAAcj+B,SAAS+X,GAAMA,EAAE8nB,aAAa1mC,OACpD,CAEDk/B,UACQl/B,MAAK2kC,KAAW3kC,KAAK2kC,UAAW,GACpCtc,MAAM6W,SACT,CAEDlM,OAAOlb,EAAKpW,EAAQoW,GAChB,MAAM7I,EAAKjP,KACLoe,EAAOiK,MAAM2K,OAAOlb,EAAKpW,GAE/B,OADI0c,GAAMnP,EAAG8P,MAAK+lB,IAAcj+B,SAAS+X,GAAMA,EAAE+nB,WAAW13B,EAAImP,KACzDA,CACV,CAEDugB,OAAOC,EAAe9mB,EAAKpW,EAAQoW,GAC/B,MAAM7I,EAAKjP,KACLoe,EAAOiK,MAAMsW,OAAOC,EAAe9mB,EAAKpW,GAE9C,OADI0c,GAAMnP,EAAG8P,MAAK+lB,IAAcj+B,SAAS+X,GAAMA,EAAEgoB,WAAW33B,EAAImP,KACzDA,CACV,CAEDd,SACI,MAAMc,EAAOiK,MAAM/K,SAEnB,OADIc,GAAMpe,KAAK+e,MAAK+lB,IAAcj+B,SAAS+X,GAAMA,EAAEgoB,WAAWxoB,KACvDA,CACV,CAEDynB,IAAejkC,GAAM,GACjBA,GAAc,IAARA,EACN,IAAK,IAAIwc,KAAQpe,KAAKkf,OAClBd,EAAKumB,SAAW/iC,CAEvB,CAMD2/B,SAASx5B,GAEL,OADIA,GAAMy8B,SAASx5B,KAAKhL,KAAM+H,GACvB/H,IACV,CAMDm/B,SACI,GAAIn/B,KAAKizB,MAAQ,EAAG,OAAOjzB,KAAK4b,OAAOlZ,KAAIiE,GAAKA,EAAEw4B,YAAa,CAAA,EAC/D,MAAMn9B,EAAMnB,OAAOkqB,OAAO,CACtBjT,IAAK9X,KAAK8X,IACV2sB,OAAQzkC,MAAKykC,GACbC,QAAS1kC,MAAK0kC,GACdC,SAAU3kC,MAAK2kC,GACf1jB,WAAOxc,GACRzE,KAAK0B,OAER,OADAM,EAAIif,MAAQjhB,KAAK4b,OAAOlZ,KAAIiE,GAAKA,EAAEw4B,WAC5Bn9B,CACV,CAEU+c,kBACP,OAAO,IAAIylB,SAAS,KAAM,KAAM,MAAO,EAC1C,CAOD3kC,YAAYqe,EAAQnW,GAChB,MAAMy5B,EAAMz5B,GAAQmW,EACdujB,EAAYvjB,aAAkBsmB,SACpC,GAAIx/B,MAAMC,QAAQu8B,GACd,OAAKC,GACLD,EAAI36B,SAAQF,GAAK69B,SAASx5B,KAAKkT,EAAQvX,KAChCuX,GAFgBsmB,SAASx5B,KAAKw5B,SAASzlB,KAAMyiB,GAIxD,MAAMvgB,MAAEA,KAAUjf,GAAQw/B,EAC1Bx/B,EAAIq+B,MAAQr7B,MAAMC,QAAQgc,GAC1B,MAAMlH,EAAO,IAAIyqB,SAASxiC,EAAI8V,IAAK9V,EAAK+F,EAAOmW,OAASzZ,GAGxD,OAFIwc,GAAOujB,SAASx5B,KAAK+O,EAAMkH,GAC3BwgB,GAAWvjB,EAAO8U,OAAOjZ,GACtBA,CACV,ECvUE,MAAM8sB,qBAAqB1D,YAE9Bp7B,IAAQy8B,SAASzlB,KAOjBlc,YAAYmF,EAAMi6B,GACd5Z,MAAMrgB,EAAMi6B,EACf,CAEDv2B,YAAY9J,GACR,MAAM,IAAIhB,MAAM,sCACnB,CAED8K,WAAWb,GACP,MAAMoE,EAAKjP,KACX,IAAIoe,EACJ,MAAMrW,QAAasgB,MAAMkc,KAAK15B,GAC9B,GAAK7K,MAAK+H,GAGH,CACH,MAAMmW,EAASjP,EAAGrJ,QAAQ1B,OAAS,EAAI+K,GAAGlH,GAAMs5B,UAAUpyB,EAAGrJ,OAAO,IAAMqJ,GAAGlH,GAC7EmW,EAAOgJ,QACP9I,EAAOF,EAAOqjB,SAASx5B,EAC1B,MANGqW,EAAOomB,SAASx5B,KAAKjD,GACrB/H,MAAK+H,GAAQqW,EAQjB,OAFAnP,EAAGrJ,YAASnB,EACZwK,EAAG6zB,OAAOj4B,EAAO,OAAQuT,GAClBA,CACV,CAEDwkB,UACIva,MAAMua,UACN5iC,MAAK+H,IAAOm3B,SACf,CAED4D,OAAOj4B,EAAOzK,EAAM2H,EAAM2T,IAEjBA,GADU3T,aAAgBy8B,UACG,SAATpkC,IACzBioB,MAAMya,OAAOj4B,EAAOzK,EAAM2H,EAAM2T,EACnC,CAMDhQ,eAAe0S,GACX,IAAIA,EAAKigB,YAGT,OAFAjgB,EAAK+nB,UACLnmC,KAAK4F,OAASwY,EAAKtG,UACN9X,KAAKukC,MACrB,CAEGx8B,WACA,OAAO/H,MAAK+H,EACf,CAODlI,gBAAgBmI,GACZ,OAAO,IAAI6+B,aAAa7+B,GAAM,EACjC,QAGGq6B,EAAoBR,WAAW,OAAQgF,aAC1C,ECvFL,MAAMC,EAAS7lC,WAAW8lC,YAAc,2CAClCC,QAAkBz9B,OAAOu9B,GAKGE,EAAUC,mBACbD,EAAUE,gBACXF,EAAUG,eACHH,EAAUI,sBACtBJ,EAAUK,UAC5B,MAAMC,EAAYN,EAAUM,UACtBC,EAAaP,EAAUO,WACvBC,EAAWR,EAAUQ,SACAR,EAAUS,mBACTT,EAAUU,oBACfV,EAAUW,eACpBX,EAAUY,KACVZ,EAAUa,KACHb,EAAUc,YACVd,EAAUe,YACTf,EAAUgB,aACjBhB,EAAUhgB,MACTggB,EAAUiB,OACzB,MAAMC,EAAWlB,EAAUkB,SACTlB,EAAUmB,UAC5B,MAAMC,EAAYpB,EAAUoB,UACtB1tB,EAAMssB,EAAUtsB,IAChB2tB,EAAmBrB,EAAUqB,iBAC7BC,EAAYtB,EAAUsB,UACFtB,EAAUuB,kBACTvB,EAAUwB,mBACXxB,EAAUyB,kBACtBzB,EAAU0B,MACxB,MAAMxtB,EAAO8rB,EAAU9rB,KACjBytB,EAAY3B,EAAU2B,UACT3B,EAAU4B,WACI5B,EAAU6B,yBACjB7B,EAAU8B,kBAChB9B,EAAU+B,YACb/B,EAAUgC,SACAhC,EAAUiC,mBACZjC,EAAUkC,iBACtBlC,EAAU1kC,KACT0kC,EAAUmC,MACRnC,EAAUoC,QACbpC,EAAUqC,KACvB,MAAM3mC,EAAMskC,EAAUtkC,IAChB4mC,EAAWtC,EAAUsC,SACrBC,EAAWvC,EAAUuC,SACrBC,EAAUxC,EAAUwC,QACpBC,EAAQzC,EAAUyC,MAClBC,EAAM1C,EAAU0C,IACH1C,EAAU2C,WACd3C,EAAU4C,OACzB,MAAMx4B,EAAS41B,EAAU51B,OACC41B,EAAU6C,kBACV7C,EAAU8C,kBACjB9C,EAAU+C,WACX/C,EAAUgD,UACXhD,EAAUiD,SACSjD,EAAUkD,4BAC9C,MAAMC,EAAMnD,EAAUmD,IAChBC,EAAkBpD,EAAUoD,gBAChBpD,EAAUqD,UAC5B,MAAMC,EAAatD,EAAUsD,WACXtD,EAAUuD,UACPvD,EAAUwD,aACjBxD,EAAUyD,MACXzD,EAAU0D,KACJ1D,EAAU2D,WCrEpC,MAAM9Y,EAAa,CACfpK,OAAU,WACVqT,OAAU,WACVhtB,UAAa,cACbitB,KAAQ,SACRlR,KAAQ,SACRmR,OAAU,WACVrC,SAAY,aACZsC,KAAQ,SACRttB,OAAU,WACVqrB,SAAY,aACZjrB,OAAU,WACVmtB,QAAW,YACXx5B,MAAS,WAGPs3B,EAAW,CACb4R,cAAYnmC,EACZomC,cAAYpmC,EACZqmC,iBAAermC,EACfsmC,YAAUtmC,EACVumC,YAAUvmC,EACVwmC,cAAYxmC,EACZymC,gBAAczmC,EACd0mC,YAAU1mC,EACV2mC,cAAY3mC,EACZ4mC,gBAAc5mC,EACd6mC,cAAY7mC,EACZ8mC,eAAa9mC,EACb+mC,aAAW/mC,GAqCH,MAACoJ,EAAUy6B,EAlCvB,MAAMmD,yBAAyBnE,EAE3BsC,OAAO5nC,GAEH,OAAOwnC,CACV,CAEDzd,OAAO2f,GAAO1pC,EAAKg/B,GAAO,IAEtB,IAAKh/B,EAAK,OAAOwnC,EAEjB,MAAM37B,EAAU69B,EAAK38B,QAAQlB,QACvB89B,EAAS3pC,EAAI6L,SAAW7L,EAS9B,OARkB2pC,aAAkBC,cAGhC/qC,OAAOkqB,OAAOld,EAAS89B,GAGvB3K,GAAMhhC,MAAK6rC,GAAOh+B,EAAS7L,GAExBwnC,CACV,CAEDqC,IAAOh+B,EAAS7L,GACZ,MAAMwL,EAAM3M,OAAOkqB,OAAO,CAAE,EAAEiO,GACxBjiB,EAAOlW,OAAOuM,QAAQpL,GAAK4D,QAAOrE,GAAKV,OAAOirC,OAAOja,EAAYtwB,EAAE,MACrEwV,EAAK7S,OAAS,IACd6S,EAAKlQ,SAAQwG,GAAMG,EAAIqkB,EAAWxkB,EAAG,KAAOA,EAAG,KAC/CxM,OAAOkqB,OAAOld,EAASL,GAE9B,ICtDL,SAASu+B,YAAYjT,GACnB,OAAOj4B,OAAOuM,QAAQvM,OAAOmrC,0BAA0BlT,GACzD,CAOA,SAASmT,eAAenT,GACtB,OAAOiT,YAAYjT,GAChBlzB,QAAOkG,GAA2B,mBAAfA,EAAE,GAAGpK,QACxBgB,KAAIoJ,GAAKA,EAAE,IAChB,CAOA,SAASogC,YAAYpT,GACnB,OAAOiT,YAAYzhC,QAAQ6hC,eAAerT,IACvClzB,QAAOkG,GAAyB,mBAAbA,EAAE,GAAG9C,KAA+B,cAAT8C,EAAE,KAChDpJ,KAAIoJ,GAAKA,EAAE,IAChB,CAiBO,SAASsgC,gBAAgBtmC,EAAKC,GACnC,MAAMC,EAAQhB,MAAMgG,KAXtB,SAASqhC,aAAavT,GACpB,OAAO,IAAIxiB,IAAI,IAAI41B,YAAYpT,MAAcmT,eAAenT,IAC9D,CAS2BuT,CAAatmC,IAChCG,EAAOF,EAAMtD,KAAInB,GAAKwE,EAAOxE,KAGnC,OAFAyE,EAAMqL,KAAK,QACXnL,EAAKmL,KAAK6J,GACH,IAAI9U,YAAYJ,EAAO,gBAAgBF,OAAvC,IAAoDI,EAC7D,CCkCY,MAAComC,EAAShE,EArFtB,MAAMiE,wBAAwBjF,EAE1BzkC,YAAY2pC,GAER,GADAnkB,MAAMmkB,GACFA,EAASpsC,OAASonC,EAASiF,WACT,QAAlBD,EAASxkC,MACTwkC,EAASE,SAASxoC,OAAS,EAC3B,MAAM,IAAItD,MAAM,mGAGvB,CAEDgpC,OAAO+C,GAEH,MAAQ,IACJ9rC,OAAOoF,KAAK0mC,GACP/mC,QAAQkS,GAAQ60B,EAAU70B,KAC1BxV,KAAK,KACV,GACP,CAEDypB,OAAO2f,GAAOiB,IAGV,QAA8BloC,IAA1BzE,KAAK4sC,iBAAgC,CACrC5sC,KAAK4sC,iBAAmB,IAAIt2B,SACP7R,IAAjBinC,EAAKgB,UACL1sC,KAAK6sC,eAAiB,IAAIv2B,IAAIo1B,EAAKgB,QAC9BpqC,KAAK,KACLF,MAAM,MACNwD,QAAQsG,GAAY,KAANA,MAGvB,IAAK,MAAMlE,KAAQ2kC,EACXA,EAAU3kC,KAAUhI,KAAK6sC,gBAAgB9c,IAAI/nB,IAC7ChI,KAAK4sC,iBAAiBvvB,IAAIrV,GAGlC,OAAOhI,KAAK4pC,OAAO+C,EACtB,CAED,MAAMvvB,EAAYsuB,EAAK38B,QAAQqO,UAG/B,IAAK,MAAMpV,KAAQhI,KAAK4sC,iBACd5kC,KAAQ2kC,IACVvvB,EAAUE,OAAOtV,GACjBhI,KAAK4sC,iBAAiB9lB,OAAO9e,IAKrC,IAAK,MAAMA,KAAQ2kC,EAAW,CAG1B,MAAMjrC,IAAUirC,EAAU3kC,GACtBtG,IAAU1B,KAAK4sC,iBAAiB7c,IAAI/nB,IACnChI,KAAK6sC,gBAAgB9c,IAAI/nB,KACtBtG,GACA0b,EAAUC,IAAIrV,GACdhI,KAAK4sC,iBAAiBvvB,IAAIrV,KAE1BoV,EAAUE,OAAOtV,GACjBhI,KAAK4sC,iBAAiB9lB,OAAO9e,IAGxC,CACD,OAAOshC,CACV,ICvEQwD,SAAW,CAACC,EAAQC,IAAWD,IAAWC,GAAUD,EACpDE,OAAS,CAACF,EAAQC,IAAWD,IAAWC,GAAUh/B,OAAO++B,GAAU,EACnEG,OAAS,CAACH,EAAQC,IAAWD,IAAWC,GAAUh/B,OAAO++B,IAAW,EACpEI,OAAS,CAACJ,EAAQC,IAAWD,IAAWC,GAAUh/B,OAAO++B,GAAU,EACnEK,OAAS,CAACL,EAAQC,IAAWD,IAAWC,GAAUh/B,OAAO++B,IAAW,ECJ1E,MAAMM,YAETxtC,cAAgB,CAAC,SAAU,QAAS,UAEpCA,UAAU+B,GACN,OAAOyrC,YAAYlnC,OAAO+D,SAAStI,EACtC,CAED/B,eAAe+B,GACX,OAA2C,IAApCyrC,YAAYlnC,OAAO2Q,QAAQlV,EACrC,CAED/B,gBAAgB+B,GACZ,OAA2C,IAApCyrC,YAAYlnC,OAAO2Q,QAAQlV,EACrC,EAGO,MAAC0rC,EAAa,CACtBC,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUK,YAAYG,GAAGT,ICnBtCU,EAAa,CAAC,GAAI,UAAW,YAAa,OAAQ,QAAS,OAAQ,UAAW,SAAU,QAAS,OAAQ,WAEzGC,EAAQ,CACjBH,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUS,EAAWvjC,SAAS6iC,ICJ3CY,EAAmB,CAAC,GAAI,SAAU,SAAU,SAAU,UAAW,QAAS,UAAW,QAAS,OAE9FC,EAAc,CACvBL,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUW,EAAiBzjC,SAAS6iC,ICHjDc,EAAa,CAAC,WAAY,QAAS,SAAU,SAAU,QAAS,OAAQ,YAAa,QAAS,MAAO,QAErGC,EAAY,CACrBP,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUa,EAAW3jC,SAAS6iC,ICL3CgB,EAAW,CAAC,GAAI,QAAS,OAAQ,aAEjCC,EAAM,CACfT,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUe,EAAS7jC,SAAS6iC,ICJ/C,MAAMkB,iBAETpuC,cAAiB,CAAC,GAAI,aAAc,WAAY,WAAY,aAE5DA,gBAAgB+B,GACZ,OAAOqsC,iBAAiB9nC,OAAO+D,SAAStI,EAC3C,CAED/B,kBAAkB+B,GACd,MAAMkX,EAAMm1B,iBAAiB9nC,OAAO2Q,QAAQlV,GAC5C,OAAe,IAARkX,GAAqB,IAARA,CACvB,CAEDjZ,oBAAoB+B,GAChB,MAAMkX,EAAMm1B,iBAAiB9nC,OAAO2Q,QAAQlV,GAC5C,OAAe,IAARkX,GAAqB,IAARA,CACvB,EAIO,MAACqE,EAAc,CACvBowB,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUiB,iBAAiB/jC,SAAS6iC,ICtBvD,MAAMmB,eAETruC,cAAgB,CAAC,SAAU,OAAQ,QAAS,QAAS,MAAO,MAAO,UAEnEA,gBAAgB+B,GACZ,OAAOssC,eAAe/nC,OAAO+D,SAAStI,EACzC,CAED/B,kBAAkB+B,GACd,OAAOssC,eAAe/nC,OAAO2Q,QAAQlV,GAAO,CAC/C,CAED/B,oBAAoB+B,GAChB,MAAMkX,EAAMo1B,eAAe/nC,OAAO2Q,QAAQlV,GAC1C,OAAOkX,EAAM,GAAKA,EAAM,CAC3B,CAEDjZ,gBAAgB+B,GACZ,OAA8C,IAAvCssC,eAAe/nC,OAAO2Q,QAAQlV,EACxC,CAED/B,gBAAgB+B,GACZ,MAAO,CAAC,OAAQ,QAAS,OAAOsI,SAAStI,EAC5C,CAED/B,eAAe+B,GACX,MAAO,CAAC,QAAS,MAAO,UAAUsI,SAAStI,EAC9C,EAIO,MAACmc,EAAY,CACrBwvB,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUkB,eAAehkC,SAAS6iC,ICjCrD,MAAMoB,cAETtuC,cAAgB,CAAC,WAAY,QAAS,WAAY,SAAU,UAE5DA,gBAAgB+B,GACZ,OAAOusC,cAAchoC,OAAO+D,SAAStI,EACxC,EAIO,MAACk1B,EAAW,CACpByW,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUmB,cAAcjkC,SAAS6iC,ICZ9CqB,EAAgB,CAAC,GAAI,OAAQ,SAE7BtgB,EAAW,CACpByf,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUoB,EAAclkC,SAAS6iC,ICJ9CsB,EAAY,CAAE9/B,QAAY,GAAI+/B,OAAU,GAAKC,OAAU,GAAIC,MAAS,KAAMC,MAAS,KAAMC,IAAQ,MAEjGz5B,GAAO,CAChBs4B,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUnsC,OAAOirC,OAAOuC,EAAWtB,ICRhD4B,GAAuB,CAChCC,cAAe,CAACltC,EAAOtB,KACXsB,GAAS,IAAIU,MAAM,KAE/BysC,YAAa,CAACntC,EAAOtB,KACTsB,GAAS,IAAIY,KAAK,MCc3B,MAAMwsC,kBAEXvhC,IACA4d,IAEAtoB,YAAY0K,GACCvN,MACRuN,GAAQA,EACXA,EAAK23B,cAFMllC,KAGZ,CAED+uC,gBAEED,mBAAkBhK,GAAaznB,IADpBrd,YAERqrB,IACJ,CAED2jB,mBACE,MAAM//B,EAAKjP,KACX8uC,mBAAkBhK,GAAahe,OAAO7X,GAAG1B,IACzC0B,GAAG1B,GAAM43B,iBAAiBl2B,EAC3B,CASDqI,MAAMtP,EAAM7B,EAAQ8oC,GAAW,GAC7B,MAAMhgC,EAAKjP,KACX,IAAIsX,EAAQ,KAOZ,OANI23B,EACF33B,EAAQ2T,cAAcE,SAEtBlc,GAAGkc,GAAWlc,GAAGkc,IAAY,IAAIpB,eAAe,WAChDzS,EAAQrI,GAAGkc,IAEE,OAAXhlB,GAAmBmR,EAAM43B,MAAMhrC,OAAS,EAAWoT,EAAM63B,WAAWnnC,GACjEsP,EAAM4S,QAAQliB,EAAM7B,GAAQ,EACpC,CAEDklB,IAAOlrB,GAAS,GACd,MAAM8O,EAAKjP,KACX,GAAKiP,GAAG2c,KACJzrB,GAAU8O,GAAGs2B,IAAU,CACzB,MAAM3Z,EAAS,IAAIrlB,SAAS4c,oBAEtBwB,EAAW3f,MAAMgG,KAAKiE,GAAG2c,IAC3B3c,GAAGkc,IAAUxG,EAAStT,KAAKpC,GAAGkc,IAClClc,GAAG8P,GAAMoE,mBAAqB,IAAIyI,KAAWjH,EAC9C,CACF,CAEG4gB,SACF,OAAOh/B,SAAS4c,mBAAmB3iB,KAAOR,MAAK4rB,IAASprB,EACzD,CAEGue,SACF,OAAO/e,MAAKuN,GAAM6hC,UACnB,CAEGxjB,SACF,OAAO5rB,MAAK+e,IAAOoE,kBACpB,CAKDtjB,UAAsB,IAAIyW,IAE1BzW,UAAkBiM,GAChB+T,uBAAsB,KACpBivB,mBAAkBhK,GAAaj+B,SAAQ+X,GAAKA,GAAEyM,MAAS,GAE1D,CAEDxrB,YACE,MAAMoP,EAAK6/B,kBACX1rB,SAASxT,GAAGhJ,OAAQ,KAAM,aAAcqI,GAAGogC,GAC5C,QAGCrvC,MAAKstB,IACN,EC7FI,MAAMgiB,4BAA4BzU,mBAEvCh4B,YAAY0K,GACV8a,MAAM9a,GAENA,EAAK23B,cADMllC,KAEZ,CAED+uC,gBACa/uC,KACRkoB,OADQloB,MACEuvC,GAEd,CAEDP,mBACE,MAAM//B,EAAKjP,KACXiP,EAAG1B,KAAK43B,iBAAiBl2B,GACzBA,EAAGuuB,SAASvuB,GAAGsgC,GAChB,CAEDC,SAAShqB,GACIxlB,KACRs7B,OAAO9V,EACX,CAEG+pB,SACF,MAAMruB,EAAMlhB,KAAKuN,MAAM4O,QAAQra,cACzB2G,EAAQzI,KAAKuN,MAAMyP,UACnByyB,EAAWn1B,EAAMmiB,cAAcz8B,KAAKuN,MACpCyL,EAAK,CAAC,UAAW,iBAAiB9O,SAASgX,GAC3CjI,EAAK,CAAC,sBAAsB/O,SAASzB,GAC3C,OAAOuQ,GAAMC,GAAMw2B,EAAW,SAAW,OAC1C,ECnCI,MAAMC,kBAEXniC,IACAm8B,IACAiG,IAAQ,IAAIr5B,IAEZzT,YAAY0K,GACVvN,MAAKuN,GAAQA,EACbA,EAAK23B,cAAcllC,KACpB,CAEDgvC,mBACE,MAAM//B,EAAKjP,KACXiP,GAAG1B,GAAM43B,iBAAiBl2B,GAC1BA,GAAG2gC,KACH3gC,GAAG1B,GAAQ,KACX0B,GAAG0gC,GAAQ,KACX1gC,GAAGy6B,GAAO,IACX,CAEDmG,cACE,MAAM5gC,EAAKjP,KACNiP,GAAG6gC,MAAW7gC,GAAG0gC,GAAMtyB,IAAIpO,GAAGtB,GACpC,CAEGoiC,iBACF,OAAO/vC,MAAK0pC,EACb,CAEGsG,SACF,OAAOhwC,MAAKuN,IAAO0iC,aACpB,CAEGtiC,SACF,OAAO3N,MAAKgwC,IAAUE,cAAcC,sBACrC,CAEDL,MACE,MAAM7gC,EAAKjP,KACL2N,EAASsB,GAAGtB,GACZoR,EAAO9P,GAAG1B,IAAO6hC,WACjB9wB,EAASrP,GAAG1B,IAAOkN,WACzB,OAAQ9M,IAAW2Q,GAAU3Q,GAAUoR,CACxC,CAED6wB,MACE,MAAM3gC,EAAKjP,KACNiP,GAAG1B,IAAO6iC,OACbprC,MAAMgG,KAAKiE,GAAG0gC,IAAO9oC,SAAQ/G,GAAMA,GAAIwd,WACvCrO,GAAG0gC,GAAMzoB,QAEZ,EChDI,MAAMmpB,eAEX9iC,IAEA+iC,IACAC,IACAC,IAEA3tC,YAAY0K,GACV,MAAM0B,EAAKjP,KACXiP,GAAG1B,GAAQA,EACX0B,GAAGqhC,GAAgBrhC,GAAG8zB,GAAQn7B,KAAKqH,GACnCA,GAAGshC,GAAiBthC,GAAGg0B,GAASr7B,KAAKqH,GACrCA,GAAGuhC,GAAiBvhC,GAAG4Y,GAASjgB,KAAKqH,GACrCA,GAAG1B,GAAM23B,cAAcj2B,EACxB,CAED8/B,gBACa/uC,MACRwjB,IAAQ,EACZ,CAEDwrB,mBACE,MAAM//B,EAAKjP,KACXiP,GAAGwV,KACHxV,GAAG1B,GAAM43B,iBAAiBl2B,EAC3B,CAEDvD,aAAa64B,GAAO,GACPvkC,MACRykB,KADQzkB,MAERwjB,GAAQ+gB,EACZ,CAED74B,WAAW1J,GACT,OAAOhC,KAAKkrB,OAAOqZ,KAAKvkC,MAAKuN,GAC9B,CAED7B,YAAY1J,GACV,OAAOhC,KAAKkrB,OAAOulB,MAAMzwC,MAAKuN,GAAOvL,EACtC,CAED0J,gBACE,OAAO22B,EAAoBne,KAAKlkB,KAAK0wC,QACtC,CAED/3B,KAAK/W,GACH,GAAK5B,KAAKkrB,MAEV,OADAlrB,KAAKkrB,MAAMvS,KAAO/W,EACX5B,KAAKkrB,MAAMqZ,MACnB,CAED3+B,OAAOhE,GACL,GAAK5B,KAAKkrB,MAEV,OADAlrB,KAAKkrB,MAAMtlB,OAAShE,EACb5B,KAAKkrB,MAAMqZ,MACnB,CAEDD,OAAO1iC,GACA5B,KAAKkrB,QACVlrB,KAAKkrB,MAAMoZ,OAAS1iC,EACrB,CAEGspB,YACF,OAAOmX,EAAoBtD,KAAK/+B,KAAK0wC,QACtC,CAEGA,cACF,OAAO1wC,MAAKuN,IAAOojC,OACpB,CAEDC,YACE5wC,KAAK6wC,KAAO,CACb,CAEDC,WACE9wC,KAAK+wC,UACN,CAEDA,WACE/wC,KAAK6wC,KAAO7wC,KAAK6wC,KAAO,CACzB,CAEDG,WACEhxC,KAAK6wC,KAAO7wC,KAAK6wC,KAAO,CACzB,CAEGA,WACF,MAAM3lB,EAAQlrB,KAAKkrB,MACnB,OAAOA,EAAQloB,KAAKgB,MAAMknB,EAAMqY,KAAOvgC,KAAKD,IAAImoB,EAAM1T,MAAO,IAAM,EAAI,CACxE,CAEGq5B,SAAKjvC,GACPA,EAAMoB,KAAKD,IAAI,EAAG/B,EAAO+L,MAAMnL,EAAK,IACpC,MAAMspB,EAAQlrB,KAAKkrB,MACfA,IACFA,EAAMqY,KAAO3hC,EAAM,EAAKspB,EAAM1T,MAAQ5V,EAAOspB,EAAM1T,MAAQ,EAC3D0T,EAAMqZ,KAAKvkC,MAAKuN,IAEnB,CAED7B,SAAc64B,GAAO,GACnB,MAAMt1B,EAAKjP,KACL2wC,QAAgB1hC,EAAG0hC,UACzBA,GAAS/gC,GAAG,OAAQX,GAAGqhC,IACvBK,GAAS/gC,GAAG,QAASX,GAAGshC,IACxBI,GAAS/gC,GAAG,QAASX,GAAGuhC,IACpBjM,GAAMoM,EAAQpM,KAAKt1B,GAAG1B,GAC3B,CAEDkX,MACE,MAAMxV,EAAKjP,KACL2wC,EAAU1hC,EAAGic,MACnBylB,GAASnhB,IAAI,OAAQvgB,GAAGqhC,IACxBK,GAASnhB,IAAI,QAASvgB,GAAGshC,IACzBI,GAASnhB,IAAI,QAASvgB,GAAGuhC,GAC1B,CAEDzN,IAAQj3B,GACK9L,MACRuN,GAAM0jC,aAAanlC,EAAEwZ,OAAOvd,MADpB/H,MAER8iC,GAAQ,YAAah3B,EAAEwZ,OAAOvd,KAClC,CAEDk7B,IAASn3B,GACI9L,MACRuN,GAAM2jC,cAAcplC,EAAEwZ,OAAOvd,MADrB/H,MAER8iC,GAAQ,aAAch3B,EAAEwZ,OAAOvd,KACnC,CAED8f,IAAS/b,GACP,MAAMmD,EAAKjP,KACXJ,MAAM8b,MAAMzM,GAAG1B,GAAOzB,GACtBmD,GAAG1B,GAAM4jC,cAAcrlC,GACvBmD,GAAG6zB,GAAQ,aAAch3B,EAAEwZ,OAAOvd,KACnC,CAED+6B,IAAQ96B,EAAMD,GACZ/H,MAAKuN,GAAMkiB,KAAKznB,EAAMD,GAAM,GAAM,GAAO,EAC1C,EC/II,MAAMqpC,sBAEX7jC,IACAwB,IACAsiC,KAAY,EAEZC,IAAW,EACXC,IAAW,EAEXC,IACAC,IACAC,IAEA7uC,YAAY0K,GACV,MAAM0B,EAAKjP,KACXiP,GAAG1B,GAAQA,EACXA,EAAK23B,cAAcj2B,GACnBA,GAAGuiC,GAAmBviC,GAAG0iC,GAAW/pC,KAAKqH,GACzCA,GAAGwiC,GAAqBxiC,GAAG2iC,GAAahqC,KAAKqH,GAC7CA,GAAGyiC,GAAqBziC,GAAG4iC,GAAajqC,KAAKqH,EAC9C,CAED+/B,mBACE,MAAM//B,EAAKjP,KACXiP,GAAG1B,GAAM43B,iBAAiBl2B,GAC1BA,GAAG1B,GAAQ,IACZ,CAED2a,OAAOnZ,GACL,MAAME,EAAKjP,KACNiP,GAAGoiC,KACNpiC,GAAGF,GAAWA,EACdE,GAAGoiC,IAAY,EACfpiC,GAAG1B,GAAMukC,YAAY7iC,GAAGF,GAAU,YAAaE,GAAGwiC,IAErD,CAED5c,QACE,MAAM5lB,EAAKjP,KACXiP,GAAGqiC,GAAW,EACdriC,GAAGsiC,GAAW,EACdtiC,GAAG1B,GAAMwkC,YAAYxrC,SAAU,UAAW0I,GAAGuiC,IAC7CviC,GAAG1B,GAAMwkC,YAAYxrC,SAAU,YAAa0I,GAAGyiC,GAChD,CAMDE,IAAa9lC,GACX,MAAMmD,EAAKjP,KACXiP,GAAG1B,GAAMsW,QAAQ/X,GACjBmD,GAAGqiC,GAAWxlC,EAAEslB,QAChBniB,GAAGsiC,GAAWzlC,EAAEulB,QAChBpiB,GAAG1B,GAAMykC,cAAclmC,EAAGmD,GAAGqiC,GAAUriC,GAAGsiC,IAC1CtiC,GAAG1B,GAAMukC,YAAYvrC,SAAU,UAAW0I,GAAGuiC,IAAkB,GAC/DviC,GAAG1B,GAAMukC,YAAYvrC,SAAU,YAAa0I,GAAGyiC,GAChD,CAMDC,IAAW7lC,GACT,MAAMmD,EAAKjP,KAGX,OAFAiP,GAAG1B,GAAMsW,QAAQ/X,GACjBmD,GAAG1B,GAAMwkC,YAAYxrC,SAAU,YAAa0I,GAAGyiC,IACxCziC,GAAG1B,GAAM0kC,YAAYnmC,EAAGmD,GAAGqiC,GAAUriC,GAAGsiC,GAChD,CAMDM,IAAa/lC,GACX,MAAMmD,EAAKjP,KACXiP,GAAG1B,GAAMsW,QAAQ/X,GAEjBmD,GAAG1B,GAAMskC,cAAc/lC,EAAGmD,GAAGqiC,GAAUriC,GAAGsiC,IAEtCtiC,GAAGqiC,GAAWxlC,EAAEslB,QAClBniB,GAAG1B,GAAM2kC,gBAAgBpmC,EAAGmD,GAAGqiC,GAAUriC,GAAGsiC,IACnCtiC,GAAGqiC,GAAWxlC,EAAEslB,SACzBniB,GAAG1B,GAAM4kC,eAAermC,EAAGmD,GAAGqiC,GAAUriC,GAAGsiC,IAGzCtiC,GAAGsiC,GAAWzlC,EAAEulB,QAClBpiB,GAAG1B,GAAM6kC,aAAatmC,EAAGmD,GAAGqiC,GAAUriC,GAAGsiC,IAChCtiC,GAAGsiC,GAAWzlC,EAAEulB,SACzBpiB,GAAG1B,GAAM8kC,eAAevmC,EAAGmD,GAAGqiC,GAAUriC,GAAGsiC,IAG7CtiC,GAAGqiC,GAAWxlC,EAAEslB,QAChBniB,GAAGsiC,GAAWzlC,EAAEulB,OAEjB,EC/FI,MAAMihB,4BAEX/kC,IACA8jC,IACA1M,IACAD,IACA6N,IAAe,IAAIj8B,IAEnBzT,YAAY0K,GACCvN,MACRuN,GAAQA,EACXA,EAAK23B,cAFMllC,KAGZ,CAED+uC,gBACa/uC,KACRstB,MACJ,CAED0hB,mBACE,MAAM//B,EAAKjP,KACXiP,GAAG1B,GAAM43B,iBAAiBl2B,GAC1BA,GAAG1B,GAAQ,KACX0B,GAAGoiC,IAAY,CAChB,CAEGmB,eACF,OAAgC,IAAzBxyC,MAAKuN,IAAOilC,QACpB,CAEGC,eACF,OAAgC,IAAzBzyC,MAAKuN,IAAOklC,QACpB,CAEG/N,cACF,OAAO1kC,MAAK0kC,EACb,CAEGC,eACF,OAAO3kC,KAAKyyC,SAAW,IAAIzyC,MAAKuyC,GAAapsC,UAAYnG,MAAK2kC,EAC/D,CAEDrX,OACattB,MACR2kC,GADQ3kC,MACOuN,GAAMxF,MAAMnC,QAAOe,GAAKA,EAAE6T,SAAQnF,KACrD,CAED6S,OAAOpoB,GACL,MAAMmP,EAAKjP,KACPiP,GAAGoiC,KACPpiC,GAAGoiC,IAAY,EACfpiC,GAAG1B,GAAMukC,YAAYhyC,EAAI,WAAWgM,GAAKmD,EAAGyU,UAAU5X,KACtDmD,GAAG1B,GAAMukC,YAAYhyC,EAAI,SAASgM,GAAKmD,EAAGyjC,QAAQ5mC,KAClDmD,GAAG1B,GAAMukC,YAAYhyC,EAAI,SAASgM,GAAKmD,EAAG0jC,QAAQ7mC,KAClDmD,GAAG1B,GAAMukC,YAAYhyC,EAAI,WAAWgM,GAAKmD,EAAG2jC,UAAU9mC,KACtDmD,GAAG1B,GAAMukC,YAAYhyC,EAAI,YAAYgM,GAAKmD,EAAG4jC,WAAW/mC,KACzD,CAEDmzB,WACE,MAAMhwB,EAAKjP,KACX,IAAIF,EAAKmP,GAAGy1B,IAAUyL,uBACtB,KAAOrwC,GAAI8hB,UAAU9hB,EAAKA,EAAGqwC,uBACzBlhC,EAAGujC,WAAa1yC,IAAIA,EAAKmP,EAAG6jC,kBAChChzC,GAAIklC,OACL,CAED/4B,OACE,MAAMgD,EAAKjP,KACX,IAAIF,EAAKmP,GAAGy1B,IAAU7mB,mBACtB,KAAO/d,GAAI8hB,UAAU9hB,EAAKA,EAAG+d,mBACzB5O,EAAGujC,WAAa1yC,IAAIA,EAAKmP,EAAGwM,mBAChC3b,GAAIklC,OACL,CAKDnQ,QACE,MAAM5lB,EAAKjP,KACPiP,EAAGwjC,SACLxjC,GAAGsjC,GAAa1rC,SAAQ/G,IACtBA,EAAG0a,QAAS,EACZ1a,EAAGizC,MAAM,IAEF9jC,GAAG01B,KACZ11B,GAAG01B,GAAUnqB,QAAS,EACtBvL,GAAG01B,GAAUoO,QAEf9jC,GAAGsjC,GAAarrB,QAChBjY,GAAGy1B,QAAWjgC,EACdwK,GAAG01B,QAAYlgC,EACfwK,GAAG1B,IAAOkiB,KAAK,mBAAehrB,GAAW,EAC1C,CAMDuuC,IAAYlzC,GACCE,MACRuN,IAAOylC,aAAalzC,GADZE,MAERuN,IAAOkiB,KAAK,iBAAkB3vB,GAAI,EACtC,CAMDmzC,IAAcnzC,GACZE,MAAKuN,IAAO0lC,eAAenzC,GAC3BE,MAAKuN,IAAOkiB,KAAK,mBAAoB3vB,GAAI,EAC1C,CAMDozC,IAAWpzC,GACTE,MAAKuN,IAAO2lC,YAAYpzC,GACxBE,MAAKuN,IAAOkiB,KAAK,gBAAiB3vB,GAAI,EACvC,CAODqzC,IAAarzC,GACX,OAAOE,MAAKuN,IAAO4lC,aAAcnzC,MAAKuN,IAAO4lC,YAAYrzC,EAC1D,CAEDklC,IAAOllC,GACL,MAAMmP,EAAKjP,KACNiP,GAAGkkC,GAAarzC,KACrBmP,GAAGy1B,GAAW5kC,EACVA,GACFmP,GAAGikC,GAAWjkC,GAAGy1B,IAEpB,CAED32B,IAAQjO,GACN,IAAKA,EAAI,OACT,MAAMmP,EAAKjP,KACNiP,GAAGkkC,GAAarzC,KACjBA,EAAG0a,QACLvL,GAAGsjC,GAAal1B,IAAIvd,GACpBmP,GAAG+jC,GAAYlzC,KAEfmP,GAAGsjC,GAAazrB,OAAOhnB,GACvBmP,GAAGgkC,GAAcnzC,IAEpB,CAEDilC,IAAQjlC,GACN,MAAMmP,EAAKjP,KACNiP,GAAGkkC,GAAarzC,KAEjBmP,GAAG01B,KAAc11B,EAAGwjC,WACtBxjC,GAAG01B,GAAUnqB,QAAS,EACtBvL,GAAGlB,GAAQkB,GAAG01B,KAGhB11B,GAAG01B,GAAY7kC,EACXA,IACEmP,EAAGwjC,SACL3yC,EAAG0a,QAAU1a,EAAG0a,OAEhB1a,EAAG0a,QAAS,EAEdvL,GAAGlB,GAAQjO,IAEd,CAED+yC,WAAW/mC,GAGV,CAED8mC,UAAU9mC,GACG9L,MACRglC,GAAOl5B,EAAE6B,OACb,CAEDglC,QAAQ7mC,GACN,MAAMmD,EAAKjP,KACLF,EAAKgM,EAAEsnC,eAAextC,QAAO9F,GAAMA,EAAG4e,gBAAkBzP,GAAG1B,KAAO8H,MACnEpG,GAAGkkC,GAAarzC,KACjBgM,EAAEiY,SAAS9U,EAAG4lB,QAClB5lB,GAAGgkC,GAAchkC,GAAG01B,IACpB11B,GAAG81B,GAAQjlC,GACZ,CAED4jB,UAAU5X,GACR,MAAMmD,EAAKjP,KACX,OAAQ8L,EAAEgY,MACR,IAAK,UACL,IAAK,YACH7U,EAAGgwB,WACH,MACF,IAAK,YACL,IAAK,aACHhwB,EAAGhD,OAIR,CAEDymC,QAAQ5mC,GACN,MAAMmD,EAAKjP,KACX,OAAQ8L,EAAEgY,MACR,IAAK,QACL,IAAK,QACH7U,GAAGy1B,IAAUn8B,QAGlB,ECrNI,MAAM8qC,gBAEX9lC,IAEA+lC,IACAC,IAEA1wC,YAAY0K,GACCvN,MACRuN,GAAQA,EACXA,EAAK23B,cAFMllC,KAGZ,CAED+uC,gBACE,MAAM9/B,EAAKjP,KACPiP,GAAG1B,GAAMoU,QACX1S,GAAGskC,GAAetkC,GAAGukC,GAAY5rC,KAAKqH,GACtCA,GAAGqkC,GAAY1jB,WAAWC,SAAS5gB,GAAG1B,GAAMyP,WAC5C/N,GAAGqkC,GAAU1jC,GAAGX,GAAG1B,GAAMoU,MAAO1S,GAAGskC,IAEtC,CAEDvE,mBACE,MAAM//B,EAAKjP,KACXiP,GAAGqkC,IAAW9jB,IAAIvgB,GAAG1B,GAAMoU,MAAO1S,GAAGskC,IACrCtkC,GAAG1B,GAAM43B,iBAAiBl2B,GAC1BA,GAAG1B,GAAQ,IACZ,CAEDimC,IAAY1nC,GACV9L,MAAKuN,GAAMimC,aAAa1nC,EACzB,CAEDg3B,OAAO/6B,GACL,MAAMkH,EAAKjP,KACXiP,GAAGqkC,GAAU7jB,KAAKxgB,GAAG1B,GAAMoU,MAAO,CAAC9W,MAAOoE,GAAG1B,GAAOqwB,KAAK71B,GAC1D,ECpCI,MAAM0rC,sBAET5zC,UAAgB,IAAIyW,IACpB/I,IAEA1K,YAAY0K,GACVvN,MAAKuN,GAAQA,EACbA,EAAK23B,cAAcllC,KACpB,CAED+uC,gBACE0E,uBAAsBC,GAAOr2B,IAAIrd,MACjCA,KAAK+rB,QACN,CAEDijB,mBACE,MAAM//B,EAAKjP,KACXyzC,uBAAsBC,GAAO5sB,OAAO7X,GAAG1B,IACvC0B,GAAG1B,GAAM43B,iBAAiBl2B,GAC1BA,GAAG1B,GAAQ,IACZ,CAEDwe,SACE/rB,MAAKuN,GAAMomC,eACZ,CAED9zC,UAAsBiM,GACpB9G,MAAMgG,KAAKyoC,uBAAsBC,IAAQ7sC,SAAQuF,GAAKA,EAAE2f,UACzD,QAGCuC,OAAOnR,YAAYtV,iBAAiB,SAAU4rC,uBAAsBG,GACrE,EC7BE,MAAMC,gBAEXtmC,IACAysB,IAEAn3B,YAAY0K,GACV,MAAM0B,EAAKjP,KACXiP,GAAG1B,GAAQA,EACX0B,GAAG+qB,GAASzsB,EAAKysB,MACjBzsB,EAAK23B,cAAcj2B,EACpB,CAED8/B,gBACE8E,iBAAgB/O,GAAaznB,IAAIrd,KAClC,CAEDgvC,mBACE,MAAM//B,EAAKjP,KACX6zC,iBAAgB/O,GAAahe,OAAO7X,GACpCA,GAAG1B,GAAM43B,iBAAiBl2B,EAC3B,CAED6kC,aACE,MAAM7kC,EAAKjP,KACPiP,GAAG+qB,KAAW/qB,GAAG1B,IAAOysB,QAC1B/qB,GAAG+qB,GAAW/qB,GAAG1B,IAAOysB,MACxB/qB,EAAG8kC,YAAY9kC,GAAG+qB,IAErB,CAEDga,eAAeha,GACRh6B,MAAKg6B,IAAQh6B,KAAK+zC,YAAY/Z,EACpC,CAED+Z,YAAY/Z,GACV,IAAKA,EAAO,OAEZztB,EAAOU,IADIjN,MACGuN,GAAO,gBAAiBysB,GACtC,MAAM9rB,EAFKlO,MAESuN,IAAO6hC,YAAYlhC,UAAY,GACnDlJ,MAAMgG,KAAKkD,GAAUrH,SAAQ/G,GAAMyM,EAAOU,IAAInN,EAAI,gBAAiBk6B,IACpE,CAEDn6B,UAAsB,IAAIyW,IAE1BzW,UAAgBiM,GACH+nC,iBACR/O,GAAaj+B,SAAQ+X,GAAKA,EAAEo1B,eAAeloC,EAAEwZ,SACjD,CAEDzlB,YACEujB,SAASxT,GAAGhJ,OAAQ,KAAM,WAAYitC,iBAAgBtZ,GACvD,QAGCsZ,iBAAgBvmB,IACjB,ECxDI,MAAM2mB,mBAEX1mC,IACAyrB,IACAkb,IACAC,IAEAt0C,WAAoB,EACpBA,UAAgB,IAAIyW,IAEpBzT,YAAY0K,GACVvN,MAAKuN,GAAQA,EACbA,EAAK23B,cAAcllC,KACpB,CAED+uC,gBACa/uC,MACRm0C,IAAY,EADJn0C,MAERo0C,IACJ,CAEDpF,mBACE,MAAM//B,EAAKjP,KACXiP,GAAG1B,GAAM43B,iBAAiBl2B,GAC1BA,GAAG1B,GAAQ,KACX0B,GAAGilC,GAAW,KACdjlC,GAAG+pB,GAAY,IAChB,CAED8a,aACE9zC,MAAKo0C,IACN,CAEDT,gBACE3zC,MAAKuN,GAAMomC,eACZ,CAED9D,cACE,MAAM5gC,EAAKjP,KACPiP,GAAGklC,KACLllC,GAAGklC,IAAY,EACfllC,GAAG1B,GAAM8mC,qBAEZ,CAEDD,MACE,MAAMnlC,EAAKjP,KACL0pC,EAAMz6B,EAAGqlC,YACXrlC,GAAGilC,KAAaxK,IAClBz6B,GAAGilC,GAAWxK,EACVA,GAAKuK,oBAAmBM,GAAUv0C,MAEzC,CAED0L,WACE,MAAMuD,EAAKjP,KACL0pC,EAAMz6B,EAAGqlC,YACf,IAAK5K,EAAK,OACV,MACM1Q,EADU0Q,aAAe9sB,oBACJ8sB,QAAY3Q,gBAAgBS,cAAa,EAAMkQ,EAAKA,GAC3E1Q,IACF/pB,GAAG+pB,GAAYA,EACf/pB,GAAGklC,IAAY,EACfllC,GAAG1B,GAAMomC,gBAEZ,CAEG1a,wBACF,MAA+B,gBAAxBj5B,MAAKuN,IAAO4O,OACpB,CAEG6c,eACF,OAAOh5B,MAAKg5B,EACb,CAEGsb,kBACF,MAAM/mC,EAAOvN,MAAKuN,GAClB,GAAKA,EACL,OAAGvN,KAAKi5B,kBAA0B1rB,EAAKjE,IAChCiE,EAAKyrB,UAAYzrB,EAAK7D,MAAM,YAAY,EAChD,CAED7J,gBAAsB20C,SACdxzC,EAAOsG,QAAQ,KACrB,MAAMyP,EAAO/R,MAAMgG,KAAKwpC,GACxB,IAAK,IAAI5W,KAAQ7mB,QACT6mB,GAAKnK,KACX+gB,EAAM1tB,OAAO8W,EAEhB,CAED/9B,UAAiB40C,GACf,MAAMxlC,EAAKglC,mBACXhlC,GAAGulC,GAAOn3B,IAAIo3B,GACTxlC,GAAG+c,KACN/c,GAAG+c,IAAa,EAChBngB,gBAAe,IAAMoD,GAAGylC,GAASzlC,GAAGulC,IAAQG,QAAQ1lC,GAAG+c,IAAa,KAEvE,ECtGI,MAAM4oB,eAETrnC,IAEA1K,YAAY0K,GACVvN,MAAKuN,GAAQA,EACbA,EAAK23B,cAAcllC,KACpB,CAED+uC,gBACE,MAAM9/B,EAAKjP,KACL2N,EAASsB,GAAG1B,GAAM6hC,YAAcngC,GAAG1B,GACzC0B,GAAG1B,GAAMukC,YAAYnkC,EAAQ,aAAcsB,GAAG4lC,GAAejtC,KAAKqH,GACnE,CAED+/B,mBACE,MAAM//B,EAAKjP,KACXiP,GAAG1B,GAAM43B,iBAAiBl2B,GAC1BA,GAAG1B,GAAQ,IACZ,CAEDsnC,IAAe/oC,GACbA,EAAE6B,OAAOmnC,mBAAmBjuC,SAAQ/G,IAClCA,EAAGi1C,iBAAiBjpC,EAAE6B,OAAO,GAEhC,ECrBE,MAAMqnC,uBAEXznC,IACApK,GAEAN,YAAY0K,GACV,MAAM0B,EAAKjP,KACXiP,GAAG1B,GAAQA,EACX0B,GAAG9L,EAAUoK,EAAKpK,OAClBoK,EAAK23B,cAAcj2B,EACpB,CAED8/B,gBACEiG,wBAAuBlQ,GAAaznB,IAAIrd,KACzC,CAEDgvC,mBACE,MAAM//B,EAAKjP,KACXg1C,wBAAuBlQ,GAAahe,OAAO7X,GAC3CA,GAAG1B,GAAM43B,iBAAiBl2B,EAC3B,CAED6kC,aACE,MAAM7kC,EAAKjP,KACPiP,GAAG9L,IAAY8L,GAAG1B,IAAOpK,SAC3B8L,GAAG9L,EAAY8L,GAAG1B,IAAOpK,OACzB8L,EAAGgmC,eAAehmC,GAAG9L,GAExB,CAED+xC,kBAAkBC,GACXn1C,MAAKmD,GAASnD,KAAKi1C,eAAeE,EACxC,CAEDF,eAAe9gB,GACRA,GACLn0B,MAAKuN,GAAMomC,eACZ,CAED9zC,UAAsB,IAAIyW,IAE1BzW,UAAmBiM,GACNkpC,wBACRlQ,GAAaj+B,SAAQ+X,GAAKA,EAAEs2B,kBAAkBppC,EAAEwZ,SACpD,CAEDzlB,YACEujB,SAASxT,GAAGhJ,OAAQ,KAAM,cAAeouC,wBAAuBI,GACjE,QAGCJ,wBAAuB1nB,IACxB,EChCI,MAAM+nB,kBAAkB9N,EAE7B1nC,kBAAoB,CAClBmhC,KAAM,CAAE5gC,KAAMqB,SACd6zC,IAAK,CAAEl1C,KAAMqB,QAAS8zC,SAAS,GAC/BC,KAAM,CAAEp1C,KAAMqB,QAAS8zC,SAAS,GAChCvf,QAAS,CAAE51B,KAAM4N,QACjB+oB,OAAQ,CAAE32B,KAAM4N,QAChBynC,QAAS,CAAEr1C,KAAMqB,SACjBi0C,SAAU,CAAEt1C,KAAMqB,SAClB6c,OAAQ,CAAEle,KAAMqB,SAChB2uC,KAAM,CAAEhwC,KAAMqB,SAEdk0C,QAAS,CAAE,EACXj7B,IAAK,CAAE,EACPsf,MAAO,CAAE,EAET4b,GAAI,CAAE,EACNC,QAAS,CAAE,EACX1yC,OAAQ,CAAEoyC,SAAS,EAAMhI,WAAYT,UACrCc,YAAaA,EACbzwB,YAAaA,EACb2Q,SAAUA,EAEVkL,SAAU,CAAE,GAGd8c,IACAC,IACA54B,IACA64B,IACAC,IACAC,IACAC,IACAnd,IACAE,IAEAr2B,cACEwlB,QACA,MAAMpZ,EAAKjP,KACXiP,EAAGyL,IAAM,GACTzL,EAAG9L,OAAS,GACZ8L,GAAG6mC,GAAW,IAAIhH,kBAAkB7/B,GACpCA,GAAGiqB,GAAW,IAAIwW,kBAAkBzgC,GACpCA,GAAG+mC,GAAgB,IAAIhB,uBAAuB/lC,GAC9CA,GAAGkO,GAAe,IAAIs2B,sBAAsBxkC,GAC5CA,GAAG+pB,GAAY,IAAIib,mBAAmBhlC,GACtCA,GAAGknC,GAAU,IAAItC,gBAAgB5kC,GACjCA,GAAGinC,GAAkB,IAAItB,eAAe3lC,EACzC,CAEDmnC,yBAAyBpuC,EAAMquC,EAAUC,GACvCjuB,MAAM+tB,yBAAyBpuC,EAAMquC,EAAUC,EAChD,CAEDC,oBACEluB,MAAMkuB,oBACFv2C,KAAKw2C,YAAYx2C,KAAKy2C,QAC3B,CAEDC,uBACEtzB,SAASuzB,kBAAkB32C,MAC3BqoB,MAAMquB,sBACP,CAODE,mBACE,OAAO52C,KAAKghC,KAAOhhC,KAAOqoB,MAAMuuB,kBACjC,CAODC,eACExuB,MAAMwuB,eACN,MAAM5nC,EAAKjP,KACX,GAAIiP,EAAG0mC,QAAS,CACd,MAAM9qC,EAAQoE,EAAG0mC,QAAQ/xC,WAAW,QAAU5D,KAAO4G,OACrDoD,EAAWma,aAAalV,EAAG0mC,QAAS9qC,EACrC,CACF,CAODisC,WAAWvR,GACT,MAAMt2B,EAAKjP,KACPulC,EAAQxV,IAAI,aACV9gB,EAAG0hC,QACA1hC,GAAGgnC,GAGNhnC,GAAGgnC,GAAgBc,SAFnB9nC,GAAGgnC,GAAkB,IAAI5F,eAAephC,IAK1CA,GAAGgnC,IAAiBjH,mBACpB//B,GAAGgnC,QAAkBxxC,GAG1B,CAMDswC,eAAe94B,GAEd,CAMD2tB,SACE,OAAO5pC,KAAKg3C,gBAAkBh3C,KAAKw1C,KAAOx1C,KAAKi3C,WAAa,EAC7D,CAMDA,WACE,OAAOj3C,KAAKk3C,gBACb,CAMDA,iBACE,OAAOl3C,KAAKs0C,YAAclK,EAAgBpqC,KAAKs0C,aAAehL,CAC/D,CAMD6N,cACE,MAAMloC,EAAKjP,KACLgC,EAAM,CACVo1C,OAAUnoC,EAAGymC,SACb,YAAazmC,EAAGqP,OAChBm3B,QAAWxmC,EAAGwmC,QACd,CAAC,KAAKxmC,EAAG+mB,WAAY/mB,EAAG+mB,SAAW,EACnC,CAAC,KAAK/mB,EAAG8nB,UAAW9nB,EAAG8nB,QAAU,GAEnC,OAAO9nB,EAAGooC,OAAOpoC,EAAGyL,IAAK1Y,EAC1B,CAKDqyC,mBAEA,CAKAoC,SACEz2C,MAAK+1C,KAAe,IAAIzG,oBAAoBtvC,KAC7C,CAMDs7B,OAAOxvB,GACL9L,MAAK+1C,IAAYza,OAAOxvB,EACzB,CAQDurC,OAAO38B,EAAK1Y,EAAKs1C,GAAO,GAMtB,OALAt1C,EAAMA,GAAO,IACZ0Y,GAAO,IAAItY,MAAM,KACfM,KAAInB,GAAKA,EAAEM,SACX+D,QAAOrE,GAAKA,EAAE2C,OAAS,IACvBxB,KAAInB,GAAKS,EAAIT,EAAEM,QAAUy1C,IACrBt1C,CACR,CAWD8oB,aAAatqB,EAAIkB,EAAOutC,GAAW,GACjC,OAAOjvC,MAAK81C,GAASx+B,MAAM9W,EAAIkB,EAAOutC,EACvC,CAODjwB,QAAQtV,EAAQ,IACd,OAAO4Q,EAAM0E,QAAQhf,KAAM0J,EAC5B,CAQD2U,QAAQ3U,EAAQ,GAAI0V,GAAS,GAC3B,OAAO9E,EAAM+D,QAAQre,KAAM0J,EAAO0V,EACnC,CAOD1V,MAAMA,EAAQ,GAAI4U,GAAS,GACzB,OAAOhE,EAAM5Q,MAAM1J,KAAM0J,GAAO,EAAO4U,EACxC,CAODjC,SAAS3S,EAAQ,GAAI4U,GAAS,GAC5B,OAAOhE,EAAM+B,SAASrc,KAAM0J,GAAO,EAAO4U,EAC3C,CAODwkB,OAAO5d,GAAU,EAAMC,GAAW,EAAOpd,GACvC/H,KAAKyvB,KAAK,SAAU1nB,EAAMmd,EAASC,GAAU,EAC9C,CAUDsK,KAAKznB,EAAMhG,EAAM,GAAIkjB,GAAU,EAAOC,GAAW,EAAOC,GAAa,GACnE,OAAOhC,SAAS8C,KAAKlmB,KAAMgI,EAAMhG,EAAKkjB,EAASC,EAAUC,EAC1D,CAQDmyB,UAAUvvC,EAAO,GAAIV,EAAU,GAC7B,OAAO8b,SAASc,KAAKlkB,KAAMgI,EAAMV,EAClC,CAQD+c,KAAKrc,EAAMgsB,GACT,OAAOh0B,KAAKwjB,OAAOxb,EAAMgsB,GAAM,EAChC,CAQDpkB,GAAG5H,EAAMgsB,EAAM3P,GAAO,GACpB,OAAOrkB,KAAKwjB,OAAOxb,EAAMgsB,EAAM3P,EAChC,CAQDmL,IAAIxnB,EAAMgsB,GACR,OAAOh0B,KAAKykB,SAASzc,EAAMgsB,EAC5B,CAMDnQ,QAAQ/X,GACNsX,SAASS,QAAQ/X,EAClB,CAQD0X,OAAOxb,EAAMgsB,EAAM3P,GAAO,GACxB,OAAOrkB,KAAK8xC,YAAY9xC,KAAMgI,EAAMgsB,EAAM3P,EAC3C,CAQDI,SAASzc,EAAMgsB,GACb,OAAOh0B,KAAK+xC,YAAY/xC,KAAMgI,EAAMgsB,EACrC,CAWD8d,YAAYhyC,EAAIkI,EAAO,GAAIvH,EAAI4jB,GAAO,GACpC,OAAOjB,SAAS8E,OAAOloB,KAAMF,EAAIkI,EAAMvH,EAAI4jB,EAC5C,CASD0tB,YAAYjyC,EAAIkI,EAAO,GAAIvH,GACzB,OAAO2iB,SAAS9F,OAAOtd,KAAMF,EAAIkI,EAAMvH,EACxC,CAKDsN,SACE/N,KAAKw1C,MAAQx1C,KAAKw1C,IACnB,CAED/gB,UAAU/yB,GACR,OAAO0yB,EAAeK,UAAUz0B,KAAKmD,OAAQzB,EAC9C,CAEG81C,gBACF,IAAIx2C,EAAO+D,OAAO/E,KAAKs1C,KACvB,OAAOt1C,KAAKs1C,IAAM,MAAQ,KAC3B,CAKGkB,iBAEF,OAAO3b,mBAAmB2b,WAAWx2C,KACtC,CAKGy3C,gBACF,OAAOz3C,OAASuG,SAASgU,aAC1B,CAKG2G,UACF,OAAOlhB,KAAKmc,QAAQra,aACrB,CAKGwyC,kBACF,OAAOt0C,MAAKg5B,GAAUA,QACvB,CAKG+W,iBACF,OAAO/vC,MAAKk5B,GAAS6W,UACtB,CAKGkG,qBACF,OAAOj2C,MAAKi2C,EACb,CAMGe,oBACF,OAAOh3C,KAAK03C,oBACP13C,KAAK23C,gBACL33C,KAAK43C,WACL53C,KAAK63C,iBACL73C,KAAK83C,kBACX,CAOGJ,yBACF,OAAOnqB,cAAcmqB,mBAAmB13C,KAAK4tC,YAC9C,CAOGgK,gBACF,OAAOrqB,cAAca,SAASpuB,KAAK41C,GACpC,CAOGkC,yBACF,OAAOvqB,cAAcuqB,mBAAmB93C,KAAKmd,YAC9C,CAMGw6B,qBACF,OAAOpqB,cAAcoqB,eAAe33C,KAAK61C,QAC1C,CAMGgC,sBACF,OAAOtqB,cAAcsqB,gBAAgB73C,KAAK8tB,SAC3C,CAKGiqB,sBACF,OAAOz9B,EAAMiE,UAAUve,MAAM4F,QAAO1D,GAAKA,aAAamzC,YAAWppC,QAAQvK,KAC1E,CAKGsb,gBACF,OAAOhd,KAAK6C,YAAYmF,IACzB,CAEGgwC,kBACF,MAAMjhC,EAAO,IAAIuD,EAAMmC,YAAYzc,OAAO0C,KAAIiE,GAAKA,EAAE9D,aAAak6B,aAAYn3B,QAAOe,GAAKA,IAE1F,OADAoQ,EAAK1F,KAAKrR,KAAK6C,aAAak6B,YACrB5mB,OAAO8hC,aAAalhC,EAC5B,CAKGmhC,oBACF,OAAOl4C,KAAK6C,YAAYq1C,cAAcx1C,KAAIwJ,GAAKrL,OAAOsF,OAAO+F,GAAGtG,QAAOe,GAAKA,aAAasc,gBAAe5N,QAAOA,KAChH,CAOD8iC,QAAQnwC,GACN,OAAOhD,MAAMgG,KAAKhL,KAAKk4C,cAAchJ,OAAOtpC,QAAOsU,GAAKA,EAAE1J,eAAiBxI,IAAMqN,KAClF,CASD+iC,eAAejhC,EAAMnP,EAAMtG,GACzB1B,KAAKm4C,QAAQhhC,GAAMG,MAAMiT,YAAYviB,EAAMtG,EAC5C,CAOD7B,qBAAqBmC,GACnB,MAAM+U,EAAO,IAAIuD,EAAMmC,YAAYza,IAAMU,KAAIiE,GAAKA,EAAEo2B,aAAYn3B,QAAOe,GAAKA,IAE5E,OADAoQ,EAAK1F,KAAKrP,EAAIa,aAAak6B,YAAc/6B,EAAI+6B,YACtC5mB,OAAO8hC,aAAalhC,EAC5B,CAQDlX,cAAcmI,EAAMS,EAAO+E,GACpBzE,eAAeC,IAAIhB,IACtBe,eAAeE,OAAOjB,EAAMS,GAASzI,KAAMwN,EAE9C,ECjjBI,MAAM6qC,2BAA2BhD,UAEtCx1C,kBAAoB,CAClB8wC,QAAS,CAAE,EACX2H,UAAW,CAAEl4C,KAAMqB,SACnB82C,QAAS,CAAEhD,SAAS,EAAMznC,UAAW,YACrC0qC,UAAW,CAAEjD,SAAS,EAAMznC,UAAW,cACvC2qC,QAAS,CAAElD,SAAS,EAAMznC,UAAW,YACrC/F,KAAM,CAAE3H,KAAM4E,QAGhBnC,cACEwlB,QACAroB,KAAK+H,KAAO/H,KAAKw6B,QAClB,CAEDyc,WACE,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI,cAAcytB,EAAU15B,EAAGuoC;kBACxBvoC,GAAGugC,GAAU5nC,KAAKqH;iBACnBA,GAAG0jC;iBACH1jC,GAAGyjC;0BACMxK,EAASj5B,EAAGkoC;SAC7Bn3C,MAAK04C;2BAEX,CAEGz3B,YACF,OAAOjhB,KAAKqc,SAAS,oBACtB,CAEGme,eACF,MAAMvjB,EAAMjX,KAAK6C,YAAYk6B,WAC7B,OAAOtL,OAAOG,QAAQ5xB,MAAM0C,KAAI5C,GAAMyM,EAAO4B,QAAQrO,EAAImX,IAC1D,CAED0hC,QACE34C,MAAK2J,IAAO,EACb,CAEDs7B,OACEjlC,MAAK2J,IAAO,EACb,CAEDsnC,WAAWlpC,GACT/H,KAAK+H,KAAOA,CACb,CAED2wC,MACE,OAAO14C,KAAK+H,KAAKrF,KAAIiE,GACZuU,CAAI;mBACEytB,GAAyB,IAAfhiC,EAAEib;mBACZ+mB,EAAUhiC,EAAEiyC;oBACXjQ,EAAUhiC,EAAEqyB;iBACf2P,EAAUhiC,EAAE2a,gCAE1B,CAED3X,IAAO/H,GAAM,GACX5B,KAAKihB,MAAMpa,SAAQ/G,GAAMA,EAAG2kC,OAAS7iC,IACrC5B,KAAK8iC,QACN,CAED0M,IAAU1jC,GACR,MAAMmD,EAAKjP,KACPiP,EAAGqpC,WAAaxsC,EAAE6B,OAAO82B,QAC3Bx1B,EAAGgS,MAAMrb,QAAO9F,GAAMA,GAAMgM,EAAE6B,SAAQ9G,SAAQ/G,GAAMA,EAAG2kC,QAAS,GAEnE,CAEDkO,IAAS7mC,GACP,MAAM+sC,EAAe/sC,GAAGsnC,eAAe,IAAI5jC,QAAQ,qBAChDqpC,GAAc/sC,EAAE6B,OAAOI,UAC3B,CAED2kC,IAAS5mC,GACP,OAAQA,EAAEgY,MACR,IAAK,YACHhY,EAAE6B,OAAOgrC,UACT,MACF,IAAK,aACH7sC,EAAE6B,OAAOs3B,SAGd,QAGCjlC,KAAKiJ,OAAO,eACb,ECzFI,MAAM6vC,+BAA+BzD,UAE1Cx1C,kBAAoB,CAClB24C,UAAW,CAAEjD,SAAS,EAAMznC,UAAW,cACvC2qC,QAAS,CAAElD,SAAS,EAAMznC,UAAW,YACrC8qC,QAAS,CAAErD,SAAS,GACpBj0B,MAAO,CAAEi0B,SAAS,GAClB9Q,OAAQ,CAAErkC,KAAMqB,QAAS8zC,SAAS,IAGpC1yC,cACEwlB,OACD,CAED0wB,aAAaC,GACX,MAA+B,iBAAxBh5C,KAAK6K,OAAOsR,OACpB,CAED86B,WACE,MAAMhoC,EAAKjP,KACL6K,EAAQoE,EAAGpE,MACX2tC,EAAYvpC,EAAGupC,WAAa3tC,GAAO2tC,UACnCC,EAAUxpC,EAAGwpC,SAAW5tC,GAAO4tC,QACrC,OAAOv9B,CAAI,8BAA8BjM,EAAGyL;;;2CAGL89B,KAAavpC,EAAGw1B,OAAS,GAAK;mBACtDx1B,EAAGwlB,UAAUxlB,EAAGqS;;;wDAGqBm3B,KAAWxpC,EAAGw1B,OAAS,OAAS;;qBAEnEx1B,EAAGwlB,UAAUxlB,EAAG2pC;qBAChB3pC,EAAGioC;;;;YAKrB,CAEDjS,OACEjlC,KAAK8iC,QAAO,EACb,CAED6V,QACE34C,KAAK8iC,QAAO,EACb,CAED/0B,SACE/N,KAAK8iC,QAAQ9iC,KAAKykC,OACnB,CAED3B,OAAOlhC,GAAM,GACA5B,KACRykC,OAAS7iC,EACZymB,MAAMya,QACP,CAEGj4B,YACF,OAAO7K,KAAKqe,QAAQ,iBAAmB/D,EAAM2+B,UAAUj5C,KACxD,QAGCA,KAAKiJ,OAAO,oBACb,EC9DI,MAAMiwC,uBAAuB7D,UAEhCx1C,kBAAoB,CAChB+4C,QAAS,CAAErD,SAAS,GACpB7H,MAAO,IAAKA,GACZyL,OAAQ,CAAE5D,SAAS,EAAMn1C,KAAMqB,SAC/B23C,SAAU,CAAE7D,SAAS,EAAMn1C,KAAMqB,SACjCkvB,MAAO,CAAE4kB,SAAS,EAAMn1C,KAAM4N,SAGlC07B,IACA2P,KAAS,EACTC,IAAY,EACZzoC,IAAQ,EACR9I,IAEAlF,cACIwlB,QACAroB,KAAK2wB,MAAQ,EACb3wB,MAAK0pC,GAAOtB,IACZpoC,MAAK+H,GAAQ/H,MAAKmO,GAASnO,KAC9B,CAED02C,uBACInuB,cAAcvoB,MAAKs5C,IACnBjxB,MAAMquB,sBACT,CAEDO,WACI,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI,0BAA0BytB,EAAU15B,EAAGuoC,eAAe9N,EAAIz6B,GAAGy6B;0BACtD,IAAMz6B,GAAGoqC,IAAS;yBACnB,IAAMpqC,GAAGoqC,IAAS;gCACXnR,EAASj5B,EAAGkoC;cAC9BloC,GAAG8B;cACH9B,EAAGioC;;cAEHjoC,GAAG2H;eAEZ,CAEDigC,aAAatR,GACTvlC,MAAKu5C,KACLlxB,MAAMwuB,aAAatR,EACtB,CAEDiU,QAAQjU,GACCA,EAAQxV,IAAI,WACjB/vB,MAAKu5C,IACR,CAEDpC,cACI,MAAMloC,EAAKjP,KAQX,MAPY,IACLqoB,MAAM8uB,cACTsC,MAASxqC,EAAGkqC,OACZ,oBAAqBlqC,EAAGmqC,SACxB,CAAC,SAASp5C,KAAK0tC,SAAUz+B,EAAGy+B,MAInC,CAEDzI,OACIjlC,KAAK8iC,QAAO,EACf,CAED6V,QACI34C,KAAK8iC,QAAO,EACf,CAED/0B,SACI/N,KAAK8iC,QAAQ9iC,KAAKm5C,OACrB,CAEDrW,OAAOlhC,GAAM,GACT,MAAMqN,EAAKjP,KACXiP,EAAGkqC,OAASv3C,EACRqN,EAAGkqC,QAAQxxC,YAAW,KAAQsH,GAAGy6B,GAAKhoC,MAAM0b,UAAUrP,OAAO,UAAU,EAAI,GAAK,KACpFsa,MAAMya,QACT,CAEG4W,kBACA,OAAO15C,MAAK+H,IAAO7D,OAAS,CAC/B,CAEG00C,SACA,OAAO54C,KAAKy0B,UAAUz0B,KAAK44C,QAC9B,CAEG7nC,SAAW,OAAO/Q,KAAKs1C,IAAMt1C,MAAK25C,GAAU35C,MAAK44C,EAAW,CAE5DhiC,SAAY,OAAO5W,KAAKs1C,IAAMt1C,MAAK44C,GAAW54C,MAAK25C,EAAU,CAE7DA,SACA,OAAO35C,KAAKo5C,SAAWl+B,CAAI,sEAAsElb,KAAK24C,mBAAqB,EAC9H,CAKDxqC,IAAS4Q,GACL,OAAO0S,OAAOG,QAAQ7S,GAAMrc,KAAI5C,GAAMyM,EAAO4B,QAAQrO,EAAI,CAAC84C,QAAQ,CAAE,KACvE,CAEDW,MACI,MAAMtqC,EAAKjP,KACPiP,EAAGkqC,QACH5wB,cAActZ,GAAGqqC,IACjBrqC,GAAGqqC,GAAY,GAEfrqC,GAAG2qC,IAEV,CAEDA,MACI,MAAM3qC,EAAKjP,KACX,IAAKiP,EAAGyqC,YAAa,OACrB,MAAMz4B,EAAQhS,GAAGlH,GACbkH,EAAG2pC,QACH3pC,GAAG4B,IAAS,EAEZ5B,EAAG2pC,QAAU33B,EAAM,GAAG23B,QAE1B3pC,GAAGqqC,GAAY3tB,aAAY,KACnB1c,GAAGoqC,KACPpqC,GAAG4B,KACC5B,GAAG4B,IAASoQ,EAAM/c,SAAS+K,GAAG4B,GAAQ,GAC1C5B,EAAG2pC,QAAU33B,EAAMhS,GAAG4B,IAAO+nC,QAAO,GAC1B,IAAX3pC,EAAG0hB,MACT,QAGG3wB,KAAKiJ,OAAO,WACf,ECxIE,MAAM4wC,wBAAwBxE,UAEnCx1C,kBAAoB,CAClBO,KAAM,IAAKktC,GACXr4B,KAAM,IAAKA,IACXy4B,MAAO,IAAKA,GACZoM,SAAU,CAAEhsC,UAAY,aACxBisC,SAAU,CAAEjsC,UAAY,aACxBksC,YAAa,IAAKtM,EAAO5/B,UAAY,gBACrCmsC,UAAW,CAAE75C,KAAMqB,SACnBmgB,SAAU,CAAExhB,KAAMqB,QAAS8zC,SAAS,GACpC2E,QAAS,CAAE95C,KAAMqB,QAAS8zC,SAAS,GACnC/6B,OAAQ,CAAEpa,KAAMqB,QAAS8zC,SAAS,GAClC4E,SAAU,CAAE/5C,KAAMqB,SAClB24C,KAAM,CAAE,EACR94B,MAAO,CAAE,EACT+4B,QAAS,CAAE,EACXh0C,KAAM,CAAE,GAGVi0C,IAASlS,IACTmS,IAAUnS,IAEVvlC,cACEwlB,QACAroB,KAAKI,KAAO,QACb,CAEDy2C,aAAatR,GACXld,MAAMwuB,aAAatR,GACfvlC,KAAKi6C,YAAcj6C,KAAK4hB,UAAU5hB,KAAKglC,OAC5C,CAEDiS,WACE,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI,uCAAuCwuB,EAAIz6B,GAAGqrC;eAC9C3R,EAAU15B,EAAGuoC;gBACZ7O,EAAU15B,EAAG7O;qBACR8nC,EAASj5B,EAAGkoC;iBAChBxO,EAAU15B,GAAGorC;oBACVprC,EAAG2S;sBACD3S,GAAGurC;qBACJvrC,GAAGwrC;kBACNxrC,GAAG0jC;YACT1jC,GAAG8B,MAAU9B,GAAG2H,aACzB,CAEDugC,cACE,MAAMloC,EAAKjP,KACLiV,EAAOo5B,EAAUp/B,EAAGgG,MAW1B,MAVY,IACPoT,MAAM8uB,cACT38B,OAAUvL,EAAGuL,OACb,aAAcjU,SAASgU,gBAAkBtL,EACzC,CAAC,QAAQA,EAAG5I,QAAS4I,EAAG5I,KACxB,CAAC,OAAO4O,KAASA,EACjB,CAAC,eAAehG,EAAGy+B,SAAUz+B,EAAGirC,QAChC,CAAC,OAAOjrC,EAAGy+B,UAAWz+B,EAAGirC,SAAWjrC,EAAGy+B,MACvC,CAAC,OAAOz+B,EAAG+qC,eAAgB/qC,EAAGuL,QAAUvL,EAAG+qC,YAG9C,CAEDzxC,QACEvI,MAAKs6C,GAAO54C,OAAO6G,OACpB,CAEDy8B,QACEnlB,uBAAsB,IAAM7f,MAAKs6C,GAAO54C,OAAOsjC,SAChD,CAEDj3B,SACE/N,KAAKwa,QAAUxa,KAAKwa,MACrB,CAEDm4B,IAAS7mC,GACP,MAAMmD,EAAKjP,KAGX,OAFGiP,EAAGkrC,UAAUlrC,EAAGlB,SACnBkB,EAAGyrC,QAAQC,UACP1rC,EAAG2rC,QAAgB3rC,EAAGotB,MAAMxH,QAC5B5lB,EAAG4rC,SAAiB5rC,EAAGotB,MAAMye,cACjC7rC,EAAG6zB,QACJ,CAED0X,MACEx6C,KAAK06C,QAAQK,OAAM,EACpB,CAEDN,MACEz6C,KAAK06C,QAAQK,OAAM,EACpB,CAEGH,cACF,OAAOvN,YAAY2N,QAAQh7C,KAAKI,KACjC,CAEGy6C,eACF,OAAOxN,YAAYwN,SAAS76C,KAAKI,KAClC,CAEGs6C,aACF,OAAO16C,MAAKu6C,GAAQ74C,KACrB,CAEG26B,WACF,OAAOr8B,KAAKqe,QAAQ,gBACrB,CAEGiD,SACF,OAAOthB,KAAKy0B,UAAUz0B,KAAKshB,MAC5B,CAEG+4B,SACF,OAAOr6C,KAAKy0B,UAAUz0B,KAAKq6C,QAC5B,CAEGtpC,SAAW,OAAO/Q,KAAKs1C,IAAMt1C,MAAKshB,GAASthB,MAAKi7C,EAAY,CAE5DrkC,SAAY,OAAO5W,KAAKs1C,IAAMt1C,MAAKi7C,GAAYj7C,MAAKshB,EAAS,CAE7D25B,SAAc,OAAOj7C,KAAKo6C,KAAOp6C,MAAKk7C,GAAchgC,CAAI,2BAA8B,CAEtFggC,SACF,OAAQhgC,CAAI;eACDwuB,EAAI1pC,MAAKu6C;YACZv6C,KAAKo6C;iBACAzR,EAAU3oC,KAAK85C;iBACfnR,EAAU3oC,KAAK+5C;8BAE7B,QAGC/5C,KAAKiJ,OAAO,YACb,ECjII,MAAMkyC,0BAA0B9F,UAErCx1C,aAAe6a,CAAG,6KAElB7a,kBAAoB,CAClBsU,KAAM,CAAE,EACRxG,OAAQ,CAAE,EACV/I,OAAQ,CAAE2oC,WAAYT,UACtBx7B,KAAM,CAAElR,KAAM4N,QACdyD,MAAO,CAAErR,KAAM4N,OAAQu/B,WAAYL,QACnCt7B,IAAK,CAAExR,KAAM4N,OAAQu/B,WAAYL,QACjCkO,UAAW,CAAEttC,UAAW,cACxButC,UAAW,CAAEvtC,UAAW,cACxBwtC,QAAS,CAAExtC,UAAW,YACtBytC,SAAU,CAAEztC,UAAW,aACvB0tC,SAAU,CAAE1tC,UAAW,aACvB2tC,SAAU,CAAE3tC,UAAW,aACvB4tC,QAAS,CAAE5tC,UAAW,YACtB6tC,OAAQ,CAAE7tC,UAAW,WACrB0qC,UAAW,CAAE1qC,UAAW,cACxB8tC,YAAa,CAAE9tC,UAAW,gBAC1B+tC,QAAS,CAAE/tC,UAAW,WAAY1N,KAAM4N,QACxC8tC,QAAS,CAAEhuC,UAAW,WAAY1N,KAAM4N,SAG1CmG,IAEAtR,cACEwlB,QACA,MAAMpZ,EAAKjP,KACXiP,GAAGkF,GAAQ,IAAI1D,OACfxB,GAAGkF,GAAMhR,OAASnC,EAAOmC,OACzB8L,EAAG9L,OAASnC,EAAOmC,OACnB8L,EAAG2C,IAAM3C,GAAGkF,GAAMvC,IAClB3C,EAAGwC,MAAQxC,GAAGkF,GAAM1C,MACpBxC,EAAGqC,KAAOrC,GAAGkF,GAAM7C,KACnBrC,EAAG4sC,QAAU,KACb5sC,EAAG6sC,QAAU,KACb7sC,EAAG8sC,UAAY,WACf9sC,EAAGosC,UAAY,WACfpsC,EAAG0sC,OAAS,YACZ1sC,EAAGssC,SAAW,gBACdtsC,EAAG2sC,YAAc,cACjB3sC,EAAGusC,SAAW,uBACdvsC,EAAGysC,QAAU,yDACbzsC,EAAGwsC,SAAW,wDACf,CAEGtnC,WACF,MAAMlF,EAAKjP,KAEX,OAAO,IAAI0N,MAAM1N,MAAKmU,GAAO,CAC3BlH,IAAG,CAACU,EAAQC,EAAMlM,KACW,mBAAhBiM,EAAOC,KAChBD,EAAOC,GAAQlM,EACfuN,GAAG8c,OAEE,GAET/iB,IAAI2E,EAAQC,EAAM2R,GAChB,MAAM7d,EAAQiM,EAAOC,GACrB,OAAIlM,aAAiB0E,SACZ,YAAa0E,GAClB,IACE,OAAOpJ,EAAMuJ,MAAMjL,OAASuf,EAAW5R,EAAS3N,KAAM8K,EACpE,CAAsB,QACRmE,GAAG8c,IACJ,CACb,EAEerqB,CACR,GAEJ,CAEDs6C,gBACE,MAAM/sC,EAAKjP,KACK,GAAZiP,EAAGwC,OACLxC,EAAGwC,MAAQ,GACXxC,EAAGqC,QAEHrC,EAAGwC,OAEN,CAEDwqC,YACE,MAAMhtC,EAAKjP,KACK,IAAZiP,EAAGwC,OACLxC,EAAGwC,MAAQ,EACXxC,EAAGqC,QAEHrC,EAAGwC,OAEN,CAEDyqC,eACEl8C,KAAKsR,MACN,CAED6qC,WACEn8C,KAAKsR,MACN,CAED8qC,UAAUjoC,GACR,MAAMlF,EAAKjP,KACX,OAAQmU,GAAQlF,GAAGkF,IAAOvP,OAAOqK,EAAGrK,OAAQqK,EAAG9L,OAChD,CAEDq2C,UACE,MAAMvqC,EAAKjP,KACLmU,EAAO,IAAI1D,OAAOxB,GAAGkF,IAC3BlF,GAAGotC,GAAcloC,GACjBlF,EAAGwgB,KAAK,OAAQ,CAAErvB,KAAM,WAAY+T,KAAMA,EAAMvS,IAAKqN,EAAGmtC,UAAUjoC,KAAS,GAAM,EAClF,CAED8iC,WACE,MAAMhoC,EAAKjP,KACXiP,GAAGkF,GAAM7C,KAAOrC,EAAGqC,KACnBrC,GAAGkF,GAAM1C,MAAQxC,EAAGwC,MACpBxC,GAAGkF,GAAMvC,IAAM3C,EAAG2C,IAClB3C,GAAGkF,GAAMhR,OAAS8L,EAAG9L,OAErB,MAAMm5C,EAAO7rC,OAAO8rC,SAAQ,EAAMttC,EAAG9L,QAAQT,KAAInB,GAAK2Z,CAAI,oBAAoB3Z,YACxEi7C,EAASvtC,GAAGwtC,KACZnrC,EAAOrC,GAAGytC,KAEhB,OAAOxhC,CAAI;oDACqCgtB,EAASj5B,EAAGkoC;iBAC/CxO,EAAU15B,EAAGuoC;sBACRvoC,GAAG0tC;oBACL1tC,GAAG2tC;+CACwB3tC,EAAGupC;;wCAEVvpC,EAAG+sC,6BAA6B/sC,EAAG0sC,sBAAsBrR,EAAWr7B,EAAG8sC;;;;oBAI3FS;oBACAlrC;;;;wCAIoBrC,EAAGgtC,yBAAyBhtC,EAAG0sC,sBAAsBrR,EAAWr7B,EAAGosC;;;kCAGzEpsC,EAAGusC,aAAac;YACtChS,EAAWr7B,GAAG4tC;aAEvB,CAEDR,IAAcloC,GACZ,MAAMlF,EAAKjP,KACX,IAAKiP,EAAGtB,OAAQ,OAChB,MAAMmvC,EAAMxiC,EAAM5Q,MAAMnD,SAAS0Y,gBAAiBhQ,EAAGtB,QACrD,OAAKmvC,EAEDA,aAAeC,iBACA,SAAbD,EAAI18C,KAAwB08C,EAAIE,YAAc7oC,EAC3C2oC,EAAIp7C,MAAQuN,EAAGmtC,UAAUjoC,QAElCmG,EAAMoF,QAAQo9B,EAAK7tC,EAAGmtC,UAAUjoC,SANhC,CAOD,CAED4X,MACE,MAAM9c,EAAKjP,KACXiP,EAAG2C,IAAM3C,GAAGkF,GAAMvC,IAClB3C,EAAGwC,MAAQxC,GAAGkF,GAAM1C,MACpBxC,EAAGqC,KAAOrC,GAAGkF,GAAM7C,KACnBrC,EAAG9L,OAAS8L,GAAGkF,GAAMhR,MACtB,CAED85C,IAAS17C,EAAG4S,GAEV,OAAO5S,GAAKP,EAAO+L,MAAMxL,KAAO4S,EAAKvC,KAAOuC,EAAK1C,QADtCzR,MACmDmU,GAAM1C,OADzDzR,MACqEmU,GAAM7C,OAAS6C,EAAK7C,IACrG,CAEDurC,MACE,MAAM5tC,EAAKjP,KACLk9C,EAAQ,IAAIzsC,OAClBysC,EAAM/5C,OAAS8L,EAAG9L,OAClB,MACMqG,EADOyF,GAAGkF,GAAMzU,MAAMuP,EAAG9L,QAE5BT,KAAInB,IACH,MAAM47C,EAAKluC,GAAGguC,GAAS17C,EAAG27C,GAASjuC,EAAGssC,SAAW,GAC3C6B,EAAKnuC,GAAGguC,GAAS17C,EAAG0N,GAAGkF,IAASlF,EAAG2sC,YAAc,GAGvD,MAAO,wBADGr6C,EAAI,mDAAmD47C,KAAMC,oBAAqB77C,MAAMA,QAAU,UACpE,IAEzCmB,KAAI,CAACnB,EAAGoB,KACP,GAAU,IAANA,EAAS,MAAO,yBAAyBpB,IAE7C,OADgBoB,EAAI,GAAK,EACR,+BAA+BpB,IAAMA,CAAC,IAG3D,OADAiI,EAAO6H,KAAK,UACL7H,EAAOlH,KAAK,GACpB,CAGDm6C,MACE,MAAMxtC,EAAKjP,KACLq9C,EAAUpuC,GAAGkF,GAAM9B,KACnBmqC,EAAS/rC,OAAO6sC,WAAU,EAAOruC,EAAG9L,QACpC4T,EAAOylC,EAAO95C,KAAI,CAACnB,EAAGoB,IAAMuY,CAAI,kBAAkBvY,eAAegmC,EAAU0U,GAAW97C,QAAWkD,MAAclD,eAErH,OAAO2Z,CAAI,oBAAoBjM,GAAGsuC,iCAAuCtuC,EAAGwsC,oBAAoBe,EAAO1lC,QAAQumC,OAAatmC,YAC7H,CAED2lC,MACE,MAAMztC,EAAKjP,KACX,OAAOkb,CAAI,mBAAmBjM,GAAGuuC,+BAAoCvuC,EAAGysC,mBAAmBzsC,GAAGkF,GAAM5C,qCAAqCtC,EAAG4sC,iBAAiB5sC,EAAG6sC,WACjK,CAEDc,IAAO9wC,GACLsX,SAASS,QAAQ/X,GACZA,EAAE6B,OAAOyP,UAAU2C,SAAS,SACjC/f,KAAK4R,IAAM5Q,EAAO+L,MAAMjB,EAAE6B,OAAOE,QAAQ+D,IAAK5R,KAAK4R,KACpD,CAED2rC,IAASzxC,GACP9L,KAAKyR,MAAQ3F,EAAE6B,OAAO8vC,aACvB,CAEDD,IAAQ1xC,GACN9L,KAAKsR,KAAOxF,EAAE6B,OAAOjM,KACtB,CAEDi7C,IAAO7wC,GAEN,QAGC9L,KAAKiJ,OAAO,cACb,EC5OI,MAAMy0C,sBAAsBrI,UAEjCx1C,cAAgB6a,CAAG,0EAEnB7a,kBAAoB,CAElB89C,WAAY,CAAEv9C,KAAMS,OAAQiN,UAAW,cAAeynC,SAAU,GAEhEqI,QAAS,CAAEx9C,KAAMqB,SACjBsc,UAAW,IAAKA,GAChB8/B,MAAO,IAAK9/B,GAEZ+/B,MAAO,CAAE,EACTx8B,MAAO,CAAE,EACTy8B,SAAU,CAAE,EACZ13C,KAAM,CAAE,EACR23C,OAAQ,CAAE,EACVC,OAAQ,CAAE,EAEVC,UAAW,CAAEpwC,UAAW,cACxBqwC,UAAW,CAAErwC,UAAW,cACxBswC,YAAa,CAAEtwC,UAAW,gBAE1BuwC,SAAU,CAAEvwC,UAAW,aACvBwwC,YAAa,CAAExwC,UAAW,gBAC1Bqe,QAAS,CAAEre,UAAW,YACtBywC,UAAW,CAAEzwC,UAAW,cACxB0qC,UAAW,CAAE1qC,UAAW,cACxB2qC,QAAS,CAAE3qC,UAAW,YACtB0wC,SAAU,CAAE1wC,UAAW,cAIzB2wC,IAAW1yC,KAAKvL,GAEhBqC,cACEwlB,QACAroB,KAAKo3C,QAAS,EACdp3C,KAAKse,QAAS,EACdte,KAAK69C,MAAQ,QACb79C,KAAK+d,UAAY,MACjB/d,KAAK29C,WAAa39C,KAAK29C,YAAc,CAAA,EACrC39C,KAAK8qB,aAAa9qB,MAAKy+C,GACxB,CAEDxH,WACE,MAAMhoC,EAAKjP,KACLk5B,EAAWjqB,EAAGyvC,WAAazvC,GAAG0vC,KAAoB1vC,GAAG2vC,KAC3D,OAAO1jC,CAAI,cAAcytB,EAAU15B,EAAGuoC,2BAA2BtP,EAASj5B,EAAGkoC,mBAAmBje,SACjG,CAEDylB,MACE,MAAM1vC,EAAKjP,KACX,MAAO,CAACiP,GAAG4vC,GAAW5vC,GAAGgvC,GAAShvC,GAAGJ,GAAOI,GAAG+uC,GAAS/uC,GAAG6vC,GAC5D,CAEDF,MACE,MAAM3vC,EAAKjP,KACL+wB,EAAQmd,eAAe6Q,SAAS9vC,EAAG8O,WACnCihC,EAAajuB,EAAQ,QAAU,QAC/BkuB,EAAWluB,EAAQ,QAAU,QAC7BmuB,EAAYnuB,EAAQ9hB,GAAGkwC,GAAUlwC,GAAGJ,GACpCuwC,EAAWruB,EAAQ9hB,GAAGJ,GAAQI,GAAGkwC,GACvC,OAAOjkC,CAAI;sBACO8jC;cACRE;;sBAEQD;YACVG;;aAGT,CAEDjI,cACE,MAAMloC,EAAKjP,KASX,MARY,IACPqoB,MAAM8uB,cACTC,OAAQnoC,EAAGmoC,QAAUnoC,EAAGmvC,YACxB,CAAC,QAAQnvC,EAAG4uC,SAAU5uC,EAAG4uC,MACzB,CAAC,QAAQ5uC,EAAGivC,aAAcjvC,EAAGivC,UAC7B,CAAC,MAAMjvC,EAAGkvC,aAAclvC,EAAGkvC,UAC3B,CAAC,UAAUlvC,EAAGmvC,eAAgBnvC,EAAGmvC,YAGpC,CAEGM,iBACF,OAAOxQ,eAAewQ,WAAW1+C,KAAK+d,UACvC,CAEGshC,mBACF,OAAOnR,eAAemR,aAAar/C,KAAK+d,UACzC,CAEGlP,SACF,MAAMI,EAAKjP,KACX,OAAOkb,CAAI,eAAejM,EAAG2uC,QAAU,mBAAqB,eAAe3uC,EAAGwpC;+BACnDxpC,EAAGovC,gCAAgCpvC,EAAGwlB,UAAUxlB,EAAGqS;kCAChDrS,EAAGqvC,sCAAsCrvC,EAAGwlB,UAAUxlB,EAAG8uC;4BAC/D9uC,EAAGkd,8BAA8Bld,EAAGwlB,UAAUxlB,EAAG5I;;;KAI1E,CAEG43C,SACF,OAAOj+C,KAAK49C,QAAU,GAAK1iC,CAAI,4BAA4Blb,KAAKw4C,kCAAkCx4C,KAAKi+C,qBACxG,CAEGD,SACF,OAAOh+C,KAAK49C,QAAU,GAAK1iC,CAAI,2BAA2Blb,KAAKu+C,kCAAkCv+C,KAAKg+C,qBACvG,CAEGsB,SACF,OAAOpkC,CAAI,4BACZ,CAEG4iC,SACF,MAAM7uC,EAAKjP,KACL0a,EAAMzL,EAAGowC,aAAe,YAAc,WAE5C,OADApwC,EAAG6b,aAAa7b,GAAGwvC,GAAUxvC,EAAG0uC,YACzBziC,CAAI,aAAajM,EAAG6uC,yBAAyB7uC,EAAG8O,aAAarD,KAAOzL,EAAGuvC,YAAYvvC,GAAGwvC,gBAC9F,CAEGU,SACF,OAAOn/C,KAAK89C,MAAQ99C,MAAK89C,GAAS99C,MAAKs/C,EACxC,CAEGT,SACF,MAA0B,QAAnB7+C,KAAK+d,UAAsB/d,MAAKm/C,GAAU,EAClD,CAEGL,SACF,MAA0B,WAAnB9+C,KAAK+d,UAAyB/d,MAAKm/C,GAAU,EACrD,QAGCn/C,KAAKiJ,OAAO,UACb,EC5II,MAAMs2C,wBAAwBlK,UAEnCxyC,cACEwlB,OACD,CAED4uB,WACE,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI,cAAcytB,EAAU15B,EAAGuoC;kEACwBtP,EAASj5B,EAAGkoC;MACxEloC,EAAGioC,qCACN,QAGCl3C,KAAKiJ,OAAO,YACb,ECEI,MAAMu2C,sBAAsBnK,UAE/Bx1C,kBAAoB,CAChB8wC,QAAS,CAAE,EACX8O,KAAM,CAAEr/C,KAAMqB,QAAS8zC,SAAS,GAChC9Q,OAAQ,CAAErkC,KAAMqB,QAAS8zC,SAAS,GAClCmK,KAAM,CAAEt/C,KAAMqB,SACdY,QAAS,CAAEjC,KAAMqB,SACjBsG,KAAM,CAAE3H,KAAM4E,QAIlBnF,eAAiB,CACbmI,KAAM,CAAE,EACRsZ,MAAO,CAAE,EACT28B,OAAQ,CAAE,EACVvQ,MAAO,CAAE,EACT0M,KAAM,CAAE,EACR12C,IAAK,CAAE6K,QAAS,MAGpBoxC,IAAWvX,IACXqW,IAAW1yC,KAAKvL,GAChB+uB,IAAc,KAEd1sB,cACIwlB,QACA,MAAMpZ,EAAKjP,KACXiP,EAAG6b,aAAa7b,GAAGwvC,IACnBxvC,EAAGlH,KAAOkH,GAAGd,GAASc,GACtBA,GAAGsgB,GAAc,IAAI8jB,gBAAgBrzC,KACxC,CAEDwzC,WAAW1nC,GACJA,EAAEwZ,OAAOza,OAAS7K,OACjBA,KAAKykC,QAAS,EAEpB,CAEFqS,WAAWvR,GACPld,MAAMyuB,WAAWvR,GACbA,EAAQxV,IAAI,YAAc/vB,KAAKykC,QAC/BzkC,MAAK4/C,IAEZ,CAEDpG,UACIx5C,MAAK6/C,KACD7/C,KAAKykC,QACLzkC,MAAKuvB,GAAYuT,QAExB,CAEDmU,WACI,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI;cACLwuB,EAAIz6B,GAAG0wC;mBACFhX,EAAU15B,EAAGuoC;mCACGtP,EAASj5B,EAAGkoC;6BAClBloC,GAAGwvC;;0BAENxvC,GAAGurC;2BACFvrC,GAAG6wC;wBACN7wC,GAAGyU;sBACLzU,GAAG0jC;cACX1jC,GAAGgS,GAAOhS,EAAGlH;cAEtB,CAEDovC,cACI,MAAMloC,EAAKjP,KAUX,MATY,IACLqoB,MAAM8uB,cACT4I,QAAW9wC,EAAGpB,QAAQkyC,QACtB,qBAAsB9wC,EAAGywC,KACzB,CAACzwC,GAAGwvC,KAAW,EACfhF,KAAQxqC,EAAGw1B,OACXub,SAAY/wC,EAAG5M,QACf49C,UAAahxC,EAAG5M,QAGvB,CAEDs2C,QACI34C,KAAKykC,QAAS,CACjB,CAEDQ,OACIjlC,KAAKykC,QAAS,CACjB,CAED12B,SACI/N,KAAKykC,QAAUzkC,KAAKykC,MACvB,CASDyb,MAAMh+C,EAAI,EAAG8T,EAAI,EAAGmqC,GAEhB,MAAMlxC,EAAKjP,KACX,IAAI2N,EAASwyC,EAEb,GAAI/8B,SAASg9B,sBAAsBl+C,GAAI,CACnC,MAAM4J,EAAI5J,EACVyL,EAAS7B,EAAE6B,OACXqI,EAAIlK,EAAEulB,QACNnvB,EAAI4J,EAAEslB,QACN,IAAIzc,EAAS2F,EAAMqE,aAAa1P,GAChC0F,EAASA,EAASA,EAAOoG,wBAA0B,KACnD7Y,GAASyS,GAAQ5N,MAAQ,EACzBiP,GAASrB,GAAQghB,KAAO,CAC3B,CAED,MAAM1e,EAAiB/U,EAAjB+U,EAA6BjB,EAEnC6J,uBAAsB,KAClB,MAAMvI,EAAQ,CACVwf,SAAU,QACVnB,IAAK,MACL5uB,KAAM,MACN0tB,UAAW,GAAGxd,OAAiBA,OAE7BE,EAAOlI,EAAG6b,aAAa7b,GAAGwvC,IAChC59C,OAAOkqB,OAAO5T,EAAKG,MAAOA,EAAM,IAEpCrI,EAAGg2B,MAEN,CAEDgM,WAAWlpC,GACP/H,KAAK+H,KAAOA,CACf,CAEDkZ,IAAOlC,GACH,MAAM9P,EAAKjP,KACX,OAAO+e,EAAKrc,KAAI5C,GAAMmP,GAAG2uB,GAAM99B,IAClC,CAED89B,IAAM99B,GACF,MAAMmP,EAAKjP,KAEX,OADcF,EAAGmhB,OAAO/c,OAAS,EACf+K,GAAGoxC,GAAevgD,GAC9BA,EAAGm+C,QAAUn+C,EAAGkI,KACflI,EAAGm+C,OAAShvC,GAAGqxC,GAAcxgD,GAAMmP,GAAGsxC,GAAYzgD,GADrBmP,GAAGuxC,IAE1C,CAEDF,IAAcxgD,GACV,OAAOob,CAAI,qDAAqDlb,MAAKk7C,GAAYp7C,KAAMA,EAAGm+C,kBAC7F,CAEDuC,MACI,OAAOtlC,CAAI,0DACd,CAEDmlC,IAAevgD,GACX,MAAMmP,EAAKjP,KACX,OAAOkb,CAAI;;oDAEiCjM,GAAGisC,GAAYp7C,KAAMA,EAAGkI;;;wBAGpDlI,EAAGmhB;wBACHhS,EAAGywC;4BACCzwC,EAAG5M;0BACLsmC,EAAU15B,EAAG9L;;;cAIlC,CAED+3C,IAAYp7C,GACR,OAAOA,EAAGs6C,KAAOl/B,CAAI,6BAA6Bpb,EAAGs6C,mBAAqB,EAC7E,CAEDmG,IAAYzgD,GACR,OAAOob,CAAI;;sBAEGrN,EAAQ/N,GAAI;2BACPA,EAAG4D;6BACD5D,EAAGkI;8BACF2gC,EAAU3oC,KAAKmD;4BACjBwlC,EAAU7oC,EAAGs6C;4BACbzR,EAAU7oC,EAAG4tC;sCACH/E,EAAU7oC,EAAG6N,QAAU;sCACvBg7B,EAAU7oC,EAAG2nB;kCAE9C,CAKDtZ,IAAS4Q,GACL,OAAO0S,OAAOG,QAAQ7S,GAAMrc,KAAI5C,GAAMyM,EAAO4B,QAAQrO,EAAI0/C,cAAcxP,UAC1E,CAED4P,IAAea,GACXnmC,EAAM+B,SAASrc,KAAKovC,WAAY,WAAW,GAAO,GAC7CxpC,QAAO9F,GAAMA,GAAM2gD,IACnB55C,SAAQ/G,GAAMA,EAAG64C,SACzB,CAEDj1B,GAAW5X,GACP,MAAMmD,EAAKjP,KACX,GACS,WADD8L,EAAEgM,IAEF7I,EAAG0pC,OAGd,CAEDhG,IAAS7mC,GACLsX,SAASS,QAAQ/X,GACjB,MAAMmD,EAAKjP,KACL+/C,EAAU9wC,GAAGyxC,GAAW50C,GAC9Bi0C,GAASpH,QACL1pC,EAAGwwC,MAAMxwC,EAAG0pC,OACnB,CAEDmH,IAAch0C,GACVsX,SAASS,QAAQ/X,GACb9L,KAAKy/C,MAAMz/C,KAAK24C,OACvB,CAED6B,IAAa1uC,GACTsX,SAASS,QAAQ/X,GACjB,MACMi0C,EADK//C,MACQ0gD,GAAW50C,GADnB9L,MAER4/C,GAAeG,GAClBA,GAAS9a,MACZ,CAEDyb,IAAW50C,GACP,MAAM60C,EAAW70C,EAAE6B,OAAO0Q,QAAQ,MAClC,OAAOsiC,GAAU/vB,cAAc,UAClC,CAEDivB,MACI,MAAM5wC,EAAKjP,KACX,IAAKiP,EAAGw1B,OAAQ,OAChB,MAAMttB,EAAOlI,EAAG6b,aAAa7b,GAAGwvC,IAChC,GAAIxvC,EAAG2xC,UAAW,CACd,MAAMpzC,EAAM,CAAEinB,UAAW,aACrBxlB,EAAG5M,SACHmL,EAAIzG,KAAO,YACXyG,EAAIxG,MAAQ,SAEZwG,EAAIxG,MAAQ,YACZwG,EAAIzG,KAAO,QAEflG,OAAOkqB,OAAO5T,EAAKG,MAAO9J,EACtC,KAAe,CACH2J,EAAKG,MAAMmd,UAAY,KACvB,MAAM3Z,EAAO7L,GAAGwxC,GAAM1lC,wBAChBpG,EAAS/N,OAAOi6C,WAAa/lC,EAAK9T,MACxCiI,EAAG5M,QAAUsS,EAAS,EAAI,EACtB1F,EAAG5M,UAAS8U,EAAKG,MAAMmd,UAAe9f,EAAS,EAAZ,KAC1C,CACJ,CAEGisC,gBACA,OAAO5gD,KAAK6N,QAAQkyC,OACvB,CAEGU,SACA,OAAOzgD,MAAK2/C,GAASj+C,KACxB,QAGG1B,KAAKiJ,OAAO,UACf,ECxRE,MAAM63C,yBAAyBtB,cAElC3/C,kBAAoB,CAChB8N,OAAQ,CAAE,EACV/H,OAAQ,CAAE,EACV0d,WAAY,CAAEljB,KAAMqB,SACpBmgB,SAAU,CAAExhB,KAAMqB,UAGtBoB,cACIwlB,QACAroB,KAAKy/C,MAAO,CACf,CAEDlJ,oBACIluB,MAAMkuB,oBACN,MAAMtnC,EAAKjP,KACXiP,EAAG6iC,YAAYlrC,OAAQ,SAAUqI,EAAG0pC,MAAM/wC,KAAKqH,IAC1CA,EAAGgN,MAAMhN,GAAG8xC,IACpB,CAEDhM,eAAe94B,GACXjc,MAAK+gD,IACR,CAEDA,MACI,MAAM9xC,EAAKjP,KACL6K,EAAQyP,EAAM4D,OAAOjP,EAAG+xC,cAAgB/xC,GAC9C,IAAIssB,EAAUtsB,EAAGtB,OAAS2M,EAAM+B,SAASxR,EAAOoE,EAAGtB,QAAU,CAAC9C,GACzD0wB,EAAQr3B,SAAQq3B,EAAUjhB,EAAM+B,SAAS9V,SAAS0Y,gBAAiBhQ,EAAGtB,SAC3E4tB,EAAQ10B,SAAQ8G,GAAUsB,EAAG6iC,YAAYnkC,EAAQ,cAAesB,GAAGgyC,GAASr5C,KAAKqH,KACpF,CAEDhM,IAAO6I,GACH,MAAMmD,EAAKjP,KACX,OAAO8L,EAAEsnC,eAAextC,QAAO9F,GAAMA,EAAG0P,UACnC5J,QAAO9F,GAAMA,EAAG0P,QAAQP,EAAGtB,QAAUsB,EAAGrJ,SAChD,CAEDq7C,IAASn1C,GACL,MAAMmD,EAAKjP,KACX,GAAI8L,EAAE8X,UAAY3U,EAAGqU,WAAY,OAEjC,OAAoB,IADPrU,GAAGhM,GAAO6I,GACd5H,QACTkf,SAASS,QAAQ/X,GACjBmD,EAAGixC,MAAMp0C,IACF,QAHP,CAIH,CAQDo0C,MAAMh+C,EAAI,EAAG8T,EAAI,EAAGmqC,GAChB,OAAOngD,KAAK4hB,UAAmByG,MAAM63B,MAAMh+C,EAAG8T,EAAGmqC,EACpD,QAGGngD,KAAKiJ,OAAO,aACf,ECpEE,MAAMi4C,yBAAyB7L,UAEpCx1C,cAAgB6a,CAAG;;;;;;;;;;;;;;;MAiBnB7a,kBAAoB,CAClBshD,WAAY,IAAKzT,GACjB1yB,MAAO,CAAE5a,KAAM4N,QACfiN,OAAQ,CAAE7a,KAAM4N,QAChBozC,OAAQ,CAAE7T,WAAYT,UACtBuU,MAAO,CAAE9T,WAAYT,WAGvB2R,IAAW1yC,KAAKvL,GAEhB8gD,IAASlZ,IACTmZ,IAAWnZ,IACXoZ,IAAYpZ,IAEZqZ,IACAC,IAEA7+C,cACEwlB,QACA,MAAMpZ,EAAKjP,KACXiP,EAAG+L,MAAQ,EACX/L,EAAGgM,OAAS,EACZhM,EAAG6b,aAAa7b,GAAGwvC,IACnBxvC,GAAGwyC,GAAmB,IAAIrQ,sBAAsBniC,EACjD,CAED4nC,aAAatR,GACXvlC,MAAKyhD,GAAiBv5B,OAAOloB,MAAK2hD,IAClCt5B,MAAMwuB,aAAatR,EACpB,CAEDuR,WAAWvR,GACTld,MAAMyuB,WAAWvR,GACjB,MAAMt2B,EAAKjP,KACLmrB,EAAUlc,GAAGkc,GACnBA,EAAQnQ,MAAQ/L,EAAG+L,MAAQ,EAAI,GAAG/L,EAAG+L,UAAY,GACjDmQ,EAAQlQ,OAAShM,EAAGgM,OAAS,EAAI,GAAGhM,EAAGgM,WAAa,EACrD,CAEDg8B,WACE,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI,QAAQwuB,EAAIz6B,GAAGqyC;gBACd3Y,EAAU15B,EAAGuoC;oBACTvoC,GAAGm3B;sBACDn3B,GAAG2yC;0BACC3yC,GAAGwvC;kBACXvW,EAASj5B,EAAGkoC;yGAC2EloC,GAAGmyC;aAC/F1X,EAAIz6B,GAAGsyC,0GAAgHtyC,GAAGoyC;aAC1H3X,EAAIz6B,GAAGuyC;WAEjB,CAEDrK,cACE,MAAMloC,EAAKjP,KAYX,MAXY,IACPqoB,MAAM8uB,cACT,qBAAqB,EACrB,oBAAoB,EACpB,aAAcloC,EAAG4yC,OACjB,QAAS5yC,EAAG4yC,OACZ,QAAS5yC,EAAG4yC,OACZ,mBAAmB,EACnB,CAAC,MAAM5yC,EAAGkyC,cAAelyC,EAAGkyC,WAC5B,CAAC,GAAGlyC,GAAGwvC,OAAa,EAGvB,CAMDzM,YAAYlmC,GACV9L,MAAK0hD,GAAc1hD,MAAK2hD,GAAU5mC,uBACnC,CAED82B,YAAY/lC,GACV,MAAMmD,EAAKjP,KACL2U,EAAS1F,GAAGyyC,GAAY36C,KACxBiU,EAAQ/L,GAAGyyC,GAAY1mC,MAEvB8mC,EADM9gD,EAAOyoC,MAAM39B,EAAEslB,QAAUzc,EAAQ,EAAGqG,GAC7BA,EAAS,IAC5B/L,GAAG8c,GAAQ+1B,EACZ,CAEGD,aACF,OAAqB,GAAd7hD,KAAKgb,OAA6B,GAAfhb,KAAKib,MAChC,CAEG8mC,cACF,OAAQ/hD,KAAK6hD,MACd,CAEG12B,SACF,OAAOnrB,KAAK8qB,aAAa9qB,MAAKy+C,IAAUnnC,KACzC,CAEG8pC,SACF,OAAOphD,KAAKohD,OAASlmC,CAAI,eAAelb,MAAKomC,YAAiBn3B,GAAGmyC,iBAAmB,EACrF,CAEGC,SACF,OAAOrhD,KAAKqhD,MAAQnmC,CAAI,eAAelb,MAAKomC,YAAiBn3B,GAAGoyC,gBAAkB,EACnF,CAEGQ,SACF,OAAsB,IAAf7hD,KAAKgb,OAA+B,IAAhBhb,KAAKib,MACjC,CAEG0mC,SACF,OAAO3hD,MAAKshD,GAAO5/C,KACpB,CAEGsgD,SACF,OAAOhiD,MAAKwhD,GAAU9/C,KACvB,CAEGugD,SACF,OAAOjiD,MAAKuhD,GAAS7/C,KACtB,CAED0kC,IAAQt6B,GACN,MAAMmD,EAAKjP,KACX,GAAIiP,GAAG4yC,GAAS,CACd,MAAM/hD,EAAKgM,EAAE6B,OACbsB,EAAGgM,OAAShM,EAAGgM,QAAUnb,EAAGmb,OAC5BhM,EAAG+L,MAAQ/L,EAAG+L,OAASlb,EAAGkb,KAC3B,CACF,CAED4mC,IAAe91C,GACb,MAAMmD,EAAKjP,KACXiP,EAAG4U,QAAQ/X,GACXmD,GAAG8c,KACH9c,GAAGwyC,GAAiB5sB,OACrB,CAED9I,IAAQ+1B,EAAM,IACD9hD,MACRiiD,GAAM3qC,MAAMiT,YAAY,gBAAoB,IAAMu3B,EAAT,KADjC9hD,MAERgiD,GAAQ1qC,MAAMiT,YAAY,gBAAiB,GAAGu3B,KAClD,QAGC9hD,KAAKiJ,OAAO,aACb,ECrKI,MAAMi5C,4BAA4B7M,UAEvCx1C,kBAAoB,CAClBsiD,OAAQ,CAAE,EACV5yB,WAAY,CAAE,GAGhB9mB,KAAS,EAET5F,cACEwlB,OACD,CAEDmxB,QAAQ4I,GACN/5B,MAAMmxB,QAAQ4I,GACd,MAAMnzC,EAAKjP,KACPiP,EAAGoX,aAAepX,EAAGxE,SACvBwE,GAAGozC,IAEN,CAEG53C,cACF,OAAOzK,KAAK0e,yBAAyB22B,SACtC,CAED3pC,WAEE,MAAMuD,EAAKjP,KACLuN,EAAO0B,EAAGyP,cAEhB,GAAIzP,GAAGxG,GAAQ,OAEf,IAAIA,EAAQxH,WAAWgO,EAAGsgB,YAC1B,IAAK9mB,GAASwG,EAAGkzC,OAAQ,CACvB,MAAMz+C,EAAMouB,SAASwB,aAAarkB,EAAGkzC,QAErC15C,SADqBc,OAAO7F,IACbuL,EAAGsgB,WACnB,CAEG9mB,IACF,IAAIA,EAAM8E,GACV0B,GAAGxG,GAASA,EACZxH,WAAWgO,EAAGsgB,YAAc9mB,EAG/B,QAGCzI,KAAKiJ,OAAO,gBACb,ECpDI,MAAMq5C,2BAA2BjN,UAEtCx1C,kBAAoB,CAClByR,KAAM,CAAEikC,SAAS,EAAMn1C,KAAM4N,QAC7Bu0C,QAAS,CAAEhN,SAAS,GACpB7xC,IAAK,CAAE6xC,SAAS,IAGlB1yC,cACEwlB,QACAroB,KAAKghC,MAAO,EACZhhC,KAAK0a,IAAM,mFACZ,CAEDu8B,WACE,MAAMhoC,EAAKjP,KACX,IAAMiP,EAAGuzC,YAAavzC,EAAGwzC,OAAS,MAAO,GACzC,MAAMnxC,GAAO,IAAI9P,MAAO+P,cACxB,OAAO2J,CAAI,cAAcytB,EAAU15B,EAAGuoC,sBAAsBtP,EAASj5B,EAAGkoC,4CAA4CloC,EAAGvL,IAAMuL,EAAGvL,IAAM,sBAAsBuL,EAAGszC,WAAWtzC,EAAGqC,WAAWA,sBACzL,CAEGkxC,gBACF,OAAOxhD,EAAO0F,iBAAiB1G,KAAKuiD,QACrC,CAEGE,aACF,OAAOzhD,EAAO0F,iBAAiB1G,KAAKsR,KACrC,QAGCtR,KAAKiJ,OAAO,eACb,ECfI,MAAMy5C,sBAAsBrN,UAE/Bx1C,kBAAoB,CAChB8wC,QAAS,CAAEhnC,OAAO,GAClBL,IAAK,CAAEisC,SAAS,GAChB9tB,OAAQ,CAAE8tB,SAAS,GACnBjS,KAAM,CAAEiS,SAAS,GACjBnS,OAAQ,CAAEmS,SAAS,GACnBlS,OAAQ,CAAEkS,SAAS,GACnB/9B,MAAO,CAAEpX,KAAM4N,OAAQunC,SAAS,GAChChS,KAAM,CAAEnjC,KAAM4N,OAAQunC,SAAS,GAC/B3vC,OAAQ,CAAExF,KAAM4E,MAAOuwC,SAAS,GAChC58B,KAAM,CAAEvY,KAAM4E,MAAOuwC,SAAS,GAC9Bn1C,KAAM,CAAE,EACRuiD,SAAU,CAAEviD,KAAMqB,SAClBmhD,YAAa,CAAExiD,KAAM4N,OAAQunC,SAAS,EAAMhI,WAAYN,SAG5DvlC,GAAO,EACPm7C,IAAU,KACVC,IAAW,KACXC,IAAe,KAEflgD,cACIwlB,QACA,MAAMpZ,EAAKjP,KACX,IAAKiP,EAAGzO,GAAI,MAAM,IAAII,MAAM,qCAC5B6wB,OAAOC,SAASziB,EAAIA,EAAGkN,SACvBlN,EAAG2zC,YAAc,EACjB3zC,EAAG0zC,UAAW,EACd1zC,EAAG+xB,MAAO,EACV/xB,EAAGrJ,OAAS,GACZqJ,EAAG0J,KAAO,GACV1J,EAAGuI,MAAQ,EACXvI,EAAGs0B,KAAO,EACVt0B,EAAG7O,KAAO,SACV6O,EAAGq0B,KAAO,QACVr0B,EAAGm0B,OAAS,MACZn0B,EAAGo0B,OAAS,OACZp0B,EAAG0hC,QAAU1hC,EAAGzO,EACnB,CAED+1C,oBACIluB,MAAMkuB,oBACN,MAAMtnC,EAAKjP,KACXiP,GAAG+zC,KACH/zC,GAAG4zC,GAAUpxB,OAAOtjB,QAAQc,EAAIkH,OAAO8sC,YACvCh0C,GAAG6zC,GAAWzgB,EAAoBL,WAAW/yB,EAAG7O,KAAM6O,EAAGzO,IAAI,GACzDyO,GAAG4zC,IAAS3+C,OAAS,GAAG+K,GAAG6zC,IAAUrgB,aAAaxzB,GACtDA,GAAG6zC,IAAUtgB,QAChB,CAEDkU,uBACIruB,MAAMquB,uBACN12C,MAAK8iD,IAAUlgB,UACf5iC,MAAK8iD,IAAUngB,gBAAgB3iC,MAC/BA,MAAK+iD,GAAe,KACpBj7C,aAAa9H,MAAK0H,EACrB,CAEDmvC,eACI72C,KAAKi2C,gBAAgB1R,MACxB,CAEDuS,WAAWvR,GACPld,MAAMyuB,WAAWvR,GACjB,MAAMt2B,EAAKjP,KACXiP,GAAGi0C,KACC3d,EAAQxV,IAAI,gBAAgB9gB,EAAGslC,SAAStlC,EAAG2zC,YAClD,CAEDM,MACI,MAAMj0C,EAAKjP,KACNiP,GAAG6zC,KAER7zC,GAAG6zC,GAASx5C,IAAM2F,EAAG3F,IACrB2F,GAAG6zC,GAASxf,KAAOr0B,EAAGq0B,KACtBr0B,GAAG6zC,GAASr7B,OAASxY,EAAGwY,OACxBxY,GAAG6zC,GAAS1f,OAASn0B,EAAGm0B,OACxBn0B,GAAG6zC,GAASzf,OAASp0B,EAAGo0B,OAExBp0B,GAAG6zC,GAAStrC,MAAQvI,EAAGuI,MACvBvI,GAAG6zC,GAASvf,KAAOt0B,EAAGs0B,KACtBt0B,GAAG6zC,GAASnqC,KAAO1J,EAAGk0C,WAAWl0C,EAAG0J,MACpC1J,GAAG6zC,GAASl9C,OAASqJ,EAAGm0C,aAAan0C,EAAGrJ,QACpCqJ,EAAG0zC,UAAU1zC,EAAGs1B,OACvB,CAEG8e,cACA,OAAOrjD,KAAK6N,QAAQy1C,OACvB,CAEGR,cACA,OAAO9iD,MAAK8iD,EACf,CAEGjgB,mBACA,OAAuC,IAAhC7iC,MAAK8iD,IAAUjgB,YACzB,CAEGiB,gBACA,OAAO9jC,MAAK8iD,IAAUhf,SACzB,CAEGQ,WAAO1iC,GACH5B,MAAK8iD,KAAU9iD,MAAK8iD,GAASxe,OAAS1iC,EAC7C,CAMDwhD,aAAaxhD,GAET,OADAA,EAAM5B,MAAKujD,GAAU3hD,GACdoD,MAAMC,QAAQrD,GAAOA,EAAM,EACrC,CAMDuhD,WAAWvhD,GAEP,IAAI+W,EACJ,GAAmB,iBAFnB/W,EAAM5B,MAAKujD,GAAU3hD,IAGjB+W,EAAO,CAAC,CAAEI,IAAKnX,SACZ,GAAIoD,MAAMC,QAAQrD,GACrB+W,EAAO/W,OACJ,GAAIZ,EAAOyC,SAAS7B,GAAM,CAC7B,MAAMkX,EAAM9V,KAAKyS,IAAI7T,GACrB+W,EAAO,IAAI3T,MAAM8T,GACjBH,EAAKG,EAAM,GAAK,CAAED,IAAKjX,EAC1B,CACD,OAAO+W,GAAQ,EAClB,CAED47B,SAASptC,EAAO,GACZ,MAAM8H,EAAKjP,KACXmH,EAA4B,IAArBnG,EAAO+L,MAAM5F,GACpBohB,cAActZ,GAAGvH,GACbP,EAAO,IAAG8H,GAAGvH,EAAOikB,aAAY,KAChC1c,EAAGs1B,KAAKt1B,EAAG,GACZ9H,GACN,CAEDo9B,OACI,OAAOvkC,MAAK+iD,IACf,CAEDtS,MAAM1oC,GACF,MAAMkH,EAAKjP,KACXiP,GAAGu0C,KACHv0C,GAAG6zC,IAAUrS,MAAMxhC,EAAIlH,EAC1B,CAED0rB,OACI,OAAOzzB,KAAKukC,MACf,CAEDkf,KAAK17C,GACD,OAAO/H,KAAKywC,MAAM1oC,EACrB,CAKDkpC,WAAWjvC,GACHhC,KAAKqjD,SAASzjD,MAAMe,IAAIX,KAAM,cAAgBqF,KAAK8H,UAAUnL,GACpE,CAMDkvC,YAAYlvC,GACJhC,KAAKqjD,SAASzjD,MAAMe,IAAIX,KAAM,eAAiBqF,KAAK8H,UAAUnL,GACrE,CAMDghC,SAASj7B,GACL,MAAMkH,EAAKjP,KACNgF,MAAMC,QAAQ8C,KAAOA,EAAO,CAACA,IAClCA,EAAKlB,SAAQqT,IACTjL,GAAG4zC,GAAQh8C,SAAQ+X,IACf,IAAIhd,EAAMsY,EAAE0E,EAAE5W,MACThH,EAAO+D,OAAOnD,KACfA,EAAMuU,OAAOvR,OAAOga,EAAGhd,GACvBsY,EAAE0E,EAAE5W,MAAQpG,EACf,GACH,GAET,CAMDuvC,YAAYnvC,GACJhC,KAAKqjD,SAASzjD,MAAMe,IAAIX,KAAM,eAAiBqF,KAAK8H,UAAUnL,GACrE,CAEDwhD,MAEI,IADWxjD,KACJ8jC,YADI9jC,KACY6iC,aACvB,MAAM,IAAIjiC,MAAM,gCACnB,CAEDoiD,MACI,MAAM/zC,EAAKjP,KACXiP,GAAG8zC,GAAe/4C,EAAW05C,aAAaz0C,GAAG00C,GAAsB10C,EACtE,CAED00C,MAGI,OAFW3jD,MACRgjD,KADQhjD,MAED4jD,IACb,CAEDA,MACI,MAAM30C,EAAKjP,KAEX,OADAiP,GAAGu0C,KACIv0C,GAAG6zC,IAAUve,KAAKt1B,EAC5B,CAEDs0C,IAAU3hD,GACN,OAAOZ,EAAOkE,aAAatD,GAAOyD,KAAKC,MAAM1D,GAAOA,CACvD,QAGG5B,KAAKiJ,OAAO,kBACf,ECtPE,MAAM46C,wBAAwBxO,UAEnCx1C,WAAa,oBACbA,kBAAoB,MACpBA,iBAAmB,0BACnBA,aAAe,MACfA,cAAgB,SAChBA,eAAiB,KAEjBA,UAAgB,GAEhBA,cAAgB6a,CAAG,qEAEnB7a,kBAAoB,CAElBikD,SAAU,CAAEvO,SAAS,EAAMn1C,KAAMqB,SACjCgjC,OAAQ,CAAE8Q,SAAS,EAAMn1C,KAAMqB,SAC/B2jB,WAAY,CAAEmwB,SAAS,EAAMn1C,KAAMqB,SACnC23C,SAAU,CAAE7D,SAAS,EAAMn1C,KAAMqB,SACjCsiD,UAAW,CAAExO,SAAS,EAAMn1C,KAAMqB,SAClCmgB,SAAU,CAAE2zB,SAAS,EAAMn1C,KAAMqB,SAGjC6f,MAAO,CAAEi0B,SAAS,GAClBqD,QAAS,CAAErD,SAAS,GACpByO,WAAY,CAAEzO,SAAS,GACvB0O,YAAa,CAAE1O,SAAS,GAExB2O,SAAU,CAAE3O,SAAS,EAAMn1C,KAAM4N,OAAQF,UAAW,aACpDq2C,YAAa,CAAE5O,SAAS,EAAMznC,UAAW,gBAEzCs2C,WAAY,CAAE7O,SAAS,EAAMznC,UAAW,eACxCu2C,YAAa,CAAE9O,SAAS,EAAMznC,UAAW,gBAEzCw2C,YAAa,CAAEx2C,UAAW,gBAC1By2C,aAAc,CAAEz2C,UAAW,iBAE3B02C,UAAW,CAAE12C,UAAW,cACxB22C,WAAY,CAAE32C,UAAW,eAEzBuwC,SAAU,CAAEvwC,UAAW,aACvB0qC,UAAW,CAAE1qC,UAAW,cACxBywC,UAAW,CAAEzwC,UAAW,cACxB2qC,QAAS,CAAE3qC,UAAW,YACtB42C,WAAY,CAAE52C,UAAW,gBAI3B2wC,IAAW1yC,KAAKvL,GAChBmkD,IAAavc,IACbwc,IAAiBxc,IACjByc,IAAgBzc,IAEhBvlC,cACEwlB,QACA,MAAMpZ,EAAKjP,KACLyI,EAAQo7C,gBACd50C,EAAGw1B,QAAS,EACZx1B,EAAG60C,UAAW,EACd70C,EAAGmW,YAAa,EAChBnW,EAAGmqC,UAAW,EACdnqC,EAAG80C,WAAY,EACf90C,EAAG2S,UAAW,EACd3S,EAAGqP,QAAS,EACZrP,EAAGwmC,SAAU,EAEbxmC,EAAGi1C,SAAW,EACdj1C,EAAGyL,IAAMjS,EAAMq8C,IACf71C,EAAGovC,SAAW51C,EAAMs8C,UACpB91C,EAAGupC,UAAY/vC,EAAMu8C,WACrB/1C,EAAGk1C,YAAc17C,EAAMw8C,MACvBh2C,EAAG+0C,WAAav7C,EAAMy8C,OACtBj2C,EAAGg1C,YAAcx7C,EAAM08C,QACvBl2C,EAAGq1C,YAAc,YACjBr1C,EAAGs1C,aAAe,UAClBt1C,EAAG6b,aAAa7b,GAAGwvC,GACpB,CAED/H,uBACEruB,MAAMquB,uBACNmN,iBAAgBuB,IACjB,CAED5L,QAAQjU,GACNld,MAAMmxB,QAAQjU,GACd,MAAMt2B,EAAKjP,KACPiP,EAAGw1B,QACLof,iBAAgBwB,GAAOh0C,KAAKpC,GACxBA,EAAG60C,SACL70C,GAAGq2C,IAASrgB,OAEZh2B,GAAGq2C,IAASC,YAEdt2C,GAAGu2C,MAAcxgB,UAEjB6e,iBAAgBwB,GAAOhwC,MACvBpG,GAAGq2C,IAAS3M,SAEd1pC,EAAG6zB,QACJ,CAED2iB,MACE,MAAMx2C,EAAKjP,KACX,OAAKiP,EAAGmqC,SACDl+B,CAAI,eAAewuB,EAAIz6B,GAAG21C;gBACrB31C,GAAGy2C,GAAW99C,KAAKqH;cACrB05B,EAAU15B,EAAGo1C;gBACX1b,EAAU15B,EAAG9L;mBACV8L,EAAG2S;aACT+mB,EAAU15B,EAAGw1C;eACX9b,EAAU15B,EAAGs1C;eACbt1C,EAAGg1C;oBARW,EAU1B,CAED0B,MACE,MAAM12C,EAAKjP,KACX,OAAKiP,EAAGmW,WACDlK,CAAI,cAAcwuB,EAAIz6B,GAAG41C;gBACpB51C,GAAG22C,GAAUh+C,KAAKqH;cACpB05B,EAAU15B,EAAGm1C;gBACXzb,EAAU15B,EAAG9L;aAChBwlC,EAAU15B,EAAGu1C;eACX7b,EAAU15B,EAAGq1C;eACbr1C,EAAG+0C;oBAPa,EAS5B,CAED6B,MACE,MAAM52C,EAAKjP,KAEX,OADiBiP,EAAGmW,YAAcnW,EAAGmqC,SAE9Bl+B,CAAI,mEAAmEjM,EAAGk1C,eAAel1C,EAAGsvC;QAC/FtvC,GAAG02C,cAAyB12C,GAAGw2C;cAFb,EAIvB,CAEDxO,WACE,MAAMhoC,EAAKjP,KACLorB,EAAS,CAAE,YAAanc,EAAGi1C,SAAW,EAAI,GAAGj1C,EAAGi1C,kBAAez/C,GAErE,OADAwK,EAAG6b,aAAa7b,GAAGwvC,GAAUrzB,GACtBlQ,CAAI;gCACiBwuB,EAAIz6B,GAAG01C;mBACpBhc,EAAU15B,EAAGuoC;sBACVvoC,GAAG22C,GAAUh+C,KAAKqH;uBACjBA,GAAG22C,GAAUh+C,KAAKqH;wBACjBA,GAAGyU,EAAW9b,KAAKqH;qBACtBA,GAAG62C,GAAQl+C,KAAKqH;uBACdA,GAAG82C,GAAUn+C,KAAKqH;qBACpBi5B,EAASj5B,EAAGkoC;+BACFloC,EAAGy1C;2DACyBz1C,EAAGupC;2CACnBvpC,EAAGovC;yCACLpvC,EAAGwlB,UAAUxlB,EAAGqS;;;wCAGjBrS,EAAGwpC;;oBAEvBxpC,EAAGwlB,UAAUxlB,EAAG2pC;oBAChB3pC,EAAGioC;;;kBAGLjoC,GAAG42C;;;;kBAKlB,CAED1O,cASE,MAPY,IACP9uB,MAAM8uB,cACTmO,QAAU,EACV,OAAO,EACP,YAAY,EACZ,CANStlD,MAMLy+C,KAAW,EAGlB,CAUDuH,KAAK1kC,EAAQ,GAAIs3B,EAAU,GAAIQ,GAAW,EAAOh0B,GAAa,GAC5D,MAAMnW,EAAKjP,KAOX,GANAiP,EAAGqS,MAAQA,EACXrS,EAAGJ,KAAO+pC,EACV3pC,EAAGmqC,SAAWA,EACdnqC,EAAGmW,WAAaA,EAChBnW,EAAG80C,UAAY3+B,EACfnW,EAAGg2B,OACCmU,GAAYh0B,EAAY,OAAOnW,EAAGsoC,UAAU,eACjD,CAED0O,QAAQ3kC,EAAQ,GAAIs3B,EAAU,IAC5B,OAAO54C,KAAKgmD,KAAK1kC,EAAOs3B,GAAS,GAAM,EACxC,CAEDsN,OAAO5kC,EAAQ,GAAIs3B,EAAU,IAC3B,OAAO54C,KAAKgmD,KAAK1kC,EAAOs3B,GAAS,GAAM,EACxC,CAED/jB,MAAM9sB,EAAM0O,EAAQ,GAClBA,EAAQzV,EAAO+L,MAAM0J,EAAO,GACjBzW,KACRmmD,OAAOt/C,WAAUu/C,IAAOA,EAAEvxB,QAASuxB,EAAEjgD,OAAS4B,CAAI,IACrD,MAAMs+C,EAFKrmD,KAEIqmD,IACXA,GAAO5vC,GAAS,IAAG4vC,EAAI5vC,MAAQA,EACpC,CAEDwuB,OACEjlC,KAAKykC,QAAS,CACf,CAEDkU,QACE34C,KAAKykC,QAAS,CACf,CAED12B,SACE/N,KAAKykC,QAAUzkC,KAAKykC,MACrB,CAEGpI,WACF,OAAOr8B,KAAK0J,MAAM,WAAW,EAC9B,CAEGy8C,YACF,OAAOnmD,KAAKqc,SAAS,WAAW,EACjC,CAEGgqC,UACF,OAAOrmD,KAAK0J,MAAM,UAAU,EAC7B,CAEG47C,SACF,OAAOtlD,MAAK2kD,GAAWjjD,KACxB,CAEG4kD,SACF,OAAOtmD,MAAK4kD,GAAeljD,KAC5B,CAEG6kD,SACF,OAAOvmD,MAAK6kD,GAAcnjD,KAC3B,CAMD8jD,MACE,MAAMv2C,EAAKjP,KACLq8B,EAAOptB,EAAGoN,SAAS/B,EAAMksC,aAAa,GAAM5gD,QAAO9F,GAAMwa,EAAMmsC,UAAU3mD,KAAKyP,QACpF,OAAI8sB,IACAptB,EAAGmW,WAAmBnW,GAAGs3C,GACzBt3C,EAAGmqC,SAAiBnqC,GAAGq3C,GACpBr3C,EACR,CAEDvD,SAAiBI,GACf,MAAMmD,EAAKjP,KACX,GAAIiP,EAAG2S,SAAU,cACCra,QAAQ8I,IAAIpB,EAAGk3C,OAAOzjD,OAAM25B,GAAQA,EAAKye,aACnDhkC,SAAQ,GAAS,GAAG7H,EAAG0pC,OAChC,CAEDiN,IAAU95C,GACG9L,KACR24C,OACJ,CAEDj1B,GAAW5X,GACT,MAAMmD,EAAKjP,KACG,WAAV8L,EAAEgM,MACJsL,SAASS,QAAQ/X,IACbmD,EAAGmW,YAAcnW,EAAG80C,YACtB90C,EAAG0pC,QAGR,CAMDmN,IAAQh6C,GACN,IAAK2L,GAAM,EACX,MAAMxI,EAAKjP,KACL+H,EAAO+D,EAAEwZ,OACf,OAAQvd,EAAK3H,MACX,IAAK,SACHqX,EAAMxI,EAAGwgB,KAAK,OAAQ1nB,EAAKA,MAAM,GAAO,GAAO,GAC1C0P,GAAK2L,SAASS,QAAQ/X,GAE3B,MACF,IAAK,QACHmD,EAAG2S,UAAyB,IAAd7Z,EAAKA,KAGvB,OAAO0P,CACR,CAEDsuC,IAAUj6C,GAET,CAEDjM,YACEgkD,iBAAgBwB,GAASxB,iBAAgBwB,GAAOz/C,QAAOrE,GAAKA,EAAE8kB,aAC/D,CAKUpR,kBACT,OAAO4uC,iBAAgBwB,GAAOnhD,MAC/B,CAEUyxB,iBACTkuB,iBAAgBuB,KAChB,MAAMnwC,EAAO4uC,gBAAgB5uC,KAC7B,OAAgB,IAATA,EAAa,KAAQ4uC,iBAAgBwB,GAAOpwC,EAAO,EAC3D,CAEUwvB,oBAET,OADAof,iBAAgBuB,KACTpgD,MAAMgG,KAAK64C,iBAAgBwB,GACnC,QAGCrlD,KAAKiJ,OAAO,YACb,EClVI,MAAMy9C,wBAAwBrR,UAEnCx1C,kBAAoB,CAClBy4C,UAAW,CAAE/C,SAAS,EAAMn1C,KAAMqB,SAClC23C,SAAU,CAAE7D,SAAS,EAAMn1C,KAAMqB,SACjCklD,SAAU,CAAEpR,SAAS,EAAMn1C,KAAMqB,SACjC8kC,SAAU,CAAEgP,SAAS,EAAMn1C,KAAMqB,SACjCmlD,OAAQ,CAAErR,SAAS,EAAMn1C,KAAMqB,SAE/BqB,IAAK,CAAEyyC,SAAS,EAAMn1C,KAAM4N,QAC5BjL,IAAK,CAAEwyC,SAAS,GAChBsR,QAAS,CAAEtR,SAAS,EAAMn1C,KAAM4N,QAChC+P,UAAW,IAAIA,GAEf+oC,WAAY,CAAEvR,SAAS,GACvBwR,SAAU,CAAExR,SAAS,EAAMn1C,KAAM4N,QAEjCsT,MAAO,CAAEi0B,SAAS,GAElB8I,SAAU,CAAE9I,SAAS,EAAMznC,UAAW,aACtCk5C,QAAS,CAAEzR,SAAS,EAAMznC,UAAW,YACrC2qC,QAAS,CAAElD,SAAS,EAAMznC,UAAW,aAGvCjL,cACEwlB,QACA,MAAMpZ,EAAKjP,KACXiP,EAAG8O,UAAY,QACf9O,EAAGovC,SAAW,OACdpvC,EAAG63C,WAAa,SAChB73C,EAAG83C,SAAW,GACd93C,EAAGnM,IAAM,EACTmM,EAAGlM,IAAM,OACTkM,EAAG43C,QAAU,EACb53C,EAAGW,GAAG,aAAcX,GAAGg4C,GAASr/C,KAAKqH,IACrCA,EAAGW,GAAG,aAAcX,GAAGi4C,GAASt/C,KAAKqH,GACtC,CAEDgoC,WACE,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI,GAAGovB,EAAWr7B,GAAGqI;8BACFqxB,EAAU15B,EAAGuoC;8CACGtP,EAASj5B,EAAGkoC;QAClDloC,GAAGgvC;oCACyBhvC,EAAGwpC;UAC7BxpC,EAAGioC;;;YAGDjoC,GAAG03C,IACZ,CAEDxP,cACE,MAAMloC,EAAKjP,KAQX,MAPY,IACPqoB,MAAM8uB,cACTsC,MAAQ,EACR,aAAexqC,EAAGs3B,SAClB,eAAiBt3B,EAAGs3B,SACpB,CAAC,aAAat3B,EAAG8O,aAAc9O,EAAG8O,UAGrC,CAEGzG,SACF,MAAMrI,EAAKjP,KACL22B,EAAM1nB,EAAGowC,aAAe,QAAU,SACxC,MAAO,qDAEkB1oB,6CACA1nB,EAAG83C,6DACI93C,EAAG63C,6DAG7BnwB,OAAS1nB,EAAGlM,MAAM/B,EAAOyC,SAASwL,EAAGlM,KAAO,KAAK,oDAGnD4zB,OAAS1nB,EAAGnM,MAAM9B,EAAOyC,SAASwL,EAAGnM,KAAO,KAAK,yCAGtD,CAEG6jD,SACF,MAAM13C,EAAKjP,KACX,OAAKiP,EAAG03C,SACDzrC,CAAI,uCAAuCjM,EAAGs3B,SAAW,OAAS,wBAAwBt3B,EAAG0pC,gBAD3E,EAE1B,CAEGgB,SAEF,OADW35C,KACDo5C,SAAWl+B,CAAI,8DADdlb,KAC+E24C,mBAAqB,EAChH,CAEGr3B,SACF,MAAMrS,EAAKjP,KACX,OAAOiP,EAAGqS,MAAQpG,CAAI,+BAA+BjM,EAAGovC,aAAapvC,EAAGwlB,UAAUxlB,EAAGqS,eAAiB,EACvG,CAEG28B,SACF,MAAMhvC,EAAKjP,KACX,OAAOiP,GAAGk4C,GAAajsC,CAAI,gCAAgCjM,EAAG+3C,gCAAgC/3C,GAAGqS,KAASrS,GAAG0qC,kBAAyB,EACvI,CAEGyN,SACF,OAAOpnD,KAAK4wB,cAAc,kBAC3B,CAEGu2B,SACF,OAAOnnD,KAAKshB,OAASthB,KAAKo5C,UAAYp5C,MAAKonD,EAC5C,CAEDtkB,IAAQlhC,GACK5B,KACRumC,SAAkB,GAAP3kC,EADH5B,KAER8iC,QACJ,CAEDmkB,MACajnD,KACJs4C,WADIt4C,KACU24C,OACtB,CAEDuO,MACalnD,KACJ8C,IAAM,GADF9C,KACQilC,MACpB,CAEDA,OACEjlC,MAAK8iC,IAAQ,EACd,CAED6V,QACE34C,MAAK8iC,IAAQ,EACd,CAED/0B,SACE/N,MAAK8iC,IAAS9iC,KAAKumC,SACpB,CAEG8Y,mBACF,OAAQr/C,KAAK0+C,UACd,CAEGA,iBACF,OAAOxQ,eAAewQ,WAAW1+C,KAAK+d,UACvC,QAGC/d,KAAKiJ,OAAO,YACb,EC1II,MAAMo+C,0BAA0B7H,cAEnC3/C,kBAAoB,CAChBu6C,KAAM,CAAE,EACR/zC,KAAM,IAAIqnC,GACVA,MAAO,IAAIA,GACXz4B,KAAM,CAAE,EACRqM,MAAO,CAAE,EACT+4B,QAAS,CAAE,EACX14B,MAAO,CAAE,EACT2lC,OAAQ,CAAClnD,KAAKqB,UAGlBoB,cACIwlB,QACAroB,KAAKy/C,MAAO,CACf,CAEDxI,WAEI,OAAO/7B,CAAI,+BAA+BytB,EAD/B3oC,KAC4Cw3C;kBAD5Cx3C,MAEEunD;kBACHl/B,MAAM4uB;mBAEnB,CAEDuQ,MACI,MAAMv4C,EAAKjP,KAQX,MAPY,IACLqoB,MAAM8uB,cACTsQ,KAAO,EACP,CAAC,OAAOx4C,EAAGy+B,WAAWz+B,EAAGy+B,MACzB,mBAAoBz+B,EAAGq4C,OACvB,eAAgB,EAGvB,CAEDC,MACI,MAAMt4C,EAAKjP,KACX,OAAOkb,CAAI,iBAAiBoxB,EAAOr9B,GAAGu4C;;oBAE1B7e,EAAU15B,EAAGmrC;oBACbzR,EAAU15B,EAAG5I;oBACbsiC,EAAU15B,EAAGgG;qBACZ0zB,EAAU15B,EAAGqS;uBACXqnB,EAAU15B,EAAGorC;uBACbprC,EAAGlB;uBAErB,QAGG/N,KAAKiJ,OAAO,cACf,EC7DE,MAAMy+C,uBAAuBrS,UAElCx1C,yBAA2B,CAAEyjC,KAAM,UAEnCzjC,aAAe6a,CAAG;;;;OAMlB7a,kBAAoB,CAClB8nD,KAAM,CAAEpS,SAAS,GACjBqS,OAAQ,CAAErS,SAAS,GACnBsS,IAAK,CAAEznD,KAAMqB,UAGfkmD,IACAC,IAEA/kD,cACEwlB,OACD,CAEDyuB,WAAWsL,GACT/5B,MAAMyuB,WAAWsL,GACjBpiD,MAAK8nD,KACL9nD,MAAK+nD,IACN,CAED9Q,WACE,OAAO/7B,CAAI,GAAGovB,EAAWtqC,MAAKsX,iBAAqBtX,MAAK2yC,iCAAuC3yC,MAAK2nD,qBAAwB3nD,MAAK4nD,4BAClI,CAEGtwC,SACF,MAAO,iIACR,CAEG5T,SACF,MAAO,YAAY1C,EAAOqB,QAAQrC,KAAK6N,QAAQ85C,SAAS3mD,EAAOqB,QAAQrC,KAAK6N,QAAQ+5C,SACrF,CAEDE,MACE,MAAM74C,EAAKjP,KACL6N,EAAUoB,EAAGpB,QACfoB,EAAG04C,OACL14C,GAAG04C,GAAQ95C,EAAQ85C,MAAQ3mD,EAAOqB,QAAQ4M,EAAG04C,MACzC14C,EAAG44C,MAAKh6C,EAAQ85C,KAAO14C,GAAG04C,IAC9B14C,EAAG04C,KAAO,GAEb,CAEDI,MACE,MAAM94C,EAAKjP,KACL6N,EAAUoB,EAAGpB,QACfoB,EAAG24C,SACL34C,GAAG24C,GAAU/5C,EAAQ+5C,QAAU5mD,EAAOqB,QAAQ4M,EAAG24C,QAC7C34C,EAAG44C,MAAKh6C,EAAQ+5C,OAAS34C,GAAG24C,IAChC34C,EAAG24C,OAAS,GAEf,CAEDjV,IAAS7mC,GACI9L,KACR6jB,QAAQ/X,GACXlF,OAAO4a,SAASnZ,KAFLrI,MAEe0D,EAE3B,QAGC1D,KAAKiJ,OAAO,WACb,ECvEI,MAAM++C,sBAAsB3S,UAEjCx1C,kBAAoB,CAClB8wC,QAAS,CAAE,EACX/uB,SAAU,CAAExhB,KAAMqB,SAClBsG,KAAM,CAAE3H,KAAMS,SAGhBonD,IAAW7f,IAEXvlC,cACEwlB,QACAroB,KAAK+H,KAAO,EACb,CAEDkvC,WACE,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI,SAASwuB,EAAIz6B,GAAGg5C;aAClBtf,EAAU15B,EAAGuoC;iBACTvoC,GAAGi5C;iBACHj5C,EAAG6rC;gBACJ7rC,EAAG4lB;;;YAIhB,CAEDgiB,aAAatR,GACXld,MAAMwuB,aAAatR,GACnBvlC,KAAKi2C,gBAAgB1R,MACtB,CAEDiV,QAAQjU,GACN,MAAMt2B,EAAKjP,KACPulC,EAAQxV,IAAI,cACV9gB,EAAG2S,SACL3S,EAAG2zB,UAEH3zB,EAAGuzB,UAGH+C,EAAQxV,IAAI,UACd9gB,EAAG0B,OAAS1B,EAAGlH,KAElB,CAEGs0B,WACF,OAAOr8B,MAAKioD,GAASvmD,KACtB,CAEG+I,cACF,OAGuC,IAHhCzK,KAAKmoD,SACTviD,QAAO9F,GAAMwa,EAAMmsC,UAAU3mD,KAC7B4C,KAAI5C,GAAMA,EAAG2gB,kBACb7a,QAAOrE,IAAW,IAANA,IAAa2C,MAC7B,CAKGikD,eACF,OAAOnoD,KAAKqc,SAAS,gCAAgC,EACtD,CAEG9E,aACF,OAAOvX,KAAKmoD,QACb,CAEGC,aACF,OAAOpoD,KAAKmoD,QACb,CAEGx3C,aACF,OAAO2J,EAAMoiB,SAAS18B,KACvB,CAEG2Q,WAAO5I,GAGT,OADAuS,EAAM+tC,WADKroD,KACU+H,GADV/H,KAED0xB,UACX,CAEDkR,UACEtoB,EAAMguC,aAAatoD,KAAM,gDAAgD,EAAO,SACjF,CAEDwiC,SACEloB,EAAMiuC,YAAYvoD,KAAM,gDAAgD,EAAO,SAChF,CAEDygB,gBACE,OAAOzgB,KAAKq8B,KAAK5b,eAClB,CAED+nC,iBAKE,OAJAxoD,KAAKmoD,SACFviD,QAAO9F,GAAMwa,EAAMmsC,UAAU3mD,KAC7B8F,QAAO9F,IAAOA,EAAG2gB,kBACjB5Z,SAAQ/G,GAAMA,EAAG0oD,mBACbxoD,KAAKq8B,KAAKmsB,gBAClB,CAED98C,YAAYI,GACV,MAAMmD,EAAKjP,KACM8L,GAAG6B,SAAWsB,EAAGotB,MAGhCptB,EAAGk5C,SAASthD,SAAQ/G,GAAMA,EAAG4B,MAAQ5B,EAAG2oD,qBAClCx5C,EAAGgnC,gBAAgB1R,KAAKt1B,EAAG0B,WAEjC1B,EAAGlH,KAAO,GACVkH,EAAGotB,KAAKxH,QAEX,CAEDnpB,aAAaI,GACXsX,SAASS,QAAQ/X,GACjB,MAAMmD,EAAKjP,KACX,IAAKiP,EAAGyiB,WAAY,OACpB,MAAMoC,EAAO7kB,EAAG0B,aACV1B,EAAGgnC,gBAAgBxF,MAAM3c,IAC/B,MAAM/rB,EAAO,CAAE3H,KAAM,SAAU2H,KAAM+rB,EAAMtJ,OAAQ1e,EAAGjB,MAAQoE,GAC9D,OAAOA,EAAGwgB,KAAK,OAAQ1nB,GAAM,GAAM,GAAM,EAC1C,CAEDkpC,WAAWlpC,GACT/H,KAAK+H,KAAOA,CACb,CAEDmpC,YAAYnpC,GAEX,CAEDopC,YAAYrlC,GACVlM,MAAM8b,MAAM1b,KAAM8L,EACnB,CAED48C,cAAc5oD,GAEb,CAED6oD,WAAWlxC,GAET,OAAOA,CACR,CAEDia,WACE,MAAMziB,EAAKjP,KACX,IAAIyK,EAAUwE,EAAGwR,iBAAmBxR,EAAGxE,QAClCA,GAASwE,EAAGu5C,iBACjB,MAAMzgD,EAAO,CAAE3H,KAAM,QAAS2H,KAAM0C,EAASI,MAAQoE,GAGrD,OAFAxE,EAAUwE,EAAG05C,WAAWl+C,GACpBA,GAASwE,EAAGwgB,KAAK,OAAQ1nB,GAAM,GAAM,GAClC0C,CACR,CAEDy9C,IAAUp8C,GACR,MAAMmD,EAAKjP,KACPiP,EAAGunC,YAAYvnC,EAAGqsB,OAAOxvB,GACzBmD,EAAGyiB,YAAYziB,EAAGy5C,cAAc58C,EAAEwZ,OACvC,QAGCtlB,KAAKiJ,OAAO,UACb,ECjKI,MAAM2/C,2BAA2BvT,UAEtCx1C,sBAAwB,6BACxBA,iBAAmB,oDACnBA,gBAAkB,yBAClBA,YAAc,mBAEdA,kBAAoB,CAClBu6C,KAAM,CAAE,EACRyO,OAAQ,CAAE,EACV9qC,UAAW,CAAE,EAEb+qC,YAAa,CAAE,EACfC,MAAO,CAAE,EACTC,YAAa,CAAE,EACfllD,QAAS,CAAE,EACXmlD,KAAM,CAAE,EAERjhD,KAAM,CAAE,EACR5H,KAAM,IAAK0tC,GACX/2B,KAAM,CAAE,EACRnL,OAAQ,CAAE,EAEVuoB,KAAM,CAAE,EACR5lB,QAAS,CAAEgnC,SAAS,GACpB2T,KAAM,CAAE9oD,KAAM4N,OAAQunC,SAAS,EAAMhI,WAAYN,QACjDnqC,IAAK,CAAE1C,KAAM4N,OAAQunC,SAAS,EAAMhI,WAAYL,QAChDnqC,IAAK,CAAE3C,KAAM4N,OAAQunC,SAAS,EAAMhI,WAAYN,QAChDkc,UAAW,CAAE/oD,KAAM4N,OAAQunC,SAAS,EAAMhI,WAAYL,QACtDkc,UAAW,CAAEhpD,KAAM4N,OAAQunC,SAAS,EAAMhI,WAAYN,QAEtD5qC,QAAS,CAAEjC,KAAMqB,SAEjB4nD,OAAQ,CAAEjpD,KAAMqB,SAChB6nD,SAAU,CAAElpD,KAAMqB,QAAS8zC,SAAS,GACpCgU,WAAY,CAAEnpD,KAAMqB,QAAS8zC,SAAS,GAEtCiU,eAAgB,CAAEppD,KAAMqB,QAAS8zC,SAAS,GAC1CkU,aAAc,CAAErpD,KAAMqB,QAAS8zC,SAAS,GACxC0E,UAAW,CAAE75C,KAAMqB,QAAS8zC,SAAS,GACrCgU,WAAY,CAAEnpD,KAAMqB,QAAS8zC,SAAS,GACtC3zB,SAAU,CAAExhB,KAAMqB,QAAS8zC,SAAS,GACpCn1B,QAAS,CAAEhgB,KAAMqB,QAAS8zC,SAAS,GACnC9C,SAAU,CAAEryC,KAAMqB,QAAS8zC,SAAS,GACpCmU,OAAQ,CAAEtpD,KAAMqB,QAAS8zC,SAAS,GAClCoU,SAAU,CAAEvpD,KAAMqB,QAAS8zC,SAAS,GACpCqU,SAAU,CAAExpD,KAAMqB,QAAS8zC,SAAS,GAEpCsU,UAAW,CAAE/7C,UAAW,cACxBg8C,UAAW,CAAEh8C,UAAW,cACxBi8C,SAAU,CAAEj8C,UAAW,aACvBk8C,SAAU,CAAEl8C,UAAW,cAIzB2wC,IAAW1yC,KAAKvL,GAChBypD,IAAY7hB,IACZ8hB,IAAa9hB,IACb+hB,IAAY,GAEZtnD,cACEwlB,QACAroB,MAAKoqD,KACLpqD,KAAK8qB,aAAa9qB,MAAKy+C,IACvBz+C,KAAKI,KAAO,OACZJ,KAAK+d,UAAY,MACjB/d,KAAK6oD,OAAS,aACd7oD,KAAKo6C,KAAOwO,mBAAmByB,KAC/BrqD,KAAK+pD,SAAWnB,mBAAmB0B,UACnCtqD,KAAK8pD,UAAYlB,mBAAmB2B,cAErC,CAEDhU,oBACE,MAAMtnC,EAAKjP,KACLq8B,EAAO/hB,EAAM+D,QAAQpP,EAAI,WAC/BA,EAAG45C,OAASt8C,EAAOvD,IAAIqzB,EAAM,SAAUptB,EAAG45C,QAC1C55C,GAAGk7C,GAAY14B,OAAOG,QAAQ3iB,GAC7BrJ,QAAO9F,GAAMA,EAAG+N,QAAQ/J,UACxBpB,KAAI5C,GAAM,IAAIyE,OAAOzE,EAAG+N,QAAQ/J,WACjCukB,MAAMkuB,mBACP,CAEDM,eACExuB,MAAMwuB,eACK72C,KACR0B,MADQ1B,KACGuO,OACf,CAEDirC,UACE,MAAMvqC,EAAKjP,KAEX,GADAiP,GAAGu7C,KACCv7C,EAAGqlC,cAAgBrlC,EAAGmtB,MAAO,CAC/B,MAAMA,EAAQ9hB,EAAMmwC,aAAax7C,EAAGmgC,YAAY/5B,MAChDpG,GAAGg7C,GAAUvoD,MAAQ06B,EACjBA,IACFA,EAAMp0B,KAAOhI,KAAKgI,KAClBiH,EAAG6iC,YAAY1V,EAAO,SAAUntB,GAAGi5C,GAAUtgD,KAAKqH,IAErD,CACF,CAEDgoC,WACE,MAAMhoC,EAAKjP,KACX,OAAQiP,EAAG45C,QACT,IAAK,WAAY,OAAO55C,GAAGy7C,KAC3B,IAAK,WAAY,OAAOz7C,GAAG0vC,KAC3B,QAAS,OAAO1vC,GAAG2vC,KAEtB,CAED8L,MACE,MAAMz7C,EAAKjP,KACX,OAAOkb,CAAI;iBACEytB,EAAU15B,EAAGuoC,0BAA0BtP,EAASj5B,EAAGkoC;mCACjCloC,GAAG07C,MAAa17C,GAAG46C;YAC1C56C,GAAG27C;YACH37C,GAAG47C;YACH57C,GAAG67C;;SAEN77C,GAAG87C;WAET,CAEDpM,MACE,MAAM1vC,EAAKjP,KACX,OAAOkb,CAAI;iBACEytB,EAAU15B,EAAGuoC,0BAA0BtP,EAASj5B,EAAGkoC;yCAC3BloC,EAAG66C;YAChC76C,GAAG67C;;qBAEM77C,GAAG07C,MAAa17C,GAAG46C;YAC5B56C,GAAG27C;YACH37C,GAAG47C;;SAEN57C,GAAG87C;;KAGT,CAEDnM,MACE,MAAM3vC,EAAKjP,KACX,OAAOkb,CAAI;iBACEytB,EAAU15B,EAAGuoC,qCAAqCtP,EAASj5B,EAAGkoC;;SAEtEloC,GAAG+7C;SACH/7C,GAAGg8C;SACHh8C,GAAG87C;;WAGT,CAEDD,MACE,MAAM77C,EAAKjP,KACX,OAAOkb,CAAI,iBAAiBjM,GAAG86C,MAAa96C,EAAG86C,mCAAmC96C,EAAGjH,SAASiH,EAAGwlB,UAAUxlB,EAAG85C,gBAC/G,CAEDiC,MAEE,OAAO9vC,CAAI,4BADAlb,KAC+B8pD,cAD/B9pD,MACgD8qD,YAC5D,CAED5P,MAEE,OADWl7C,MACDkrD,GAAUhwC,CAAI,0BAA0B0tC,mBAAmBuC,oBAD1DnrD,KACiFo6C,mBAAqBl/B,CAAI,2BACtH,CAEDkwC,MACE,MAAMn8C,EAAKjP,KACL88C,EAAM7tC,GAAGi8C,GAAU,UAAY,UAAUj8C,EAAGjH,SAClD,OAAOiH,EAAG65C,YAAc5tC,CAAI,6BAA6BytB,EAAU15B,EAAG9L,uBAAuB8L,EAAG8O,qBAAqB9O,EAAG65C,uBAAuBngB,EAAUmU,mBAAuB,EACjL,CAEDiO,MACE,MAAM97C,EAAKjP,KACLq6C,EAAUprC,GAAGm8C,KACnB,OAAI/Q,GAAWprC,GAAGi8C,GAAgBhwC,CAAI;;SAEjCm/B;SACAprC,GAAGisC;YAEDb,CACR,CAED4Q,MACE,MAAMh8C,EAAKjP,KACX,OAAOkb,CAAI;kBACGjM,GAAG07C,MAAa17C,GAAG46C;2BACV56C,GAAG27C,OAAiB37C,GAAG47C;WAE/C,CAEDA,MACE,MAAM57C,EAAKjP,KACX,OAAKiP,EAAGo8C,QACDnwC,CAAI,SAASwuB,EAAIz6B,GAAGi7C,sCAA8Cj7C,EAAGvN,eADpD,EAEzB,CAEDkpD,MAEE,MAAM37C,EAAKjP,KAGX,GADYiP,EAAGvF,MAAM,aAAeuF,EAAG+pB,SAC9B,OAAO/pB,EAAGioC,iBAEnB,MAAMoU,EAASr8C,EAAGo6C,OAASp6C,EAAGjH,UAAOvD,EAC/B7C,EAAMqN,EAAGs8C,WAAat8C,EAAGvN,MAAMU,MAAM,KAAO6M,EAAGvN,MAErD,GAAIsD,MAAMC,QAAQrD,GAAM,CACtB,MAAMka,EAAkC,aAA3B7M,EAAGpB,QAAQ29C,YACxB,OAAO5pD,EAAIc,KAAI,CAACsU,EAAIrU,KAAe,CAAEpB,EAAGyV,EAAIxW,GAAI,GAAGyO,EAAGjH,QAAQrF,QAC3DD,KAAI,CAACiE,EAAGhE,IAAMsM,GAAGw8C,GAAUx8C,EAAGjH,KAAOrF,EAAGgE,EAAEpF,EAAG0N,GAAGy8C,GAAW/kD,EAAEnG,GAAIyO,EAAGjH,KAAMrB,EAAEpF,GAAIua,IACpF,CAED,OAAO7M,GAAGy8C,GAAWJ,EAAQr8C,EAAGjH,KAAMiH,EAAGvN,MAC1C,CAED+pD,IAAUjrD,EAAIoB,EAAK+pD,EAAKC,GAAW,GAEjC,OAAOA,EACL1wC,CAAI,qBAAqBywC,gBAAkBnrD,mBAFlCR,KAEyDy0B,UAAU7yB,mBAE5EsZ,CAAI,sBAAsBywC,gBAAkBnrD,mBAJnCR,KAI0Dy0B,UAAU7yB,mBAChF,CAED8pD,IAAWlrD,EAAIwH,EAAMtG,GACnB,MAAMuN,EAAKjP,KACLI,EAAO6O,EAAG48C,SAAW,WAAa58C,EAAG7O,KAErCkX,EAAQ,CACZ0f,UAAW/nB,EAAG5M,SAAW4M,EAAGo8C,QAAU,kBAAoB,IAI5D,OAFAp8C,EAAG6b,aAAa7b,GAAGwvC,GAAUnnC,GAEtB4D,CAAI;cACDwuB,EAAIz6B,GAAGg7C;iBACJthB,EAAUnoC;qBACNyO,GAAG68C,GAAQlkD,KAAKqH;sBACfA,GAAGu7C,GAAS5iD,KAAKqH;uBAChBA,GAAGi5C,GAAUtgD,KAAKqH;;oBAErBjH;oBACA5H;qBACCuoC,EAAUjnC;;qBAEVuN,GAAG+6C,MAAa/6C,EAAG+6C,YAAY/6C,GAAGwvC;;2BAE5B9V,EAAU15B,EAAGwlB,UAAUxlB,EAAG+5C;2BAC1BrgB,EAAU15B,EAAGwlB,UAAUxlB,EAAG65C;;oBAEjCngB,EAAU15B,EAAGg6C;uBACVtgB,EAAU15B,EAAGnL;oBAChB6kC,EAAU15B,EAAG8H;sBACX4xB,EAAU15B,EAAGrD;;oBAEf+8B,EAAU15B,EAAGi6C;mBACdvgB,EAAU15B,EAAGnM;mBACb6lC,EAAU15B,EAAGlM;oBACZ4lC,EAAU15B,EAAGklB;;yBAERwU,EAAU15B,EAAGk6C;yBACbxgB,EAAU15B,EAAGm6C;;0BAEZn6C,EAAGgrC;yBACJhrC,EAAGq6C;2BACDr6C,EAAGs6C;6BACDt6C,EAAGw6C;yBACPx6C,EAAGwjC;wBACJxjC,EAAGmR;yBACFnR,EAAG06C;yBACH16C,EAAG26C;yBACH36C,EAAG2S;uBACL3S,EAAGy6C;cAEvB,CAEGM,SAEF,OADWhqD,KACJ+rD,YAAoB,wBADhB/rD,KAEJqrD,QAAgB,aAChB,cACR,CAEGtB,SACF,MAAM96C,EAAKjP,KACX,OAAIiP,EAAG88C,YAAoB,mBACvB98C,EAAG+8C,WAAmB,OACnB/8C,EAAGyvC,WAAa,aAAe,EACvC,CAEGiM,SACF,MAAM17C,EAAKjP,KACX,OAAIiP,EAAG88C,YAED98C,EAAG48C,SAAiB,mCACjB58C,EAAGs8C,WAAa,GAAK,aAEvB,EACR,CAEG1B,SACF,MACMjoD,EADK5B,KACiB,aAAI,IAAM,KACtC,OAFWA,KAED6pD,WAAa,UAAUjoD,YAAcA,aAChD,CAEGspD,SACF,OAAOlqD,EAAO0F,iBAAiB1G,KAAKo6C,KACrC,CAEDoQ,IAAS1+C,GACP,MAAMmD,EAAKjP,KACX,GAAIiP,EAAGo8C,QAAS,CACd,MAAMvrD,EAAKmP,GAAGi7C,GAAWxoD,MACrB5B,IAAIA,EAAG2G,UAAYwI,EAAGvN,OAAS,IACnCuN,EAAGmtB,MAAM9a,MAAQrS,EAAGvN,KACrB,CACDuN,EAAGwgB,KAAK,QAAS3jB,EAClB,CAEDo8C,IAAUp8C,GACR9L,KAAKyvB,KAAK,SAAU3jB,GAAG,EACxB,CAEDJ,SAAcI,GAEZ,MAAMmD,EAAKjP,KACLF,EAAKmP,EAAGmtB,MAEd,GAAwB,IAApBt8B,EAAG4B,MAAMwC,QAAwC,IAAxB+K,GAAGk7C,GAAUjmD,OAAc,OAExC+K,EAAGwR,kBAEjBxR,EAAGu5C,iBACH1oD,EAAGklC,cACGhkC,EAAOsG,QAAQ,KACrBxH,EAAGmsD,kBAAkB,KAGvBh9C,EAAGwgB,KAAK,SAAU3jB,EACnB,CAEDs+C,MACE,MAAMn7C,EAAKjP,KACLksD,EAAQ,CAAC,SAAU,OAAQ,UACjC,IAAIn1C,EAAO/R,MAAMgG,KAAKiE,EAAGf,UAAUtI,QAAO9F,GAAMA,EAAGmc,OAASiwC,EAAMhiD,SAASpK,EAAGmc,QAC9E,GAAIlF,EAAK7S,OAAS,EAAG,MAAM,IAAItD,MAAM,uFAAuFqO,EAAGkN,gBAAgBlN,EAAGzO,MAClJuW,EAAO/R,MAAMgG,KAAKiE,EAAGf,UAAUtI,QAAO9F,IAAOA,EAAGmc,OAChD,MAAMkwC,EAAU,CAAC,WAAY,WAE7B,IADgB7xC,EAAMoI,UAAU3L,EAAMo1C,GACxB,MAAM,IAAIvrD,MAAM0Z,EAAMqI,kBAAkB1T,EAAIk9C,GAC3D,CAEDz6B,WACE,MACMjnB,EADKzK,KACQygB,gBAEnB,OADKhW,GAFMzK,KAEMwoD,iBACV/9C,CACR,CAEDgW,gBAEE,MAAMxR,EAAKjP,KACLF,EAAKmP,EAAGmtB,MAEd,IAAI3xB,EAAU3K,GAAI2gB,gBAClB,IAAK,MAAMvG,KAAKjL,GAAGk7C,GAEjB,GADA1/C,EAAUyP,EAAEvW,KAAK7D,GAAI4B,QAChB+I,EAAS,MAGhB,OAAOA,CACR,CAED+9C,iBACE,MACM1oD,EADKE,KACGo8B,MACRr8B,EAFKC,MAEImqD,GAAUjmD,OAAS,EAAI,gBAAkB,GAExD,OADApE,GAAImsD,kBAAkBlsD,GACfD,GAAI0oD,gBACZ,CAEG9mD,YACF,OAAO1B,KAAKo8B,OAAO16B,KACpB,CAEGA,UAAME,GACR0Y,EAAMsG,mBAAmB5gB,KAAKo8B,MAAO,CAAE,CAACp8B,KAAKgI,MAAOpG,IACpD5B,KAAK0xB,WACL1xB,MAAKwqD,IACN,CAEGwB,iBACF,MAAuB,aAAhBhsD,KAAK6oD,MACb,CAEGxJ,mBACF,MAAuB,eAAhBr/C,KAAK6oD,MACb,CAEGnK,iBACF,MAAuB,aAAhB1+C,KAAK6oD,MACb,CAEG0C,iBAEF,MAAmB,UADRvrD,KACDI,MADCJ,KACsB0B,OAAOwI,SAAS,IAClD,CAEG6hD,kBACF,MAAM98C,EAAKjP,KACX,OAAOiP,EAAGm9C,SAAWn9C,EAAGo9C,SAAWp9C,EAAG48C,QACvC,CAEGS,gBACF,OAAOtsD,KAAKo8B,MAAMhc,OACnB,CAEGgsC,cACF,MAAqB,aAAdpsD,KAAKI,IACb,CAEGisD,cACF,MAAqB,UAAdrsD,KAAKI,IACb,CAEGyrD,eACF,MAAqB,WAAd7rD,KAAKI,IACb,CAEGqD,eACF,MAAqB,WAAdzD,KAAKI,IACb,CAEGirD,cACF,MAAqB,UAAdrrD,KAAKI,IACb,CAEG8b,aACF,MAAqB,SAAdlc,KAAKI,IACb,CAEGmsD,iBACF,MAAqB,cAAdvsD,KAAKI,IACb,CAEGosD,cACF,MAAqB,UAAdxsD,KAAKI,IACb,CAEGqsD,YACF,MAAqB,QAAdzsD,KAAKI,IACb,CAEGsyB,aACF,MAAqB,SAAd1yB,KAAKI,IACb,CAEGg8B,YACF,OAAOp8B,MAAKiqD,GAAUvoD,KACvB,QAGC1B,KAAKiJ,OAAO,gBACb,EC9cI,MAAMyjD,2BAA2BrX,UAEtCx1C,kBAAoB,CAClB8wC,QAAS,CAAE,EACXgc,YAAa,CAAE7+C,UAAW,gBAC1B8T,SAAU,CAAExhB,KAAMqB,SAClBsG,KAAM,CAAE3H,KAAM4E,QAGhBijD,IAAW7f,IAEXvlC,cACEwlB,QACAroB,KAAK+H,KAAO/H,MAAKmO,EAClB,CAED8oC,WACE,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI,YAAYwuB,EAAIz6B,GAAGg5C;kBAChBh5C,EAAG2S;iBACJ+mB,EAAU15B,EAAG09C;iBACb19C,EAAG9L;cACN8L,EAAGqmC;cACHrmC,EAAGyL;gBACDzL,EAAG+qB;iBACF/qB,EAAG8nB;kBACF9nB,EAAG+mB;iBACJ/mB,EAAGmoC;iBACHnoC,EAAGqP;aACPrP,EAAG2mC;kBACE3mC,EAAG4mC;sBACC5mC,EAAG2+B;sBACH3+B,EAAGkO;mBACNlO,EAAG6e;;UAEZ1c,EAAOnC,EAAGlH,MAAOmS,GAAMgB,CAAI,wBAAwBhB,aAAayuB,EAAU15B,EAAG9L;;YAGpF,CAEGk5B,WACF,OAAOr8B,MAAKioD,GAASvmD,KACtB,CAEDuvC,WAAWlpC,GACT/H,KAAK+H,KAAOA,CACb,CAEDopC,YAAYrlC,GACVlM,MAAM8b,MAAM1b,KAAM8L,EACnB,CAEGqC,SACF,OAAOsjB,OAAOG,QAAQ5xB,MAAM0C,KAAI5C,GAAMyM,EAAO4B,QAAQrO,EAAI8oD,mBAAmB7rB,aAC7E,QAGC/8B,KAAKiJ,OAAO,gBACb,ECnDI,MAAM2jD,uBAAuBvX,UAElCx1C,kBAAoB,CAElB8hB,MAAQ,CAAE,EACVgvB,QAAS,CAAE,EACX6B,SAAU,CAAEpyC,KAAMqB,SAClBgxC,SAAU,CAAEryC,KAAMqB,SAClBsG,KAAM,CAAE3H,KAAM4E,QAGhBs8C,IAASlZ,IACT7Y,IACAs9B,IAEAhqD,cACEwlB,QACA,MAAMpZ,EAAKjP,KACXiP,EAAGlH,KAAOkH,EAAG69C,WACb79C,GAAGsgB,GAAc,IAAI+iB,4BAA4BrjC,GACjDA,GAAG49C,GAAmB,IAAIxZ,gBAAgBpkC,EAC3C,CAEDukC,WAAW1nC,GACT,IAAIjB,EAAO+yB,IACT/yB,QAAO+yB,QAAQ9xB,EAAEwZ,QACfza,GAAS7K,OACN49B,GAAMhc,WAAY/W,GAAOkiD,YAC5B/sD,KAAK60B,QAGV,CAEDme,WAAWlzC,GACTE,MAAK6sD,GAAiB/pB,OAAOhjC,EAC9B,CAED+2C,aAAatR,GACX,MAAMt2B,EAAKjP,KACXiP,GAAGsgB,GAAYjC,OACfre,GAAGsgB,GAAYrH,OAAOjZ,GAAGqyC,GAAO5/C,OAChC2mB,MAAMwuB,aAAatR,EACpB,CAED0R,WACE,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI,QAAQwuB,EAAIz6B,GAAGqyC;aACjB3Y,EAAU15B,EAAGuoC;eACXtP,EAASj5B,EAAGkoC;QACnBloC,EAAG+9C;aAER,CAEDA,gBAAgBhlD,GAEd,OAAOkT,CAAI;eACAgtB,EAFAloC,KAEYitD;oBACPtkB,EAAU3gC,OAHfhI,KAG4B04C;aAExC,CAEDuU,qBACE,MAAO,EACR,CAEDvU,cACE,MAAO,EACR,CAEDoU,WAEC,CAED7tB,WACEj/B,MAAKuvB,GAAY0P,UAClB,CAEDhzB,OACEjM,MAAKuvB,GAAYtjB,MAClB,CAKD4oB,QACE70B,MAAKuvB,GAAYsF,OAClB,CAODse,YAAYrzC,GACV,OAAO,CACR,CAEDmxC,WAAWlpC,GACT/H,KAAK+H,KAAOA,CACb,CAEG28B,cACF,OAAO1kC,MAAKuvB,GAAYmV,OACzB,CAEGC,eACF,OAAO3kC,MAAKuvB,GAAYoV,QACzB,CAEDnK,SAAS16B,GACP,MAAMqc,EAAUpT,eAAemkD,QAAQptD,GAAI0C,eAAiB,UACtDyU,EAAMo+B,UAAU8X,cAAcrtD,GAC9BmhB,EAAQjc,MAAMgG,KAAKhL,KAAKkO,UAAUtI,QAAOkG,GAAKA,EAAEqQ,UAAYA,IAAUzZ,KAAI5C,GAAMyM,EAAO4B,QAAQrO,EAAImX,KACnGuD,EAASyG,EAAMrb,QAAO9F,GAAMA,EAAG0a,SAErC,OADAA,EAAO3T,SAAQ,CAAC/G,EAAIgZ,IAAQhZ,EAAG0a,OAAiB,IAAR1B,IACjCmI,CACR,QAGCjhB,KAAKiJ,OAAO,WACb,ECpII,MAAMmkD,sBAAsB/X,UAEjCx1C,cAAgB6a,CAAG;;;;;;;;;;;;OAcnB7a,kBAAoB,CAClBmI,KAAM,CAAEutC,SAAS,EAAMhI,WAAYT,UACnC73B,KAAM,CAAEsgC,SAAS,EAAMn1C,KAAM4N,OAAQu/B,WAAYN,QACjDS,MAAO,CAAE6H,SAAS,KAAS7H,GAC3B2f,WAAY,CAAEv/C,UAAY,eAC1Bua,MAAO,CAAEktB,SAAS,GAClBuE,SAAU,CAAEhsC,UAAY,aACxBisC,SAAU,CAAEjsC,UAAY,aACxBw/C,SAAU,CAAEx/C,WAAU,GACtBy/C,SAAU,CAAEz/C,WAAU,IAGxB47B,IAAOtB,IAEPvlC,cACEwlB,OAED,CASDmxB,QAAQjU,GACFA,EAAQxV,IAAI,aACV/vB,KAAKstD,UAAUttD,MAAKwtD,IAE3B,CAEDvW,WACE,MAAMhoC,EAAKjP,KAEX,OADAiP,EAAGmpC,eAAe,QAAS,wBAAyBnpC,EAAGo+C,YAChDnyC,CAAI,OAAOwuB,EAAIz6B,GAAGy6B;mBACVxB,EAASj5B,EAAGkoC;qBACVxO,EAAU15B,EAAGoZ;iBACjBpZ,EAAG0rC;qBACC1rC,GAAGurC;oBACJvrC,GAAGwrC,UACpB,CAEDtD,cACE,MAAMloC,EAAKjP,KAUX,MATY,IACPqoB,MAAM8uB,cACT,CAAC,QAAQloC,EAAGy+B,SAAUz+B,EAAGy+B,MACzB,CAAC,MAAMz+B,EAAGjH,QAASiH,EAAGjH,KACtBylD,GAAMx+C,EAAGgG,KAAO,EAChB,CAAC,MAAMhG,EAAGgG,QAAShG,EAAGgG,KAAO,EAC7B,CAAChG,EAAG6qC,UAAW7qC,EAAGq+C,SAClB,CAACr+C,EAAG8qC,UAAW9qC,EAAGs+C,SAGrB,CAED7hD,WACE,MAAMuD,EAAKjP,KACL2wB,EAAQ3vB,EAAO+L,MAAMkC,EAAGpB,QAAQ8iB,MAAO,GACzCA,EAAQ,UACJ3vB,EAAOsG,QAAgB,IAARqpB,GACrB1hB,EAAGq+C,UAAW,EAEjB,CAED9S,IAAa1uC,GACX9L,KAAK+6C,OAAM,EACZ,CAEDN,IAAY3uC,GACV9L,KAAK+6C,OAAM,EACZ,CAEDJ,UACa36C,KACRutD,UAAW,EADHvtD,KAERstD,UAAW,CACf,CAEDvS,MAAMtjC,GAAM,GACV,MAAMxI,EAAKjP,KACPyX,IACFxI,EAAGq+C,UAAW,GAEhBr+C,EAAGs+C,SAAW91C,CACf,QAGCzX,KAAKiJ,OAAO,UACb,EC5GI,MAAMykD,wBAAwBrY,UAEnCx1C,cAAgB6a,CAAG;;;;OAMnB7a,kBAAoB,CAClBmhC,KAAM,CAAE5gC,KAAMqB,SACdwT,KAAM,CAAE7U,KAAM4N,OAAQu/B,WAAYN,QAClC0gB,WAAY,CAAEvtD,KAAM4N,OAAQu/B,WAAYN,SAG1CpqC,cACEwlB,QACWroB,KACRiV,KAAO,EADCjV,KAER2tD,WAAa,EACjB,CAED1W,WACE,MAAMhiC,EAAOjV,KAAKiV,KAAOjV,KAAK2tD,WAC9B,OAAOzyC,CAAI,4CAA4CjG,eACxD,QAGCjV,KAAKiJ,OAAO,YACb,EC3BH,MAAM2kD,GAAS,CAAErY,SAAS,EAAMn1C,KAAM4N,OAAQu/B,WAAYL,QAEnD,MAAM2gB,uBAAuBxY,UAElCx1C,kBAAoB,CAClByJ,IAAK,CAAEikC,WAAYT,UACnB9xB,MAAO4yC,GACP3yC,OAAQ2yC,GACR/yC,QAAS+yC,GACTE,OAAQF,GACRG,UAAWH,GACXI,WAAYJ,GACZ7a,KAAM6a,GACNK,SAAUL,GACVM,SAAUN,GACVO,IAAKP,GACLQ,MAAOR,GAEPS,IAAK,CAAE,EACPloB,QAAS,CAAE,GAIbmoB,IAAYlmB,IACZqW,IAAW1yC,KAAKvL,GAEhBqC,cACEwlB,QACAroB,KAAK8qB,aAAa9qB,MAAKy+C,GACxB,CAED1F,aAAaxT,GAEX,OADAvlC,MAAK+rB,KACE/rB,KAAKsJ,GACb,CAED2tC,WACE,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI,QAAQwuB,EAAIz6B,GAAGq/C;qBACTr/C,GAAGm3B;mBACLn3B,EAAG3F;mBACH2F,EAAGo/C;uBACC1lB,EAAU15B,EAAGk3B;qBACfl3B,GAAGwvC;6BACKxvC,GAAGwvC;iBAE7B,CAEG8P,eACF,OAAOvuD,MAAKsuD,GAAU5sD,OAAO6sD,WAAY,CAC1C,CAEGpjC,SACF,OAAOnrB,KAAK8qB,aAAa9qB,MAAKy+C,IAAUnnC,KACzC,CAEDk3C,MACE,MAAMv/C,EAAKjP,KACL4F,EAASqJ,GAAGw/C,KAMlB,MALY,CACVzzC,MAAO/L,EAAG+L,MAAQ,EAAI/L,EAAG+L,WAAQvW,EACjCwW,OAAQhM,EAAGgM,OAAS,EAAIhM,EAAGgM,YAASxW,EACpCmB,OAAQA,EAAO1B,OAAS,EAAI0B,EAAOtD,KAAK,KAAO,GAGlD,CAEDmsD,MACE,MAAMx/C,EAAKjP,KACL2G,EAAI,GAaV,OAXIsI,EAAG8jC,KAAO,GAAGpsC,EAAE0K,KAAK,QAAQpC,EAAG8jC,WAC/B9jC,EAAG6+C,OAAS,GAAGnnD,EAAE0K,KAAK,UAAUpC,EAAG6+C,WACnC7+C,EAAG4L,QAAU,GAAGlU,EAAE0K,KAAK,WAAWpC,EAAG4L,YACrC5L,EAAGg/C,SAAW,GAAGtnD,EAAE0K,KAAK,YAAYpC,EAAGg/C,aACvCh/C,EAAG8+C,UAAY,GAAGpnD,EAAE0K,KAAK,aAAapC,EAAG8+C,cACzC9+C,EAAG++C,WAAa,GAAGrnD,EAAE0K,KAAK,cAAcpC,EAAG++C,eAE3C/+C,EAAGk/C,IAAM,GAAGxnD,EAAE0K,KAAK,cAAcpC,EAAGk/C,WACpCl/C,EAAGm/C,MAAQ,GAAGznD,EAAE0K,KAAK,SAASpC,EAAGm/C,WACjCn/C,EAAGi/C,SAAW,GAAGvnD,EAAE0K,KAAK,YAAYpC,EAAGi/C,cAEpCvnD,CACR,CAEDolB,MACE,MAAM9c,EAAKjP,KACLmrB,EAAUlc,GAAGkc,GACnBA,EAAQvlB,OAASqJ,GAAGw/C,KAAensD,KAAK,KAAKT,OAC7CspB,EAAQnQ,MAAQ/L,EAAG+L,MAAQ,EAAI,GAAG/L,EAAG+L,UAAY,GACjDmQ,EAAQlQ,OAAShM,EAAGgM,OAAS,EAAI,GAAGhM,EAAGgM,WAAa,EACrD,CAEDmrB,IAAQt6B,GACN,MAAMhM,EAAKgM,EAAE6B,OACPsB,EAAKjP,KACPF,IACFmP,EAAGgM,OAAShM,EAAGgM,QAAUnb,EAAGmb,OAC5BhM,EAAG+L,MAAQ/L,EAAG+L,OAASlb,EAAGkb,MAC1B/L,EAAGwgB,KAAK,SAAU,CAAEzU,MAAOlb,EAAGkb,MAAOC,OAAQnb,EAAGmb,OAAQlM,QAASjP,IAAM,GAE1E,QAGCE,KAAKiJ,OAAO,WACb,EC7FI,MAAMylD,wBAAwBrZ,UAEjCx1C,kBAAoB,CAChBO,KAAM,IAAK+c,IAIftd,eAAiB,CACbW,GAAK,CAAE,EACPJ,KAAM,CAAE,EACR0C,IAAK,CAAE1C,KAAM4N,QACbjL,IAAK,CAAE3C,KAAM4N,QACbiH,KAAM,CAAE7U,KAAM4N,QACd2gD,UAAW,CAAEvuD,KAAMqB,SACnBmtD,QAAS,CAAExuD,KAAMqB,SACjBotD,KAAM,CAAE/gD,UAAW,SACnBghD,KAAM,CAAEhhD,UAAW,UAGvBjL,cACIwlB,QACA,MAAMpZ,EAAKjP,KACXiP,EAAG2/C,SAAU,EACb3/C,GAAGgS,GAAOhS,GAAIvM,KAAI,CAAC5C,EAAIgZ,EAAKi2C,IAAQ9/C,GAAG+/C,GAAQlvD,EAAIgZ,EAAKi2C,EAAK,IAChE,CAEDxY,oBACIluB,MAAMkuB,oBACDv2C,KAAK4uD,SAAWt0C,EAAMyE,KAAK/e,QAAUuG,SAASsI,MAAMtI,SAASsI,KAAKuO,UAAUC,IAAI,SACxF,CAED45B,WACI,MAAMhoC,EAAKjP,KACL+W,EAAO9H,GAAGgS,GAAOhS,GAAIvM,KAAI,CAAC5C,EAAIgZ,EAAKi2C,IAAQ9/C,GAAGvP,GAAOI,EAAIgZ,EAAKi2C,KACpE,OAAO7zC,CAAI,cAAcytB,EAAU15B,EAAGuoC,mDAAmDtP,EAASj5B,EAAGkoC,mBAAmBpgC,SAC3H,CAEDogC,cACI,MACM8X,EAAahhB,iBAAiBoR,aADzBr/C,KACyCI,MACpD,MAAO,IACAioB,MAAM8uB,cACT,cAAe8X,EAEtB,CAKDhuC,IAAOlC,GACH,OAAO0S,OAAOG,QAAQ7S,GAAMrc,KAAI5C,GAAMyM,EAAO4B,QAAQrO,EAAI4uD,gBAAgB1e,UAC5E,CAED2e,IAAW7uD,GACP,OAAOA,EAAGmV,KAAO,GAAKnV,EAAGgD,IAAM,GAAKhD,EAAGiD,IAAM,GAAKjD,EAAG6uD,SACxD,CAEDK,IAAQlvD,EAAIgZ,EAAKi2C,EAAKG,EAAM,GACxB,MAAMjgD,EAAKjP,KACXiP,GAAGgS,GAAOnhB,EAAGuJ,MAAM3G,KAAI,CAACsU,EAAI8B,EAAKmI,IAAUhS,GAAG+/C,GAAQh4C,EAAI8B,EAAKmI,EAAOiuC,EAAI,KACvEjgD,GAAG0/C,GAAW7uD,IAAKmP,EAAG6b,aAAa,OAAOokC,KAAOp2C,IACvD,CAEDpZ,IAAOI,EAAIgZ,EAAKi2C,EAAKG,EAAM,GAEvB,MAAMjgD,EAAKjP,KACLI,EAAON,EAAGuJ,KAAKqV,cAActe,MAAQ,WAErC2W,EAAO9H,GAAGgS,GAAOnhB,EAAGuJ,MAAM3G,KAAI,CAACsU,EAAI8B,EAAKmI,IAAUhS,GAAGvP,GAAOsX,EAAI8B,EAAKmI,EAAOiuC,EAAI,KAEhFpsD,EAAMhD,EAAGgD,IACTC,EAAMjD,EAAGiD,IACTi2B,EAAWl5B,EAAGk5B,SACdm2B,EAAQlgD,GAAGmgD,GAAiBtvD,GAE5BuvD,EAAK,IAAIF,GAAO3uD,OAASw4B,EAEzBs2B,EAAMxvD,EAAGM,MAAQA,GAAQ,WACzB6uD,EAAahhB,iBAAiBoR,aAAaiQ,GAE3Cv2C,EAAMhC,EAAK7S,OAAS,GAAK+qD,EAAa,cAAgB,GAEtDM,EAAM,OAAOL,KAAOp2C,IACpB4B,EAAMzL,GAAGugD,GAAU1vD,EAAIiZ,EAAKw2C,GAC5Bj4C,EAAQrI,GAAGwgD,GAAY3vD,EAAImvD,GACjChgD,EAAG6b,aAAaykC,EAAKj4C,GAErB,MAAM2E,EAAOnc,EAAGkI,KAAOkT,CAAI,eAAepb,EAAGkI,gBAAkB,GACzDsB,EAAM4R,CAAI,YAAYytB,EAAU7oC,EAAGU,sBAAsB0nC,EAASxtB;cAClE3D;cACAqzB,EAAgB+kB;cAChBn2B,GAAYq2B,EAAKn0C,CAAI,0BAA0B8d,oBAA6B;cAC5E/c;oBAGN,IAAKnc,EAAG6uD,UAAW,OAAOrlD,EAE1B,MAAMomD,EAAU52C,IAAQi2C,EAAI7qD,OAAS,EAAK,MAAQ,QAC5Cy9C,EAAW1yC,GAAG0yC,GAAU7+C,EAAKC,EAAK3C,EAAMsvD,GAE9C,OAAI52C,IAAQi2C,EAAI7qD,OAAS,EAAU,CAACy9C,EAAWr4C,GACxC,CAACA,EAAKq4C,EAChB,CAEDyN,IAAiBtvD,GACb,MAAMqvD,EAAQrvD,EAAGuJ,KAAKoS,kBACtB,OAAO0zC,aAAiBvyC,oBAAsBuyC,OAAQ1qD,CACzD,CAED+qD,IAAU1vD,EAAIiZ,EAAKw2C,GAEf,MAAMZ,EAAY3uD,MAAK2uD,GAAW7uD,GAC5B6vD,EAAOhB,EAAY,GAAK,cAE9B,IAAIiB,EAAO9vD,EAAG+uD,KACVgB,EAAO/vD,EAAGgvD,KAEde,EAAOA,EAAO,eAAeA,IAAS,GACtCD,EAAOA,EAAO,mBAAmBA,IAAS,GAU1C,OARY5vD,KAAKq3C,OAAOv3C,EAAG4a,IAAK,CAC5B60C,CAACA,GAAOZ,EACR51C,CAACA,GAAOA,EACR42C,CAACA,GAAQA,EACTE,CAACA,GAAQA,EACTD,CAACA,GAAQA,GAIhB,CAEDH,IAAY3vD,EAAImvD,GACZ,MAAMnsD,EAAMhD,EAAGmV,MAAQnV,EAAGgD,IACpBC,EAAMjD,EAAGiD,KAAOjD,EAAGmV,KACnBqC,EAAQ,CAAA,EAQd,OAPI23C,GACA33C,EAAM,cAAgBxU,EAAM,EAAI,GAAGA,WAAU2B,EAC7C6S,EAAM,cAAgBvU,EAAM,EAAI,GAAGA,WAAU0B,IAE7C6S,EAAM,aAAexU,EAAM,EAAI,GAAGA,WAAU2B,EAC5C6S,EAAM,aAAevU,EAAM,EAAI,GAAGA,WAAU0B,GAEzC6S,CACV,CAEDqqC,IAAU7+C,EAAKC,EAAKusD,EAAKI,GACrB,OAAOx0C,CAAI,uBAAuBo0C,cAAgBI,WAAgB5sD,WAAaC,mBAClF,QAGG/C,KAAKiJ,OAAO,YACf,ECjKE,MAAM6mD,qBAAqBza,UAEhCx1C,kBAAoB,CAClBi6C,SAAU,CAAEhsC,UAAY,aACxBisC,SAAU,CAAEjsC,UAAY,aACxBmsC,UAAW,CAAE75C,KAAMqB,SACnBmgB,SAAU,CAAExhB,KAAMqB,QAAS8zC,SAAS,GACpCtgC,KAAM,CAAE7U,KAAM4N,QACd3H,KAAM,IAAKqnC,GACXA,MAAO,IAAKA,GACZhqC,IAAK,CAAE,EACPqsD,KAAM,CAAE,EACR3V,KAAM,CAAE,EACR94B,MAAO,CAAE,EACT+4B,QAAS,CAAE,EACX1sC,OAAQ,CAAE,GAGZ2sC,IAASlS,IACTmS,IAAUnS,IAEVvlC,cACEwlB,QACAroB,KAAK0D,IAAM,GAGZ,CAEDmzC,aAAatR,GACXld,MAAMwuB,aAAatR,GACfvlC,KAAKi6C,YAAcj6C,KAAK4hB,UAAU5hB,KAAKglC,OAC5C,CAEDiS,WACE,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI;WACJwuB,EAAIz6B,GAAGqrC;eACH3R,EAAU15B,EAAGuoC;iBACX7O,EAAU15B,EAAGwlB,UAAUxlB,EAAGorC;gBAC3B1R,EAAU15B,EAAGvL;gBACbilC,EAAU15B,EAAG8gD;kBACXpnB,EAAU15B,EAAGtB;iBACdu6B,EAASj5B,EAAGkoC;oBACTloC,EAAG2S;sBACD3S,GAAGurC;qBACJvrC,GAAGwrC;kBACNxrC,GAAG0jC;UACX1jC,GAAG8B,KAAS9B,GAAG2H;aAEtB,CAEDugC,cACE,MAAMloC,EAAKjP,KAQX,MAPY,IACPqoB,MAAM8uB,cACT38B,OAAUvL,EAAGuL,OACb,CAAC,MAAMvL,EAAGgG,QAAShG,EAAGgG,KAAO,EAC7B,CAAC,QAAQhG,EAAG5I,QAAS4I,EAAG5I,KACxB,CAAC,MAAM4I,EAAGy+B,SAAUz+B,EAAGy+B,MAG1B,CAEDnlC,QACEvI,MAAKs6C,GAAO54C,OAAO6G,OACpB,CAEDy8B,QACEnlB,uBAAsB,IAAM7f,MAAKs6C,GAAO54C,OAAOsjC,SAChD,CAEG0V,aACF,OAAO16C,MAAKu6C,GAAQ74C,KACrB,CAEDixC,IAAS7mC,GACP,MAAMmD,EAAKjP,KAGX,GAFAiP,EAAGyrC,QAAQC,UACX1rC,EAAG6zB,SACY,MAAX7zB,EAAGvL,KAAe1C,EAAOwD,cAAcyK,EAAGvL,KAG5C,OAFA0f,SAASS,QAAQ/X,GACjBmD,EAAGqsB,OAAOxvB,IACH,CAEV,CAED0uC,MACEx6C,KAAK06C,QAAQK,OAAM,EACpB,CAEDN,MACEz6C,KAAK06C,QAAQK,OAAM,EACpB,CAEGz5B,SACF,OAAOthB,KAAKy0B,UAAUz0B,KAAKshB,MAC5B,CAEGvQ,SAAW,OAAO/Q,KAAKs1C,IAAMt1C,MAAKshB,GAASthB,MAAKi7C,EAAY,CAE5DrkC,SAAY,OAAO5W,KAAKs1C,IAAMt1C,MAAKi7C,GAAYj7C,MAAKshB,EAAS,CAE7D25B,SAAc,OAAOj7C,KAAKo6C,KAAOp6C,MAAKk7C,GAAchgC,CAAI,2BAA8B,CAEtFggC,SACF,OAAQhgC,CAAI;0BACUwuB,EAAI1pC,MAAKu6C;YACvBv6C,KAAKo6C;YACLp6C,KAAKiV;iBACA0zB,EAAU3oC,KAAK85C;iBACfnR,EAAU3oC,KAAK+5C;8BAE7B,CAUDl6C,gBAAgBmwC,EAASt1B,EAAK0mC,EAAQC,GACpC,MAAM7zC,EAAMwiC,EACZ,OAAO90B,CAAI,aAAagtB,EAASxtB;;UAE3B7M,EAAQL,GAAK;gBACPm7B,EAAUn7B,EAAIk+B;mBACX/C,EAAUn7B,EAAI6sC;gBACjB1R,EAAUn7B,EAAI9J;UACpB09C,GAAU;gBACJ5zC,EAAI8T;UACV+/B,GAAS;SAEhB,QAGCrhD,KAAKiJ,OAAO,UACb,EC3II,MAAM+mD,0BAA0B3a,UAErCx1C,kBAAoB,CAClBwI,KAAM,CAAE,EACRsF,OAAQ,CAAE,EACV2T,MAAO,CAAE,EACT84B,KAAM,CAAE,EACRnlC,KAAM,CAAE7U,KAAM4N,QACdisC,UAAW,CAAE75C,KAAMqB,QAAS8zC,SAAS,GACrC3zB,SAAU,CAAExhB,KAAMqB,QAAS8zC,SAAS,GACpC/6B,OAAQ,CAAEpa,KAAMqB,QAAS8zC,SAAS,GAClC0a,UAAW,CAAEtmD,OAAO,EAAMvJ,KAAMqB,UAGlCyuD,IACA5V,IAASlS,IAETvlC,cACEwlB,QACAroB,KAAKy2C,QACN,CAEDF,oBACEluB,MAAMkuB,oBACNv2C,MAAKkwD,GAAWlwD,KAAKwa,OAErBqgB,mBAAmByC,MAAMt9B,KAAK6K,MAAO7K,MAAM,EAC5C,CAED+4C,aAAaC,GACX,MAA+B,YAAxBh5C,KAAK6K,OAAOsR,OACpB,CAED86B,WACE,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI,oBAAoBwuB,EAAIz6B,GAAGqrC;eAC3B3R,EAAU15B,EAAGvL;iBACXilC,EAAU15B,EAAGtB;gBACdu6B,EAASj5B,EAAGkoC;UAClBloC,GAAGkhD;UACHlhD,GAAGmhD;gBACGnhD,EAAGioC;WAEhB,CAEDC,cACE,MAAMloC,EAAKjP,KACL0a,EAAM,IACP2N,MAAM8uB,cACT,mBAAmB,EACnB,0BAA0B,EAC1B,CAAC,MAAMloC,EAAGgG,QAAShG,EAAGgG,KAAO,EAC7B,CAAChG,GAAGohD,KAAY,EAChB71C,OAAUvL,EAAGuL,QAAUvL,EAAGqhD,gBAE5B,OAAOrhD,EAAGooC,OAAOpoC,GAAGshD,GAAgB71C,EACrC,CAED41C,eACE,OAAQtvD,EAAO8L,OAAO9M,KAAK4hB,WAAa5gB,EAAO8L,OAAO9M,KAAK6K,MAAMkiD,WAClE,CAED7R,MACE,MAAMjsC,EAAKjP,KACX,OAAOiP,EAAGmrC,KAAOl/B,CAAI,kBAAkBjM,EAAGmrC,eAAenrC,EAAGgG,mBAAqBiG,CAAI,2BACtF,CAEDs1C,MACE,OAAOxwD,KAAKshB,MAAQpG,CAAI,SAASlb,KAAKy0B,UAAUz0B,KAAKshB,gBAAkBpG,CAAI,4BAC5E,CAEDi1C,MACE,OAAOnwD,KAAKs1C,IAAMt1C,MAAKwwD,KAAgBxwD,MAAKk7C,IAC7C,CAEDkV,MACE,OAAOpwD,KAAKs1C,IAAMt1C,MAAKk7C,KAAgBl7C,MAAKwwD,IAC7C,CAEDziD,SACE/N,KAAKwa,QAAUxa,KAAKwa,MACrB,CAEDqa,QACE70B,KAAKwa,OAASxa,KAAKi6C,WAAaj6C,MAAKkwD,KAAY,CAClD,CAED3nD,QACEvI,MAAKs6C,GAAO54C,OAAO6G,OACpB,CAEDy8B,QACEnlB,uBAAsB,IAAM7f,MAAKs6C,GAAO54C,OAAOsjC,SAChD,CAEGthC,UACF,OAAO1D,KAAKqI,MAAQrI,KAAK2N,OAAS3N,KAAKqI,KAAO,GAC/C,CAGGwC,YACF,OAAQ7K,KAAKyO,aAAa,aAAe6L,EAAM2+B,UAAUj5C,MAAQA,KAAK0e,aACvE,CAEG+xC,SACF,OAAOzwD,KAAK6K,MAAMgD,SAAS6iD,WAAa,EACzC,CAEGC,SACF,OAAO3wD,KAAK6K,MAAMgD,SAAS+iD,aAAe,EAC3C,CAEGP,SACF,OAAOrwD,KAAK6K,MAAMgD,SAAS0qC,SAAW,EACvC,CAEGgY,SACF,OAAOvwD,KAAKwa,QAAUxa,KAAKswD,eAAiBtwD,MAAKywD,GAAazwD,MAAK2wD,EACpE,QAGC3wD,KAAKiJ,OAAO,eACb,EC5HI,MAAM4nD,sBAAsBjE,eAEjC/sD,kBAAoB,CAClBktD,WAAY,CAAExX,SAAS,EAAMn1C,KAAMqB,SACnCsG,KAAM,CAAE3H,KAAM4E,QAGhBnC,cACEwlB,QACAroB,KAAKwyC,UAAW,EAChBxyC,KAAKyyC,UAAW,EAChBzyC,KAAK+sD,YAAa,CACnB,CAEDD,WACE,OAAO9sD,KAAKw6B,SAASw1B,kBACtB,CAEDjX,aAAaxT,GACX,OAAOvlC,KAAK+H,KAAK7D,OAAS,GAAKlE,KAAK0J,MAAM,eAC3C,CAEDytC,cAKE,MAJY,IACP9uB,MAAM8uB,cACT,cAAc,EAGjB,CAED6V,kBACE,OAAO9xC,CAAI,SAASlb,KAAK04C,sBAC1B,CAED7jB,QACE70B,KAAKihB,MAAMpa,SAAQ/G,GAAMA,EAAG+0B,UAC5B70B,KAAK8iC,QACN,CAED4V,cAEE,OAAO14C,KAAK+H,KAAKrF,KAAIiE,GACZuU,CAAI;oBACe,IAAbvU,EAAE6T;uBACiB,IAAhB7T,EAAEszC;qBACHtR,GAAyB,IAAfhiC,EAAEib;gBACjB+mB,EAAUhiC,EAAEyzC;gBACZzR,EAAUhiC,EAAE0B;kBACVsgC,EAAUhiC,EAAEgH;iBACbg7B,EAAUhiC,EAAE2a,2BAE1B,CAED6xB,YAAYrzC,GACV,MAAuB,iBAAhBA,GAAIqc,OACZ,CAEG8E,YACF,OAAOjhB,KAAKqc,SAAS,eACtB,QAGCrc,KAAKiJ,OAAO,UACb,EC9DI,MAAM6nD,yBAAyBzb,UAEpCx1C,kBAAoB,CAClBwI,KAAM,CAAE,EACRsF,OAAQ,CAAE,EACV2T,MAAO,CAAE,EACT84B,KAAM,CAAE,EACRx4B,SAAU,CAAExhB,KAAMqB,SAClBw4C,UAAW,CAAE75C,KAAMqB,SACnB+Y,OAAQ,CAAEpa,KAAMqB,QAAS8zC,SAAS,GAClC0a,UAAW,CAAEtmD,OAAO,EAAMvJ,KAAOqB,UAGnC64C,IAASlS,IAETvlC,cACEwlB,OACD,CAED0wB,aAAaC,GACX,MAA+B,WAAxBh5C,KAAK6K,OAAOsR,OACpB,CAED06B,aAAatR,GACXld,MAAMwuB,aAAatR,GACfvlC,KAAKi6C,YAAcj6C,KAAK4hB,UAAU5hB,KAAKglC,OAC5C,CAEDiS,WAEE,OAAO/7B,CAAI,wBAAwBgtB,EADxBloC,KACoCm3C,mBADpCn3C,MAC0D25C,UACtE,CAEDxC,cACE,OAAOn3C,KAAKq3C,OAAOr3C,MAAK+wD,GAAW1oC,MAAM8uB,cAC1C,CAEDtiB,QACE70B,KAAKwa,OAASxa,KAAKi6C,YAAa,CACjC,CAED1xC,QACEvI,MAAKs6C,GAAO54C,OAAO6G,OACpB,CAEDy8B,QACEnlB,uBAAsB,IAAM7f,MAAKs6C,GAAO54C,OAAOsjC,SAChD,CAEGgsB,YACF,OAAO,CACR,CAEGpF,eACF,OAAO5rD,KAAK0e,cAAcktC,WAAY,CACvC,CAEG7tC,gBACF,OAAO/d,KAAK0e,cAAcX,SAC3B,CAEGlT,YACF,OAAQ7K,KAAKyO,aAAa,aAAe6L,EAAM2+B,UAAUj5C,MAAQA,KAAK0e,aACvE,CAEGhb,UACF,OAAO1D,KAAKqI,MAAQrI,KAAK2N,OAAS3N,KAAKqI,KAAO,GAC/C,CAEGiZ,SACF,OAAOpG,CAAI,SAASlb,KAAKy0B,UAAUz0B,KAAKshB,eACzC,CAEG84B,SACF,OAAOp6C,KAAKo6C,KAAOl/B,CAAI,kBAAkBlb,KAAKo6C,mBAAqBl/B,CAAI,2BACxE,CAEGnK,SACF,OAAO/Q,KAAKs1C,IAAMt1C,MAAKshB,GAASthB,MAAKo6C,EACtC,CAEGxjC,SACF,OAAO5W,KAAKs1C,IAAMt1C,MAAKo6C,GAAQp6C,MAAKshB,EACrC,CAEGq4B,SACF,MAAM1qC,EAAKjP,KACX,IAAIgC,EAAMiN,EAAGooC,OAAOpoC,GAAGgiD,GAAY,CAAA,GAEnC,OADIhiD,EAAGuL,SAAQxY,EAAMiN,EAAGooC,OAAOpoC,GAAGiiD,GAAY,IAAMjiD,GAAGwhD,GAAYzuD,IAC5DkZ,CAAI;OACRwuB,EAAIz6B,GAAGqrC;uBACSpS,EAASlmC;aACnB2mC,EAAU15B,EAAGvL;eACXilC,EAAU15B,EAAGtB;UAClBsB,GAAG8B;UACH9B,GAAG2H;WAEV,CAEGm6C,SACF,OAAO/wD,KAAK6K,MAAMgD,SAAS0qC,SAAW,EACvC,CAEG0Y,SACF,OAAOjxD,KAAK6K,MAAMgD,SAASsjD,WAAa,EACzC,CAEGV,SACF,OAAOzwD,KAAK6K,MAAMgD,SAAS6iD,WAAa,EACzC,CAEGU,SACF,OAAOrjB,EAASj3B,QAAQ9W,KAAK6K,MAAMzK,KACpC,CAKG8wD,SACF,MAAMxS,EAAa1+C,KAAK4rD,SAClB7M,EAAW7Q,eAAe6Q,SAAS/+C,KAAK+d,WAC9C,OAAQ/d,MAAKoxD,IAEX,KAAK,EAAG,MAAO,0BAEf,KAAK,EACH,OAAI1S,EACEK,EACK,kCAEA,oCAGJ,qCAET,KAAK,EAAG,MAAO,+CACf,QACE,MAAO,GAEZ,QAGC/+C,KAAKiJ,OAAO,cACb,EC/II,MAAMooD,qBAAqBzE,eAEhC/sD,kBAAoB,CAClBO,KAAM4tC,EACNjwB,UAAWA,EACX6tC,SAAU,CAAExrD,KAAMqB,UAGpBoB,cACEwlB,QACAroB,KAAKwyC,UAAW,EAChBxyC,KAAKyyC,UAAW,EAChBzyC,KAAKI,KAAO,QACZJ,KAAK+d,UAAY,OAClB,CAED+uC,WACE,OAAO9sD,KAAKw6B,SAASs2B,iBACtB,CAED/X,aAAaxT,GACX,OAAOvlC,KAAK+H,KAAK7D,OAAS,GAAKlE,KAAK0J,MAAM,cAC3C,CAEDujD,qBACE,MAAMh+C,EAAKjP,KACL++C,EAAW7Q,eAAe6Q,SAAS9vC,EAAG8O,WACtCuzC,EAAoB,SAAZriD,EAAG7O,KAUjB,MATY,CACV4tC,KAAO,EACP,CAAC,OAAO/+B,EAAG7O,QAAS6O,EAAG7O,KACvB,cAAe6O,EAAG28C,SAClB,kBAAmB38C,EAAG28C,SACtB,aAAc0F,GAASvS,GAAY9vC,EAAG28C,SACtC,eAAgB0F,IAAUvS,GAAY9vC,EAAG28C,SACzC,CAAC,mBAAmB38C,EAAG8O,cAAe9O,EAAG28C,SAG5C,CAMDlT,cACE,OAAO14C,KAAK+H,KAAKrF,KAAIiE,GACZuU,CAAI;oBACe,IAAbvU,EAAE6T;uBACiB,IAAhB7T,EAAEszC;qBACHtR,GAAyB,IAAfhiC,EAAEib;gBACjB+mB,EAAUhiC,EAAEyzC;gBACZzR,EAAUhiC,EAAE0B;kBACVsgC,EAAUhiC,EAAEgH;iBACbg7B,EAAUhiC,EAAE2a,0BAE1B,CAED6xB,YAAYrzC,GACV,MAAuB,gBAAhBA,GAAIqc,OACZ,CAMD+2B,UAAUpzC,GAET,QAGCE,KAAKiJ,OAAO,SACb,ECvEI,MAAMsoD,yBAAyBlc,UAElCx1C,kBAAoB,CAChB6tC,MAAO,CAAE,EACT//B,OAAQ,CAAE,EACV6jD,WAAY,CAAEpxD,KAAMqB,SACpBgjC,OAAQ,CAAErkC,KAAMqB,SAChBoZ,QAAS,CAAEza,KAAM4N,QACjBgoB,QAAS,CAAE51B,KAAM4N,QACjByjD,OAAQ,CAAErxD,KAAM4N,SAGpBywC,IAAW1yC,KAAKvL,GAChBkxD,IAAY3lD,KAAKvL,GAEjBqC,cACIwlB,QAEAroB,KAAK0tC,MAAQ,OACb1tC,KAAK6a,QAAU,GACf7a,KAAKg2B,QAAU,EACfh2B,KAAKyxD,OAAS,EACdzxD,KAAK8qB,aAAa9qB,MAAKy+C,IACvBz+C,KAAK8qB,aAAa9qB,MAAK0xD,GAC1B,CAEDnb,oBACIluB,MAAMkuB,oBACN,MAAMtnC,EAAKjP,KACXiP,EAAG6iC,YAAYlrC,OAAQ,UAAU,IAAMqI,EAAG0kC,iBAC7C,CAEDsD,WACI,MAAMhoC,EAAKjP,KACX,IAAKiP,EAAGw1B,OAAQ,MAAO,GACvB,MAAMhS,EAAOxjB,GAAGwjB,GAChB,OAAOA,EAAOvX,CAAI;;;4BAGEtU,OAAOi6C,cAAcj6C,OAAO+qD;oDACJ1iD,GAAGwvC;sBACjCxvC,EAAG4lB,MAAMjtB,KAAKqH;cACtBwjB;gBACI,EACb,CAED/mB,mBAAmB65B,GACJvlC,KAaR8qB,aAbQ9qB,MAaQy+C,GAZP,CACRmT,SAAU,UACVC,SAAU,UACVC,eAAgB,QAChBC,iBAAkB,IAClBC,OAAQ,QACRl7B,SAAU,QACVnB,IAAK,IACL5uB,KAAM,IACNiU,MAAO,OACPC,OAAQ,SAGZoN,MAAMwuB,aAAatR,EACtB,CAEDN,OACIjlC,KAAKykC,QAAS,CACjB,CAEDkU,QACI34C,KAAKykC,QAAS,CACjB,CAED12B,SACI/N,KAAKykC,QAAUzkC,KAAKykC,MACvB,CAED5P,QACe70B,KACJwxD,YADIxxD,KACW24C,OACzB,CAEGlmB,SACA,MAAMxjB,EAAKjP,KACLF,EAAKwa,EAAM5Q,MAAMuF,EAAGtB,QAC1B,IAAKsB,EAAGtB,OAAQ,MAAO,GACvB,MAAMskD,EAAUhjD,GAAGijD,GAAqBpyD,GAClC0N,EAAM,CAAE2kD,KAAMljD,EAAGy+B,MAAO7yB,QAAS5L,EAAG4L,QAASu3C,cAAe,OAAQC,OAAQ,QAElF,OADApjD,EAAG6b,aAAa7b,GAAGyiD,GAAWlkD,GACvB28B,CAAG,gBAAgBl7B,GAAGyiD,WAAkBO,YAClD,CAEDC,IAAqBvkD,GAEjB,MACM2kD,EAAU1rD,OAAOi6C,WACjB0R,EAAU3rD,OAAO+qD,YAEjB72C,EAAOnN,EAAOoN,wBAEdib,EANKh2B,KAMQg2B,QACby7B,EAPKzxD,KAOOyxD,OAEZz2C,EAAQF,EAAKE,MAAkB,EAAVgb,EACrB/a,EAASH,EAAKG,OAAmB,EAAV+a,EAGvBw8B,EAAgBxvD,KAAKF,IAAI2uD,EAAQz2C,EAAQ,EAAGC,EAAS,GAGrDw3C,EAAmBzvD,KAAKgB,MAAMhB,KAAKD,IAAIyvD,EAAe,IAItDE,EAAoB13C,EAA2B,EAAnBy3C,EAC5BE,EAAqB13C,EAA4B,EAAnBw3C,EAYpC,MAVY,IAAIH,aAAmBC,KAAWD,KAAWC,KAAWD,sBAL9Cx3C,EAAK5Y,EAAI8zB,EAAUy8B,KACnB33C,EAAK9E,EAAIggB,oBAMxB08B,oBACAD,KAAoBA,WAA0BA,KAAoBA,oBAClEE,oBACAF,KAAoBA,YAA2BA,KAAoBA,qBAClEC,oBACDD,KAAoBA,YAA2BA,MAAqBA,qBACnEE,oBACDF,KAAoBA,WAA0BA,MAAqBA,MAC/DxwD,QAAQ,UAAW,IACjC,QAGGjC,KAAKiJ,OAAO,aACf,ECnIE,MAAM2pD,uBAAuBvd,UAElCx1C,kBAAoB,CAClB8wC,QAAS,CAAE,EACX17B,KAAM,IAAKA,IACXlE,MAAO,CAAE3Q,KAAMqB,SACfoP,KAAM,CAAEzQ,KAAMqB,SACdwK,KAAM,CAAE7L,KAAMqB,SACdw9B,SAAU,CAAE7+B,KAAMqB,SAClBoxD,MAAO,CAAEzyD,KAAM4N,QAEf8kD,WAAY,CAAEhlD,UAAW,eACzBilD,UAAW,CAAEjlD,UAAW,cACxBklD,UAAW,CAAEllD,UAAW,cACxBmlD,cAAe,CAAEnlD,UAAW,kBAE5ByqC,QAAS,CAAEzqC,UAAW,aAIxB47B,IAAOtB,IAEPvlC,cACEwlB,QACAroB,KAAK6yD,MAAQ,EACb7yD,KAAK8yD,WAAa,UAClB9yD,KAAK+yD,UAAY,UACjB/yD,KAAKgzD,UAAY,WACjBhzD,KAAKizD,cAAgB,UACtB,CAEDhc,WACE,MAAMhoC,EAAKjP,KACLkzD,EAAOlwD,KAAKgB,OAAOiL,EAAG4jD,MAAQ,GAAK,GACnChiB,EAAO5hC,EAAGgnC,gBAAgBpF,MAAQ,EAClC9f,EAAQ8f,EAAOqiB,EAAO,EAAI,EAAIriB,EAAOqiB,EACrCjiC,EAAM4f,EAAO,EAAIA,EAAOqiB,EAAOjkD,EAAG4jD,MAExC,OAAO33C,CAAI;eACAytB,EAAU15B,EAAGuoC;kBACVvoC,GAAG0jC;kBACH1jC,GAAGyjC;oBACDzjC,GAAGyU;cACTgmB,EAAIz6B,GAAGy6B,cAAgBxB,EAASj5B,EAAGkoC;UACvCloC,GAAGkhD;UACHlhD,GAAGkkD;UACHzwD,EAAI+mC,EAAM1Y,EAAOE,EAAM,IAAKtuB,GAAMsM,GAAGmkD,GAAYzwD,EAAG,GAAI,GAAIA,IAAOkuC;UACnE5hC,GAAGokD;UACHpkD,GAAGqkD;oBAEV,CAEDnc,cACE,MAAMloC,EAAKjP,KACLiV,EAAOhG,EAAGgG,KAAOo5B,EAAUp/B,EAAGgG,OAAShG,EAAGgG,KAAO,GAOvD,MANY,IACPoT,MAAM8uB,cACToc,YAAc,EACd,CAAC,cAAct+C,KAASA,EAI3B,CAEDukC,UACE,MAAM7rC,EAAS3N,MAAK0pC,GAAKhoC,MACrBiM,GAAU3N,KAAKy3C,WACjB9pC,EAAOijB,cAAc,gBAAgBoU,OAExC,CAEDiM,aACEjxC,KAAK2zC,eACN,CAEDwc,MACE,OAAOnwD,KAAK+Q,MAAQ/Q,MAAKozD,GAAYpzD,KAAK8yD,WAAY,QAAS,cAAgB,EAChF,CAEDQ,MACE,OAAOtzD,KAAK6Q,KAAO7Q,MAAKozD,GAAYpzD,KAAK+yD,UAAW,OAAQ,aAAe,EAC5E,CAEDI,MACE,OAAOnzD,KAAKi/B,SAAWj/B,MAAKozD,GAAYpzD,KAAKizD,cAAe,WAAY,iBAAmB,EAC5F,CAEDI,MACE,OAAOrzD,KAAKiM,KAAOjM,MAAKozD,GAAYpzD,KAAKgzD,UAAW,OAAQ,aAAe,EAC5E,CAEDI,IAAY/sD,EAAO,GAAI2B,EAAO,GAAIsZ,EAAQ,GAAI9G,GAAS,GAGrD,OADAnU,EAAOrF,EAAOwyD,mBAAmBntD,GAC1B6U,CAAI,wBAAwBV,EAAS,SAAW;oCACvBxa,KAAKu4C;yBAChBvwC;0BAJVhI,KAKcy0B,UAAUnT;4BALxBthB,KAMgBy0B,UAAUpuB;kBAEtC,CAEDssC,IAAS7mC,GAEP,MACMhM,EAAKE,MAAKyzD,GAAU3nD,EAAG,KAC7B,IAAKhM,EAAI,OAET,MAAM4zD,EAJK1zD,KAIKi2C,eAChB,IAAKyd,EAAM,OAEX,MAAM9xD,EAAM9B,EAAGkI,MAAQlI,EAAGuG,KAG1B,OAVWrG,KAQRyvB,KAAK7tB,EAAK9B,GAEL8B,GACN,IAAK,QACH,OAAO8xD,EAAK9iB,YACd,IAAK,OACH,OAAO8iB,EAAK5iB,WACd,IAAK,OACH,OAAO4iB,EAAK3iB,WACd,IAAK,WACH,OAAO2iB,EAAK1iB,WAGhB0iB,EAAK7iB,KAAOjvC,CACb,CAED8hB,GAAW5X,GACT,MAAMuxC,EAAUr9C,MAAKyzD,GAAU3nD,EAAG,MAClC,IAAIhM,EAAK,KACT,OAAQgM,EAAEgY,MACR,IAAK,YACHhkB,EAAKu9C,GAASlN,uBACd,MACF,IAAK,aACHrwC,EAAKu9C,GAASx/B,mBAGlB/d,EAAKA,GAAI8wB,cAAc,KACvB9wB,GAAIklC,OACL,CAED0N,IAAS5mC,GACQ,UAAXA,EAAEgY,MACJ9jB,MAAKyzD,GAAU3nD,EAAG,MAAMvD,OAE3B,CAEDkrD,IAAU3nD,EAAG9D,GACX,MAAMlI,EAAKgM,EAAE6B,OAAO0Q,QAAQrW,IAAS8D,EAAE6B,OACvC,OAAO7N,EAAGqc,UAAYnU,EAAKxF,cAAgB1C,OAAK2E,CACjD,QAGCzE,KAAKiJ,OAAO,gBACb,ECzJI,MAAM0qD,uBAAuBte,UAElCx1C,kBAAoB,CAClBke,UAAW,IAAKA,GAChB+Y,SAAU,IAAKA,GACfoE,QAAS,CAAE,EACXvtB,OAAQ,CAAE,EACV2qC,UAAW,CAAEl4C,KAAMqB,SACnBw4C,UAAW,CAAE75C,KAAMqB,SACnBgjC,OAAQ,CAAErkC,KAAMqB,SAChBqtD,KAAM,CAAE1uD,KAAM4N,OAAQF,UAAW,SACjC+gD,KAAM,CAAEzuD,KAAM4N,OAAQF,UAAW,SACjC8lD,KAAM,CAAExzD,KAAM4N,OAAQF,UAAW,SACjC+lD,KAAM,CAAEzzD,KAAM4N,OAAQF,UAAW,SACjCgmD,KAAM,CAAE1zD,KAAM4N,OAAQF,UAAW,SACjCimD,KAAM,CAAE3zD,KAAM4N,OAAQF,UAAW,UAInCqyC,IAAU,KACV6T,IAAY5rB,IACZqW,IAAW1yC,KAAKvL,GAEhBqC,cACEwlB,QACAroB,KAAKi6C,WAAY,EACjBj6C,KAAKs4C,WAAY,EACjBt4C,KAAKk7B,QAAU,QACfl7B,KAAK82B,SAAW,WAChB92B,KAAK+d,UAAY,SACjB/d,KAAK8qB,aAAa9qB,MAAKy+C,GACxB,CAEDlI,oBACEluB,MAAMkuB,oBACN,MAAMtnC,EAAKjP,KACXiP,GAAGglD,KACHhlD,EAAG6iC,YAAYlrC,OAAQ,SAAUqI,EAAG0pC,MAAM/wC,KAAKqH,IAC/CA,EAAGW,GAAG,aAAcX,GAAGilD,GAAQtsD,KAAKqH,GACrC,CAED4nC,aAAamC,GACX,MAAM/pC,EAAKjP,KACX6f,uBAAsB,KACpB5Q,GAAGygD,KACHzgD,GAAGklD,IAAa,IAElB9rC,MAAMwuB,cACP,CAED2C,UACE,MAAMvqC,EAAKjP,KACXiP,GAAGklD,KACCllD,EAAGgrC,WAAWhrC,EAAG+1B,QACrB/1B,EAAG6zB,QACJ,CAEDmU,WACE,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI;QACPwuB,EAAIz6B,GAAG+kD;aACFrrB,EAAU15B,EAAGuoC;oBACNtP,EAASj5B,EAAGkoC;uBACTloC,GAAGwvC;kBACRxvC,GAAGyU;QACbzU,EAAGioC;;WAGR,CAEDC,cACE,MAAMloC,EAAKjP,KAQX,MAPY,IACPqoB,MAAM8uB,cACTsC,KAAQxqC,EAAGw1B,OAEX,CAACx1B,GAAGwvC,KAAW,EACf,CAAC,YAAYxvC,EAAG6nB,YAAa7nB,EAAG6nB,SAGnC,CAEDkO,QACEhlC,KAAK0J,MAAM,kDAAkD,IAAOs7B,OACrE,CAEDC,OACEjlC,KAAKykC,QAAS,CACf,CAEDkU,QACE34C,KAAKykC,QAAS,CACf,CAED12B,SACE/N,KAAKykC,QAAUzkC,KAAKykC,MACrB,CAQDyb,MAAMh+C,EAAI,EAAG8T,EAAI,GACf,MACMhU,EAAM,CACV2zB,IAAK,MACL5uB,KAAM,MACN0tB,UAAW,GAAGvyB,OAAO8T,OAJZhW,MAMR0vD,GAAQ1tD,EACZ,CAED0hB,GAAW5X,GACT,MAAMmD,EAAKjP,KACX,GACO,WADC8L,EAAEgM,IAEN7I,EAAG0pC,OAGR,CAEDwb,MACE,MAAMllD,EAAKjP,KAEX,GAAIiP,EAAG4/C,MAAQ5/C,EAAG6/C,KAAM,CACtB,MAAMthD,EAAM,CACVmoB,IAAK,MACL5uB,KAAM,MACN0tB,UAAW,GAAGxlB,EAAG6/C,UAAU7/C,EAAG4/C,UAE1B13C,EAAOlI,EAAG6b,aAAa7b,GAAGwvC,IAChC59C,OAAOkqB,OAAO5T,EAAKG,MAAO9J,EAChC,MAAW,GAAIyB,EAAGtB,OAAQ,CACpB,IAAIA,EAAS2M,EAAM5Q,MAAMnD,SAAS0Y,gBAAiBhQ,EAAGtB,QACtDA,EAASA,EAAOyhC,YAAY3zB,mBAAqB9N,EACjD0nB,SAAS++B,WAAWnlD,EAAG8O,UAAW9O,GAAGolD,GAAQ1mD,EAC9C,CAEF,CAED+hD,IAAQ1tD,EAAM,IACZ,MAAMiN,EAAKjP,KACLmX,EAAOlI,EAAG6b,aAAa7b,GAAGwvC,IAC5BxvC,EAAG4kD,OAAM7xD,EAAI,aAAe,GAAGiN,EAAG4kD,UAClC5kD,EAAG2kD,OAAM5xD,EAAI,aAAe,GAAGiN,EAAG2kD,UAClC3kD,EAAG8kD,OAAM/xD,EAAI,cAAgB,GAAGiN,EAAG8kD,UACnC9kD,EAAG6kD,OAAM9xD,EAAI,cAAgB,GAAGiN,EAAG6kD,UACvCjzD,OAAOkqB,OAAO5T,EAAKG,MAAOtV,EAC3B,CAEDi/C,IAASn1C,GACP,MAAMmD,EAAKjP,KAOX,GANAiP,GAAGkxC,GAAUr0C,EACTA,aAAawoD,QACflxC,SAASS,QAAQ/X,GACjBmD,GAAGkxC,GAAUr0C,EAAEsnC,eAAextC,QAAOkG,KAAQA,aAAa6Q,mBAAmBpN,SAG3EN,EAAG8O,UAGL,OAFAsX,SAAS++B,WAAWnlD,EAAG8O,UAAW9O,GAAGolD,GAAQplD,GAAGkxC,SAChDlxC,EAAGw1B,QAAS,GAId,IAAIviC,EAAI4J,EAAEslB,QAASpb,EAAIlK,EAAEulB,QACzB,MAAMvW,EAAO7L,GAAGolD,GAAOt5C,wBACjBw5C,EAAYryD,EAAI4Y,EAAKE,MAAQpU,OAAOi6C,WACpC2T,EAAYx+C,EAAI8E,EAAKG,OAASrU,OAAO+qD,YAM3C,OAJI4C,IAAWryD,EAAI0E,OAAOi6C,WAAa/lC,EAAKE,OACxCw5C,IAAWx+C,EAAIpP,OAAO+qD,YAAc72C,EAAKG,QAE7ChM,EAAGixC,MAAMh+C,EAAG8T,IACL,CACR,CAEDi+C,MACE,MAAMhlD,EAAKjP,KACLu7B,EAAUjhB,EAAM+B,SAAS9V,SAAS0Y,gBAAiBhQ,EAAGtB,QAC5DsB,EAAGisB,QAAQ94B,MAAM,KAAKyE,SAAQ2e,IAC5B+V,EAAQ10B,SAAQ8G,GAAUsB,EAAG6iC,YAAYnkC,EAAQ6X,EAAKvW,GAAGgyC,GAASr5C,KAAKqH,KAAK,GAE/E,CAEDilD,IAAQpoD,GACF9L,KAAKs4C,WAAWt4C,KAAK24C,OAC1B,CAEG0b,SACF,OAAOr0D,MAAKg0D,GAAUtyD,KACvB,QAGC1B,KAAKiJ,OAAO,WACb,ECtMI,MAAMwrD,0BAA0Bpf,UAErCx1C,kBAAoB,CAClBiD,IAAK,CAAEyyC,SAAS,EAAMn1C,KAAM4N,QAC5BjL,IAAK,CAAEwyC,SAAS,EAAMn1C,KAAM4N,QAC5Bk7C,KAAM,CAAE3T,SAAS,EAAMn1C,KAAM4N,QAC7BtM,MAAO,CAAE6zC,SAAS,EAAMn1C,KAAM4N,QAC9B+6C,MAAO,CAAExT,SAAS,IAGpBkJ,IAAW1yC,KAAKvL,GAEhBqC,cACEwlB,QACAroB,KAAK8C,IAAM,EACX9C,KAAKkpD,KAAO,EACZlpD,KAAK+C,IAAM,IACX/C,KAAK0B,MAAQ,EACb1B,KAAKorB,OAAS,CAAEpQ,MAAO,MACvBhb,KAAK8qB,aAAa9qB,MAAKy+C,GACxB,CAEDtH,cAOE,MALY,IACP9uB,MAAM8uB,cACT,gBAAiB,EACjB,CAJSn3C,MAILy+C,KAAY,EAGnB,CAEDxH,WACE,MAAMhoC,EAAKjP,KACXiP,GAAGylD,KACH,MAAM1yD,EAAM,CAACc,IAAKmM,EAAGnM,IAAKC,IAAIkM,EAAGlM,IAAKmmD,KAAKj6C,EAAGi6C,KAAMxnD,MAAMuN,EAAGvN,MAAOizD,WAAW1lD,EAAG0lD,YAClF,OAAOz5C,CAAI;sCACuBjM,GAAG2lD,YAAsBjsB,EAAU15B,EAAGuoC;sBACtDtP,EAASj5B,EAAGkoC;;;;eAInB/K,gBAAgBn9B,EAAG85C,MAAO/mD;;;KAItC,CAED80C,WAAWvR,GACTld,MAAMyuB,WAAWvR,GACjB,MAAMt2B,EAAKjP,KACX,GAAIulC,EAAQxV,IAAI,SAAU,CACxB,IAAInuB,EAAMqN,EAAGi6C,KAAO3jB,EAAQv8B,IAAI,SAChCpH,EAAMqN,GAAG8c,GAAQnqB,EAAKA,GACtB2jC,EAAQt4B,IAAI,QAASrL,EACtB,CACF,CAED43C,QAAQjU,GACFA,EAAQxV,IAAI,UACd/vB,KAAK8iC,QAER,CAED+xB,SAASjzD,GACP,MAAMqN,EAAKjP,KAGX,OAFA4B,EAAMZ,EAAOyC,SAAS7B,GAAOA,EAAMqN,EAAGi6C,KACtCj6C,EAAGvN,MAAQuN,GAAG8c,GAAQ9c,EAAGvN,MAAQE,EAAKqN,EAAGvN,QAClC,CACR,CAEDozD,SAASlzD,GACP,MAAMqN,EAAKjP,KAGX,OAFA4B,EAAMZ,EAAOyC,SAAS7B,GAAOA,EAAMqN,EAAGi6C,KACtCj6C,EAAGvN,MAAQuN,GAAG8c,GAAQ9c,EAAGvN,MAAQE,EAAKqN,EAAGvN,QAClC,CACR,CAEGizD,iBAEF,OAAO3xD,KAAK+xD,MADD/0D,KACW0B,MADX1B,KACsB+C,IAAO,IACzC,CAED2xD,MACE,MAAMzlD,EAAKjP,KACXiP,EAAGmc,OAAOpQ,MAAQ,GAAG/L,EAAG0lD,cACxB1lD,EAAG6b,aAAa7b,GAAGwvC,GAAUxvC,EAAGmc,OACjC,CAEDW,IAAQnqB,EAAKozD,EAAM,GAEjB,MAAM/lD,EAAKjP,KAGX,OAJA4B,EAAMZ,EAAO+L,MAAMnL,EAAKZ,EAAO+L,MAAMioD,KAE3B/lD,EAAGlM,MAAKnB,EAAMqN,EAAGlM,KACvBnB,EAAMqN,EAAGnM,MAAKlB,EAAMqN,EAAGnM,KACpBlB,CACR,CAEDgzD,IAAa9oD,GACX,MAAMmD,EAAKjP,KACX,OAAQ8L,EAAEgY,MACR,IAAK,UACL,IAAK,aACD,OAAO7U,EAAG4lD,WACd,IAAK,YACL,IAAK,YACF,OAAO5lD,EAAG6lD,WAEhB,QAGC90D,KAAKiJ,OAAO,cACb,ECjHI,MAAMgsD,yBAAyB5f,UAElCx1C,cAAgB6a,CAAG,kHAEnB7a,kBAAoB,CAChB6tC,MAAO,IAAKA,EAAO6H,SAAS,GAC5B/G,MAAO,CAAEpuC,KAAMqB,QAAS8zC,SAAS,GACjC2f,OAAQ,CAAE90D,KAAMqB,UAGpBoB,cACIwlB,OACH,CAED4uB,WAEI,OAAO/7B,CAAI,eAAegtB,EADfloC,KAC2Bm3C,sCACzC,CAEDA,cACI,MAAMloC,EAAKjP,KASX,MARY,IACLqoB,MAAM8uB,cACT,kBAAmBloC,EAAGimD,OACtB,eAAgBjmD,EAAGimD,OACnB,CAAC,QAAQjmD,EAAGy+B,SAAUz+B,EAAGy+B,MACzB,qBAAwBz+B,EAAGimD,QAAUjmD,EAAGu/B,MACxC,kBAAqBv/B,EAAGimD,QAAUjmD,EAAGu/B,MAG5C,QAGGxuC,KAAKiJ,OAAO,aACf,EClBE,MAAMksD,0BAA0B9f,UAEnCx1C,kBAAoB,CAEhBuC,MAAO,CAAEmzC,SAAS,GAElBma,OAAQ,IAAK3xC,EAAWwvB,WAAYT,UACpC73B,KAAM,CAAE7U,KAAM4N,OAAQu/B,WAAYN,SAGtColB,IAAU,EACV5T,IAAW1yC,KAAKvL,GAChB40D,IAAYrpD,KAAKvL,GACjB8gD,IAASlZ,IACTqZ,IAEA5+C,cACIwlB,QACA,MAAMpZ,EAAKjP,KACXiP,EAAGgG,KAAO,EACVhG,EAAGygD,OAAS,QACZzgD,EAAG6b,aAAa7b,GAAGwvC,IACnBxvC,GAAGwkB,KACHxkB,GAAGwyC,GAAmB,IAAIrQ,sBAAsBniC,EACnD,CAEDynC,uBACIruB,MAAMquB,sBAET,CAEDG,aAAatR,GACTld,MAAMwuB,aAAatR,GACRvlC,MACRyhD,GAAiBv5B,OADTloB,MACmB2hD,GAGjC,CAED1K,WACI,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI,QAAQwuB,EAAIz6B,GAAGqyC;yBACTryC,GAAG2yC;6BACC3yC,GAAGwvC;qBACXvW,EAASj5B,EAAGkoC;;eAG5B,CAEDA,cAOI,MALY,IACL9uB,MAAM8uB,cACTwK,UAAY,EACZ,CAJO3hD,MAIHy+C,KAAW,EAGtB,CAEDjF,QAAQR,GACOh5C,MACRq1D,IACN,CAMDrjB,YAAYlmC,GACR,MAAMmD,EAAKjP,KACXiP,GAAGojD,GAAUpjD,EAAGyvC,WAAa5yC,EAAEslB,QAAUtlB,EAAEulB,QAC3CpiB,GAAGqmD,IAAM,GACTlyC,SAAS8C,KAAKjlB,WAAY,WAAY,CAAE8vB,OAAO,GAClD,CAMD8gB,YAAY/lC,GACR,MACM6qB,EADK32B,KACI0+C,WAAa5yC,EAAEslB,QAAUtlB,EAAEulB,QAD/BrxB,MAERu1D,GAAa5+B,EACnB,CAMDsb,UAAUnmC,GACK9L,MACRyjD,KADQzjD,MAERs1D,IAAM,GACTlyC,SAAS8C,KAAKjlB,WAAY,WAAY,CAAEu0D,MAAM,GACjD,CAMG9W,iBACA,MAAsB,aAAf1+C,KAAKoC,KACf,CAEGi9C,mBACA,OAAQr/C,KAAK0+C,UAChB,CAMG3tB,YACA,OAAO/wB,KAAKmwC,sBACf,CAMGlf,UACA,OAAOjxB,KAAK6d,kBACf,CAMGlQ,aACA,MAAMsB,EAAKjP,KACX,IAAIF,EAAKmP,GAAGwmD,GAAgBxmD,EAAG8hB,MAAQ9hB,EAAGgiB,IAQ1C,OAPAnxB,EAAKA,GAAMmP,EAAGyP,cACd5e,EAAKwa,EAAM4C,YAAYpd,GAAMA,EAAGuJ,KAAOvJ,EACnCA,aAAc+e,aAEd/e,EAAKkF,MAAMgG,KAAKlL,EAAGoO,UAAUtI,QAAOe,IAAM2T,EAAMo7C,aAAa/uD,EAAG,UAAW,UAAS0O,OAExFvV,EAAGsd,WAAWC,IAAIpO,GAAGmmD,IACdt1D,CACV,CAEG21D,SACA,MACM/F,EADK1vD,KACO0vD,OAClB,MAAkB,UAAXA,GAAiC,QAAXA,CAChC,CAEG/N,SACA,OAAO3hD,MAAKshD,GAAO5/C,KACtB,CAEGi0D,SACA,OAAO31D,KAAK2N,OAAO2J,KACtB,CAKGs+C,SACA,MACMz2C,EAAM,sBAGZ,MAAO,IAFG7E,EAAM+B,SAFLrc,KAEiBmwC,uBAAwBhxB,MAC1C7E,EAAM+B,SAHLrc,KAGiB6d,mBAAoBsB,GAEnD,CAEDsU,MACI,MAAMxkB,EAAKjP,KACX,IAAKiP,EAAGzO,GAAI,OACZ,MAAMsX,EAAM/L,KAAKwb,SAAS/F,SAASwQ,OAASxQ,SAASmR,UACrD,IAAI/wB,EAAMywB,aAAaE,QAAQ,eAAeza,KAAO7I,EAAGzO,MACxDoB,EAAMZ,EAAO+L,MAAMnL,GACnBqN,GAAG8c,GAAQnqB,EACd,CAED6hD,MACI,MAAMx0C,EAAKjP,KACX,IAAKiP,EAAGzO,GAAI,OACZ,MAAMka,EAAM9L,EAASc,qBAAqBT,EAAGtB,QACvC/L,EAAMqN,EAAGyvC,WAAahkC,EAAI1R,IAAI,SAAW0R,EAAI1R,IAAI,UACvD,IAAKpH,EAAK,OACV,MAAMkW,EAAM/L,KAAKwb,SAAS/F,SAASwQ,OAASxQ,SAASmR,UACrDN,aAAaC,QAAQ,eAAexa,KAAO7I,EAAGzO,KAAMoB,EACvD,CAEDggD,IAAe91C,GAEX,MAAMmD,EAAKjP,KACX,IAAI61D,EAAQ,EACR/9C,EAAM,GAEN7I,EAAGyvC,YACH5mC,EAAM,QACN+9C,EAAQ5mD,EAAGtB,OAAO0oB,cAElBve,EAAM,SACN+9C,EAAQ5mD,EAAGtB,OAAO4oB,cAGtB,IAAIzzB,EAAM8L,EAAS0R,WAAWrR,EAAGtB,OAAQ,OAAOmK,KAC5C/U,EAAM6L,EAAS0R,WAAWrR,EAAGtB,OAAQ,OAAOmK,KAEhDhV,EAAM9B,EAAO+L,MAAMjK,EAAIpB,OACvBqB,EAAM/B,EAAO+L,MAAMhK,EAAIrB,OAGnBm0D,GADC9yD,EAAMD,GAAO,EAAI+yD,EACV9yD,EAEAD,EAEZmM,GAAG8c,GAAQ8pC,EAEd,CAMDP,IAAMA,GAAO,GACT,MAAMrmD,EAAKjP,KACL81D,EAAM,UACRR,EACArmD,GAAG2mD,GACEhwD,QAAO9F,IAAOwa,EAAMiC,SAASzc,EAAI,aACjC+G,SAAQ/G,IACLwa,EAAMwF,YAAYhgB,EAAIg2D,GAAK,GAC3Bh2D,EAAG+N,QAAQkoD,YAAa,CAAI,IAGpC9mD,GAAG2mD,GACEhwD,QAAO9F,GAAMA,EAAG+N,QAAQkoD,aACxBlvD,SAAQ/G,IACLwa,EAAMwF,YAAYhgB,EAAIg2D,GAAK,UACpBh2D,EAAG+N,QAAQkoD,UAAU,GAG3C,CAEDR,IAAa5+B,GACT,MAAM1nB,EAAKjP,KACX6f,uBAAsB,KACd5Q,EAAGyvC,WACHzvC,GAAG+mD,GAASr/B,GAEZ1nB,GAAGgnD,GAASt/B,EACf,GAER,CAMDq/B,IAASr/B,GACL,MAAM1nB,EAAKjP,KACL2N,EAASsB,EAAGtB,OACZ2hD,EAAMrgD,GAAGwmD,GAAgB,GAAK,EACpC,IAAIS,GAAMv/B,EAAM1nB,GAAGojD,IAAW/C,EAC9B4G,GAAUvoD,EAAO0oB,YACjB6/B,EAAKA,EAAK,EAAI,EAAIA,EAClBjnD,GAAG0mD,GAAc36C,MAAQk7C,EAAK,KAE9BjnD,GAAGojD,GAAU17B,CAChB,CAMDs/B,IAASt/B,GACL,MAAM1nB,EAAKjP,KACL2N,EAASsB,EAAGtB,OACZ2hD,EAAMrgD,GAAGwmD,GAAgB,GAAK,EACpC,IAAIS,GAAMv/B,EAAM1nB,GAAGojD,IAAW/C,EAC9B4G,GAAUvoD,EAAO4oB,aACjB2/B,EAAKA,EAAK,EAAI,EAAIA,EAClBjnD,GAAG0mD,GAAc16C,OAASi7C,EAAK,KAE/BjnD,GAAGojD,GAAU17B,CAChB,CAED5K,IAAQnqB,EAAM,GACV,GAAIA,GAAO,EAAG,OACd,MAAMqN,EAAKjP,KACXiP,GAAGojD,GAAUzwD,EACb,MAAMkW,EAAM7I,EAAGyvC,WAAa,QAAU,SACtCzvC,GAAG0mD,GAAc79C,GAAOlW,EAAM,IAEjC,CAEDyzD,MACI,MAAMpmD,EAAKjP,KACLiV,EAAOhG,EAAGyvC,WAAa,QAAU,SACjC95B,EAAO3V,EAAGyvC,WAAa,SAAW,QAClC2T,EAASpjD,EAAGyvC,WAAa,WAAa,WACtClxC,EAAM,CACRyH,CAACA,GAAO,GAAGhG,EAAGgG,SACd2P,CAACA,GAAO,OACR,eAAgB,MAChBytC,OAAQA,EACR,eAAgB,WAChB,eAAgB,QAChB,mBAAoB,aAExBpjD,EAAG6b,aAAa7b,GAAGwvC,GAAUjxC,EAChC,QAGGxN,KAAKiJ,OAAO,cACf,ECnUE,MAAMktD,yBAAyBrF,iBAEpCjxD,kBAAoB,CAClBmI,KAAM,CAAE,GAGVnF,cACEwlB,QACAroB,KAAK0a,IAAM1a,MAAKo2D,GAAap2D,KAAK0a,GACnC,CAEG07C,SAEF,OADWp2D,KACD+4C,eAAiB/3C,EAAOoE,UADvBpF,KACoC0e,eAAe23C,QAAU,EACzE,CAEDtd,aAAaxT,GACX,MAA+B,iBAAxBvlC,KAAK6K,OAAOsR,OACpB,QAGCnc,KAAKiJ,OAAO,SACb,ECrBI,MAAMqtD,0BAA0BjhB,UAErCx1C,kBAAoB,CAClBmI,KAAM,CAAE,EACRgxB,SAAU,CAAE,EACZxe,OAAQ,CAAEpa,KAAMqB,QAAS8zC,SAAU,IAGrC1yC,cACEwlB,QACAroB,KAAKwa,QAAS,CACf,CAEDu+B,aAAaC,GACX,MAA+B,iBAAxBh5C,KAAK6K,OAAOsR,OACpB,CAED86B,WAEE,OAAO/7B,CAAI,cAAcytB,EADd3oC,KAC2Bw3C;eAC3BtP,EAASloC,KAAKm3C;;QAErBn3C,KAAKg5B,SAAW9d,CAAI,0BAA0Blb,KAAKg5B,2BAA6B;oBAErF,CAEDme,cAOE,MALY,IACP9uB,MAAM8uB,cACT,YAAY,EACZ,UAJSn3C,KAIMwa,OAGlB,CAEG3P,YACF,OAAO7K,KAAKqe,QAAQ,iBAAmB/D,EAAM2+B,UAAUj5C,KACxD,QAGCA,KAAKiJ,OAAO,eACb,ECxCI,MAAMstD,0BAA0BlF,aAErCxxD,kBAAoB,CAClB2vD,SAAU,CAAE1hD,UAAW,aACvBuoD,OAAQ,CAAEvoD,UAAW,YAGvBjL,cACEwlB,QACA,MAAMpZ,EAAKjP,KAEXiP,EAAGoN,SAAS,UAAUxV,SAAQ/G,GAAMmP,GAAGunD,GAAW12D,IACnD,CAEDgtD,WACE,OAAO9sD,KAAKw6B,SAAS27B,iBACtB,CAEDtf,aAAatR,GACXld,MAAMwuB,aAAatR,GACnB,MACMkxB,EADKz2D,KACM0J,MAAM,2CADZ1J,KAERgzC,WAAWyjB,EACf,CAED1d,aAAaxT,GACX,OAAOvlC,KAAK+H,KAAK7D,OAAS,GAAKlE,KAAK0J,MAAM,SAC3C,CAEDytC,cAME,MAJY,IACP9uB,MAAM8uB,cACT,SAHSn3C,KAGI4rD,SAGhB,CAEDoB,kBACE,MAAM/9C,EAAKjP,KACLqC,EAAU6rC,eAAewoB,QAAQznD,EAAG8O,WACpChH,EAAO,CAACsR,MAAM2kC,gBAAgB,QACpC9xC,CAAI,qCAAqCjM,EAAGugD,mBAAmB7mB,EAAU15B,EAAGuoC;;;qCAI5E,OAAOn1C,EAAU0U,EAAK1U,UAAY0U,CACnC,CAEDk2C,qBACE,MACMvyC,EAAM2N,MAAM4kC,qBAClB,OAFWjtD,KAEDq3C,OAFCr3C,KAESq2D,OAAQ37C,EAC7B,CAMDg+B,cACE,OAAO14C,KAAK+H,KAAKrF,KAAIiE,IACdA,EAAEqB,OAAMrB,EAAEqB,KAAO+D,KAAKvL,IACpB0a,CAAI;mBACEvU,EAAE6T;sBACC7T,EAAEszC,WAAatzC,EAAE6T;qBAClBmuB,EAAUhiC,EAAEib;gBACjB+mB,EAAUhiC,EAAEyzC;iBACXzR,EAAUhiC,EAAE2a;gBACb3a,EAAEqB,oBAEf,CAMD2uD,eACE,OAAO32D,KAAK+H,KAAKrF,KAAIiE,IACdA,EAAEqB,OAAMrB,EAAEqB,KAAO+D,KAAKvL,IACpB0a,CAAI,uBAAuBvU,EAAEqB;oBACtB2gC,EAAUhiC,EAAEqyB,+BAE7B,CAMDma,YAAYrzC,GACV,MAAuB,WAAhBA,GAAIqc,OACZ,CAMD62B,WAAWlzC,GACTA,GAAIyI,QACJ,MAAM8rD,EAAQr0D,MAAKw2D,GAAW12D,GAC1Bu0D,IAAOA,EAAM75C,QAAS,EAC3B,CAMDy4B,aAAanzC,GACX,MAAMu0D,EAAQr0D,MAAKw2D,GAAW12D,GAC1Bu0D,IAAOA,EAAM75C,QAAS,EAC3B,CAODg8C,IAAW12D,GACT,IAAKA,EAAI,OAAO,KAChB,MACMgY,EAAMnN,OAAO6c,IAAI,cAEvB,IAAI6sC,EAAQv0D,EAAGgY,IAHJ9X,KAGe0J,MAAM,sBAAsB5J,EAAGkI,UADvC,GAGlB,OADKlI,EAAGgY,KAAMhY,EAAGgY,GAAOu8C,GACjBA,CACR,QAGCr0D,KAAKiJ,OAAO,eACb,EC5HI,MAAM2tD,uBAAuBvhB,UAElCx1C,UAAgB,CAAC,UAAW,gBAAiB,iBAE7CA,cAAgB6a,CAAG,wCAEnB7a,aAAe,CACbg+C,MAAO,CAAE,EACT7iC,MAAO,CAAE,EACTA,MAAO,CAAE,EACTN,IAAK,CAAE,EACP4G,MAAO,CAAE,EACT1b,OAAQ,CAAExF,KAAMqB,SAChBo1D,WAAY,CAAE/oD,UAAW,eACzBgpD,UAAW,CAAEhpD,UAAW,cACxB0qC,UAAW,CAAE1qC,UAAW,iBACrBqI,OAAO8sC,YAGZpjD,kBAAoB,CAClB8wC,QAAS,CAAE,EACXjD,MAAO,IAAKA,GACZqpB,UAAW,IAAKrpB,EAAO5/B,UAAW,cAClCkpD,YAAa,IAAKtpB,EAAO5/B,UAAW,gBACpCmpD,UAAW,IAAKvpB,EAAO5/B,UAAW,cAClCopD,cAAe,CAAE92D,KAAMqB,QAASqM,UAAW,kBAC3CgpD,UAAW,CAAEhpD,UAAW,cACxB0qC,UAAW,CAAE1qC,UAAW,cACxBqpD,QAAS,CAAE/2D,KAAMqB,SACjB21D,QAAS,CAAEh3D,KAAMqB,SACjBs5C,MAAO,CAAE36C,KAAMqB,SACf+sC,MAAO,CAAEpuC,KAAMqB,SACf41D,KAAM,CAAEj3D,KAAMqB,SACd61D,WAAY,CAAEl3D,KAAMqB,SAEpBkX,KAAM,CAAEvY,KAAM4E,MAAO2E,OAAO,GAC5B4tD,QAAS,CAAEn3D,KAAM4E,MAAO2E,OAAO,GAC/B6tD,WAAY,CAAEp3D,KAAM4E,MAAO2E,OAAO,GAClCmO,IAAK,CAAE1X,KAAM4N,OAAQrE,OAAO,GAE5B5B,KAAM,CAAE3H,KAAM4E,OACdyyD,WAAY,CAAEr3D,KAAMqB,SACpBi2D,UAAW,CAAEt3D,KAAMqB,SACnB8wC,YAAa,CAAEnyC,KAAMqB,SACrBk2D,UAAW,CAAEv3D,KAAMqB,SACnBsrD,WAAY,CAAE3sD,KAAMqB,SACpBm2D,SAAU,CAAEx3D,KAAMqB,UAGpBohD,IAAU,GACVgV,IAAa,GAEbh1D,cACEwlB,QACAroB,KAAK83D,UAAY,YACjB93D,KAAKg3D,YAAc,OACnBh3D,KAAKu3D,QAAU,GACfv3D,KAAKw3D,WAAa,GAClBx3D,KAAK+H,KAAO,GACZ/H,KAAK2Y,KAAO,GACZ3Y,KAAK8X,IAAM,CACZ,CAEG6sB,eACF,MAAM11B,EAAKjP,KACX,OAAOiP,EAAGlH,KAAKnC,QAAO,CAACrE,EAAGoB,IAAMsM,EAAGuoD,WAAWttD,SAASvH,IACxD,CAEG2hC,WAAO1iC,GACT,MAAMqN,EAAKjP,KACX,GAAIiP,EAAG0hC,QACL,OAAO1hC,EAAGgnC,eAAe3R,OAAS1iC,CAErC,CAED20C,oBACE,MAAMtnC,EAAKjP,KACXiP,GAAG4zC,GAAUpxB,OAAOtjB,QAAQc,EAAI2nD,eAAemB,OACrB,IAAtB9oD,EAAGsoD,QAAQrzD,SAAc+K,EAAGsoD,QAAUtoD,GAAG4zC,GAAQngD,KAAInB,GAAKA,EAAEyG,QAChEqgB,MAAMkuB,mBACP,CAEDG,uBACEruB,MAAMquB,uBACN12C,KAAK+H,KAAO,GACZ/H,KAAKw3D,WAAa,EACnB,CAEDrgB,cACE,MAAMloC,EAAKjP,KAaX,MAZY,IACPqoB,MAAM8uB,cACT,mBAAoBloC,EAAG0oD,UACvBK,OAAS,EACT,WAAY/oD,EAAGu/B,MACf,cAAev/B,EAAG8rC,MAClB,gBAAiB9rC,EAAGmoD,QACpB,iBAAkBnoD,EAAGooD,KACrB,mBAAoBpoD,EAAGqoD,WACvB,wBAAyBroD,EAAGgpD,eAC5B,CAAC,SAAShpD,EAAGy+B,SAAUz+B,EAAGy+B,MAG7B,CAEDmJ,eACE72C,KAAKi2C,gBAAgB1R,MACtB,CAEDuS,WAAWvR,GACT,MAAMt2B,EAAKjP,KACPiP,EAAGsoD,QAAQrzD,QAAU+K,EAAG0J,KAAKzU,SAAQ+K,EAAG0J,KAAO3T,MAAMiK,EAAGsoD,QAAQrzD,QAAQiuD,KAAK,IAC7EljD,EAAGwoD,YAAcxoD,EAAGlH,KAAK7D,OAAS,IACpC+K,EAAGsoD,QAAUtoD,EAAGlH,KAAK,GACrBkH,EAAGlH,KAAOkH,EAAGlH,KAAKtF,MAAM,IAEtB8iC,EAAQxV,IAAI,iBAAmB9gB,EAAGsjC,cAAatjC,EAAGuoD,WAAa,IAC/DjyB,EAAQxV,IAAI,gBAAkB9gB,EAAG89C,aAAY99C,EAAGuoD,WAAa,KAC7DjyB,EAAQxV,IAAI,aAAewV,EAAQxV,IAAI,gBACzC9gB,EAAG0J,KAAO3T,MAAMiK,EAAGsoD,QAAQrzD,QAAQiuD,KAAK,GACxCljD,GAAG4oD,GAAa,IAGlBxvC,MAAMyuB,WAAWvR,EAClB,CAED0R,WACE,MAAMhoC,EAAKjP,KACL83D,EAAY7oD,EAAG8nD,UAAY,SAAS9nD,EAAG8nD,YAAc,GAC3D,OAAO77C,CAAI;;cAEDytB,EAAU15B,EAAGuoC;iBACVvoC,GAAGyjC;mBACDzjC,GAAGyU;gBACNwkB,EAASj5B,EAAGkoC;wBACJxO,EAAUmvB;YACtB7oD,GAAGipD;uBACQjpD,GAAGkpD;cACZlpD,EAAGsoD,QAAQ70D,KAAI,CAAC01D,EAAO3hD,IAAUxH,GAAGopD,GAAcD,EAAO3hD;;;wBAG/CxH,GAAGqpD,aAAoBrpD,EAAGkoD,QAAU,sBAAwB;YACxEloD,EAAGlH,KAAKrF,KAAI,CAAC01D,EAAO3hD,IAAUxH,GAAGspD,GAAcH,EAAO3hD;YACtDxH,GAAGupD;;;;KAKZ,CAEDvnB,WAAWlpC,GACT,MAAMkH,EAAKjP,KACXiP,EAAGlH,KAAOA,EACVkH,EAAGuoD,WAAa,GAGZzvD,EAAK7D,OAAS,GAAK+K,GAAGia,GACxBja,GAAG4zC,GAAQh8C,SAAQ,CAACuxD,EAAO3hD,KACzB2hD,EAAMK,WAAaxpD,GAAGypD,GAAWjiD,EAAM,GAG5C,CAEDyQ,QACElnB,MAAK24D,GAAO9xD,SAAQ/G,GAAMA,EAAG4B,MAAQ,KACrC1B,KAAKi2C,gBAAgBrwC,OAAO,GAC7B,CAEDgzD,QAAQC,EAAKC,GACX,OAAO94D,KAAK+H,KAAK7D,OAAS20D,EAAM74D,KAAK+H,KAAK8wD,GAAKC,QAAQr0D,CACxD,CAEGk0D,SACF,OAAO34D,KAAKqc,SAAS,cAAc,EACpC,CAEG6M,QACF,OAAOlpB,MAAK6iD,GAAQj9C,QAAOe,GAAKA,EAAEf,SAAQ1B,OAAS,CACpD,CAEDw0D,IAAWjiD,GACT,MAAMxH,EAAKjP,KACLiX,EAAMhI,GAAG4zC,GAAQpsC,GACjBqiD,EAAO7pD,EAAG2pD,QAAQ,EAAG3pD,EAAGsoD,QAAQ9gD,IACtCQ,EAAI7W,KAAO6W,EAAI7W,MAAQ,OACvB,MAAM24D,EAAU,CAAEj0D,OAAU,OAAQsR,SAAY,SAAU4iD,UAAa,kBAAmB/hD,EAAI7W,MACxF64D,EAAWH,aAAgBt3D,KAAO,cAAgBs3D,EACxD,OAAOA,EAAOG,EAAWF,GAAW9hD,EAAI7W,IACzC,CAED83D,MACE,MAAMjpD,EAAKjP,KACX,OAAOiP,GAAGia,EAAchO,CAAI,OAAOjM,EAAGsoD,QAAQ70D,KAAI,CAAC01D,EAAO3hD,IAAUxH,GAAGiqD,GAAcd,EAAO3hD,YAAiB,EAC9G,CAEDyiD,IAAcJ,EAAMriD,GAClB,MAAMxH,EAAKjP,KACLiX,EAAMhI,GAAG4zC,GAAQpsC,GACvB,IAAKQ,GAAKrR,OAAQ,OAAOsV,CAAI,YAC7B,IAAI+tC,EAAO,GACX,MAAMzvC,EAA4B,SAAnBvC,EAAIwhD,WACfj/C,IAAQyvC,EAAOhyC,EAAIrS,QAAU5D,EAAO2U,cAAcsB,EAAI9T,QAAUnC,EAAOmC,SAC3E,MAAMuX,EAAM,GAAG1Z,EAAOoE,UAAU6J,EAAG6nD,cAAc91D,EAAOoE,UAAU0zD,EAAKhC,aAEvE,OAAO57C,CAAI,cAAczE,cAAkBxH,GAAGkqD;0CACR1iD;kCACRiE;oBACdiuB,EAAUsgB;oBACV6P;oBACA7hD,EAAI4/C,YAAc5/C,EAAIwhD;0BAChB9vB,EAAUnvB,EAAS,WAAQ/U;cAElD,CAED4zD,IAAcS,EAAMriD,GAClB,MAAMxH,EAAKjP,KACLiX,EAAMhI,GAAG4zC,GAAQpsC,GACjBiE,EAAM,GAAG1Z,EAAOoE,UAAU6J,EAAGupC,cAAcx3C,EAAOoE,UAAU0zD,EAAKtgB,aACvE,OAAOt9B,CAAI;mBACIzE,YAAgBiE,aAAeiuB,EAAU15B,GAAG4zC,GAAQpsC,IAAQuE;;kBAE7D/D,GAAKqK,OAASw3C;YACpB7pD,GAAGisC,GAAYzkC;;;KAIxB,CAEDykC,IAAYzkC,GACV,MAAMxH,EAAKjP,KACX,IAAKiP,EAAG2oD,SAAU,MAAO,GACzB,MAAMwB,EAAQxC,gBAAewC,GACvBC,EAAWpqD,EAAG0J,KAAKlC,GACnB0C,EAAQlK,EAAGyoD,UAAYzoD,GAAG4oD,GAAW/gD,QAAQL,GAAS,EAAI,GAChE,OAAOyE,CAAI,kBAAkBk+C,EAAMC,EAAW,cAAclgD,EAAQ,EAAIA,EAAQ,cAAcwvB,EAAU15B,EAAGgoD,wBAC5G,CAEDsB,IAAcH,EAAO3hD,GACnB,MAAMxH,EAAKjP,KACNgF,MAAMC,QAAQmzD,KAAQA,EAAQnpD,EAAGsoD,QAAQ70D,KAAInB,GAAK62D,EAAM72D,MAC7D62D,EAAQA,EAAM11D,KAAI,CAACd,EAAKe,IAAMsM,GAAG4zC,GAAQlgD,GAAKwT,OAAOvR,OAAOqK,GAAG4zC,GAAQlgD,GAAIf,GAAOA,IAClF,MAAM8rC,EAAQz+B,EAAG+nD,aAAe/nD,EAAGuoD,WAAWttD,SAASuM,GAAS,SAASxH,EAAG+nD,cAAgB,GAC5F,OAAO97C,CAAI;qBACMzE,YAAgBi3B;YACzB0qB,EAAM11D,KAAI,CAACo2D,EAAMn2D,IAAMuY,CAAI,mBAAmBjM,GAAG4zC,GAAQlgD,IAAIk7C,gBAAgBib;;OAGtF,CAEDN,MACE,MAAMvpD,EAAKjP,KACX,OAAIiP,EAAGlH,KAAK7D,OAAS,EAAW,GACzBgX,CAAI,uCAAuCjM,EAAGsoD,QAAQrzD,kDAAkD+K,EAAGwlB,UAAU,sBAE7H,CAED0kC,IAAUrtD,GACR,MAAMmD,EAAKjP,KACL4F,EAASqJ,GAAG0pD,GACfj2D,KAAI5C,IACH,IAAKA,EAAG4B,MAAO,OACf,MACME,EADqB,SAAZ9B,EAAGM,KACGN,EAAGk9C,YAAcl9C,EAAG4B,MACnCuV,EAAMhI,GAAG4zC,GAAQ/iD,EAAG2W,OAC1B,MAAO,CAAEzO,KAAMlI,EAAGkI,KAAMtG,MAAOE,EAAKuB,OAAS8T,GAAK9T,OAAQ,IAE3DyC,QAAO9F,GAAMA,GAAI4B,QACpBuN,EAAGgnC,eAAerwC,OAAOA,EAC1B,CAEDuyD,IAAQrsD,GACN,MAAMmD,EAAKjP,KACX,IAAKiP,EAAG2oD,SAAU,OAClB,MAAMxd,EAA4B,YAArBtuC,EAAE6B,OAAOwO,QAAwBrQ,EAAE6B,OAAS7B,EAAE6B,OAAO0Q,QAAQ,WACpEi7C,EAASxtD,EAAE6B,OAAO0Q,QAAQ,MAChC,IAAK+7B,IAASkf,EAAQ,OACtB,MAAMxgD,OAAuBrU,IAAjB60D,EAAO7iD,MAAsB6iD,EAAO7iD,MAAQ6D,EAAMi/C,gBAAgBD,GACxEjc,EAAUpuC,EAAG0J,KAAKG,GAClBugD,EAAuB,IAAZhc,GAAiB,EAAIA,EAAU,EAE5CpuC,EAAGyoD,UACW,GAAZ2B,EACFpqD,GAAG4oD,GAAa5oD,GAAG4oD,GAAWjyD,QAAOrE,GAAKA,GAAKuX,IACrC7J,GAAG4oD,GAAW3tD,SAAS4O,IACjC7J,GAAG4oD,GAAWxmD,KAAKyH,IAGrB7J,EAAG0J,KAAO3T,MAAMiK,EAAGsoD,QAAQrzD,QAAQiuD,KAAK,GACxCljD,GAAG4oD,GAAa,CAAC/+C,IAGnB7J,EAAG0J,KAAKG,GAAOugD,EAEf,MAAM1gD,EAAO1J,GAAGuqD,GAAevqD,EAAG0J,KAAM1J,GAAG4oD,IAE3C,GAAI5oD,EAAG0hC,QACL,OAAO1hC,EAAGgnC,eAAet9B,KAAKA,GAGhC1J,EAAGlH,KAAOoO,OAAOiuB,SAASn1B,EAAGlH,KAAM4Q,GACnC1J,EAAGwgB,KAAK,OACT,CAED+pC,IAAe7gD,EAAMk/C,GACnB,MAAM5oD,EAAKjP,KAEwB,IAA/B2Y,EAAK/S,QAAOrE,GAAKA,IAAG2C,UACtByU,EAAO3T,MAAMiK,EAAGsoD,QAAQrzD,QAAQiuD,KAAK,IAChCljD,EAAG6I,KAAO,GAIjB,MAAM2hD,EAAYxqD,EAAGlH,KAAK,KAAO/C,MAAMC,QAAQgK,EAAGlH,KAAK,IAGjDgP,EAAO4B,EAAKjW,KAAI,CAACnB,EAAGoB,IAAMpB,EAAI,CAAEyG,KAAMyxD,EAAYxqD,EAAGsoD,QAAQ50D,QAAK8B,EAAWsU,IAAKpW,EAAGkW,IAAKtX,EAAGuX,IAAK++C,EAAU/gD,QAAQnU,IAAO,OAAMiD,QAAOrE,GAAKA,IAKnJ,OAFAoX,EAAOxC,OAAOiuB,SAASrtB,EAAM,CAAC,CAAE/O,KAAM,MAAO6Q,IAAK,IAGnD,CAEDy/C,IAAUxsD,GACR,MAAMmD,EAAKjP,KACX,IAAKiP,EAAG89C,WAAY,OACpB,MAAM2M,EAA0B,OAArB5tD,EAAE6B,OAAOwO,QAAmBrQ,EAAE6B,OAAS7B,EAAE6B,OAAO0Q,QAAQ,MACnE,IAAKq7C,EAAI,OACT,MAAMC,EAAa1qD,EAAGuoD,WAAWttD,SAASwvD,EAAGjjD,OACzCxH,EAAGsjC,YACDonB,EACF1qD,EAAGuoD,WAAavoD,EAAGuoD,WAAW5xD,QAAOrE,GAAKA,GAAKm4D,EAAGjjD,SAElDxH,EAAGuoD,WAAWnmD,KAAKqoD,EAAGjjD,OACtBxH,EAAG0kC,iBAGL1kC,EAAGuoD,WAAamC,EAAa,GAAK,CAACD,EAAGjjD,OAExCxH,EAAGwgB,KAAK,SACT,CAED/L,GAAW5X,GAET,IAAKA,EAAE6B,OAAO6B,QAAQ,YAAa,OACnC,IAAI1P,EAAK,KAET,OAAQgM,EAAEgY,MACR,IAAK,UACHhkB,EAAKgM,EAAE6B,OAAOwiC,uBACd,MACF,IAAK,YACHrwC,EAAKgM,EAAE6B,OAAOkQ,mBAId/d,IACFA,EAAGklC,QACHhlC,KAAKyvB,KAAK,QAAS3vB,GAEtB,CAED4yC,IAAS5mC,GACQ,UAAXA,EAAEgY,MAAkB9jB,MAAKs4D,GAAUxsD,EACxC,QAGC9L,KAAKiJ,OAAO,WACb,EC3WY,MAAM2wD,qBAAqBvkB,UAEtCx1C,UAAe,CAAC,QAAS,cAAe,QAAS,SAEjDA,cAAgB6a,CAAG;;;;;;;;;WAWnB7a,kBAAoB,CAChBmpD,YAAa,CAAE,EACfjmD,IAAK,CAAE3C,KAAM4N,QACbiH,KAAM,CAAE7U,KAAM4N,QACdhG,KAAM,CAAE,EACRD,KAAM,CAAE3H,KAAM4E,OACdmB,OAAQ,CAAE/F,KAAM4E,MAAOuwC,SAAS,EAAMskB,UAAWlrB,IACjDmrB,WAAY,CAAE15D,KAAMqB,SACpBisC,MAAO,IAAKA,GACZqsB,WAAY,IAAKrsB,EAAO5/B,UAAW,eACnCksD,SAAU,CAAElsD,UAAW,aACvBmsD,OAAQ,CAAEnsD,UAAW,YAIzBjO,eAAiB,CACbmI,KAAM,CAAE,GAGZkyD,IAAe9xB,IACf6hB,IAAY7hB,IAEZvlC,cACIwlB,QACAroB,KAAKgI,KAAO,GACZhI,KAAK+H,KAAO/H,MAAKihB,GACjBjhB,KAAK+5D,WAAa,QAClB/5D,KAAK0tC,MAAQ,SAChB,CAEDuJ,WACI,MAAMhoC,EAAKjP,KACL2xB,EAAO1iB,GAAGkrD,KAChB,OAAOj/C,CAAI;qBACEytB,EAAU15B,EAAGuoC;qBACbtP,EAASj5B,EAAGkoC;sBACXloC,GAAG0jC,GAAS/qC,KAAKqH;cACzB0iB;;wBAEU1iB,GAAGyU,EAAW9b,KAAKqH;sBACrBA,GAAGmrD,GAASxyD,KAAKqH;cACzBy6B,EAAIz6B,GAAGg7C;oBACDh7C,EAAGjH;oBACHiH,EAAGjH;;2BAEIiH,GAAG+2C;wBACNtc,EAAIz6B,GAAGirD,WAAqBjrD,EAAGjH,cAAciH,GAAGorD;eAEnE,CAEDljB,cASI,MAPY,IACL9uB,MAAM8uB,cACT,UAAU,EACV,aAAa,EACb,sBAAsB,EACtB,UAAU,EAGjB,CAEG6O,SACA,MAAM/2C,EAAKjP,KACLquD,EAAMp/C,EAAGlM,IAAM,EAAI,WAAWkM,EAAGlM,cAAgB,GACvD,OAAOkM,EAAG+5C,YAAc/5C,EAAG+5C,YAAcqF,CAC5C,CAED+L,IAAStuD,GACAA,EAAEgiC,WAAW9tC,MAAKs6D,GAAWxuD,EACrC,CAED4X,GAAW5X,GACH8tD,cAAaW,GAAMrwD,SAAS4B,EAAEgY,OAAO9jB,MAAKs6D,GAAWxuD,EAC5D,CAED6mC,IAAS7mC,GACWA,EAAE0uD,aAAe1uD,EAAE6B,QAAU7B,EAAE6B,kBAAkB2O,mBACpDtc,MAAKy6D,GAAW3uD,EAAE6B,OAAO+Q,cACzC,CAED47C,IAAWxuD,GACPsX,SAASS,QAAQ/X,GACN9L,MACR06D,GADQ16D,MACG2kC,GACjB,CAEGg2B,SACA,MAAM1rD,EAAKjP,KACX,OAAOiP,EAAGlM,IAAM,GAAKkM,EAAGlH,KAAK7D,QAAU+K,EAAGlM,GAC7C,CAEGitC,SACA,OAAOhrC,MAAMgG,KAAKhL,MAAK46D,GAAU1sD,SACpC,CAEGy2B,SACA,MAAM11B,EAAKjP,KACX,OAAOiP,GAAG+gC,GAASpqC,QAAO9F,GAAMA,EAAG4B,MAAMI,gBAAkBmN,GAAG0pD,GAAOj3D,MAAMI,gBAAeuT,KAC7F,CAEDqlD,IAAQG,GACJ,MAAM5rD,EAAKjP,KACL2rD,EAAM18C,GAAG0pD,GACX1pD,GAAG0rD,KAAYE,GAA0B,GAAjB5rD,EAAG6qD,WAC3BnO,EAAIjqD,MAAQ,GAGXuN,EAAG9I,OAAO+D,SAASyhD,EAAIjqD,SACxBuN,EAAG9I,OAAOkL,KAAKs6C,EAAIjqD,OACnBiqD,EAAIjqD,MAAQ,GACZuN,EAAG0kC,gBAEV,CAED8mB,IAAWK,GACP,IAAKA,EAAO,OACZ,MACMp5D,EAAQo5D,EAAMjtD,QAAQnM,MADjB1B,KAERmG,OAFQnG,KAEImG,OAAOP,QAAOrE,GAAKA,GAAKG,GAC1C,CAEDy4D,MACI,MAAMlrD,EAAKjP,KACX,OAAOiP,EAAG9I,OAAOzD,KAAInB,GAAK0N,GAAG8rD,GAAWx5D,IAC3C,CAEDw5D,IAAWn5D,EAAM,IACb,IAAKA,EAAK,MAAO,GACjB,MAAMqN,EAAKjP,KAEX,OADaiP,EAAGgG,KAAO,GAAUhG,EAAGgG,KAC7BiG,CAAI,eAAegtB,EAASj5B,GAAG+rD,oBAA2Bp5D,MAAQA,iCAAmCsmC,EAASj5B,GAAGgsD,sBAC3H,CAEGD,SACA,MAAM/rD,EAAKjP,KACLwN,EAAM,CACR0tD,OAAO,EACPh6C,KAAK,EACL,CAAC,MAAMjS,EAAGgG,QAAShG,EAAGgG,KAAO,EAC7B,CAAC,MAAMhG,EAAGy+B,WAAUz+B,EAAGy+B,OAE3B,OAAOz+B,EAAGooC,OAAOpoC,EAAGgrD,OAAQzsD,EAC/B,CAEGytD,SACA,MAAMhsD,EAAKjP,KACLwN,EAAM,CACR,aAAa,EACb,QAAQ,EACR,CAAC,MAAMyB,EAAG8qD,gBAAe9qD,EAAG8qD,YAEhC,OAAO9qD,EAAGooC,OAAOpoC,EAAG+qD,SAAUxsD,EACjC,CAED6sD,MAEI,OADWr6D,KACD+H,KAAKrF,KAAInB,GAAK2Z,CAAI,kBAAkB3Z,OACjD,CAKD4M,IAAS4Q,GACL,OAAO0S,OAAOG,QAAQ7S,GAAMrc,KAAI5C,GAAMyM,EAAO4B,QAAQrO,IACxD,CAEGmhB,SACA,OAAOjhB,MAAKmO,GAASnO,MAAM0C,KAAI5C,GAAMA,EAAGkI,OAAMpC,QAAOrE,KAAKA,GAC7D,CAEGo3D,SACA,OAAO34D,MAAKiqD,GAAUvoD,KACzB,CAEGk5D,SACA,OAAO56D,MAAKk6D,GAAax4D,KAC5B,QAGG1B,KAAKiJ,OAAO,SACf,ECpNE,MAAMkyD,sBAAsB9lB,UAEjChvC,IAAQ,GAERxD,cACEwlB,QACAroB,KAAKghC,MAAO,EACZhhC,MAAKqG,GAAQrG,KAAKghB,UAClBhhB,KAAKghB,UAAY,EAClB,CAEDi2B,WACE,OAAOj3C,KAAKy0B,UAAUz0B,MAAKqG,GAC5B,QAGCrG,KAAKiJ,OAAO,UACb,ECZI,MAAMmyD,yBAAyB/lB,UAEpCx1C,kBAAoB,CAClBke,UAAW,IAAKA,GAChBuD,MAAO,CAAE,EACT3T,OAAQ,CAAE,EACV82B,OAAQ,CAAErkC,KAAMqB,SAChB6W,MAAO,CAAElY,KAAMqB,UAGjB45D,IAAYjzB,IACZ4rB,IAAY5rB,IACZqW,IAAW1yC,KAAKvL,GAChB86D,IAAcvvD,KAAKvL,GAEnBqC,cACEwlB,QACAroB,KAAK+d,UAAY,MACjB/d,KAAK8qB,aAAa9qB,MAAKy+C,IACvBz+C,KAAK8qB,aAAa9qB,MAAKs7D,GACxB,CAEDzkB,aAAatR,GACXld,MAAMkuB,oBACKv2C,MACRu7D,KADQv7D,MAERm0D,KACH9rC,MAAMwuB,aAAatR,EACpB,CAEDuR,WAAWvR,GACTld,MAAMyuB,WAAWvR,GACjBvlC,MAAKm0D,IACN,CAEDld,WACE,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI;WACJwuB,EAAIz6B,GAAG+kD;aACLrrB,EAAU15B,EAAGuoC;;+BAEKvoC,EAAG8O;uBACX9O,GAAGwvC;eACXvW,EAASj5B,EAAGkoC;aACdzN,EAAIz6B,GAAGosD;iCACapsD,GAAGqsD;2BACTrsD,GAAGqsD;;mCAEKrsD,EAAGwlB,UAAUxlB,EAAGqS;WAEhD,CAED61B,cAUE,MARY,IACP9uB,MAAM8uB,cACTkD,SAAW,EACX,mBAAmB,EACnBmhB,MAAQ,EACR/hB,KANSz5C,KAMEykC,OACX,CAPSzkC,MAOLy+C,KAAW,EAGlB,CAEDxZ,OACEjlC,KAAKykC,QAAS,CACf,CAEDkU,QACE34C,KAAKykC,QAAS,CACf,CAED12B,SACE/N,KAAKykC,QAAUzkC,KAAKykC,MACrB,CAED82B,MACE,MAAMtsD,EAAKjP,KACXiP,EAAG6iC,YAAY7iC,GAAGy6B,GAAM,aAAcz6B,EAAGg2B,KAAKr9B,KAAKqH,IACnDA,EAAG6iC,YAAY7iC,GAAGy6B,GAAM,aAAcz6B,EAAG0pC,MAAM/wC,KAAKqH,GACrD,CAEDklD,MACE,MAAMllD,EAAKjP,KACLy7D,EAAUxsD,GAAGynB,GACbglC,EAAUzsD,GAAGolD,GACdqH,IACDzsD,EAAGw1B,OACLpP,SAAS++B,WAAWnlD,EAAG8O,UAAW29C,EAASzsD,GAAGy6B,GAAM+xB,GAEpDxsD,EAAG6b,aAAa7b,GAAGwvC,GAAU,CAAE9oB,IAAK,UAAW5uB,KAAM,YAExD,CAEG2iC,SACF,MAAMz6B,EAAKjP,KACX,OAAQiP,EAAGtB,QACT,IAAK,UACH,OAAO3N,KAAK0e,cACd,IAAK,YACH,OAAO1e,KAAKmwC,uBACd,IAAK,QACH,OAAOnwC,KAAK6d,mBACd,QACE,OAAO5O,EAAGqJ,MAAQrJ,GAAG0sD,GAAY1sD,GAAG2sD,GAEzC,CAEGD,SACF,MAAM58C,EAAOzE,EAAMyE,KAAK/e,MACxB,OAAOsa,EAAM5Q,MAAMqV,EAAM/e,KAAK2N,OAC/B,CAEGiuD,SACF,OAAOthD,EAAM5Q,MAAMnD,SAASsI,KAAM7O,KAAK2N,OACxC,CAEG+oB,SAAW,OAAO12B,MAAKq7D,GAAU35D,KAAQ,CACzC2yD,SAAW,OAAOr0D,MAAKg0D,GAAUtyD,KAAQ,QAG3C1B,KAAKiJ,OAAO,aACb,EC9HI,MAAM4yD,0BAA0BxmB,UAErCx1C,kBAAoB,CAClByJ,IAAK,CAAEisC,SAAS,EAAMhI,WAAYT,WAGpCjqC,cACEwlB,OACD,CAEDuuB,mBACE,MAAM3nC,EAAKjP,KACX,OAAIiP,EAAG+xB,MACL/xB,EAAGghC,cAAcC,aAAejhC,EACzBA,EAAGyP,eAEL2J,MAAMuuB,kBACd,CAEDK,WACE,OAAO/7B,CAAI,GAAGlb,KAAKk3C,kBACpB,CAEF7C,mBACCr0C,KAAKyvB,KAAK,oBAAqB,MAAM,GAAM,EAC3C,QAGEzvB,KAAKiJ,OAAO,cACb,EC5BI,MAAM6yD,qBAEXvuD,IAEAwuD,IACAC,IAEAn5D,YAAY0K,GACV,MAAM0B,EAAKjP,KACXiP,GAAG1B,GAAQA,EACX0B,GAAG8sD,GAAiB9sD,GAAG0jC,GAAS/qC,KAAKqH,GACrCA,GAAG+sD,GAAgB/sD,GAAGgtD,GAAQr0D,KAAKqH,GACnC1B,EAAK23B,cAAcj2B,EACpB,CAED8/B,gBACE,MAAM9/B,EAAKjP,KACXiP,GAAG1B,GAAMqC,GAAG,QAASX,GAAG8sD,IACxB9sD,GAAG1B,GAAMqC,GAAG,OAAQX,GAAG+sD,GACxB,CAEDhtB,mBACE,MAAM//B,EAAKjP,KACXiP,GAAG1B,GAAM43B,iBAAiBl2B,GAC1BA,GAAG1B,GAAMiiB,IAAI,QAASvgB,GAAG8sD,IACzB9sD,GAAG1B,GAAMiiB,IAAI,OAAQvgB,GAAG+sD,GACzB,CAEDC,MACEj7D,EAAOk7D,iBAAiBl8D,MAAKuN,GAAM7L,MACpC,CAEDixC,IAAS7mC,GACL,MAAMmD,EAAKjP,KACPiP,GAAG1B,GAAM+7C,UAAUtoD,EAAOk7D,iBAAiBjtD,GAAG1B,GAAM7L,OACpDuN,GAAG1B,GAAMg8C,YAAYt6C,GAAG1B,GAAMw3B,QACrC,ECtCI,MAAMo3B,eAEXt8D,UAAkB,gBAElBA,UAAmB,CACjBqC,EAAG,eACHf,EAAG,SACH6U,EAAG,SACH5C,EAAG,SACHZ,EAAG,SACHpG,EAAG,SACHF,EAAG,SACH,IAAK,SACL,IAAK,YACL,IAAK,eACLkwD,EAAK,MAGPC,KAAQ,EACRnQ,IACAoQ,IACAvrD,IACAnF,IACA9H,IAEAyJ,IAEAgvD,IACAC,IACAC,IACAC,IAEA75D,YAAY0K,GACV,MAAM0B,EAAKjP,KACXiP,GAAG1B,GAAQA,EACX0B,GAAGstD,GAAmBttD,GAAGyU,EAAW9b,KAAKqH,GACzCA,GAAGutD,GAAiBvtD,GAAGrK,GAAQgD,KAAKqH,GACpCA,GAAGwtD,GAAiBxtD,GAAG0tD,GAAS/0D,KAAKqH,GACrCA,GAAGytD,GAAgBztD,GAAG68C,GAAQlkD,KAAKqH,GACnC1B,EAAK23B,cAAcj2B,EACpB,CAED8/B,gBACE,MAAM9/B,EAAKjP,KACXiP,EAAG2tD,YACH3tD,GAAG1B,GAAMqC,GAAG,UAAWX,GAAGstD,IAC1BttD,GAAG1B,GAAMqC,GAAG,QAASX,GAAGutD,IACxBvtD,GAAG1B,GAAMqC,GAAG,QAASX,GAAGwtD,IACxBxtD,GAAG1B,GAAMqC,GAAG,OAAQX,GAAGytD,GACxB,CAED1tB,mBACE,MAAM//B,EAAKjP,KACXiP,GAAG1B,GAAM43B,iBAAiBl2B,GAC1BA,GAAG1B,GAAMiiB,IAAI,UAAWvgB,GAAGstD,IAC3BttD,GAAG1B,GAAMiiB,IAAI,QAASvgB,GAAGutD,IACzBvtD,GAAG1B,GAAMiiB,IAAI,QAASvgB,GAAGwtD,IACzBxtD,GAAG1B,GAAMiiB,IAAI,OAAQvgB,GAAGytD,GACzB,CAEDE,YACE,MAAM3tD,EAAKjP,KAGA,IAAC68D,EAFP5tD,EAAGnL,UACRmL,GAAGi9C,GAASj9C,GAAG6tD,KACf7tD,GAAGqtD,IAASO,EAAyE,EAApE73D,MAAMgG,KAAKiE,EAAGnL,SAAS,CAAC8a,EAAGjc,IAAMsM,GAAGi9C,GAAOn8B,IAAInR,GAAKi+C,EAAIl6D,EAAI,EAAIk6D,KACjF5tD,GAAG8B,GAAS,IAAI9B,EAAGnL,SAASi5D,WAAUn+C,GAAK3P,GAAGi9C,GAAOn8B,IAAInR,KACzD3P,GAAGrD,GAAUqD,GAAG+tD,KAChB/tD,GAAGguD,KACJ,CAEDvrC,WACE,MAAMziB,EAAKjP,KACXiP,EAAGg9C,kBAAkB,IACrBh9C,GAAGnL,GAASo5D,UAAY,EACxB,MAAMC,GAAUluD,EAAG26C,UAAW36C,GAAGnL,GAASH,KAAKsL,EAAGuyB,KAC5C/2B,EAAU0yD,GAAWluD,EAAGwR,gBAG9B,OAFK08C,GAASluD,EAAGg9C,kBAAkB,+BAC9BxhD,GAASwE,EAAGu5C,iBACV/9C,CACR,CAEDgW,gBACE,OAAOzgB,MAAKuN,GAAMkT,eACnB,CAEDwrC,kBAAkBrqD,GAChB,OAAO5B,MAAKuN,GAAM0+C,kBAAkBrqD,EACrC,CAED4mD,iBACE,OAAOxoD,MAAKuN,GAAMi7C,gBACnB,CAED4U,kBAAkBz6D,EAAGk6D,GACnB78D,MAAKuN,GAAM6vD,kBAAkBz6D,EAAGk6D,EACjC,CAED93B,SACE/kC,MAAKuN,GAAMw3B,QACZ,CAEGrjC,YACF,MAAOiB,EAAGk6D,GAAK78D,MAAKypC,KACpB,OAAOzpC,KAAKwhC,IAAI67B,UAAU,EAAGR,EAC9B,CAEGn7D,UAAME,GACR5B,MAAKuN,GAAM7L,MAAQE,CACpB,CAEG4/B,UACF,OAAOxhC,MAAKuN,GAAMi0B,GACnB,CAEGooB,eACF,OAAO5pD,MAAKuN,GAAMq8C,QACnB,CAEG9lD,cACF,OAAO9D,MAAKuN,GAAM07C,IACnB,CAEGp7C,cACF,OAAO7N,MAAKuN,GAAMM,OACnB,CAEGyvD,qBACF,OAAOt9D,MAAKuN,GAAM+vD,cACnB,CAEGC,mBACF,OAAOv9D,MAAKuN,GAAMgwD,YACnB,CAEGhU,iBACF,OAAOvpD,MAAKuN,GAAMg8C,UACnB,CAED7lC,GAAW5X,GACT9L,MAAKq8D,GAAkB,cAAVvwD,EAAEgM,GAChB,CAED6kD,IAAS7wD,GACP,MAAMmD,EAAKjP,KACXiP,GAAGrK,GAAQkH,GACPmD,EAAGs6C,YAAYt6C,EAAG81B,QACvB,CAED+mB,IAAQhgD,GAEN9L,KAAK0xB,UACN,CAMDorC,MACE,MAAM7tD,EAAKjP,KACX,IAAIksD,EAAQj9C,EAAGpB,QAAQq+C,MACvB,IAAKA,EAAO,CACV,MAAMsR,EAAWrB,gBAAeqB,GAChCtR,EAAQ,IAAI,IAAI51C,IAAIrH,EAAGnL,UACpB8B,QAAOrE,GAAKi8D,EAASj8D,EAAEO,iBACvBQ,KAAK,GACT,CACD,OAAO,IAAIgU,IAAI41C,GAAS,IACzB,CAMD8Q,MACE,MAAM/tD,EAAKjP,KACX,IAAI4L,EAASqD,EAAGpB,QAAQjC,OACxB,IAAKA,EAAQ,CACX,MAAM4xD,EAAWrB,gBAAeqB,GAIhC,GAHA5xD,EAAS,IAAI,IAAI0K,IAAIrH,EAAGnL,UACvBpB,KAAInB,GAAKi8D,EAASj8D,EAAEO,iBACpB8D,QAAOrE,GAAKA,IACTqK,EAAO1H,OAAS,EAAG,CACrB,MAAM5D,EAAM,CAAA,EAGZ,OAFAsL,EAAO/E,SAAQtF,GAAKjB,EAAIiB,EAAE+H,KAAO/H,IACjCqK,EAAS/K,OAAOsF,OAAO7F,GACE,IAAlBsL,EAAO1H,OAAe0H,EAAOyJ,MAAQzJ,CAC7C,CAEF,CACD,OAAO,IAAIrH,OAAOqH,GAAU,MAAO,IACpC,CAED69B,MACE,MAAMx6B,EAAKjP,KACL0B,EAAQuN,EAAGuyB,IACjB,MAAO,CAACvyB,EAAGquD,eAAgBruD,EAAGsuD,cAAc76D,KAAIC,IAC9CA,EAAIsM,GAAGwuD,GAAO/7D,EAAMe,MAAM,EAAGE,IAAIo6D,WAAUn+C,GAAK3P,GAAGi9C,GAAOn8B,IAAInR,MACnD,EAAI3P,GAAGqtD,GAAMrtD,GAAGqtD,GAAMp4D,OAAS,GAAK+K,GAAGotD,GAAQptD,GAAGqtD,GAAM35D,EAAI,IAAMsM,GAAG8B,GAASpO,GAE5F,CAEDiC,IAAQkH,GACN,MAAMmD,EAAKjP,MACJ2C,EAAGk6D,GAAK5tD,GAAGw6B,KAClBx6B,EAAGvN,MAAQuN,GAAGwuD,GAAOxuD,GAAG1B,GAAMi0B,KAAKl/B,IAAI,GACvC2M,EAAGmuD,kBAAkBz6D,EAAGk6D,GACxB5tD,GAAGotD,IAAQ,CACZ,CAGDoB,IAAO9E,GACL,MAAM1pD,EAAKjP,KAEX,OADA24D,EAAQA,EAAM11D,MAAMgM,GAAGrD,KAAY,GAC5B5G,MAAMgG,KAAKiE,EAAGnL,SAAS8a,IAAK+5C,EAAM,KAAO/5C,GAAK3P,GAAGi9C,GAAOn8B,IAAInR,KAAK+5C,EAAMppD,SAAeqP,GAC9F,CAEDq+C,MAEE,MAAMhuD,EAAKjP,KAEX,GAA0B,IAAtBiP,EAAGnL,QAAQI,OAAc,OAE7B,MAAMw5D,EAAQzuD,EAAGnL,QAAQ1B,MAAM,IACzBu7D,EAAQ,CAAC,KAETH,EAAWrB,gBAAeqB,GAC1BI,EAAUzB,gBAAeyB,GAE/B,IAAInyD,EAAM,EACViyD,EAAM72D,SAAQ,CAACtF,EAAGoB,KAChB,MAAMyQ,EAAIoqD,EAASj8D,EAAEO,eACrB,OAAKsR,GAOLsqD,EAAM/6D,GAAK,IAAI4B,OAAO6O,EAAG,KAEJ,IAAjBuqD,EAAMz5D,OAAqBy5D,EAAMtsD,KAAK+B,EAAEoX,QAExCmzC,EAAMA,EAAMz5D,OAAS,KAAOkP,EAAEoX,OAAe/e,KAE7CA,EAAM,GAAGkyD,EAAMtsD,KAAK,MAAM5F,MAC9BA,EAAM,OACNkyD,EAAMtsD,KAAK+B,EAAEoX,WAdP/e,EAAM,GAAGkyD,EAAMtsD,KAAK,MAAM5F,MAC9BA,EAAM,EACFmyD,EAAQ1zD,SAAS3I,IAAIo8D,EAAMtsD,KAAK,MAC7BssD,EAAMtsD,KAAK9P,GAWA,IAGlBkK,EAAM,GAAGkyD,EAAMtsD,KAAK,MAAM5F,MAC9BkyD,EAAMtsD,KAAK,KAEXpC,GAAGnL,GAAW,IAAIS,OAAOo5D,EAAMr7D,KAAK,IAAK,IAG1C,EC7PI,MAAMu7D,iBAEXtwD,IAEAivD,IAEA35D,YAAY0K,GACV,MAAM0B,EAAKjP,KACXiP,GAAG1B,GAAQA,EACX0B,GAAGutD,GAAiBvtD,GAAGmrD,GAASxyD,KAAKqH,GACrC1B,EAAK23B,cAAcj2B,EACpB,CAED8/B,gBACa/uC,MACRuN,GAAMqC,GAAG,QADD5P,MACaw8D,GACzB,CAEDxtB,mBACE,MAAM//B,EAAKjP,KACXiP,GAAG1B,GAAM43B,iBAAiBl2B,GAC1BA,GAAG1B,GAAMiiB,IAAI,QAASvgB,GAAGutD,GAC1B,CAEGpT,gBACF,OAAOpoD,EAAO+L,MAAM/M,MAAKuN,GAAM67C,UAAW,EAC3C,CAEG1nD,YACF,OAAO1B,MAAKuN,GAAM7L,KACnB,CAEGA,UAAME,GACR5B,MAAKuN,GAAM7L,MAAQE,CACpB,CAEGxB,WACF,OAAOJ,MAAKuN,IAAOnN,IACpB,CAEDg6D,IAAStuD,GAEP,GAAgB,WADL9L,KACJI,KAAmB,OADfJ,MACyB89D,GAAehyD,EACpD,CAEDgyD,IAAehyD,GACb,MAAMmD,EAAKjP,KACPiP,EAAGm6C,UAAY,GAAKn6C,EAAGvN,MAAMwC,OAAS+K,EAAGm6C,YACzCn6C,EAAGvN,MAAQuN,EAAGvN,MAAM27D,UAAU,EAAGpuD,EAAGm6C,WAEzC,ECpDI,MAAM2U,mBAEXxwD,IAEAywD,KAAa,EAEbC,IACA1B,IAEA15D,YAAY0K,GACV,MAAM0B,EAAKjP,KACXiP,GAAG1B,GAAQA,EACX0B,GAAGgvD,GAAiBhvD,GAAGyjC,GAAS9qC,KAAKqH,GACrCA,GAAGstD,GAAmBttD,GAAGyU,EAAW9b,KAAKqH,GACzC1B,EAAK23B,cAAcj2B,EACpB,CAED8/B,gBACE,MAAM9/B,EAAKjP,KACXiP,GAAG1B,GAAMqC,GAAG,QAASX,GAAGgvD,IACxBhvD,GAAG1B,GAAMqC,GAAG,UAAWX,GAAGstD,GAC3B,CAEDvtB,mBACE,MAAM//B,EAAKjP,KACXiP,GAAG1B,GAAM43B,iBAAiBl2B,GAC1BA,GAAG1B,GAAMiiB,IAAI,QAASvgB,GAAGgvD,IACzBhvD,GAAG1B,GAAMiiB,IAAI,UAAWvgB,GAAGstD,GAC5B,CAEG7S,aACF,OAAO1pD,MAAKuN,GAAMkB,aAAa,SAChC,CAEGrO,WACF,OAAOJ,MAAKuN,IAAOnN,IACpB,CAEGA,SAAKwB,GACH5B,MAAKuN,KAAOvN,MAAKuN,GAAMnN,KAAOwB,EACnC,CAEDs8D,IAAUpyD,GACR,OAAO9L,KAAK0pD,QAAoB,UAAV59C,EAAEgM,KAAmBhM,EAAEqyD,QAAUryD,EAAE8X,UAA0B,aAAd5jB,KAAKI,IAC3E,CAEDsyC,IAAS5mC,GACP,MAAMmD,EAAKjP,KACG,UAAV8L,EAAEgM,KAAmB7I,GAAG+uD,KAC1B/uD,EAAG7O,KAAO,WAEb,CAEDsjB,GAAW5X,GACT,MAAMmD,EAAKjP,KACPiP,GAAGivD,GAAUpyD,KACfmD,GAAG+uD,IAAa,EAChB/uD,EAAG7O,KAAO,OAEb,ECxDI,MAAMg+D,eAEX7wD,IAEAivD,IAEA35D,YAAY0K,GACV,MAAM0B,EAAKjP,KACXiP,GAAG1B,GAAQA,EACX0B,GAAGutD,GAAiBvtD,GAAGmrD,GAASxyD,KAAKqH,GACrC1B,EAAK23B,cAAcj2B,EACpB,CAED8/B,gBACa/uC,MACRuN,GAAMqC,GAAG,QADD5P,MACaw8D,GACzB,CAEDxtB,mBACE,MAAM//B,EAAKjP,KACXiP,GAAG1B,GAAM43B,iBAAiBl2B,GAC1BA,GAAG1B,GAAMiiB,IAAI,QAASvgB,GAAGutD,GAC1B,CAEG96D,YACF,OAAO1B,MAAKuN,GAAM7L,KACnB,CAEGA,UAAME,GACR5B,MAAKuN,GAAM7L,MAAQE,CACpB,CAEGxB,WACF,OAAOJ,MAAKuN,IAAOnN,IACpB,CAEDg6D,IAAStuD,GACP,MAAMmD,EAAKjP,KACK,SAAZiP,EAAG7O,OAAiB6O,EAAGvN,MAAQuN,GAAGovD,GAAYpvD,EAAGvN,OACtD,CAED28D,IAAY38D,EAAQ,IAClB,MAAMgB,EAAMkM,EAAS0R,WAAWtgB,MAAKuN,GAAO,kBAE5C,OADI7K,IAAKhB,EAAQV,EAAOuf,cAAc7d,EAAIhB,MAAOA,IAC1CA,CACR,EC3CI,MAAM48D,eAEX/wD,IAEAgxD,IACAC,IACA9B,IAEA75D,YAAY0K,GACV,MAAM0B,EAAKjP,KACXiP,GAAG1B,GAAQA,EACX0B,GAAGytD,GAAgBztD,GAAG68C,GAAQlkD,KAAKqH,GACnCA,GAAGsvD,GAAmBtvD,GAAGwvD,GAAW72D,KAAKqH,GACzCA,GAAGuvD,GAAkBvvD,GAAGyvD,GAAc92D,KAAKqH,GAC3C1B,EAAK23B,cAAcj2B,EACpB,CAED8/B,gBACE,MAAM9/B,EAAKjP,KACEiP,EAAG8H,OAEd9H,GAAG1B,GAAMqC,GAAG,OAAQX,GAAGytD,IACvBztD,GAAG1B,GAAMqC,GAAG,SAAUX,GAAGuvD,IACzBvvD,GAAG1B,GAAMukC,YAAY7iC,EAAGrJ,OAAQ,SAAUqJ,GAAGsvD,IAEhD,CAEDvvB,mBACE,MAAM//B,EAAKjP,KACXiP,GAAG1B,GAAM43B,iBAAiBl2B,GAC1BA,GAAG1B,GAAMiiB,IAAI,OAAQvgB,GAAGytD,IACxBztD,GAAG1B,GAAMiiB,IAAI,SAAUvgB,GAAGuvD,IAC1BvvD,GAAG1B,GAAMwkC,YAAY9iC,EAAGrJ,OAAQ,SAAUqJ,GAAGsvD,GAC9C,CAED1uB,cAEO7vC,MAAKuN,GAAMoxD,YACd3+D,MAAK0+D,IAER,CAEGh9D,YACF,OAAO1B,MAAKuN,GAAM7L,KACnB,CAEGA,UAAME,GACR5B,MAAKuN,GAAM7L,MAAQE,CACpB,CAEGmV,WACF,MAAM9H,EAAKjP,KACX,GAAIiP,GAAG1B,GAAMwJ,KAAM,OAAO9H,GAAG1B,GAAMwJ,KACnC,MAAMA,EAAOxK,EAAOvD,IAAIiG,GAAG1B,GAAO,QAClC,OAAO+M,EAAM0E,QAAQ/P,GAAG1B,GAAM1C,MAAOkM,EACtC,CAEGnR,aACF,MACMA,EAAS2G,EAAOvD,IADXhJ,MACkBuN,GAAO,eACpC,OAAO+M,EAAM0E,QAFFhf,MAEauN,GAAM1C,MAAOjF,EACtC,CAEGiF,YACF,OAAO7K,MAAKuN,GAAM1C,KACnB,CAEG+zD,aACF,OAAOryD,EAAOvD,IAAIhJ,MAAKuN,GAAO,SAAU,GACzC,CAEDu+C,IAAQhgD,GACD9L,MAAK6+D,MAAaz7C,SAAS8C,KAAKlmB,MAAKuN,GAAO,SAAU,CAAEwV,IAAI,EAAOyH,OAAQ1e,GACjF,CAED4yD,IAAc5yD,GACZ,MAAMmD,EAAKjP,KACLmK,EAAM8E,EAAGpE,MACf,IAAI2C,EAAM8M,EAAM5Q,MAAMuF,EAAG8H,KAAM,iBAAiB9H,EAAGvN,WAC/C+7D,GAAQ,EACPjwD,IACDA,EAAMyB,EAAG8H,MAAM6Z,cAAc,UAC7B6sC,GAAQ,GAGZ,MAAMz7D,EAAMwL,GAAKK,SAAW,GAC5BhN,OAAOuM,QAAQpL,GAAK6E,SAAQooB,IACxB,MAAMrtB,EAAM67D,EAAQ,GAAKxuC,EAAE,GACrBnX,EAAMmX,EAAE,GAEd,GADA1iB,EAAOU,IAAIgC,GAAG1B,GAAO,QAAQuK,IAAOmX,EAAE,IAC1B,OAARnX,GAAwB,UAARA,EAAiB,OAErC,MAAMlS,EAAS,SAASkS,gBAAkBA,QAC9B9S,MAAMgG,KAAKsP,EAAM+B,SAASlS,EAAKvE,IACvCA,QAAO9F,GAAqB,WAAfA,EAAGqc,UACfvW,QAAO9F,GAAMA,IAAOmP,IACpBrJ,QAAO9F,GAAwC,IAAlCyM,EAAOvD,IAAIlJ,EAAI,QAAQoE,SACpC2C,SAAQ/G,GAAMmP,GAAG6vD,GAASh/D,EAAIgY,EAAKlW,IAAK,GAElD,CAED68D,IAAW3yD,GACT,MAAMmD,EAAKjP,KACL+W,EAAO9H,EAAG8H,KAChB9H,EAAGvN,MAAQ,GACX,MAAMq9D,EAAYxyD,EAAOvD,IAAIiG,EAAGrJ,OAAQ,cACxC0U,EAAM+B,SAAStF,EAAM,UAAUlQ,SAAQ/G,GAAMyM,EAAOU,IAAInN,EAAI,YAAY,KACxE,MAAM8F,EAASm5D,EAAY,sBAAsBA,MAAgB,mBAAmBjzD,EAAE6B,OAAOjM,UAC7F4Y,EAAM+B,SAAStF,EAAMnR,GAAQiB,SAAQ/G,GAAMyM,EAAOU,IAAInN,EAAI,aAE3D,CAEDg/D,IAASh/D,EAAIgY,EAAM,GAAIpW,EAAQ,IAE7B,MAAMqG,EAAOwE,EAAOvD,IAAIlJ,EAAI,QAAQgY,IAAO,IAAI1V,MAAM,SAC/C+6D,EAAUz7D,EAAMwC,OAAS,GAAK6D,EAAKmC,SAASxI,GACpC4Y,EAAMmiB,cAAc38B,IAAOwa,EAAM0kD,gBAAgBl/D,GAG7DyM,EAAOwB,OAAOjO,EAAI,YAAaq9D,GAE/BA,EAAU7iD,EAAMm/B,KAAK35C,GAAMwa,EAAMk7B,KAAK11C,GAGxC,MAAMu8B,EAAO/hB,EAAM+D,QAAQve,EAAI,QAC/Bwa,EAAMmwC,aAAapuB,GAChBx1B,SAAQ/G,GAAMyM,EAAOU,IAAInN,EAAI,eAAeq9D,GAAU,OAC1D,CAED0B,MACE,MAAM5vD,EAAKjP,KACL+W,EAAO9H,EAAG8H,KAChB,IAAKA,EAAM,OAAO,EAClB,IAAK9H,EAAG2vD,OAAQ,OAAO,EACvB,IAAK7nD,EAAK6Z,cAAc,UAAW,OAAO,EAE1C,OAAc,MADF7Z,EAAK6Z,cAAc,iBAAiB3hB,EAAGvN,UAEpD,ECjJH,MAAMu9D,GAA6B,CAC/BnxD,WAAW,EACXynC,SAAS,EACTn1C,KAAMuP,OACNkqD,UAAWxxB,EACXkF,WAAYhE,GAGV21B,GAAyBv0D,SACzBw0D,GAAUx0D,SACVy0D,GAAoBz0D,SACpB00D,GAAW10D,SACX20D,GAAY30D,SAEZ40D,UAAY,WACd,MAAMtwD,EAAKjP,KACX,GAAIa,OAAO2+D,sBAAsBvwD,GAAI/E,SAASk1D,IAAoB,OAClE,MAAMK,EAAY5+D,OAAOsrC,eAAel9B,GACL,mBAAxBwwD,EAAUJ,KAA0BI,EAAUJ,MACzDpwD,EAAGmwD,IAAqB,IAAI/7C,IAAIo8C,EAAUL,IAC9C,EAEMM,yBAA2B,CAAC13D,EAAMgoC,KACpC,MAAMliC,EAAYkiC,EAAQliC,UAC1B,OAAqB,IAAdA,OACDrJ,EACqB,iBAAdqJ,EACHA,EACgB,iBAAT9F,EACHA,EAAKlG,mBACL2C,CAAS,EAMpB,MAAMk7D,sBAAsB5iB,iBAG/Bl9C,kBAAoB,CAAA,EAEpBA,OAAQy/D,KAAa,EAErBM,SAAwBn7D,EACxBo7D,SAAsBp7D,EAEtBqgC,SAAergC,EACfq7D,SAAiBr7D,EACjBu0C,SAAqBv0C,EACrBs7D,SAAsBt7D,EAEtBk6D,KAAc,EACdqB,KAAmB,EAKRC,gCACPp/D,OAAO8lB,eAAeg5C,cAAcn1D,UAAW20D,GAAS,CAAEz9D,MAAO69D,YACjE,MAAMtwD,EAAKjP,KAEX,OADAiP,EAAGowD,MACIpwD,EAAGiwD,KAA2B,IAAIjwD,EAAGiwD,IAAwBj5D,OACvE,CAEDpG,sBAAsBqgE,GACPlgE,KACRm/D,MADQn/D,KAERmgE,eAAiB,GAAG9uD,KAAK6uD,EAC/B,CAEDrgE,OAAQw/D,MACJ,MAAMpwD,EAAKjP,KAEX,IAAsB,IAAlBiP,EAAGqwD,IAAP,CAIA,GAHArwD,EAAGqwD,KAAa,EAChBrwD,EAAGkwD,MAECt+D,OAAOirC,OAAO78B,EAAI,cAAe,CACjC,MAAMmxD,EAAQnxD,EAAG8tB,WACXsjC,EAAW,IACVx/D,OAAOy/D,oBAAoBF,MAC3Bv/D,OAAO2+D,sBAAsBY,IAEpC,IAAK,MAAMnxC,KAAKoxC,EACZpxD,EAAGsxD,eAAetxC,EAAGmxC,EAAMnxC,GAElC,CAGDhgB,EAAGiwD,IAA0B,IAAI77C,IACjC,IAAK,MAAO4L,EAAG+gB,KAAY/gC,EAAGmwD,IAAoB,CAC9C,MAAMvyD,EAAO6yD,yBAAyBzwC,EAAG+gB,QAC5BvrC,IAAToI,GACAoC,EAAGiwD,IAAwBjyD,IAAIJ,EAAMoiB,EAE5C,CAtBkC,CAwBtC,CAEDpvB,sBAAsBmI,EAAMgoC,GACxB,MAAM/gC,EAAKjP,KAIX,GAHIgwC,EAAQrmC,QAAOqmC,EAAQliC,WAAY,GACvCmB,EAAGkwD,MACHlwD,EAAGmwD,IAAmBnyD,IAAIjF,EAAMgoC,IAC3BA,EAAQwwB,WAAY,CACrB,MAAM1oD,EAAMnN,SACN81D,EAAaxxD,EAAGyxD,sBAAsB14D,EAAM8P,EAAKk4B,QACpCvrC,IAAfg8D,GACA5/D,OAAO8lB,eAAe1X,EAAG0xD,UAAW34D,EAAMy4D,EAEjD,CACJ,CAED5gE,6BAA6BmI,EAAM8P,EAAKk4B,GACpC,MAAMhnC,IAAEA,EAAGiE,IAAEA,GAAQpM,OAAO0J,yBAAyBvK,KAAK2gE,UAAW34D,IAAS,CAC1EgB,MACI,OAAOhJ,KAAK8X,EACf,EACD7K,IAAI1L,GACAvB,KAAK8X,GAAOvW,CACf,GAEL,MAAO,CACHyH,MACI,OAAOA,GAAK+xB,KAAK/6B,KACpB,EACDiN,IAAIvL,GACA,MAAMuN,EAAKjP,KACLq2C,EAAWrtC,GAAK+xB,KAAK9rB,GAC3BhC,GAAK8tB,KAAK9rB,EAAIvN,GACduN,EAAG0kC,cAAc3rC,EAAMquC,EAAUrG,EACpC,EACD4wB,cAAc,EACdC,YAAY,EAEnB,CAEDhhE,0BAA0BmI,GACtB,OAAOhI,KAAKo/D,IAAmBp2D,IAAIhB,IAASi3D,EAC/C,CAEDp8D,cACIwlB,QACAroB,MAAKqiD,IACR,CAED9L,oBACev2C,KACR8gE,gBAAe,GADP9gE,MAER8kC,IAAcj+B,SAAS+X,GAAMA,EAAEmwB,mBACrC,CAED2H,uBACI12C,MAAK8kC,IAAcj+B,SAAS+X,GAAMA,EAAEowB,sBACvC,CAEDoH,yBAAyBpuC,EAAMquC,EAAUC,GACrCt2C,MAAK+gE,GAAqB/4D,EAAMsuC,EACnC,CAMGqoB,iBAAe,OAAO3+D,MAAK2+D,EAAc,CACzCqB,sBAAoB,OAAOhgE,MAAKggE,EAAmB,CACnD5wB,iBAAe,OAAOpvC,IAAO,CAMjCklC,cAAc3V,IAECvvB,MACP8kC,KAAiB,IAAIxuB,KAAO+G,IAAIkS,GADzBvvB,KAEJqmB,aACHkJ,EAAWwf,iBAElB,CAED5J,iBAAiB5V,GACbvvB,MAAK8kC,IAAche,OAAOyI,EAC7B,CAEDqnB,mBACI,OAAO52C,IACV,CAED8gE,eAAeE,GAAoB,CAEnCnqB,aAAamC,GAAsB,CAEnCQ,QAAQR,GAAsB,CAE9BioB,oBAAsB,OAAOjhE,MAAK8/D,EAAiB,CAEnDoB,iBAAmB,OAAOlhE,KAAKmhE,eAAkB,CAEjDpoB,aAAaC,GAAqB,OAAO,CAAO,CAEhDlC,WAAWkC,GAAsB,CAEjCjtB,OAAOitB,GACH,MAAM/pC,EAAKjP,KAGXiP,GAAG2wD,KAA0B3wD,GAAG2wD,GAAsB/4D,SAASooB,GAAMhgB,GAAGmyD,GAAqBnyC,EAAGjvB,KAAKivB,MACrGhgB,GAAGoyD,IACN,CAEGC,qBACA,OAAOthE,KAAKihE,mBACf,CAEDttB,cAAc3rC,EAAMquC,EAAUrG,GAC1B,MAAM/gC,EAAKjP,KACX,QAAayE,IAATuD,EAAoB,CACpBgoC,IAAa/gC,EAAc,YAAEsyD,mBAAmBv5D,GAGhD,KAFmBgoC,EAAQzC,YAAchE,GACxBt6B,EAAGjH,GACKquC,GAGrB,OAFApnC,GAAGuyD,GAAgBx5D,EAAMquC,EAAUrG,EAI1C,EAC2B,IAAxB/gC,GAAG+wD,KACH/wD,GAAG6wD,GAAiB7wD,GAAGwyD,KAE9B,CAEDN,gBAEI,MAAMlyD,EAAKjP,KACX,IAAKiP,GAAG+wD,GAAkB,OAE1B,IAAK/wD,GAAG0vD,GAAa,CAGjB,GAAI1vD,GAAG4wD,GAAqB,CACxB,IAAK,MAAO5wC,EAAGvtB,KAAUuN,GAAG4wD,GACxB7/D,KAAKivB,GAAKvtB,EAEduN,GAAG4wD,QAAsBp7D,CAC5B,CAED,MAAMi9D,EAAezyD,EAAGpM,YAAYu8D,IACpC,GAAIsC,EAAazsD,KAAO,EACpB,IAAK,MAAOga,EAAG+gB,KAAY0xB,GAEC,IAApB1xB,EAAQ2xB,SACP1yD,GAAG+pC,GAAmBjpB,IAAId,SACjBxqB,IAAVwK,EAAGggB,IAEHhgB,GAAGuyD,GAAgBvyC,EAAGjvB,KAAKivB,GAAI+gB,EAI9C,CAED,IAAI+I,GAAe,EACnB,MAAMC,EAAoB/pC,GAAG+pC,GAC7B,IACID,EAAe9pC,EAAG8pC,aAAaC,GAC3BD,GACA9pC,EAAG6nC,WAAWkC,GACd/pC,GAAG61B,IAAcj+B,SAAS+X,GAAMA,EAAEk1B,iBAClC7kC,EAAG8c,OAAOitB,IAEV/pC,GAAGoyD,IAEV,CAAC,MAAOv1D,GAGL,MAFAitC,GAAe,EACf9pC,GAAGoyD,KACGv1D,CACT,CAEGitC,GACA9pC,GAAG2yD,GAAW5oB,EAErB,CAMD4oB,IAAW5oB,GACP,MAAM/pC,EAAKjP,KACXiP,GAAG61B,IAAcj+B,SAAS+X,GAAMA,EAAEixB,kBAC7B5gC,GAAG0vD,KACJ1vD,GAAG0vD,IAAc,EACjB1vD,EAAG4nC,aAAamC,IAEpB/pC,EAAGuqC,QAAQR,EACd,CAEDqoB,MACerhE,MACRg5C,GAAqB,IAAI31B,IADjBrjB,MAERggE,IAAmB,CACzB,CAEDt0D,WACI,MAAMuD,EAAKjP,KACXiP,GAAG+wD,IAAmB,EACtB,UACU/wD,GAAG6wD,EACZ,CAAC,MAAOh0D,GACLvE,QAAQE,OAAOqE,EAClB,CACD,MAAMtC,EAASyF,EAAGiyD,iBAKlB,OAHc,MAAV13D,SACMA,GAEFyF,GAAG+wD,EACd,CAEDwB,IAAgBx5D,EAAMquC,EAAUrG,GAC5B,MAAM/gC,EAAKjP,KACNiP,GAAG+pC,GAAmBjpB,IAAI/nB,IAC3BiH,GAAG+pC,GAAmB/rC,IAAIjF,EAAMquC,IAGZ,IAApBrG,EAAQuF,SAAoBtmC,GAAG8wD,KAAwB/3D,IACtDiH,GAAG2wD,KAA0B,IAAItpD,KAAO+G,IAAIrV,EAEpD,CAED+4D,IAAqB/4D,EAAMtG,GACvB,MAAMuN,EAAKjP,KACL6hE,EAAO5yD,EAAGpM,YACVi/D,EAAYD,EAAK3C,IAAyBl2D,IAAIhB,GACpD,QAAiBvD,IAAbq9D,GAA0B7yD,GAAG8wD,KAAwB+B,EAAU,CAC/D,MAAM9xB,EAAU6xB,EAAKN,mBAAmBO,GAClCjI,EAC2B,mBAAtB7pB,EAAQ6pB,UACT,CAAEjrB,cAAeoB,EAAQ6pB,gBACYp1D,IAArCurC,EAAQ6pB,WAAWjrB,cACfoB,EAAQ6pB,UACRxxB,EAEdp5B,GAAG8wD,GAAsB+B,EACzB7yD,EAAG6yD,GAAYjI,GAAWjrB,cAAcltC,EAAOsuC,EAAQ5vC,MAEvD6O,GAAG8wD,GAAsB,IAC5B,CACJ,CAEDqB,IAAqBp5D,EAAMtG,GACvB,MAAMuN,EAAKjP,KACL0hE,EAAezyD,EAAGpM,YAAYu8D,IAC9BpvB,EAAU0xB,GAAc14D,IAAIhB,GAC5B6E,EAAO6yD,yBAAyB13D,EAAMgoC,GAC5C,QAAavrC,IAAToI,IAA0C,IAApBmjC,EAAQuF,QAAkB,CAChD,MAAMskB,OAEEp1D,IADHurC,EAAiB,WAAGnB,YAEdmB,EAAiB,UAClB3H,EACJ05B,EAAYlI,GAAWhrB,YAAYntC,EAAOsuC,EAAQ5vC,MAExD6O,GAAG8wD,GAAsB/3D,EACR,MAAb+5D,EACA9yD,EAAGvC,gBAAgBG,GAEnBoC,EAAGxC,aAAaI,EAAMk1D,GAG1B9yD,GAAG8wD,GAAsB,IAC5B,CACJ,CAEDiC,MACI,MAAM/yD,EAAKjP,KACL6/D,EAAqB,IAAIx8C,IACzBq+C,EAAezyD,EAAGpM,YAAYu8D,IACpC,IAAK,MAAMnwC,KAAKyyC,EAAaz7D,OACrBpF,OAAOirC,OAAO78B,EAAIggB,KAClB4wC,EAAmB5yD,IAAIgiB,EAAGhgB,EAAGggB,WACtBhgB,EAAGggB,IAGd4wC,EAAmB5qD,KAAO,IAC1BhG,GAAG4wD,GAAsBA,EAEhC,CAEDxd,MACI,MAAMpzC,EAAKjP,KACXiP,GAAG6wD,GAAiB,IAAIv4D,SAAS+X,GAAQrQ,EAAG6xD,eAAiBxhD,IAC7DrQ,GAAG+pC,GAAqB,IAAI31B,IAC5BpU,GAAG+yD,KACH/yD,EAAG0kC,eACN,ECzXE,MAAMsuB,mBAAmBC,yBAGxBn5D,eAAeE,OAAO,gBAAiBg5D,WAAY,CAAE/4D,QAAS,WAC9DrI,OAAOC,KAAKmhE,WACf,CAEDp/D,cACIwlB,OACH,CAEU43C,gCACP,MAAO,CAAC,OACX,CAED7pB,yBAAyBpuC,EAAMquC,EAAUC,GAExB,SAATtuC,GAAiBhI,KAAKyzB,KAAK6iB,EAClC,CAEDC,oBACIxqC,KAAKo2D,MAAMniE,MACX,MAAM+H,EAAO/H,KAAKq8B,MAAMt0B,KACpBA,GAAMuS,EAAMsG,mBAAmB5gB,KAAM+H,EAC5C,CAED2pB,WACI,MACMjnB,EADKzK,KACQygB,gBAEnB,OADKhW,GAFMzK,KAEMwoD,iBACV/9C,CACV,CAEG4xB,WACA,OAAOr8B,KAAKqe,QAAQ,UACvB,CAEGxT,YACA,MAAMV,EAAMmQ,EAAMyE,KAAK/e,MACvB,OAAOsa,EAAM0F,OAAO7V,EACvB,CAODkU,QAAQ3U,EAAQ,IACZ,OAAO4Q,EAAM+D,QAAQre,KAAM0J,EAC9B,CAEDgC,WAAWhI,EAAM,IACb,IAAKA,EAAK,OACV,MAAMqE,QAAa+pB,SAASsB,SAAS1vB,EAAK,MAAO,MAAM,GACvD1D,KAAKiL,MAAMlD,EACd,CAEDkD,MAAMlD,GAEF,IAAK/C,MAAMC,QAAQ8C,GAAO,OAAO,EAEjC,MAAMkH,EAAKjP,KAWX,OATA6L,gBAAe,KAEX,MAAMkL,EAAO,GACbhP,EAAKlB,SAAQF,IACToQ,EAAK1F,KAAKpC,GAAGmzD,GAAWz7D,GAAG,IAG/B2T,EAAMoF,QAAQzQ,EAAI8H,EAAKzU,KAAK,MAAM,KAE/B,CACV,CAED8/D,IAAWz7D,GACP,MAAMkT,EAAM,CAAC,WAcb,OAZAhZ,OAAOuM,QAAQzG,GAAGE,SAAQmQ,IACtB,MAAMc,EAAMd,EAAG,GACTpV,EAAMoV,EAAG,GACf,GAAI,SAAWc,EACf,MAAI,aAAeA,EAAY+B,EAAIxI,KAAKyG,QACxC+B,EAAIxI,KAAK,GAAGyG,MAAQlW,KAAO,IAG/BiY,EAAIxI,KAAK,KACTwI,EAAIxI,KAAK1K,EAAEN,MACXwT,EAAIxI,KAAK,aAEFwI,EAAIvX,KAAK,IACnB,ECxFE,MAAM+/D,sBAAsBC,2BAG3Bv5D,eAAeE,OAAO,kBAAmBo5D,cAAe,CAAEn5D,QAAS,aACnErI,OAAOC,KAAKuhE,cACf,CAEDx/D,cACIwlB,OACH,CAEU43C,gCACP,MAAO,CAAC,OACX,CAED7pB,yBAAyBpuC,EAAMquC,EAAUC,GAExB,SAATtuC,GAAiBhI,KAAKyzB,KAAK6iB,EAClC,CAEDC,oBACIxqC,KAAKo2D,MAAMniE,KACd,CAEG6K,YACA,MAAMV,EAAMmQ,EAAMyE,KAAK/e,MACvB,OAAOsa,EAAM0F,OAAO7V,EACvB,CAEDuB,WAAWhI,EAAM,IACb,IAAKA,EAAK,OACV,MAAMqE,QAAa+pB,SAASsB,SAAS1vB,EAAK,MAAO,MAAM,GACvD1D,KAAKiL,MAAMlD,EACd,CAEDkD,MAAMlD,GAEF,IAAK/C,MAAMC,QAAQ8C,GAAO,OAAO,EAEjC,MAAMkH,EAAKjP,KAWX,OATA6L,gBAAe,KAEX,MAAMkL,EAAO,GACbhP,EAAKlB,SAAQF,IACToQ,EAAK1F,KAAKpC,GAAGmzD,GAAWz7D,GAAG,IAG/B2T,EAAMoF,QAAQzQ,EAAI8H,EAAKzU,KAAK,MAAM,KAE/B,CACV,CAED8/D,IAAWz7D,GACP,MAAMkT,EAAM,CAAC,WAeb,OAbI7Y,EAAOoC,SAASuD,KAAIA,EAAI,CAAEjF,MAAOiF,IAErC9F,OAAOuM,QAAQzG,GAAGE,SAAQmQ,IACtB,MAAMc,EAAMd,EAAG,GACTpV,EAAMoV,EAAG,GACf,GAAI,SAAWc,EACf,MAAI,aAAeA,EAAY+B,EAAIxI,KAAKyG,QACxC+B,EAAIxI,KAAK,GAAGyG,MAAQlW,KAAO,IAG/BiY,EAAIxI,KAAK1K,EAAEN,MACXwT,EAAIxI,KAAK,KAEFwI,EAAIvX,KAAK,IACnB,ECzEE,MAAMigE,uBAAuB5C,cAElC9/D,kBAAoB,CAClBypD,SAAU,CAAElpD,KAAMqB,SAClBw4C,UAAW,CAAE75C,KAAMqB,SACnB8nD,WAAY,CAAEnpD,KAAMqB,SACpBioD,OAAQ,CAAEtpD,KAAMqB,SAChBwnD,KAAM,CAAE1T,SAAS,IAGnBO,IACAC,IAEAysB,IACAC,IACAC,IACAC,IACAC,IACAC,IAEAhgE,cACEwlB,QACAroB,MAAKwiE,GAAc,IAAI1G,qBAAqB97D,KAC7C,CAEDu2C,oBACEluB,MAAMkuB,oBACFv2C,KAAKw2C,YAAYx2C,KAAKy2C,QAC3B,CAEDC,uBACEtzB,SAASuzB,kBAAkB32C,MAC3BqoB,MAAMquB,sBACP,CAEDI,WAAWvR,GAcT,OAZAld,MAAMyuB,WAAWvR,GAEbA,EAAQxV,IAAI,SAAW/vB,KAAKipD,MAAsB,SAAdjpD,KAAKI,OAC3CJ,KAAKgpD,YAAchpD,KAAKipD,KACxBjpD,MAAKyiE,KAAoB,IAAItG,eAAen8D,MAC5CA,MAAKyiE,GAAgB7F,aAGnB58D,KAAK+W,OACP/W,MAAK6iE,KAAoB,IAAIvE,eAAet+D,OAGtCA,KAAKI,MACX,IAAK,OACHJ,MAAK4iE,KAAoB,IAAIxE,eAAep+D,MAC5C,MACF,IAAK,WACHA,MAAK0iE,KAAwB,IAAI3E,mBAAmB/9D,MACpD,MACF,IAAK,SACHA,MAAK2iE,KAAsB,IAAI9E,iBAAiB79D,MAGrD,CAED62C,aAAatR,GACXld,MAAMwuB,aAAatR,GACfvlC,KAAKi6C,WAAWj6C,KAAKglC,QACzB,MAAMj9B,EAAO/H,KAAKq8B,MAAMt0B,KACpBA,GAAMuS,EAAMsG,mBAAmB5gB,KAAM+H,EAC1C,CAKD0uC,SACEz2C,MAAK+1C,KAAe,IAAIzG,oBAAoBtvC,KAC7C,CAMDs7B,OAAOxvB,GACL9L,MAAK+1C,IAAYza,OAAOxvB,EACzB,CAUDgf,aAAatqB,EAAIkB,GAEf,OADA1B,MAAK81C,KAAa,IAAIhH,kBAAkB7/B,IACjCjP,MAAK81C,GAASx+B,MAAM9W,EAAIkB,EAChC,CAODsd,QAAQtV,EAAQ,IACd,OAAO4Q,EAAM0E,QAAQhf,KAAM0J,EAC5B,CAOD2U,QAAQ3U,EAAQ,IACd,OAAO4Q,EAAM+D,QAAQre,KAAM0J,EAC5B,CAODo5B,OAAO5d,GAAU,EAAMC,GAAW,EAAOpd,GACvC/H,KAAKyvB,KAAK,SAAU1nB,EAAMmd,EAASC,GAAU,EAC9C,CAUDsK,KAAKznB,EAAMhG,EAAM,GAAIkjB,GAAU,EAAOC,GAAW,EAAOC,GAAa,GACnE,OAAOhC,SAAS8C,KAAKlmB,KAAMgI,EAAMhG,EAAKkjB,EAASC,EAAUC,EAC1D,CAQDmyB,UAAUvvC,EAAO,GAAIV,EAAU,GAC7B,OAAO8b,SAASc,KAAKlkB,KAAMgI,EAAMV,EAClC,CAQD+c,KAAKrc,EAAMgsB,GACT,OAAOh0B,KAAKwjB,OAAOxb,EAAMgsB,GAAM,EAChC,CAQDpkB,GAAG5H,EAAMgsB,EAAM3P,GAAO,GACpB,OAAOrkB,KAAKwjB,OAAOxb,EAAMgsB,EAAM3P,EAChC,CAQDmL,IAAIxnB,EAAMgsB,GACR,OAAOh0B,KAAKykB,SAASzc,EAAMgsB,EAC5B,CAMDnQ,QAAQ/X,GACNsX,SAASS,QAAQ/X,EAClB,CAQD0X,OAAOxb,EAAMgsB,EAAM3P,GAAO,GACxB,OAAOrkB,KAAK8xC,YAAY9xC,KAAMgI,EAAMgsB,EAAM3P,EAC3C,CAQDI,SAASzc,EAAMgsB,GACb,OAAOh0B,KAAK+xC,YAAY/xC,KAAMgI,EAAMgsB,EACrC,CAWD8d,YAAYhyC,EAAIkI,EAAO,GAAIvH,EAAI4jB,GAAO,GACpC,OAAOjB,SAAS8E,OAAOloB,KAAMF,EAAIkI,EAAMvH,EAAI4jB,EAC5C,CASD0tB,YAAYjyC,EAAIkI,EAAO,GAAIvH,GACzB,OAAO2iB,SAAS9F,OAAOtd,KAAMF,EAAIkI,EAAMvH,EACxC,CAEG47B,WACF,OAAOr8B,KAAKqe,QAAQ,UACrB,CAEGxT,YACF,MAAMV,EAAMmQ,EAAMyE,KAAK/e,MACvB,OAAOsa,EAAM0F,OAAO7V,EACrB,CAEGq3B,UACF,OAAOnZ,MAAM3mB,KACd,CAEGA,YACF,OAAO1B,MAAKyiE,GAAkBziE,MAAKyiE,GAAgB/gE,MAAQ2mB,MAAM3mB,KAClE,CAEGA,UAAME,GACRymB,MAAM3mB,MAAQE,CACf,CAKG40C,iBACF,OAAOx2C,KAAK6N,QAAQu9B,QACrB,CAKGqM,gBACF,OAAOz3C,OAASuG,SAASgU,aAC1B,CAKG2G,UACF,OAAOlhB,KAAKmc,QAAQra,aACrB,CAKGkb,gBACF,OAAOhd,KAAK6C,YAAYmF,IACzB,CAEGgwC,kBACF,MAAMjhC,EAAO,IAAIuD,EAAMmC,YAAYzc,OAAO0C,KAAIiE,GAAKA,EAAE9D,aAAak6B,aAAYn3B,QAAOe,GAAKA,IAE1F,OADAoQ,EAAK1F,KAAKrR,KAAK6C,aAAak6B,YACrB5mB,OAAO8hC,aAAalhC,EAC5B,CAODlX,qBAAqBmC,GACnB,MAAM+U,EAAO,IAAIuD,EAAMmC,YAAYza,IAAMU,KAAIiE,GAAKA,EAAEo2B,aAAYn3B,QAAOe,GAAKA,IAE5E,OADAoQ,EAAK1F,KAAKrP,EAAIa,aAAak6B,YAAc/6B,EAAI+6B,YACtC5mB,OAAO8hC,aAAalhC,EAC5B,CAODlX,cAAcmI,EAAMS,GACbM,eAAeC,IAAIhB,IACtBe,eAAeE,OAAOjB,EAAMS,GAASzI,KAAM,CAAEkJ,QAAS,SAEzD,QAGCq5D,eAAet5D,OAAO,eAAgBs5D,eACvC,ECjUI,MAAMO,4BAA4BztB,UAEvCx1C,kBAAoB,CAClB8wC,QAAS,CAAE,EACX5oC,KAAM,CAAE3H,KAAM4E,OACd0oC,MAAO,IAAKA,GACZypB,QAAS,CAAE5hB,SAAS,GACpBwtB,QAAS,CAAExtB,SAAS,EAAMn1C,KAAM4N,SAGlCnL,cACEwlB,QACA,MAAMpZ,EAAKjP,KACXiP,EAAG8zD,QAAU,EACb9zD,EAAGkoD,QAAU,gBACbloD,GAAG+zD,IACJ,CAEDlsB,WAAWvR,GACTld,MAAMyuB,WAAWvR,GACjBvlC,MAAKgjE,IACN,CAED/rB,WACE,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI,+CAA+CjM,GAAG0jC,YAAkBhK,EAAU15B,EAAGuoC;QACxFpmC,EAAOnC,EAAGlH,MAAQ,IAAK61B,GAASA,IAAOA,GAAS1iB,CAAI;;gBAE5C0iB,EAAKv1B;iBACJu1B,EAAK8P;gBACN9P;kBACEA,EAAKpjB;oBACHojB,EAAKu5B,SAAWloD,EAAGkoD;oBACnBv5B,EAAKmlC,SAAW9zD,EAAG8zD;YAC3BnlC,EAAKqlC;;;kBAId,CAEDhyB,WAAWlpC,GACT/H,KAAK+H,KAAOA,CACb,CAEDi7D,MACE,MAAM/zD,EAAKjP,KACXiP,EAAGoN,SAAS,sBAAsBxV,SAAQ/G,IACxCA,EAAGq3D,QAAUloD,EAAGkoD,QAChBr3D,EAAGijE,QAAU9zD,EAAG8zD,QAChBjjE,EAAG4tC,MAAQz+B,EAAGy+B,KAAK,GAEtB,CAEDiF,IAAS7mC,GACP,MAAMhM,EAAKgM,EAAE6B,OAAO0Q,QAAQ,qBAC5Bve,GAAIw7B,OAAOxvB,EACZ,QAGC9L,KAAKiJ,OAAO,gBACb,EC1DI,MAAMi6D,gCAAgC7tB,UAE3Cx1C,kBAAoB,CAClBwI,KAAM,CAAE,EACRqlC,MAAO,IAAKA,GACZ3lC,KAAM,CAAE4B,OAAO,EAAMvJ,KAAMS,QAC3B2Z,OAAQ,CAAE+6B,SAAS,EAAMn1C,KAAMqB,SAC/B01D,QAAS,CAAExtD,OAAO,EAAMvJ,KAAMqB,SAC9BshE,QAAS,CAAEp5D,OAAO,EAAMvJ,KAAM4N,SAGhCnL,cACEwlB,QACAroB,KAAK+H,KAAO,EACb,CAEDkvC,WACE,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI,2CAA2CgtB,EAASj5B,EAAGkoC,yBAAyBxO,EAAU15B,EAAGuoC;;UAElGvoC,GAAG85C;;wDAE2C95C,GAAGtJ;aAExD,CAEDwxC,cAME,MAJY,IACP9uB,MAAM8uB,cACT38B,OAHSxa,KAGIwa,OAGhB,CAEGuuC,SACF,MAAM95C,EAAKjP,KACX,OAAIiP,EAAGuL,OAAeU,CAAI,iBAC1BjM,EAAGlH,KAAKrE,IAAMuL,EAAGlH,KAAKrE,KAAOuL,EAAG5G,KAChC4G,EAAGlH,KAAK2jC,KAAO,QACRokB,aAAaqT,SAASl0D,EAAGlH,KAAM,CAAA,GACvC,CAEGpC,SACF,MAAMsJ,EAAKjP,KACX,OAAOiP,EAAG4O,oBAAsB5O,EAAGkoD,QAAUj8C,CAAI,4BAA4BjM,EAAGy+B,kBAAkBz+B,EAAG8zD,kBAAkB9zD,EAAGkoD,sBAAwB,EACnJ,CAED77B,OAAOxvB,GACL+uB,mBAAmB6Z,QAAQ10C,KAAK0J,MAAM,KAAK,GAAOoC,EACnD,QAGC9L,KAAKiJ,OAAO,qBACb,ECnDI,MAAMm6D,aAETvgE,YAAYwgE,EAAMC,GACdtjE,KAAKqjE,KAAOA,EACZrjE,KAAKsjE,UAAYA,CACpB,CAEDzjE,gBAAgB0jE,EAAUD,GACtB,OAAOF,cAAaI,GAAkBD,EAAUD,EACnD,CAEDzjE,YAAY4jE,GACR,OAAOz+D,MAAMgG,KAAKy4D,GAAO79D,QAAOwgD,GAAKA,aAAasd,OAAMhhE,KAAI0jD,GAAK,IAAIgd,aAAahd,IACrF,CAEGud,eACA,MAAM10D,EAAKjP,KACX,OAAOiP,EAAGq0D,UAAY,GAAGr0D,EAAGq0D,aAAar0D,EAAGo0D,KAAKr7D,OAASiH,EAAGo0D,KAAKr7D,IACrE,CAED47D,UACI,MAAO,CAAC,YAAa,YAAa,YAAa,aAAc,iBAAiB15D,SAASlK,KAAKqjE,KAAKjjE,KACpG,CAEDyjE,UACI,MAAO,CAAC,YAAa,mBAAmB35D,SAASlK,KAAKqjE,KAAKjjE,KAC9D,CAEDP,UAAyB0jE,EAAUD,GAC/B,OAAIA,GAAaF,cAAaU,GAAaP,GAChCH,cAAaW,GAAU,GAAIX,cAAaY,GAAOT,IAEnDh8D,QAAQC,QAAQ47D,cAAah+B,GAASpgC,MAAMgG,KAAKu4D,EAASE,OAAS,KAAK/gE,KAAI0jD,GAAK,IAAIgd,aAAahd,KAC5G,CAEDvmD,UAAewjE,GACX,OAAOA,EAAKr7D,KAAKpE,WAAW,IAC/B,CAED/D,UAAgB4jE,GACZ,OAAOz+D,MAAMgG,KAAKy4D,GAAO79D,QAAOy9D,IAASD,cAAaa,GAAQZ,IACjE,CAEDxjE,UAAgBu4D,GACZ,OAAO,IAAI7wD,SAAQ,CAAUC,EAASC,KAClC2wD,EAAMiL,KAAK77D,EAASC,EAChC,GACK,CAED5H,UAAmBu4D,GACf,OAAO,IAAI7wD,SAAQ,CAAUC,EAASC,KAClC,MAAM+B,EAAS,GACT45B,EAASg1B,EAAM8L,eACf3/B,KAAO,KACTnB,EAAO+gC,aAAY/2D,IACXA,EAAQlJ,OAAS,GACjBsF,EAAO6H,QAAQjE,GACfm3B,QAEA/8B,EAAQgC,EACX,GACF/B,EAAO,EAEd88B,MACZ,GACK,CAED1kC,gBAAuB4yB,EAAMrlB,GACzB,MAAMg3D,EAAU,GAChB,IAAK,MAAMhM,KAASgL,cAAah+B,GAASh4B,GACtC,GAAIgrD,EAAM0L,YAAa,CACnB,MAAM12D,QAAgBg2D,cAAaiB,GAAYjM,GACzCrhD,QAAaqsD,cAAaW,GAAU3L,EAAMuL,SAAUv2D,GAC1Dg3D,EAAQ/yD,QAAS,EACjC,KAAmB,CACH,MAAMgyD,QAAaD,cAAakB,GAASlM,GACzCgM,EAAQ/yD,KAAK,IAAI+xD,aAAaC,EAAM5wC,GACvC,CAEL,OAAO2xC,CACV,CAEDvkE,UAAoB0jE,GAChB,OAAOv+D,MAAMgG,KAAKu4D,EAAStiD,OAAOlR,MAAM6tB,IACpC,MAAMw6B,EAAQx6B,EAAK2mC,kBAAoB3mC,EAAK2mC,mBAC5C,OAAOnM,GAASA,EAAM0L,WAAW,GAExC,CAEDjkE,UAAc0jE,GACV,OAAOv+D,MAAMgG,KAAKu4D,EAAStiD,OACtBve,KAAKk7B,GAASA,EAAK2mC,qBACnB3+D,QAAOwyD,GAAkB,MAATA,GACxB,ECrFE,MAAMoM,yBAAyBnvB,UAElCx1C,aAAe,sCACfA,WAAa,wCAEbA,kBAAoB,CAChB4kE,QAAS,CAAE32D,UAAW,YACtBi8C,SAAU,CAAEj8C,UAAW,aACvB42D,SAAU,CAAE52D,UAAW,aAEvB2kC,SAAU,CAAE8C,SAAS,EAAMn1C,KAAMqB,SACjC6hE,UAAW,CAAE/tB,SAAS,EAAMn1C,KAAMqB,SAClCuG,KAAM,CAAE,EACRsZ,MAAO,CAAE,EACT1V,OAAQ,CAAE,EACVhG,OAAQ,CAAE,GAGd++D,IAAUv8B,IACVw8B,IAAUx8B,IACVy8B,IAAY,KAEZhiE,cACIwlB,QACAroB,KAAK0a,IAAM8pD,iBAAiB1f,IAC5B9kD,KAAK0kE,SAAW,SAChB1kE,KAAKyyC,UAAW,EAChBzyC,KAAKshB,MAAQkjD,iBAAiBM,MAC9B9kE,KAAK4F,OAAS,yBACd5F,KAAKsjE,WAAY,CACpB,CAEDrsB,WACI,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI;oCACiBgtB,EAASj5B,EAAGkoC;mBAC7BxO,EAAU15B,EAAGuoC;sBACVvoC,GAAG0jC;0BACC1jC,GAAG81D;yBACJ91D,GAAG81D;0BACF91D,GAAG+1D;qBACR/1D,GAAGg2D;sBACFh2D,GAAGi2D;uBACFj2D,GAAGi5C;yCACej5C,EAAG86C,kBAAkB96C,EAAGjH,SAASiH,EAAGwlB,UAAUxlB,EAAGqS;qBACrEooB,EAAIz6B,GAAG21D;sCACU31D,EAAGrD;yBAChBqD,EAAGy1D;wBACJz1D,EAAGjH;sBACLiH,EAAGjH;kBACPiH,EAAGwjC,SAAW,WAAa;kBAC3BxjC,EAAGq0D,UAAY,4BAA8B;mBAC5C55B,EAAIz6B,GAAG01D,0BAA+B11D,EAAGw1D;;SAGvD,CAEGE,aACA,OAAO3kE,MAAK2kE,GAAQjjE,KACvB,CAEGkjE,aACA,OAAO5kE,MAAK4kE,GAAQljE,KACvB,CAEDixC,IAAS7mC,GACL9L,KAAK4kE,OAAOr8D,OACf,CAEDw8D,IAAaj5D,GACT,MAAMmD,EAAKjP,KACPiP,GAAG41D,IAAW/8D,aAAamH,GAAG41D,IAClC51D,GAAG41D,GAAYl9D,YAAW,IAAMsH,EAAGvC,gBAAgB,UAAU,KAC7D,MAAM62D,EAAWz3D,EAAEq5D,aACd5B,GAAat0D,GAAGm2D,GAAS7B,KAC9BA,EAAS8B,WAAa,OACtBp2D,EAAGxC,aAAa,QAAS,IACzBX,EAAEgZ,iBACL,CAEDkgD,IAAal5D,GAELA,EAAEq5D,eAAcr5D,EAAEq5D,aAAaE,WAAa,QADrCrlE,KAER0M,gBAAgB,SACnB0W,SAASS,QAAQ/X,EACpB,CAEDm5D,IAAQn5D,GACJ,MAAMmD,EAAKjP,KACXiP,EAAGvC,gBAAgB,SACnB,MAAM62D,EAAWz3D,EAAEq5D,aACd5B,GAAat0D,GAAGm2D,GAAS7B,KAC9Bt0D,GAAGiZ,GAAQq7C,GACXngD,SAASS,QAAQ/X,GACpB,CAEDo5D,IAASp5D,GAEL,IAAKA,EAAEw5D,cAAe,OACtB,IAAKx5D,EAAEw5D,cAAcrkD,MAAO,OAC5B,MAAMoiD,EAHKrjE,MAGKulE,GAAYz5D,EAAEw5D,cAAcrkD,OAC5C,IAAKoiD,EAAM,OACX,MAAMI,EAAQ,CAACJ,GALJrjE,MAMRkoB,GAAQu7C,GACXrgD,SAASS,QAAQ/X,EACpB,CAEDo8C,IAAUp8C,GACN,MAEM23D,EAFKzjE,KACM4kE,OACGnB,MACfA,GAA0B,IAAjBA,EAAMv/D,QAHTlE,MAIRkoB,GAAQu7C,EAEd,CAED2B,IAAS7B,GACL,OAAOv+D,MAAMgG,KAAKu4D,EAASiC,OAAOt7D,SAAS,QAC9C,CAEDq7D,IAAYtkD,GACR,MACMwkD,EADKzlE,KACI4F,OAAS,IAAIrB,OADjBvE,KAC2B4F,QAAU,KAChD,IAAK,MAAMg4B,KAAQ3c,EACf,GAAkB,SAAd2c,EAAK8nC,KAAiB,CACtB,IAAKD,EAAK,OAAO7nC,EAAK+nC,YACtB,GAAIF,EAAI9hE,KAAKi6B,EAAKx9B,MAAO,OAAOw9B,EAAK+nC,WACxC,CAEL,OAAO,IACV,CAED/5D,IAAQg6D,GACJ,MACMT,EAAe,IAAIU,aACzBD,EAAY/+D,SAAQC,GAAKq+D,EAAalkD,MAAM5D,IAAIvW,EAAEu8D,QAFvCrjE,KAGR4kE,OAAOnB,MAAQ0B,EAAa1B,MAHpBzjE,KAIR2kE,OAAO/kD,YAAcgmD,EAAYljE,KAAIoE,GAAKA,EAAEu8D,KAAKr7D,OAAM1F,KAAK,KAClE,CAEDoJ,SAAco6D,GACV,MAAM72D,EAAKjP,KAEL4lE,EADYE,aAAuBD,mBAE7BzC,aAAaW,SAAS+B,EAAa72D,EAAGq0D,WAC5CF,aAAap4D,KAAK86D,GAEP72D,EAAGwgB,KAAK,SAAU,CAAEm2C,gBAAe,GAAM,GAAO,IACjDA,EAAY1hE,SACxB+K,GAAGrD,GAAQg6D,GACX32D,EAAGwgB,KAAK,WAAY,CAAEm2C,gBAAe,GAE5C,CAED/lE,cAAgB6a,CAAG;;;;;;;;;gEAYf1a,KAAKiJ,OAAO,aACf,EC1KE,MAAM88D,qBAAqB1wB,UAE9Bx1C,kBAAoB,CAChBy5C,SAAU,CAAC/D,SAAQ,EAAMn1C,KAAK4N,QAC9B7K,OAAQ,CAACoyC,SAAQ,IAGrB/0C,GAAM,EAENqC,cACIwlB,QACAroB,KAAKs5C,SAAW,EAChBt5C,KAAKmD,OAASnC,EAAOmC,MACxB,CAEDozC,oBACIluB,MAAMkuB,oBACNv2C,KAAK+wB,OACR,CAED2lB,uBACI12C,KAAKw1D,OACLntC,MAAMquB,sBACT,CAEDO,WAEI,OADa,IAAIz1C,MACLwkE,mBAAmBhmE,KAAKmD,OACvC,CAED4tB,QACI,MAAM9hB,EAAKjP,KACPiP,EAAGqqC,SAAU,GAAgB,IAAXrqC,GAAGzO,EACrByO,GAAGzO,EAAMmrB,YAAY1c,GAAG8c,GAAQnkB,KAAKqH,GAAmB,IAAdA,EAAGqqC,UAE7CrqC,EAAG0kC,eAEV,CAED6hB,OACIjtC,cAAcvoB,MAAKQ,GACnBR,MAAKQ,EAAM,CACd,CAEDurB,MACGlM,uBAAsB,IAAM7f,KAAK2zC,iBACnC,QAGG3zC,KAAKiJ,OAAO,iBACf,EC1BE,MAAMg9D,qBAAqB5wB,UAE9Bx1C,kBAAoB,CAChB6B,MAAO,CAAE,EACTyB,OAAQ,CAAE,EACVyB,OAAQ,CAAE,GAGd/B,cACIwlB,QACAroB,KAAKmD,OAASgB,UAAUhB,OACxBnD,KAAK0B,MAAQ,IAAIF,IACpB,CAEDy1C,WACI,OAAOj3C,KAAKwJ,MACf,CAEGA,aACA,MAAMyF,EAAKjP,KACL4B,EAAMqN,EAAGkF,KACf,OAAIlF,EAAGrK,OAAehD,EAAIgD,OAAOqK,EAAGrK,QAC7B,IAAIF,KAAKG,eAAeoK,EAAG9L,OAAQ8L,EAAGpB,SAASjJ,OAAOhD,EAChE,CAEGuS,WACA,MACMxN,EAAInF,KAAK8D,MADJtF,KACa0B,OAAS,IAAIF,MAC/B2S,EAAO,IAAI1D,OAAO9J,GAExB,OADAwN,EAAKhR,OAHMnD,KAGMmD,OACVgR,CACV,QAIGnU,KAAKiJ,OAAO,iBACf,EC9DE,MAAMi9D,qBAAqB7wB,UAE9Bx1C,kBAAoB,CAChB8U,OAAQ,CAACvU,KAAM4N,SAGnBnL,cACIwlB,QACAroB,KAAK2U,OAAS,CACjB,CAEDsiC,WACI,OAAOj3C,KAAK0B,KACf,CAEGA,YACA,OAAO1B,KAAKq9C,QAAUr9C,KAAK2U,MAC9B,CAEG0oC,cACA,OAAO,IAAI77C,MAAO+P,aACrB,QAGGvR,KAAKiJ,OAAO,iBACf,ECrBE,MAAMk9D,yBAAyB9wB,UAElCx1C,kBAAoB,CAChB6B,MAAO,CAAE,EACTyB,OAAQ,CAAE,EACViT,SAAU,CAAE,GAGhB6gC,WACI,OAAOj3C,KAAK4E,MACf,CAEGorC,SAEA,OAAOnvC,OAAOoK,MADHjL,KACY6N,QAAS,CAAEyJ,MAAO,WAAYlB,SAD1CpW,KACuDoW,UACrE,CAEGxR,aACA,MAAMqK,EAAKjP,KACX,OAAO,IAAI0E,KAAKC,aAAasK,EAAG9L,OAAQ8L,GAAG+gC,IAAUprC,OAAOqK,EAAGvN,MAClE,QAGG1B,KAAKiJ,OAAO,qBACf,EClCE,MAAMm9D,mBAGLn7C,cAAcI,MAAM+6C,YAAY9uD,MACnC,CAEUA,mBACP,MAAO,22DAqEV,ECrEU,MAAM+uD,sBAAsBhxB,UAEvCx1C,gBAAkB,gBAClBA,gBAAkB,kBAClBA,iBAAmB,oBAEnBA,gBAAkB,6BAClBA,iBAAmB,yBAEnBA,kBAAoB,CAChByhB,MAAO,CAAE,EACT84B,KAAM,CAAE,EACR1M,MAAO,CAAE,EACT44B,QAAS,CAAEx4D,UAAW,YACtBy4D,SAAU,CAAEz4D,UAAW,cAG3BjL,cACIwlB,QACA,MAAM5f,EAAQ49D,cACdrmE,KAAKo6C,KAAO3xC,EAAM+9D,SAClBxmE,KAAKsmE,QAAU79D,EAAMg+D,SACrBzmE,KAAKumE,SAAW99D,EAAMs8C,SACzB,CAED9N,WACI,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI;iEAC8CytB,EAAU15B,EAAGuoC;;yEAELvoC,EAAGq3D,WAAWr3D,EAAGy+B,OAAS24B,cAAcG;sBAC3Fv3D,GAAGisC;;;qCAGYjsC,EAAGs3D,aAAat3D,EAAGwlB,UAAUxlB,EAAGqS;;SAGhE,CAED45B,MACI,OAAOl7C,KAAKo6C,KAAOl/B,CAAI,kBAAkBlb,KAAKo6C,mBAAqBl/B,CAAI,2BAC1E,QAGGlb,KAAKiJ,OAAO,UACf,EC1CU,MAAMy9D,uBAAuBrxB,UAExCx1C,WAAa,iGAEb4W,KAAU,EAEV5T,cACIwlB,OACH,CAED0wB,aAAaC,GACT,OAAOh5C,KAAK2mE,MAAMziE,OAAS,CAC9B,CAED+yC,WAEI,OAAO/7B,CAAI,eAAegtB,EADfloC,KAC2Bm3C,yBAAyBxO,EADpD3oC,KACiEw3C,iCAC/E,CAEDL,cACI,OAAOn3C,KAAKq3C,OAAOqvB,eAAe5hB,IAAKz8B,MAAM8uB,cAChD,CAEGwvB,YACA,OAAO3mE,KAAKqc,SAAS,UACxB,CAEGnY,aACA,OAAOlE,KAAK2mE,MAAMziE,MACrB,CAEGuS,YACA,OAAOzW,MAAKyW,EACf,CAEGA,UAAM7U,EAAM,GAERA,EAAM,GAAKA,GADJ5B,KACckE,SADdlE,MAERyW,GAAS7U,EACf,CAEGy7C,cAEA,OADWr9C,KACD2mE,MADC3mE,MACQyW,GACtB,CAEGmwD,cACA,OAAuB,IAAhB5mE,MAAKyW,EACf,CAEGowD,aACA,OAAO7mE,MAAKyW,KAAWzW,KAAKkE,OAAS,CACxC,CAED+H,OACI,MAAMgD,EAAKjP,KACX,GAAwB,IAApBiP,EAAG03D,MAAMziE,OACb,OAAI+K,EAAG43D,SACH53D,GAAGwH,IAAW,IAAGxH,EAAGouC,QAAQ3P,MAAQ24B,cAAcS,WACtD73D,EAAGwH,QACHxH,EAAGouC,QAAQ3P,MAAQ24B,cAAcU,SAC1B93D,EAAGouC,QACb,CAEDpe,WACI,MAAMhwB,EAAKjP,KACX,GAAwB,IAApBiP,EAAG03D,MAAMziE,OACb,OAAI+K,EAAG23D,UACP33D,EAAGouC,QAAQ3P,MAAQ24B,cAAcG,SACjCv3D,EAAGwH,QACHxH,EAAGouC,QAAQ3P,MAAQ24B,cAAcU,SAC1B93D,EAAGouC,QACb,CAEDxoB,QACI,MAAM5lB,EAAKjP,KACXiP,EAAG03D,MAAM9/D,SAAQmQ,GAAMA,EAAG02B,MAAQ24B,cAAcG,WAChD3mD,uBAAsB,KAClB5Q,GAAGwH,GAAS,EACZxH,EAAGouC,QAAQ3P,MAAQ24B,cAAcU,QAAQ,GAEhD,QAIG/mE,KAAKiJ,OAAO,WAAYy9D,eAC3B,ECtGE,MAAMM,8BAA8B3xB,UAEvCx1C,iBAAmB,+BACnBA,kBAAoB,mDACpBA,eAAiB,6BAEjBA,oBAAsB,mDACtBA,qBAAuB,kDACvBA,kBAAoB,iDAEpBA,oBAAsB,kCACtBA,qBAAuB,sDACvBA,kBAAoB,gCAEpBA,eAAiBmnE,sBAAsBC,WAEvCpnE,kBAAoB,CAChBi3B,SAAU,CAAEye,SAAS,GACrBrqC,OAAQ,CAAEqqC,SAAS,EAAMn1C,KAAMqB,UAGnCsV,IAAQ,IAAIT,IAEZzT,cACIwlB,QACAroB,KAAK0a,IAAM,KACd,CAEDu8B,WAEI,OAAO/7B,CAAI,cAAcytB,EADd3oC,KAC2Bw3C;2CACHtP,EAFxBloC,KAEoCm3C;;eAGlD,CAEDA,cAEI,OADWn3C,KACDq3C,OADCr3C,MACSknE,GAAc7+C,MAAM8uB,cAC3C,CAEG+vB,SACA,MAAMz+D,EAAQu+D,sBACRplE,EAAM5B,KAAK82B,UAAYruB,EAAM0+D,QACnC,OAAOvlE,EAAIkV,QAAQ,KAAO,GAAKrO,EAAM7G,GAAO6G,EAAM7G,GAAOA,CAC5D,CAEDslB,QACIlnB,KAAKqc,SAAS,YAAYxV,SAAQ/G,GAAMA,EAAGsnE,WAC9C,CAEDphB,KAAK1kC,EAAOs3B,EAASQ,EAAU9xC,EAASqpB,EAAOqf,GAC3C,OAAOhwC,KAAK4a,QAAQ0G,EAAOs3B,EAAS,eAAgBQ,EAAU9xC,EAASqpB,EAAOqf,EACjF,CAEDq3B,QAAQ/lD,EAAOs3B,EAASQ,EAAU9xC,EAASqpB,EAAOqf,GAC9C,OAAOhwC,KAAK4a,QAAQ0G,EAAOs3B,EAAS,kBAAmBQ,EAAU9xC,EAASqpB,EAAOqf,EACpF,CAEDxqC,KAAK8b,EAAOs3B,EAASQ,EAAU9xC,EAASqpB,EAAOqf,GAC3C,OAAOhwC,KAAK4a,QAAQ0G,EAAOs3B,EAAS,kBAAmBQ,EAAU9xC,EAASqpB,EAAOqf,EACpF,CAEDs3B,OAAOhmD,EAAOs3B,EAASQ,EAAU9xC,EAASqpB,EAAOqf,GAC7C,OAAOhwC,KAAK4a,QAAQ0G,EAAOs3B,EAAS,iBAAkBQ,EAAU9xC,EAASqpB,EAAOqf,EACnF,CAEDu3B,QAAQjmD,EAAOs3B,EAASQ,EAAU9xC,EAASqpB,EAAOqf,GAC9C,OAAOhwC,KAAK4a,QAAQ0G,EAAOs3B,EAAS,kBAAmBQ,EAAU9xC,EAASqpB,EAAOqf,EACpF,CAEDw3B,UAAUlmD,EAAOs3B,EAASQ,EAAU9xC,EAASqpB,EAAOqf,GAChD,OAAOhwC,KAAK4a,QAAQ0G,EAAOs3B,EAAS,oBAAqBQ,EAAU9xC,EAASqpB,EAAOqf,EACtF,CAED0P,KAAKp+B,EAAOs3B,EAASQ,EAAU9xC,EAASqpB,EAAOqf,GAC3C,OAAOhwC,KAAK4a,QAAQ0G,EAAOs3B,EAAS,eAAgBQ,EAAU9xC,EAASqpB,EAAOqf,EACjF,CAEDy3B,MAAMnmD,EAAOs3B,EAASQ,EAAU9xC,EAASqpB,EAAOqf,GAC5C,OAAOhwC,KAAK4a,QAAQ0G,EAAOs3B,EAAS,gBAAiBQ,EAAU9xC,EAASqpB,EAAOqf,EAClF,CAgBDtkC,cAAc4V,EAAQ,GAAIs3B,EAAU,GAAIl+B,EAAM,GAAI0+B,GAAW,EAAO9xC,EAAU,EAAGqpB,EAAQ,GAAKqf,GAC1F,IAAK4I,EAAS,OACd,MAAM3pC,EAAKjP,KACX,GAAIiP,EAAG/D,OAAQ,CACX,IAAIuM,QAAYuvD,sBAAsBU,oBAEtC,GADIjwD,IAAKA,EAAMxI,GAAG04D,GAAYrmD,EAAOs3B,EAAStxC,EAASqpB,EAAOqf,IAC1Dv4B,EAAK,OAAOA,CACnB,CACD,OAAOxI,GAAG24D,GAAStmD,EAAOs3B,EAASl+B,EAAK0+B,EAAU9xC,EAASqpB,EAC9D,CAEDi3C,IAAStmD,EAAOs3B,EAASl+B,EAAK0+B,EAAU9xC,EAASqpB,GAC7C,MAAM1hB,EAAKjP,KACL8F,EAAM,kBAAkB4U,cAAgB0+B,EAAW,WAAa,eAAe9xC,cAAoBqpB,eAAmBioB,aAAmBt3B,cAAkBrS,EAAG9L,uBAC9JrD,EAAKwa,MAAMhV,MAAMQ,GAAK,GAO5B,OANA+Z,uBAAsBnU,gBACZuD,GAAG0hB,GAAOA,GAChB,MAAMk3C,EAAQ54D,GAAG64D,GACbD,IAAU54D,GAAI1C,OAAOU,IAAI46D,EAAO,QAAS,mBAAmB54D,EAAGyL,OAAOzL,EAAG6nB,YAC7E+wC,EAAM9rD,YAAYjc,EAAG,IAElBA,CACV,CAED4L,SAAkB4V,EAAOs3B,EAAStxC,EAASqpB,EAAOqf,EAAU,IACxD,MAAM/gC,EAAKjP,WACLiP,GAAG0hB,GAAOA,GAChBqf,EAAQnhC,KAAOmhC,EAAQnhC,MAAQ+pC,EAC/B,MAAMmvB,EAAe,IAAIC,aAAa1mD,EAAO0uB,GAC7C/gC,GAAG8H,GAAMsG,IAAI0qD,GACb,MAAM/jD,EAAW/U,GAAGg5D,GAAargE,KAAK,CAAEmgE,aAAcA,EAAcl9D,MAAOoE,IAG3E,OAFA84D,EAAalgE,iBAAiB,QAASmc,GACnC1c,EAAU,IAAGygE,EAAargE,IAAMC,WAAWqc,EAAoB,IAAV1c,IAClDygE,CACV,CAEGD,SACA,MAAMI,EAAMn/D,eAAeC,IAAI,cAAc2sB,IAC7C,OAAOuyC,GAAOA,EAAI7hD,aAAe/L,MAAM5Q,MAAMw+D,EAAK,qBAA+BloE,IACpF,CAED0L,SAAailB,EAAQ,GACb3vB,OAAOyC,SAASktB,IAAUA,EAAQ,SAAS3vB,OAAOsG,QAAgB,IAARqpB,EACjE,CAEDs3C,MACI,MAAMh5D,EAAKjP,KACXiP,EAAG84D,aAAapvB,QAChB1pC,EAAGpE,OAAMkM,GAAM+P,OAAO7X,EAAG84D,cACrB94D,EAAG84D,aAAargE,KAAKI,aAAamH,EAAG84D,aAAargE,IACzD,CAKDwf,QACI,MAAMjY,EAAKjP,KACXgF,MAAMgG,KAAKiE,EAAGgR,iBAAiB,aAAapZ,SAAQ/G,GAAMA,EAAGwd,WAC7DrO,GAAG8H,GAAMlQ,SAAQshE,GAAMA,EAAGxvB,UAC1B1pC,GAAG8H,GAAMmQ,OACZ,CAMUkhD,+BACP,MAAO,iBAAkB/+D,IAC5B,CAMUg/D,uBACP,MAAmC,YAA5BL,aAAaM,UACvB,CAQDzoE,iCACI,MAAM4I,EAAQu+D,sBACd,QAAKv+D,EAAM2/D,oBACN3/D,EAAM4/D,iBAAiBL,aAAaN,oBAClCj/D,EAAM4/D,UAChB,QAGGroE,KAAKiJ,OAAO,kBACf,EC3LE,MAAMs/D,uBAAuBlzB,UAEhCx1C,kBAAoB,CAChBu5C,SAAU,CAAE7D,SAAS,EAAMn1C,KAAMqB,SACjCgjC,OAAQ,CAAE8Q,SAAS,EAAMn1C,KAAMqB,SAC/Bm3C,QAAS,CAAErD,SAAS,GACpBj0B,MAAO,CAAEi0B,SAAS,GAClB5kB,MAAO,CAAE4kB,SAAS,EAAMn1C,KAAM4N,QAC9B1G,QAAS,CAAEiuC,SAAS,EAAMn1C,KAAM4N,SAGpCw6D,KAAW,EAEX3lE,cACIwlB,QACA,MAAMpZ,EAAKjP,KACXiP,EAAG3H,QAAU,EACb2H,EAAG0hB,MAAQ,EACX1hB,EAAGwwC,MAAO,CACb,CAED1G,aAAaC,GACT,MAAM/pC,EAAKjP,KACLyoE,EAAmBzvB,EAAkBjpB,IAAI,UAK/C,OAJI9gB,EAAG0hB,MAAQ,GAAK1hB,EAAGw1B,QAAUgkC,IAC7Bx5D,GAAGu5D,IAAW,EACdv5D,GAAGy5D,MAEAz5D,GAAG05D,KAAkB15D,GAAGu5D,EAClC,CAED98D,WACI,MAAMuD,EAAKjP,WACLgB,EAAOsG,QAAmB,IAAX2H,EAAG0hB,OACxB1hB,GAAGu5D,IAAW,EACdv5D,EAAG0kC,eACN,CAEDjoC,cAAcstC,GACV,MAAM/pC,EAAKjP,KACPiP,EAAG3H,QAAU,UACPtG,EAAOsG,QAAqB,IAAb2H,EAAG3H,SACxB2H,EAAGw1B,QAAS,QACNzjC,EAAOsG,QAAQgT,EAAMsuD,OAC3B35D,EAAGqO,SAEV,CAED25B,WACI,MAAMhoC,EAAKjP,KACX,OAAOiP,EAAGqS,MAAQrS,GAAG45D,KAAsB55D,GAAG65D,IACjD,CAEDD,MACI,MAAM55D,EAAKjP,KACX,OAAOkb,CAAI;oBACCytB,EAAU15B,EAAGuoC;0CACStP,EAASj5B,EAAGkoC;;kBAEpCloC,EAAGwlB,UAAUxlB,EAAGqS;;kBAEhBrS,EAAGmqC,SAAWnqC,GAAG0qC,GAAU;;;kBAG3B1qC,EAAGwlB,UAAUxlB,EAAG2pC;;;;SAK7B,CAEDkwB,MACI,MAAM75D,EAAKjP,KACX,OAAOkb,CAAI;2CACwBgtB,EAASj5B,EAAGkoC;;;gBAGvCloC,EAAGwlB,UAAUxlB,EAAG2pC;;;gBAGhB3pC,EAAGmqC,SAAWnqC,GAAG0qC,GAAU;;;SAItC,CAEDxC,cAMI,MAJY,IACL9uB,MAAM8uB,cACTsC,KAHOz5C,KAGIykC,OAGlB,CAED2iC,UACIpnE,KAAKykC,QAAS,CACjB,CAEGkV,SAEA,OAAOz+B,CAAI,+DADAlb,KACkEonE,oBAChF,CAEGuB,SACA,OAAO3oE,KAAK0e,yBAAyBsoD,qBACxC,QAGGhnE,KAAKiJ,OAAO,WACf,EC5GE,MAAM8/D,uBAETx7D,IACA6Q,IAEAvb,YAAY0K,GACGvN,MACRuN,GAAQA,EACXA,EAAK23B,cAFMllC,KAGd,CAED+uC,gBACI,MAAM9/B,EAAKjP,KACXiP,GAAGmP,GAAQnP,GAAG1B,GAAM6Q,KACpBnP,GAAG+5D,GAAmB/5D,EACzB,CAED+/B,mBACI,MAAM//B,EAAKjP,KACXiP,GAAGg6D,GAAsBh6D,GACzBA,GAAG1B,GAAM43B,iBAAiBl2B,EAC7B,CAGD6kC,aACI,MAAM7kC,EAAKjP,KACLkpE,EAAUj6D,GAAGmP,GACnBnP,GAAGmP,GAAQnP,GAAG1B,GAAM6Q,KAChB8qD,GAAWj6D,GAAGmP,KACdnP,GAAGg6D,GAAsBh6D,GACzBA,GAAG+5D,GAAmB/5D,GAE7B,CAGD+5D,IAAmBz5C,GACfvvB,MAAKuN,GAAM6Q,MAAM8mB,gBAAgB3V,EACpC,CAGD05C,IAAsB15C,GAClBvvB,MAAKoe,IAAO+mB,mBAAmB5V,EAClC,CAEDhiB,KAAK6Q,GACD,OAAOA,EAAKzT,OAAO6c,IAAI,gBAAkBxnB,MAAKuN,EACjD,CAEDtK,MAAMmb,GACF,MAAM7Q,EAAOvN,KAAKuN,KAAK6Q,GACvB,OAAO7Q,GAAM6Q,OAASA,CACzB,CAEG8M,YACA,OAAOlrB,MAAKuN,GAAM0oC,gBAAgB/qB,KACrC,CAEDyoB,cAAcv1B,GACNpe,KAAKiD,MAAMmb,IAAOpe,KAAKuN,KAAK6Q,GAAMu1B,eACzC,EC3DE,MAAMw1B,uBAAuBJ,uBAEhClmE,YAAY0K,GACR8a,MAAM9a,EACT,CAED67D,IAAahrD,EAAMzU,GAAQ,GACvB,MAAM7J,EAAKE,KAAKuN,KAAK6Q,GACjBte,IAAIA,EAAGqmC,QAAUx8B,EACxB,CAGDy8B,OAAOhoB,GACHpe,MAAKopE,GAAahrD,GAAM,EAC3B,CAED8nB,UAAU9nB,GACNpe,KAAK2zC,cAAcv1B,EACtB,CAEDuoB,SAASvoB,EAAMirD,GACXrpE,MAAKopE,GAAahrD,GAClBpe,KAAK2zC,cAAcv1B,EAAKW,KAC3B,CAED6nB,SAASxoB,EAAMkrD,GACXtpE,MAAKopE,GAAahrD,GAClBpe,KAAK2zC,cAAcv1B,EAAKW,KAC3B,CAED0nB,SAASroB,GACL,MAAM8M,EAAQlrB,KAAKkrB,MACfA,EACAA,EAAMub,SAASroB,GAEfpe,KAAK2zC,cAAcv1B,EAE1B,CAEDsoB,WAAWtoB,GACPpe,KAAK2zC,cAAcv1B,EACtB,CAEDonB,eAAepnB,GACXpe,KAAK2zC,cAAcv1B,EACtB,CAEDqnB,mBAAmBrnB,EAAMymB,GACrB7kC,KAAK2zC,cAAcv1B,EACtB,CAEDmrD,SAASnrD,GACDpe,KAAKiD,MAAMmb,IAAOpe,KAAKuN,KAAK6Q,GAAMd,QACzC,ECpDE,MAAMksD,0BAA0Bn0B,UAYrCx1C,kBAAoB,CAClBsmC,QAAS,CAAEx8B,OAAO,GAClByU,KAAM,CAAEhe,KAAMS,OAAQ0sC,WAAaR,GAAWA,aAAkBvI,WAGlE3hC,cACEwlB,QACAroB,KAAKghC,MAAO,CACb,CAED+X,aAAaxT,GACX,QAAOvlC,KAAKoe,IACb,CAED04B,WAAWvR,GACTld,MAAMyuB,WAAWvR,GACbA,EAAQxV,IAAI,UAAS/vB,KAAKoe,KAAKzT,OAAO6c,IAAI,eAAiBxnB,KAChE,CAEDw5C,UACMx5C,KAAK0kC,SAAS1kC,KAAK0J,MAAM,MAAMs7B,QACnChlC,KAAK6N,QAAQu3B,QAAUplC,KAAKolC,OAC7B,CAED6R,WACE,MAAMhoC,EAAKjP,KACLoe,EAAOnP,EAAGmP,KACV5Q,EAAMyB,EAAGvN,OAAS,GACxB8L,EAAI6sC,QAAUprC,EAAGwlB,UAAUjnB,EAAI6sC,SAC/B7sC,EAAI8T,MAAQrS,EAAGwlB,UAAUjnB,EAAI8T,OAC7B,MAAM8/B,EAASnyC,EAAGk3B,QAAUl3B,GAAGw6D,GAAerrD,EAAK6U,OAAShkB,GAAGisC,GAAY98B,EAAK6U,OAChF,OAAO68B,aAAaqT,SAAS31D,EAAKyB,EAAGkoC,cAAeiK,EACrD,CAEDjK,cACE,MAAMloC,EAAKjP,KACLwN,EAAM,CACV,mBAAmB,EACnB,0BAA0B,EAC1B,sBAAsB,EACtB,YAAYyB,GAAGmoC,GACf,WAAYnoC,EAAGm2B,SAEjB,OAAOn2B,EAAGooC,OAAOpoC,GAAGy6D,GAAWz6D,EAAGooC,OAAOpoC,GAAG2sC,GAAcpuC,EAAKyB,EAAG01B,WAAa11B,EAAGsjC,aAActjC,EAAGy1B,QACpG,CAKD32B,SACE/N,KAAKykC,OAASzkC,KAAK24C,QAAU34C,KAAKilC,MACnC,CAKDA,OACEjlC,MAAK2pE,IAAQ,GACb3pE,KAAKglC,OACN,CAKD2T,QACE34C,MAAK2pE,IAAQ,EACd,CAED3kC,MAAMpjC,GAAM,GACNA,GAAKymB,MAAM2c,QACfhlC,KAAK0kC,QAAiB,GAAP9iC,CAChB,CAEDmjC,OAAOnjC,GAAM,GACX5B,KAAK2kC,SAAkB,GAAP/iC,CACjB,CAED05B,OAAOxvB,GACL+uB,mBAAmB6Z,QAAQ10C,KAAK4wB,cAAc,KAAM9kB,EACrD,CAEGsyB,aACF,OAAOp+B,KAAKoe,MAAMggB,MACnB,CAEGqC,eACF,OAAQzgC,KAAKo+B,MACd,CAEGtmB,UACF,OAAO9X,KAAKoe,MAAMtG,GACnB,CAEGpW,YACF,OAAO1B,KAAKoe,MAAM1c,OAAS,EAC5B,CAEGuxB,YACF,OAAOjzB,KAAKoe,MAAM6U,QAAU,CAC7B,CAEGyR,cACF,OAAO1kC,KAAKoe,MAAMsmB,OACnB,CAEGU,cACF,MAAMlnB,EAASle,KAAKke,OACpB,OAAOA,GAAQumB,SAA6B,IAAnBvmB,GAAQ+U,KAClC,CAEG/U,aACF,OAAOle,KAAKoe,MAAMF,MACnB,CAEG0rD,iBACF,MAAMhsC,EAAO59B,KAAKke,SAASvT,OAAO6c,IAAI,eACtC,OAAOoW,aAAgB4rC,kBAAoB5rC,OAAOn5B,CACnD,CAEGigC,YAAQ9iC,GACVA,GAAc,IAARA,EACN5B,KAAKoe,KAAKsmB,QAAU9iC,CACrB,CAEG+iC,eACF,OAAO3kC,KAAKoe,MAAMumB,QACnB,CAEGA,aAAS/iC,GACXA,GAAc,IAARA,EACN,MAAMqN,EAAKjP,KACPiP,EAAGwxB,UAAYxxB,EAAGpE,MAAMw1B,OAAMz+B,GAAM,GAEpCqN,EAAGsjC,YACD3wC,EACFqN,EAAGmP,KAAKunB,YAER12B,EAAGmP,KAAKwnB,cAGV32B,EAAGmP,KAAKumB,SAAW/iC,CAEtB,CAEG6iC,aACF,OAAOzkC,KAAKoe,MAAMqmB,MACnB,CAEGA,WAAO7iC,GACT5B,MAAK2pE,IAAgB,IAAR/nE,EACd,CAEGiJ,YACF,OAAO7K,KAAKqe,QAAQ,UACrB,CAEGk0B,kBACF,OAAOvyC,KAAK6K,MAAM0nC,WACnB,CAEGm3B,SAAc,OAAO1pE,KAAK6K,MAAM6+D,UAAY,YAAe,CAC3D9tB,SAAiB,OAAO57C,KAAK6K,MAAM+wC,aAAe,QAAW,CAC7D+O,SAAc,OAAO3qD,KAAK6K,MAAM8/C,UAAY,EAAK,CACjDkf,SAAgB,OAAO7pE,KAAK6K,MAAMg/D,YAAc,WAAc,CAC9DC,SAAwB,OAAO9pE,KAAK6K,MAAMi/D,oBAAsB,SAAY,CAE5E1yB,SACF,OAA8B,IAAvBp3C,KAAK0B,OAAO01C,SAAyC,IAAtBp3C,KAAK6K,MAAMusC,MAClD,CAEGgD,SACF,MAAMnrC,EAAKjP,KACLoe,EAAOnP,EAAGmP,KACVrW,EAAOkH,EAAGvN,MACVqoE,EAAK96D,EAAGpE,MACd,IAAIm/D,EAAUjiE,EAAKqyC,MAAQ2vB,EAAGE,SAE9B,OADI7rD,EAAKqiB,WAAUupC,EAAU5rD,EAAKqmB,OAAU18B,EAAKmiE,UAAYH,EAAGG,SAAaniE,EAAKoiE,WAAaJ,EAAGI,WAC3FH,CACR,CAEDI,IAAcn3C,GACZ,OAAO/X,CAAI,oBAAoB+X,iBAChC,CAEDw2C,IAAex2C,GACb,OAAO/X,CAAI,GAAGlb,MAAKoqE,GAAcn3C,mCAClC,CAEDioB,IAAYjoB,GACV,OAAO/X,CAAI,GAAGlb,MAAKoqE,GAAcn3C,KAASjzB,MAAKqqE,+BAAyCrqE,MAAKo6C,gBAC9F,CAEDiwB,MACE,MAAMp7D,EAAKjP,KACX,IAAKiP,EAAGsjC,YAAa,MAAO,GAC5B,MAAM7E,EAAQz+B,EAAG01B,SAAW11B,GAAG66D,GAAsB76D,GAAG46D,GAClDzvB,EAAOnrC,EAAGmP,KAAKsnB,mBAAqB,mBAAqBz2B,EAAG01B,SAAW,oBAAsB,SACnG,OAAOzpB,CAAI;iCACkBwyB,KAASz+B,GAAG07C;wBACrBvQ,eACrB,CAEDuvB,IAAQ/nE,GAAM,GACZ,MAAMqN,EAAKjP,KACPiP,EAAGmP,MAAMqiB,WACXxxB,EAAGmP,KAAKqmB,OAAS7iC,EAEpB,QAGC5B,KAAKiJ,OAAO,eACb,EC9NI,MAAMqhE,sBAAsBj1B,UAEjCx1C,cAAgB6a,CAAG;;;;;;OAQnB7a,cAAgB,CACdoqE,SAAU,CAAEn8D,UAAW,aACvBq8D,UAAW,CAAEr8D,UAAW,cACxBo8D,SAAU,CAAEp8D,UAAW,aACvB68C,SAAU,CAAE78C,UAAW,aACvB47D,SAAU,CAAE57D,UAAW,aACvB8tC,YAAa,CAAE9tC,UAAW,gBAC1B+7D,WAAY,CAAE/7D,UAAW,iBAAkB4/B,GAC3Co8B,mBAAoB,CAAEh8D,UAAW,0BAA2B4/B,IAG9D7tC,kBAAoB,CAClB8wC,QAAS,CAAE,EACX5oC,KAAM,CAAE3H,KAAMS,QACdud,KAAM,CAAEhe,KAAMS,OAAQ0sC,WAAaR,GAAWA,aAAkBvI,UAChE4S,OAAQ,CAAEh3C,KAAMqB,QAAS8zC,SAAS,GAClCg1B,MAAO,CAAEnqE,KAAMqB,QAAS8zC,SAAS,GACjClV,KAAM,CAAEjgC,KAAMqB,QAAS8zC,SAAS,GAChChD,YAAa,CAAEnyC,KAAMqB,QAAS8zC,SAAS,GACvC/C,SAAU,CAAEpyC,KAAMqB,QAAS8zC,SAAS,MACjC+0B,cAAcE,QAInB3qE,eAAiB,IACZyqE,cAAcE,OACjB9vD,IAAK,CAAE,EACP0/B,KAAM,CAAE,EACR1M,MAAO,CAAE,EACTpsB,MAAO,CAAE,EACT+4B,QAAS,CAAE,EACX5V,OAAQ,CAAErkC,KAAMqB,SAChBkjC,SAAU,CAAEvkC,KAAMqB,UAGpB8yB,KAAU,EACVk2C,IAAWriC,IAEX7Y,IAAc,KAEd1sB,cACEwlB,QACA,MAAMpZ,EAAKjP,KACXiP,EAAGoxB,MAAO,EACVpxB,EAAGsjC,aAAc,EACjBtjC,EAAGlH,KAAOuS,EAAMtN,OAAOiC,GAAI,GAAM,GAAMgS,MACvChS,EAAGmP,KAAO,IAAIomB,SAAS,KAAM,CAAE,WAAYxkC,KAAKmc,SAAW,MAAO,GAClElN,EAAGg7D,SAAW,eACdh7D,EAAGk7D,UAAY,SACfl7D,EAAGi7D,SAAW,eACdj7D,EAAG2sC,YAAc,SACjB3sC,EAAGy6D,SAAW,aACdz6D,EAAGmP,KAAKzT,OAAO6c,IAAI,eAAiBvY,EACpCA,GAAGsgB,GAAc,IAAI45C,eAAel6D,EACrC,CAEDgoC,WACE,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI,cAAcytB,EAAU15B,EAAGuoC;4BACdtP,EAASj5B,EAAGkoC;oBACpBloC,GAAG0jC;sBACD1jC,GAAGyU;oBACLzU,GAAGyjC;oCACahJ,EAAIz6B,GAAGw7D;YAC/Br5D,EAAOnC,EAAGmP,KAAKc,KAAKjQ,EAAGmP,MAAM,GAAO,IAASA,GAASA,EAAKtG,MAAMsG,GAASlD,CAAI;mCACvDkD;;;eAIhC,CAED26B,aAAaxT,GACX,MAAMt2B,EAAKjP,KAUX,OATIulC,EAAQxV,IAAI,SAAW9gB,EAAGlH,OAASkH,GAAGslB,KACxCtlB,GAAGslB,IAAU,EACb1oB,gBAAe,KACboD,EAAGmP,KAAK8I,QACRjY,EAAGmP,KAAKmjB,SAAStyB,EAAGlH,MACpBkH,GAAGslB,IAAU,EACbtlB,EAAG0kC,eAAe,OAGf3zC,KAAKoe,IACb,CAED04B,WAAWvR,GACTld,MAAMyuB,WAAWvR,GACbA,EAAQxV,IAAI,iBAAmB/vB,KAAKuyC,aAAavyC,KAAKoe,MAAMwnB,cAChE5lC,KAAKoe,KAAK5P,MAAQxO,KAAKuyC,WACxB,CAEDtB,WAAWlpC,GACLA,aAAgBy8B,SACdz8B,EAAKgX,OAAS/e,KAAKoe,OAAMpe,KAAKoe,KAAOrW,GAEzC/H,KAAK+H,KAAOA,CAEf,CAEDkE,KAAKo5B,GAAS,GACZ,MAAMp2B,EAAKjP,KACX,IAAI49B,EAAO3uB,EAAGy7D,SAMd,OALK9sC,EAAO3uB,EAAGujC,WAAU5U,EAAO3uB,GAAG8B,IAC/B6sB,GAAMwH,UACRxH,EAAKoH,QACDK,GAAUp2B,EAAGy1B,SAASjE,UAAUxxB,EAAGy1B,QAAQO,QAE1Ch2B,EAAGy1B,OACX,CAEDzF,SAASqG,GAAW,GAClB,MAAMr2B,EAAKjP,KACX,IAAI49B,EAAO3uB,EAAG07D,aAMd,OALK/sC,EAAO3uB,EAAGujC,WAAU5U,EAAO3uB,GAAG4B,IAC/B+sB,GAAMwH,UACRxH,EAAKoH,QACDpH,EAAK6C,UAAY6E,GAAU1H,EAAK+a,SAE/B1pC,EAAGy1B,OAEX,CAED2B,YACErmC,KAAKoe,MAAMioB,WACZ,CAEDC,cACEtmC,KAAKoe,MAAMkoB,aACZ,CAKDrB,KAAKxS,GACQzyB,KACR0kC,SAASO,MACb,CAMD0T,MAAMlmB,GACOzyB,KACR0kC,SAASiU,OACb,CAEDzxB,QACElnB,KAAKoe,MAAM8I,QACXlnB,KAAK2zC,eACN,CAEDi3B,SACE5qE,KAAKknB,QACLlnB,KAAKi2C,gBAAgB1R,MACtB,CAEGI,eACF,OAAO3kC,MAAKuN,GAAMvN,KAAKoe,KAAKymB,eAC7B,CAEGH,cACF,OAAO1kC,MAAKuN,GAAMvN,KAAKoe,KAAKwmB,cAC7B,CAKG+lC,mBACF,OAAO3qE,KAAK0kC,SAAStmB,KAAK2gB,MAAK59B,GAAKA,GAAGikC,UAAS,GAAM,KAAQz6B,OAAO6c,IAAI,cAC1E,CAKGkjD,eACF,OAAO1qE,KAAK0kC,SAAStmB,KAAK2gB,MAAK59B,GAAKA,GAAGikC,UAAS,KAAQz6B,OAAO6c,IAAI,cACpE,CAEGzQ,SACF,OAAO/W,MAAKyqE,GAAS/oE,KACtB,CAEGqP,SACF,OAAO/Q,MAAK+W,GAAM0E,iBACnB,CAEG5K,SACF,OAAO7Q,MAAK+W,GAAM+7B,gBACnB,CAEDvlC,IAAM6Q,GACJ,OAAOA,IAAOzT,OAAO6c,IAAI,cAC1B,CAEDmrB,IAAS7mC,GAEP,MAAMo/C,EAAuD,UAA9Cp/C,EAAE6B,OAAO0Q,QAAQ,YAAYxQ,QAAQzN,KAC9CN,EAAKgM,EAAE6B,OAAO0Q,QAAQ,gBAC5B,IAAKve,EAAGse,KAAM,OAEd,MAAMnP,EAAKjP,KAEPiP,EAAGsjC,YACD2Y,GAAQprD,EAAGilC,QAAQjlC,EAAG6kC,UAE1B7kC,EAAGilC,QAAO,GAGZ,MAAM8lC,EAAc57D,EAAGsjC,cAAgB2Y,IAAaj8C,EAAGsjC,YACnDzyC,EAAG2gC,UAAYoqC,GAAY/qE,EAAGiO,SAElCjO,EAAGklC,QACHllC,EAAGw7B,OAAOxvB,EACX,CAED4X,GAAW5X,GAET,MAAMmD,EAAKjP,KACLF,EAAKmP,EAAGy1B,QACd,GAAK5kC,EAEL,OAAQgM,EAAEgY,MACR,IAAK,UACH7U,EAAGgwB,WACH,MACF,IAAK,YACHhwB,EAAGhD,OACH,MACF,IAAK,YACCnM,EAAG2gC,SACD3gC,EAAG2kC,OACLx1B,EAAG0pC,SAEF74C,EAAG8pE,YAAc9pE,IAAKklC,QAGzB/1B,EAAGgwB,WAEL,MACF,IAAK,aACCn/B,EAAG2gC,WAAa3gC,EAAG2kC,OACrBx1B,EAAGg2B,OAEHh2B,EAAGhD,OAIV,CAEDymC,IAAS5mC,GAEP,MAAMhM,EAAKgM,EAAE6B,OAAO0Q,QAAQ,gBAC5B,GAAMve,GAAIse,KAEV,OAAQtS,EAAEgY,MACR,IAAK,QACHhkB,EAAGw7B,OAAOxvB,GACV,MACF,IAAK,MACHhM,EAAGklC,QACH,MACF,IAAK,QACHllC,EAAGilC,QAAO/kC,KAAKuyC,cAAezyC,EAAG6kC,UACjC7kC,EAAGklC,QAGR,QAGChlC,KAAKiJ,OAAO,UACb,EC1RI,MAAM6hE,uBAAuBz1B,UAErB01B,qBACP,OAAO9pE,WAAW+pE,cAAgB/pE,WAAWugB,UAAUwQ,QAAU,gBACpE,CAEDnyB,kBAAoB,CAChB6D,IAAK,CAAE,EACPm/C,OAAQ,CAAE,EACVlS,QAAS,CAAE,EACX11B,OAAQ,CAAE7a,KAAM4N,QAChBgN,MAAO,CAAE5a,KAAM4N,QACfjG,KAAM,CAAE3H,KAAM4E,OACdgrC,QAAS,CAAE5vC,KAAMS,SAGrBoqE,IAAa7iC,IACb8iC,IAAS,KAETroE,cACIwlB,QACAroB,KAAKib,OAAS,EACdjb,KAAKgb,MAAQ,EACb8vD,gBAAex9C,IAClB,CAEDipB,oBACIluB,MAAMkuB,oBACNv2C,MAAKmrE,IACR,CAEDz0B,uBACIruB,MAAMquB,uBACN,MAAMznC,EAAKjP,KACPiP,GAAGi8D,IAAQj8D,GAAGi8D,GAAOE,UACzBn8D,GAAGi8D,GAAS,IACf,CAEDnyB,aAAaxT,GACT,OAAOulC,gBAAeO,EACzB,CAEDx0B,aAAatR,GACTvlC,MAAK4pC,KACLvhB,MAAMwuB,aAAatR,EACtB,CAEDiU,QAAQjU,GACJ,MAAMt2B,EAAKjP,MACPulC,EAAQxV,IAAI,QAAUwV,EAAQxV,IAAI,YAAW9gB,GAAG26B,MAChDrE,EAAQxV,IAAI,SAAWwV,EAAQxV,IAAI,aAAY9gB,GAAGq8D,GAAYr8D,EAAGlH,KAAMkH,EAAG+gC,QACjF,CAEDiH,WACI,MAAMhoC,EAAKjP,KACX,OAAOkb,CAAI,WAAWwuB,EAAIz6B,GAAGg8D;yBACZ/iC,EAASj5B,EAAGkoC;yBACZxO,EAAU15B,EAAG+L,MAAQ,GAAI/L,EAAG+L;0BAC3B2tB,EAAU15B,EAAGgM,OAAS,GAAIhM,EAAGgM;sBAElD,CAEDg2B,WAAWlpC,GACP/H,KAAK+H,KAAOA,CACf,CAEGwjE,aACA,OAAOvrE,MAAKirE,GAAWvpE,KAC1B,CAIDmzB,QACI70B,MAAKkrE,IAAQr2C,OAChB,CAEDoR,UACIjmC,MAAKkrE,IAAQthC,QAChB,CAED4hC,YAAY5pE,GACR5B,MAAKkrE,IAAQn/C,OAAOnqB,EACvB,CAED4zD,OACIx1D,MAAKkrE,IAAQ1V,MAChB,CAEDtuC,QACIlnB,MAAKkrE,IAAQhkD,OAChB,CAEDwoC,OAAOxtD,EAAG8T,GACN,MAAM/G,EAAKjP,KACNiP,GAAGi8D,IACRrrD,uBAAsB,KAClB,MAAM4rD,EAAMx8D,EAAGvF,MAAM,OACjB+hE,IACAA,EAAIn0D,MAAM0D,MAAQ,GAAG9Y,MACrBupE,EAAIn0D,MAAM2D,OAAS,GAAGjF,OAE1B/G,GAAGi8D,GAAOxb,OAAOxtD,EAAG8T,EAAE,GAE7B,CAED01D,cAActrE,EAAO,YAAaurE,EAAU,GACxC,OAAO3rE,MAAKkrE,IAAQQ,cAActrE,EAAMurE,EAC3C,CAIDjgE,WACI,MAAMuD,EAAKjP,KACLgwC,QAAgBle,SAASsB,SAASnkB,EAAG4zC,OAAQ,MAAO,MAAM,EAAM,CAAA,GAChE96C,QAAa+pB,SAASsB,SAASnkB,EAAGvL,IAAK,MAAO,MAAM,EAAM,IAChEuL,EAAGlH,KAAOA,EACVkH,EAAG+gC,QAAUA,CAChB,CAEDs7B,IAAYvjE,EAAMioC,GACd,MAAM/gC,EAAKjP,KACLF,EAAKmP,EAAG2hB,cAAc,4BACtBpjB,EAAM3M,OAAOkqB,OAAOilB,EAAS86B,eAAe99D,OAAOlN,IAEnD8rE,EAAOp+D,EAAIzF,KAAK8jE,SAGtB,GAFAD,EAAK/kE,SAAQ,CAACF,EAAGhE,IAAMgE,EAAEoB,KAAuB,IAAhB6jE,EAAK1nE,OAAe6D,EAAOA,EAAKpF,IAAM,KAElEsM,GAAGi8D,GAAQ,OAAOj8D,EAAGu8D,YAAYh+D,GAErC,MAAMs+D,EAAM78D,EAAGs8D,OAAOQ,WAAW,MACjC98D,GAAGi8D,GAAS,IAAIJ,gBAAekB,GAAOF,EAAKt+D,EAC9C,CAED9B,WACSo/D,gBAAeO,UAAgBjoD,SAASc,KAAK3d,SAAU,WAAY,GAAG,GAC3EvG,KAAK2zC,eACR,CAED9zC,WAAkB,EAClBA,WAAuB,EACvBA,UAAgB,KAEhBA,kBACI,MAAMoP,EAAK67D,eACX,IAAmB,IAAf77D,EAAG87D,UACH97D,GAAGo8D,KAAYp8D,GAAGg9D,GAAtB,CACAh9D,GAAGg9D,IAAgB,EACnB,IACI,MACMvoE,EAAM,GADGonE,eAAeC,kCAExBiB,MAAEA,EAAKE,cAAEA,SAAwB3iE,OAAO7F,GAC9CsoE,EAAMn8C,YAAYq8C,GAClBj9D,GAAG+8D,GAASA,EACZ/8D,GAAGo8D,IAAW,EACdjoD,SAAS8C,KAAK3f,SAAU,WAC3B,CAAC,MAAOuF,GACLlM,MAAM8b,MAAM,KAAM5P,EAC9B,CAAkB,QACNmD,GAAGg9D,IAAgB,CACtB,CAd2C,CAe/C,CAWDpsE,cAAcC,EAAIkI,EAAO,OAAQtG,EAAQ,QAAStB,EAAO,QAGrD,KAAMN,aAAc+I,aAAc,MAAO,CAAA,EAEzC,MAAMsjE,EAAQrsE,EAAG8M,aAAa5E,GACxBokE,EAAOtsE,EAAG8M,aAAalL,GACvB2qE,EAAQvsE,EAAG8M,aAAaxM,GAE9B,IAAI4B,EAAM,KAEV,OAAQqqE,GACJ,IAAK,QACDrqE,EAAM,GACN,MACJ,IAAK,SACDA,EAAM,CAAA,EACN,MACJ,QACI,OAAO8oE,gBAAe5zD,EAAQk1D,EAAMC,GAG5C,MAAMC,EAAStnE,MAAMgG,KAAKlL,EAAGoO,UACvBjJ,EAAoB,UAAVonE,EACVE,EAAqB,WAAVF,EAgBjB,OAdAC,EAAOzlE,SAAQ/G,IACX,MAAM0sE,EAAO1sE,EAAG8M,aAAa5E,GAC7B,GAAI/C,EACAjD,EAAIqP,KAAKo7D,QAAQz/D,OAAOlN,EAAIkI,EAAMtG,EAAOtB,SACtC,GAAImsE,EAAU,CACjB,MAAMjsE,EAAMwqE,eAAe99D,OAAOlN,EAAIkI,EAAMtG,EAAOtB,GACnD4B,EAAIwqE,GAAQlsE,CAC5B,KAAmB,CACH,MAAMosE,EAAO5sE,EAAG8M,aAAalL,GACvBirE,EAAO7sE,EAAG8M,aAAaxM,GAC7B4B,EAAImqE,GAAOK,GAAQC,SAAQv1D,EAAQw1D,EAAMC,EAC5C,KAGE3qE,CACV,CAEDnC,SAAe+B,EAAKxB,GAChB,OAAQA,GACJ,IAAK,UAAW,MAAe,SAARwB,EACvB,IAAK,SAAU,OAAOP,WAAWO,GACjC,QAAS,OAAOA,EAEvB,QAGG5B,KAAKiJ,OAAO,WACf,EChOE,MAAM2jE,2BAA2Bv3B,UAEzB01B,qBACP,OAAO9pE,WAAW4rE,aAAe,4DACpC,CAEDhtE,kBAAoB,CAChB6D,IAAK,CAAE,EACPs2B,MAAO,CAAE,EACTrsB,OAAQ,CAAE,EACVvJ,SAAU,CAAE,GAGhB0oE,IAAW1kC,IACXrgC,IAEAlF,cACIwlB,QACAroB,KAAKg6B,MAAQ,SAChB,CAED8c,WAAWvR,GACP,MAAMt2B,EAAKjP,KACPulC,EAAQxV,IAAI,UAAU9gB,GAAGsrB,KACzBgL,EAAQxV,IAAI,WAAW9gB,GAAG89D,KAC1BxnC,EAAQxV,IAAI,QAAQ9gB,GAAG+9D,KACvBznC,EAAQxV,IAAI,aAAa9gB,GAAGg+D,GAAah+D,GAAGlH,GACnD,CAEDkvC,WAEI,OAAO/7B,CAAI,cAAcwuB,EADd1pC,MACqB8sE,cAAoB5kC,EADzCloC,KACqDm3C,+BACnE,CAEDA,cACI,MACM+1B,EAAclsE,EAAO0F,iBADhB1G,KACoCoE,UAI/C,MAHY,CACR,CAAC,YAHMpE,KAGSoE,YAAa8oE,EAGpC,CAODC,UAAUplE,EAAO,GAAIirB,GAAS,GAC1BhzB,MAAK+H,GAAQA,EACb/H,MAAKitE,GAAallE,EAAMirB,EAC3B,CAEGkG,YAAQt3B,EAAK,IACb5B,MAAK+H,GAAQnG,EACb5B,MAAKitE,GAAarrE,EACrB,CAEGs3B,cACA,OAAOl5B,MAAK+H,EACf,CAED2D,WACI,MAAMhI,EAAM,GAAGkpE,mBAAmB7B,kBAAkB/qE,KAAKg6B,gBACzD1f,EAAM8yD,UAAUptE,KAAM0D,EACzB,CAMDqpE,MACI,MAAM99D,EAAKjP,KACLF,EAAKmP,EAAGtB,OAAS2M,EAAM5Q,MAAMuF,EAAGtB,QAAU,KAChD,IAAK7N,EAAI,OAAOwa,EAAMoF,QAAQzQ,GAAG6U,GAAO,mBAAmB7U,EAAGtB,qBAC9DsB,GAAGlH,GAAQjI,EAAG2G,UACdwI,GAAGg+D,GAAantE,EAAG2G,UACtB,CAKDiF,WACI,MAAMuD,EAAKjP,KACL+H,QAAa+pB,SAAS2B,KAAKxkB,EAAGvL,KACpC,IAAKqE,EAAM,OAAOuS,EAAMoF,QAAQzQ,GAAG6U,GAAO,YAAY7U,EAAGvL,oBACzDuL,GAAGlH,GAAQA,EACXkH,GAAGg+D,GAAallE,EACnB,CAEG+b,SACA,OAAO9jB,MAAK8sE,GAASprE,KACxB,CAED2rE,IAAWvhE,GACP,MACMotB,EAAUptB,EAAE/D,KAAKA,KACvBI,IAAIK,gBAAgBsD,EAAE/D,KAAKrE,KAC3B4W,EAAMoF,QAHK1f,MAGM8jB,GAAOhY,EAAE/D,KAAKirB,OAHpBhzB,MAGgC8jB,GAAMrd,UAAYyyB,EAAUA,GACvEptB,EAAE6B,OAAO2/D,WACZ,CAEDL,IAAallE,EAAO,GAAIirB,GAAS,GAC7B,MAAM/jB,EAAKjP,KACX,IAAK+H,EAAM,OAAOuS,EAAMoF,QAAQzQ,GAAG6U,GAAO,YAC1C,MAAMypD,EAAWt+D,GAAGu+D,GACdvlE,EAAO,IAAIC,KAAK,CAACqlE,GAAW,CAAEntE,KAAM,2BACpCqtE,EAAUtlE,IAAIC,gBAAgBH,GAC9BulE,EAAS,IAAIE,OAAOD,GAC1BD,EAAOG,UAAY1+D,GAAGo+D,GAAWzlE,KAAKqH,GACtCu+D,EAAOI,YAAY,CAAE7lE,KAAMA,EAAMrE,IAAK+pE,EAASz6C,OAAQA,GAC1D,CAEGw6C,SACA,MACMK,EADK7tE,KACMoE,SADNpE,KACoBoE,SAAShC,MAAM,KAAKM,KAAInB,GAAK,kBAAkBqrE,mBAAmB7B,qBAAqBxpE,EAAEM,qBAAoBS,KAAK,IAAM,GACvJ,MAAO,uEACkBsqE,mBAAmB7B,gDAClC8C,uLAGb,QAGG7tE,KAAKiJ,OAAO,eACf,EC1HE,MAAM6kE,0BAA0Bz4B,UAExB01B,qBACP,OAAO9pE,WAAW8sE,iBAAmB,iDACxC,CAEDluE,kBAAoB,CAChB6D,IAAK,CAAE,EACPsqE,QAAS,CAAE5tE,KAAM4N,QACjBigE,UAAW,CAAE7tE,KAAM4N,OAAQF,UAAW,eAG1CogE,IAAgB9lC,IAChByxB,IAAa,KACbhpD,IAAQ,KACRE,IAAS,KACTgO,IAAQ,KACR0T,IAAQ,KACRzL,GAAS,GAETy3B,IAAW1yC,KAAKvL,GAEhBqC,cACIwlB,QACAroB,KAAKguE,QAAU,GACfhuE,KAAK8qB,aAAa9qB,MAAKy+C,GAC1B,CAED/yC,0BACI,MAAMuD,EAAKjP,KAEX,SADMiP,GAAGk/D,KACLltE,WAAWmtE,SAAU,CACrB,MAAM5gE,EAAM,CAAE6gE,WAAW,EAAMC,QAAQ,GACvCr/D,GAAG4qD,GAAa,IAAI54D,WAAWmtE,SAASG,UAAU/gE,GAClD6a,MAAMkuB,mBACT,CACJ,CAEDO,WAAWvR,GACP,MAAMt2B,EAAKjP,KACPulC,EAAQxV,IAAI,SACZ9gB,GAAGu/D,GAASv/D,EAAGvL,KACfuL,GAAG+9D,GAAO/9D,EAAGvL,KAEpB,CAEDuzC,WACI,MAAMhoC,EAAKjP,KAELwN,EAAM,CAAE,aADCyB,EAAGg/D,UAAY,GAAI,GAAGh/D,EAAGg/D,gBAGxC,OADAh/D,EAAG6b,aAAa7b,GAAGwvC,GAAUjxC,GACtB0N,CAAI,QAAQwuB,EAAIz6B,GAAGi/D,4BAAuChmC,EAASj5B,EAAGkoC,wBAChF,CAEDA,cACI,MAAMloC,EAAKjP,KACLktE,EAAclsE,EAAO0F,iBAAiBuI,EAAG7K,UAK/C,MAJY,CACR,CAAC6K,GAAGwvC,KAAY,EAChB,CAAC,YAAYxvC,EAAG7K,YAAa8oE,EAGpC,CAED7Q,OACI,MACM34D,EADK1D,MACIyuE,KADJzuE,MAERgtE,GAAOtpE,EACb,CAEGqb,WACA,OAAO/e,MAAK+e,IAAS,EACxB,CAKG2vD,SACA,OAAO1uE,MAAKkuE,GAAcxsE,KAC7B,CAKDgK,SAAahI,EAAM,IACf,MAAMuL,EAAKjP,KAGX,KADA0D,EAAMuL,GAAG7J,EAAW1B,IACV,OAEV,IAAIqE,QAAa+pB,SAAS2B,KAAK/vB,GAC1BqE,IAELkH,GAAGwjB,GAAQxjB,GAAGiP,GAAQxa,GACjBuL,GAAG8P,KAAO9P,GAAG8P,GAAQ9P,GAAGwjB,IAG7B1qB,EAAOA,EAAK9F,QAAQ,gBAAiB,QAErCgN,GAAGy/D,GAAWjoE,UAAYwI,GAAG0/D,GAAU5mE,GAEvCqb,SAAS8C,KAAKjX,EAAI,OAAQvL,GAC1Bmc,uBAAsB,KAClB5Q,GAAG2/D,KACH3/D,GAAG4/D,KACH5/D,GAAG6/D,IAAa,IAEvB,CAED1pE,GAAW1B,EAAM,IAEb,OAAKA,GAAOA,EAAIE,WAAW,QAAgBF,EADhC1D,MAEDyyB,GAAQ,IAAItqB,IAAIzE,EAFf1D,MAEuByyB,IAAO9wB,WACrCmwB,SAASwB,aAAa5vB,GAAK,EAClC,CAEDwa,IAAQxa,EAAM,IACV,OAAOA,EAAIG,SAAS,KAAOH,EAAMouB,SAASi9C,WAAWrrE,EACxD,CAEDorE,MACI9uE,MAAKgvE,GAAc,gBAAiB,yBACvC,CAEDH,MACe7uE,MAERgvE,GAAc,QADJ,8EAEhB,CAEDA,IAAc7vD,EAAKzE,GACf,MACM3D,EAAOuD,EAAM+B,SADRrc,MACoB0uE,GAAYvvD,GAC3CU,uBAAsB,IAAM9I,EAAKlQ,SAAQ/G,GAAMwa,EAAMwF,YAAYhgB,EAAI4a,MACxE,CAEDk0D,MACI,MAAM3/D,EAAKjP,KACLivE,EAAQ30D,EAAM+B,SAASpN,GAAGy/D,GAAY,KAAK9oE,QAAO9F,IAAOyM,EAAOvD,IAAIlJ,EAAI,QAAQ8D,WAAW,OAEjGqrE,EACKrpE,QAAO9F,KAAQyM,EAAOvD,IAAIlJ,EAAI,QAAQ+D,SAAS,QAAU0I,EAAOvD,IAAIlJ,EAAI,QAAQ+D,SAAS,QACzFgD,SAAQ/G,GAAMA,EAAG6N,OAAS,WAE/BshE,EACKrpE,QAAO9F,GAAMyM,EAAOvD,IAAIlJ,EAAI,QAAQ+D,SAAS,QAAU0I,EAAOvD,IAAIlJ,EAAI,QAAQ+D,SAAS,OACvFgD,SAAQ/G,GAAMsjB,SAAS8E,OAAOpoB,EAAIA,EAAI,QAASmP,GAAGigE,GAAatnE,KAAKqH,KAE5E,CAEDigE,IAAapjE,GACT,MAAMmD,EAAKjP,KACLF,EAAKgM,EAAE6B,OACPtF,EAAOkE,EAAOvD,IAAIlJ,EAAI,QAC5B,GAAIuI,EAAKzE,WAAW,KAAM,OAC1Bwf,SAASS,QAAQ/X,GACjBhM,EAAGuI,KAAO4G,GAAG7J,EAAWiD,GAGxB,OADgB+a,SAAS8C,KAAKjX,EAAI,OAAQnP,EAAGuI,MAAM,GAAO,GAAO,IAGjE4G,GAAGu/D,GAAS1uE,EAAGuI,MACf4G,GAAG+9D,GAAOltE,EAAGuI,OACN,QAJP,CAKH,CAEDomE,MACI,MAAMx/D,EAAKjP,KACX,GAAyB,IAArBiP,GAAG+X,EAAO9iB,OAAe,OAAO+K,GAAG8B,GACvC,MAAMrN,EAAMuL,GAAG+X,EAAO3R,MACtB,OAAO3R,GAAOA,IAAQuL,GAAG4B,GAAQ5B,GAAGw/D,KAAe/qE,CACtD,CAED8qE,IAAS9qE,GACL,MAAMuL,EAAKjP,KACPiP,GAAG+X,EAAO9iB,QAAU+K,EAAG++D,UAAS/+D,GAAG+X,EAAS/X,GAAG+X,EAAOvkB,MAAM,IAC5DwM,GAAG4B,IAASnN,IAChBuL,GAAG+X,EAAO3V,KAAK3N,GACfuL,GAAG4B,GAAQnN,EACNuL,GAAG8B,KAAQ9B,GAAG8B,GAASrN,GAC/B,CAEDirE,IAAU5mE,GACN,OAAO/H,MAAK65D,GAAW8U,SAAS5mE,EACnC,CAED2D,WAEI,GAAIzK,WAAWmtE,SAAU,OACzB,MAAMe,EAAS5oE,SAASC,cAAc,UAChCkoB,EAAUtL,SAASc,KAAKirD,EAAQ,OAAQ,GAAG,GACjDA,EAAO/uE,KAAO,kBACd+uE,EAAO7lE,IAAMwkE,kBAAkB/C,QAC/BzwD,EAAMyB,YAAYxV,SAASiV,KAAM2zD,SAC3BzgD,CACT,QAGG1uB,KAAKiJ,OAAO,cACf,EC1ME,MAAMmmE,wBAAwB/5B,UAEtB01B,qBACP,OAAO9pE,WAAWouE,eAAiB,6CACtC,CAEDxvE,kBAAoB,CAChB6D,IAAK,CAAE,EACPs2B,MAAO,CAAE,EACTrsB,OAAQ,CAAE,EACVvJ,SAAU,CAAE,GAGhB8pE,IAAgB9lC,IAChBknC,IAAU,KAEVzsE,cACIwlB,QACAroB,KAAKoE,SAAW,GAChBpE,KAAKg6B,MAAQ,SAChB,CAEDtuB,gCACU0jE,iBAAgB9hD,KACtBjF,MAAMkuB,mBACT,CAEDK,mBACI,OAAO52C,IACV,CAED62C,eACI72C,MAAKuvE,KACLlnD,MAAMwuB,cACT,CAEDC,WAAWvR,GACP,MAAMt2B,EAAKjP,KACNiP,GAAGqgE,KACJ/pC,EAAQxV,IAAI,UAAU9gB,GAAGsrB,GAAStrB,EAAG+qB,OACrCuL,EAAQxV,IAAI,WAAW9gB,GAAG89D,GAAU99D,EAAGtB,QACvC43B,EAAQxV,IAAI,QAAQ9gB,GAAG+9D,GAAO/9D,EAAGvL,KACjC6hC,EAAQxV,IAAI,aAAa9gB,GAAGmmC,GAAYnmC,EAAG7K,UAClD,CAED6yC,WAEI,OAAO/7B,CAAI,QAAQwuB,EADR1pC,MACekuE,cAAyBhmC,EADxCloC,KACoDm3C,wBAClE,CAEGq4B,aACA,OAAO5oE,OAAO4oE,MACjB,CAEGF,aACA,OAAOtvE,MAAKsvE,EACf,CAEGG,YACA,OAAOzvE,MAAKsvE,GAAQI,UACvB,CAOG5rD,WACA,OAAO9jB,MAAKsvE,IAASjvD,YAAc,EACtC,CAEGyD,SAAK/b,EAAO,IACD/H,MACJsvE,IADItvE,MACQsvE,GAAQ5tD,SAAS3Z,EACvC,CAKG4nE,gBAEA,OADW3vE,KACDyvE,MAAMG,gBADL5vE,KACwBsvE,OAAOO,eAC7C,CAEGhlE,YACA,OAAO7K,KAAK0e,aACf,CAED02B,IAAYhxC,GACR,MAAM6K,EAAKjP,KACPiP,EAAGugE,QAAUprE,GACb6K,EAAGugE,OAAOF,OAAOQ,iBAAiB7gE,EAAGwgE,MAAOrrE,EAEnD,CAEDm2B,IAASP,GACMh6B,KACJwvE,QAAUx1C,GADNh6B,KACgBwvE,OAAOF,OAAOS,SAAS/1C,EACrD,CAMD+yC,IAAUp/D,GACN,MACM7N,EAAK6N,EAAS2M,EAAM5Q,MAAMiE,GAAU,KAC1C,IAAK7N,EAAI,OAFEE,KAEQ8jB,KAAO,mBAAmBnW,eAFlC3N,KAGR8jB,KAAOhkB,EAAG2G,SAChB,CAKDiF,SAAahI,GACT,MAAMuL,EAAKjP,KACL+H,EAAOrE,QAAYouB,SAAS2B,KAAK/vB,GAAO,KAC9C,IAAKqE,EAAM,OAAOkH,EAAG6U,KAAO,YAAYpgB,iBACxCuL,EAAG6U,KAAO,GACV7U,GAAGmmC,GAAYnmC,EAAG7K,UAClB6K,EAAG6U,KAAO/b,CACb,CAEDwnE,MAEI,MAAMtgE,EAAKjP,KAELwN,EAAM,CACR9L,MAAO,GACP0C,SAAU6K,EAAG7K,SACb41B,MAAO/qB,EAAG+qB,MACVg2C,iBAAiB,EACjBC,QAAS,CAAEhuC,SAAS,IAGxBhzB,GAAGqgE,GAAUrgE,EAAGugE,QAAQF,QAAQxlD,OAAO7a,GAAGy/D,GAAYlhE,GAEtDyB,EAAG6iC,YAAYlrC,OAAQ,SAAUqI,GAAGgZ,EAAUrgB,KAAKqH,IAEnD,IACQA,EAAGvL,IACHuL,GAAG+9D,GAAO/9D,EAAGvL,KACNuL,EAAGtB,QACVsB,GAAG89D,GAAU99D,EAAGtB,OAEhC,CAAkB,QACNkS,uBAAsB,IAAM5Q,EAAGwgB,KAAK,iBACpCxgB,GAAGgZ,GACN,CACJ,CAEDA,GAAUnc,GACN,MAAMmD,EAAKjP,KACXiP,GAAGqgE,IAASzmB,OAAO,CAAE7tC,MAAO,EAAGC,OAAQ,IAEvC4E,uBAAsB,KAClB,MAAM/E,EAAO7L,EAAGpE,MAAMkQ,wBACtB9L,GAAGqgE,IAASzmB,OAAO,CAAE7tC,MAAOF,EAAKE,MAAOC,OAAQH,EAAKG,QAAS,GAErE,CAEGyzD,SACA,OAAO1uE,MAAKkuE,GAAcxsE,KAC7B,CAED7B,UAEAA,kBACI,GAAIoB,WAAWuuE,OAAQ,OACvB,MAAML,EAAS5oE,SAASC,cAAc,UAChCkoB,EAAUtL,SAASc,KAAKirD,EAAQ,OAAQ,GAAG,GACjDA,EAAO/uE,KAAO,kBACd+uE,EAAO7lE,IAAM,GAAG8lE,gBAAgBrE,sBAChCzwD,EAAMyB,YAAYxV,SAASiV,KAAM2zD,SAC3BzgD,CACT,CAMD7uB,YACI,MAAM6D,EAAM0rE,gBAAgBrE,QAC5BnkE,OAAOspE,kBAAoB,CACvBC,QAAS,GAAGzsE,IACZ0sE,aAAc,CAACC,EAAUtnB,IACd,sCAAsCnlB,mBAAmB,+DACpBlgC,wCAC3BA,sCAI5B,CAED7D,YACI,OAAO,IAAI0H,SAAQ,CAACC,EAASC,KAEzB6oE,QAAQztB,OAAO,CACX0tB,MAAO,CAAEC,GAAM,GAAGpB,gBAAgBrE,cAClC,SAAU,CAAEnpD,UAAU,KAE1B0uD,QAAQ,CAAC,yBAA0B9oE,EAAQ,GAElD,CAED3H,kBACI,MAAMoP,EAAKmgE,gBACPngE,GAAGwhE,KACPxhE,GAAGyhE,WACGzhE,GAAGk/D,WACHl/D,GAAG0hE,KACT1hE,GAAGwhE,IAAe,EACrB,QAGGzwE,KAAKiJ,OAAO,YACf"}