{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/GSVersion.mjs","../../modules/base/style.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSID.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSDynamicStyle.mjs","../../modules/base/GSCacheStyles.mjs","../../modules/base/GSAdoptedEngine.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSLocalization.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSTemplateCache.mjs","../../modules/base/GSTheme.mjs","../../modules/base/GSAttributeHandler.mjs","../../modules/helpers/Stack.mjs","../../modules/helpers/Queue.mjs","../../modules/helpers/BinaryTree.mjs","../../modules/helpers/DoublyLinkedList.mjs","../../modules/helpers/Tree.mjs","../../modules/data/ReadWriteRegistry.mjs","../../modules/data/AbstractReadWrite.mjs","../../modules/data/ReadWrite.mjs","../../modules/data/CachedReadWrite.mjs","../../modules/data/TreeNode.mjs","../../modules/data/TreeReader.mjs","../../modules/lib.mjs","../../modules/directives/dataset.mjs","../../modules/directives/literal.mjs","../../modules/directives/css-map.mjs","../../modules/properties/verificator.mjs","../../modules/properties/buttonType.mjs","../../modules/properties/color.mjs","../../modules/properties/environment.mjs","../../modules/properties/inputType.mjs","../../modules/properties/nav.mjs","../../modules/properties/orientation.mjs","../../modules/properties/placement.mjs","../../modules/properties/position.mjs","../../modules/properties/protocol.mjs","../../modules/properties/size.mjs","../../modules/properties/arrayConverter.mjs","../../modules/controllers/AdoptedController.mjs","../../modules/controllers/AttributeController.mjs","../../modules/controllers/ContentController.mjs","../../modules/controllers/DataController.mjs","../../modules/controllers/ElementMoveController.mjs","../../modules/controllers/LocalizationController.mjs","../../modules/controllers/OrientationController.mjs","../../modules/controllers/TemplateController.mjs","../../modules/controllers/ThemeController.mjs","../../modules/controllers/SlotController.mjs","../../modules/GSElement.mjs","../../modules/controllers/ElementNavigationController.mjs","../../modules/controllers/GroupController.mjs","../../modules/components/Accordion.mjs","../../modules/components/AccordionItem.mjs","../../modules/components/Alert.mjs","../../modules/components/Button.mjs","../../modules/components/Calendar.mjs","../../modules/components/Card.mjs","../../modules/components/Center.mjs","../../modules/components/Menu.mjs","../../modules/components/Context.mjs","../../modules/components/Compare.mjs","../../modules/components/Controller.mjs","../../modules/components/Copyright.mjs","../../modules/components/DataHandler.mjs","../../modules/components/Dialog.mjs","../../modules/components/Drawer.mjs","../../modules/components/Dropdown.mjs","../../modules/components/Email.mjs","../../modules/components/Form.mjs","../../modules/components/FormGroup.mjs","../../modules/components/FormPanel.mjs","../../modules/components/Group.mjs","../../modules/components/Icon.mjs","../../modules/components/Indent.mjs","../../modules/components/Image.mjs","../../modules/components/Layout.mjs","../../modules/components/Link.mjs","../../modules/components/List.mjs","../../modules/components/ListItem.mjs","../../modules/components/Nav.mjs","../../modules/components/NavItem.mjs","../../modules/components/Overlay.mjs","../../modules/components/Pager.mjs","../../modules/components/Popup.mjs","../../modules/components/Progress.mjs","../../modules/components/Spinner.mjs","../../modules/components/Splitter.mjs","../../modules/components/tab/Tab.mjs","../../modules/components/tab/TabPanel.mjs","../../modules/components/tab/TabGroup.mjs","../../modules/components/Table.mjs","../../modules/components/Tag.mjs","../../modules/components/Text.mjs","../../modules/components/Tooltip.mjs","../../modules/components/Template.mjs","../../modules/components/ext/controllers/CopySelectController.mjs","../../modules/components/ext/controllers/MaskController.mjs","../../modules/components/ext/controllers/NumberController.mjs","../../modules/components/ext/controllers/PasswordController.mjs","../../modules/components/ext/controllers/TextController.mjs","../../modules/components/ext/controllers/ListController.mjs","../../modules/components/ext/ReactiveInput.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSInputElement.mjs","../../modules/components/breadcrumb/Breadcrumb.mjs","../../modules/components/breadcrumb/BreadcrumbItem.mjs","../../modules/components/filebox/Attachment.mjs","../../modules/components/filebox/FileBox.mjs","../../modules/components/intl/TimeFormat.mjs","../../modules/components/intl/DateFormat.mjs","../../modules/components/intl/YearFormat.mjs","../../modules/components/intl/CurrencyFormat.mjs","../../modules/components/steps/StepStyle.mjs","../../modules/components/steps/Step.mjs","../../modules/components/steps/Steps.mjs","../../modules/components/toast/Notification.mjs","../../modules/components/toast/Toast.mjs","../../modules/components/tree/controllers/AbstractTreeController.mjs","../../modules/components/tree/controllers/TreeController.mjs","../../modules/components/tree/TreeItem.mjs","../../modules/components/tree/Tree.mjs","../../modules/extra/Chart.mjs","../../modules/extra/Highlight.mjs","../../modules/extra/Markdown.mjs","../../modules/extra/Monaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport class GSVersion {\r\n\r\n    static get version() {\r\n        return '2.0.0';\r\n    }\r\n\r\n    static get build() {\r\n        return 2025.0131;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Required CSS Styles for WebCompoents, regardless Bootstrap CSS.\r\n */\r\nexport const gsstyles = `.z-10k{z-index:10000 !important;}\r\n.gs-hide,gs-item{display:none !important;}\r\ngs-popover,gs-tooltip{position:fixed;top:0px;left:0px;},\r\n.d-contents{display:contents;}';\r\ngs-button-group::part(.btn-group){box-shadow:rgba(72, 72, 72, 0.4) 0px 0.125rem 0.25rem;}\r\ngs-group>gs-button::part(button) {box-shadow: none;}\r\ngs-group>gs-button:not(:last-child)::part(button) {border-top-right-radius: 0;border-bottom-right-radius: 0;}\r\ngs-group>gs-button:not(:first-child)::part(button) {margin-left: calc(var(--bs-border-width) * -5);border-top-left-radius: 0;border-bottom-left-radius: 0;}\r\ngs-layout {width: 100%;height: 100%;}\r\ngs-split-panel{flex: 1 1 auto !important;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]:before {content: attr(data-value);}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {visibility: hidden;display: inline-block;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-calendar-picker-indicator {position: relative;top: 0px;right: 0;color: black;opacity: 0.5;}\r\n`;","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic isPrimitive = (o) => !Array.isArray(o) && (this.isBool(o) || this.isDate(o) || this.isNumber(o) || this.isString(o));\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic asArray(val) {\r\n\t\treturn Array.isArray(val) ? val : [val];\r\n\t}\r\n\r\n\tstatic asNum(val, dft = 0, locale) {\r\n\t\tlocale = locale || GSUtil.locale;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(locale);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(locale = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(locale).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t};\r\n\t\tconst reg = /[&<>\"'/]/ig;\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\t\t\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to write to the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async writeToClipboard(value = '') {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-write\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.writeText(value);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to read from the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async readFromClipboard() {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-read\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.readText();\r\n\t\t}\r\n\t\treturn '';\r\n\t}\t\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribite name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop];\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\t\t\t\t\r\n\t\t\t\tconst tmp = opt; // Object.hasOwn(opt, prop) ? opt : target;\r\n\t\t\t\t\r\n\t\t\t\tconst type = tmp[prop]?.type;\r\n\t\t\t\tconst safe = tmp[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = tmp[prop]?.default;\r\n\t\t\t\tconst multi = tmp[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = tmp[prop]?.attribute || prop;\r\n\t\t\t\tlet val = target.hasAttribute(prop) ? GSAttr.get(target, prop) : target[prop];\r\n\r\n\t\t\t\tif (GSFunction.isFunction(val)) return val.bind(target);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, locale) {\r\n        format = format || GSUtil.getDateFormat(locale);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, locale: {}, extract: {}, key: { type: Boolean } };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', locale:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const locale = cfg.locale || GSUtil.locale;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        // intercept overrides; used b GS-TABLE cell Ui remapping\r\n        if (cfg.childElementCount > 0) {\r\n            const el = cfg.querySelector(`gs-item[value=\"${val}\"]`);\r\n            return GSAttr.get(el, \"map\", val);\r\n        }\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, locale);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'text':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(locale);\r\n                    return new GSDate(val).format(fmt, locale);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, locale);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static *filter(data = [], filter = [], fields, limit = 0) {\r\n        let cnt = 0;\r\n        let sts = false;\r\n        for (let rec of data) {\r\n            sts = GSData.filterRecord(rec, filter, fields);\r\n            if (sts) {\r\n                cnt++\r\n                yield rec;\r\n            }\r\n            if (limit > 0 && cnt >= limit) break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields, limit = 0) {\r\n        data = Array.isArray(data) ? data : [data];\r\n        filter = Array.isArray(filter) ? filter : [filter];\r\n        if (filter.length === 0) return data;\r\n        return [...GSData.filter(data, filter, fields, limit)];\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = GSUtil.isPrimitive(filter);\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter, fields);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (GSData.filterValue(value, filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter, fields) {\r\n\r\n        let primitive = false;\r\n        let found = true;\r\n        let value = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            primitive = GSUtil.isPrimitive(flt);\r\n            if (primitive) {\r\n                found = found && GSData.filterSimple(rec, flt, fields);\r\n            } else {\r\n                value = rec[flt.name];\r\n                if (flt.name) {\r\n                    found = found && GSData.filterValue(value, flt)\r\n                } else {\r\n                    found = found && GSData.filterSimple(rec, flt.value, fields);\r\n                }\r\n            }\r\n\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static filterValue(value, filter) {\r\n        const toCheck = GSUtil.isPrimitive(filter) ? filter : filter.value;\r\n        if (GSUtil.isDate(value)) {\r\n            return GSData.matchDate(value, filter);\r\n        } else if (GSUtil.isNumber(value)) {\r\n            return GSData.matchNumber(value, GSUtil.asNum(toCheck, null), filter.op);\r\n        } else {\r\n            return (GSUtil.normalize(value)).toLocaleLowerCase().includes(GSUtil.normalize(toCheck).toLocaleLowerCase());\r\n        }\r\n    }\r\n\r\n    static matchDate(val, filter, locale) {\r\n\r\n        if (typeof filter === 'string') {\r\n            const value = '' + filter;\r\n            const local = val.toLocaleDateString(locale);\r\n            const iso = val.toISOString();\r\n            return local.includes(value) || iso.includes(value);\r\n        }\r\n\r\n        if (!filter.value) return false;\r\n\r\n        const qry = filter.value instanceof Date ? 'date' : typeof filter.value;\r\n\r\n        switch (qry) {\r\n            case 'number':\r\n                return GSData.matchNumber(val.getTime(), filter.value, filter.op);\r\n            case 'date':\r\n                return GSData.matchNumber(val.getTime(), filter.value.getTime(), filter.op);\r\n        }\r\n\r\n        return GSData.matchDate(val, '' + filter.value, filter.locale);\r\n    }\r\n\r\n    /**\r\n     * Match number by operator\r\n     * @param {*} value \r\n     * @param {*} query \r\n     * @param {*} operator \r\n     */\r\n    static matchNumber(value = 0, query = 0, operator = 'eq') {\r\n        switch (operator) {\r\n            case 'gt': return query > value;\r\n            case 'lt': return query < value;\r\n            case 'ge': return query >= value;\r\n            case 'le': return query <= value;\r\n        }\r\n        return value === query;\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToOject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name, partial = false) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj[n][i] : null;\r\n        } else if (obj.hasOwnProperty(n)) {\r\n            obj = partial ? obj[n] || obj : obj[n];\r\n        } else {\r\n            obj = null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n\tstatic readFromObject(obj, name) {\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} shadow \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el, shadow = false) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()), shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSlotElement\r\n\t * @returns {Boolean}\r\n\t */\t\r\n\tstatic isSlotElement(el) {\r\n\t\treturn el instanceof HTMLSlotElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @param {Number} level How many levels to wal, 0 = all\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry, levels = 0) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tlevels = GSUtil.asNum(levels, 0);\r\n\t\tconst limit = levels > 0;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t\tif (limit && --levels == 0) return null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el, defaults = false) {\r\n\t\tlet val = null;\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\t\tval = el.value ? el.valueAsNumber : el.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\t\tval = Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value') && el.value) {\r\n\t\t\t\t\tval = el.checked ? el.value : null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tval = el.checked;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tval = el.value;\r\n\t\t\t}\r\n\r\n\t\t\tif(GSUtil.isNull(val) && defaults) {\r\n\t\t\t\tval = el.defaultValue;\r\n\t\t\t}\r\n\t\t\treturn val;\r\n\t\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el, defaults);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromValue(el, val, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tif (defaults) el.defaultValue = el.checked;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = GSUtil.normalize(data);\r\n\t\t\t\tif (defaults) el.defaultValue = el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true, defaults = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el, defaults));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el, defaults));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @param {Boolean} defaults Set default value for form reset  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output', defaults = false) {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\t// if (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj, defaults));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromObject2Element(el, obj, defaults = false) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\tGSDOM.fromValue(el, val, defaults);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\tconst props = GSDOM.allProperties(own);\r\n\t\tArray.from(own.attributes).forEach(v => {\r\n\t\t\tconst type = props[v.name]?.type;\r\n\t\t\tswitch(type) {\r\n\t\t\t\tcase Boolean :\r\n\t\t\t\t\tobj[v.name] = own.hasAttribute(v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Number :\r\n\t\t\t\t\tobj[v.name] = GSAttr.getAsNum(own, v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\tobj[v.name] = v.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', '');\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own\r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t */\r\n\tstatic setValue(qry, val, own, defaults = false) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\t/**\r\n\t * Extract and merge all static properties definition from WebComponent instance\r\n\t * @param {GSElement} obj \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic allProperties(obj) {\r\n\t\tconst list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n\t\tlist.push(obj.constructor?.properties || obj.properties);\r\n\t\treturn GSData.mergeObjects(list);\r\n\t}\r\n\r\n\t/**\r\n\t * Return element template ref\r\n\t * @param {GSElement} host \r\n\t * @returns \r\n\t */\r\n\tstatic templateRef(host) {\r\n\t\tif (!host) return;\r\n\t\tif(host.tagName === 'GS-TEMPLATE') return host.src;\r\n\t\treturn host.template || host.query?.('template', false);\r\n\t  }\r\n\t\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if available.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = GSUtil.isString(data) ? data : data.action || data.data?.action;\r\n\t\t\tGSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(me.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {Boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el, opt) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el, opt);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {Boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {Boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {Boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {Boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {Boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {Boolean} forRemove - call on node remove or add\r\n     * @param {HTMLElement} target - element to monitor\r\n     * @returns {Boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {Boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {Boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = (style || '').toString();\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop();\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n    * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\nimport { gsstyles } from \"./style.mjs\";\r\n\r\n/**\r\n * Cache for dynaamically loaded styles.\r\n * Used to share styles among GS-* WebComponents\r\n * @class\r\n */\r\nexport class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Create a new CSSStyleSheet\r\n\t * @param {String} id Unique ID\r\n\t * @returns {CSSStyleSheet} Created instance\r\n\t */\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {String} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\t\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\t\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {String} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {String} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id, style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSID.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(gsstyles);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from './GSDOM.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSDOMObserver } from './GSDOMObserver.mjs';\r\nimport { GSCacheStyles } from './GSCacheStyles.mjs';\r\n\r\nconst adoptedId = Symbol();\r\nconst observer = Symbol();\r\n\r\n/**\r\n * Monitor HTMLStyleElement & HTMLLinkElement (of type stylesheet) for changes.\r\n * Every such element marked with data-adoptable=\"true\" will be cached and\r\n * will trigger gs-adopted event to notify component controller to update adoptableStyleSheet list\r\n */\r\nexport class GSAdoptedEngine {\r\n\r\n  static #timerID = 0;\r\n  static #ID = Date.now();\r\n  static #scheduled = false;\r\n\r\n  static #init() {\r\n    const me = GSAdoptedEngine;\r\n    me.observe(document.head);\r\n    me.#preload();\r\n    me.#timerID = setInterval(() => me.#adopt(), me.timeout);\r\n  }\r\n\r\n  static #clear() {\r\n    const me = GSAdoptedEngine;\r\n    clearInterval(me.#timerID);\r\n    me.#timerID = undefined;\r\n  }\r\n\r\n  static #adopt() {\r\n    const me = GSAdoptedEngine;\r\n    const sheets = me.#adoptable;\r\n    if (sheets.length == 0) return me.#clear();\r\n    sheets.map(s => me.#adoptSheet(s));\r\n    me.update();\r\n  }\r\n\r\n  static update() {\r\n    const me = GSAdoptedEngine;\r\n    if (me.#scheduled) return;\r\n    me.#scheduled = true;\r\n    queueMicrotask(() => {\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          document.adoptedStyleSheets = me.#sorted;\r\n          document.adoptedStyleSheets.id = ++me.#ID;\r\n        } finally {\r\n          me.#scheduled = false;\r\n          globalThis.dispatchEvent(new CustomEvent('gs-adopted'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static #asText(sheet) {\r\n    return Object.values(sheet.cssRules).map(o => o.cssText).join('');\r\n  }\r\n\r\n  static #adoptLink(el) {\r\n    const me = GSAdoptedEngine;\r\n    GSAdoptedEngine.#monitorAttributes(el);\r\n    Array.from(document.styleSheets).filter(s => s.ownerNode === el).map(s => me.#adoptSheet(s));\r\n  }\r\n\r\n  static #adoptSheet(sheet) {\r\n    const me = GSAdoptedEngine;\r\n    const style = me.#asText(sheet);\r\n    return me.#adoptStyle(sheet.ownerNode, style);\r\n  }\r\n\r\n  static #adoptStyle(ownerNode, style) {\r\n    const me = GSAdoptedEngine;\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(style);\r\n    sheet.id = ++me.#ID;\r\n    ownerNode[adoptedId] = sheet.id;\r\n    me.#store(ownerNode, sheet);\r\n    return sheet;\r\n  }\r\n\r\n  static #store(ownerNode, sheet) {\r\n    GSCacheStyles.set(sheet.id, sheet);\r\n  }\r\n\r\n  static #remove(ownerNode, sheet) {\r\n    GSCacheStyles.remove(sheet.id);\r\n    ownerNode[observer]?.disconnect?.();\r\n    ownerNode[observer] = undefined;\r\n  }\r\n\r\n  static get #sorted() {\r\n    return GSCacheStyles.styles;\r\n  }\r\n\r\n  /**\r\n   * List of adoptable styles or links. Filter only those with dataset.adoptable=true\r\n   * @returns {HTMLStyleElement|HTMLLinkElement}\r\n   */\r\n  static get #adoptable() {\r\n    return Object.values(document.styleSheets)\r\n      .filter(o => o.ownerNode)\r\n      .filter(o => o.ownerNode.dataset.adoptable)\r\n      .filter(o => !o.ownerNode[adoptedId]);\r\n  }\r\n\r\n  static #preload() {\r\n    GSDOM.queryAll(document.head, 'link[rel=\"preload\"][as=\"style\"]')\r\n    .forEach(el => {\r\n      el.remove();\r\n      document.head.appendChild(el);\r\n    });\r\n  }\r\n\r\n  static #onAttributeChange(mutationList) {\r\n    mutationList.forEach((mutation) => {\r\n       const id = mutation.target[adoptedId];\r\n       const style = GSCacheStyles.get(id);\r\n       if(style) style.disabled = mutation.target.hasAttribute('disabled');\r\n    });\r\n    GSAdoptedEngine.update();\r\n  }\r\n  \r\n  static #monitorAttributes(element) {\r\n    const me = GSAdoptedEngine;\r\n    const callback = me.#onAttributeChange.bind(me);\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(element, {\r\n      attributeFilter: [\"disabled\"],\r\n      attributeOldValue: true,\r\n      subtree: false,\r\n    });\r\n    return observer;\r\n  }\r\n  \r\n  /**\r\n   * Filter style and link(css) elements which will be shared\r\n   * with all web componentes. Filter only those marked with data-adoptable\r\n   * @param {HTMLElement} el \r\n   * @returns {Boolean} Return true if monotired element is selected for further processing\r\n   */\r\n  static #onMonitorFilter(el) {\r\n    return (Boolean(el.dataset?.adoptable))\r\n      && (\r\n        (el instanceof HTMLLinkElement && (el.rel === 'stylesheet' || el.as === \"style\"))\r\n        || el instanceof HTMLStyleElement\r\n      );\r\n  }\r\n\r\n  /**\r\n   * When style added to the HTML page, attach it to the WebComponents\r\n   * @param {HTMLStyleElement|HTMLLinkElement} el \r\n   */\r\n  static #onMonitorConnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    if (el instanceof HTMLStyleElement) {\r\n      me.#adoptStyle(el, el.innerText);\r\n      me.update();\r\n    } else if (el instanceof HTMLLinkElement) {\r\n      GSEvents.wait(el, 'load', 0, false).then(e => {\r\n        if (el.rel === 'preload') return el.rel = \"stylesheet\";\r\n        me.#adoptLink(e.target);\r\n        me.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When style removed, remove from adoptable and update\r\n   * @param {HTMLElement} el \r\n   */\r\n  static #onMonitorDisconnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    me.#sorted.filter(o => o.id === el[adoptedId])\r\n          .forEach(o => me.#remove(el, o));\r\n    me.update();\r\n  }\r\n\r\n  /**\r\n   * Observe DOM tree from mutations\r\n   * @param {HTMLElement} owner Root element to watch DOM tree from \r\n   */\r\n  static observe(owner) {\r\n    const me = GSAdoptedEngine;\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorConnect, false, owner);\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorDisconnect, true, owner);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promisses sequentially\r\n\t * @param {Arrayy<Promise>} ps \r\n\t * @returns \r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport { GSEvent } from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport class GSEventBus {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {String} name EventBus name\r\n     * @param {String} type Event name\r\n     * @param {Object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {String} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {String} name unique buss name\r\n     * @returns {Boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constructor to attach Gesture featuer to an HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {Boolean} swipe Monitor swipe gesture\r\n     * @param {Boolean} tap Monitor tap gesture\r\n     * @param {Boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move: me.#handleTouchMove.bind(me),\r\n            start: me.#handleTouchStart.bind(me),\r\n            end: me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) {\r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 && Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {Number}\r\n     */\r\n    static fingers(e) {\r\n        return e.detail.touches?.length;\r\n    }\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns {GSGesture}\r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport class GSItem extends HTMLElement {\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic properties = {\r\n\t\tactive: { type: Boolean },\r\n\t\tdisabled: { type: Boolean },\r\n\t\tautofocus: { type: Boolean },\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return template content of GS-ITEM element (if exists)\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tget body() {\r\n\t\tlet tpl = GSAttr.get(this, 'template');\r\n\t\tif (tpl) return `<gs-template flat src=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = this.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item elements\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tget items() {\r\n\t\treturn Array.from(this.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSAttr.get(this, 'name', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent GS-* component\r\n\t */\r\n\tget parentComponent() {\r\n\t\treturn GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n\t}\r\n\t\t\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate that parent element contains only specific childrens\r\n\t * @param {*} own \r\n\t * @param {*} tagName \r\n\t * @returns \r\n\t */\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic collect(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Convert GS-ITEM list to JSON\r\n\t * @param {HTMLElement} root Element containing GS-ITEM childs \r\n\t * @returns {Array} Arary of JSON objects\r\n\t */\r\n\tstatic toJSON(root) {\r\n\t\treturn GSItem.collect(root).map(el => el.asJSON(true));\r\n\t}\r\n\r\n\t/**\r\n\t * Make GS-ITEM attributes JSON compatible \r\n\t * @param {*} root \r\n\t * @param {*} definition \r\n\t * @returns \r\n\t */\r\n    static proxify(root, definition) {        \r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, definition));\r\n    }\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSVersion } from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        //if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        }\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport class GSPopper {\r\n\r\n\t/**\r\n\t * A simple wrapper to get element DOMRect\r\n\t * @param {HTMLElement} el \r\n\t * @returns {DOMRect}\r\n\t */\r\n\tstatic asRect(el) {\r\n\t\treturn el.getBoundingClientRect();\r\n\t}\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = GSPopper.asRect(el);\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = GSPopper.asRect(element);\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\r\n\t\tconst css = {\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '0px',\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.translate = `${obj.x}px ${obj.y}px`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tconst astyle = GSDynamicStyle.dynamicStyle(arrow);\r\n\r\n\t\tconst css = {\r\n\t\t\tinset: GSPopper.#inset(pos),\r\n\t\t\tposition: 'absolute',\r\n\t\t\tmargin: '0px',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\twidth: 'max-content',\r\n\t\t\theight: 'max-content',\t\t\t\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\t\tastyle.position = 'absolute';\r\n\r\n\t\tconst srect = GSPopper.asRect(source);\r\n\t\tconst arect = GSPopper.asRect(arrow);\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tconst aopt = {\r\n\t\t\ttranslate: `${arr.x}px ${arr.y}px`,\r\n\t\t\ttop: arr.top ? arr.top : '',\r\n\t\t\tleft: arr.left ? arr.left : ''\r\n\t\t}\r\n\r\n\t\tconst opt = {\r\n\t\t\ttranslate : `${obj.x}px ${obj.y}px`\r\n\t\t};\r\n\r\n\t\tObject.assign(style, opt);\r\n\t\tObject.assign(astyle, aopt);\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst opt = {};\r\n\r\n\t\topt.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\topt.left = '';\r\n\t\t\topt.top = '0px';\r\n\t\t\tshift = 0; //pos.isStart ? size : -1 * size;\r\n\t\t\topt.translate = `${shift}px ${arrowPosH / 2}px`;\r\n\t\t} else {\r\n\t\t\topt.top = '';\r\n\t\t\topt.left = '0px';\r\n\t\t\tshift = 0; //pos.isTop ? size : -1 * size;\r\n\t\t\topt.translate = `${arrowPosW}px ${shift}px`;\r\n\t\t}\r\n\r\n\t\tGSDynamicStyle.applyDynamicStyle(arrow, opt);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {\r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSQueryCSS } from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value);\r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n\r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\treturn document.getElementById(tpl.slice(1));\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTheme class\r\n * @module base/GSTheme\r\n */\r\n\r\n/**\r\n * Switch between dark and light mode\r\n * @Class\r\n */\r\nexport class GSTheme {\r\n\r\n    static #STORAGE = 'gs-theme-mode';\r\n\r\n    /**\r\n     * Changes the theme to 'dark mode' and save settings to local stroage.\r\n     * Basically, replaces/toggles every CSS class that has '-light' class with '-dark'\r\n     * @param {HTMLElement} el \r\n     */\r\n    static darkMode(el) {\r\n        GSTheme.#switch(el, 'light', 'dark');\r\n    }\r\n\r\n    /**\r\n     * Changes the theme to 'light mode' and save settings to local stroage.\r\n     * @param {HTMLElement} el \r\n     */\r\n    static lightMode(el) {\r\n        GSTheme.#switch(el, 'dark', 'light');\r\n    }\r\n\r\n    static #switch(el, from = 'light', to = 'dark') {\r\n\r\n        const root = el || document.body;\r\n\r\n        // TODO  switch dark/light mode ?!??!? \r\n\r\n        // save last state\r\n        GSTheme.theme = to;\r\n    }\r\n\r\n    static get theme() {\r\n        return localStorage.getItem(GSTheme.#STORAGE);\r\n    }\r\n\r\n    static set theme(val) {\r\n        localStorage.setItem(GSTheme.#STORAGE, val);\r\n        window.dispatchEvent(new CustomEvent('gs-theme', { detail: val }));\r\n        const htmlEl = document.head.parentElement;\r\n        if (val) {\r\n            htmlEl.dataset.bsTheme = val;\r\n        } else {\r\n            delete htmlEl.dataset.bsTheme;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get system default theme by media query\r\n     * @returns {String} dark|light \r\n     */\r\n    static getSystemDefaultTheme() {\r\n        const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\r\n        return darkThemeMq.matches ? 'dark' : 'light';\r\n    }\r\n\r\n    static #onTheme(e) {\r\n        const q = new URLSearchParams(location.hash.slice(1));\r\n        GSTheme.theme = q.get('theme');\r\n    }\r\n\r\n    static #setup() {\r\n        window.addEventListener('hashchange', GSTheme.#onTheme)\r\n        let settings = localStorage.getItem(GSTheme.#STORAGE);\r\n        if (settings == null) {\r\n            settings = GSTheme.getSystemDefaultTheme();\r\n        }\r\n\r\n\r\n        if (settings == 'dark') return GSTheme.darkMode();\r\n        if (settings == 'light') return GSTheme.lightMode();\r\n        // TODO switch\r\n\r\n    }\r\n\r\n    static {\r\n        GSTheme.#setup();\r\n        globalThis.GSTheme = GSTheme;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-attribute - toggle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-call - calls a function on a given target (multipel functions supported)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: \r\n * data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * \r\n * data-gs-target determine element on which to execute,\r\n * if not specified, it means current element\r\n * \r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el) {\r\n        const me = this;\r\n        me.#host = el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = GSAttributeHandler.proxify(me.#host);\r\n    }\r\n\r\n    /**\r\n     * Main function to process element data-gs-* attributes\r\n     * @param {Event} e \r\n     */\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    /**\r\n     * Process each individual data-gs-* attribute\r\n     * @param {GSElement} host \r\n     * @param {String|HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleSwap(target);\r\n        me.#handleInject(host, target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    /**\r\n     * Bind provided value to the form or form element\r\n     * @param {HTMLFormElement|HTMLInputElement} target \r\n     * @param {Event} evt \r\n     * @returns \r\n     */\r\n    #handleBinding(target, evt) {\r\n        const source = evt.target.field || evt.target.form || evt.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (!(isField || isForm)) return;\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Trigger 'action' event on target to execute specific function\r\n     * @param {GSElement} target \r\n     */\r\n    #handleAction(target) {\r\n        if (this.action) GSEvents.send(target, 'action', this.action, true, true);\r\n    }\r\n\r\n    /**\r\n     * Set target attribute value\r\n     * @param {HTMLElement} target \r\n     * @returns \r\n     */\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    /**\r\n     * Set value to target propery\r\n     * @param {GSElement} target \r\n     * @returns \r\n     */\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle target css class\r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {*} host \r\n     * @param {*} target \r\n     * @param {*} evt \r\n     * @returns \r\n     */\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)();\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send an event to a target\r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    /**\r\n     * Inject HTML to target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleInject(host, target) {\r\n        if (this.inject) {\r\n            const src = this.#toHTML(this.inject);\r\n            const content = GSDOM.parse(src, true);\r\n            this.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Swap inner HTML on a target\r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleSwap(target) {\r\n        if (this.swap) target.innerHTML =  this.#toHTML(this.swap);\r\n    }\r\n\r\n    /**\r\n     * Convert value as URL to a tempalte or as a component name to inject\r\n     * @param {String} value \r\n     * @returns {String}\r\n     */\r\n    #toHTML(value = '') {\r\n        return value.indexOf('/') < 0 ? `<${value}></${value}>` : `<gs-template flat src=\"${value}\"></gs-template>`;\r\n    }\r\n\r\n    /**\r\n     * Load HTML template and apply to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    /**\r\n     * Apply htmltemplate to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} template \r\n     */    \r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    /**\r\n     * Apply html template to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} content \r\n     */    \r\n    #applyContent(host, target, content) {\r\n        if (host.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    deattach(name = 'click') {\r\n        //GSEvents.deattachListeners(this.#host);\r\n        const me = this;\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        me.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n        const me = this;\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                //return [GSDOM.root(me.#host)];\r\n                return [me.#host.parentComponent];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n        const list = GSDOM.queryAll(document.body, me.target, false, true).filter(el => el.tagName !== 'GS-ITEM'); \r\n        if (list.length === 0) list.push(me.#host);\r\n        return list;\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    /**\r\n     * Is property value JSON\r\n     */\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    /**\r\n     * Is element attribute value JSON\r\n     */\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    /**\r\n     * Wrap any element into data-gs-* handler\r\n     * @param {HTMLElement} el \r\n     * @returns {Proxy}\r\n     */\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    /**\r\n     * Process data-gs-* attributtes on a element\r\n     * @param {HTMLElement} el \r\n     * @param {Event} e \r\n     * @returns \r\n     */\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    /**\r\n     * Create a new attribute handler instance\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     * @param {boolean} override If 'false' will skip existing atributes\r\n     */\r\n    static clone(from, to, override = true) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .filter(o => override || !to.hasAttribute(o.attribute))          \r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    /**\r\n     * Check if component is bindable to events\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static isBindable(el) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        return Object.values(def)\r\n            .filter(o => el.hasAttribute(o.attribute))\r\n            .length > 0;\r\n\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig  last in, first out (LIFO) order of operations.\r\n */\r\nexport class Stack extends Array {\r\n    \r\n    push(item) {\r\n        this.unshift(item);\r\n    }\r\n\r\n    pop() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig first in, first out (FIFO) order of operations.\r\n */\r\nexport class Queue extends Array {\r\n    \r\n    enqueue(item) {\r\n        this.push(item);\r\n    }\r\n\r\n    dequeue() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst tree = new BinaryTree(1, 'AB');\r\n\r\ntree.insert(1, 11, 'AC');\r\ntree.insert(1, 12, 'BC');\r\ntree.insert(12, 121, 'BG', { right: true });\r\n\r\n[...tree.preOrderTraversal()].map(x => x.value);\r\n// ['AB', 'AC', 'BC', 'BCG']\r\n\r\n[...tree.inOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB', 'BC', 'BG']\r\n\r\ntree.value;                // 'AB'\r\ntree.hasChildren;          // true\r\n\r\ntree.find(12).isLeaf;           // false\r\ntree.find(121).isLeaf;          // true\r\ntree.find(121).parent.value;    // 'BC'\r\ntree.find(12).left;             // null\r\ntree.find(12).right.value;      // 'BG'\r\n\r\ntree.remove(12);\r\n\r\n[...tree.postOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB']\r\n*/\r\n\r\n/**\r\n * Binary Tree Node data holder\r\n */\r\nexport class BinaryTreeNode {\r\n\r\n    constructor(key, value = key, parent = null) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n\r\n    /**\r\n     * Check if both left and right are empty.\r\n     */\r\n    get isLeaf() {\r\n        return this.left === null && this.right === null;\r\n    }\r\n\r\n    /**\r\n     * Check if node has children\r\n     */\r\n    get hasChildren() {\r\n        return !this.isLeaf;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Binary tree implementation\r\n */\r\nexport class BinaryTree extends BinaryTreeNode {\r\n\r\n    constructor(key, value = key) {\r\n        super(key, value);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in in-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *inOrderTraversal(node = this) {\r\n        if (node.left) yield* this.inOrderTraversal(node.left);\r\n        yield node;\r\n        if (node.right) yield* this.inOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in post-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *postOrderTraversal(node = this) {\r\n        if (node.left) yield* this.postOrderTraversal(node.left);\r\n        if (node.right) yield* this.postOrderTraversal(node.right);\r\n        yield node;\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in pre-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *preOrderTraversal(node = this) {\r\n        yield node;\r\n        if (node.left) yield* this.preOrderTraversal(node.left);\r\n        if (node.right) yield* this.preOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to find the given parent node and \r\n     * insert a new child BinaryTreeNode either as the left or right child, \r\n     * depending on the passed options object.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @param {*} options \r\n     * @returns {boolean} Return true if data inserted\r\n     */\r\n    insert(\r\n        parentNodeKey,\r\n        key,\r\n        value = key,\r\n        { left, right } = { left: true, right: true }\r\n    ) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === parentNodeKey) {\r\n                const canInsertLeft = left && node.left === null;\r\n                const canInsertRight = right && node.right === null;\r\n                if (!canInsertLeft && !canInsertRight) return false;\r\n                if (canInsertLeft) {\r\n                    node.left = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n                if (canInsertRight) {\r\n                    node.right = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to remove a BinaryTreeNode from the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.left.key === key) {\r\n                node.left = null;\r\n                return true;\r\n            }\r\n            if (node.right.key === key) {\r\n                node.right = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to retrieve the given node in the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    find(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new DoublyLinkedList();\r\n\r\nlist.insertFirst(1);\r\nlist.insertFirst(2);\r\nlist.insertFirst(3);\r\nlist.insertLast(4);\r\nlist.insertAt(3, 5);\r\n\r\nlist.size;                      // 5\r\nlist.head.value;                // 3\r\nlist.head.next.value;           // 2\r\nlist.tail.value;                // 4\r\nlist.tail.previous.value;       // 5\r\n[...list].map(e => e.value);    // [3, 2, 1, 5, 4]\r\n\r\nlist.removeAt(1);               // 2\r\nlist.getAt(1).value;            // 1\r\nlist.head.next.value;           // 1\r\n[...list].map(e => e.value);    // [3, 1, 5, 4]\r\n\r\nlist.reverse();\r\n[...list].map(e => e.value);    // [4, 5, 1, 3]\r\n\r\nlist.clear();\r\nlist.size;                      // 0\r\n*/\r\n\r\n/**\r\n * Node data holder\r\n */\r\nexport class Node {\r\n\r\n    value = null;\r\n    next = null;\r\n    previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    release() {\r\n        this.value = undefined;\r\n        this.next = undefined;\r\n        this.previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DoublyLinkedList {\r\n\r\n    #nodes = [];\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     */\r\n    get size() {\r\n        return this.#nodes.length;\r\n    }\r\n\r\n    /**\r\n     * First element in the list\r\n     */\r\n    get head() {\r\n        return this.size ? this.#nodes[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Last elemet in the list\r\n     */\r\n    get tail() {\r\n        return this.size ? this.#nodes[this.size - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Create new linked node\r\n     * @param {*} value \r\n     * @param {*} nextNode \r\n     * @param {*} previousNode \r\n     * @returns \r\n     */\r\n    create(value, nextNode, previousNode) {\r\n        return new Node(value, nextNode, previousNode);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the given position in the list\r\n     * @param {*} index \r\n     * @param {*} value \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    insertAt(index, value, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index] || null;\r\n        const node = create(value, nextNode, previousNode);\r\n\r\n        if (previousNode) previousNode.next = node;\r\n        if (nextNode) nextNode.previous = node;\r\n        this.#nodes.splice(index, 0, node);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the beginning of the list\r\n     * @param {*} value \r\n     */\r\n    insertFirst(value) {\r\n        this.insertAt(0, value);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the end of the list\r\n     * @param {*} value \r\n     */\r\n    insertLast(value) {\r\n        this.insertAt(this.size, value);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data in the given index\r\n     * @param {Number} index \r\n     * @returns \r\n     */\r\n    getAt(index) {\r\n        return this.#nodes[index];\r\n    }\r\n\r\n    indexOf(val) {\r\n        return this.#nodes.indexOf(val);\r\n    }\r\n\r\n    /**\r\n     * Remove the data at the given index\r\n     * @param {*} index \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    removeAt(index, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index + 1] || null;\r\n\r\n        if (previousNode) previousNode.next = nextNode;\r\n        if (nextNode) nextNode.previous = previousNode;\r\n\r\n        return this.#nodes.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    clear(full = true) {\r\n        if (full) this.#nodes.forEach(o => o.release());\r\n        this.#nodes = [];\r\n    }\r\n\r\n    /**\r\n     * Reverse data order\r\n     */\r\n    reverse() {\r\n        this.#nodes = this.#nodes.reduce((acc, { value }) => {\r\n            const nextNode = acc[0] || null;\r\n            const node = new Node(value, nextNode, null);\r\n            if (nextNode) nextNode.previous = node;\r\n            return [node, ...acc];\r\n        }, []);\r\n    }\r\n\r\n    toArray() {\r\n        return this.#nodes.map(e => e.value);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#nodes;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield* this.#nodes;\r\n    }\r\n\r\n    #validate(index, safe = false) {\r\n        const isInvalid = this.#isInvalidIndex(index);\r\n        if (isInvalid) {\r\n            if (safe) {\r\n                console.log(this.#error());\r\n            } else {\r\n                throw new Error(this.#error());\r\n            }\r\n        }\r\n        return !isInvalid;\r\n    }\r\n\r\n    #isInvalidIndex(index) {\r\n        return !Number.isInteger(index) || index < 0 || index > this.size;\r\n    }\r\n\r\n    #error() {\r\n        return `Invalid index. Current length is ${this.size}.`;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        const list = new DoublyLinkedList();\r\n        if (Array.isArray(data)) data.forEach(v => list.insertLast(v));\r\n        return list;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Tree Node data holder\r\n */\r\nexport class Tree {\r\n\r\n    value;\r\n\r\n    #key = null;\r\n    #parent = null;\r\n    #children;\r\n\r\n    #folder = false;\r\n    #level = 0;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        this.#key = key;\r\n        this.#parent = parent;\r\n        this.#folder = value?.leaf === false;\r\n        this.#level = parent ? parent.level + 1 : level;\r\n        this.#children = this.#folder ? [] : undefined;\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Return tree list from root to this node.\r\n     * TODO: Refactor when iterator \"map\" become available\r\n     */\r\n    get subtree() {\r\n        return Array.from(this.up(undefined, false, true, true));\r\n    }\r\n\r\n    get levelID() {\r\n        return this.subtree.map(o => o.level).join('.');\r\n    }\r\n\r\n    /**\r\n     * Unique node canonical form\r\n     */\r\n    get nodeID() {\r\n        //if (this.parent?.level < 0) return this.index;\r\n        return this.subtree.map(o => o.index).join('.');\r\n    }\r\n\r\n    get path() {\r\n        return this.subtree.map(o => o.key).join('/');\r\n    }\r\n\r\n    get index() {\r\n        return this.parent?.nodes.indexOf(this) || 0;\r\n    }\r\n\r\n    get size() {\r\n        return this.#children?.length || -1;\r\n    }\r\n\r\n    get level() {\r\n        return this.#level;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Check if #children is empty\r\n     */\r\n    get isLeaf() {\r\n        return !this.#folder;\r\n    }\r\n\r\n    get isFolder() {\r\n        return this.#folder;\r\n    }\r\n\r\n    /**\r\n     * Check if has #childrens\r\n     */\r\n    get hasChildren() {\r\n        return this.#folder && this.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get key() {\r\n        this.#key ??= this.nodeID;\r\n        return this.#key;\r\n    }\r\n\r\n    get nodes() {\r\n        return this.#children;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get parent() {\r\n        return this.#parent;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n    /**\r\n     * Check if there are more siblings \r\n     */\r\n    get hasMore() {\r\n        return this.#parent?.size > this.index + 1;\r\n    }\r\n\r\n    get firstChild() {\r\n        return this.hasMore ? this.#children[0] : undefined;\r\n    }\r\n\r\n    get lastChild() {\r\n        return this.hasMore ? this.#children[this.#children.length - 1] : undefined;\r\n    }\r\n\r\n    get next() {\r\n        return this.down(this, false, false).next().value || this.nextSibling || this.parent?.nextSibling;\r\n    }\r\n\r\n    get previous() {\r\n        const node = this.previousSibling;\r\n        return (node?.hasChildren) ? node.lastChild : node || this.up(this, false, false).next().value;\r\n    }\r\n\r\n    get nextSibling() {\r\n        return this.hasMore ? this.#parent.#children[this.index + 1] : undefined;\r\n    }\r\n\r\n    get previousSibling() {\r\n        return this.index > 0 ? this.#parent.#children[this.index - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Clear all #children\r\n     */\r\n    clear() {\r\n        if (this.#children) {\r\n            this.#children.forEach(o => o.release?.());\r\n            this.#children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally, if called externally, \r\n     * make sure node is removed from parent \r\n     */\r\n    release() {\r\n        this.clear();\r\n        this.#key = null;\r\n        this.value = null;\r\n        this.#parent = null;\r\n    }\r\n\r\n    /**\r\n     * Walk down the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     * @param {Boolean} flat Navigate all nodes out of subtree\r\n     */\r\n    *down(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (node.#children?.length) {\r\n            for (let child of node.#children) {\r\n                yield* this.down(child, values, true, reverse, flat);\r\n            }\r\n        }\r\n        if (flat) {\r\n            const item = node.nextSibling || node.parent.nextSibling;\r\n            if (item) yield* this.down(item, values, true, reverse, flat);\r\n        }\r\n        /*\r\n        */\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk up the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     */\r\n    *up(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (flat) {\r\n            let item = node.previousSibling;\r\n            item = item?.isFolder ? item.lastChild : item\r\n            if (item) yield* this.up(item, values, true, reverse, flat);\r\n        }        \r\n        if (node.parent) {\r\n            yield* this.up(node.parent, values, true, reverse, flat);\r\n        }\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk through all nodes\r\n     * @param {*} node \r\n     */\r\n    walk = this.down;\r\n\r\n    /**\r\n     * Simulate array function \"forEach\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */\r\n    forEach(callback, flat = false, reverse = false) {\r\n        this.every((node, index) => {\r\n            callback(node, index);\r\n            return true;\r\n        }, flat, reverse);\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"every\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    every(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let sts = true;\r\n        let i = 0;\r\n        for (let node of it) {\r\n            sts = callback(node, i++);\r\n            if (!sts) break;\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"find\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    find(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let i = 0;\r\n        for (let node of it) {\r\n            if (callback(node, i++)) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"filter\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only childrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    filter(callback, flat, reverse) {\r\n        return [...this.#filtered(callback, flat, reverse)];\r\n    }\r\n\r\n    *#filtered(callback, flat, reverse) {\r\n        const it = this.iterate(flat, reverse);\r\n        for (let node of it) {\r\n            let res = callback(node);\r\n            if (res) yield node;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Iterate all nodes\r\n     * @param {boolean} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {boolean} reverse If set, will iterate up the tree\r\n     */\r\n    *iterate(flat, reverse) {\r\n        reverse ? yield* this.up(this, false, false, false, flat) : yield* this.down(this, false, false,  false, flat);\r\n    }\r\n\r\n    /**\r\n     * Add a new Tree to the tree.\r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    append(key, value = key) {\r\n        let newOne = undefined;\r\n        if (key instanceof Tree) {\r\n            key.#parent = this;\r\n            key.#level = this.#level + 1;\r\n            newOne = key;\r\n        } else {\r\n            newOne = new Tree(key, value, this);\r\n        }\r\n        this.#folder = true;\r\n        this.#children ??= [];\r\n        this.#children.push(newOne);\r\n        return newOne;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method and Array.prototype.push() \r\n     * to add a new Tree to the tree.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    insert(parentNodeKey, key, value = key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === parentNodeKey) {\r\n                const newOne = new Tree(key, value, node);\r\n                this.#folder = true;\r\n                this.#children ??= [];\r\n                node.#children.push(newOne);\r\n                return newOne;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove node from tree. If key is set, will search for first node with matching key.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n\r\n        const me = this;\r\n\r\n        if (key) {\r\n            const node = me.findByKey(key);\r\n            node?.remove();\r\n            return node;\r\n        }\r\n\r\n        if (me.isRoot) throw new Error('Root node can\\'t be removed!');\r\n        const node = me.parent;\r\n        const filtered = node.#children.filter(c => c !== me);\r\n        if (filtered.length !== node.#children.length) {\r\n            node.#children = filtered;\r\n            return me;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method to retrieve the given node in the tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    findByKey(key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convert tree into array list\r\n     * @returns \r\n     */\r\n    flatten(values, inclusive, reverse) {\r\n        return [...this.down(this, values, inclusive, reverse)];\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) Tree.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.#children?.map(o => o.toJSON()) || {};\r\n        return this.isLeaf ? { key: this.key, value: this.value } :\r\n            {\r\n                key: this.key,\r\n                value: this.value,\r\n                items: this.#children.map(o => o.toJSON())\r\n            }\r\n    }\r\n\r\n    /**\r\n     * Make node iterable\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.down();\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof Tree;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) throw new Error('Parent required when data is array');\r\n            raw.forEach(o => Tree.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        const tree = new Tree(obj.key, obj, data ? parent : undefined);\r\n        if (hasParent) parent.append(tree);\r\n        if (items) Tree.from(tree, items);\r\n        return tree;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../base/GSID.mjs\";\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynamic menu etc.\r\n * @Class\r\n */\r\nexport class GSAbstractReadWrite extends GSEvent {\r\n\r\n    static #SELECT = Symbol('select');\r\n\r\n    #id = null;\r\n    #processors = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to register\r\n     * @param {object} processor\r\n     */\r\n    addProcessor(processor) {\r\n        if (!processor) return;\r\n        this.#processors ??= new Set();\r\n        this.#processors.add(processor);\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to remove\r\n     * @param {object} processor \r\n     */    \r\n    removeProcessor(processor) {\r\n        if (processor) this.#processors?.delete(processor);\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Generic event dispatcher, can be overriden to controll when to fire event\r\n     * @param {*} owner \r\n     * @param {*} type \r\n     * @param {*} data \r\n     * @param {*} error \r\n     */\r\n    notify(owner, type, data, error) {\r\n        this.emit(error ? 'error' : type, { type: type, error: error, owner: owner, data: data }, true);\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.#processors?.forEach(c => c.postRead?.(data));\r\n            if (data) me.notify(owner, 'read', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'read', data, e);\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.#processors?.forEach(c => c.postWrite?.(data));\r\n            if (result) me.notify(owner, 'write', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'write', data, e);\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        if (!val) return false;\r\n        GSUtil.asArray(val).forEach(o => o[GSAbstractReadWrite.#SELECT] = true);\r\n        const me = this;\r\n        me.emit('selection-add', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        if (!val) return false;\r\n        delete val[GSAbstractReadWrite.#SELECT];\r\n        const me = this;\r\n        me.emit('selection-remove', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        const me = this;\r\n        GSUtil.asArray(data).forEach(o => me.removeSelected(o));\r\n        me.emit('selection-clear');\r\n        me.emit('select');\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    getSelected(data = []) {\r\n        const me = this;        \r\n        return GSUtil.asArray(data).filter(o => me.isSelected(o));\r\n    }\r\n\r\n    /**\r\n     * Check if record id is in list of selected records\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    isSelected(val) {\r\n        return val ? val[GSAbstractReadWrite.#SELECT] === true : false;\r\n    }\r\n\r\n    /**\r\n     * Get list of selected records.\r\n     * Override in inherited class\r\n     */\r\n    get selected() {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"../base/GSFunction.mjs\";\r\nimport { GSLoader } from \"../base/GSLoader.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSAbstractReadWrite } from \"./AbstractReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #TYPE = \"remote\";\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #key = null;\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically register in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */\r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */\r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return { ...this.#headers };\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = { ...val };\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     */\r\n    get key() {\r\n        return this.#key;\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     * @var {String} \r\n     */\r\n    set key(val) {\r\n        this.#key = val;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */\r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#filter = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#sort = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest', 'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#writer);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSReadWrite.#TYPE, GSReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSData } from \"../base/GSData.mjs\";\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSCachedReadWrite class\r\n * @module base/GSCachedReadWrite\r\n */\r\n\r\n/**\r\n * ReadWrite with cached memory data. \r\n * @Class\r\n */\r\nexport class GSCachedReadWrite extends GSReadWrite {\r\n\r\n    static #TYPE = 'cached';\r\n\r\n    #data = [];\r\n\r\n    #reformat(data = []) {\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        return records;\r\n    }\r\n\r\n    #postFilter(data) {\r\n        const me = this;\r\n        data = GSData.sortData(data, me.sort);        \r\n        let limit = me.limit === 0 ? data.length : me.limit;\r\n        data = data.slice(me.skip, me.skip + limit);\r\n        return data;\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelected(this.#data);\r\n        this.#data = [];\r\n    }\r\n\r\n    append(data) {\r\n        if(!data) return false;\r\n        const me = this;\r\n        data = me.#reformat(data);\r\n        me.#data = me.#data.concat(data);\r\n        return me.#data;\r\n    }\r\n\r\n    remove(data) {\r\n        const me = this;\r\n        me.removeSelected(data);\r\n        me.#data = me.#data.filter(o => o =! data);\r\n        return me.#data;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n\r\n        if (me.#data.length === 0) {\r\n            const data = await super.onRead();\r\n            me.#data = me.#reformat(data);\r\n        }\r\n\r\n        let data = GSData.filterData(me.#data, me.filter, me.fields, me.limit);\r\n        data = me.#postFilter(data);\r\n        return data;\r\n    }\r\n\r\n    async onWrite(owner, data) {\r\n        return this.append(data);        \r\n    }\r\n\r\n    disable() {\r\n        this.#data = [];\r\n        super.disable();\r\n    }\r\n\r\n    set search(val) {\r\n        const me = this;\r\n        me.filter = val ? [{value : val}] : [];\r\n        me.read();\r\n        /*\r\n        let data = GSData.filterData(me.#data, [{value : val}]);\r\n        data = me.#postFilter(data);\r\n        me.notify(me, 'read', data);\r\n        */\r\n    }\r\n\r\n    clearSelected() {\r\n        return super.clearSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return super.getSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSCachedReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSCachedReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSCachedReadWrite.#TYPE, GSCachedReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { Tree } from \"../helpers/Tree.mjs\";\r\n\r\n/**\r\n * A module loading TreeNode class\r\n * @module data/TreeNode\r\n */\r\n\r\n/**\r\n * UI mediator between Tree linked nodes and WebComponents\r\n * @Class\r\n */\r\nexport class TreeNode extends Tree {\r\n\r\n    #multi = false;\r\n    #opened = false;\r\n    #focused = false;\r\n    #selected = false;\r\n    \r\n    #focusedNode = undefined;\r\n    #selectedNode = undefined;\r\n    #controllers = undefined;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        super(key, value, parent, level);\r\n\r\n        if (value?.select === true || (this.multi && parent?.selected)) this.selected = true;\r\n        if (value?.focus === true) this.focused = true;\r\n        if (value?.open === true) this.opened = true;\r\n    }\r\n\r\n    addController(controller) {\r\n        const root = this.root;\r\n        (root.#controllers ??= new Set()).add(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.root.#controllers?.delete(controller);\r\n    }\r\n\r\n    /**\r\n     * Is multi selection available\r\n     */\r\n    get multi() {\r\n        return this.root.#multi === true;\r\n    }\r\n\r\n    set multi(val) {\r\n        this.root.#multi = val === true;\r\n    }\r\n\r\n    get visible() {\r\n        if (this.level < 0) return true;\r\n        return this.parent?.opened;\r\n    }\r\n\r\n    /**\r\n     * select single node, removing seelction flag from all other nodes\r\n     */\r\n    get opened() {\r\n        if (this.level < 0) return true;\r\n        return this.isLeaf ? this.parent?.opened : this.#opened;\r\n    }\r\n\r\n    set opened(val) {\r\n        val = val === true;\r\n        if (val) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus single node, removing focus flag from all other nodes\r\n     */\r\n    get focused() {\r\n        return this.#focused;\r\n    }\r\n\r\n    set focused(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const changed = this.#focused != val;\r\n        const focusedNode = root.focusedNode();\r\n        \r\n        root.#focusedNode = undefined;        \r\n        this.#focused = val;\r\n        if (focusedNode && focusedNode !== this) {\r\n            focusedNode.focused = false;\r\n        }\r\n\r\n        if (val) root.#focusedNode = this;\r\n        if (changed) root.#controllers?.forEach((c) => c.onFocusChanged?.(this));\r\n    }\r\n\r\n    /**\r\n     * Select single or multi node, depending on multi selection flag\r\n     * If single, remove selection flag from all other nodes\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    set selected(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const selectedNode = root.selectedNode();\r\n        const changed = this.#selected != val;\r\n        this.#selected = val;\r\n        if (val) {\r\n            if (selectedNode && selectedNode !== this && !root.multi) {\r\n                selectedNode.selected = false;\r\n            }\r\n            root.#selectedNode = this;\r\n        }\r\n        if (changed) {\r\n            root.#controllers?.forEach((c) => c.onSelectionChanged?.(this, selectedNode));\r\n            if (root.multi) root.#controllers?.forEach((c) => c.onSelectionChanged?.(this.parent, selectedNode));\r\n        } \r\n    }\r\n\r\n    get isPartialySelected() {\r\n        return this.selected && this.hasChildren && this.nodes.length > this.nodes.filter(n => n.selected).length;\r\n    }\r\n\r\n    /* hide from public\r\n    get host() {\r\n        return this[Symbol.for('gs-element')];\r\n    }\r\n\r\n    set host(el) {\r\n        this[Symbol.for('gs-element')] = el;\r\n    }\r\n    */\r\n\r\n    selectAll() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            this.deselectAll();\r\n            this.selected = true;\r\n            return\r\n        }\r\n        this.#selectionFlag(true);\r\n        root.#selectedNode = this;\r\n        root.#controllers?.forEach((c) => c.onSelectAll?.(root));\r\n    }\r\n\r\n    deselectAll() {\r\n        const root = this.root;\r\n        this.#selectionFlag(false);\r\n        root.#selectedNode = undefined;\r\n        root.#controllers?.forEach((c) => c.onDeselectAll?.(root));\r\n    }\r\n\r\n    /**\r\n     * Return last focused node\r\n     * @returns \r\n     */\r\n    focusedNode() {\r\n        const node = this.root.#focusedNode;\r\n        return node?.focused ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * Return last selected node\r\n     * @returns \r\n     */\r\n    selectedNode() {\r\n        const node = this.root.#selectedNode;\r\n        return node?.selected ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * List all selected nodes.\r\n     * TODO; refactor when Iterator.filter become available \r\n     * @returns \r\n     */\r\n    selectedNodes() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            const node = root.selectedNode()\r\n            return node?.selected ? [node] : [];\r\n        }\r\n        const result = [];\r\n        for (let node of root.walk()) {\r\n            if (node.selected) result.push(node);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Call from external controller data must be refresshed (to notify UI optionally)\r\n     * @param {*} root \r\n     */\r\n    refresh(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onRefresh?.(this));\r\n    }\r\n\r\n    /**\r\n     * Notify controllers about data loading (from async controller)\r\n     * @param {*} root \r\n     */\r\n    loading(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onLoad?.(this));\r\n    }\r\n\r\n    expandAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.expand(root);\r\n        }\r\n    }\r\n\r\n    collapseAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.collapse(root);\r\n        }\r\n    }\r\n\r\n    expand(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        if (!me.parent?.opened) {\r\n            me.parent?.expand(root);\r\n        }\r\n        const update = !me.opened;\r\n        me.#opened = true;\r\n        if (update) me.#expanded(root);\r\n        //me.nodes?.filter( n => !n.opened).forEach(c => c.refresh(root));\r\n        me.nodes?.forEach(c => c.refresh(root));\r\n    }\r\n\r\n    collapse(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        const update = me.#opened || me.parent.#opened;\r\n        me.nodes?.filter(n => n.opened || n.parent.opened).forEach(o => o.collapse(root));\r\n        //me.nodes?.forEach(o => o.collapse(root));\r\n        me.#opened = false;\r\n        if (update) me.#collapsed(root);\r\n    }\r\n\r\n    select(val = true) {\r\n        this.selected = val === true;\r\n    }\r\n\r\n    #expanded(root) {\r\n        root.#controllers?.forEach((c) => c.onExpand?.(this));\r\n    }\r\n\r\n    #collapsed(root) {\r\n        root.#controllers?.forEach((c) => c.onCollapse?.(this));\r\n    }\r\n\r\n    release() {\r\n        if (this.#selected) this.selected = false;\r\n        super.release();\r\n    }\r\n\r\n    append(key, value = key) {\r\n        const me = this;\r\n        const node = super.append(key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onAppend?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    insert(parentNodeKey, key, value = key) {\r\n        const me = this;\r\n        const node = super.insert(parentNodeKey, key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onInsert?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    remove() {\r\n        const node = super.remove();\r\n        if (node) this.root.#controllers?.forEach((c) => c.onInsert?.(node));\r\n        return node;\r\n    }\r\n\r\n    #selectionFlag(val = false) {\r\n        val = val === true\r\n        for (let node of this.walk()) {\r\n            node.selected = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) TreeNode.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.nodes?.map(o => o.toJSON()) || {};\r\n        const obj = Object.assign({\r\n            key: this.key,\r\n            opened: this.#opened,\r\n            focused: this.#focused,\r\n            selected: this.#selected,\r\n            items: undefined\r\n        }, this.value);\r\n        obj.items = this.nodes?.map(o => o.toJSON());\r\n        return obj;\r\n    }\r\n\r\n    static get root() {\r\n        return new TreeNode(null, null, null, -1);\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof TreeNode;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) return TreeNode.from(TreeNode.root, raw);\r\n            raw.forEach(o => TreeNode.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        obj.leaf = !Array.isArray(items);\r\n        const tree = new TreeNode(obj.key, obj, data ? parent : undefined);\r\n        if (items) TreeNode.from(tree, items);\r\n        if (hasParent) parent.append(tree);\r\n        return tree;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { TreeNode } from \"./TreeNode.mjs\";\r\n\r\n/**\r\n * A module loading GSTreeReader class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for reading Tree nodes\r\n * @Class\r\n */\r\nexport class GSTreeReader extends GSReadWrite {\r\n\r\n    #data = TreeNode.root;\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    async write(val) {\r\n        throw new Error('Writer not available for TreeReader')\r\n    }\r\n\r\n    async read(owner) {\r\n        const me = this;\r\n        let node = undefined;\r\n        const data = await super.read(owner);\r\n        if (!this.#data) {\r\n            node = TreeNode.from(data);\r\n            this.#data = node;\r\n        } else {\r\n            const parent = me.filter?.length > 0 ? me.#data.findByKey(me.filter[0]) : me.#data;\r\n            parent.clear();\r\n            node = parent.fromJSON(data);\r\n        }\r\n        me.filter = undefined;\r\n        me.notify(owner, 'read', node);\r\n        return node;\r\n    }\r\n\r\n    disable() {\r\n        super.disable();\r\n        this.#data?.release();\r\n    }\r\n\r\n    notify(owner, type, data, error) {\r\n        const isNode = data instanceof TreeNode;\r\n        if (!error && !isNode && type === 'read') return;\r\n        super.notify(owner, type, data, error);\r\n    }\r\n\r\n    /**\r\n     * Called from Tree when node is expanded \r\n     * @param {*} node \r\n     */\r\n    async onExpand(node) {\r\n        if (node.hasChildren) return;\r\n        node.loading();\r\n        this.filter = node.key;\r\n        return await this.read();\r\n    }\r\n\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSTreeReader} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSTreeReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('tree', GSTreeReader);\r\n    }\r\n\r\n}","// Lit 3.0 Google\r\nconst litUrl = globalThis.GS_LIT_URL || '/bootstrap-lit/assets/lib/lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const Directive = litModule.Directive;\r\nexport const LitElement = litModule.LitElement;\r\nexport const PartType = litModule.PartType;\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const adoptStyles = litModule.adoptStyles;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const createRef = litModule.createRef;\r\nexport const css = litModule.css;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const directive = litModule.directive;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getCompatibleStyle = litModule.getCompatibleStyle;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const guard = litModule.guard;\r\nexport const html = litModule.html;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isServer = litModule.isServer;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const literal = litModule.literal;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const noChange = litModule.noChange;\r\nexport const notEqual = litModule.notEqual;\r\nexport const nothing = litModule.nothing;\r\nexport const range = litModule.range;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const render = litModule.render;\r\nexport const repeat = litModule.repeat;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const staticHtml = litModule.staticHtml;\r\nexport const staticSvg = litModule.staticSvg;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const svg = litModule.svg;\r\nexport const templateContent = litModule.templateContent;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const unsafeStatic = litModule.unsafeStatic;\r\nexport const until = litModule.until;\r\nexport const when = litModule.when;\r\nexport const withStatic = litModule.withStatic;","import { Directive, directive, nothing } from \"../lib.mjs\";\r\n\r\nconst definition = {\r\n    'action': 'gsAction',\r\n    'anchor': 'gsAnchor',\r\n    'attribute': 'gsAttribute',\r\n    'call': 'gsCall',\r\n    'exec': 'gsExec',\r\n    'inject': 'gsInject',\r\n    'property': 'gsProperty',\r\n    'swap': 'gsSwap',\r\n    'target': 'gsTarget',\r\n    'template': 'gsTemplate',\r\n    'toggle': 'gsToggle',\r\n    'trigger': 'gsTrigger',\r\n    'value': 'gsValue'\r\n}\r\n\r\nconst template = {\r\n    'gsAction': undefined,\r\n    'gsAnchor': undefined,\r\n    'gsAttribute': undefined,\r\n    'gsCall': undefined,\r\n    'gsExec': undefined,\r\n    'gsInject': undefined,\r\n    'gsProperty': undefined,\r\n    'gsSwap': undefined,\r\n    'gsTarget': undefined,\r\n    'gsTemplate': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTrigger': undefined,\r\n    'gsValue': undefined\r\n}\r\n\r\nclass DatasetDirective extends Directive {\r\n\r\n    render(obj) {\r\n        console.log(obj);\r\n        return nothing;\r\n    }\r\n\r\n    update(part, [obj, flat = true]) {\r\n\r\n        if (!obj) return nothing;\r\n\r\n        const dataset = part.element.dataset;\r\n        const srcset = obj.dataset || obj;\r\n        const isDataset = srcset instanceof DOMStringMap;\r\n\r\n        if (isDataset) {\r\n            Object.assign(dataset, srcset);\r\n        } \r\n        \r\n        if (flat) this.#remap(dataset, obj);\r\n\r\n        return nothing;\r\n    }\r\n\r\n    #remap(dataset, obj) {\r\n        const opt = Object.assign({}, template);\r\n        const list = Object.entries(obj).filter(v => Object.hasOwn(definition, v[0]));\r\n        if (list.length > 0) {\r\n            list.forEach(kv => opt[definition[kv[0]]] = kv[1]);\r\n            Object.assign(dataset, opt);\r\n        }\r\n    }\r\n}\r\n\r\nexport const dataset = directive(DatasetDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\n\r\n/**\r\n * Generic object property descritptor getter\r\n * @param {Object} instance \r\n * @returns {PropertyDescriptor}\r\n */\r\nfunction descriptors(instance) {\r\n  return Object.entries(Object.getOwnPropertyDescriptors(instance));\r\n}\r\n\r\n/**\r\n * List of all object property descriptors \r\n * @param {Object} instance Object instance \r\n * @returns {Array<PropertyDescriptor>}\r\n */\r\nfunction listProperties(instance) {\r\n  return descriptors(instance)\r\n    .filter(e => typeof e[1].value !== 'function')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List all object property getters\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGetters(instance) {\r\n  return descriptors(Reflect.getPrototypeOf(instance))\r\n    .filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List of all getteble properties from an object\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGettable(instance) {\r\n  return new Set([...listGetters(instance), ...listProperties(instance)]);\r\n}\r\n\r\n/**\r\n * Parse string literal template into Lit html instance\r\n * @param {*} tpl \r\n * @param {*} params \r\n * @returns {function}\r\n */\r\nexport function literalTemplate(tpl, params) {\r\n  const names = Array.from(listGettable(params));\r\n  const vals = names.map(v => params[v]);\r\n  names.push('html');\r\n  vals.push(html);\r\n  return new Function(...names, `return html\\`${tpl}\\`;`)(...vals);\r\n}","/**\r\n * A clone of classMap directive to support CSS directive.\r\n * Lit classs is not expoed, so we have to clone it and create our own.\r\n */\r\n\r\nimport { Directive, PartType, directive, noChange } from \"../lib.mjs\";\r\n\r\nclass CssMapDirective extends Directive {\r\n\r\n    constructor(partInfo) {\r\n        super(partInfo);\r\n        if (partInfo.type !== PartType.ATTRIBUTE ||\r\n            partInfo.name !== 'css' ||\r\n            partInfo.strings?.length > 2) {\r\n            throw new Error('`classMap()` can only be used in the `css` attribute ' +\r\n                'and must be the only part in the attribute.');\r\n        }\r\n    }\r\n\r\n    render(classInfo) {\r\n        // Add spaces to ensure separation from static classes\r\n        return (' ' +\r\n            Object.keys(classInfo)\r\n                .filter((key) => classInfo[key])\r\n                .join(' ') +\r\n            ' ');\r\n    }\r\n\r\n    update(part, [classInfo]) {\r\n\r\n        // Remember dynamic classes on the first render\r\n        if (this._previousClasses === undefined) {\r\n            this._previousClasses = new Set();\r\n            if (part.strings !== undefined) {\r\n                this._staticClasses = new Set(part.strings\r\n                    .join(' ')\r\n                    .split(/\\s/)\r\n                    .filter((s) => s !== ''));\r\n            }\r\n\r\n            for (const name in classInfo) {\r\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\r\n                    this._previousClasses.add(name);\r\n                }\r\n            }\r\n            return this.render(classInfo);\r\n        }\r\n\r\n        const classList = part.element.classList;\r\n\r\n        // Remove old classes that no longer apply\r\n        for (const name of this._previousClasses) {\r\n            if (!(name in classInfo)) {\r\n                classList.remove(name);\r\n                this._previousClasses.delete(name);\r\n            }\r\n        }\r\n\r\n        // Add or remove classes based on their classMap value\r\n        for (const name in classInfo) {\r\n            // We explicitly want a loose truthy check of `value` because it seems\r\n            // more convenient that '' and 0 are skipped.\r\n            const value = !!classInfo[name];\r\n            if (value !== this._previousClasses.has(name) &&\r\n                !this._staticClasses?.has(name)) {\r\n                if (value) {\r\n                    classList.add(name);\r\n                    this._previousClasses.add(name);\r\n                } else {\r\n                    classList.remove(name);\r\n                    this._previousClasses.delete(name);\r\n                }\r\n            }\r\n        }\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * A directive that applies dynamic CSS classes.\r\n *\r\n * This must be used in the `css` attribute and must be the only part used in\r\n * the attribute. It takes each property in the `classInfo` argument and adds\r\n * the property name to the element's `classList` if the property value is\r\n * truthy; if the property value is falsey, the property name is removed from\r\n * the element's `css`.\r\n *\r\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\r\n * truthy.\r\n *\r\n * @param classInfo\r\n */\r\nexport const cssMap = directive(CssMapDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class ButtonTypes {\r\n\r\n    static values = ['button', 'reset', 'submit'];\r\n\r\n    static is(val) {\r\n        return ButtonTypes.values.includes(val);\r\n    }\r\n\r\n    static isReest(val) {\r\n        return ButtonTypes.values.indexOf(val) === 1;\r\n    }\r\n\r\n    static isSubmit(val) {\r\n        return ButtonTypes.values.indexOf(val) === 2;\r\n    }\r\n} \r\n\r\nexport const buttonType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ButtonTypes.is(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ColorTypes = ['', 'primary', 'secondary', 'dark', 'light', 'info', 'warning', 'danger', 'alert', 'link', 'success'];\r\n\r\nexport const color = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ColorTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'dektop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n\r\nexport const InputTypes = ['checkbox', 'radio', 'switch', 'number', 'range', 'text', 'passsword', 'email', 'url', 'file'];\r\n\r\nexport const inputType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && InputTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const NavTypes = ['', 'pills', 'tabs', 'underline'];\r\n\r\nexport const nav = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && NavTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PlacementTypes {\r\n\r\n    static values = ['center', 'left', 'right', 'start', 'end', 'top', 'bottom'];\r\n\r\n    static includes(val) {\r\n        return PlacementTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        return PlacementTypes.values.indexOf(val) > 4;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = PlacementTypes.values.indexOf(val)\r\n        return idx > 0 && idx < 5;\r\n    }\r\n\r\n    static isCenter(val) {\r\n        return PlacementTypes.values.indexOf(val) === 0;\r\n    }\r\n\r\n    static isBefore(val) {\r\n        return ['left', 'start', 'top'].includes(val);\r\n    }\r\n\r\n    static isAfter(val) {\r\n        return ['right', 'end', 'bottom'].includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const placement = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PlacementTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PositionTypes {\r\n\r\n    static values = ['absolute', 'fixed', 'relative', 'sticky', 'static'];\r\n\r\n    static includes(val) {\r\n        return PositionTypes.values.includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const position = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PositionTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const SizeTypes = { 'default' : '', 'normal': '',  'medium': '', 'small': 'sm', 'large': 'lg', 'big' : 'lg' };\r\n\r\nexport const size = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && Object.hasOwn(SizeTypes, newVal);\r\n    }\r\n\r\n};","export const stringArrayConverter = {\r\n    fromAttribute: (value, type) => {\r\n        return (value || '').split(',');\r\n    },\r\n    toAttribute: (value, type) => {\r\n        return (value || []).join(',');\r\n    }\r\n  }","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCacheStyles } from '../base/GSCacheStyles.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time even gs-adopted is triggered by the GSAdoptedEngien class,\r\n * all registerd controller will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to preven dom node polution; \r\n * Style  changes  are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me.#host);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values, isGlobal = false) {\r\n    const me = this;\r\n    let style = null;\r\n    if (isGlobal) {\r\n      style = GSCacheStyles.dynamic;\r\n    } else {\r\n      me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');      \r\n      style = me.#dynamic;\r\n    }    \r\n    if (values === null && style.rules.length > 0 ) return style.removeRule(name);\r\n    return style.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.deattach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (!me.#isSelf()) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs).forEach(el => el?.remove());\r\n      me.#refs.clear();\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n  #selectCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#selectCallback = me.#onSelect.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async relink(read = true) {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#listen(read);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.filter = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get selected() {\r\n    return this.store?.selected;\r\n  }\r\n\r\n  isSelected(val) {\r\n    return this.store?.isSelected(val);\r\n  }\r\n\r\n  addSelected(val) {\r\n    return this.store?.addSelected(val);\r\n  }\r\n  \r\n  removeSelected(val) {\r\n    return this.store?.removeSelected(val);\r\n  }\r\n\r\n  clearSelected(data) {\r\n    return this.store?.clearSelected(data);\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    storage?.on('read', me.#readCallback);\r\n    storage?.on('write', me.#writeCallback);\r\n    storage?.on('error', me.#errorCallback);\r\n    storage?.on('select', me.#selectCallback);\r\n    if (read) storage.read(me.#host);\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    storage?.off('read', me.#readCallback);\r\n    storage?.off('write', me.#writeCallback);\r\n    storage?.off('error', me.#errorCallback);\r\n    storage?.off('select', me.#selectCallback);\r\n  }\r\n\r\n  #onSelect(e) {\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for elment move events, properly handling mouse events.\r\n */\r\nexport class ElementMoveController {\r\n\r\n  #host;\r\n  #element;\r\n  #attached = false;\r\n\r\n  #cursorX = 0;\r\n  #cursorY = 0;\r\n\r\n  #mouseUpCallback;\r\n  #mouseDownCallback;\r\n  #mouseMoveCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n    me.#mouseUpCallback = me.#onMouseUp.bind(me);\r\n    me.#mouseDownCallback = me.#onMouseDown.bind(me);\r\n    me.#mouseMoveCallback = me.#onMouseMove.bind(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  attach(element) {\r\n    const me = this;\r\n    if (!me.#attached) {\r\n      me.#element = element;\r\n      me.#attached = true;\r\n      me.#host.attachEvent(me.#element, 'mousedown', me.#mouseDownCallback);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.#cursorX = 0;\r\n    me.#cursorY = 0;\r\n    me.#host.removeEvent(document, 'mouseup', me.#mouseUpCallback);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n  * Call host onStartMove function\r\n  * @param {MouseEvent} e \r\n  */\r\n  #onMouseDown(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n    me.#host.onStartMove?.(e, me.#cursorX, me.#cursorY);\r\n    me.#host.attachEvent(document, 'mouseup', me.#mouseUpCallback, true);\r\n    me.#host.attachEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n   * Remove mousemove listener and call host onEndMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseUp(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n    return me.#host.onEndMove?.(e, me.#cursorX, me.#cursorY);\r\n  }\r\n\r\n  /**\r\n   * Call host onMouseMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseMove(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n\r\n    me.#host.onMouseMove?.(e, me.#cursorX, me.#cursorY);\r\n\r\n    if (me.#cursorX < e.clientX) {\r\n      me.#host.onCursorRight?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorX > e.clientX) {\r\n      me.#host.onCursorLeft?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    if (me.#cursorY < e.clientY) {\r\n      me.#host.onCursorUp?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorY > e.clientY) {\r\n      me.#host.onCursorDown?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #locale;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#locale = host.locale;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#locale !== me.#host?.locale) {\r\n      me.#locale === me.#host?.locale;\r\n      me.updateLanguage(me.#locale);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#locale) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me.#host);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n  static #cache = new Map();\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  // inherited\r\n  hostConnected() {\r\n\r\n  }\r\n\r\n  // inherited\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  // inherited\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#template) return;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      me.#template = TemplateController.#cache.get(ref);      \r\n      me.#lastRef = ref;\r\n      if (ref && !me.#template) TemplateController.#schedule(this);\r\n    }\r\n  }\r\n\r\n  // inherited\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (me.#template) {\r\n      this.#host.removeController(this);\r\n      me.#host.templateInjected?.();\r\n    } \r\n\r\n  }\r\n\r\n  async #load() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (!ref) return;\r\n    let template = null;\r\n    const isTplEl = ref instanceof HTMLTemplateElement;\r\n    const cacheable = GSUtil.isString(ref);\r\n    if (cacheable) {\r\n      template = TemplateController.#cache.get(ref);\r\n    }\r\n    if (!template) {\r\n      template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n      if (cacheable) {\r\n        TemplateController.#cache.set(ref, template);\r\n      }       \r\n    }\r\n    if (template) {\r\n      me.#template = template;\r\n      me.#host.requestUpdate();\r\n    }\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    return GSDOM.templateRef(this.#host);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = false));\r\n    }\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle event when template slot changes\r\n */\r\nexport class SlotController {\r\n\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      const me = this;\r\n      const target = me.#host.renderRoot || me.#host;\r\n      me.#host.attachEvent(target, 'slotchange', me.#onSlotChanged.bind(me));\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    #onSlotChanged(e) {\r\n      e.target.assignedElements().forEach(el => {\r\n        el.onSlotInjected?.(e.target);\r\n      });\r\n    }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\nimport { SlotController } from './controllers/SlotController.mjs';\r\nimport { GSAttributeHandler } from './base/GSAttributeHandler.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    locale: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n  #orientation;\r\n  #localization;\r\n  #dataController;\r\n  #slotController;\r\n  #themes\r\n  #template;\r\n  #content;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.locale = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    //me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n    me.#slotController = new SlotController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    const tpl = GSDOM.templateRef(me);\r\n    if (tpl) me.#template = new TemplateController(me);    \r\n    if (me.isBindable) me.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('storage')) {\r\n      if (me.storage) {\r\n        if (!me.#dataController) {\r\n          me.#dataController = new DataController(me);\r\n        } else {\r\n          me.#dataController.relink();\r\n        }\r\n      } else {\r\n        me.#dataController?.hostDisconnected();\r\n        me.#dataController = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when this element injected in some slot\r\n   * @param {*} slot \r\n   */\r\n  onSlotInjected(slot) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return this.renderTemplate();\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : noChange;\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Called when asynchronnous template is injected into component\r\n   */\r\n  templateInjected() {\r\n    \r\n\t}\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to witch to add parsed CSS\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @param {boolean} isGlobal \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value, isGlobal = false) {\r\n    return this.#adopted.style(id, value, isGlobal);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @param {Number} levels - walk limit\r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '', levels = -1) {\r\n    return GSDOM.closest(this, query, levels);\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.locale, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    //return this.dataset.gsTarget;\r\n    return GSAttributeHandler.isBindable(this);\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template?.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment);\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os);\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol);\r\n  }\r\n\r\n  /**\r\n   * Internal attribute set if component is genrated by other components\r\n   */\r\n  get isGenerated() {\r\n    return this.hasAttribute('generated');\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Get instance of internal styles\r\n   */\r\n  get elementStyles() {\r\n    return this.constructor.elementStyles.map(s => Object.values(s).filter(o => o instanceof CSSStyleSheet).pop()).pop();\r\n  }\r\n\r\n  /**\r\n   * Internal shadow styles rule\r\n   * @param {*} name \r\n   * @returns \r\n   */\r\n  cssRule(name) {\r\n    return Array.from(this.elementStyles.rules).filter(r => r.selectorText === name).pop();\r\n  }\r\n\r\n  /**\r\n   * Set dynamic CSS rule \r\n   * See GSIcon hot it is done\r\n   * @param {*} rule \r\n   * @param {*} name \r\n   * @param {*} value \r\n   */\r\n  setCSSProperty(rule, name, value) {\r\n    this.cssRule(rule).style.setProperty(name, value);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    return GSDOM.allProperties(obj);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, opt);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from \"../GSElement.mjs\";\r\n\r\n/**\r\n * Controller for child element navigation / selection / focusing\r\n */\r\nexport class ElementNavigationController {\r\n\r\n  #host;\r\n  #attached;\r\n  #focused;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#attached = false;\r\n  }\r\n\r\n  get circular() {\r\n    return this.#host?.circular === true;\r\n  }\r\n\r\n  get multiple() {\r\n    return this.#host?.multiple === true;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host.active;\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */\r\n  init() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */  \r\n  attach(el) {\r\n    const me = this;\r\n    if (me.#attached) return;\r\n    me.#attached = true;\r\n    me.#host.attachEvent(el, 'keydown', e => me.onKeyDown(e));\r\n    me.#host.attachEvent(el, 'keyup', e => me.onKeyUp(e));\r\n    me.#host.attachEvent(el, 'click', e => me.onClick(e));\r\n    me.#host.attachEvent(el, 'focusin', e => me.onFocusIn(e));\r\n    me.#host.attachEvent(el, 'focusout', e => me.onFocusOut(e));\r\n  }\r\n\r\n  previous() {\r\n    const me = this;\r\n    let el = me.#focused?.previousElementSibling;\r\n    while (el?.disabled) el = el.previousElementSibling;\r\n    if (me.circular && !el) el = me.lastElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  next() {\r\n    const me = this;\r\n    let el = me.#focused?.nextElementSibling;\r\n    while (el?.disabled) el = el.nextElementSibling;\r\n    if (me.circular && !el) el = me.firstElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    const me = this;\r\n    const active = me.selected;\r\n    if (me.multiple) {\r\n      active.forEach(el => {\r\n        el.active = false;\r\n        el.blur();\r\n      });\r\n    } else if (active) {\r\n      active.active = false;\r\n      active.blur();\r\n    }\r\n    me.#focused = undefined;\r\n    me.#host?.emit('group-reset', undefined, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element selected\r\n   * @param {*} el \r\n   */\r\n  #onSelected(el) {\r\n    const me = this;\r\n    me.#host?.onSelected?.(el);\r\n    me.#host?.emit('group-selected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element deselected\r\n   * @param {*} el \r\n   */\r\n  #onDeselected(el) {\r\n    this.#host?.onDeselected?.(el);\r\n    this.#host?.emit('group-deselected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  #onFocused(el) {\r\n    this.#host?.onFocused?.(el);\r\n    this.#host?.emit('group-focused', el, true);\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  #isNavigable(el) {\r\n    return this.#host?.isNavigable ? this.#host?.isNavigable(el) : true;\r\n  }\r\n\r\n  #focus(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    me.#focused = el;\r\n    if (el) {\r\n      me.#onFocused(me.#focused);\r\n    }\r\n  }\r\n\r\n  #toggle(el) {\r\n    if (!el) return;\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    if (el.active) {\r\n      me.#onSelected(el);\r\n    } else {\r\n      me.#onDeselected(el);\r\n    }\r\n  }\r\n\r\n  #select(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n\r\n    const active = me.selected;\r\n    if (active && !me.multiple) {\r\n      active.active = false;\r\n      me.#toggle(active);\r\n    }\r\n\r\n    if (me.multiple) {\r\n      el.active = !el.active;\r\n    } else {\r\n      el.active = true;\r\n    }\r\n    me.#toggle(el);\r\n  }\r\n\r\n  onFocusOut(e) {\r\n    const me = this;\r\n    //if (me.#focused === e.target) me.#focused = undefined;\r\n  }\r\n\r\n  onFocusIn(e) {\r\n    const me = this;\r\n    me.#focus(e.target)\r\n  }\r\n\r\n  onClick(e) {\r\n    const me = this;\r\n    const el = e.composedPath()\r\n    .filter(el => el instanceof GSElement)\r\n    .filter(el => el.parentComponent === me.#host).pop();\r\n    if (!me.#isNavigable(el)) return;\r\n    if (e.ctrlKey) me.reset();\r\n    me.#onDeselected(me.selected);\r\n    me.#select(el);\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        me.next();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'Space':\r\n      case 'Enter':\r\n        me.#focused?.click();\r\n        break;\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEventBus } from \"../base/GSEventBus.mjs\";\r\n\r\n/**\r\n * Controller for multiple elements groups\r\n */\r\nexport class GroupController {\r\n\r\n  #host;\r\n\r\n  #busEvent;\r\n  #busCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    if (me.#host.group) {\r\n      me.#busCallback = me.#onBusEvent.bind(me);\r\n      me.#busEvent = GSEventBus.register(me.#host.clazzName);\r\n      me.#busEvent.on(me.#host.group, me.#busCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#busEvent?.off(me.#host.group, me.#busCallback);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  #onBusEvent(e) {\r\n    this.#host.onBusEvent?.(e);\r\n  }\r\n\r\n  notify(data) {\r\n    const me = this;\r\n    me.#busEvent?.emit(me.#host.group, {owner: me.#host, item:data}); \t\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\n\r\nexport class GSAccordionElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    autoclose: { type: Boolean },\r\n    cssItem: { reflect: true, attribute: 'css-item' },\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    data: { type: Array }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.settings;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n       @notify=\"${me.#onNotify.bind(me)}\"\r\n       @click=\"${me.#onClick}\" \r\n       @keyup=\"${me.#onKeyUp}\" \r\n       class=\"accordion ${classMap(me.renderClass())}\">\r\n       ${this.#renderItems()}\r\n       <slot></slot></div>`\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-accordion-item');\r\n  }\r\n\r\n  get settings() {\r\n    const cfg = this.constructor.properties;\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n  }\r\n\r\n  close() {\r\n    this.#state(false);\r\n  }\r\n\r\n  open() {\r\n    this.#state(true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-accordion-item generated\r\n        .opened=\"${ifDefined(o.disabled === true)}\" \r\n        message=\"${ifDefined(o.message)}\" \r\n        template=\"${ifDefined(o.template)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-accordion-item>`;\r\n    });\r\n  }\r\n\r\n  #state(val = false) {\r\n    this.items.forEach(el => el.opened = val);\r\n    this.notify();\r\n  }\r\n\r\n  #onNotify(e) {\r\n    const me = this;\r\n    if (me.autoclose && e.target.opened) {\r\n      me.items.filter(el => el != e.target).forEach(el => el.opened = false);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const isItemCloser = e?.composedPath()[0]?.matches('.accordion-button');\r\n    if(isItemCloser) e.target.toggle?.();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        e.target.close?.();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.target.open?.();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSAccordionItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    message: { reflect: true, },\r\n    title: { reflect: true, },\r\n    opened: { type: Boolean, reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-ACCORDION';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const owner = me.owner;\r\n    const cssHeader = me.cssHeader || owner?.cssHeader;\r\n    const cssBody = me.cssBody || owner?.cssBody;\r\n    return html`<div class=\"accordion-item ${me.css}\">\r\n             <h2 class=\"accordion-header\">\r\n               <button type=\"button\" \r\n                class=\"accordion-button  ${cssHeader} ${me.opened ? '' : 'collapsed'}\"> \r\n                 ${me.translate(me.title)}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse  ${cssBody} ${me.opened ? 'show' : ''}\">\r\n               <div class=\"accordion-body\">\r\n                   ${me.translate(me.message)}\r\n                   ${me.renderTemplate()}\r\n                   <slot></slot>\r\n               </div>\r\n             </div>      \r\n     </div>`\r\n  }\r\n\r\n  open() {\r\n    this.notify(true);\r\n  }\r\n  \r\n  close() {\r\n    this.notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.notify(!this.opened);\r\n  }\r\n\r\n  notify(val = false) {\r\n    const me = this;\r\n    me.opened = val;\r\n    super.notify();\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-accordion') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSAlertElement extends GSElement {\r\n\r\n    static properties = {\r\n        message: { reflect: true },\r\n        color: { ...color },\r\n        closed: { reflect: true, type: Boolean },\r\n        closable: { reflect: true, type: Boolean },\r\n        delay: { reflect: true, type: Number },\r\n    }\r\n\r\n    #ref;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.delay = 1;\r\n        this.#ref = createRef();\r\n        this.#data = this.#proxify(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div role=\"alert\" dir=\"${ifDefined(me.direction)}\" ${ref(me.#ref)} \r\n            @mouseover=\"${() => me.#pause = true}\"\r\n            @mouseout=\"${() => me.#pause = false}\"\r\n            class=\"alert fade ${classMap(me.renderClass())}\" >\r\n            ${me.#first}\r\n            ${me.renderTemplate()}\r\n            <slot></slot>\r\n            ${me.#second}\r\n        </div>`;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#handleBillboard();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        if (!changed.has('opened')) return;\r\n        this.#handleBillboard();\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': !me.closed,\r\n            'alert-dismissible': me.closable,\r\n            [`alert-${this.color}`]: me.color,\r\n\r\n        }\r\n        return css;\r\n    }\r\n\r\n    open() {\r\n        this.notify(false);\r\n    }\r\n\r\n    close() {\r\n        this.notify(true);\r\n    }\r\n\r\n    toggle() {\r\n        this.notify(!this.closed);\r\n    }\r\n\r\n    notify(val = false) {\r\n        const me = this;\r\n        me.closed = val;\r\n        if (me.closed) setTimeout(() => { me.#ref.value.classList.toggle('d-none', true) }, 250);\r\n        super.notify();\r\n    }\r\n\r\n    get isBillboard() {\r\n        return this.#data?.length > 0;\r\n    }\r\n\r\n    get #message() {\r\n        return this.translate(this.message);\r\n    }\r\n\r\n    get #first() { return this.rtl ? this.#button : this.#message; };\r\n\r\n    get #second() { return this.rtl ? this.#message : this.#button; };\r\n\r\n    get #button() {\r\n        return this.closable ? html`<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"${this.close}\"></button>` : '';\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, {message:{}}));\r\n    }\r\n\r\n    #handleBillboard() {\r\n        const me = this;\r\n        if (me.closed) {\r\n            clearInterval(me.#interval);\r\n            me.#interval = 0;\r\n        } else {\r\n            me.#billboard();\r\n        }        \r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        if (!me.isBillboard) return;\r\n        const items = me.#data;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].message;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].message;\r\n        }, me.delay * 1000);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-alert');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, size, buttonType, ButtonTypes, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSButtonElement extends GSElement {\r\n\r\n  static properties = {\r\n    type: { ...buttonType }, // reset, submit\r\n    size: { ...size }, // small, large, normal\r\n    color: { ...color },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    toggleColor: { ...color, attribute : 'toggle-color' },\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    outline: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    toggling: { type: Boolean },\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    text: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'button';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<button part=\"button\" role=\"button\" ${ref(me.#refEl)}\r\n        dir=\"${ifDefined(me.direction)}\"\r\n        type=\"${ifDefined(me.type)}\" \r\n        class=\"btn ${classMap(me.renderClass())}\" \r\n        title=\"${ifDefined(me.#tooltip)}\"\r\n        ?disabled=${me.disabled}\r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"\r\n        @click=\"${me.#onClick}\">\r\n          ${me.#first} ${me.#second}</button>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n      'focus-ring': document.activeElement === me,\r\n      [`text-${me.text}`]: me.text,\r\n      [`btn-${size}`]: size,\r\n      [`btn-outline-${me.color}`]: me.outline,\r\n      [`btn-${me.color}`]: !me.outline && me.color,\r\n      [`btn-${me.toggleColor}`]: me.active && me.toggleColor,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    if(me.toggling) me.toggle();\r\n    me.iconEl?.animate();\r\n    if (me.isReset) return me.form?.reset();\r\n    if (me.isSubmit) return me.form?.submit();\r\n    me.notify();\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get isReset() {\r\n    return ButtonTypes.isReest(this.type);\r\n  }\r\n\r\n  get isSubmit() {\r\n    return ButtonTypes.isSubmit(this.type);\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form, form');\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #tooltip() {\r\n    return this.translate(this.tooltip);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-button');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { unsafeHTML, classMap, html, ifDefined, css } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\n\r\nexport class GSCalendarElement extends GSElement {\r\n\r\n  static style = css`.year::-webkit-outer-spin-button,.year::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;} .year {-moz-appearance: textfield;} .day:focus{font-weight: bold;}`\r\n\r\n  static properties = {\r\n    date: {},\r\n    target: {},\r\n    format: { hasChanged: notEmpty },\r\n    year: { type: Number },\r\n    month: { type: Number, hasChanged: numGE0 },\r\n    day: { type: Number, hasChanged: numGE0 },\r\n    arrovPrev: { attribute: 'arrow-prev' },\r\n    arrowNext: { attribute: 'arrow-next' },\r\n    cssDays: { attribute: 'css-days' },\r\n    cssToday: { attribute: 'css-today' },\r\n    cssWeeks: { attribute: 'css-weeks' },\r\n    cssMonth: { attribute: 'css-month' },\r\n    cssYear: { attribute: 'css-year' },\r\n    cssNav: { attribute: 'css-nav' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    minYear: { attribute: 'year-min', type: Number },\r\n    maxYear: { attribute: 'year-max', type: Number },\r\n  }\r\n\r\n  #date;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.#date = new GSDate();\r\n    me.#date.locale = GSUtil.locale;\r\n    me.locale = GSUtil.locale;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.minYear = 1900;\r\n    me.maxYear = 2100;\r\n    me.arrowPrev = '&#10094;';\r\n    me.arrowNext = '&#10095;';\r\n    me.cssNav = 'btn-light';\r\n    me.cssToday = 'btn-secondary';\r\n    me.cssSelected = 'btn-primary';\r\n    me.cssWeeks = 'fw-bold text-bg-dark';\r\n    me.cssYear = 'form-control fs-5 fw-bold border-0 text-center m-1 p-0';\r\n    me.cssMonth = 'form-control fs-3 fw-bold border-0 text-center m-1 p-0';\r\n  }\r\n\r\n  get date() {\r\n    const me = this;\r\n    //return this.#date.toISOString();\r\n    return new Proxy(this.#date, {\r\n      set(target, prop, value) {\r\n        if (typeof target[prop] != 'function') {\r\n          target[prop] = value;\r\n          me.#update();\r\n        }\r\n        return true;\r\n      },\r\n      get(target, prop, receiver) {\r\n        const value = target[prop];\r\n        if (value instanceof Function) {\r\n          return function (...args) {\r\n            try {\r\n              return value.apply(this === receiver ? target : this, args);\r\n            } finally {\r\n              me.#update();\r\n            }\r\n          };\r\n        }\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  previousMonth() {\r\n    const me  =this;\r\n    if (me.month == 0) {\r\n      me.month = 11;\r\n      me.year--;\r\n    } else {\r\n      me.month--;\r\n    }\r\n  }\r\n\r\n  nextMonth() {\r\n    const me  =this;\r\n    if (me.month == 11) {\r\n      me.month = 0;\r\n      me.year++;\r\n    } else {\r\n      me.month++;\r\n    } \r\n  }\r\n\r\n  previousYear() {\r\n    this.year--;\r\n  }\r\n\r\n  nextYear() {\r\n    this.year++;\r\n  }\r\n\r\n  formatted(date) {\r\n    const me = this;\r\n    return (date || me.#date).format(me.format, me.locale);\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    const date = new GSDate(me.#date);\r\n    me.#updateTarget(date);\r\n    me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#date.year = me.year;\r\n    me.#date.month = me.month;\r\n    me.#date.day = me.day;\r\n    me.#date.locale = me.locale;\r\n\r\n    const week = GSDate.dayList(true, me.locale).map(v => html`<div class=\"col\">${v}</div>`);\r\n    const months = me.#monthsHTML();\r\n    const year = me.#yearHTML();\r\n\r\n    return html`\r\n          <div class=\"container-fluid text-center ${classMap(me.renderClass())}\"\r\n          dir=\"${ifDefined(me.direction)}\"\r\n          @keydown=\"${me.#onKey}\"\r\n          @click=\"${me.#onDay}\">\r\n          <div class=\"row align-items-center ${me.cssHeader} header\">\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.previousMonth}\" class=\"btn ${me.cssNav} arrow prev\">${unsafeHTML(me.arrowPrev)}</a>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  ${months}\r\n                  ${year}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.nextMonth}\" class=\"btn ${me.cssNav} arrow next\">${unsafeHTML(me.arrowNext)}</a>\r\n              </div>\r\n          </div>\r\n          <div class=\"row weeks ${me.cssWeeks}\">${week}</div>\r\n          ${unsafeHTML(me.#daysHTML())}\r\n      </div>`;\r\n  }\r\n\r\n  #updateTarget(date) {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    const tgt = GSDOM.query(document.documentElement, me.target);\r\n    if (!tgt) return;\r\n\r\n    if (tgt instanceof HTMLInputElement) {\r\n      if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n      return tgt.value = me.formatted(date);\r\n    }\r\n    GSDOM.setHTML(tgt, me.formatted(date));\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.locale = me.#date.locale;\r\n  }\r\n\r\n  #isToday(v, date) {\r\n    const me = this;\r\n    return v && GSUtil.asNum(v) === date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n  }\r\n\r\n  #daysHTML() {\r\n    const me = this;\r\n    const today = new GSDate();\r\n    today.locale = me.locale;\r\n    const list = me.#date.build(me.locale);\r\n    const result = list\r\n      .map(v => {\r\n        const c1 = me.#isToday(v, today) ? me.cssToday : '';\r\n        const c2 = me.#isToday(v, me.#date) ? me.cssSelected : '';\r\n\r\n        const d = v ? `<a tabindex=\"0\" href=\"#\" class=\"btn shadow-none ${c1} ${c2} day\" data-day=\"${v}\">${v}</a>` : ''\r\n        return `<div class=\"col p-0\">${d}</div>`;\r\n      })\r\n      .map((v, i) => {\r\n        if (i === 0) return `<div class=\"row days\">${v}`;\r\n        const isBreak = i % 7 == 0;\r\n        return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n      });\r\n    result.push('</div>');\r\n    return result.join('');\r\n  }\r\n\r\n\r\n  #monthsHTML() {\r\n    const me = this;\r\n    const current = me.#date.MMMM;\r\n    const months = GSDate.monthList(false, me.locale);\r\n    const list = months.map((v, i) => html`<option value=\"${i}\" selected=${ifDefined(current == v ? true : undefined)}>${v}</option>`);\r\n    //const list = GSDate.monthList(false, me.locale).map((v, i) => html`<option value=\"${i}\" ${current == v ? 'selected' : ''}>${v}</option>`);\r\n    return html`<select @change=\"${me.#onMonth}\" name=\"month\" class=\"month ${me.cssMonth}\" value=\"${months.indexOf(current)}\">${list}</select>`;\r\n  }\r\n\r\n  #yearHTML() {\r\n    const me = this;\r\n    return html`<input @change=\"${me.#onYear}\" name=\"year\" class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n  }\r\n\r\n  #onDay(e) {\r\n    GSEvents.prevent(e);\r\n    if (!e.target.classList.contains('day')) return;\r\n    this.day = GSUtil.asNum(e.target.dataset.day, this.day);\r\n  }\r\n\r\n  #onMonth(e) {\r\n    this.month = e.target.selectedIndex;\r\n  }\r\n\r\n  #onYear(e) {\r\n    this.year = e.target.value;\r\n  }\r\n\r\n  #onKey(e) {\r\n    console.log(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-calendar');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCardElement extends GSElement {\r\n\r\n  static styles = css`.card-header, .card-footer{ background-color: inherit; color: inherit;}`;\r\n\r\n  static properties = {\r\n\r\n    imageStyle: { type: Object, attribute: 'image-style', reflect : true },\r\n\r\n    overlay: { type: Boolean },\r\n    placement: { ...placement },\r\n    align: { ...placement },\r\n\r\n    image: {},\r\n    title: {},\r\n    subtitle: {},\r\n    text: {},\r\n    footer: {},\r\n    header: {},\r\n\r\n    colorText: { attribute: 'color-text' },\r\n    colorBack: { attribute: 'color-back' },\r\n    colorBorder: { attribute: 'color-border' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssSubtitle: { attribute: 'css-subtitle' },\r\n    cssText: { attribute: 'css-text' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssImage: { attribute: 'css-image' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.border = false;\r\n    this.shadow = false;\r\n    this.align = 'start';\r\n    this.placement = 'top';\r\n    this.imageStyle = this.imageStyle || {};\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const content =  me.isVertical ? me.#renderVertical() : me.#renderHorizontal();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"card ${classMap(me.renderClass())}\">${content}</div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return [me.#imageTop, me.#header, me.#body, me.#footer, me.#imageBottom];\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    const start = PlacementTypes.isBefore(me.placement);\r\n    const startClass = start ? 'col-4' : 'col-8';\r\n    const endClass = start ? 'col-8' : 'col-4';\r\n    const startHtml = start ? me.#images : me.#body;\r\n    const endHtml =  start ? me.#body : me.#images;\r\n    return html`<div class=\"row g-0\">\r\n        <div class=\"${startClass}\">\r\n            ${startHtml}\r\n        </div>\r\n        <div class=\"${endClass}\">\r\n          ${endHtml}\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      border: me.border || me.colorBorder,\r\n      [`text-${me.align}`]: me.align,\r\n      [`text-${me.colorText}`]: me.colorText,\r\n      [`bg-${me.colorBack}`]: me.colorBack,\r\n      [`border-${me.colorBorder}`]: me.colorBorder,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return PlacementTypes.isHorizontal(this.placement);\r\n  }\r\n\r\n  get #body() {\r\n    const me = this;\r\n    return html`<div class=\"${me.overlay ? 'card-img-overlay' : 'card-body'} ${me.cssBody}\">\r\n      <h5 class=\"card-title  ${me.cssTitle}\"><slot name=\"title\">${me.translate(me.title)}</slot></h5>\r\n      <h6 class=\"card-subtitle  ${me.cssSubtitle}\"><slot name=\"subtitle\">${me.translate(me.subtitle)}</slot></h6>\r\n      <p class=\"card-text ${me.cssText}\"><slot name=\"text\">${me.translate(me.text)}</slot></p>\r\n      <slot name=\"body\"></slot>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  get #header() {\r\n    return this.overlay ? '' : html`<div class=\"card-header  ${this.cssHeader}\"><slot name=\"header\">${this.header}</slot></div>`;\r\n  }\r\n\r\n  get #footer() {\r\n    return this.overlay ? '' : html`<div class=\"card-footer ${this.cssFooter}\"><slot name=\"footer\">${this.footer}</slot></div>`;\r\n  }\r\n\r\n  get #imageSlot() {\r\n    return html`<slot name=\"image\"></slot>`;\r\n  }\r\n\r\n  get #image() {\r\n    const me = this;\r\n    const css = me.isHorizontal ? 'img-fluid' : 'card-img';\r\n    me.dynamicStyle(me.#styleID, me.imageStyle);\r\n    return html`<img src=\"${me.image}\" class=\"rounded-${me.placement} ${css} ${me.cssImage} ${me.#styleID}\" alt=\"...\">`;\r\n  }\r\n\r\n  get #images() {\r\n    return this.image ? this.#image : this.#imageSlot;\r\n  }\r\n\r\n  get #imageTop() {\r\n    return this.placement === 'top' ? this.#images : '';\r\n  }\r\n\r\n  get #imageBottom() {\r\n    return this.placement === 'bottom' ? this.#images : '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-card');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSCenterElement extends GSElement {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n      class=\"position-absolute top-50 start-50 translate-middle ${classMap(me.renderClass())}\">\r\n    ${me.renderTemplate()}<slot></slot></div>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-center');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenuElement class\r\n * @module components/GSMenuElement\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSMenuElement extends GSElement {\r\n\r\n    static properties = {\r\n        storage: {},\r\n        auto: { type: Boolean, reflect: true },\r\n        opened: { type: Boolean, reflect: true },\r\n        dark: { type: Boolean },\r\n        reverse: { type: Boolean },\r\n        offset: { type: Number },\r\n        data: { type: Array },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {},\r\n        title: {},\r\n        header: {},\r\n        color: {},\r\n        icon: {},\r\n        url: { default: '#' }\r\n    }\r\n\r\n    #menuRef = createRef();\r\n    #styleID = GSID.id;\r\n    #controller = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.offset = 0;\r\n        me.dynamicStyle(me.#styleID);\r\n        me.data = me.#proxify(me);\r\n        me.#controller = new GroupController(this);\r\n    }\r\n\r\n    onBusEvent(e) {\r\n       if (e.detail.owner != this) {\r\n            this.opened = false;\r\n       }\r\n     }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        if (changed.has('opened') && !this.opened) {\r\n            this.#closeSubmenus();\r\n        }\r\n    }\r\n\r\n    updated() {\r\n        this.#updatePosition();\r\n        if (this.opened) {\r\n            this.#controller.notify();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<ul \r\n            ${ref(me.#menuRef)}\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            class=\"dropdown-menu ${classMap(me.renderClass())}\"\r\n            data-gs-class=\"${me.#styleID}\"\r\n            data-menu=\"true\"\r\n            @mouseover=\"${me.#onMouseOver}\"\r\n            @mouseleave=\"${me.#onMouseLeave}\"\r\n            @keydown=\"${me.#onKeyDown}\"\r\n            @click=\"${me.#onClick}\">\r\n            ${me.#items(me.data)}\r\n        </ul>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'submenu': me.dataset.submenu,\r\n            'dropdown-menu-dark': me.dark,\r\n            [me.#styleID]: true,\r\n            'show': me.opened,\r\n            'dropend': !me.reverse,\r\n            'dropstart': me.reverse,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    /**\r\n     * Show at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {HTMLElement} caller\r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n\r\n        const me = this;\r\n        // offset to render under the mouse,\r\n        // important for GSGrid for better UI experience\r\n        const offset = GSUtil.asNum(me.offset, 0);\r\n        let target = caller;\r\n\r\n        if (GSEvents.isMouseOrPointerEvent(x)) {\r\n            const e = x;\r\n            target = e.target;\r\n            y = e.clientY;\r\n            x = e.clientX;\r\n            let offset = GSDOM.offsetParent(me);\r\n            offset = offset ? offset.getBoundingClientRect() : null;\r\n            x = x - (offset?.left || 0);\r\n            y = y - (offset?.top || 0);\r\n        }\r\n\r\n        const cfg = { clientX: x - offset, clientY: y - offset, target: target };\r\n\r\n        requestAnimationFrame(() => {\r\n            const style = {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                left: '0px',\r\n                translate: `${cfg.clientX}px ${cfg.clientY}px`\r\n            };\r\n            const rule = me.dynamicStyle(me.#styleID);\r\n            Object.assign(rule.style, style);\r\n        });\r\n        me.open();\r\n\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    #items(root) {\r\n        const me = this;\r\n        return root.map(el => me.#item(el));\r\n    }\r\n\r\n    #item(el) {\r\n        const me = this;\r\n        const isSub = el.items?.length > 0;\r\n        if (isSub) return me.#renderSubmenu(el);\r\n        if (!(el.header || el.name)) return me.#renderDivider();\r\n        return el.header ? me.#renderHeader(el) : me.#renderMenu(el);\r\n    }\r\n\r\n    #renderHeader(el) {\r\n        return html`<li data-inert=\"true\"><h6 class=\"dropdown-header\">${this.#renderIcon(el)}${el.header}</h6></li>`;\r\n    }\r\n\r\n    #renderDivider() {\r\n        return html`<li data-inert=\"true\"><hr class=\"dropdown-divider\"></li>`;\r\n    }\r\n\r\n    #renderSubmenu(el) {\r\n        const me = this;\r\n        return html`<li>\r\n            <a class=\"dropdown-item dropdown-toggle\" data-toggle=\"true\" href=\"#\">\r\n                <div class=\"d-inline-block w-100\">${me.#renderIcon(el)}${el.name}</div>\r\n            </a>\r\n            <gs-menu auto \r\n                .data=${el.items} \r\n                ?dark=${me.dark} \r\n                ?reverse=\"${me.reverse}\" \r\n                locale=\"${ifDefined(me.locale)}\" \r\n                data-submenu=\"true\">\r\n            </gs-menu>\r\n        </li>`;\r\n    }\r\n\r\n    #renderIcon(el) {\r\n        return el.icon ? html`<gs-icon css=\"mx-1\" name=\"${el.icon}\"></gs-icon>` : '';\r\n    }\r\n\r\n    #renderMenu(el) {\r\n        return html`<li>\r\n                <gs-button css=\"dropdown-item shadow-none\" \r\n                    ${dataset(el, false)}\r\n                    url=\"${el.url}\"\r\n                    title=\"${el.name}\" \r\n                    locale=\"${ifDefined(this.locale)}\" \r\n                    icon=\"${ifDefined(el.icon)}\" \r\n                    text=\"${ifDefined(el.color)}\"\r\n                    data-gs-target=\"${ifDefined(el.target || 'self')}\"\r\n                    data-gs-action=\"${ifDefined(el.action)}\">\r\n                </gs-button></li>`;\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSMenuElement.options));\r\n    }\r\n\r\n    #closeSubmenus(menu) {\r\n        GSDOM.queryAll(this.renderRoot, 'gs-menu', false, false)\r\n            .filter(el => el != menu)\r\n            .forEach(el => el.close());\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.key) {\r\n            case 'Escape':\r\n                me.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        submenu?.close();\r\n        if (me.auto) me.close();\r\n    }\r\n\r\n    #onMouseLeave(e) {\r\n        GSEvents.prevent(e);\r\n        if (this.auto) this.close();\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        me.#closeSubmenus(submenu);\r\n        submenu?.open();\r\n    }\r\n\r\n    #toSubmenu(e) {\r\n        const menuItem = e.target.closest('li');\r\n        return menuItem?.querySelector('gs-menu');\r\n    }\r\n\r\n    #updatePosition() {\r\n        const me = this;\r\n        if (!me.opened) return;\r\n        const rule = me.dynamicStyle(me.#styleID);\r\n        if (me.isSubmenu) {\r\n            const opt = { translate: `0px -25px` };\r\n            if (me.reverse) {\r\n                opt.left = 'inherited';\r\n                opt.right = '100%';\r\n            } else {\r\n                opt.right = 'inherited';\r\n                opt.left = '100%';\r\n            }\r\n            Object.assign(rule.style, opt);\r\n        } else {\r\n            rule.style.translate = null;\r\n            const rect = me.#menu.getBoundingClientRect();\r\n            const offset = window.innerWidth - rect.right;\r\n            me.reverse = offset - 5 < 0;\r\n            if (me.reverse) rule.style.translate = `${offset - 2}px`;\r\n        }\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.dataset.submenu;\r\n    }\r\n\r\n    get #menu() {\r\n        return this.#menuRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-menu');\r\n    }\r\n}\r\n","/*GSContextElement\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContextElement class\r\n * @module components/GSContextElement\r\n */\r\n\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for context menu\r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSContextElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        target: {},\r\n        filter: {},\r\n        altContext: { type: Boolean },\r\n        disabled: { type: Boolean },\r\n    }\r\n\r\n    constructor() {\r\n        super();        \r\n        this.auto = true;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', me.close.bind(me));        \r\n        if (!me.slot) me.#attachTarget();\r\n    }\r\n    \r\n    onSlotInjected(slot) {\r\n        this.#attachTarget();\r\n    }\r\n\r\n    #attachTarget() {\r\n        const me = this;        \r\n        const owner = GSDOM.parent(me.assignedSlot || me);\r\n        let targets = me.target ? GSDOM.queryAll(owner, me.target) : [owner];\r\n        if (!targets.length) targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    }\r\n\r\n    #match(e) {\r\n        const me = this;\r\n        return e.composedPath().filter(el => el.matches)\r\n            .filter(el => el.matches(me.filter ? me.filter : me.target));\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        if (e.shiftKey && me.altContext) return;\r\n        const list = me.#match(e);\r\n        if (list.length === 0) return;\r\n        GSEvents.prevent(e);\r\n        me.popup(e);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show submenu at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n        return this.disabled ? false : super.popup(x, y, caller);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-context');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, notEmpty } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\nexport class GSCompareElement extends GSElement {\r\n\r\n  static styles = css`.slider {\r\n         --gs-position : 50%;\r\n          left : var(--gs-position);\r\n          width: 8px;\r\n          height: 100%;\r\n          border-width: 1px;\r\n          cursor: w-resize;\r\n          border-color: darkgray;\r\n          border-style: solid;\r\n          background-color: lightgray;\r\n      }\r\n      .clipper {\r\n        --gs-position : 50%;\r\n        clip-path: inset(0px var(--gs-position) 0px 0px);\r\n      }\r\n    `;\r\n\r\n  static properties = {\r\n    background: { ...color },\r\n    width: { type: Number },\r\n    height: { type: Number },\r\n    before: { hasChanged: notEmpty },\r\n    after: { hasChanged: notEmpty },\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  #elRef = createRef();\r\n  #clipRef = createRef();\r\n  #slideRef = createRef();\r\n\r\n  #mouseController;\r\n  #elPosition;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.width = 0;\r\n    me.height = 0;\r\n    me.dynamicStyle(me.#styleID);\r\n    me.#mouseController = new ElementMoveController(me);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#mouseController.attach(this.#splitter);\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n         dir=\"${ifDefined(me.direction)}\"\r\n         @loaded=\"${me.#onLoad}\" \r\n         @dblclick=\"${me.#onDoubleClick}\"\r\n         data-gs-class=\"${me.#styleID}\"\r\n         class=\"${classMap(me.renderClass())}\">\r\n      <div class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden\"><slot name=\"before\">${me.#before}</slot></div>\r\n      <div ${ref(me.#clipRef)} class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden clipper\"><slot name=\"after\">${me.#after}</slot></div>\r\n      <div ${ref(me.#slideRef)} class=\"slider position-absolute top-0><slot name=\"control\"></slot></div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      \"position-relative\": true,\r\n      \"user-select-none\": true,\r\n      \"d-contents\": me.isAuto,\r\n      \"h-100\": me.isAuto,\r\n      \"w-100\": me.isAuto,\r\n      \"overflow-hidden\": true,\r\n      [`bg-${me.background}`]: me.background,\r\n      [`${me.#styleID}`]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Handles resizing based on mouse move event\r\n   * @param {MouseEvent} e \r\n   */\r\n  onStartMove(e) {\r\n    this.#elPosition = this.#splitter.getBoundingClientRect();\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    const me = this;\r\n    const offset = me.#elPosition.left;\r\n    const width = me.#elPosition.width;\r\n    const pos = GSUtil.range(e.clientX - offset, 0, width);\r\n    const pct = (pos / width) * 100;\r\n    me.#update(pct);\r\n  }\r\n\r\n  get isAuto() {\r\n    return this.width == 0 || this.height == 0;\r\n  }\r\n\r\n  get isFixed() {\r\n    return !this.isAuto;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  get #before() {\r\n    return this.before ? html`<img @load=\"${this.#onLoad}\" src=\"${me.before}\"></img>` : '';\r\n  }\r\n\r\n  get #after() {\r\n    return this.after ? html`<img @load=\"${this.#onLoad}\" src=\"${me.after}\"></img>` : '';\r\n  }\r\n\r\n  get #isAuto() {\r\n    return this.width === 0 || this.height === 0;\r\n  }\r\n\r\n  get #splitter() {\r\n    return this.#elRef.value;\r\n  }\r\n\r\n  get #slider() {\r\n    return this.#slideRef.value;\r\n  }\r\n\r\n  get #clip() {\r\n    return this.#clipRef.value;\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const me = this;\r\n    if (me.#isAuto) {\r\n      const el = e.target;\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n    }\r\n  }\r\n\r\n  #onDoubleClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#update();\r\n    me.#mouseController.reset();\r\n  }\r\n\r\n  #update(pct = 50) {\r\n    const me = this;\r\n    me.#clip.style.setProperty('--gs-position', `${100 - pct}%`);\r\n    me.#slider.style.setProperty('--gs-position', `${pct}%`);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-compare');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\n\r\n/**\r\n * Helper component to enable controller attachment to the GS WebComponent.\r\n * It is used to simplify and separate templates from logic.\r\n */\r\nexport class GSControllerElement extends GSElement {\r\n\r\n  static properties = {\r\n    module: {},\r\n    controller: {},\r\n  }\r\n\r\n  #clazz = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  updated(changes) {\r\n    super.updated(changes);\r\n    const me = this;\r\n    if (me.isConnected && me.isValid) {\r\n      me.#initialize();\r\n    }\r\n  }\r\n\r\n  get isValid() {\r\n    return this.parentElement instanceof GSElement;\r\n  }\r\n\r\n  async #initialize() {\r\n\r\n    const me = this;\r\n    const host = me.parentElement;\r\n\r\n    if (me.#clazz) return;\r\n\r\n    let clazz = globalThis[me.controller];\r\n    if (!clazz && me.module) {\r\n      const url = GSLoader.normalizeURL(me.module);\r\n      const module = await import(url);\r\n      clazz = module[me.controller];\r\n    }\r\n\r\n    if (clazz) {\r\n      new clazz(host);\r\n      me.#clazz = clazz;\r\n      globalThis[me.controller] = clazz;\r\n    }\r\n\r\n  }\r\n\r\n  static {\r\n    this.define('gs-controller');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSCopyrightElement extends GSElement {\r\n\r\n  static properties = {\r\n    year: { reflect: true, type: Number },\r\n    company: { reflect: true },\r\n    url: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    if (!(me.isCompany && me.isYear)) return '';\r\n    const year = new Date().getFullYear();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"${classMap(me.renderClass())}\"><a target=\"_blank\" href=\"${me.url ? me.url : '#'}\"><small>&copy; ${me.company} ${me.year}. - ${year}.</small></a></div>`;\r\n  }\r\n\r\n  get isCompany() {\r\n    return GSUtil.isStringNonEmpty(this.company);\r\n  }\r\n\r\n  get isYear() {\r\n    return GSUtil.isStringNonEmpty(this.year);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-copyright');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSFunction } from '../base/GSFunction.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/verificator.mjs';\r\nimport { GSReadWriteRegistry } from '../data/ReadWriteRegistry.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for easier access to the GSReadWrite/GSTreeReader\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSDataHandler extends GSElement {\r\n\r\n    static properties = {\r\n        storage: { state: true },\r\n        src: { reflect: true },\r\n        action: { reflect: true },\r\n        mode: { reflect: true },\r\n        reader: { reflect: true },\r\n        writer: { reflect: true },\r\n        limit: { type: Number, reflect: true },\r\n        skip: { type: Number, reflect: true },\r\n        filter: { type: Array, reflect: true },\r\n        sort: { type: Array, reflect: true },\r\n        type: {},\r\n        autoload: { type: Boolean },\r\n        autorefresh: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    }\r\n\r\n    #iid = 0;\r\n    #config = null;\r\n    #handler = null;\r\n    #lifoReadRef = null;\r\n    #lifoWriteRef = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        me.autorefresh = 0;\r\n        me.autoload = false;\r\n        me.flat = true;\r\n        me.filter = [];\r\n        me.sort = [];\r\n        me.limit = 0;\r\n        me.skip = 0;\r\n        me.src = '';\r\n        me.type = 'remote';\r\n        me.mode = 'query';\r\n        me.reader = 'GET';\r\n        me.writer = 'POST';\r\n        if (!me.isGenerated && !me.id) throw new Error('Element ID is required attribute!');\r\n        GSItem.validate(me, me.tagName);\r\n    }\r\n    \r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        const itemHolder = me.isGenerated && me.childElementCount === 0 ? me.parentComponent : me;\r\n        me.#config = GSItem.proxify(itemHolder, GSData.PROPERTIES);\r\n        me.#initLIFO(true);\r\n        me.#initLIFO(false);\r\n    }\r\n    \r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        me.#handler?.disable();\r\n        me.#handler?.removeProcessor(me);\r\n        me.#lifoReadRef = null;\r\n        me.#lifoWriteRef = null;\r\n        clearTimeout(me.#iid);\r\n    }\r\n    \r\n    firstUpdated() {\r\n        const me = this;\r\n        me.#handler = GSReadWriteRegistry.newHandler(me.type, me.storage, false);\r\n        if (me.#config?.length > 0) me.#handler?.addProcessor(me);\r\n        me.#updateHandler();\r\n        me.#handler?.enable();\r\n        me.dataController?.read();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        const me = this;\r\n        me.#updateHandler();\r\n        if (changed.has('autorefresh')) me.schedule(me.autorefresh);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.key = me.key;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.formatSort(me.sort);\r\n        me.#handler.filter = me.formatFilter(me.filter);\r\n        if (me.autoload) me.read();\r\n    }\r\n\r\n    get isDebug() {\r\n        return this.dataset.gsDebug;\r\n    }\r\n\r\n    get handler() {\r\n        return this.#handler;\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    get isCached() {\r\n        return this.#handler?.type == 'cached';\r\n    }\r\n\r\n    set search(val) {\r\n        if (this.#handler) this.#handler.search = val;\r\n    }\r\n\r\n    get key() {\r\n        return this.#config.filter(o => o.key).map(o => o.name).pop() || null;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    formatFilter(val) {\r\n        val = this.#formated(val);\r\n        return Array.isArray(val) ? val : [];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    formatSort(val) {\r\n        val = this.#formated(val);\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort || [];\r\n    }\r\n\r\n    schedule(time = 0) {\r\n        const me = this;\r\n        time = GSUtil.asNum(time) * 1000;\r\n        clearInterval(me.#iid);\r\n        if (time > 0) me.#iid = setInterval(() => {\r\n            me.read(me);\r\n        }, time);\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data, append = false) {\r\n        return this.#lifoWriteRef(data, append);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return this.#handler?.selected;\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        return this.#handler?.addSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        return this.#handler?.removeSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        return this.#handler?.clearSelected();\r\n    }\r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onDataRead(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data Read: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onDataWrite(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data write: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Process data after receive, before notifying \r\n     * @param {*} data \r\n     */\r\n    postRead(data) {\r\n        const me = this;\r\n        if (!Array.isArray(data)) data = [data];\r\n        data.forEach(r => {\r\n            me.#config.forEach(c => {\r\n                let val = r[c.name];\r\n                if (!GSUtil.isNull(val)) {\r\n                    val = GSData.format(c, val);\r\n                    r[c.name] = val;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onDataError(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data error: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #initLIFO(read = true) {\r\n        const me = this;\r\n        if (read) {\r\n            me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n        } else {\r\n            me.#lifoWriteRef = GSFunction.callOnceLifo(me.#lifoWriteRefCallback, me);\r\n        }\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO(true);\r\n        return me.#lifoCall(true);\r\n    }\r\n\r\n    #lifoWriteRefCallback(data, append) {\r\n        const me = this;\r\n        me.#initLIFO(false);\r\n        return me.#lifoCall(false, data, append);\r\n    }\r\n    \r\n    #lifoCall(read = true, data, append) {\r\n        const me = this;\r\n        me.#verifyHandler();        \r\n        if (read) return me.#handler?.read(me);        \r\n        if (!append) me.#handler.clear();\r\n        return me.#handler?.write(me, data);\r\n    }\r\n\r\n    #formated(val) {\r\n        return GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-data-handler');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSDialogElement extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n  static ALIGN = 'end';\r\n  static CANCEL = 'Cancel';\r\n  static CONFIRM = 'Ok';\r\n\r\n  static #STACK = [];\r\n\r\n  static styles = css`dialog{outline:none;}dialog::backdrop{backdrop-filter: blur(4px);}`;\r\n\r\n  static properties = {\r\n\r\n    standard: { reflect: true, type: Boolean },\r\n    opened: { reflect: true, type: Boolean },\r\n    cancelable: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    escapable: { reflect: true, type: Boolean },\r\n    disabled: { reflect: true, type: Boolean },\r\n\r\n\r\n    title: { reflect: true },\r\n    message: { reflect: true },\r\n    cancelText: { reflect: true, },\r\n    confirmText: { reflect: true, },\r\n\r\n    minWidth: { reflect: true, type: Number, attribute: 'min-width' },\r\n    buttonAlign: { reflect: true, attribute: 'button-align' },\r\n\r\n    iconCancel: { reflect: true, attribute: 'icon-cancel' },\r\n    iconConfirm: { reflect: true, attribute: 'icon-confirm' },\r\n\r\n    colorCancel: { attribute: 'color-cancel' },\r\n    colorConfirm: { attribute: 'color-confirm' },\r\n\r\n    cssCancel: { attribute: 'css-cancel' },\r\n    cssConfirm: { attribute: 'css-confirm' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssContent: { attribute: 'css-content' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #dialogRef = createRef();\r\n  #btnConfirmRef = createRef();\r\n  #btnCancelRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    const clazz = GSDialogElement;\r\n    me.opened = false;\r\n    me.standard = false;\r\n    me.cancelable = false;\r\n    me.closable = false;\r\n    me.escapable = false;\r\n    me.disabled = false;\r\n    me.shadow = false;\r\n    me.rounded = false;\r\n\r\n    me.minWidth = 0;\r\n    me.css = clazz.CSS;\r\n    me.cssTitle = clazz.TITLE_CSS;\r\n    me.cssHeader = clazz.HEADER_CSS;\r\n    me.buttonAlign = clazz.ALIGN;\r\n    me.cancelText = clazz.CANCEL;\r\n    me.confirmText = clazz.CONFIRM;\r\n    me.colorCancel = 'secondary';\r\n    me.colorConfirm = 'primary';\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialogElement.#updateStack();\r\n  }\r\n\r\n  updated(changed) {\r\n    super.updated(changed);\r\n    if (changed.has('opened')) {\r\n      this.#onOpenChanged();\r\n    }\r\n  }\r\n\r\n  #onOpenChanged() {\r\n    const me = this;\r\n    let state = null;\r\n    if (me.opened) {\r\n      GSDialogElement.#STACK.push(me);\r\n      state = 'opening';\r\n      if (me.standard) {\r\n        me.#dialog?.open();\r\n      } else {\r\n        me.#dialog?.showModal();\r\n      }\r\n      me.#focusable()?.focus();\r\n    } else {\r\n      state = 'closing';\r\n      GSDialogElement.#STACK.pop();\r\n      me.#dialog?.close();\r\n    }\r\n    me.notify(true, false, state);\r\n  }\r\n\r\n  #renderConfirm() {\r\n    const me = this;\r\n    if (!me.closable) return '';\r\n    return html`<gs-button  ${ref(me.#btnConfirmRef)} \r\n      @click=\"${me.#onConfirm.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconConfirm)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      .disabled=\"${me.disabled}\"  \r\n      css=\"${ifDefined(me.cssConfirm)}\" \r\n      color=\"${ifDefined(me.colorConfirm)}\" \r\n      title=\"${me.confirmText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderCancel() {\r\n    const me = this;\r\n    if (!me.cancelable) return '';\r\n    return html`<gs-button ${ref(me.#btnCancelRef)}\r\n      @click=\"${me.#onCancel.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconCancel)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      css=\"${ifDefined(me.cssCancel)}\" \r\n      color=\"${ifDefined(me.colorCancel)}\" \r\n      title=\"${me.cancelText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderFooter() {\r\n    const me = this;\r\n    const isFooter = me.cancelable || me.closable;\r\n    if (!isFooter) return '';\r\n    return html`<div class=\"card-footer d-flex user-select-none justify-content-${me.buttonAlign} ${me.cssFooter}\">\r\n      ${me.#renderCancel()} &nbsp;${me.#renderConfirm()}\r\n      </div>`;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const styles = { 'min-width': me.minWidth > 0 ? `${me.minWidth}px` : undefined };\r\n    me.dynamicStyle(me.#styleID, styles);\r\n    return html`\r\n        <dialog tabindex=\"-1\" ${ref(me.#dialogRef)} \r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @close=\"${me.#onCancel.bind(me)}\"\r\n            @cancel=\"${me.#onCancel.bind(me)}\"\r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @form=\"${me.#onForm.bind(me)}\"\r\n            @submit=\"${me.#onSubmit.bind(me)}\"\r\n            class=\"${classMap(me.renderClass())}\">\r\n            <div class=\"card ${me.cssContent}\">\r\n                <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n                  <div class=\"card-title ${me.cssTitle}\">\r\n                    <slot name=\"title\">${me.translate(me.title)}</slot>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body ${me.cssBody}\">\r\n                  <slot name=\"body\">\r\n                  ${me.translate(me.message)}\r\n                  ${me.renderTemplate()}\r\n                  </slot>\r\n                </div>\r\n                ${me.#renderFooter()}\r\n            </div>\r\n            <slot name=\"extra\"></slot>\r\n            <div class=\"toast-container position-fixed\"></slot></div>\r\n        </dialog>`\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'dialog': true,\r\n      'p-0': true,\r\n      'border-0': true,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.closable = closable;\r\n    me.cancelable = cancelable;\r\n    me.escapable = cancelable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('click-action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    return this.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    return this.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    index = GSUtil.asNum(index, 0);\r\n    const me = this;\r\n    me.forms?.forEach?.(f => { f.reset(); f.data = data; });\r\n    const tab = me.tab;\r\n    if (tab && index > -1) tab.index = index;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  get form() {\r\n    return this.query('gs-form', true);\r\n  }\r\n\r\n  get forms() {\r\n    return this.queryAll('gs-form', true);\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('gs-tab', true);\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.#dialogRef.value;\r\n  }\r\n\r\n  get #btnConfirm() {\r\n    return this.#btnConfirmRef.value;\r\n  }\r\n\r\n  get #btnCancel() {\r\n    return this.#btnCancelRef.value;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  #focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#btnCancel;\r\n    if (me.closable) return me.#btnConfirm;\r\n    return me;\r\n  }\r\n\r\n  async #onConfirm(e) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const ret = await Promise.all(me.forms?.map?.(form => form.submit()));\r\n    if (ret.indexOf(false) < 0) me.close();\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.close();\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle injected form events\r\n   * @param {*} e \r\n   */\r\n  #onForm(e) {\r\n    let  sts = true;\r\n    const me = this;\r\n    const data = e.detail;\r\n    switch (data.type) {\r\n      case 'submit':\r\n        sts = me.emit('data', data.data, false, false, true);\r\n        if (!sts) GSEvents.prevent(e);\r\n        //me.opened = false;\r\n        break;\r\n      case 'valid':\r\n        me.disabled = data.data === false;     \r\n        break;\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  #onSubmit(e) {\r\n    debugger;\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialogElement.#STACK = GSDialogElement.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  /**\r\n   * Return number of dialogs in a stack\r\n   */\r\n  static get size() {\r\n    return GSDialogElement.#STACK.length;\r\n  }\r\n\r\n  static get top() {\r\n    GSDialogElement.#updateStack();\r\n    const size = GSDialogElement.size;\r\n    return size === 0 ? null :  GSDialogElement.#STACK[size - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialogElement.#updateStack();\r\n    return Array.from(GSDialogElement.#STACK);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-dialog');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, unsafeHTML, html, ifDefined } from '../lib.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSDrawerElement extends GSElement {\r\n\r\n  static properties = {\r\n    autoclose: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    backdrop: { reflect: true, type: Boolean },\r\n    expanded: { reflect: true, type: Boolean },\r\n    scroll: { reflect: true, type: Boolean },\r\n\r\n    min: { reflect: true, type: Number},\r\n    max: { reflect: true},\r\n    fingers: { reflect: true, type: Number},\r\n    placement: {...placement},\r\n    \r\n    transition: { reflect: true },\r\n    duration: { reflect: true, type: Number },\r\n\r\n    title: { reflect: true},\r\n\r\n    cssTitle: { reflect: true, attribute: \"css-title\"},\r\n    cssHead: { reflect: true, attribute: \"css-head\" },\r\n    cssBody: { reflect: true, attribute: \"css-body\" },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.placement = 'start';\r\n    me.cssTitle = 'fs-5';\r\n    me.transition = 'linear';\r\n    me.duration = 0.2;\r\n    me.min = 0;\r\n    me.max = 'auto';\r\n    me.fingers = 2;\r\n    me.on('mouseleave', me.#onLeave.bind(me));\r\n    me.on('mouseenter', me.#onEnter.bind(me));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`${unsafeHTML(me.#style)}\r\n    <div tabindex=\"-1\" dir=\"${ifDefined(me.direction)}\"\r\n     class=\"offcanvas overflow-hidden anime ${classMap(me.renderClass())}\">\r\n      ${me.#header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        ${me.renderTemplate()}\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>${me.#backdrop}`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': true,\r\n      'anime-open' : me.expanded,\r\n      'anime-close' : !me.expanded,\r\n      [`offcanvas-${me.placement}`]: me.placement,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #style() {\r\n    const me = this;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    return `<style>\r\n    .anime {\r\n      transition-property: ${pos} !important;\r\n      transition-duration: ${me.duration}s  !important;\r\n      transition-timing-function: ${me.transition} !important;\r\n    }\r\n    .anime-open {\r\n        ${pos} : ${me.max}${GSUtil.isNumber(me.max) ? 'px':''} !important;\r\n    }\r\n    .anime-close {\r\n      ${pos} : ${me.min}${GSUtil.isNumber(me.min) ? 'px':''} !important;\r\n    }    \r\n    </style>`;\r\n  }\r\n\r\n  get #backdrop() {\r\n    const me = this;\r\n    if (!me.backdrop) return '';\r\n    return html`<div class=\"offcanvas-backdrop fade ${me.expanded ? 'show' : 'invisible'}\" @click=\"${me.close}\"></div>`;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    return me.closable ? html`<button type=\"button\" class=\"btn-close text-reset\" @click=\"${me.close}\"></button>` : '';\r\n  }\r\n\r\n  get #title() {\r\n    const me = this;\r\n    return me.title ? html`<div class=\"offcanvas-title ${me.cssTitle}\">${me.translate(me.title)}</div>` : '';\r\n  }\r\n\r\n  get #header() {\r\n    const me = this;\r\n    return me.#hasHeader ? html`<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${me.#title}${me.#button}</slot></div>` : '';\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  get #hasHeader() {\r\n    return this.title || this.closable || this.#headSlot;\r\n  }\r\n\r\n  #notify(val) {\r\n    const me = this;\r\n    me.expanded = val == true;\r\n    me.notify();\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  open() {\r\n    this.#notify(true);\r\n  }\r\n\r\n  close() {\r\n    this.#notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.#notify(!this.expanded);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return !this.isVertical;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-drawer');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdownElement class\r\n * @module components/GSDropdownElement\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { cssMap } from '../directives/css-map.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDropdownElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        icon: {},\r\n        text: {...color},\r\n        color: {...color},\r\n        size: {},\r\n        title: {},\r\n        tooltip: {},\r\n        group: {},\r\n        simple: {type:Boolean}\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"dropdown\"  dir=\"${ifDefined(me.direction)}\">\r\n                ${me.#renderButton()}\r\n                ${super.renderUI()}\r\n            </div>`;\r\n    }\r\n\r\n    #buttonClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'btn': true,\r\n            [`btn-${me.color}`] : me.color ? true : false,\r\n            'dropdown-toggle': !me.simple,\r\n            'shadow-none' : true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    #renderButton() {\r\n        const me = this;\r\n        return html`<gs-link css=\"${cssMap(me.#buttonClass())}\"\r\n            url=\"#\"         \r\n            icon=\"${ifDefined(me.icon)}\"\r\n            text=\"${ifDefined(me.text)}\"\r\n            size=\"${ifDefined(me.size)}\"\r\n            title=\"${ifDefined(me.title)}\"\r\n            tooltip=\"${ifDefined(me.tooltip)}\"\r\n            @notify=\"${me.toggle}\">\r\n            </gs-link>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-dropdown');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html, unsafeHTML } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Safe email rendering to protect from spam bots.\r\n */\r\nexport class GSEmailElement extends GSElement {\r\n\r\n  static shadowRootOptions = { mode: 'closed' }\r\n\r\n  static style = css`.e-mail:before {\r\n    content: attr(data-website) \"\\0040\" attr(data-user);\r\n    unicode-bidi: bidi-override;\r\n    direction: rtl;\r\n    }`;\r\n\r\n  static properties = {\r\n    user: { reflect: true },\r\n    domain: { reflect: true },\r\n    dev: { type: Boolean }\r\n  }\r\n\r\n  #user;\r\n  #domain;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  willUpdate(changes) {\r\n    super.willUpdate(changes);\r\n    this.#updateUser();\r\n    this.#updateDomain()\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${unsafeHTML(this.#style)}<a @click=\"${this.#onClick}\" class=\"e-mail\" data-user=\"${this.#user}\" data-website=\"${this.#domain}\"  href=\"mailto://\"></a>`;\r\n  }\r\n\r\n  get #style() {\r\n    return '<style>.e-mail:before { content: attr(data-website) \"\\u0040\" attr(data-user); unicode-bidi: bidi-override; direction: rtl; }</style>';\r\n  }\r\n\r\n  get #url() {\r\n    return `mailto://${GSUtil.reverse(this.dataset.user)}@${GSUtil.reverse(this.dataset.domain)}`;\r\n  }\r\n\r\n  #updateUser() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.user) {\r\n      me.#user = dataset.user || GSUtil.reverse(me.user);\r\n      if (me.dev) dataset.user = me.#user;\r\n      me.user = '';\r\n    }\r\n  }\r\n\r\n  #updateDomain() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.domain) {\r\n      me.#domain = dataset.domain || GSUtil.reverse(me.domain);\r\n      if (me.dev) dataset.domain = me.#domain;\r\n      me.domain = '';\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    window.location.href = me.#url;\r\n    //window.open(me.#url, '_blank');  \r\n  }\r\n\r\n  static {\r\n    this.define('gs-email');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSFormElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    disabled: { type: Boolean },\r\n    data: { type: Object },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<form ${ref(me.#formRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      @change=\"${me.#onChange}\"\r\n      @submit=\"${me.submit}\"\r\n      @reset=\"${me.reset}\"\r\n      method=\"dialog\">\r\n      <slot></slot>\r\n    </form>`;\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    this.dataController?.read();\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    if (changed.has('disabled')) {\r\n      if (me.disabled) {\r\n        me.disable();\r\n      } else {\r\n        me.enable();\r\n      }\r\n    }\r\n    if (changed.has('data')) {\r\n      if (GSUtil.isNull(me.data)) {\r\n        me.reset();\r\n      } else {\r\n        me.asJSON = Object.assign(me.asJSON, me.data);\r\n      }\r\n    }\r\n  }\r\n\r\n  async reset(e) {\r\n    const me = this;\r\n    const internal = e?.target === me.form;\r\n\r\n    if (internal) {\r\n      // not required, form will reset on it's own\r\n      //me.elements.forEach(el => el.value = el.defaultValue);\r\n      await me.dataController?.read(me.asJSON);\r\n    } else {\r\n      me.data = {};\r\n      me.form.reset();\r\n    }\r\n  }\r\n\r\n  async submit(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    if (!me.validate()) return;\r\n    const json = me.asJSON;\r\n    await me.dataController?.write(json);\r\n    const data = { type: 'submit', data: json, source: e, owner : me};\r\n    return me.emit('form', data, true, true, true);\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    let isValid = me.checkValidity() && me.isValid;\r\n    if (!isValid) me.reportValidity();\r\n    const data = { type: 'valid', data: isValid, owner : me};\r\n    isValid = me.onValidate(isValid);\r\n    if (isValid) me.emit('form', data, true, true);\r\n    return isValid;\r\n  }\r\n\r\n  get isValid() {\r\n    return this.elements\r\n      .filter(el => GSDOM.isVisible(el))\r\n      .map(el => el.checkValidity())\r\n      .filter(v => v === false).length === 0;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  /**\r\n  * Overide native to pickup all form elements, including ones in shadow dom\r\n  */\r\n  get elements() {\r\n    return this.queryAll('input,select,output,textarea', true);\r\n  }\r\n\r\n  get fields() {\r\n    return this.elements;\r\n  }\r\n\r\n  get inputs() {\r\n    return this.elements;\r\n  }\r\n\r\n  get asJSON() {\r\n    return GSDOM.toObject(this);\r\n  }\r\n\r\n  set asJSON(data) {\r\n    const me = this;\r\n    GSDOM.fromObject(me, data);\r\n    return me.validate();\r\n  }\r\n\r\n  disable() {\r\n    GSDOM.disableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  enable() {\r\n    GSDOM.enableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.form.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    this.elements\r\n      .filter(el => GSDOM.isVisible(el))\r\n      .filter(el => !el.checkValidity())\r\n      .forEach(el => el.reportValidity() );\r\n    return this.form.reportValidity();\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataWrite(data) {\r\n\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  onFieldChange(el) {\r\n\r\n  }\r\n\r\n  onValidate(sts) {\r\n\r\n    return sts;\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if (me.isBindable) me.handle(e);\r\n    if (me.validate()) me.onFieldChange(e.detail);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, unsafeHTML, ifDefined } from '../lib.mjs';\r\nimport { inputType, numGT0, numGE0 } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSFormGroupElement extends GSElement {\r\n\r\n  static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2';\r\n  static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n  static CSS_ICON = 'text-primary me-2 fs-5';\r\n  static ICON = 'info-circle-fill';\r\n\r\n  static #SELECTOPT = {\r\n    name : {},\r\n    value : {},\r\n    selected : {type: Boolean}\r\n  }\r\n\r\n  static properties = {\r\n    icon: {},\r\n    layout: {},\r\n    placement: {},\r\n\r\n    description: {},\r\n    label: {},\r\n    placeholder: {},\r\n    pattern: {},\r\n    mask: {},\r\n    \r\n    name: {},\r\n    type: { ...inputType },\r\n    list: {},\r\n    accept: {},\r\n    \r\n    lang: {},\r\n    default: { reflect: true },\r\n    step: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    min: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    max: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    minLength: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    maxLength: { type: Number, reflect: true, hasChanged: numGT0 },\r\n\r\n    reverse: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n\r\n    autoid: { type: Boolean },\r\n    autocopy: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    autocapitalize: { type: Boolean, reflect: true },\r\n    autocomplete: { type: Boolean, reflect: true },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    checked: { type: Boolean, reflect: true },\r\n    multiple: { type: Boolean, reflect: true },\r\n    reveal: { type: Boolean, reflect: true },\r\n    readonly: { type: Boolean, reflect: true },\r\n    required: { type: Boolean, reflect: true },\r\n\r\n    cellField: { attribute: 'cell-field' },\r\n    cellLabel: { attribute: 'cell-label' },\r\n    cssLabel: { attribute: 'css-label' },\r\n    cssField: { attribute: 'css-field' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #inputRef = createRef();\r\n  #ouptutRef = createRef();\r\n  #patterns = [];\r\n  #options = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.#validateAllowed();\r\n    this.dynamicStyle(this.#styleID);\r\n    this.type = 'text';\r\n    this.placement = 'top';\r\n    this.layout = 'horizontal';\r\n    this.icon = GSFormGroupElement.ICON;\r\n    this.cssLabel = GSFormGroupElement.CSS_LABEL;\r\n    this.cellLabel = GSFormGroupElement.CSS_LABEL_CELL;\r\n  }\r\n  \r\n  connectedCallback() {\r\n    const me = this;\r\n    const form = GSDOM.closest(me, 'gs-form');\r\n    me.layout = GSAttr.get(form, 'layout', me.layout);\r\n    if (me.selectable) {\r\n      me.#options = GSItem.proxify(me, GSFormGroupElement.#SELECTOPT);\r\n    } else {\r\n      me.#patterns = GSItem.collect(me)\r\n      .filter(el => el.dataset.pattern)\r\n      .map(el => new RegExp(el.dataset.pattern));\r\n    }      \r\n    super.connectedCallback();\r\n  }\r\n\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    me.value = me.default;\r\n    if (!me.selectable) {\r\n      me.field.defaultValue =  GSUtil.normalize(me.default);\r\n    }\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#onRange();\r\n    if (me.templateRef && !me.field) {\r\n      const field = GSDOM.formElements(me.renderRoot).pop();\r\n      me.#inputRef.value = field;\r\n      if (field) {\r\n        field.name = this.name;\r\n        me.attachEvent(field, 'change', me.#onChange.bind(me));\r\n      }\r\n    }\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    switch (me.layout) {\r\n      case 'floating': return me.#renderFloating();\r\n      case 'vertical': return me.#renderVertical();\r\n      default: return me.#renderHorizontal();\r\n    }\r\n  }\r\n\r\n  templateInjected() {\r\n    super.templateInjected();\r\n    const me = this;\r\n    const el = GSDOM.formElements(me, true).pop();\r\n    me.attachEvent(el, 'blur', me.#onBlur.bind(me));\r\n    me.attachEvent(el, 'input', me.#onRange.bind(me));\r\n    me.attachEvent(el, 'change', me.#onChange.bind(me));\r\n  }\r\n\r\n  #renderFloating() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n       <div class=\"form-floating ${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n          ${me.#renderLabel()}\r\n       </div>\r\n       ${me.#renderInfo()}\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n      <div class=\"col-12 text-md-start ${me.cellLabel}\">\r\n          ${me.#renderLabel()}\r\n      </div>\r\n       <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n       </div>\r\n       ${me.#renderInfo()}   \r\n    </div>      \r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row form-group ${classMap(me.renderClass())}\">    \r\n       <slot name=\"header\"></slot>\r\n       ${me.#renderLabelWrap()}\r\n       ${me.#renderField()}\r\n       ${me.#renderInfo()}\r\n       <slot name=\"footer\"></slot>\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderLabel() {\r\n    const me = this;\r\n    return html`<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.translate(me.label)}</label>`;\r\n  }\r\n\r\n  #renderLabelWrap() {\r\n    const me = this;\r\n    return html`<div class=\" text-md-end ${me.cellLabel}\">${me.#renderLabel()}</div>`;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.#isIcon ? html`<gs-icon size=\"5\" css=\"${GSFormGroupElement.CSS_ICON}}\" name=\"${me.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderTooltip() {\r\n    const me = this;\r\n    const tgt = me.#isIcon ? '@parent' : `[name='${me.name}']`;\r\n    return me.description ? html`<gs-tooltip local locale=\"${ifDefined(me.locale)}\" placement=\"${me.placement}\" title=\"${me.description}\" target=${ifDefined(tgt)}></gs-tooltip>` : '';\r\n  }\r\n\r\n  #renderInfo() {\r\n    const me = this;\r\n    const tooltip = me.#renderTooltip();\r\n    if (tooltip && me.#isIcon) return html`\r\n    <div class=\"col-auto\">\r\n       ${tooltip}\r\n       ${me.#renderIcon()}\r\n    </div>`;\r\n    return tooltip;\r\n  }\r\n\r\n  #renderField() {\r\n    const me = this;\r\n    return html`\r\n    <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n       <slot name=\"body\">${me.#renderInput()}${me.#renderOutput()}</slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderOutput() {\r\n    const me = this;\r\n    if (!me.isRange) return \"\";\r\n    return html`<span ${ref(me.#ouptutRef)} class=\"position-absolute px-1\">${me.value}</span>`;\r\n  }\r\n\r\n  #renderInput() {\r\n\r\n    const me = this;\r\n\r\n    const tpl = me.query('template') || me.template;\r\n    if (tpl) return me.renderTemplate();\r\n\r\n    const idattr = me.autoid ? me.name : undefined;\r\n    const val = me.isFieldset ? me.value.split(',') : me.value;\r\n\r\n    if (Array.isArray(val)) {\r\n      const wrap = me.dataset.radioLayout === 'vertical';\r\n      return val.map((it, i) => { return { v: it, id: `${me.name}_${i}` } })\r\n        .map((o, i) => me.#fieldSet(me.name + i, o.v, me.#inputHTML(o.id, me.name, o.v), wrap));\r\n    }\r\n\r\n    if (me.selectable) return me.#selectHTML(idattr, me.name, me.value);\r\n\r\n    return me.#inputHTML(idattr, me.name, me.value);\r\n  }\r\n\r\n  #fieldSet(id, val, fld, vertical = false) {\r\n    const me = this;\r\n    return vertical ?\r\n      html`<div class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></div>`\r\n      :\r\n      html`<span class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></span>`;\r\n  }\r\n\r\n  #initStyle() {\r\n    const me = this;\r\n    const style = {\r\n      transform: me.reverse && me.isRange ? 'rotateY(180deg)' : ''\r\n    }\r\n    me.dynamicStyle(me.#styleID, style);    \r\n  }\r\n\r\n  #renderOptions() {\r\n    const me = this;\r\n    return me.#options.map( el => html`<option value=\"${el.value}\" ?selected=${el.selected}>${el.name || el.value}</option>`);\r\n  }\r\n\r\n  #selectHTML(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n\r\n    return html`<select ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n        \r\n            name=\"${name}\"             \r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\">\r\n            ${me.#renderOptions()}\r\n            </select>`;\r\n  }\r\n\r\n  get #listHTML() {\r\n    const me = this;\r\n    let list = '';\r\n    if (me.list) {\r\n      const root = me.parentComponent || me.parentElement;\r\n      const el = GSDOM.query(root, `datalist[id=\"${me.list}\"]`, true);\r\n      if (el) list = html`${unsafeHTML(el.outerHTML)}`;\r\n    }\r\n    return list;\r\n  }\r\n\r\n  #inputHTML(id, name, value) {\r\n    const me = this;\r\n    const type = me.isSwitch ? 'checkbox' : me.type;\r\n    me.#initStyle();\r\n\r\n    return html`<input is=\"gs-ext-input\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n        \r\n            name=\"${name}\" \r\n            type=\"${type}\" \r\n            value=\"${ifDefined(value)}\"\r\n    \r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            placeholder=\"${ifDefined(me.translate(me.placeholder))}\"\r\n            description=\"${ifDefined(me.translate(me.description))}\"\r\n\r\n            mask=\"${ifDefined(me.mask)}\"\r\n            pattern=\"${ifDefined(me.pattern)}\"\r\n            list=\"${ifDefined(me.list)}\"\r\n            accept=\"${ifDefined(me.accept)}\"\r\n             \r\n            step=\"${ifDefined(me.step)}\"\r\n            min=\"${ifDefined(me.min)}\"\r\n            max=\"${ifDefined(me.max)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n            \r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?autocomplete=\"${me.autocomplete}\"\r\n            ?multiple=\"${me.multiple}\"\r\n            ?checked=\"${me.checked}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"\r\n            ?reveal=\"${me.reveal}\"\r\n            >${me.#listHTML}`;\r\n  }\r\n\r\n  get #cssField() {\r\n    const me = this;\r\n    if (me.selectable) return 'form-select ms-0';\r\n    if (me.isCheckable) return 'form-check-input ms-0';\r\n    if (me.isRange) return 'form-range';\r\n    return 'form-control';\r\n  }\r\n\r\n  get #cssLabel() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-label';\r\n    if (me.isFloating) return 'ms-2';\r\n    return me.isVertical ? 'form-label' : '';\r\n  }\r\n\r\n  get #cssCheck() {\r\n    const me = this;\r\n    if (me.isCheckable) {\r\n      //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      if (me.isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n      return me.isFieldset ? '' : 'form-check';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get #cellField() {\r\n    const me = this;\r\n    const val = (me.isHorizontal) ? '6' : '11';\r\n    return me.cellField || `col-md-${val} col-sm-${val} col-xs-11`;\r\n  }\r\n\r\n  get #isIcon() {\r\n    return GSUtil.isStringNonEmpty(this.icon);\r\n  }\r\n\r\n  #onRange(e) {\r\n    const me = this;\r\n    if (me.isRange) {\r\n      const el = me.#ouptutRef.value;\r\n      if (el) el.innerHTML = me.value || '';\r\n      me.field.title = me.value;\r\n    }\r\n    me.emit('input', e);\r\n  }\r\n\r\n  #onChange(e) {\r\n    this.emit('change', e, true);\r\n  }\r\n\r\n  async #onBlur(e) {\r\n\r\n    const me = this;\r\n    const el = me.field;\r\n\r\n    if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n    const isValid = me.checkValidity();\r\n    if (!isValid) {\r\n      me.reportValidity();\r\n      el.focus();\r\n      await GSUtil.timeout(2000);\r\n      el.setCustomValidity('');\r\n    }\r\n\r\n    me.emit('change', e);\r\n  }\r\n\r\n  #validateAllowed() {\r\n    const me = this;\r\n    const slots = ['header', 'body', 'footer'];\r\n    let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n    if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n    list = Array.from(me.children).filter(el => !el.slot);\r\n    const tagList = ['TEMPLATE', 'GS-ITEM', 'DATALIST'];\r\n    const allowed = GSDOM.isAllowed(list, tagList);\r\n    if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    const isValid = me.checkValidity();\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  checkValidity() {\r\n\r\n    const me = this;\r\n    const el = me.field;\r\n\r\n    let isValid = el?.checkValidity();\r\n    for (const r of me.#patterns) {\r\n      isValid = r.test(el?.value);\r\n      if (!isValid) break;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  reportValidity() {\r\n    const me = this;\r\n    const el = me.field;\r\n    const msg = me.#patterns.length > 0 ? 'Invalid input' : '';\r\n    el?.setCustomValidity(msg);\r\n    return el?.reportValidity();\r\n  }\r\n\r\n  get value() {\r\n    return this.field?.value;\r\n  }\r\n\r\n  set value(val) {\r\n    GSDOM.fromObject2Element(this.field, { [this.name]: val });\r\n    this.validate();\r\n    this.#onRange();\r\n  }\r\n\r\n  get isFloating() {\r\n    return this.layout === 'floating';\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.layout === 'horizontal';\r\n  }\r\n\r\n  get isVertical() {\r\n    return this.layout === 'vertical';\r\n  }\r\n\r\n  get isFieldset() {\r\n    const me = this;\r\n    return me.type === 'radio' && me.value?.includes(',');\r\n  }\r\n\r\n  get isCheckable() {\r\n    const me = this;\r\n    return me.isCheck || me.isRadio || me.isSwitch;\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.field.checked;\r\n  }\r\n\r\n  get isCheck() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get isRadio() {\r\n    return this.type === 'radio';\r\n  }\r\n\r\n  get isSwitch() {\r\n    return this.type === 'switch';\r\n  }\r\n\r\n  get isNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  get isRange() {\r\n    return this.type === 'range';\r\n  }\r\n\r\n  get isText() {\r\n    return this.type === 'text';\r\n  }\r\n\r\n  get isPassword() {\r\n    return this.type === 'passsword';\r\n  }\r\n\r\n  get isEmail() {\r\n    return this.type === 'email';\r\n  }\r\n\r\n  get isURL() {\r\n    return this.type === 'url';\r\n  }\r\n\r\n  get isFile() {\r\n    return this.type === 'file';\r\n  }\r\n\r\n  get field() {\r\n    return this.#inputRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref, repeat } from '../lib.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSFormGroupElement } from './FormGroup.mjs';\r\n\r\n/**\r\n * Component is responsible for auto-building gs-form and gs-form-group elements\r\n * from either JSON data or GS-ITEM elements.\r\n */\r\nexport class GSFormPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    formStorage: { attribute: 'form-storage' },\r\n    disabled: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.#proxify;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<gs-form ${ref(me.#formRef)}\r\n      ?disabled=${me.disabled} \r\n      storage=\"${ifDefined(me.formStorage)}\" \r\n      .locale=\"${me.locale}\"\r\n      .rtl=\"${me.rtl}\"\r\n      .css=\"${me.css}\"\r\n      .theme=\"${me.theme}\"\r\n      .margin=\"${me.margin}\"\r\n      .padding=\"${me.padding}\"\r\n      .border=\"${me.border}\"\r\n      .shadow=\"${me.shadow}\"\r\n      .os=\"${me.os}\"\r\n      .browser=\"${me.browser}\"\r\n      .environment=\"${me.environment}\"\r\n      .orientation=\"${me.orientation}\"\r\n      .protocol=\"${me.protocol}\">\r\n      <slot>\r\n        ${repeat(me.data, (r) => html`<gs-form-group .data=${r} locale=\"${ifDefined(me.locale)}\" ></gs-form-group>`)}\r\n      </slot>\r\n    </form>`;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  get #proxify() {\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, GSFormGroupElement.properties));\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGroupElement class\r\n * @module components/GSGroupElement\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSAttributeHandler } from '../base/GSAttributeHandler.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { ElementNavigationController } from '../controllers/ElementNavigationController.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { classMap, createRef, html, render, ifDefined, ref } from '../lib.mjs';\r\n\r\n/**\r\n * Renderer for grouped elements such as Buttons, Navs, Tabs and lists.\r\n * Components handles grouped elements navigation, selection and focus.\r\n * \r\n * @class\r\n * @extends { GSElement }\r\n */\r\nexport class GSGroupElement extends GSElement {\r\n\r\n  static properties = {\r\n    // multiple lists with single select across \r\n    group : {},\r\n    storage: {},    \r\n    circular: { type: Boolean },\r\n    multiple: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #elRef = createRef();\r\n  #controller;\r\n  #controllerGroup;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.data = me.initData();\r\n    me.#controller = new ElementNavigationController(me);\r\n    me.#controllerGroup = new GroupController(me);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    // allow single setting at the container component to apply to the child\r\n    Array.from(me.children).forEach(it => {\r\n      GSAttributeHandler.clone(me, it, false);\r\n    });\r\n  }  \r\n\r\n\r\n  #prerender() {\r\n    const me = this;\r\n    me.queryAll('[generated]').forEach(el => el.remove());\r\n    if (me.data.length > 0) {\r\n      const items = me.renderItems();\r\n      const tpl = document.createElement('template');\r\n      render(items, tpl);\r\n      Array.of(...tpl.children).forEach(el => GSDOM.appendChild(me, el));\r\n    }\r\n  }\r\n  \r\n  firstUpdated(changed) {\r\n    const me = this;\r\n    me.#controller.init();\r\n    me.#controller.attach(me.#elRef.value);\r\n    super.firstUpdated(changed);\r\n    //me.#prerender();\r\n  }  \r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.#prerender();\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      ${me.renderWrappedUI()}\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedUI(name) {\r\n    const me = this;\r\n    return html`<div \r\n      class=\"${classMap(me.renderWrappedClass())}\">\r\n      <slot name=\"${ifDefined(name)}\"></slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    return {};\r\n  }\r\n\r\n  renderItems() {\r\n    return '';\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSItem);\r\n  }\r\n\r\n  previous() {\r\n    this.#controller.previous();\r\n  }\r\n\r\n  next() {\r\n    this.#controller.next();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    this.#controller.reset();\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  isNavigable(el) {\r\n    return el?.tagName === this.childTagName;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onBusEvent(e) {\r\n    let owner, item;  \r\n    ({owner, item} = e.detail);\r\n    if (owner != this) {\r\n      if (!item?.disabled || owner?.selectable) {\r\n        this.reset();\r\n      }\r\n    }\r\n  }\r\n  \r\n  onSelected(el) {\r\n    this.#controllerGroup.notify(el);\r\n  }\r\n\r\n  get focused() {\r\n    return this.#controller.focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#controller.selected;\r\n  }\r\n\r\n  get childTagName() {\r\n    return '';\r\n  }\r\n    \r\n  get items() {\r\n    const me = this;\r\n    return me.queryAll(me.childTagName);\r\n  }\r\n\r\n  get generated() {\r\n    const me = this;\r\n    return this.queryAll(`${me.childTagName}[generated]`);\r\n  }\r\n\r\n  get active() {\r\n    const me = this;\r\n    if (me.multiple) return me.queryAll(`${me.childTagName}[active]`);\r\n    return me.query(`${me.childTagName}[active]`);\r\n  }\r\n\r\n  settings(el) {\r\n    const tagName = customElements.getName(el)?.toUpperCase() || 'GS-ITEM';\r\n    const cfg = GSElement.allProperties(el);\r\n    const items = Array.from(this.children).filter(e => e.tagName === tagName ).map(el => GSAttr.proxify(el, cfg));\r\n    const active = items.filter(el => el.active);\r\n    active.forEach((el, idx) => el.active = idx === 0);\r\n    return items;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-group');\r\n  }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGT0 } from '../properties/index.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSIconElement extends GSElement {\r\n\r\n  static styles = css`\r\n    :host {\r\n      --gs-icon-super-color : cornflowerblue;\r\n      --gs-icon-content : '';\r\n    }\r\n    i::after {\r\n      top: -8px;\r\n      font-size: 0.7em;\r\n      position: relative;\r\n      content: var(--gs-icon-content);\r\n      content: attr(data-super);\r\n      color: var(--gs-icon-super-color);\r\n    }`;\r\n\r\n  static properties = {\r\n    name: { reflect: true, hasChanged: notEmpty },\r\n    size: { reflect: true, type: Number, hasChanged: numGT0 },\r\n    color: { reflect: true, ...color },\r\n    superColor: { attribute : 'super-color'},\r\n    super: { reflect: true },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    _clicked: { attribute:false},\r\n    _hovered: { attribute:false},\r\n  }\r\n\r\n  #ref = createRef();\r\n  \r\n  constructor() {\r\n    super();\r\n    //this.flat = true;\r\n  }\r\n\r\n  /*\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    this.#embdeded = GSDOM.matches(this.parentComponent, '[icon]');\r\n  }\r\n  */\r\n\r\n  updated(changed) {\r\n    if (changed.has('_clicked')) {\r\n      if (this._clicked) this.#postAnimate();\r\n    } \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.setCSSProperty(':host', '--gs-icon-super-color', me.superColor);\r\n    return html`<i  ${ref(me.#ref)}\r\n       class=\"bi ${classMap(me.renderClass())}\"\r\n       data-super=\"${ifDefined(me.super)}\"\r\n       @click=\"${me.animate}\"\r\n       @mouseover=\"${me.#onMouseOver}\"\r\n       @mouseout=\"${me.#onMouseOut}\"></i>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      [`text-${me.color}`]: me.color,\r\n      [`bi-${me.name}`]: me.name,\r\n      'fs': me.size > 0,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.clickCss]: me._clicked,\r\n      [me.hoverCss]: me._hovered,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  async #postAnimate() {\r\n    const me = this;\r\n    const delay = GSUtil.asNum(me.dataset.delay, 1);\r\n    if (delay > 0) {\r\n      await GSUtil.timeout(delay * 1000);\r\n      me._clicked = false;\r\n    }    \r\n  }\r\n\r\n  #onMouseOver(e) {\r\n    this.hover(true);\r\n  }\r\n\r\n  #onMouseOut(e) {\r\n    this.hover(false);\r\n  }\r\n\r\n  animate() {\r\n    const me = this;\r\n    me._hovered = false;\r\n    me._clicked = true;\r\n  }\r\n\r\n  hover(sts = false) {\r\n    const me = this;\r\n    if (sts) {\r\n      me._clicked = false;\r\n    }\r\n    me._hovered = sts;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-icon');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/index.mjs';\r\n\r\nexport class GSIndentElement extends GSElement {\r\n\r\n  static styles = css`.indent {\r\n      --gs-indent : 10px;\r\n      margin-left: var(--gs-indent);\r\n      margin-right: var(--gs-indent);\r\n    }`;\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    size: { type: Number, hasChanged: numGT0 },\r\n    multiplier: { type: Number, hasChanged: numGT0 }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.size = 1;\r\n    me.multiplier = 10;\r\n  }\r\n\r\n  renderUI() {\r\n    const size = this.size * this.multiplier;\r\n    return html`<span class=\"indent\" style=\"--gs-indent: ${size}px;\"></span>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-indent');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nconst numdef = { reflect: true, type: Number, hasChanged: numGE0 };\r\n\r\nexport class GSImageElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { hasChanged: notEmpty },\r\n    width: numdef,\r\n    height: numdef,\r\n    opacity: numdef,\r\n    invert: numdef,\r\n    grayscale: numdef,\r\n    brightness: numdef,\r\n    blur: numdef,\r\n    contrast: numdef,\r\n    saturate: numdef,\r\n    hue: numdef,\r\n    sepia: numdef,\r\n\r\n    alt: {},\r\n    loading: {}\r\n\r\n  }\r\n\r\n  #imageRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    this.#update();\r\n    return this.src;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<img ${ref(me.#imageRef)} \r\n            @load=\"${me.#onLoad}\"\r\n            src=\"${me.src}\" \r\n            alt=\"${me.alt}\" \r\n            loading=\"${ifDefined(me.loading)}\" \r\n            class=\"${me.#styleID}\" \r\n            data-gs-class=\"${me.#styleID}\">\r\n          </img>`;\r\n  }\r\n\r\n  get complete() {\r\n    return this.#imageRef.value?.complete || false;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  #renderStyle() {\r\n    const me = this;\r\n    const filter = me.#buildFilter();\r\n    const css = {\r\n      width: me.width > 0 ? me.width : undefined,\r\n      height: me.height > 0 ? me.height : undefined,\r\n      filter: filter.length > 0 ? filter.join(' ') : ''\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #buildFilter() {\r\n    const me = this;\r\n    const o = [];\r\n\r\n    if (me.blur > 0) o.push(`blur(${me.blur}px)`);\r\n    if (me.invert > 0) o.push(`invert(${me.invert})`);\r\n    if (me.opacity > 0) o.push(`opacity(${me.opacity})`);\r\n    if (me.contrast > 0) o.push(`contrast(${me.contrast})`);\r\n    if (me.grayscale > 0) o.push(`grayscale(${me.grayscale})`);\r\n    if (me.brightness > 0) o.push(`brightness(${me.brightness})`);\r\n\r\n    if (me.hue > 0) o.push(`hue-rotate(${me.hue}deg)`);\r\n    if (me.sepia > 0) o.push(`sepia(${me.sepia}%)`);\r\n    if (me.saturate > 0) o.push(`saturate(${me.saturate}%)`);\r\n\r\n    return o;\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.filter = me.#buildFilter().join(' ').trim();\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const el = e.target;\r\n    const me = this;\r\n    if (el) {\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n      me.emit('loaded', { width: el.width, height: el.height, element: el }, true);\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-image');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayoutElement\r\n */\r\n\r\nimport { classMap, html, ifDefined, templateContent } from '../lib.mjs';\r\nimport { orientation, OrientationTypes } from '../properties/orientation.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSLayoutElement extends GSElement {\r\n\r\n    static properties = {\r\n        type: { ...orientation }\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        id : {},\r\n        type: {},\r\n        min: { type: Number },\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        resizable: { type: Boolean },\r\n        autofit: { type: Boolean },\r\n        vPos: { attribute: 'h-pos' },\r\n        hPos: { attribute: 'v-pos' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.autofit = true;  \r\n        me.#items(me).map((el, idx, els) => me.#dyncss(el, idx, els, 0));\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if ( this.autofit && GSDOM.root(this) === document.body) document.body.classList.add('vh-100');\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const list = me.#items(me).map((el, idx, els) => me.#build(el, idx, els));\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"d-flex flex-fill w-100 h-100 ${classMap(me.renderClass())}\">${list}</div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const horizontal = OrientationTypes.isHorizontal(me.type);\r\n        return {\r\n            ...super.renderClass(),\r\n            'flex-column': horizontal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #items(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSLayoutElement.options));\r\n    }\r\n\r\n    #resizable(el) {\r\n        return el.size > 0 || el.min > 0 || el.max > 0 || el.resizable;\r\n    }\r\n\r\n    #dyncss(el, idx, els, lev = 0) {\r\n        const me = this;\r\n        me.#items(el.self).map((it, idx, items) => me.#dyncss(it, idx, items, lev+1));\r\n        if(me.#resizable(el)) me.dynamicStyle(`gsd-${lev}-${idx}`);\r\n    }\r\n\r\n    #build(el, idx, els, lev = 0) {\r\n\r\n        const me = this;\r\n        const type = el.self.parentElement.type || 'vertical';\r\n\r\n        const list = me.#items(el.self).map((it, idx, items) => me.#build(it, idx, items, lev+1));\r\n        \r\n        const min = el.min;\r\n        const max = el.max;\r\n        const template = el.template;\r\n        const tplEl = me.#elementTemplate(el);\r\n\r\n        const tc = `#${tplEl?.id}` !== template;\r\n\r\n        const dir = el.type || type || 'vertical';\r\n        const horizontal = OrientationTypes.isHorizontal(dir);\r\n        \r\n        const col = list.length > 0 && horizontal ? 'flex-column' : '';\r\n\r\n        const did = `gsd-${lev}-${idx}`;\r\n        const css = me.#panelCSS(el, col, did);\r\n        const style = me.#panelStyle(el, horizontal);\r\n        me.dynamicStyle(did, style);\r\n\r\n        const slot = el.name ? html`<slot name=\"${el.name}\"></slot>` : '';\r\n        const src = html`<div id=\"${ifDefined(el.id)}\" class=\"d-flex ${classMap(css)}\">\r\n            ${list}\r\n            ${templateContent(tplEl)}\r\n            ${template && tc ? html`<gs-template flat src=\"${template}\"></gs-template>` : ''}\r\n            ${slot}\r\n            </div>`;\r\n\r\n        if (!el.resizable) return src;\r\n\r\n        const resize = (idx === els.length - 1) ? 'end' : 'start';\r\n        const splitter = me.#splitter(min, max, type, resize);\r\n\r\n        if (idx === els.length - 1) return [splitter , src];\r\n        return [src, splitter];\r\n    }\r\n    \r\n    #elementTemplate(el) {\r\n        const tplEl = el.self.firstElementChild;\r\n        return tplEl instanceof HTMLTemplateElement ? tplEl : undefined;\r\n    }\r\n\r\n    #panelCSS(el, col, did) {\r\n\r\n        const resizable = this.#resizable(el);\r\n        const grow = resizable ? '' : 'flex-grow-1';\r\n\r\n        let vpos = el.vPos;\r\n        let hpos = el.hPos;\r\n\r\n        hpos = hpos ? `align-items-${hpos}` : '';\r\n        vpos = vpos ? `justify-content-${vpos}` : '';\r\n\r\n        const css = this.mapCSS(el.css, {\r\n            [did] : resizable,\r\n            [col] : col,\r\n            [grow] : grow,\r\n            [hpos] : hpos,\r\n            [vpos] : vpos\r\n        });\r\n    \r\n        return css;        \r\n    }\r\n\r\n    #panelStyle(el, horizontal) {\r\n        const min = el.size || el.min;\r\n        const max = el.max || el.size;\r\n        const style = {};\r\n        if (horizontal) {\r\n            style['min-height'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-height'] = max > 0 ? `${max}px` : undefined;\r\n        } else {\r\n            style['min-width'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-width'] = max > 0 ? `${max}px` : undefined;\r\n        }\r\n        return style;        \r\n    }\r\n\r\n    #splitter(min, max, dir, resize) {\r\n        return html`<gs-splitter split=\"${dir}\" resize=\"${resize}\" min=\"${min}\" max=\"${max}\"></gs-splitter>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-layout');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSLinklement extends GSElement {\r\n\r\n  static properties = {\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    size: { type: Number },\r\n    text: { ...color },\r\n    color: { ...color },\r\n    url: {},\r\n    ping: {},\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    target: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.url = '#';\r\n    // this.text = 'primary'; // do not set as default -> gs-dropdown\r\n    // this.target = '_blank'; // not used \r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n      <a ${ref(me.#refEl)}  \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        title=\"${ifDefined(me.translate(me.tooltip))}\" \r\n        href=\"${ifDefined(me.url)}\" \r\n        ping=\"${ifDefined(me.ping)}\" \r\n        target=\"${ifDefined(me.target)}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        ?disabled=${me.disabled} \r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"        \r\n        @click=\"${me.#onClick}\">\r\n        ${me.#first}${me.#second}\r\n        </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,      \r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [`text-${me.text}`]: me.text,\r\n      [`bg-${me.color}`]: me.color\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.iconEl?.animate();\r\n    me.notify();\r\n    if (me.url === '#' || GSUtil.isStringEmpty(me.url)) {\r\n      GSEvents.prevent(e);\r\n      me.handle(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon css=\"mx-1\" ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    size=\"${this.size}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  /**\r\n   * Generate clickable link\r\n   * @param {*} options \r\n   * @param {*} css \r\n   * @param {*} before \r\n   * @param {*} after \r\n   * @returns \r\n   */\r\n  static generate(options, css, before, after) {\r\n    const opt = options;\r\n    return html`<a class=\"${classMap(css)}\"\r\n        tabindex=\"0\"    \r\n        ${dataset(opt, true)}\r\n        part=\"${ifDefined(opt.part)}\"\r\n        tooltip=\"${ifDefined(opt.tooltip)}\"\r\n        href=\"${ifDefined(opt.url)}\">        \r\n        ${before || ''}\r\n        <slot>${opt.title}</slot> \r\n        ${after || ''}\r\n    </a>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-link');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\n\r\nexport class GSListElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    selectable: { reflect: true, type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = false;\r\n    this.multiple = false;\r\n    this.selectable = false;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  renderClass() {\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group': true,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    return html`<slot></slot>`;\r\n  }\r\n\r\n  reset() {\r\n    this.items.forEach(el => el.reset());\r\n    this.notify();\r\n  }\r\n\r\n  renderItems() {    \r\n    return this.data.map(o => {\r\n      return html`<gs-list-item generated\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-list-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return super.isNavigable(el) && this.selectable;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-LIST-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSListItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    size: { type: Number },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true }\r\n  }\r\n\r\n  #initial;\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.binded();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.#initial = this.active;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-LIST';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n        // allow single setting at the gs-list to apply to the child\r\n        // GSAttributeHandler.clone(this.parentComponent, this, false);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<a  tabindex=\"0\" ${ref(me.#refEl)}\r\n       href=\"${ifDefined(me.url)}\" \r\n       target=\"${ifDefined(me.target)}\" \r\n       class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()} \r\n        ${me.#renderSecond()}\r\n        <slot>${me.renderTemplate()}</slot>\r\n      </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.#itemCSS] : true,\r\n      'active': me.active && me.isSelectable()\r\n    }\r\n    return me.mapCSS(me.#itemStatusCSS, css);\r\n  }\r\n\r\n  isSelectable() {\r\n    return !GSUtil.asBool(this.disabled) || GSUtil.asBool(this.parentComponent.selectable);\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.icon ? html`<gs-icon name=\"${me.icon}\" size=\"${me.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderText() {\r\n    return this.title ? html`<span>${this.translate(this.title)}</span>` : html`<slot name=\"title\"></slot>`;\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.rtl ? this.#renderText() : this.#renderIcon();\r\n  }\r\n\r\n  #renderSecond() {\r\n    return this.rtl ? this.#renderIcon() : this.#renderText();\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || this.#initial || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #inactiveCSS() {\r\n    return this.parentComponent.dataset?.cssInactive || '';\r\n  }\r\n\r\n  get #itemCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #itemStatusCSS() {\r\n    return this.active && this.isSelectable() ? this.#activeCSS : this.#inactiveCSS;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { PlacementTypes, nav, placement } from '../properties/index.mjs';\r\n\r\nexport class GSNavElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    type: nav,\r\n    placement: placement,\r\n    vertical: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = true;\r\n    this.multiple = false;\r\n    this.type = 'pills';\r\n    this.placement = 'start';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-nav-item');\r\n  }\r\n  \r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const isBefore = PlacementTypes.isBefore(me.placement);\r\n    const isTab = me.type === 'tabs';\r\n    const css = {\r\n      'nav': true,\r\n      [`nav-${me.type}`]: me.type,\r\n      'flex-column': me.vertical,\r\n      'border-bottom-0': me.vertical,\r\n      'border-end': isTab && isBefore && me.vertical,\r\n      'border-start': isTab && !isBefore && me.vertical,\r\n      [`justify-content-${me.placement}`]: !me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Render items based on data propprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-nav-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-nav-item>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  onFocused(el) {\r\n    // el?.click();\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-NAV-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { NavTypes, PlacementTypes } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSNavItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    disabled: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    active: { type: Boolean, reflect: true }\r\n  }\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-NAV';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div class=\"nav-item ${classMap(me.renderClass())}\">${me.#button}</div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    return this.mapCSS(this.#itemsCSS, super.renderClass());\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get isNav() {\r\n    return true;\r\n  }\r\n\r\n  get vertical() {\r\n    return this.parentComponent.vertical || false;\r\n  }\r\n\r\n  get placement() {\r\n    return this.parentComponent.placement;\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #title() {\r\n    return html`<slot>${this.translate(this.title)}</slot>`;\r\n  }\r\n\r\n  get #icon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  get #first() {\r\n    return this.rtl ? this.#title : this.#icon;\r\n  }\r\n\r\n  get #second() {\r\n    return this.rtl ? this.#icon : this.#title;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#buttonCSS, {});\r\n    if (me.active) obj = me.mapCSS(me.#buildCSS + ' ' + me.#activeCSS, obj);\r\n    return html`<a tabindex=\"0\" type=\"button\" role=\"nav\" \r\n     ${ref(me.#refEl)}\r\n     class=\"nav-link ${classMap(obj)}\"\r\n     href=\"${ifDefined(me.url)}\" \r\n     target=\"${ifDefined(me.target)}\">\r\n        ${me.#first} \r\n        ${me.#second}\r\n      </a>`;\r\n  }\r\n\r\n  get #itemsCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #buttonCSS() {\r\n    return this.parentComponent.dataset?.cssButton || '';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #navType() {\r\n    return NavTypes.indexOf(this.parentComponent.type);\r\n  }\r\n\r\n  // fiix for shadowed DOM, parent class=\"nav nav-pills..\" \r\n  // do not cross shadow dom, so item elements does not see CSS\r\n  // we have to simulate\r\n  get #buildCSS() {\r\n    const isVertical = this.vertical;\r\n    const isBefore = PlacementTypes.isBefore(this.placement);\r\n    switch (this.#navType) {\r\n      // pills\r\n      case 1: return 'rounded text-bg-primary';\r\n      // tabs\r\n      case 2:\r\n        if (isVertical) {\r\n          if (isBefore) {\r\n            return 'shadow-none border border-end-0';\r\n          } else {\r\n            return 'shadow-none border border-start-0';\r\n          }\r\n        }\r\n        return 'shadow-none border border-bottom-0';\r\n      // underline\r\n      case 3: return 'shadow-none border-bottom border-3 fw-medium';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { svg, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSOverlayElement extends GSElement {\r\n\r\n    static properties = {\r\n        color: {},\r\n        target: {},\r\n        autoremove: { type: Boolean },\r\n        opened: { type: Boolean },\r\n        opacity: { type: Number },\r\n        padding: { type: Number },\r\n        radius: { type: Number },\r\n    }\r\n\r\n    #styleID = GSID.id;\r\n    #styleID2 = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        //this.color = 'rgb(0,0,0)';\r\n        this.color = '#000';\r\n        this.opacity = 0.7;\r\n        this.padding = 1;\r\n        this.radius = 6;\r\n        this.dynamicStyle(this.#styleID);\r\n        this.dynamicStyle(this.#styleID2);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', () => me.requestUpdate());\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        if (!me.opened) return '';\r\n        const path = me.#path;\r\n        return path ? html`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlspce=\"preserve\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\" preserveAspectRatio=\"xMinYMin slice\"\r\n            viewvbox=\"0 0 ${window.innerWidth} ${window.innerHeight}\"\r\n            class=\"gs-overlay gs-overlay-animated ${me.#styleID}\"\r\n            @click=\"${me.reset.bind(me)}\">\r\n            ${path}\r\n        </svg>` : '';\r\n    }\r\n\r\n    async firstUpdated(changed) {\r\n        const me = this;\r\n        const opt = {\r\n            fillRule: \"evenodd\",\r\n            clipRule: \"evenodd\",\r\n            strokeLinejoin: \"round\",\r\n            strokeMiterlimit: \"2\",\r\n            zIndex: \"10000\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    get #path() {\r\n        const me = this;\r\n        const el = GSDOM.query(me.target);\r\n        if (!me.target) return '';\r\n        const pathStr = me.#createSVGPathString(el);\r\n        const opt = { fill: me.color, opacity: me.opacity, pointerEvents: 'auto', cursor: 'auto' };\r\n        me.dynamicStyle(me.#styleID2, opt);\r\n        return svg`<path class=\"${me.#styleID2}\"  d=\"${pathStr}\"></path>`;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n\r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n\r\n        const rect = target.getBoundingClientRect();\r\n\r\n        const padding = me.padding;\r\n        const radius = me.radius;\r\n\r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n\r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n\r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n\r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n\r\n        const val = `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n            M${highlightBoxX},${highlightBoxY} \r\n            h${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n            v${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n            h-${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n            v-${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;\r\n        return val.replace(/[\\t\\n]/g, ' ');\r\n    }\r\n\r\n    static {\r\n        this.define('gs-overlay');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, map, range, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { size, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSPagerElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    size: { ...size },\r\n    first: { type: Boolean },\r\n    last: { type: Boolean },\r\n    next: { type: Boolean },\r\n    previous: { type: Boolean },\r\n    pages: { type: Number },\r\n\r\n    labelFirst: { attribute: 'label-first' },\r\n    labelLast: { attribute: 'label-last' },\r\n    labelNext: { attribute: 'label-next' },\r\n    labelPrevious: { attribute: 'label-previous' },\r\n\r\n    cssItem: { attribute: 'css-item' },\r\n\r\n  }\r\n\r\n  #ref = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.pages = 5;\r\n    this.labelFirst = '&laquo;';\r\n    this.labelLast = '&raquo;';\r\n    this.labelNext = '&rsaquo;';\r\n    this.labelPrevious = '&lsaquo;';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const half = Math.floor((me.pages - 1) / 2);\r\n    const page = me.dataController?.page || 0;\r\n    const start = page - half < 1 ? 1 : page - half;\r\n    const end = page > 0 ? page + half : me.pages;\r\n\r\n    return html`<nav \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        @click=\"${me.#onClick}\"\r\n        @keyup=\"${me.#onKeyUp}\"\r\n        @keydown=\"${me.#onKeyDown}\">\r\n        <ul ${ref(me.#ref)} class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()}\r\n        ${me.#renderPrevious()}\r\n        ${map(range(start, end + 1), (i) => me.#renderItem(i, '', '', i  === page))}\r\n        ${me.#renderNext()}\r\n        ${me.#renderLast()}\r\n        </ul></nav>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = me.size ? SizeTypes[me.size] || me.size : '';\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'pagination': true,\r\n      [`pagination-${size}`]: size,\r\n\r\n    }\r\n    return css;\r\n  }\r\n\r\n  updated() {\r\n    const target = this.#ref.value;\r\n    if (target && this.isFocused) {\r\n      target.querySelector('.active > a')?.focus();\r\n    }\r\n  }\r\n\r\n  onDataRead() {\r\n    this.requestUpdate();\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.first ? this.#renderItem(this.labelFirst, 'first', 'First page') : '';\r\n  }\r\n\r\n  #renderLast() {\r\n    return this.last ? this.#renderItem(this.labelLast, 'last', 'Last page') : '';\r\n  }\r\n\r\n  #renderPrevious() {\r\n    return this.previous ? this.#renderItem(this.labelPrevious, 'previous', 'Previous page') : '';\r\n  }\r\n\r\n  #renderNext() {\r\n    return this.next ? this.#renderItem(this.labelNext, 'next', 'Next page') : '';\r\n  }\r\n\r\n  #renderItem(text = '', name = '', title = '', active = false) {\r\n    const me = this;\r\n    text = GSUtil.decodeHTMLEntities(text);\r\n    return html`<li class=\"page-item ${active ? 'active' : ''}\">\r\n              <a class=\"page-link ${this.cssItem}\" \r\n                 name=\"${name}\" \r\n                 title=\"${me.translate(title)}\" \r\n                 href=\"#\">${me.translate(text)}</a>\r\n            </li>`;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const el = this.#toTarget(e, 'a');\r\n    if (!el) return;\r\n\r\n    const ctrl = me.dataController;\r\n    if (!ctrl) return;\r\n\r\n    const val = el.name || el.text;\r\n    me.emit(val, el);\r\n    \r\n    switch (val) {\r\n      case 'first':\r\n        return ctrl.firstPage();\r\n      case 'last':\r\n        return ctrl.lastPage();\r\n      case 'next':\r\n        return ctrl.nextPage();\r\n      case 'previous':\r\n        return ctrl.prevPage();\r\n    }\r\n\r\n    ctrl.page = val;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const current = this.#toTarget(e, 'li');\r\n    let el = null;\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        el = current?.previousElementSibling;\r\n        break;\r\n      case 'ArrowRight':\r\n        el = current?.nextElementSibling;\r\n        break;\r\n    }\r\n    el = el?.querySelector('a');\r\n    el?.focus();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') {\r\n      this.#toTarget(e, 'a')?.click();\r\n    }\r\n  }\r\n\r\n  #toTarget(e, name) {\r\n    const el = e.target.closest(name) || e.target;\r\n    return el.tagName === name.toUpperCase() ? el : undefined;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-pagination');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, position } from '../properties/index.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSPopper } from \"../base/GSPopper.mjs\";\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopupElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    position: { ...position },\r\n    trigger: {},\r\n    target: {},\r\n    autoclose: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    opened: { type: Boolean },\r\n    hPos: { type: Number, attribute: 'h-pos' },\r\n    vPos: { type: Number, attribute: 'v-pos' },\r\n    wMin: { type: Number, attribute: 'w-min' },\r\n    wMax: { type: Number, attribute: 'w-max' },\r\n    hMin: { type: Number, attribute: 'h-min' },\r\n    hMax: { type: Number, attribute: 'h-max' },\r\n\r\n  }\r\n\r\n  #caller = null;\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.autofocus = true;\r\n    this.autoclose = true;\r\n    this.trigger = 'click';\r\n    this.position = 'absolute';\r\n    this.placement = 'bottom';\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachTaraget();\r\n    me.attachEvent(window, 'resize', me.close.bind(me));\r\n    me.on('mouseleave', me.#onAuto.bind(me));\r\n  }\r\n\r\n  firstUpdated(changedProperties) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#resize();\r\n      me.#reposition();\r\n    });\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#reposition();\r\n    if (me.autofocus) me.focus();\r\n    me.notify();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div \r\n      ${ref(me.#panelRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"fade ${classMap(me.renderClass())}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      @keydown=\"${me.#onKeyDown}\">\r\n      ${me.renderTemplate()}\r\n      <slot></slot>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': me.opened,\r\n      //'d-none' : !me.opened,\r\n      [me.#styleID]: true,\r\n      [`position-${me.position}`]: me.position,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  focus() {\r\n    this.query('[tabindex], input, select, textarea, button, a', true)?.focus();\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Show popup at x/y position on the screen\r\n   * @param {Number} x \r\n   * @param {Number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const obj = {\r\n      top: '0px',\r\n      left: '0px',\r\n      translate: `${x}px ${y}px`\r\n    };\r\n    me.#resize(obj);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      case 'Escape':\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    //if (!me.opened) return;\r\n    if (me.vPos || me.hPos) {\r\n      const opt = {\r\n        top: '0px',\r\n        left: '0px',\r\n        translate: `${me.hPos}px ${me.vPos}px`\r\n      };\r\n      const rule = me.dynamicStyle(me.#styleID);\r\n      Object.assign(rule.style, opt);\r\n    } else if (me.target) {\r\n      let target = GSDOM.query(document.documentElement, me.target);\r\n      target = target.renderRoot?.firstElementChild || target;\r\n      GSPopper.popupFixed(me.placement, me.#panel, target);\r\n    }\r\n\r\n  }\r\n\r\n  #resize(obj = {}) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n    if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n    if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n    if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n    Object.assign(rule.style, obj);\r\n  }\r\n\r\n  #onPopup(e) {\r\n    const me = this;\r\n    me.#caller = e;\r\n    if (e instanceof Event) {\r\n      GSEvents.prevent(e);\r\n      me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n    }\r\n\r\n    if (me.placement) {\r\n      GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n      me.opened = true;\r\n      return;\r\n    }\r\n\r\n    let x = e.clientX, y = e.clientY;\r\n    const rect = me.#panel.getBoundingClientRect();\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #attachTaraget() {\r\n    const me = this;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    me.trigger.split(' ').forEach(evt => {\r\n      targets.forEach(target => me.attachEvent(target, evt, me.#onPopup.bind(me)));\r\n    });\r\n  }\r\n\r\n  #onAuto(e) {\r\n    if (this.autoclose) this.close();\r\n  }\r\n\r\n  get #panel() {\r\n    return this.#panelRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-popup');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, classMap, ifDefined } from '../lib.mjs';\r\nimport { literalTemplate } from '../directives/literal.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSProgressElement extends GSElement {\r\n\r\n  static properties = {\r\n    min: { reflect: true, type: Number },\r\n    max: { reflect: true, type: Number },\r\n    step: { reflect: true, type: Number },\r\n    value: { reflect: true, type: Number },\r\n    label: { reflect: true }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.min = 0;\r\n    this.step = 1;\r\n    this.max = 100;\r\n    this.value = 0;\r\n    this.styles = { width: '0%' };\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'progress-bar' : true,\r\n      [me.#styleID] : true\r\n    }\r\n    return css;\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#updateStyle();\r\n    const obj = {min :me.min, max:me.max, step:me.step, value:me.value, percentage:me.percentage};\r\n    return html`\r\n    <div class=\"progress\" @keydown=\"${me.#onKeySelect}\" dir=\"${ifDefined(me.direction)}\">\r\n        <div class=\"${classMap(me.renderClass())}\" \r\n             \r\n             role=\"progressbar\"\r\n             tabindex=\"0\">\r\n             ${literalTemplate(me.label, obj)}\r\n        </div>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    if (changed.has('value')) {\r\n      let val = me.step + changed.get('value');\r\n      val = me.#update(val, val);\r\n      changed.set('value', val);\r\n    }\r\n  }\r\n\r\n  updated(changed) {\r\n    if (changed.has('value')) {\r\n      this.notify();\r\n    }\r\n  }\r\n\r\n  increase(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value + val, me.value);\r\n    return true;\r\n  }\r\n\r\n  decrease(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value - val, me.value);\r\n    return true;\r\n  }\r\n\r\n  get percentage() {\r\n    const me = this;\r\n    return Math.trunc((me.value / me.max) * 100);\r\n  }\r\n\r\n  #updateStyle() {\r\n    const me = this;\r\n    me.styles.width = `${me.percentage}%`;\r\n    me.dynamicStyle(me.#styleID, me.styles);\r\n  }\r\n\r\n  #update(val, old = 0) {\r\n    val = GSUtil.asNum(val, GSUtil.asNum(old));\r\n    const me = this;\r\n    if (val > me.max) val = me.max;\r\n    if (val < me.min) val = me.min;\r\n    return val;\r\n  }\r\n\r\n  #onKeySelect(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp' :\r\n      case 'ArrowRight' :\r\n          return me.increase();\r\n      case 'ArrowLeft' :\r\n      case 'ArrowDown' :\r\n         return me.decrease();\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-progress');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\n\r\nexport class GSSpinnerElement extends GSElement {\r\n\r\n    static styles = css`.spinner-border { border: var(--bs-spinner-border-width) solid currentcolor; border-right-color: transparent; }`;\r\n\r\n    static properties = {\r\n        color: { ...color, reflect: true },\r\n        small: { type: Boolean, reflect: true },\r\n        pulsar: { type: Boolean }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\" role=\"status\"></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"spinner-border\": !me.pulsar,\r\n            \"spinner-grow\": me.pulsar,\r\n            [`text-${me.color}`]: me.color,\r\n            [`spinner-border-sm`]: !me.pulsar && me.small,\r\n            [`spinner-grow-sm`]: me.pulsar && me.small,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-spinner');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitterElement class\r\n * @module components/GSSplitterElement\r\n */\r\n\r\nimport { classMap, createRef, ref, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCSSMap } from '../base/GSCSSMap.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { notEmpty, numGT0, placement } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSSplitterElement extends GSElement {\r\n\r\n    static properties = {\r\n        // Check if splitter use vertical or horizontal splitting\r\n        split: { reflect: true },\r\n        // start|end|top|bottom\r\n        resize: { ...placement, hasChanged: notEmpty },\r\n        size: { type: Number, hasChanged: numGT0 }\r\n    }\r\n\r\n    #cursor = 0;\r\n    #styleID = GSID.id;\r\n    #styleTGT = GSID.id;\r\n    #elRef = createRef();\r\n    #mouseController;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.size = 8;\r\n        me.resize = 'start';\r\n        me.dynamicStyle(me.#styleID);\r\n        me.#load();\r\n        me.#mouseController = new ElementMoveController(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        //this.dynamicStyle(this.#styleTGT, null, true);\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        super.firstUpdated(changed);\r\n        const me = this;\r\n        me.#mouseController.attach(me.#splitter);\r\n        //const shadow = GSDOM.root(me.target) instanceof ShadowRoot;\r\n        //me.dynamicStyle(me.#styleTGT, {}, !shadow);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#elRef)} \r\n            @dblclick=\"${me.#onDoubleClick}\"\r\n            data-gs-class=\"${me.#styleID}\" \r\n            class=\"${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'splitter': true,\r\n            [me.#styleID]: true\r\n        }\r\n        return css;\r\n    }\r\n\r\n    updated(changedProperties) {\r\n        const me = this;\r\n        me.#cssUpdate();\r\n    }\r\n\r\n    /**\r\n    * Lock UI for mouse events to enable resizing over embedded iframes\r\n    * @param {MouseEvent} e \r\n    */\r\n    onStartMove(e) {\r\n        const me = this;\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', { start: true });\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    onMouseMove(e) {\r\n        const me = this;\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Save last position and unlock mouse UI events when resizing finished\r\n     * @param {*} e \r\n     */\r\n    onEndMove(e) {\r\n        const me = this;\r\n        me.#save();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', { stop: true });\r\n    }\r\n\r\n    /**\r\n    * Check if splitter use vertical or hotizontal splitting\r\n    * @returns {Boolean}\r\n    */\r\n    get isVertical() {\r\n        return this.split === 'vertical';\r\n    }\r\n\r\n    get isHorizontal() {\r\n        return !this.isVertical;\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display', 'none')).pop();\r\n        }\r\n        el.classList?.add(me.#styleTGT);\r\n        return el;\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.#elRef.value;\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        return this.target.style;\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n\r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n                .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, true);\r\n                    el.dataset.gsSplitter = true;\r\n                });\r\n        } else {\r\n            me.#lockable\r\n                .filter(el => el.dataset.gsSplitter)\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, false);\r\n                    delete el.dataset.gsSplitter;\r\n                });\r\n        }\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { width: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { height: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        const key = me.isVertical ? 'width' : 'height';\r\n        me.#styleDynamic[key] = val + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { [key]: val + \"px\" }, true);\r\n    }\r\n\r\n    #cssUpdate() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        const opt = {\r\n            [size]: `${me.size}px`,\r\n            [full]: '100%',\r\n            'border-width': '1px',\r\n            cursor: cursor,\r\n            'border-color': 'darkgray',\r\n            'border-style': 'solid',\r\n            'background-color': 'lightgray',\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-splitter');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNavItemElement } from '../NavItem.mjs';\r\n\r\n/**\r\n * Tab component (gs-tab), generate selectable/switchable tabs on a panel\r\n */\r\nexport class GSTabItemElement extends GSNavItemElement {\r\n\r\n  static properties = {\r\n    name: {}\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.#updateCSS + this.css;\r\n  }\r\n\r\n  get #updateCSS() {\r\n    const me = this;\r\n    return me.shouldUpdate() ? GSUtil.normalize(me.parentComponent?.tabCSS) : '';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.parentComponent?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\n\r\n/**\r\n * Container for individual tab; part of tabed panel\r\n */\r\nexport class GSTabPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    name: {},\r\n    template: {},\r\n    active: { type: Boolean, reflect : true }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.active = false;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" \r\n      class=\"${classMap(this.renderClass())}\">\r\n      <slot>\r\n      ${this.template ? html`<gs-template flat src=\"${this.template}\"></gs-template>` : ''}\r\n      </slot></div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tab-pane': true,\r\n      'd-none' : !me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tab-group') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../../base/GSID.mjs';\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { PlacementTypes } from '../../properties/placement.mjs';\r\nimport { GSNavElement } from '../Nav.mjs';\r\n\r\n/**\r\n * Panel with tabs component (gs-tab-group), generate childrens gs-tab and gs-tab-panel \r\n */\r\nexport class GSTabGroupElement extends GSNavElement {\r\n\r\n  static properties = {\r\n    panelCSS: { attribute: 'css-panel' },\r\n    tabCSS: { attribute: 'css-tab' },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n   \r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    // link tabs and panels\r\n    me.items.forEach(el => me.#findPanel(el));\r\n    me.onSelected(me.active);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.items.forEach(el => me.#findPanel(el));\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'd-flex': me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    const me = this;\r\n    const reverse = PlacementTypes.isAfter(me.placement);\r\n    const list = [super.renderWrappedUI('tabs'),\r\n    html`<div class=\"tab-content flex-fill ${me.panelCSS}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <slot name=\"panels\"></slot>\r\n      </div>\r\n      <slot class=\"d-none\"></slot>`];\r\n    return reverse ? list.reverse() : list;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const css = super.renderWrappedClass();\r\n    return me.mapCSS(me.tabCSS, css);\r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    const me = this;\r\n    const tabs =  me.#renderTabs();\r\n    const panels = me.#renderPanels();\r\n    return tabs.concat(...panels);\r\n  }\r\n\r\n  #renderTabs() {    \r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab generated slot=\"tabs\"\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\"    \r\n        title=\"${ifDefined(o.title)}\"\r\n        name=\"${o.name}\"></gs-tab>`;\r\n    });    \r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  #renderPanels() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-panel generated  \r\n        slot=\"panels\" name=\"${o.name}\" \r\n        .active=\"${ifDefined(o.active)}\"\r\n        template=\"${ifDefined(o.template)}\"></gs-tab-panel>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when tab selected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onSelected(el) {\r\n    el?.click();\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = true;\r\n  }\r\n\r\n  /**\r\n   * Callback when tab deselected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onDeselected(el) {\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = false;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-TAB';\r\n  }\r\n\r\n  /**\r\n   * Selected Tab node name is used to find the panel.\r\n   * If panel found, auto-link it with node element\r\n   * @param {GSTabElement} el \r\n   */\r\n  #findPanel(el) {\r\n    if (!el) return null;\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    const generated = me.data?.length > 0;\r\n    let panel = el[key] || me.query(`gs-tab-panel[name=\"${el.name}\"]`, generated);\r\n    if (!el[key]) el[key] = panel;\r\n    return panel;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\n/**\r\n * A HTML Table renderer for tabular data representation.\r\n * Either use \"storage\" property to point to data handler\r\n * or use simpler form by using \"data\" property.\r\n * \r\n * NOTE: Simpler form currently does not suport data filter.\r\n * Simpler form is only for read-ony static data representation.\r\n */\r\nexport class GSTableElement extends GSElement {\r\n\r\n  static #icons = ['sort-up', 'arrow-down-up', 'sort-down-alt'];\r\n\r\n  static styles = css`th:hover { opacity: 50% !important; }`;\r\n\r\n  static CELLS = {\r\n    align: {},\r\n    width: {},\r\n    width: {},\r\n    css: {},\r\n    title: {},\r\n    filter: { type: Boolean },\r\n    filterType: { attribute: 'filter-type' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    ...GSData.PROPERTIES\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    color: { ...color },\r\n    colorHead: { ...color, attribute: 'head-color' },\r\n    colorSelect: { ...color, attribute: 'select-color' },\r\n    colorSort: { ...color, attribute: 'sort-color' },\r\n    stripedColumn: { type: Boolean, attribute: 'striped-column' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    divider: { type: Boolean },\r\n    striped: { type: Boolean },\r\n    hover: { type: Boolean },\r\n    small: { type: Boolean },\r\n    grid: { type: Boolean },\r\n    borderless: { type: Boolean },\r\n\r\n    sort: { type: Array, state: true },\r\n    columns: { type: Array, state: true },\r\n    key: { type: Number, state: true },\r\n\r\n    data: { type: Array },\r\n    datacolumn: { type: Boolean },\r\n    multisort: { type: Boolean },\r\n    multiselect: { type: Boolean },\r\n    protected: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n    toggle: { type: Boolean },\r\n    sortable: { type: Boolean },\r\n  }\r\n\r\n  #config = [];\r\n  #sortOrder = [];\r\n  #auto = false;\r\n\r\n  constructor() {\r\n    super();\r\n    this.headColor = 'secondary';\r\n    this.colorSelect = 'info';\r\n    this.columns = [];    \r\n    this.data = [];\r\n    this.sort = [];\r\n    this.key = 0;\r\n  }\r\n\r\n  get selected() {\r\n    return this.dataController.selected;\r\n  }\r\n\r\n  set search(val) {\r\n    const me = this;\r\n    if (me.storage && me.dataController) {\r\n      return me.dataController.search = val;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#config = GSItem.proxify(me, GSTableElement.CELLS);\r\n    if (me.columns.length === 0) me.columns = me.#config.map(v => v.name);\r\n    if (!me.storage) {      \r\n      me.storage = me.#auto = GSID.next('table-');\r\n    }\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.dataController.clearSelected(this.data);\r\n    this.data = [];\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'user-select-none': me.protected,\r\n      'table': true,\r\n      'table-sm': me.small,\r\n      'table-hover': me.hover,\r\n      'table-striped': me.striped,\r\n      'table-bordered': me.grid,\r\n      'table-borderless': me.borderless,\r\n      'table-striped-columns': me.stripedColumns,\r\n      [`table-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.dataController?.read();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (me.columns.length != me.sort.length) me.sort = Array(me.columns.length).fill(0);\r\n    if (me.datacolumn && me.data.length > 0) {\r\n      me.columns = me.data[0];\r\n      me.data = me.data.slice(1);\r\n    }\r\n    if (changed.has('multiselect') && !me.multiselect) me.dataController.clearSelected();\r\n    if (changed.has('selectable') && !me.selectable) me.dataController.clearSelected();\r\n    if (changed.has('sortable') || changed.has('multisort')) {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [];\r\n    }\r\n\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const headColor = me.colorHead ? `table-${me.colorHead}` : '';\r\n    return html`\r\n      <table  \r\n       dir=\"${ifDefined(me.direction)}\"\r\n       @keyup=\"${me.#onKeyUp}\"\r\n       @keydown=\"${me.#onKeyDown}\"\r\n       class=\"${classMap(me.renderClass())}\">\r\n        <thead class=\"${ifDefined(headColor)}\">\r\n          ${me.#renderFilters()}\r\n          <tr @click=${me.#onSort}>\r\n            ${me.columns.map((entry, index) => me.#renderColumn(entry, index))}\r\n          </tr>\r\n        </thead>\r\n        <tbody @click=${me.#onSelect} @contextmenu=${me.#onSelect} class=\"${me.divider ? 'table-group-divider' : ''}\" role=\"button\">\r\n          ${me.data.map((entry, index) => me.#renderRecord(entry, index))}\r\n          ${me.#renderEmpty()}\r\n        </tbody>\r\n      </table>\r\n      <slot name=\"extra\">${me.#renderHandler()}</slot>\r\n    `;\r\n  }\r\n\r\n  #renderHandler() {\r\n    const me = this;\r\n    return me.#auto ? html`<gs-data-handler type=\"cached\" mode=\"\" id=${me.#auto} generated></gs-data-handler>` : '';\r\n  }\r\n\r\n  onDataRead(data) {\r\n    const me = this;\r\n    me.data = data;\r\n    //me.dataController.clearSelected();\r\n\r\n    // update filtering\r\n    if (data.length > 0 && me.#hasFilters) {\r\n      me.#config.forEach((entry, index) => {\r\n        entry.columnType = me.#columType(index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear table filters\r\n   */\r\n  clear() {\r\n    this.#input.forEach(el => el.value = '');\r\n    this.dataController?.filter([]);\r\n  }\r\n\r\n  valueAt(row, cell) {\r\n    return this.data.length > row ? this.data[row][cell] : undefined;\r\n  }\r\n\r\n  get #input() {\r\n    return this.queryAll('th > input', true);\r\n  }\r\n\r\n  get #hasFilters() {\r\n    return this.#config.filter(o => o.filter).length > 0;\r\n  }\r\n\r\n  #columType(index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const cell = me.valueAt(0, me.columns[index]);\r\n    cfg.type = cfg.type || 'text';\r\n    const cfgType = { 'string': 'text', 'currency': 'number', 'timestamp': 'datetime-local' }[cfg.type]\r\n    const dataType = cell instanceof Date ? 'date' : typeof cell;\r\n    return cell ? dataType : cfgType || cfg.type;\r\n  }\r\n\r\n  #renderFilters() {\r\n    const me = this;\r\n    return me.#hasFilters ? html`<tr>${me.columns.map((entry, index) => me.#renderFilter(entry, index))}</tr>` : '';\r\n  }\r\n\r\n  #renderFilter(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (!cfg?.filter) return html`<th></th>`;\r\n    let mask = '';\r\n    const isDate = cfg.columnType === 'date';\r\n    if (isDate) mask = cfg.format || GSUtil.getDateFormat(cfg.locale || GSUtil.locale);\r\n    const css = `${GSUtil.normalize(me.cssFilter)} ${GSUtil.normalize(cell.cssFilter)}`; \r\n\r\n    return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n        <input is=\"gs-ext-input\" .index=${index}\r\n            class=\"form-control ${css}\" \r\n            mask=\"${ifDefined(mask)}\"\r\n            name=\"${cell}\" \r\n            type=\"${cfg.filterType || cfg.columnType}\"\r\n            data-slots=\"${ifDefined(isDate ? 'DMY' : undefined)}\">\r\n        </th>`;\r\n  }\r\n\r\n  #renderColumn(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const css = `${GSUtil.normalize(me.cssHeader)} ${GSUtil.normalize(cell.cssHeader)}`; \r\n    return html`\r\n      <th .index=${index} class=\"${css}\" width=\"${ifDefined(me.#config[index]?.width)}\">\r\n        <div class=\"d-flex justify-content-between\"> \r\n          <span>${cfg?.title || cell}</span>\r\n          ${me.#renderIcon(index)}\r\n        </div>\r\n      </th>\r\n    `\r\n  }\r\n\r\n  #renderIcon(index) {\r\n    const me = this;\r\n    if (!me.sortable) return '';\r\n    const icons = GSTableElement.#icons;\r\n    const sortType = me.sort[index];\r\n    const order = me.multisort ? me.#sortOrder.indexOf(index) + 1 : '';\r\n    return html`<gs-icon name=\"${icons[sortType + 1]}\" super=\"${order > 0 ? order : ''}\" color=\"${ifDefined(me.colorSort)}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderRecord(entry, index) {\r\n    const me = this;\r\n    const selected = me.dataController.isSelected(entry);\r\n    const color = me.colorSelect && selected ? `table-${me.colorSelect}` : '';\r\n    const cells = me.#remapRecord(entry);\r\n    return html`\r\n        <tr .index=${index} class=\"${color}\" tabindex=\"0\" ?selected=${selected}>\r\n          ${cells.map((cell, i) => html`<td class=\"text-${me.#config[i]?.align}\"><span>${cell}</span></td>`)}\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  #remapRecord(record) {\r\n    const me = this;\r\n    if (!Array.isArray(record)) record = me.columns.map(v => record[v]);\r\n    return record.map((val, i) => me.#config[i] ? GSData.format(me.#config[i], val) : val);\r\n  }\r\n\r\n  #renderEmpty() {\r\n    const me = this;\r\n    return me.data.length > 0 ?  '' :\r\n    html`<tr data-ignore=\"true\"><td colspan=\"${me.columns.length}\" class=\"text-center fw-bold text-muted\">${me.translate('No Data')}</td></tr>`;\r\n  }\r\n\r\n  #elementTofilter(el) {\r\n    if (!el.value) return undefined;\r\n    const isDate = el.type === 'date';\r\n    const val = isDate ? el.valueAsDate : el.value;\r\n    const cfg = this.#config[el.index];\r\n    return { name: el.name, value: val, locale : cfg?.locale };\r\n  }\r\n\r\n  #onFilter(e) {\r\n    \r\n    const me = this;\r\n    \r\n    const filter = me.#input\r\n      .map(el => me.#elementTofilter(el))\r\n      .filter(el => el?.value);\r\n\r\n    if (me.storage) {\r\n      me.dataController.filter(filter);\r\n    } else {\r\n      // TODO keep full data, use sorted\r\n      // GSData.filter(me.data, filter);\r\n    }\r\n  }  \r\n\r\n  #onSort(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.sortable) return;\r\n    \r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const column = e.target.closest('th');\r\n    if (!icon || !column) return;\r\n\r\n    const idx = column.index !== undefined ? column.index : GSDOM.getElementIndex(column);\r\n    const current = me.sort[idx];\r\n    const sortType = current === 1 ? -1 : current + 1;\r\n\r\n    if (me.multisort) {\r\n      if (sortType == 0) {\r\n        me.#sortOrder = me.#sortOrder.filter(v => v != idx);\r\n      } else if (!me.#sortOrder.includes(idx)) {\r\n        me.#sortOrder.push(idx);\r\n      }\r\n    } else {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [idx];\r\n    }\r\n\r\n    me.sort[idx] = sortType;\r\n\r\n    const sort = me.#prepareSorter(me.sort, me.#sortOrder);\r\n\r\n    if (me.storage) {\r\n      me.dataController?.sort(sort);\r\n    } else {\r\n      me.data = GSData.sortData(me.data, sort);\r\n    }\r\n\r\n    me.emit('sort');\r\n  }\r\n\r\n  #prepareSorter(sort, sortOrder) {\r\n    \r\n    const me = this;\r\n\r\n    if (sort.filter(v => v).length === 0) {\r\n      sort = Array(me.columns.length).fill(0);\r\n      sort[me.key] = 1;\r\n    }\r\n\r\n    // if data record is object (not simple array)\r\n    const isComplex = me.data[0] && !Array.isArray(me.data[0]);\r\n\r\n    // sort list \r\n    const list = sort.map((v, i) => v ? { name: isComplex ? me.columns[i] : undefined, col: i, ord: v, idx: sortOrder.indexOf(i) } : null).filter(v => v);\r\n\r\n    // order sort list by idx\r\n    sort = GSData.sortData(list, [{ name: 'idx', ord: 1 }]);\r\n\r\n    return sort;\r\n  }\r\n\r\n  #onSelect(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.selectable) return;\r\n    \r\n    const tr = e.target.tagName === 'TR' ? e.target : e.target.closest('tr');\r\n    if (!tr) return;\r\n    \r\n    // if context menu is attached and right click made\r\n    if (e.button === 2 && !me.query('gs-context')) return;\r\n    \r\n    const record = me.data[tr.index];\r\n    const isSelected = me.dataController.isSelected(record);\r\n    if (me.multiselect) {\r\n      if (isSelected) {\r\n        me.dataController.removeSelected(record);\r\n      } else {\r\n        me.dataController.addSelected(record);\r\n      }\r\n    } else if (me.toggle) {\r\n      if (isSelected) {\r\n        me.dataController.clearSelected(me.data);\r\n      } else {\r\n        me.dataController.addSelected(record);\r\n      }\r\n    } else {\r\n      me.dataController.clearSelected(me.data);\r\n      me.dataController.addSelected(record);\r\n    }\r\n    me.emit('select');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    if (!e.target.matches('tbody tr')) return;\r\n    let el = null;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        el = e.target.previousElementSibling;\r\n        break;\r\n      case 'ArrowDown':\r\n        el = e.target.nextElementSibling;\r\n        break;\r\n    }\r\n\r\n    if (el) {\r\n      el.focus();\r\n      this.emit('focus', el);\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') this.#onSelect(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-table');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport { createRef, ref, classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { stringArrayConverter, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSTagElement}\r\n */\r\nexport default class GSTagElement extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static styles = css`\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n\r\n    static properties = {\r\n        placeholder: {},\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        name: {},\r\n        data: { type: Array },\r\n        values: { type: Array, reflect: true, converter: stringArrayConverter },\r\n        appendable: { type: Boolean },\r\n        color: { ...color },\r\n        closeColor: { ...color, attribute: 'close-color' },\r\n        cssClose: { attribute: 'css-close' },\r\n        cssTag: { attribute: 'css-tag' },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {}\r\n    }\r\n\r\n    #dataListRef = createRef();\r\n    #inputRef = createRef();\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = '';\r\n        this.data = this.#items;\r\n        this.closeColor = 'light';\r\n        this.color = 'primary';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const tags = me.#renderTags();\r\n        return html`\r\n        <div  dir=\"${ifDefined(me.direction)}\" \r\n            class=\"${classMap(me.renderClass())}\"\r\n            @click=\"${me.#onClick.bind(me)}\">\r\n            ${tags}\r\n            <input type=\"text\" \r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            ${ref(me.#inputRef)}\r\n            name=\"${me.name}\" \r\n            list=\"${me.name}_list\"\r\n            class=\"form-control d-flex w-auto flex-grow-1\" \r\n            placeholder=\"${me.#info}\">\r\n            <datalist ${ref(me.#dataListRef)} id=\"${me.name}_list\">${me.#renderList()}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"d-flex\": true,\r\n            \"flex-wrap\": true,\r\n            \"align-items-center\": true,\r\n            \"gap-1 \": true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    get #info() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return me.placeholder ? me.placeholder : alt;\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTagElement.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.data.length >= me.max;\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax || (!optEl && me.appendable == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (!me.values.includes(fld.value)) {\r\n            me.values.push(fld.value);\r\n            fld.value = '';\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const value = tagEl.dataset.value;\r\n        me.values = me.values.filter(v => v != value);\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v));\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        const size = me.size > 0 ? `fs-${me.size}` : '';\r\n        return html`<div class=\"${classMap(me.#tagClass)}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"${classMap(me.#btnClass)}\"></button></div>`;\r\n    }\r\n\r\n    get #tagClass() {\r\n        const me = this;\r\n        const opt = {\r\n            badge: true,\r\n            tag: true,\r\n            [`fs-${me.size}`]: me.size > 0,\r\n            [`bg-${me.color}`]: me.color ? true : false\r\n        }\r\n        return me.mapCSS(me.cssTag, opt);\r\n    }\r\n\r\n    get #btnClass() {\r\n        const me = this;\r\n        const opt = {\r\n            'btn-close': true,\r\n            'ms-1': true,\r\n            [`bg-${me.closeColor}`]: me.closeColor ? true : false\r\n        }\r\n        return me.mapCSS(me.cssClose, opt);\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        return me.data.map(v => html`<option value=\"${v}\">`);\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el));\r\n    }\r\n\r\n    get #items() {\r\n        return this.#proxify(this).map(el => el.name).filter(v => v ? true : false);\r\n    }\r\n\r\n    get #input() {\r\n        return this.#inputRef.value;\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.#dataListRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-tag');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSTextElement extends GSElement {\r\n\r\n  #text = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.#text = this.innerText;\r\n    this.innerText = \"\";\r\n  }\r\n\r\n  renderUI() {\r\n    return this.translate(this.#text);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-text');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSTooltipElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    title: {},\r\n    target: {},\r\n    opened: { type: Boolean },\r\n    local: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowStyle = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.placement = 'top';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowStyle);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      role=\"tooltip\"\r\n      data-popper-placement=\"${me.placement}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      <div ${ref(me.#arrowRef)} \r\n          class=\"tooltip-arrow ${me.#arrowStyle}\" \r\n          data-gs-class=\"${me.#arrowStyle}\">\r\n      </div>\r\n      <div class=\"tooltip-inner\">${me.translate(me.title)}</div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tooltip': true,\r\n      'bs-tooltip-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  #attachEvents() {\r\n    const me = this;\r\n    me.attachEvent(me.#ref, 'mouseenter', me.open.bind(me));\r\n    me.attachEvent(me.#ref, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const arrowEl = me.#arrow;\r\n    const panelEl = me.#panel;\r\n    if (!panelEl) return;\r\n    if (me.opened) {\r\n      GSPopper.popupFixed(me.placement, panelEl, me.#ref, arrowEl);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, { top: '-1000px', left: '-1000px' });\r\n    }\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return me.local ? me.#refLocal : me.#refGlobal;\r\n    }\r\n  }\r\n\r\n  get #refLocal() {\r\n    const root = GSDOM.root(this);\r\n    return GSDOM.query(root, this.target);\r\n  }\r\n  \r\n  get #refGlobal() {\r\n    return GSDOM.query(document.body, this.target);\r\n  }\r\n\r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-tooltip');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty } from '../properties/index.mjs';\r\n\r\nexport class GSTemplateElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { reflect: true, hasChanged: notEmpty }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    const me = this;\r\n    if (me.flat) {\r\n      me.renderOptions.renderBefore = me;\r\n      return me.parentElement;\r\n    }\r\n    return super.createRenderRoot();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${this.renderTemplate()}`;\r\n  }\r\n\r\n\ttemplateInjected() {\r\n\t\tthis.emit('template-injected', null, true, true);\r\n\t}\r\n\r\n  static {\r\n    this.define('gs-template');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle automatic field value copy and select\r\n */\r\nexport class CopySelectController {\r\n\r\n  #host;\r\n\r\n  #clickCallback;\r\n  #copyCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#clickCallback = me.#onClick.bind(me);\r\n    me.#copyCallback = me.#onCopy.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('click', me.#clickCallback);\r\n    me.#host.on('copy', me.#copyCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('click', me.#clickCallback);\r\n    me.#host.off('copy', me.#copyCallback);\r\n  }\r\n\r\n  #onCopy() {\r\n    GSUtil.writeToClipboard(this.#host.value);\r\n  }\r\n\r\n  #onClick(e) {\r\n      const me = this;\r\n      if (me.#host.autocopy) GSUtil.writeToClipboard(me.#host.value);\r\n      if (me.#host.autoselect) me.#host.select();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle field mask \r\n */\r\nexport class MaskController {\r\n\r\n  static #special = '.^$*+?()[]{}\\|';\r\n\r\n  static #maskType = {\r\n    x: /[0-9a-fA-F]/g,\r\n    n: /[0-9]/g,\r\n    y: /[0-9]/g,\r\n    m: /[0-9]/g,\r\n    d: /[0-9]/g,\r\n    h: /[0-9]/g,\r\n    s: /[0-9]/g,\r\n    '.': /[0-9]/g,\r\n    '#': /[a-zA-Z]/g,\r\n    '*': /[0-9a-zA-Z]/g,\r\n    '_': /./g\r\n  };\r\n\r\n  #back = false;\r\n  #slots;\r\n  #prev;\r\n  #first;\r\n  #accept;\r\n  #pattern;\r\n\r\n  #host;\r\n\r\n  #keyDownCallback;\r\n  #inputCallback;\r\n  #focusCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    me.#inputCallback = me.#format.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.initRules();\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n    me.#host.on('input', me.#inputCallback);\r\n    me.#host.on('focus', me.#focusCallback);\r\n    me.#host.on('blur', me.#blurCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n    me.#host.off('input', me.#inputCallback);\r\n    me.#host.off('focus', me.#focusCallback);\r\n    me.#host.off('blur', me.#blurCallback);\r\n  }\r\n\r\n  initRules() {\r\n    const me = this;\r\n    if (!me.pattern) return;\r\n    me.#slots = me.#builSlots();\r\n    me.#prev = (j => Array.from(me.pattern, (c, i) => me.#slots.has(c) ? j = i + 1 : j))(0);\r\n    me.#first = [...me.pattern].findIndex(c => me.#slots.has(c));\r\n    me.#accept = me.#builAccept();\r\n    me.#toPattern();    \r\n  }\r\n  \r\n  validate() {\r\n    const me = this;\r\n    me.setCustomValidity('');\r\n    me.#pattern.lastIndex = 0;\r\n    const isMatch = me.required ? me.#pattern.test(me.raw) : true;\r\n    const isValid = isMatch && me.checkValidity();\r\n    if (!isMatch) me.setCustomValidity('Data did not match pattern!');\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.#host.checkValidity();\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.#host.reportValidity();\r\n  }\r\n\r\n  setSelectionRange(i, j) {\r\n    this.#host.setSelectionRange(i, j);\r\n  }\r\n  \r\n  select() {\r\n    this.#host.select();\r\n  }\r\n\r\n  get value() {\r\n    const [i, j] = this.#range();\r\n    return this.raw.substring(0, j);\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get pattern() {\r\n    return this.#host.mask;\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get selectionStart() {\r\n    return this.#host.selectionStart;\r\n  }\r\n\r\n  get selectionEnd() {\r\n    return this.#host.selectionEnd;\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.#host.autoselect;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    this.#back = e.key === \"Backspace\";\r\n  }\r\n\r\n  #onFocus(e) {\r\n    const me = this;\r\n    me.#format(e);\r\n    if (me.autoselect) me.select();\r\n  }\r\n\r\n  #onBlur(e) {\r\n    // me.value === me.pattern && (me.value = \"\");\r\n    this.validate();\r\n  }\r\n\r\n  /**\r\n   * If data-slots not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #builSlots() {\r\n    const me = this;\r\n    let slots = me.dataset.slots;\r\n    if (!slots) {\r\n      const maskType = MaskController.#maskType;\r\n      slots = [...new Set(me.pattern)]\r\n        .filter(v => maskType[v.toLowerCase()])\r\n        .join('');\r\n    }\r\n    return new Set(slots || \"_\");\r\n  }\r\n\r\n  /**\r\n   * If data-accept not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #builAccept() {\r\n    const me = this;\r\n    let accept = me.dataset.accept;\r\n    if (!accept) {\r\n      const maskType = MaskController.#maskType;\r\n      accept = [...new Set(me.pattern)]\r\n      .map(v => maskType[v.toLowerCase()])\r\n      .filter(v => v);\r\n      if (accept.length > 0) {\r\n        const tmp = {};\r\n        accept.forEach(v => tmp[v.src] = v);\r\n        accept = Object.values(tmp);\r\n        return accept.length === 1 ? accept.pop() : accept;\r\n      } \r\n\r\n    }\r\n    return new RegExp(accept || \"\\\\d\", \"g\");\r\n  }\r\n\r\n  #range() {\r\n    const me = this;\r\n    const value = me.raw;\r\n    return [me.selectionStart, me.selectionEnd].map(i => {\r\n      i = me.#clean(value.slice(0, i)).findIndex(c => me.#slots.has(c));\r\n      return i < 0 ? me.#prev[me.#prev.length - 1] : me.#back ? me.#prev[i - 1] || me.#first : i;\r\n    });\r\n  }\r\n\r\n  #format(e) {\r\n    const me = this;\r\n    const [i, j] = me.#range();\r\n    me.value = me.#clean(me.#host.raw).join``;\r\n    me.setSelectionRange(i, j);\r\n    me.#back = false;\r\n  }\r\n\r\n  //  TODO support multi #accecpt\r\n  #clean(input) {\r\n    const me = this;\r\n    input = input.match(me.#accept) || [];\r\n    return Array.from(me.pattern, c => input[0] === c || me.#slots.has(c) ? input.shift() || c : c);\r\n  }\r\n\r\n  #toPattern() {\r\n\r\n    const me = this;\r\n\r\n    if (me.pattern.length === 0) return;\r\n\r\n    const chars = me.pattern.split('');\r\n    const masks = ['^'];\r\n\r\n    const maskType = MaskController.#maskType;\r\n    const special = MaskController.#special;\r\n\r\n    let cnt = 0;\r\n    chars.forEach((v, i) => {\r\n      const m = maskType[v.toLowerCase()];\r\n      if (!m) {\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        cnt = 0;\r\n        if (special.includes(v)) masks.push('\\\\');\r\n        return masks.push(v);\r\n      }\r\n\r\n      chars[i] = new RegExp(m, 'g');\r\n\r\n      if (masks.length === 0) return masks.push(m.source);\r\n\r\n      if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n      if (cnt > 0) masks.push(`{${++cnt}}`);\r\n      cnt = 0;\r\n      masks.push(m.source);\r\n    });\r\n\r\n    if (cnt > 0) masks.push(`{${++cnt}}`);\r\n    masks.push('$');\r\n\r\n    me.#pattern = new RegExp(masks.join(''), 'g');\r\n    // me.#max = me.pattern.length;\r\n    // me.#masks = chars;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type number to support max length entry\r\n */\r\nexport class NumberController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get maxLength() {\r\n    return GSUtil.asNum(this.#host.maxLength, 0);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n    \r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'number') return me.#onNumberInput(e);\r\n  }\r\n\r\n  #onNumberInput(e) {\r\n    const me = this;\r\n    if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n        me.value = me.value.substring(0, me.maxLength);\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle for input tpye password tosupport keyboard shortcut for password reveal.\r\n */\r\nexport class PasswordController {\r\n\r\n  #host;\r\n\r\n  #revealing = false;\r\n\r\n  #keyUpCallback;\r\n  #keyDownCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyUpCallback = me.#onKeyUp.bind(me);\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('keyup', me.#keyUpCallback);\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keyup', me.#keyUpCallback);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  get reveal() {\r\n    return this.#host.hasAttribute('reveal');\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  set type(val) {\r\n    if (this.#host) this.#host.type = val;\r\n  }\r\n\r\n  #isReveal(e) {\r\n    return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    const me = this;\r\n    if (e.key === 'Shift' && me.#revealing) {\r\n      me.type = 'password';\r\n    }\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (me.#isReveal(e)) {\r\n      me.#revealing = true;\r\n      me.type = 'text';\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCSSMap } from \"../../../base/GSCSSMap.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type text to support text value changes based on CSS\r\n */\r\nexport class TextController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'text') me.value = me.#updateText(me.value);\r\n  }\r\n\r\n  #updateText(value = '') {\r\n    const map = GSCSSMap.styleValue(this.#host, 'text-transform');\r\n    if (map) value = GSUtil.textTransform(map.value, value);\r\n    return value;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update avaialble selections in another field selections.\r\n */\r\nexport class ListController {\r\n\r\n  #host;\r\n\r\n  #monitorCallback;\r\n  #changeCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#monitorCallback = me.#onMonitor.bind(me);\r\n    me.#changeCallback = me.#onDataChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (list) {\r\n      me.#host.on('blur', me.#blurCallback);\r\n      me.#host.on('change', me.#changeCallback);\r\n      me.#host.attachEvent(me.filter, 'change', me.#monitorCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('blur', me.#blurCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n    me.#host.removeEvent(me.filter, 'change', me.#monitorCallback);\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n      this.#onDataChange();\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get list() {\r\n    const me = this;\r\n    if (me.#host.list) return me.#host.list;\r\n    const list = GSAttr.get(me.#host, 'list');\r\n    return GSDOM.getByID(me.#host.owner, list);\r\n  }\r\n\r\n  get filter() {\r\n    const me = this;\r\n    const filter = GSAttr.get(me.#host, 'data-filter');\r\n    return GSDOM.getByID(me.#host.owner, filter);\r\n  }\r\n\r\n  get owner() {\r\n    return this.#host.owner;\r\n  }\r\n\r\n  get strict() {\r\n    return GSAttr.get(this.#host, 'strict', '');\r\n  }\r\n\r\n  #onBlur(e) {\r\n    if (!this.#isInList()) GSEvents.send(this.#host, 'strict', { ok: false, source: e });\r\n  }\r\n\r\n  #onDataChange(e) {\r\n    const me = this;\r\n    const own = me.owner;\r\n    let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n    let clean = false;\r\n    if (!opt) {\r\n        opt = me.list?.querySelector('option');\r\n        clean = true;\r\n    }\r\n\r\n    const obj = opt?.dataset || {};\r\n    Object.entries(obj).forEach(p => {\r\n        const val = clean ? '' : p[1];\r\n        const key = p[0];\r\n        GSAttr.set(me.#host, `data-${key}`, p[1]);\r\n        if (key === 'id' || key === 'group') return;\r\n\r\n        const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n        const els = Array.from(GSDOM.queryAll(own, filter));\r\n        els.filter(el => el.tagName !== 'OPTION')\r\n            .filter(el => el !== me)\r\n            .filter(el => GSAttr.get(el, 'list').length === 0)\r\n            .forEach(el => me.#togleEl(el, key, val))\r\n    });\r\n  }\r\n\r\n  #onMonitor(e) {\r\n    const me = this;\r\n    const list = me.list;\r\n    me.value = '';\r\n    const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n    GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n    const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n    GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n\r\n  }\r\n\r\n  #togleEl(el, key = '', value = '') {\r\n\r\n    const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n    const isMatch = value.length > 0 && data.includes(value);\r\n    const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n\r\n    if (frmel) {\r\n      GSAttr.toggle(el, 'disabled', !isMatch);\r\n    } else {\r\n      isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n    }\r\n\r\n    const form = GSDOM.closest(el, 'form');\r\n    GSDOM.formElements(form)\r\n      .forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n  }\r\n\r\n  #isInList() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (!list) return true;\r\n    if (!me.strict) return true;\r\n    if (!list.querySelector('option')) return true;\r\n    const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n    return opt != null;\r\n  }\r\n\r\n}  ","\r\nimport { notEqual, defaultConverter } from '../../lib.mjs';\r\n\r\n\r\nconst defaultPropertyDeclaration = {\r\n    attribute: true,\r\n    reflect: false,\r\n    type: String,\r\n    converter: defaultConverter,\r\n    hasChanged: notEqual,\r\n}\r\n\r\nconst attributeToPropertyMap = Symbol();\r\nconst prepare = Symbol();\r\nconst elementProperties = Symbol();\r\nconst finalize = Symbol();\r\nconst finalized = Symbol();\r\n\r\nconst prepareFn = function () {\r\n    const me = this;\r\n    if (Object.getOwnPropertySymbols(me).includes(elementProperties)) return;\r\n    const superCtor = Object.getPrototypeOf(me);\r\n    if (typeof superCtor[finalize] === 'function') superCtor[finalize]();\r\n    me[elementProperties] = new Map(superCtor[elementProperties]);\r\n}\r\n\r\nconst attributeNameForProperty = (name, options) => {\r\n    const attribute = options.attribute;\r\n    return attribute === false\r\n        ? undefined\r\n        : typeof attribute === 'string'\r\n            ? attribute\r\n            : typeof name === 'string'\r\n                ? name.toLowerCase()\r\n                : undefined;\r\n}\r\n\r\n/**\r\n * Reactivity for HTMLInputElement based on Google ltd. Lit ReactiveElement\r\n */\r\nexport class ReactiveInput extends HTMLInputElement {\r\n\r\n    // user defiend \r\n    static properties = {};\r\n    \r\n    static [finalized] = false;\r\n\r\n    #reflectingProperties = undefined;\r\n    #instanceProperties = undefined;\r\n\r\n    #controllers = undefined;\r\n    #updatePromise = undefined;\r\n    #changedProperties = undefined;\r\n    #reflectingProperty = undefined;\r\n\r\n    #hasUpdated = false;\r\n    #isUpdatePending = false;\r\n\r\n    /**\r\n     * Returns a list of attributes corresponding to the registered properties.\r\n    */\r\n    static get observedAttributes() {\r\n        Object.defineProperty(ReactiveInput.__proto__, prepare, { value: prepareFn });\r\n        const me = this;\r\n        me[finalize]();\r\n        return me[attributeToPropertyMap] && [...me[attributeToPropertyMap].keys()];\r\n    }\r\n\r\n    static addInitializer(initializer) {\r\n        const me = this;\r\n        me[prepare]();\r\n        me.initializers ??= [].push(initializer);\r\n    }\r\n\r\n    static [finalize]() {\r\n        const me = this;\r\n        //if (Object.hasOwn(me, 'finalized')) return;\r\n        if (me[finalized] === true) return;\r\n        me[finalized] = true;\r\n        me[prepare]();\r\n\r\n        if (Object.hasOwn(me, 'properties')) {\r\n            const props = me.properties;\r\n            const propKeys = [\r\n                ...Object.getOwnPropertyNames(props),\r\n                ...Object.getOwnPropertySymbols(props),\r\n            ];\r\n            for (const p of propKeys) {\r\n                me.createProperty(p, props[p]);\r\n            }\r\n        }\r\n\r\n        // Create the attribute-to-property map\r\n        me[attributeToPropertyMap] = new Map();\r\n        for (const [p, options] of me[elementProperties]) {\r\n            const attr = attributeNameForProperty(p, options);\r\n            if (attr !== undefined) {\r\n                me[attributeToPropertyMap].set(attr, p);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static createProperty(name, options) {\r\n        const me = this;\r\n        if (options.state) options.attribute = false;\r\n        me[prepare]();\r\n        me[elementProperties].set(name, options);\r\n        if (!options.noAccessor) {\r\n            const key = Symbol();\r\n            const descriptor = me.getPropertyDescriptor(name, key, options);\r\n            if (descriptor !== undefined) {\r\n                Object.defineProperty(me.prototype, name, descriptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    static getPropertyDescriptor(name, key, options) {\r\n        const { get, set } = Object.getOwnPropertyDescriptor(this.prototype, name) ?? {\r\n            get() {\r\n                return this[key];\r\n            },\r\n            set(v) {\r\n                this[key] = v;\r\n            },\r\n        }\r\n        return {\r\n            get() {\r\n                return get?.call(this);\r\n            },\r\n            set(value) {\r\n                const me = this;\r\n                const oldValue = get?.call(me);\r\n                set?.call(me, value);\r\n                me.requestUpdate(name, oldValue, options);\r\n            },\r\n            configurable: true,\r\n            enumerable: true,\r\n        }\r\n    }\r\n\r\n    static getPropertyOptions(name) {\r\n        return this[elementProperties].get(name) ?? defaultPropertyDeclaration;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initialize();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.enableUpdating(true);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        this.#attributeToProperty(name, newValue);\r\n    }\r\n\r\n    // ******************************\r\n    // PUBLIC GETTERS\r\n    // ******************************\r\n\r\n    get hasUpdated() { return this.#hasUpdated; }\r\n    get isUpdatePending() { return this.#isUpdatePending; }\r\n    get renderRoot() { return this; }\r\n\r\n    // ******************************\r\n    // PROTECTED FUNCTIONS \r\n    // ******************************\r\n\r\n    addController(controller) {\r\n        // if (!(controller instanceof ReactiveController)) throw new Error('Argument not instance of ReactiveController');\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    enableUpdating(requestedUpdate) { }\r\n\r\n    firstUpdated(changedProperties) { }\r\n\r\n    updated(changedProperties) { }\r\n\r\n    getUpdateComplete() { return this.#updatePromise; }\r\n\r\n    scheduleUpdate() { return this.performUpdate(); }\r\n\r\n    shouldUpdate(changedProperties) { return true; }\r\n\r\n    willUpdate(changedProperties) { }\r\n\r\n    update(changedProperties) {\r\n        const me = this;\r\n        // The forEach() expression will only run when when #reflectingProperties is\r\n        // defined, and it returns undefined, setting #reflectingProperties to undefined\r\n        me.#reflectingProperties &&= me.#reflectingProperties.forEach((p) => me.#propertyToAttribute(p, this[p]));\r\n        me.#markUpdated();\r\n    }\r\n\r\n    get updateComplete() {\r\n        return this.getUpdateComplete();\r\n    }\r\n\r\n    requestUpdate(name, oldValue, options) {\r\n        const me = this;\r\n        if (name !== undefined) {\r\n            options ??= (me.constructor).getPropertyOptions(name);\r\n            const hasChanged = options.hasChanged ?? notEqual;\r\n            const newValue = me[name];\r\n            if (hasChanged(newValue, oldValue)) {\r\n                me.#changeProperty(name, oldValue, options);\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (me.#isUpdatePending === false) {\r\n            me.#updatePromise = me.#enqueueUpdate();\r\n        }\r\n    }\r\n\r\n    performUpdate() {\r\n\r\n        const me = this;\r\n        if (!me.#isUpdatePending) return;\r\n\r\n        if (!me.#hasUpdated) {\r\n\r\n            // Mixin instance properties once, if they exist.\r\n            if (me.#instanceProperties) {\r\n                for (const [p, value] of me.#instanceProperties) {\r\n                    this[p] = value;\r\n                }\r\n                me.#instanceProperties = undefined;\r\n            }\r\n\r\n            const elementProps = me.constructor[elementProperties];\r\n            if (elementProps.size > 0) {\r\n                for (const [p, options] of elementProps) {\r\n                    if (\r\n                        options.wrapped === true &&\r\n                        !me.#changedProperties.has(p) &&\r\n                        me[p] !== undefined\r\n                    ) {\r\n                        me.#changeProperty(p, this[p], options);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let shouldUpdate = false;\r\n        const changedProperties = me.#changedProperties;\r\n        try {\r\n            shouldUpdate = me.shouldUpdate(changedProperties);\r\n            if (shouldUpdate) {\r\n                me.willUpdate(changedProperties);\r\n                me.#controllers?.forEach((c) => c.hostUpdate?.());\r\n                me.update(changedProperties);\r\n            } else {\r\n                me.#markUpdated();\r\n            }\r\n        } catch (e) {\r\n            shouldUpdate = false;\r\n            me.#markUpdated();\r\n            throw e;\r\n        }\r\n\r\n        if (shouldUpdate) {\r\n            me.#didUpdate(changedProperties);\r\n        }\r\n    }\r\n\r\n    // ******************************\r\n    // PRIVATE FUNCTIONS \r\n    // ******************************\r\n\r\n    #didUpdate(changedProperties) {\r\n        const me = this;\r\n        me.#controllers?.forEach((c) => c.hostUpdated?.());\r\n        if (!me.#hasUpdated) {\r\n            me.#hasUpdated = true;\r\n            me.firstUpdated(changedProperties);\r\n        }\r\n        me.updated(changedProperties);\r\n    }\r\n\r\n    #markUpdated() {\r\n        const me = this;\r\n        me.#changedProperties = new Map();\r\n        me.#isUpdatePending = false;\r\n    }\r\n\r\n    async #enqueueUpdate() {\r\n        const me = this;\r\n        me.#isUpdatePending = true;\r\n        try {\r\n            await me.#updatePromise;\r\n        } catch (e) {\r\n            Promise.reject(e);\r\n        }\r\n        const result = me.scheduleUpdate();\r\n\r\n        if (result != null) {\r\n            await result;\r\n        }\r\n        return !me.#isUpdatePending;\r\n    }\r\n\r\n    #changeProperty(name, oldValue, options) {\r\n        const me = this;\r\n        if (!me.#changedProperties.has(name)) {\r\n            me.#changedProperties.set(name, oldValue);\r\n        }\r\n\r\n        if (options.reflect === true && me.#reflectingProperty !== name) {\r\n            (me.#reflectingProperties ??= new Set()).add(name);\r\n        }\r\n    }\r\n\r\n    #attributeToProperty(name, value) {\r\n        const me = this;\r\n        const ctor = me.constructor;\r\n        const propName = (ctor[attributeToPropertyMap]).get(name);\r\n        if (propName !== undefined && me.#reflectingProperty !== propName) {\r\n            const options = ctor.getPropertyOptions(propName);\r\n            const converter =\r\n                typeof options.converter === 'function'\r\n                    ? { fromAttribute: options.converter }\r\n                    : options.converter?.fromAttribute !== undefined\r\n                        ? options.converter\r\n                        : defaultConverter;\r\n            // mark state reflecting\r\n            me.#reflectingProperty = propName;\r\n            me[propName] = converter?.fromAttribute(value, options.type);\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #propertyToAttribute(name, value) {\r\n        const me = this;\r\n        const elementProps = me.constructor[elementProperties];\r\n        const options = elementProps?.get(name);\r\n        const attr = attributeNameForProperty(name, options);\r\n        if (attr !== undefined && options.reflect === true) {\r\n            const converter =\r\n                (options.converter)?.toAttribute !==\r\n                    undefined\r\n                    ? (options.converter)\r\n                    : defaultConverter;\r\n            const attrValue = converter?.toAttribute(value, options.type);\r\n\r\n            me.#reflectingProperty = name;\r\n            if (attrValue == null) {\r\n                me.removeAttribute(attr);\r\n            } else {\r\n                me.setAttribute(attr, attrValue);\r\n            }\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #saveInstanceProperties() {\r\n        const me = this;\r\n        const instanceProperties = new Map();\r\n        const elementProps = me.constructor[elementProperties];\r\n        for (const p of elementProps.keys()) {\r\n            if (Object.hasOwn(me, p)) {\r\n                instanceProperties.set(p, me[p]);\r\n                delete me[p];\r\n            }\r\n        }\r\n        if (instanceProperties.size > 0) {\r\n            me.#instanceProperties = instanceProperties;\r\n        }\r\n    }\r\n\r\n    #initialize() {\r\n        const me = this;\r\n        me.#updatePromise = new Promise((res) => me.enableUpdating = res);\r\n        me.#changedProperties = new Map();\r\n        me.#saveInstanceProperties();\r\n        me.requestUpdate();\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n        const data = this.form?.data;\r\n        if (data) GSDOM.fromObject2Element(this, data);\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity();\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get form() {\r\n        return this.closest('gs-form');\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Find closest top element by CSS selector\r\n     * @param {String} query \r\n     * @returns {HTMLElement}\r\n     */\r\n    closest(query = '') {\r\n        return GSDOM.closest(this, query);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = { value: o };\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSData } from '../../base/GSData.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\nimport { AdoptedController } from '../../controllers/AdoptedController.mjs';\r\nimport { AttributeController } from '../../controllers/AttributeController.mjs';\r\nimport { CopySelectController } from './controllers/CopySelectController.mjs';\r\nimport { MaskController } from './controllers/MaskController.mjs';\r\nimport { PasswordController } from './controllers/PasswordController.mjs';\r\nimport { NumberController } from './controllers/NumberController.mjs';\r\nimport { TextController } from './controllers/TextController.mjs';\r\nimport { ListController } from './controllers/ListController.mjs';\r\n\r\nimport { ReactiveInput } from './ReactiveInput.mjs';\r\n\r\n/**\r\n * Extended HTMLInputElement with controllers support\r\n * adding various feature such as masked input support \r\n */\r\nexport class GSInputElement extends ReactiveInput {\r\n\r\n  static properties = {\r\n    autocopy: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    autoselect: { type: Boolean },\r\n    reveal: { type: Boolean },\r\n    mask: { reflect: true }\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n\r\n  #copyselect;\r\n  #maskController;\r\n  #passwordController;\r\n  #numberController;\r\n  #textController;\r\n  #listController;\r\n\r\n  constructor() {\r\n    super();\r\n    this.#copyselect = new CopySelectController(this);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n\r\n    super.willUpdate(changed);\r\n\r\n    if (changed.has('mask') && this.mask && this.type === 'text') {\r\n      this.placeholder = this.mask;\r\n      this.#maskController ??= new MaskController(this);\r\n      this.#maskController.initRules();\r\n    }\r\n\r\n    if (this.list) {\r\n      this.#listController ??= new ListController(this);\r\n    }\r\n\r\n    switch (this.type) {\r\n      case 'text':\r\n        this.#textController ??= new TextController(this);\r\n        break;\r\n      case 'password':\r\n        this.#passwordController ??= new PasswordController(this);\r\n        break;\r\n      case 'number':\r\n        this.#numberController ??= new NumberController(this);\r\n        break;\r\n    }\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus) this.focus();    \r\n    const data = this.form?.data;\r\n    if (data) GSDOM.fromObject2Element(this, data);\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value) {\r\n    this.#adopted ??= new AdoptedController(me);\r\n    return this.#adopted.style(id, value);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form');\r\n  }\r\n\r\n  get owner() {\r\n    const own = GSDOM.root(this);\r\n    return GSDOM.unwrap(own);\r\n  }\r\n\r\n  get raw() {\r\n    return super.value;\r\n  }\r\n\r\n  get value() {\r\n    return this.#maskController ? this.#maskController.value : super.value;\r\n  }\r\n\r\n  set value(val) {\r\n    super.value = val;\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSInputElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   */\r\n  static define(name, clazz) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, { extends: 'input' });\r\n    }\r\n  }\r\n\r\n  static {\r\n    GSInputElement.define('gs-ext-input', GSInputElement);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined, repeat } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSBreadcrumbElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n    color: { ...color },\r\n    divider: { reflect: true },\r\n    spacing: { reflect: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.spacing = 1;\r\n    me.divider = 'chevron-right';\r\n    me.#updateChildren();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#updateChildren();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<nav part=\"base\" class=\"breadcrumb\" @click=\"${me.#onClick}\" dir=\"${ifDefined(me.direction)}\"><slot>\r\n      ${repeat(me.data || [], (item) => item, (item) => html`\r\n        <gs-breadcrumb-item  \r\n        href=\"${item.href}\"\r\n        color=\"${item.color}\"\r\n        .data=${item}     \r\n        .active=${item.active}\r\n        .divider=\"${item.divider || me.divider}\"\r\n        .spacing=\"${item.spacing || me.spacing}\">\r\n          ${item.$text}\r\n        </gs-breadcrumb-item>\r\n      `)}\r\n    </slot></nav>`;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #updateChildren() {\r\n    const me = this;\r\n    me.queryAll('gs-breadcrumb-item').forEach(el => {\r\n      el.divider = me.divider;\r\n      el.spacing = me.spacing;\r\n      el.color = me.color;\r\n    });\r\n  }\r\n\r\n  #onClick(e) {\r\n    const el = e.target.closest('gs-bradcrumb-item');\r\n    el?.handle(e);\r\n  } \r\n\r\n  static {\r\n    this.define('gs-breadcrumb');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSBreadcrumbItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    color: { ...color },\r\n    data: { state: true, type: Object },\r\n    active: { reflect: true, type: Boolean },\r\n    divider: { state: true, type: Boolean },\r\n    spacing: { state: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div part=\"base\" class=\"breadcrumb-item ${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <span part=\"prefix\"><slot name=\"prefix\"></slot></span>        \r\n        ${me.#label}\r\n        <span part=\"suffix\"><slot name=\"suffix\"></slot></span>\r\n        <span part=\"separator\"><slot name=\"separator\">${me.#separator}</slot></span>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #label() {\r\n    const me = this;\r\n    if (me.active) return html`<slot></slot>`;\r\n    me.data.url = me.data.url || me.href;\r\n    me.data.part = 'label';\r\n    return GSLinklement.generate(me.data, {})\r\n  }\r\n\r\n  get #separator() {\r\n    const me = this;\r\n    return me.nextElementSibling && me.divider ? html`<gs-icon size=\"7\" color=\"${me.color}\" css=\"mx-${me.spacing}\" name=\"${me.divider}\"></gs-icon>` : '';\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.query('a', true), e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-breadcrumb-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport { classMap, createRef, ref, css, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSAttachment } from './Attachment.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSFileBoxElement extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    static properties = {\r\n        cssList: { attribute: 'css-list' },\r\n        cssLabel: { attribute: 'css-label' },\r\n        cssInput: { attribute: 'css-input' },\r\n\r\n        multiple: { reflect: true, type: Boolean },\r\n        directory: { reflect: true, type: Boolean },\r\n        name: {},\r\n        title: {},\r\n        accept: {},\r\n        filter: {},\r\n    }\r\n\r\n    #listEl = createRef();\r\n    #fileEl = createRef();\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = GSFileBoxElement.CSS;\r\n        this.cssInput = 'd-none';\r\n        this.multiple = true;\r\n        this.title = GSFileBoxElement.TITLE;\r\n        this.filter = '^image\\/(gif|png|jpeg)$'\r\n        this.directory = false;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div part=\"border\" class=\"${classMap(me.renderClass())}\"\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @click=\"${me.#onClick}\"\r\n            @dragenter=\"${me.#onDragenter}\"\r\n            @dragover=\"${me.#onDragenter}\"\r\n            @dragleave=\"${me.#onDragleave}\"\r\n            @drop=\"${me.#onDrop}\"\r\n            @paste=\"${me.#onPaste}\"\r\n            @change=\"${me.#onChange}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.translate(me.title)}</label>\r\n            <input ${ref(me.#fileEl)}  part=\"input\" \r\n                type=\"file\" accept=\"${me.accept}\" \r\n                class=\"${me.cssInput}\" \r\n                name=\"${me.name}\" \r\n                id=\"${me.name}\" \r\n                ${me.multiple ? \"multiple\" : \"\"} \r\n                ${me.directory ? \"directory webkitdirectory\" : \"\"}>\r\n            <pre ${ref(me.#listEl)} part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    get listEl() {\r\n        return this.#listEl.value;\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.#fileEl.value;\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = me.emit('accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            me.emit('accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static styles = css`\r\n        .dash {\r\n            border-style: var(--gs-fieldbox-border, dashed) !important;\r\n            border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n        }\r\n        input[type=file] {\r\n            color : var(--gs-fieldbox-color, transparent);\r\n        } \r\n        input[type=file]::file-selector-button {}             \r\n        input[type=file]::file-selector-button:hover {}`;\r\n\r\n    static {\r\n        this.define('gs-filebox');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/TimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSTimeFormat extends GSElement {\r\n\r\n    static properties = {\r\n        interval: {reflect:true, type:Number},\r\n        locale: {reflect:true},\r\n    }\r\n\r\n    #id = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.interval = 1;\r\n        this.locale = GSUtil.locale;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const date = new Date();\r\n        return date.toLocaleTimeString(this.locale);\r\n    }    \r\n\r\n    start() {\r\n        const me = this;\r\n        if (me.interval >0 && me.#id === 0) {\r\n            me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n        } else {\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n        this.#id = 0;\r\n    }\r\n    \r\n    #update() {\r\n       requestAnimationFrame(() => this.requestUpdate());\r\n    }\r\n\r\n    static {\r\n        this.define('gs-time-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/DateFormat\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDate } from '../../base/GSDate.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSDateFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        format: {},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.locale = navigator.locale;\r\n        this.value = new Date();\r\n    }\r\n\r\n    renderUI() {\r\n        return this.result;\r\n    }    \r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.date;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get date() {\r\n        const me = this;\r\n        const o = Date.parse(me.value || new Date());\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n\r\n    static {\r\n        this.define('gs-date-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/YearFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSYearFormat extends GSElement {\r\n\r\n    static properties = {\r\n        offset: {type :Number},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n    }\r\n\r\n    renderUI() {\r\n        return this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        this.define('gs-year-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/CurrencyFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSCurrencyFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        currency: {},\r\n    }\r\n\r\n    renderUI() {\r\n        return this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-currency-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCacheStyles } from \"../../base/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepElement class\r\n * @module components/steps/GSStepElement\r\n */\r\n\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepElement extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-primary';\r\n    static COMPLETED = 'text-bg-secondary';\r\n\r\n    static ICON_CSS = 'border rounded-circle fs-1';\r\n    static TITLE_CSS = 'mb-0 fs-6 mt-3 fw-bold';\r\n\r\n    static properties = {\r\n        title: {},\r\n        icon: {},\r\n        color: {},\r\n        iconCSS: { attribute: 'icon-css' },\r\n        titleCSS: { attribute: 'title-css' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const clazz = GSStepElement;\r\n        this.icon = clazz.INACTIVE;\r\n        this.iconCSS = clazz.ICON_CSS;\r\n        this.titleCSS = clazz.TITLE_CSS;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"step d-block w-100 text-center mb-4\"  dir=\"${ifDefined(me.direction)}\">\r\n            <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color || GSStepElement.INACTIVE}\">\r\n                    ${me.#renderIcon()}\r\n                </div>\r\n            </div>\r\n            <div class=\"step-title ${me.titleCSS}\">${me.translate(me.title)}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    #renderIcon() {\r\n        return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-step');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepsElement class\r\n * @module components/steps/GSStepsElement\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSStepStyle } from \"./StepStyle.mjs\";\r\nimport GSStepElement from './Step.mjs';\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepsElement extends GSElement {\r\n\r\n    static CSS = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n\r\n    #index = -1;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldUpdate(changedProperties) { \r\n        return this.steps.length > 0;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\"><slot></slot></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        return this.mapCSS(GSStepsElement.CSS, super.renderClass());\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get length() {\r\n        return this.steps.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length - 1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isLast) return false;\r\n        if (me.#index > - 1) me.current.color = GSStepElement.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStepElement.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStepElement.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStepElement.SELECTED;\r\n        });\r\n    }\r\n\r\n    static {\r\n        GSStepStyle.style;\r\n        this.define('gs-steps', GSStepsElement);\r\n    }\r\n\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSAttr } from '../../base/GSAttr.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\n\r\nexport class GSNotificationElement extends GSElement {\r\n\r\n    static TOP_START = \"position-fixed top-0 start-0\";\r\n    static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n    static TOP_END = \"position-fixed top-0 end-0\";\r\n\r\n    static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n    static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n    static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n    \r\n    static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n    static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n    static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n    static DEFAULT = GSNotificationElement.BOTTOM_END;\r\n\r\n    static properties = {\r\n        position: { reflect: true },\r\n        native: { reflect: true, type: Boolean }\r\n    };\r\n\r\n    #list = new Set();\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = 'p-3';\r\n        this.position = GSNotificationElement.DEFAULT;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n            class=\"toast-container z-10k ${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        return me.mapCSS(me.#positionCSS, super.renderClass());\r\n    }    \r\n\r\n    get #positionCSS() {\r\n        const clazz = GSNotificationElement;\r\n        const val = this.position || clazz.DEFAULT;\r\n        return val.indexOf('_') > 0 && clazz[val] ? clazz[val] : val;\r\n    }\r\n\r\n    clear() {\r\n        this.queryAll('gs-toast').forEach(el => el.dismiss());\r\n    }\r\n\r\n    info(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n    }\r\n\r\n    success(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n    }\r\n\r\n    warn(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n    }\r\n\r\n    danger(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n    }\r\n\r\n    primary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n    }\r\n\r\n    secondary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n    }\r\n\r\n    dark(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n    }\r\n\r\n    light(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n    }\r\n\r\n    /**\r\n     * Main function to show notification. \r\n     * It has support for Bootstrap based and web based notifications.\r\n     * \r\n     * @async\r\n     * @param {String} title Notification title\r\n     * @param {String} message Notification message\r\n     * @param {String} css CSS styling (web only)\r\n     * @param {Boolean} closable Can user close it (web only)\r\n     * @param {Number} timeout Timeout after which to close notification  (default 2 sec)\r\n     * @param {Number} delay Timeout after which to show notification (default 1 sec)\r\n     * @param {Object} options Options for native Notification\r\n     * @returns {Promise<Notification|GSToast>}\r\n     */\r\n    async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n        if (!message) return;\r\n        const me = this;\r\n        if (me.native) {\r\n            let sts = await GSNotificationElement.requestPermission();\r\n            if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n            if (sts) return sts;\r\n        }\r\n        return me.#showWeb(title, message, css, closable, timeout, delay);\r\n    }\r\n\r\n    #showWeb(title, message, css, closable, timeout, delay) {\r\n        const me = this;\r\n        const tpl = `<gs-toast css=\"${css}\"  opened ${closable ? 'closable' : ''} timeout=\"${timeout}\"  delay=\"${delay}\" message=\"${message}\" title=\"${title}\" locale=\"${me.locale}\" ></gs-toast>`;\r\n        const el = GSDOM.parse(tpl, true);\r\n        requestAnimationFrame(async () => {\r\n            await me.#delay(delay);\r\n            const toast = me.#dialogToast;\r\n            if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n            toast.appendChild(el);\r\n        });\r\n        return el;\r\n    }\r\n\r\n    async #showNative(title, message, timeout, delay, options = {}) {\r\n        const me = this;\r\n        await me.#delay(delay);\r\n        options.body = options.body || message;\r\n        const notification = new Notification(title, options);\r\n        me.#list.add(notification);\r\n        const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n        notification.addEventListener('close', callback);\r\n        if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n        return notification;\r\n    }\r\n\r\n    get #dialogToast() {\r\n        const dlg = customElements.get('gs-dialog')?.top;\r\n        return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n    }\r\n\r\n    async #delay(delay = 0) {\r\n        if (GSUtil.isNumber(delay) && delay > 0) await GSUtil.timeout(delay * 1000);\r\n    }\r\n\r\n    #clearNative() {\r\n        const me = this;\r\n        me.notification.close();\r\n        me.owner.#list.delete(me.notification);\r\n        if (me.notification.iid) clearTimeout(me.notification.iid);\r\n    }\r\n\r\n    /**\r\n     * Clear all triggered notifications\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n        me.#list.forEach(nn => nn.close());\r\n        me.#list.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is supported\r\n     * @returns {Boolean} \r\n     */\r\n    static get isNativeSupported() {\r\n        return \"Notification\" in self;\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is allowed\r\n     * @returns {Boolean} \r\n     */\r\n    static get isGranted() {\r\n        return Notification.permission === \"granted\";\r\n    }\r\n\r\n    /**\r\n     * Request useage for browser native notification\r\n     * \r\n     * @async\r\n     * @returns {Promise<boolean>} Return granted status\r\n     */\r\n    static async requestPermission() {\r\n        const clazz = GSNotificationElement;\r\n        if (!clazz.isNativeSupported) return false;\r\n        if (!clazz.isGranted) await Notification.requestPermission();\r\n        return clazz.isGranted;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-notification');\r\n    }\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNotificationElement } from './Notification.mjs';\r\n\r\nexport class GSToastElement extends GSElement {\r\n\r\n    static properties = {\r\n        closable: { reflect: true, type: Boolean },\r\n        opened: { reflect: true, type: Boolean },\r\n        message: { reflect: true },\r\n        title: { reflect: true },\r\n        delay: { reflect: true, type: Number },\r\n        timeout: { reflect: true, type: Number }\r\n    }\r\n\r\n    #pending = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.timeout = 2;\r\n        me.delay = 2;\r\n        me.auto = true; \r\n    }\r\n\r\n    shouldUpdate(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.delay > 0 && me.opened && visibilityChange) {\r\n            me.#pending = true;\r\n            me.#pendingUpdate();\r\n        }\r\n        return me.#validParent && (!me.#pending);\r\n    }\r\n\r\n    #isVisibilityChanged(changedProperties) {\r\n        return changedProperties.has('opened');\r\n    }\r\n\r\n    async #pendingUpdate() {\r\n        const me = this;\r\n        await GSUtil.timeout(me.delay * 1000);\r\n        me.#pending = false;\r\n        me.requestUpdate();\r\n    }\r\n\r\n    async updated(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.timeout > 0 && me.opened) {\r\n            await GSUtil.timeout(me.timeout * 1000);\r\n            me.opened = false;\r\n        } else if (visibilityChange && !me.opened) { \r\n            me.remove();\r\n        };\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return me.title ? me.#renderWithHeader() : me.#renderSimple();\r\n    }\r\n\r\n    #renderWithHeader() {\r\n        const me = this;\r\n        return html`\r\n        <div dir=\"${ifDefined(me.direction)}\"\r\n            class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n            <div class=\"toast-header\">\r\n                ${me.translate(me.title)}\r\n                <slot name=\"header\"></slot>\r\n                ${me.closable ? me.#button : ''}\r\n            </div>\r\n            <div class=\"toast-body\">\r\n                ${me.translate(me.message)}\r\n                <slot name=\"body\"></slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    #renderSimple() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.translate(me.message)}\r\n              <slot name=\"body\"></slot>\r\n              </div>\r\n              ${me.closable ? me.#button : ''}\r\n          </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': me.opened,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    dismiss() {\r\n        this.opened = false;\r\n    }\r\n\r\n    get #button() {\r\n        const me = this;\r\n        return html`<button type=\"button\" class=\"btn-close me-2 m-auto\" @click=\"${me.dismiss}\"></button>`;\r\n    }\r\n\r\n    get #validParent() {\r\n        const isToast = GSDOM.hasClass(this.parentElement, 'toast-container');\r\n        const isNotify = this.parentElement instanceof GSNotificationElement;\r\n        return isToast || isNotify;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-toast');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller managing data tree navigation.\r\n * Controller is added to every gs-tree-node and \r\n * reacts on Tree node changes to update UI\r\n */\r\nexport class AbstractTreeController {\r\n\r\n    #host;\r\n    #node;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        host.addController(me);\r\n    }\r\n    \r\n    hostConnected() {\r\n        const me = this;\r\n        me.#node = me.#host.node;\r\n        me.#addNodeController(me);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        const me = this;\r\n        me.#removeNodeController(me);\r\n        me.#host.removeController(me);\r\n    }\r\n\r\n    // before rendering\r\n    hostUpdate() {\r\n        const me = this;\r\n        const oldNode = me.#node;\r\n        me.#node = me.#host.node;\r\n        if (oldNode != me.#node) {\r\n            me.#removeNodeController(me);\r\n            me.#addNodeController(me);\r\n        }\r\n    }\r\n\r\n    // link Tree node callbacks with controller and component\r\n    #addNodeController(controller) {\r\n        this.#host.node?.addController?.(controller);\r\n    }\r\n\r\n    // unlink Tree node callbacks with controller and component\r\n    #removeNodeController(controller) {\r\n        this.#node?.removeController?.(controller);\r\n    }\r\n\r\n    host(node) {\r\n        return node[Symbol.for('gs-element')] || this.#host;\r\n    }\r\n\r\n    match(node) {\r\n        const host = this.host(node);\r\n        return host?.node === node;\r\n    }\r\n\r\n    get store() {\r\n        return this.#host.dataController?.store;\r\n    }\r\n\r\n    requestUpdate(node) {\r\n        if (this.match(node)) this.host(node).requestUpdate();\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { AbstractTreeController } from './AbstractTreeController.mjs';\r\n\r\n/**\r\n * Controller managing data TreeNode callbacks to reflect UI.\r\n */\r\nexport class TreeController extends AbstractTreeController {\r\n\r\n    constructor(host) {\r\n        super(host);\r\n    }\r\n\r\n    #toggleState(node, state = false) {\r\n        const el = this.host(node);\r\n        if (el) el.loading = state;\r\n    }\r\n\r\n    // Tree controller callbacks\r\n    onLoad(node) {\r\n        this.#toggleState(node, true);\r\n    }\r\n\r\n    onRefresh(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onAppend(node, addedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onInsert(node, insertedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onExpand(node) {\r\n        const store = this.store;\r\n        if (store) {\r\n            store.onExpand(node);\r\n        } else {\r\n            this.requestUpdate(node);\r\n        }\r\n    }\r\n\r\n    onCollapse(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onFocusChanged(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onSelectionChanged(node, selectedNode) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onRemove(node) {\r\n        if (this.match(node)) this.host(node).remove();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../../lib.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSTreeItemElement extends GSElement {\r\n\r\n  /*\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n    */\r\n\r\n  static properties = {\r\n    loading: { state: true },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('node')) this.node[Symbol.for('gs-element')] = this;\r\n  }\r\n\r\n  updated() {\r\n    if (this.focused) this.query('a')?.focus();\r\n    this.dataset.visible = this.visible;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const opt = me.value || {};\r\n    opt.tooltip = me.translate(opt.tooltip)\r\n    opt.title = me.translate(opt.title)\r\n    const before = me.loading ? me.#renderSpinner(node.level) : me.#renderIcon(node.level);\r\n    return GSLinklement.generate(opt, me.renderClass(), before);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const opt = {\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      'user-select-none  ': true,\r\n      'border-0': me.#border ? false : true,\r\n      'gs-hide': !me.visible\r\n    };\r\n    return me.mapCSS(me.#cssFocus, me.mapCSS(me.#cssSelected, opt, me.selected && !me.multiselect), me.focused);\r\n  }\r\n\r\n  /**\r\n   * Toggle folder\r\n   */\r\n  toggle() {\r\n    this.opened ? this.close() : this.open();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open() {\r\n    this.#status(true);\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   */\r\n  close() {\r\n    this.#status(false);\r\n  }\r\n\r\n  focus(val = true) {\r\n    if (val) super.focus();\r\n    this.focused = val == true;\r\n  }\r\n\r\n  select(val = true) {\r\n    this.selected = val == true;\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.querySelector('a'), e);\r\n  }\r\n\r\n  get isLeaf() {\r\n    return this.node?.isLeaf;\r\n  }\r\n\r\n  get isFolder() {\r\n    return !this.isLeaf;\r\n  }\r\n\r\n  get key() {\r\n    return this.node?.key;\r\n  }\r\n\r\n  get value() {\r\n    return this.node?.value || {};\r\n  }\r\n\r\n  get level() {\r\n    return this.node?.level || -1;\r\n  }\r\n\r\n  get focused() {\r\n    return this.node?.focused;\r\n  }\r\n\r\n  get visible() {\r\n    const parent = this.parent;\r\n    return parent?.opened || parent?.level === -1;\r\n  }\r\n\r\n  get parent() {\r\n    return this.node?.parent;\r\n  }\r\n\r\n  get parentItem() {\r\n    const item = this.parent?.[Symbol.for('gs-element')];\r\n    return item instanceof GSTreeItemElement ? item : undefined;\r\n  }\r\n\r\n  set focused(val) {\r\n    val = val === true;\r\n    this.node.focused = val;\r\n  }\r\n\r\n  get selected() {\r\n    return this.node?.selected;\r\n  }\r\n\r\n  set selected(val) {\r\n    val = val === true;\r\n    const me = this;\r\n    if (me.isFolder && me.owner.leaf) val = false;\r\n\r\n    if (me.multiselect) {\r\n      if (val) {\r\n        me.node.selectAll();\r\n      } else {\r\n        me.node.deselectAll();\r\n      }\r\n    } else {\r\n      me.node.selected = val;\r\n    }\r\n  }\r\n\r\n  get opened() {\r\n    return this.node?.opened;\r\n  }\r\n\r\n  set opened(val) {\r\n    this.#status(val === true);\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tree');\r\n  }\r\n\r\n  get multiselect() {\r\n    return this.owner.multiselect;\r\n  }\r\n\r\n  get #cssFocus() { return this.owner.cssFocus || 'focus-ring'; }\r\n  get #cssSelected() { return this.owner.cssSelected || 'active'; }\r\n  get #cssCheck() { return this.owner.cssCheck || ''; }\r\n  get #checkColor() { return this.owner.checkColor || 'secondary'; }\r\n  get #checkColorSelected() { return this.owner.checkColorSelected || 'primary'; }\r\n\r\n  get #border() {\r\n    return this.value?.border === true || this.owner.border === true;\r\n  }\r\n\r\n  get #icon() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const data = me.value;\r\n    const ui = me.owner;\r\n    let itemIco = data.icon || ui.itemIcon;\r\n    if (node.isFolder) itemIco = node.opened ? (data.openIcon || ui.openIcon) : (data.closeIcon || ui.closeIcon);\r\n    return itemIco;\r\n  }\r\n\r\n  #renderIndent(level) {\r\n    return html`<gs-indent size=\"${level}\"></gs-indent>`;\r\n  }\r\n\r\n  #renderSpinner(level) {\r\n    return html`${this.#renderIndent(level)}<gs-spinner small></gs-spinner>`;\r\n  }\r\n\r\n  #renderIcon(level) {\r\n    return html`${this.#renderIndent(level)}${this.#renderMulti()}<gs-icon size=\"5\" name=\"${this.#icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderMulti() {\r\n    const me = this;\r\n    if (!me.multiselect) return '';\r\n    const color = me.selected ? me.#checkColorSelected : me.#checkColor;\r\n    const icon = me.node.isPartialySelected ? 'dash-square-fill' : me.selected ? 'check-square-fill' : 'square';\r\n    return html`<gs-icon size=\"6\" data-type=\"state\" \r\n                css=\"me-1 text-${color} ${me.#cssCheck}\"\r\n                name=\"${icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #status(val = false) {\r\n    const me = this;\r\n    if (me.node?.isFolder) {\r\n      me.node.opened = val;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, css, createRef, ref, repeat, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { TreeController } from './controllers/TreeController.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSTreeElement extends GSElement {\r\n\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n\r\n  static shared = {\r\n    itemIcon: { attribute: 'icon-item' },\r\n    closeIcon: { attribute: 'icon-close' },\r\n    openIcon: { attribute: 'icon-open' },\r\n    cssCheck: { attribute: 'css-check' },\r\n    cssFocus: { attribute: 'css-focus' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    checkColor: { attribute: 'check-color', ...color },\r\n    checkColorSelected: { attribute: 'check-color-selected', ...color },\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode },\r\n    border: { type: Boolean, reflect: true },\r\n    guide: { type: Boolean, reflect: true },\r\n    leaf: { type: Boolean, reflect: true },\r\n    multiselect: { type: Boolean, reflect: true },\r\n    circular: { type: Boolean, reflect: true },\r\n    ...GSTreeElement.shared\r\n  }\r\n\r\n  // GS-ITEM attributes mapping\r\n  static options = {\r\n    ...GSTreeElement.shared,\r\n    css: {},\r\n    icon: {},\r\n    color: {},\r\n    title: {},\r\n    tooltip: {},\r\n    opened: { type: Boolean },\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  #queued = false;\r\n  #listRef = createRef();\r\n\r\n  #controller = null;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.leaf = false;\r\n    me.multiselect = false;\r\n    me.data = GSDOM.toJson(me, true, true).items;\r\n    me.node = new TreeNode(null, { '#tagName': this.tagName }, null, -1);\r\n    me.itemIcon = 'file-earmark';\r\n    me.closeIcon = 'folder'; // caret-right; chevron-right\r\n    me.openIcon = 'folder2-open'; // caret-down; chevron-down\r\n    me.cssSelected = 'active'; // fw-bold\r\n    me.cssFocus = 'focus-ring';\r\n    me.node[Symbol.for('gs-element')] = me;\r\n    me.#controller = new TreeController(me);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n          class=\"treeview ${classMap(me.renderClass())}\"          \r\n          @click=\"${me.#onClick}\"\r\n          @keydown=\"${me.#onKeyDown}\"\r\n          @keyup=\"${me.#onKeyUp}\">\r\n          <div class=\"list-group\" ${ref(me.#listRef)}>\r\n          ${repeat(me.node.walk(me.node, false, false), (node) => node.key, (node) => html`\r\n            <gs-tree-item .node=\"${node}\"></gs-tree-item>\r\n          `)}\r\n          </div>    \r\n        </div>`;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data') && me.data && !me.#queued) {\r\n      me.#queued = true;\r\n      queueMicrotask(() => {\r\n        me.node.clear();\r\n        me.node.fromJSON(me.data);\r\n        me.#queued = false;\r\n        me.requestUpdate();\r\n      });\r\n    }\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('multiselect') && !this.multiselect) this.node?.deselectAll();\r\n    this.node.multi = this.multiselect;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    if (data instanceof TreeNode) {\r\n      if (data.root !== this.node) this.node = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n\r\n  next(expand = false) {\r\n    const me = this;\r\n    let item = me.nextItem;\r\n    if (!item & me.circular) item = me.#first;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (expand && me.focused?.isFolder) me.focused.open();\r\n    }\r\n    return me.focused;\r\n  }\r\n\r\n  previous(collapse = false) {\r\n    const me = this;\r\n    let item = me.previousItem;\r\n    if (!item & me.circular) item = me.#last;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (item.isFolder && collapse) item.close();\r\n    }\r\n    return me.focused;\r\n\r\n  }\r\n\r\n  expandAll() {\r\n    this.node?.expandAll();\r\n  }\r\n\r\n  collapseAll() {\r\n    this.node?.collapseAll();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open(path) {\r\n    const me = this;\r\n    me.focused?.open();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   * TODO - path navigation\r\n   */\r\n  close(path) {\r\n    const me = this;\r\n    me.focused?.close();\r\n  }\r\n\r\n  clear() {\r\n    this.node?.clear();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  reload() {\r\n    this.clear();\r\n    this.dataController?.read();\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host(this.node.selectedNode());\r\n  }\r\n\r\n  get focused() {\r\n    return this.#host(this.node.focusedNode());\r\n  }\r\n\r\n  /**\r\n   * Previous visible ge-node-item\r\n   */\r\n  get previousItem() {\r\n    return this.focused?.node.find(n => n?.visible, true, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  /**\r\n   * Next visible ge-node-item\r\n   */\r\n  get nextItem() {\r\n    return this.focused?.node.find(n => n?.visible, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  get #list() {\r\n    return this.#listRef.value;\r\n  }\r\n\r\n  get #first() {\r\n    return this.#list.firstElementChild;\r\n  }\r\n\r\n  get #last() {\r\n    return this.#list.lastElementChild;\r\n  }\r\n\r\n  #host(node) {\r\n    return node?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const isIcon = e.target.closest('gs-icon')?.dataset.type === 'state';\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!el.node) return;\r\n\r\n    const me = this;\r\n\r\n    if (me.multiselect) {\r\n      if (isIcon) el.select(!el.selected);\r\n    } else {\r\n      el.select(true);\r\n    }\r\n\r\n    const expandable = (me.multiselect && !isIcon) || (!me.multiselect);\r\n    if (el.isFolder && expandable) el.toggle();\r\n\r\n    el.focus();\r\n    el.handle(e);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    const me = this;\r\n    const el = me.focused;\r\n    if (!el) return;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n        me.next();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (el.isFolder) {\r\n          if (el.opened) {\r\n            me.close();\r\n          } else {\r\n            (el.parentItem || el)?.focus();\r\n          }\r\n        } else {\r\n          me.previous();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if (el.isFolder && !el.opened) {\r\n          me.open();\r\n        } else {\r\n          me.next();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!(el?.node)) return;\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        el.handle(e);\r\n        break;\r\n      case 'Tab':\r\n        el.focus();\r\n        break;\r\n      case 'Space':\r\n        el.select(this.multiselect ? !el.selected : true);\r\n        el.focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\n\r\nexport class GSChartElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/bootstrap-lit';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        config: {},\r\n        storage: {},\r\n        height: { type: Number },\r\n        width: { type: Number },\r\n        data: { type: Array },\r\n        options: { type: Object },\r\n    }\r\n\r\n    #canvasRef = createRef();\r\n    #chart = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.height = 0;\r\n        this.width = 0;\r\n        GSChartElement.#init();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#waitInit();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    shouldUpdate(changed) {\r\n        return GSChartElement.#isChart;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#render();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        const me = this;\r\n        if (changed.has('url') || changed.has('config')) me.#render();\r\n        if (changed.has('data') || changed.has('options')) me.#renderData(me.data, me.options);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<canvas ${ref(me.#canvasRef)} \r\n                class=\"${classMap(me.renderClass())}\"\r\n                width=\"${ifDefined(me.width > 0 ? me.width : false)}\" \r\n                height=\"${ifDefined(me.height > 0 ? me.height : false)}\" >\r\n            </canvas>`;\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.#canvasRef.value;\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    refresh() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    updateChart(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const options = await GSLoader.loadSafe(me.config, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.url, 'GET', null, true, []);\r\n        me.data = data;\r\n        me.options = options;\r\n    }\r\n\r\n    #renderData(data, options) {\r\n        const me = this;\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChartElement.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => o.data = sets.length === 1 ? data : data[i] || []);\r\n\r\n        if (me.#chart) return me.updateChart(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChartElement.#Chart(ctx, opt);\r\n    }\r\n\r\n    async #waitInit() {\r\n        if (!GSChartElement.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        this.requestUpdate();\r\n    }\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    static async #init() {\r\n        const me = GSChartElement;\r\n        if (me.URL_LIB === false) return;\r\n        if (me.#isChart || me.#initializing) return;\r\n        me.#initializing = true;\r\n        try {\r\n            const origin = GSChartElement.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);\r\n            me.#Chart = Chart;\r\n            me.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            me.#initializing = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert DOM tree into a JSON structure\r\n     * \r\n     * @param {HTMLElement} obj HTML element instance to convert\r\n     * @param {string} name DOM attribute name for object key\r\n     * @param {string} value DOM attribute name for object value\r\n     * @param {string} type DOM attribute name for object type\r\n     * @returns {object}\r\n     */\r\n    static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n        if (!(el instanceof HTMLElement)) return {};\r\n\r\n        const nameV = el.getAttribute(name);\r\n        const valV = el.getAttribute(value);\r\n        const typeV = el.getAttribute(type);\r\n\r\n        let obj = null;\r\n\r\n        switch (typeV) {\r\n            case 'array':\r\n                obj = [];\r\n                break;\r\n            case 'object':\r\n                obj = {};\r\n                break;\r\n            default:\r\n                return GSChartElement.#toType(valV, typeV);\r\n        }\r\n\r\n        const childs = Array.from(el.children);\r\n        const isArray = typeV === 'array';\r\n        const isObject = typeV === 'object';\r\n\r\n        childs.forEach(el => {\r\n            const _nam = el.getAttribute(name);\r\n            if (isArray) {\r\n                obj.push(GSChart.toJson(el, name, value, type));\r\n            } else if (isObject) {\r\n                const tmp = GSChartElement.toJson(el, name, value, type);\r\n                obj[_nam] = tmp;\r\n            } else {\r\n                const _val = el.getAttribute(value);\r\n                const _typ = el.getAttribute(type);\r\n                obj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    static #toType(val, type) {\r\n        switch (type) {\r\n            case 'boolean': return val === 'true';\r\n            case 'number': return parseFloat(val);\r\n            default: return val\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-chart');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#data = data;\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append: append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSMarkdownElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        history: { type: Number },\r\n        maxHeight: { type: Number, attribute: 'max-height' },\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        this.history = 10;\r\n        this.dynamicStyle(this.#styleID);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const me = this;\r\n        await me.#initLib();\r\n        if (globalThis.showdown) {\r\n            const opt = { tasklists: true, tables: true };\r\n            me.#converter = new globalThis.showdown.Converter(opt);\r\n            super.connectedCallback();\r\n        }\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('url')) {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url);\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const height = me.maxHeight > 0 ? `${me.maxHeight}px;` : false;\r\n        const opt = { 'max-height': height }\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        return html`<div ${ref(me.#containerRef)} class=\"overflow-auto ${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [me.#styleID] : true,\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        me.#onURL(url);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n\r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n\r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });\r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n            GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n\r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list = GSDOM.queryAll(me.#container, qry);\r\n        requestAnimationFrame(() => list.forEach(el => GSDOM.toggleClass(el, css)) );\r\n    }\r\n\r\n    #handleLinks() {\r\n        const me = this;\r\n        const links = GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n            .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')))\r\n            .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n            .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/'))\r\n            .forEach(el => GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me)));\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        if (me.#cache.length === 0 ) return me.#first;\r\n        const url = me.#cache.pop();\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if (me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdownElement.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-markdown');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSMonacoElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #editor = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = '';\r\n        this.theme = 'vs-dark';\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonacoElement.#init();\r\n        super.connectedCallback();\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.#onMonacoReady();\r\n        super.firstUpdated();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        if (changed.has('theme')) me.#onTheme(me.theme);\r\n        if (changed.has('target')) me.#onTarget(me.target);\r\n        if (changed.has('url')) me.#onURL(me.url);\r\n        if (changed.has('language')) me.#onLanguage(me.language);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#containerRef)} class=\"${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        return this.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    get owner() {\r\n        return this.parentElement;\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n\r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor?.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor?.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    static #initialized;\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonacoElement.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        const url = GSMonacoElement.URL_LIB;\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${url}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${url}'};\r\n                importScripts('${url}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({\r\n                paths: { 'vs': `${GSMonacoElement.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false }\r\n            });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static async #init() {\r\n        const me = GSMonacoElement;\r\n        if (me.#initialized) return;\r\n        me.#initEnv();\r\n        await me.#initLib();\r\n        await me.#initMonaco();\r\n        me.#initialized = true;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-monaco');\r\n    }\r\n\r\n}"],"names":["GSVersion","version","build","gsstyles","GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSUtil$1","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Date","Boolean","value","toString","val","trim","toLowerCase","str","obj","replace","x","g","split","reverse","join","word","toUpperCase","slice","map","i","capitalize","constructor","o","Array","isArray","isBool","isDate","isNumber","isString","min","max","Math","match","dft","locale","sep","numberSeparator","extractNumber","replaceAll","url","test","startsWith","endsWith","pattern","charset","floor","random","length","navigator","language","languages","flags","RegExp","isStringEmpty","undefined","Intl","NumberFormat","format","DateTimeFormat","string","isNull","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","separator","filter","capitalizeAll","tpl","params","names","keys","vals","values","Function","text","textArea","document","createElement","innerHTML","isStringNonEmpty","window","forEach","a","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","result","permissions","query","state","clipboard","writeText","readText","GSFunction$1","GSFunction","isFunction","includes","own","isFunctionDefined","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","from","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSID","prefx","next","s","l","h","charCodeAt","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","attributes","host","opt","recursive","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","children","proxify","safe","unsafe","dflt","default","multi","hasAttribute","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","first","getDay","mondayFirst","isMondayFirst","days","repeat","push","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","d","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","m","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","k","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Locale","weekInfo","firstDay","charAt","toLocaleString","size","isLowercase","hour","hour12","pop","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","getDateFormat","regex","getFormattedDateRegex","parseFormattedDate","groups","y","Y","valueOf","GSData","currency","extract","key","Set","b","every","index","toSorted","compareArrays","second","arr","indexOf","list","it","cfg","toType","rule","toRegex","childElementCount","querySelector","fmt","style","fields","limit","sts","rec","filterRecord","isPrimitive","filterSimple","filterComplex","filterValue","primitive","found","flt","toCheck","matchDate","matchNumber","op","toLocaleLowerCase","local","toLocaleDateString","iso","toISOString","operator","sort","sortPair","ord","idx","col","v1","v2","compare","order","compareNum","compareString","compareBool","s1","s2","localeCompare","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","partial","r","readFromProperty","readFromObject","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","wrap","appendChild","link","slot","isText","tagName","FORMEL","shadow","queryAll","HTMLButtonElement","hasClass","ownClazz","inheritance","pel","HTMLSlotElement","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","parentAll","childAll","child","parentElement","offsetParent","c","ShadowRoot","HTMLBodyElement","root","getByID","documentElement","walk","qry","levels","proxy","res","receiver","sanitize","sanitizer","setHTML","Document","textContent","requestAnimationFrame","toggleClass","contains","unwrap","querySelectorAll","defaults","valueAsNumber","selectedOptions","checked","defaultValue","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","fromValue","plain","innerText","props","allProperties","getAsNum","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","location","hash","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","CLEANUP1","whiteList","asState","isAllowed","toValidationError","allowElement","allowTag","fetch","ok","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","properties","mergeObjects","template","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","detail","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","delete","removeListener","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","for","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","rid","waitAnimationFrame","onResize","attach","GSAbortController","AbortController","super","abort","clearInterval","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","isFunctions","getFilter","exec","create","GSDynamicStyle","deleteRule","getRule","setRule","sync","insertRule","updateRule","isImportant","setProperty","source","dynamicStyleSheetByID","dynamicStyleSheet","gsClass","dynamicRule","dynamicRuleByID","dynamicStyle","assign","dynamicStyleByID","GSCacheStyles","store","dynamic","styles","adopt","adoptedId","GSAdoptedEngine","now","preload","timerID","setInterval","sheets","adoptable","adoptSheet","update","scheduled","sorted","ID","cssText","monitorAttributes","ownerNode","adoptStyle","disconnect","mutationList","onAttributeChange","attributeFilter","attributeOldValue","HTMLLinkElement","rel","as","HTMLStyleElement","then","adoptLink","registerFilter","onMonitorFilter","onMonitorConnect","onMonitorDisconnect","init","GSEnvironment","isMobile","userAgentData","mobile","userAgent","isDesktop","isWebkit","protocol","strVal","brands","brand","strAgt","isEdge","isDevice","platform","screen","otype","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","ps","p","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSItem","autofocus","validate","parentComponent","GSElement","tags","collect","definition","GSLoader","GS_TEMPLATE_URL","origin","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","UNIQUE","searchParams","append","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GS_LOCALIZATION_LANGUAGE","lang","GSLocalization","GSLocalizationImpl","queue","queued","GS_LOCALIZATION_URL","translate","deft","getLanguage","texthash","reset","promises","loadWait","sequential","Pragma","isDefault","hk","details","GSPopper","asRect","sx","scrollX","sy","scrollY","top","bottom","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","arrow","pos","fromPlacement","isPlacementValid","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","aopt","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","applyDynamicStyle","GSQueryCSS","property","object","GSQuery","instance","GSTemplateCache","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTheme","switch","theme","STORAGE","htmlEl","bsTheme","matchMedia","q","URLSearchParams","onTheme","settings","getSystemDefaultTheme","darkMode","lightMode","setup","GSAttributeHandler","anchor","call","inject","swap","trigger","calls","toggles","triggers","handle","targets","handleTarget","handleBinding","handleAction","handleSwap","handleInject","handleAttribute","handleProperty","handleToggle","handleTrigger","handleCall","handleExec","handleTemplate","field","form","isForm","HTMLFormElement","isField","isFormElement","toObject","isAttributeJSON","jsonToAttr","toggleAttribute","isPropertyJSON","toggleProperty","tout","symbol","toHTML","applyContent","applyTemplate","clone","insertAdjacent","deattach","DEFINITION","override","Stack","item","unshift","peek","isEmpty","Queue","enqueue","dequeue","BinaryTreeNode","isLeaf","hasChildren","isRoot","BinaryTree","inOrderTraversal","postOrderTraversal","preOrderTraversal","insert","parentNodeKey","canInsertLeft","canInsertRight","find","Node","previous","release","toJSON","DoublyLinkedList","tail","previousNode","insertAt","splice","insertFirst","insertLast","getAt","removeAt","acc","toArray","iterator","isInvalid","isInvalidIndex","isInteger","Tree","folder","leaf","up","levelID","nodeID","isFolder","hasMore","firstChild","lastChild","down","previousSibling","inclusive","flat","iterate","filtered","Je","newOne","findByKey","flatten","fromJSON","raw","hasParent","GSReadWriteRegistryImpl","handlers","INTERNAL","addHandler","removeHandler","getHandler","newHandler","enabled","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","processors","enable","addProcessor","processor","removeProcessor","disable","isRegistered","notify","onRead","postRead","onWrite","postWrite","addSelected","asArray","SELECT","removeSelected","clearSelected","getSelected","isSelected","selected","GSReadWrite","reader","writer","mode","skip","TYPE","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCachedReadWrite","reformat","records","postFilter","sortData","filterData","search","read","TreeNode","opened","focused","focusedNode","selectedNode","controllers","select","focus","open","addController","removeController","visible","expand","collapse","changed","onFocusChanged","onSelectionChanged","isPartialySelected","selectAll","deselectAll","selectionFlag","onSelectAll","onDeselectAll","selectedNodes","refresh","onRefresh","loading","onLoad","expandAll","collapseAll","expanded","collapsed","onExpand","onCollapse","onAppend","onInsert","GSTreeReader","litUrl","GS_LIT_URL","litModule","ReactiveController","ReactiveElement","AsyncDirective","AsyncReplaceDirective","CSSResult","Directive","LitElement","PartType","TemplateResultType","UnsafeHTMLDirective","UntilDirective","_$LE","_$LH","adoptStyles","asyncAppend","asyncReplace","choose","classMap","clearPart","createRef","defaultConverter","directive","getCommittedValue","getCompatibleStyle","getDirectiveClass","guard","ifDefined","insertPart","isCompiledTemplateResult","isDirectiveResult","isServer","isSingleExpression","isTemplateResult","keyed","literal","live","noChange","notEqual","nothing","range","ref","removePart","render","setChildPartValue","setCommittedValue","staticHtml","staticSvg","styleMap","supportsAdoptingStyleSheets","svg","templateContent","unsafeCSS","unsafeHTML","unsafeSVG","unsafeStatic","until","when","withStatic","gsAction","gsAnchor","gsAttribute","gsCall","gsExec","gsInject","gsProperty","gsSwap","gsTarget","gsTemplate","gsToggle","gsTrigger","gsValue","DatasetDirective","part","srcset","DOMStringMap","remap","hasOwn","descriptors","getOwnPropertyDescriptors","listProperties","listGetters","getPrototypeOf","literalTemplate","listGettable","cssMap","CssMapDirective","partInfo","ATTRIBUTE","strings","classInfo","_previousClasses","_staticClasses","notEmpty","newVal","oldVal","numGT0","numGE0","numLT0","numLE0","ButtonTypes","buttonType","hasChanged","is","ColorTypes","color","EnvironmentTypes","environment","InputTypes","inputType","NavTypes","nav","OrientationTypes","PlacementTypes","PositionTypes","ProtocolTypes","SizeTypes","normal","medium","small","large","big","stringArrayConverter","fromAttribute","toAttribute","AdoptedController","hostConnected","hostDisconnected","isGlobal","rules","removeRule","renderRoot","onAdopted","AttributeController","eventName","onNotify","isFormEl","ContentController","refs","removeContent","hostUpdated","isSelf","contentRef","options","renderOptions","renderBefore","previousElementSibling","keep","DataController","readCallback","writeCallback","errorCallback","selectCallback","onSelect","write","storeID","firstPage","page","lastPage","nextPage","prevPage","storage","requestUpdate","onDataRead","onDataWrite","onDataError","ElementMoveController","attached","cursorX","cursorY","mouseUpCallback","mouseDownCallback","mouseMoveCallback","onMouseUp","onMouseDown","onMouseMove","attachEvent","removeEvent","onStartMove","onEndMove","onCursorRight","onCursorLeft","onCursorUp","onCursorDown","LocalizationController","hostUpdate","updateLanguage","updateLanguageExt","langauge","onLanguage","OrientationController","hosts","onOrientation","TemplateController","lastRef","templateRef","schedule","templateInjected","isTplEl","cacheable","tasks","task","process","finally","ThemeController","updateTheme","updateThemeExt","SlotController","onSlotChanged","assignedElements","onSlotInjected","rtl","reflect","hide","rounded","bordered","onready","os","browser","adopted","uiHandler","localization","dataController","slotController","themes","attributeChangedCallback","oldValue","newValue","connectedCallback","isBindable","binded","disconnectedCallback","deattachListeners","createRenderRoot","firstUpdated","willUpdate","relink","isAllowRender","renderUI","renderTemplate","renderClass","border","mapCSS","flag","waitEvent","direction","isFocused","isValidEnvironment","isValidBrowser","isValidOS","isValidProtocol","isValidOrientation","isGenerated","definitions","elementStyles","cssRule","setCSSProperty","ElementNavigationController","circular","multiple","onKeyUp","onClick","onFocusIn","onFocusOut","lastElementChild","blur","onSelected","onDeselected","onFocused","isNavigable","composedPath","GroupController","busEvent","busCallback","onBusEvent","GSAccordionElement","autoclose","cssItem","cssHeader","cssBody","renderItems","close","message","isItemCloser","GSAccordionItemElement","shouldUpdate","changedProperties","component","GSAlertElement","closed","closable","pause","interval","handleBillboard","updated","show","isBillboard","button","billboard","GSButtonElement","clickCss","hoverCss","toggleColor","outline","toggling","icon","tooltip","refEl","refIco","onMouseOver","onMouseOut","iconEl","animate","isReset","isSubmit","submit","hover","isReest","iconHtml","renderIcon","GSCalendarElement","arrovPrev","arrowNext","cssDays","cssToday","cssWeeks","cssMonth","cssYear","cssNav","cssSelected","minYear","maxYear","arrowPrev","previousMonth","nextMonth","previousYear","nextYear","formatted","updateTarget","week","dayList","months","monthsHTML","yearHTML","onKey","onDay","daysHTML","tgt","HTMLInputElement","valueAsDate","isToday","today","c1","c2","current","monthList","onMonth","onYear","selectedIndex","GSCardElement","imageStyle","overlay","align","image","subtitle","footer","header","colorText","colorBack","colorBorder","cssTitle","cssSubtitle","cssFooter","cssImage","styleID","isVertical","renderVertical","renderHorizontal","imageTop","imageBottom","isBefore","startClass","endClass","startHtml","images","endHtml","isHorizontal","imageSlot","GSCenterElement","GSMenuElement","auto","dark","menuRef","closeSubmenus","updatePosition","onMouseLeave","submenu","dropend","dropstart","popup","caller","isMouseOrPointerEvent","renderSubmenu","renderHeader","renderMenu","renderDivider","menu","toSubmenu","menuItem","isSubmenu","innerWidth","GSContextElement","attachTarget","assignedSlot","onPopup","GSCompareElement","background","before","after","elRef","clipRef","slideRef","mouseController","elPosition","splitter","onDoubleClick","isAuto","pct","isFixed","slider","clip","GSControllerElement","module","changes","initialize","GSCopyrightElement","company","isCompany","isYear","GSDataHandler","autoload","autorefresh","config","handler","lifoReadRef","lifoWriteRef","itemHolder","PROPERTIES","initLIFO","updateHandler","formatSort","formatFilter","isDebug","gsDebug","isCached","formated","save","verifyHandler","callOnceLifo","lifoReadRefCallback","lifoWriteRefCallback","lifoCall","GSDialogElement","standard","escapable","cancelText","confirmText","minWidth","buttonAlign","iconCancel","iconConfirm","colorCancel","colorConfirm","cssCancel","cssConfirm","cssContent","dialogRef","btnConfirmRef","btnCancelRef","CSS","TITLE_CSS","HEADER_CSS","ALIGN","CANCEL","CONFIRM","updateStack","onOpenChanged","STACK","dialog","showModal","focusable","renderConfirm","onConfirm","renderCancel","onCancel","renderFooter","onForm","onSubmit","info","confirm","prompt","forms","f","tab","btnConfirm","btnCancel","QUERY_INPUT","isVisible","GSDrawerElement","backdrop","scroll","fingers","transition","duration","cssHead","onLeave","onEnter","hasHeader","headSlot","GSDropdownElement","simple","renderButton","buttonClass","btn","GSEmailElement","user","domain","dev","updateUser","updateDomain","GSFormElement","formRef","onChange","reportValidity","onValidate","elements","inputs","fromObject","disableInput","enableInput","onFieldChange","GSFormGroupElement","layout","description","label","placeholder","mask","step","minLength","maxLength","selectable","autoid","autocopy","autoselect","autocapitalize","autocomplete","reveal","readonly","required","cellField","cellLabel","cssLabel","cssField","inputRef","ouptutRef","patterns","validateAllowed","ICON","CSS_LABEL","CSS_LABEL_CELL","SELECTOPT","onRange","formElements","renderFloating","onBlur","cssCheck","renderInput","renderOutput","renderLabel","renderInfo","renderLabelWrap","renderField","isIcon","CSS_ICON","renderTooltip","isRange","idattr","isFieldset","radioLayout","fieldSet","inputHTML","selectHTML","fld","vertical","initStyle","listHTML","outerHTML","isSwitch","isCheckable","isFloating","setCustomValidity","slots","tagList","isCheck","isRadio","isChecked","isPassword","isEmail","isURL","GSFormPanelElement","formStorage","GSGroupElement","controllerGroup","initData","prerender","of","renderWrappedUI","renderWrappedClass","childTagName","generated","getName","GSIconElement","superColor","_clicked","_hovered","postAnimate","fs","GSIndentElement","multiplier","numdef","GSImageElement","invert","grayscale","brightness","contrast","saturate","hue","sepia","alt","imageRef","complete","renderStyle","buildFilter","GSLayoutElement","resizable","autofit","vPos","hPos","els","dyncss","horizontal","lev","tplEl","elementTemplate","tc","dir","did","panelCSS","panelStyle","resize","grow","vpos","hpos","GSLinklement","ping","GSListElement","GSListItemElement","initial","renderFirst","renderSecond","itemCSS","isSelectable","itemStatusCSS","renderText","activeCSS","cssActive","inactiveCSS","cssInactive","GSNavElement","isTab","GSNavItemElement","itemsCSS","isNav","buttonCSS","buildCSS","cssButton","navType","GSOverlayElement","autoremove","radius","styleID2","innerHeight","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathStr","createSVGPathString","fill","pointerEvents","cursor","windowX","windowY","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPagerElement","pages","labelFirst","labelLast","labelNext","labelPrevious","half","renderPrevious","renderItem","renderNext","renderLast","pagination","decodeHTMLEntities","toTarget","ctrl","GSPopupElement","wMin","wMax","hMin","hMax","panelRef","attachTaraget","onAuto","reposition","popupFixed","panel","Event","overflowH","overflowV","GSProgressElement","updateStyle","percentage","onKeySelect","increase","decrease","trunc","old","GSSpinnerElement","pulsar","GSSplitterElement","styleTGT","cssUpdate","lock","updateMouse","stop","isPreceeding","isStyleValue","styleDynamic","lockable","csize","cls","gsSplitter","updateX","updateY","dx","GSTabItemElement","updateCSS","tabCSS","GSTabPanelElement","GSTabGroupElement","findPanel","isAfter","tabs","renderTabs","panels","renderPanels","GSTableElement","filterType","cssFilter","colorHead","colorSelect","colorSort","stripedColumn","divider","striped","grid","borderless","columns","datacolumn","multisort","multiselect","protected","sortable","sortOrder","headColor","CELLS","table","stripedColumns","renderFilters","onSort","entry","renderColumn","renderRecord","renderEmpty","renderHandler","columnType","columType","input","valueAt","row","cell","cfgType","timestamp","dataType","renderFilter","onFilter","icons","sortType","cells","remapRecord","record","elementTofilter","column","getElementIndex","prepareSorter","isComplex","tr","GSTagElement","converter","appendable","closeColor","cssClose","cssTag","dataListRef","renderTags","onInput","renderList","updateTag","KEYS","srcElement","removeTag","addTag","isMax","datalist","optEl","tagEl","renderTag","tagClass","btnClass","badge","GSTextElement","GSTooltipElement","arrowRef","arrowStyle","attachEvents","fade","arrowEl","panelEl","refLocal","refGlobal","GSTemplateElement","CopySelectController","clickCallback","copyCallback","onCopy","writeToClipboard","MaskController","_","back","prev","keyDownCallback","inputCallback","focusCallback","blurCallback","onFocus","initRules","j","builSlots","findIndex","builAccept","toPattern","lastIndex","isMatch","setSelectionRange","substring","selectionStart","selectionEnd","maskType","clean","chars","masks","special","NumberController","onNumberInput","PasswordController","revealing","keyUpCallback","isReveal","altKey","TextController","updateText","ListController","monitorCallback","changeCallback","onMonitor","onDataChange","hasUpdated","strict","isInList","togleEl","dataGroup","isButtonElement","defaultPropertyDeclaration","attributeToPropertyMap","prepare","elementProperties","finalize","finalized","prepareFn","getOwnPropertySymbols","superCtor","attributeNameForProperty","ReactiveInput","reflectingProperties","instanceProperties","updatePromise","reflectingProperty","isUpdatePending","observedAttributes","initializer","initializers","propKeys","getOwnPropertyNames","createProperty","noAccessor","descriptor","getPropertyDescriptor","prototype","configurable","enumerable","enableUpdating","attributeToProperty","requestedUpdate","getUpdateComplete","scheduleUpdate","performUpdate","propertyToAttribute","markUpdated","updateComplete","getPropertyOptions","changeProperty","enqueueUpdate","elementProps","wrapped","didUpdate","ctor","propName","attrValue","saveInstanceProperties","GSComboExt","HTMLSelectElement","setIf","objToHTML","GSDataListExt","HTMLDataListElement","GSInputElement","copyselect","maskController","passwordController","numberController","textController","listController","GSBreadcrumbElement","spacing","updateChildren","$text","GSBreadcrumbItemElement","generate","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","hidden","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBoxElement","cssList","cssInput","listEl","fileEl","dragging","TITLE","onDragenter","onDragleave","onDrop","onPaste","dataTransfer","hasFile","dropEffect","clipboardData","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","GSTimeFormat","toLocaleTimeString","GSDateFormat","GSYearFormat","GSCurrencyFormat","GSStepStyle","GSStepElement","iconCSS","titleCSS","INACTIVE","ICON_CSS","GSStepsElement","steps","isFirst","isLast","COMPLETED","SELECTED","GSNotificationElement","BOTTOM_END","DEFAULT","positionCSS","dismiss","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","dlg","nn","isNativeSupported","isGranted","permission","GSToastElement","pending","visibilityChange","isVisibilityChanged","pendingUpdate","validParent","renderWithHeader","renderSimple","isToast","isNotify","AbstractTreeController","addNodeController","removeNodeController","oldNode","TreeController","toggleState","addedNode","insertedNode","onRemove","GSTreeItemElement","renderSpinner","cssFocus","status","parentItem","checkColor","checkColorSelected","ui","itemIco","itemIcon","openIcon","closeIcon","renderIndent","renderMulti","GSTreeElement","guide","shared","listRef","nextItem","previousItem","reload","expandable","GSChartElement","URL_LIB","GS_URL_CHART","canvasRef","chart","waitInit","destroy","isChart","renderData","canvas","updateChart","div","toBase64Image","quality","sets","datasets","ctx","getContext","Chart","initializing","registerables","nameV","valV","typeV","childs","isObject","_nam","GSChart","_val","_typ","GSHighlightElement","GS_URL_HLJS","codeRef","onTarget","onURL","onHighlight","hasLangauge","highlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMarkdownElement","GS_URL_MARKDOWN","history","maxHeight","containerRef","initLib","showdown","tasklists","tables","Converter","toCache","fromCache","container","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","script","GSMonacoElement","GS_URL_MONACO","editor","onMonacoReady","monaco","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","automaticLayout","minimap","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","paths","vs","initialized","initEnv","initMonaco"],"mappings":"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"}