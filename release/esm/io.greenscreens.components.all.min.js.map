{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/GSVersion.mjs","../../modules/base/style.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSID.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSDynamicStyle.mjs","../../modules/base/GSCacheStyles.mjs","../../modules/base/GSAdoptedEngine.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSLocalization.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSTemplateCache.mjs","../../modules/base/GSTheme.mjs","../../modules/lib.mjs","../../modules/controllers/AdoptedController.mjs","../../modules/controllers/ContentController.mjs","../../modules/controllers/AttributeController.mjs","../../modules/controllers/LocalizationController.mjs","../../modules/controllers/OrientationController.mjs","../../modules/controllers/TemplateController.mjs","../../modules/properties/orientation.mjs","../../modules/properties/protocol.mjs","../../modules/properties/environment.mjs","../../modules/controllers/ThemeController.mjs","../../modules/properties/verificator.mjs","../../modules/data/ReadWriteRegistry.mjs","../../modules/controllers/DataController.mjs","../../modules/controllers/SlotController.mjs","../../modules/GSElement.mjs","../../modules/base/GSAttributeHandler.mjs","../../modules/helpers/Stack.mjs","../../modules/helpers/Queue.mjs","../../modules/helpers/BinaryTree.mjs","../../modules/helpers/DoublyLinkedList.mjs","../../modules/helpers/Tree.mjs","../../modules/data/AbstractReadWrite.mjs","../../modules/data/ReadWrite.mjs","../../modules/data/CachedReader.mjs","../../modules/data/TreeNode.mjs","../../modules/data/TreeReader.mjs","../../modules/directives/dataset.mjs","../../modules/directives/literal.mjs","../../modules/directives/css-map.mjs","../../modules/properties/buttonType.mjs","../../modules/properties/color.mjs","../../modules/properties/inputType.mjs","../../modules/properties/nav.mjs","../../modules/properties/placement.mjs","../../modules/properties/position.mjs","../../modules/properties/size.mjs","../../modules/properties/arrayConverter.mjs","../../modules/controllers/ElementMoveController.mjs","../../modules/controllers/ElementNavigationController.mjs","../../modules/controllers/GroupController.mjs","../../modules/components/Accordion.mjs","../../modules/components/AccordionItem.mjs","../../modules/components/Alert.mjs","../../modules/components/Button.mjs","../../modules/components/Calendar.mjs","../../modules/components/Card.mjs","../../modules/components/Center.mjs","../../modules/components/Menu.mjs","../../modules/components/Context.mjs","../../modules/components/Compare.mjs","../../modules/components/Controller.mjs","../../modules/components/Copyright.mjs","../../modules/components/DataHandler.mjs","../../modules/components/Dialog.mjs","../../modules/components/Drawer.mjs","../../modules/components/Dropdown.mjs","../../modules/components/Email.mjs","../../modules/components/Form.mjs","../../modules/components/FormGroup.mjs","../../modules/components/FormPanel.mjs","../../modules/components/Group.mjs","../../modules/components/Icon.mjs","../../modules/components/Indent.mjs","../../modules/components/Image.mjs","../../modules/components/Layout.mjs","../../modules/components/Link.mjs","../../modules/components/List.mjs","../../modules/components/ListItem.mjs","../../modules/components/Nav.mjs","../../modules/components/NavItem.mjs","../../modules/components/Overlay.mjs","../../modules/components/Pager.mjs","../../modules/components/Popup.mjs","../../modules/components/Progress.mjs","../../modules/components/Spinner.mjs","../../modules/components/Splitter.mjs","../../modules/components/tab/Tab.mjs","../../modules/components/tab/TabPanel.mjs","../../modules/components/tab/TabGroup.mjs","../../modules/components/Table.mjs","../../modules/components/Tag.mjs","../../modules/components/Text.mjs","../../modules/components/Tooltip.mjs","../../modules/components/Template.mjs","../../modules/components/ext/controllers/CopySelectController.mjs","../../modules/components/ext/controllers/MaskController.mjs","../../modules/components/ext/controllers/NumberController.mjs","../../modules/components/ext/controllers/PasswordController.mjs","../../modules/components/ext/controllers/TextController.mjs","../../modules/components/ext/controllers/ListController.mjs","../../modules/components/ext/ReactiveInput.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSInputElement.mjs","../../modules/components/breadcrumb/Breadcrumb.mjs","../../modules/components/breadcrumb/BreadcrumbItem.mjs","../../modules/components/filebox/Attachment.mjs","../../modules/components/filebox/FileBox.mjs","../../modules/components/intl/TimeFormat.mjs","../../modules/components/intl/DateFormat.mjs","../../modules/components/intl/YearFormat.mjs","../../modules/components/intl/CurrencyFormat.mjs","../../modules/components/steps/StepStyle.mjs","../../modules/components/steps/Step.mjs","../../modules/components/steps/Steps.mjs","../../modules/components/toast/Notification.mjs","../../modules/components/toast/Toast.mjs","../../modules/components/tree/controllers/AbstractTreeController.mjs","../../modules/components/tree/controllers/TreeController.mjs","../../modules/components/tree/TreeItem.mjs","../../modules/components/tree/Tree.mjs","../../modules/extra/Chart.mjs","../../modules/extra/Highlight.mjs","../../modules/extra/Markdown.mjs","../../modules/extra/Monaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport class GSVersion {\r\n\r\n    static get version() {\r\n        return '2.0.0';\r\n    }\r\n\r\n    static get build() {\r\n        return 2025.0131;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Required CSS Styles for WebCompoents, regardless Bootstrap CSS.\r\n */\r\nexport const gsstyles = `.z-10k{z-index:10000 !important;}\r\n.gs-hide,gs-item{display:none !important;}\r\ngs-popover,gs-tooltip{position:fixed;top:0px;left:0px;},\r\n.d-contents{display:contents;}';\r\ngs-button-group::part(.btn-group){box-shadow:rgba(72, 72, 72, 0.4) 0px 0.125rem 0.25rem;}\r\ngs-group>gs-button::part(button) {box-shadow: none;}\r\ngs-group>gs-button:not(:last-child)::part(button) {border-top-right-radius: 0;border-bottom-right-radius: 0;}\r\ngs-group>gs-button:not(:first-child)::part(button) {margin-left: calc(var(--bs-border-width) * -5);border-top-left-radius: 0;border-bottom-left-radius: 0;}\r\ngs-layout {width: 100%;height: 100%;}\r\ngs-split-panel{flex: 1 1 auto !important;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]:before {content: attr(data-value);}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {visibility: hidden;display: inline-block;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-calendar-picker-indicator {position: relative;top: 0px;right: 0;color: black;opacity: 0.5;}\r\n`;","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic asNum(val, dft = 0, locale) {\r\n\t\tlocale = locale || GSUtil.locale;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(locale);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(locale = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(locale).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t};\r\n\t\tconst reg = /[&<>\"'/]/ig;\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\t\t\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to write to the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async writeToClipboard(value = '') {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-write\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.writeText(value);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to read from the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async readFromClipboard() {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-read\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.readText();\r\n\t\t}\r\n\t\treturn '';\r\n\t}\t\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribite name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop];\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\t\t\t\t\r\n\t\t\t\tconst tmp = opt; // Object.hasOwn(opt, prop) ? opt : target;\r\n\t\t\t\t\r\n\t\t\t\tconst type = tmp[prop]?.type;\r\n\t\t\t\tconst safe = tmp[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = tmp[prop]?.default;\r\n\t\t\t\tconst multi = tmp[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = tmp[prop]?.attribute || prop;\r\n\t\t\t\tlet val = target.hasAttribute(prop) ? GSAttr.get(target, prop) : target[prop];\r\n\r\n\t\t\t\tif (GSFunction.isFunction(val)) return val.bind(target);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, locale) {\r\n        format = format || GSUtil.getDateFormat(locale);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, locale: {}, extract: {} };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', locale:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const locale = cfg.locale || GSUtil.locale;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, locale);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'text':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(locale);\r\n                    return new GSDate(val).format(fmt, locale);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, locale);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static *filter(data = [], filter = [], fields, limit = 0) {\r\n        let cnt = 0;\r\n        let sts = false;\r\n        for (let rec of data) {\r\n            sts = GSData.filterRecord(rec, filter, fields);\r\n            if (sts) {\r\n                cnt++\r\n                yield rec;\r\n            }\r\n            if (limit > 0 && cnt >= limit) break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields, limit = 0) {\r\n        data = Array.isArray(data) ? data : [];\r\n        filter = Array.isArray(filter) ? filter : [];\r\n        if (filter.length === 0) return data;\r\n        return [...GSData.filter(data, filter, fields, limit)];\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (GSData.filterValue(value, filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let value = null;\r\n\r\n        for (let flt of filter) {\r\n            value = rec[flt.name];\r\n            if (flt.name) {\r\n                found = found && GSData.filterValue(value, flt)\r\n            } else {\r\n                found = found && GSData.filterSimple(rec, flt.value);\r\n            }\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static filterValue(value, filter) {\r\n        if (value instanceof Date) {\r\n            return GSData.matchDate(value, filter);\r\n        } else if (value instanceof Date) {\r\n            return GSData.matchNumber(value, GSUtil.asNum(filter.value), filter.op);\r\n        } else {\r\n            return ('' + value).toLocaleLowerCase().includes(('' + filter.value).toLocaleLowerCase());\r\n        }\r\n    }\r\n\r\n    static matchDate(val, filter, locale) {\r\n\r\n        if (typeof filter === 'string') {\r\n            const value = '' + filter;\r\n            const local = val.toLocaleDateString(locale);\r\n            const iso = val.toISOString();\r\n            return local.includes(value) || iso.includes(value);\r\n        }\r\n\r\n        if (!filter.value) return false;\r\n\r\n        const qry = filter.value instanceof Date ? 'date' : typeof filter.value;\r\n\r\n        switch (qry) {\r\n            case 'number':\r\n                return GSData.matchNumber(val.getTime(), filter.value, filter.op);\r\n            case 'date':\r\n                return GSData.matchNumber(val.getTime(), filter.value.getTime(), filter.op);\r\n        }\r\n\r\n        return GSData.matchDate(val, '' + filter.value, filter.locale);\r\n    }\r\n\r\n    /**\r\n     * Match number by operator\r\n     * @param {*} value \r\n     * @param {*} query \r\n     * @param {*} operator \r\n     */\r\n    static matchNumber(value = 0, query = 0, operator = 'eq') {\r\n        switch (operator) {\r\n            case 'gt': return query > value;\r\n            case 'lt': return query < value;\r\n            case 'ge': return query >= value;\r\n            case 'le': return query <= value;\r\n        }\r\n        return value === query;\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToOject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name, partial = false) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj[n][i] : null;\r\n        } else if (obj.hasOwnProperty(n)) {\r\n            obj = partial ? obj[n] || obj : obj[n];\r\n        } else {\r\n            obj = null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n\tstatic readFromObject(obj, name) {\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSlotElement\r\n\t * @returns {Boolean}\r\n\t */\t\r\n\tstatic isSlotElement(el) {\r\n\t\treturn el instanceof HTMLSlotElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @param {Number} level How many levels to wal, 0 = all\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry, levels = 0) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tlevels = GSUtil.asNum(levels, 0);\r\n\t\tconst limit = levels > 0;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t\tif (limit && --levels == 0) return null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value') && el.value) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t}\r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = GSUtil.normalize(data);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\t// if (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t */\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\tconst props = GSDOM.allProperties(own);\r\n\t\tArray.from(own.attributes).forEach(v => {\r\n\t\t\tconst type = props[v.name]?.type;\r\n\t\t\tswitch(type) {\r\n\t\t\t\tcase Boolean :\r\n\t\t\t\t\tobj[v.name] = own.hasAttribute(v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Number :\r\n\t\t\t\t\tobj[v.name] = GSAttr.getAsNum(own, v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\tobj[v.name] = v.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', '');\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\t/**\r\n\t * Extract and merge all static properties definition from WebComponent instance\r\n\t * @param {GSElement} obj \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic allProperties(obj) {\r\n\t\tconst list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n\t\tlist.push(obj.constructor?.properties || obj.properties);\r\n\t\treturn GSData.mergeObjects(list);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if available.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = GSUtil.isString(data) ? data : data.action || data.data?.action;\r\n\t\t\tGSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(me.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {Boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el, opt) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el, opt);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {Boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {Boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {Boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {Boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {Boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {Boolean} forRemove - call on node remove or add\r\n     * @param {HTMLElement} target - element to monitor\r\n     * @returns {Boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {Boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {Boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = (style || '').toString();\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop();\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n    * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\nimport { gsstyles } from \"./style.mjs\";\r\n\r\n/**\r\n * Cache for dynaamically loaded styles.\r\n * Used to share styles among GS-* WebComponents\r\n * @class\r\n */\r\nexport class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Create a new CSSStyleSheet\r\n\t * @param {String} id Unique ID\r\n\t * @returns {CSSStyleSheet} Created instance\r\n\t */\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {String} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\t\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\t\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {String} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {String} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id, style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSID.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(gsstyles);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from './GSDOM.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSDOMObserver } from './GSDOMObserver.mjs';\r\nimport { GSCacheStyles } from './GSCacheStyles.mjs';\r\n\r\nconst adoptedId = Symbol();\r\nconst observer = Symbol();\r\n\r\n/**\r\n * Monitor HTMLStyleElement & HTMLLinkElement (of type stylesheet) for changes.\r\n * Every such element marked with data-adoptable=\"true\" will be cached and\r\n * will trigger gs-adopted event to notify component controller to update adoptableStyleSheet list\r\n */\r\nexport class GSAdoptedEngine {\r\n\r\n  static #timerID = 0;\r\n  static #ID = Date.now();\r\n  static #scheduled = false;\r\n\r\n  static #init() {\r\n    const me = GSAdoptedEngine;\r\n    me.observe(document.head);\r\n    me.#preload();\r\n    me.#timerID = setInterval(() => me.#adopt(), me.timeout);\r\n  }\r\n\r\n  static #clear() {\r\n    const me = GSAdoptedEngine;\r\n    clearInterval(me.#timerID);\r\n    me.#timerID = undefined;\r\n  }\r\n\r\n  static #adopt() {\r\n    const me = GSAdoptedEngine;\r\n    const sheets = me.#adoptable;\r\n    if (sheets.length == 0) return me.#clear();\r\n    sheets.map(s => me.#adoptSheet(s));\r\n    me.update();\r\n  }\r\n\r\n  static update() {\r\n    const me = GSAdoptedEngine;\r\n    if (me.#scheduled) return;\r\n    me.#scheduled = true;\r\n    queueMicrotask(() => {\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          document.adoptedStyleSheets = me.#sorted;\r\n          document.adoptedStyleSheets.id = ++me.#ID;\r\n        } finally {\r\n          me.#scheduled = false;\r\n          globalThis.dispatchEvent(new CustomEvent('gs-adopted'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static #asText(sheet) {\r\n    return Object.values(sheet.cssRules).map(o => o.cssText).join('');\r\n  }\r\n\r\n  static #adoptLink(el) {\r\n    const me = GSAdoptedEngine;\r\n    GSAdoptedEngine.#monitorAttributes(el);\r\n    Array.from(document.styleSheets).filter(s => s.ownerNode === el).map(s => me.#adoptSheet(s));\r\n  }\r\n\r\n  static #adoptSheet(sheet) {\r\n    const me = GSAdoptedEngine;\r\n    const style = me.#asText(sheet);\r\n    return me.#adoptStyle(sheet.ownerNode, style);\r\n  }\r\n\r\n  static #adoptStyle(ownerNode, style) {\r\n    const me = GSAdoptedEngine;\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(style);\r\n    sheet.id = ++me.#ID;\r\n    ownerNode[adoptedId] = sheet.id;\r\n    me.#store(ownerNode, sheet);\r\n    return sheet;\r\n  }\r\n\r\n  static #store(ownerNode, sheet) {\r\n    GSCacheStyles.set(sheet.id, sheet);\r\n  }\r\n\r\n  static #remove(ownerNode, sheet) {\r\n    GSCacheStyles.remove(sheet.id);\r\n    ownerNode[observer]?.disconnect?.();\r\n    ownerNode[observer] = undefined;\r\n  }\r\n\r\n  static get #sorted() {\r\n    return GSCacheStyles.styles;\r\n  }\r\n\r\n  /**\r\n   * List of adoptable styles or links. Filter only those with dataset.adoptable=true\r\n   * @returns {HTMLStyleElement|HTMLLinkElement}\r\n   */\r\n  static get #adoptable() {\r\n    return Object.values(document.styleSheets)\r\n      .filter(o => o.ownerNode)\r\n      .filter(o => o.ownerNode.dataset.adoptable)\r\n      .filter(o => !o.ownerNode[adoptedId]);\r\n  }\r\n\r\n  static #preload() {\r\n    GSDOM.queryAll(document.head, 'link[rel=\"preload\"][as=\"style\"]')\r\n    .forEach(el => {\r\n      el.remove();\r\n      document.head.appendChild(el);\r\n    });\r\n  }\r\n\r\n  static #onAttributeChange(mutationList) {\r\n    mutationList.forEach((mutation) => {\r\n       const id = mutation.target[adoptedId];\r\n       const style = GSCacheStyles.get(id);\r\n       if(style) style.disabled = mutation.target.hasAttribute('disabled');\r\n    });\r\n    GSAdoptedEngine.update();\r\n  }\r\n  \r\n  static #monitorAttributes(element) {\r\n    const me = GSAdoptedEngine;\r\n    const callback = me.#onAttributeChange.bind(me);\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(element, {\r\n      attributeFilter: [\"disabled\"],\r\n      attributeOldValue: true,\r\n      subtree: false,\r\n    });\r\n    return observer;\r\n  }\r\n  \r\n  /**\r\n   * Filter style and link(css) elements which will be shared\r\n   * with all web componentes. Filter only those marked with data-adoptable\r\n   * @param {HTMLElement} el \r\n   * @returns {Boolean} Return true if monotired element is selected for further processing\r\n   */\r\n  static #onMonitorFilter(el) {\r\n    return (Boolean(el.dataset?.adoptable))\r\n      && (\r\n        (el instanceof HTMLLinkElement && (el.rel === 'stylesheet' || el.as === \"style\"))\r\n        || el instanceof HTMLStyleElement\r\n      );\r\n  }\r\n\r\n  /**\r\n   * When style added to the HTML page, attach it to the WebComponents\r\n   * @param {HTMLStyleElement|HTMLLinkElement} el \r\n   */\r\n  static #onMonitorConnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    if (el instanceof HTMLStyleElement) {\r\n      me.#adoptStyle(el, el.innerText);\r\n      me.update();\r\n    } else if (el instanceof HTMLLinkElement) {\r\n      GSEvents.wait(el, 'load', 0, false).then(e => {\r\n        if (el.rel === 'preload') return el.rel = \"stylesheet\";\r\n        me.#adoptLink(e.target);\r\n        me.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When style removed, remove from adoptable and update\r\n   * @param {HTMLElement} el \r\n   */\r\n  static #onMonitorDisconnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    me.#sorted.filter(o => o.id === el[adoptedId])\r\n          .forEach(o => me.#remove(el, o));\r\n    me.update();\r\n  }\r\n\r\n  /**\r\n   * Observe DOM tree from mutations\r\n   * @param {HTMLElement} owner Root element to watch DOM tree from \r\n   */\r\n  static observe(owner) {\r\n    const me = GSAdoptedEngine;\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorConnect, false, owner);\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorDisconnect, true, owner);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promisses sequentially\r\n\t * @param {Arrayy<Promise>} ps \r\n\t * @returns \r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport { GSEvent } from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport class GSEventBus {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {String} name EventBus name\r\n     * @param {String} type Event name\r\n     * @param {Object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {String} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {String} name unique buss name\r\n     * @returns {Boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constructor to attach Gesture featuer to an HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {Boolean} swipe Monitor swipe gesture\r\n     * @param {Boolean} tap Monitor tap gesture\r\n     * @param {Boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move: me.#handleTouchMove.bind(me),\r\n            start: me.#handleTouchStart.bind(me),\r\n            end: me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) {\r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 && Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {Number}\r\n     */\r\n    static fingers(e) {\r\n        return e.detail.touches?.length;\r\n    }\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns {GSGesture}\r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport class GSItem extends HTMLElement {\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic properties = {\r\n\t\tactive: { type: Boolean },\r\n\t\tdisabled: { type: Boolean },\r\n\t\tautofocus: { type: Boolean },\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return template content of GS-ITEM element (if exists)\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tget body() {\r\n\t\tlet tpl = GSAttr.get(this, 'template');\r\n\t\tif (tpl) return `<gs-template flat src=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = this.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item elements\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tget items() {\r\n\t\treturn Array.from(this.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSAttr.get(this, 'name', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent GS-* component\r\n\t */\r\n\tget parentComponent() {\r\n\t\treturn GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n\t}\r\n\t\t\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate that parent element contains only specific childrens\r\n\t * @param {*} own \r\n\t * @param {*} tagName \r\n\t * @returns \r\n\t */\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic collect(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Convert GS-ITEM list to JSON\r\n\t * @param {HTMLElement} root Element containing GS-ITEM childs \r\n\t * @returns {Array} Arary of JSON objects\r\n\t */\r\n\tstatic toJSON(root) {\r\n\t\treturn GSItem.collect(root).map(el => el.asJSON(true));\r\n\t}\r\n\r\n\t/**\r\n\t * Make GS-ITEM attributes JSON compatible \r\n\t * @param {*} root \r\n\t * @param {*} definition \r\n\t * @returns \r\n\t */\r\n    static proxify(root, definition) {        \r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, definition));\r\n    }\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSVersion } from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        //if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        }\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport class GSPopper {\r\n\r\n\t/**\r\n\t * A simple wrapper to get element DOMRect\r\n\t * @param {HTMLElement} el \r\n\t * @returns {DOMRect}\r\n\t */\r\n\tstatic asRect(el) {\r\n\t\treturn el.getBoundingClientRect();\r\n\t}\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = GSPopper.asRect(el);\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = GSPopper.asRect(element);\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\r\n\t\tconst css = {\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '0px',\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.translate = `${obj.x}px ${obj.y}px`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tconst astyle = GSDynamicStyle.dynamicStyle(arrow);\r\n\r\n\t\tconst css = {\r\n\t\t\tinset: GSPopper.#inset(pos),\r\n\t\t\tposition: 'absolute',\r\n\t\t\tmargin: '0px',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\twidth: 'max-content',\r\n\t\t\theight: 'max-content',\t\t\t\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\t\tastyle.position = 'absolute';\r\n\r\n\t\tconst srect = GSPopper.asRect(source);\r\n\t\tconst arect = GSPopper.asRect(arrow);\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tconst aopt = {\r\n\t\t\ttranslate: `${arr.x}px ${arr.y}px`,\r\n\t\t\ttop: arr.top ? arr.top : '',\r\n\t\t\tleft: arr.left ? arr.left : ''\r\n\t\t}\r\n\r\n\t\tconst opt = {\r\n\t\t\ttranslate : `${obj.x}px ${obj.y}px`\r\n\t\t};\r\n\r\n\t\tObject.assign(style, opt);\r\n\t\tObject.assign(astyle, aopt);\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst opt = {};\r\n\r\n\t\topt.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\topt.left = '';\r\n\t\t\topt.top = '0px';\r\n\t\t\tshift = 0; //pos.isStart ? size : -1 * size;\r\n\t\t\topt.translate = `${shift}px ${arrowPosH / 2}px`;\r\n\t\t} else {\r\n\t\t\topt.top = '';\r\n\t\t\topt.left = '0px';\r\n\t\t\tshift = 0; //pos.isTop ? size : -1 * size;\r\n\t\t\topt.translate = `${arrowPosW}px ${shift}px`;\r\n\t\t}\r\n\r\n\t\tGSDynamicStyle.applyDynamicStyle(arrow, opt);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {\r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSQueryCSS } from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value);\r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n\r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\treturn document.getElementById(tpl.slice(1));\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTheme class\r\n * @module base/GSTheme\r\n */\r\n\r\n/**\r\n * Switch between dark and light mode\r\n * @Class\r\n */\r\nexport class GSTheme {\r\n\r\n    static #STORAGE = 'gs-theme-mode';\r\n\r\n    /**\r\n     * Changes the theme to 'dark mode' and save settings to local stroage.\r\n     * Basically, replaces/toggles every CSS class that has '-light' class with '-dark'\r\n     * @param {HTMLElement} el \r\n     */\r\n    static darkMode(el) {\r\n        GSTheme.#switch(el, 'light', 'dark');\r\n    }\r\n\r\n    /**\r\n     * Changes the theme to 'light mode' and save settings to local stroage.\r\n     * @param {HTMLElement} el \r\n     */\r\n    static lightMode(el) {\r\n        GSTheme.#switch(el, 'dark', 'light');\r\n    }\r\n\r\n    static #switch(el, from = 'light', to = 'dark') {\r\n\r\n        const root = el || document.body;\r\n\r\n        // TODO  switch dark/light mode ?!??!? \r\n\r\n        // save last state\r\n        GSTheme.theme = to;\r\n    }\r\n\r\n    static get theme() {\r\n        return localStorage.getItem(GSTheme.#STORAGE);\r\n    }\r\n\r\n    static set theme(val) {\r\n        localStorage.setItem(GSTheme.#STORAGE, val);\r\n        window.dispatchEvent(new CustomEvent('gs-theme', { detail: val }));\r\n        const htmlEl = document.head.parentElement;\r\n        if (val) {\r\n            htmlEl.dataset.bsTheme = val;\r\n        } else {\r\n            delete htmlEl.dataset.bsTheme;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get system default theme by media query\r\n     * @returns {String} dark|light \r\n     */\r\n    static getSystemDefaultTheme() {\r\n        const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\r\n        return darkThemeMq.matches ? 'dark' : 'light';\r\n    }\r\n\r\n    static #onTheme(e) {\r\n        const q = new URLSearchParams(location.hash.slice(1));\r\n        GSTheme.theme = q.get('theme');\r\n    }\r\n\r\n    static #setup() {\r\n        window.addEventListener('hashchange', GSTheme.#onTheme)\r\n        let settings = localStorage.getItem(GSTheme.#STORAGE);\r\n        if (settings == null) {\r\n            settings = GSTheme.getSystemDefaultTheme();\r\n        }\r\n\r\n\r\n        if (settings == 'dark') return GSTheme.darkMode();\r\n        if (settings == 'light') return GSTheme.lightMode();\r\n        // TODO switch\r\n\r\n    }\r\n\r\n    static {\r\n        GSTheme.#setup();\r\n        globalThis.GSTheme = GSTheme;\r\n    }\r\n\r\n}\r\n","// Lit 3.0 Google\r\nconst litUrl = globalThis.GS_LIT_URL || '/bootstrap-lit/assets/lib/lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const Directive = litModule.Directive;\r\nexport const LitElement = litModule.LitElement;\r\nexport const PartType = litModule.PartType;\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const adoptStyles = litModule.adoptStyles;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const createRef = litModule.createRef;\r\nexport const css = litModule.css;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const directive = litModule.directive;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getCompatibleStyle = litModule.getCompatibleStyle;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const guard = litModule.guard;\r\nexport const html = litModule.html;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isServer = litModule.isServer;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const literal = litModule.literal;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const noChange = litModule.noChange;\r\nexport const notEqual = litModule.notEqual;\r\nexport const nothing = litModule.nothing;\r\nexport const range = litModule.range;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const render = litModule.render;\r\nexport const repeat = litModule.repeat;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const staticHtml = litModule.staticHtml;\r\nexport const staticSvg = litModule.staticSvg;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const svg = litModule.svg;\r\nexport const templateContent = litModule.templateContent;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const unsafeStatic = litModule.unsafeStatic;\r\nexport const until = litModule.until;\r\nexport const when = litModule.when;\r\nexport const withStatic = litModule.withStatic;","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCacheStyles } from '../base/GSCacheStyles.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time even gs-adopted is triggered by the GSAdoptedEngien class,\r\n * all registerd controller will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to preven dom node polution; \r\n * Style  changes  are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me.#host);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values, isGlobal = false) {\r\n    const me = this;\r\n    let style = null;\r\n    if (isGlobal) {\r\n      style = GSCacheStyles.dynamic;\r\n    } else {\r\n      me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');      \r\n      style = me.#dynamic;\r\n    }    \r\n    if (values === null && style.rules.length > 0 ) return style.removeRule(name);\r\n    return style.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (!me.#isSelf()) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs).forEach(el => el?.remove());\r\n      me.#refs.clear();\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.deattach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #locale;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#locale = host.locale;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#locale !== me.#host?.locale) {\r\n      me.#locale === me.#host?.locale;\r\n      me.updateLanguage(me.#locale);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#locale) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me.#host);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n  #injected;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#injected = false;\r\n    me.#request();    \r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  hostUpdate() {\r\n    this.#request();\r\n  }\r\n\r\n  requestUpdate() {\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (me.#injected) {\r\n      me.#injected = false;\r\n      me.#host.templateInjected?.();\r\n    }\r\n  }\r\n\r\n  #request() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      me.#lastRef = ref;\r\n      if (ref) TemplateController.#schedule(this);\r\n    }\r\n  }\r\n\r\n  async #load() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (!ref) return;\r\n    const isTplEl = ref instanceof HTMLTemplateElement;\r\n    const template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n    if (template) {\r\n      me.#template = template;\r\n      me.#injected = true;\r\n      me.#host.requestUpdate();\r\n    }\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    const host = this.#host;\r\n    if (!host) return;\r\n    if(this.isTemplateElement) return host.src;\r\n    return host.template || host.query('template', false);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    await GSUtil.timeout(100);\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = false));\r\n    }\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'dektop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async relink(read = true) {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#listen(read);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.filter = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    storage?.on('read', me.#readCallback);\r\n    storage?.on('write', me.#writeCallback);\r\n    storage?.on('error', me.#errorCallback);\r\n    if (read) storage.read(me.#host);\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    storage?.off('read', me.#readCallback);\r\n    storage?.off('write', me.#writeCallback);\r\n    storage?.off('error', me.#errorCallback);\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle event when template slot changes\r\n */\r\nexport class SlotController {\r\n\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      const me = this;\r\n      const target = me.#host.renderRoot || me.#host;\r\n      me.#host.attachEvent(target, 'slotchange', me.#onSlotChanged.bind(me));\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    #onSlotChanged(e) {\r\n      e.target.assignedElements().forEach(el => {\r\n        el.onSlotInjected?.(e.target);\r\n      });\r\n    }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\nimport { SlotController } from './controllers/SlotController.mjs';\r\nimport { GSAttributeHandler } from './base/GSAttributeHandler.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    locale: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n  #orientation;\r\n  #localization;\r\n  #dataController;\r\n  #slotController;\r\n  #themes\r\n  #template;\r\n  #content;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.locale = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n    me.#slotController = new SlotController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('storage')) {\r\n      if (me.storage) {\r\n        if (!me.#dataController) {\r\n          me.#dataController = new DataController(me);\r\n        } else {\r\n          me.#dataController.relink();\r\n        }\r\n      } else {\r\n        me.#dataController?.hostDisconnected();\r\n        me.#dataController = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when this element injected in some slot\r\n   * @param {*} slot \r\n   */\r\n  onSlotInjected(slot) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return this.renderTemplate();\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : noChange;\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Called when asynchronnous template is injected into component\r\n   */\r\n  templateInjected() {\r\n    \r\n\t}\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to witch to add parsed CSS\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @param {boolean} isGlobal \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value, isGlobal = false) {\r\n    return this.#adopted.style(id, value, isGlobal);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @param {Number} levels - walk limit\r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '', levels = -1) {\r\n    return GSDOM.closest(this, query, levels);\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.locale, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    //return this.dataset.gsTarget;\r\n    return GSAttributeHandler.isBindable(this);\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment);\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os);\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol);\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Get instance of internal styles\r\n   */\r\n  get elementStyles() {\r\n    return this.constructor.elementStyles.map(s => Object.values(s).filter(o => o instanceof CSSStyleSheet).pop()).pop();\r\n  }\r\n\r\n  /**\r\n   * Internal shadow styles rule\r\n   * @param {*} name \r\n   * @returns \r\n   */\r\n  cssRule(name) {\r\n    return Array.from(this.elementStyles.rules).filter(r => r.selectorText === name).pop();\r\n  }\r\n\r\n  /**\r\n   * Set dynamic CSS rule \r\n   * See GSIcon hot it is done\r\n   * @param {*} rule \r\n   * @param {*} name \r\n   * @param {*} value \r\n   */\r\n  setCSSProperty(rule, name, value) {\r\n    this.cssRule(rule).style.setProperty(name, value);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    return GSDOM.allProperties(obj);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, opt);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\nimport { GSElement } from \"../GSElement.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-attribute - toggle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-call - calls a function on a given target (multipel functions supported)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: \r\n * data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * \r\n * data-gs-target determine element on which to execute,\r\n * if not specified, it means current element\r\n * \r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el) {\r\n        const me = this;\r\n        me.#host = el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = GSAttributeHandler.proxify(me.#host);\r\n    }\r\n\r\n    /**\r\n     * Main function to process element data-gs-* attributes\r\n     * @param {Event} e \r\n     */\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    /**\r\n     * Process each individual data-gs-* attribute\r\n     * @param {GSElement} host \r\n     * @param {String|HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleSwap(target);\r\n        me.#handleInject(host, target);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    /**\r\n     * Bind provided value to the form or form element\r\n     * @param {HTMLFormElement|HTMLInputElement} target \r\n     * @param {Event} evt \r\n     * @returns \r\n     */\r\n    #handleBinding(target, evt) {\r\n        const source = evt.target.field || evt.target.form || evt.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (!(isField || isForm)) return;\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Trigger 'action' event on target to execute specific function\r\n     * @param {GSElement} target \r\n     */\r\n    #handleAction(target) {\r\n        if (this.action) GSEvents.send(target, 'action', this.action, true, true);\r\n    }\r\n\r\n    /**\r\n     * Set target attribute value\r\n     * @param {HTMLElement} target \r\n     * @returns \r\n     */\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    /**\r\n     * Set value to target propery\r\n     * @param {GSElement} target \r\n     * @returns \r\n     */\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle target css class\r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {*} host \r\n     * @param {*} target \r\n     * @param {*} evt \r\n     * @returns \r\n     */\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)();\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send an event to a target\r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    /**\r\n     * Inject HTML to target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleInject(host, target) {\r\n        if (this.inject) {\r\n            const src = this.#toHTML(this.inject);\r\n            const content = GSDOM.parse(src, true);\r\n            this.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Swap inner HTML on a target\r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleSwap(target) {\r\n        if (this.swap) target.innerHTML =  this.#toHTML(this.swap);\r\n    }\r\n\r\n    /**\r\n     * Convert value as URL to a tempalte or as a component name to inject\r\n     * @param {String} value \r\n     * @returns {String}\r\n     */\r\n    #toHTML(value = '') {\r\n        return value.indexOf('/') < 0 ? `<${value}></${value}>` : `<gs-template flat src=\"${value}\"></gs-template>`;\r\n    }\r\n\r\n    /**\r\n     * Load HTML template and apply to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    /**\r\n     * Apply htmltemplate to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} template \r\n     */    \r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    /**\r\n     * Apply htmltemplate to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} content \r\n     */    \r\n    #applyContent(host, target, content) {\r\n        if (host.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    deattach(name = 'click') {\r\n        //GSEvents.deattachListeners(this.#host);\r\n        const me = this;\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        me.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n        const me = this;\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                return [GSDOM.root(me.#host)];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n        const list = GSDOM.queryAll(document.body, me.target, false, true).filter(el => el.tagName !== 'GS-ITEM'); \r\n        if (list.length === 0) list.push(me.#host);\r\n        return list;\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    /**\r\n     * Is property value JSON\r\n     */\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    /**\r\n     * Is element attribute value JSON\r\n     */\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    /**\r\n     * Wrap any element into data-gs-* handler\r\n     * @param {HTMLElement} el \r\n     * @returns {Proxy}\r\n     */\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    /**\r\n     * Process data-gs-* attributtes on a element\r\n     * @param {HTMLElement} el \r\n     * @param {Event} e \r\n     * @returns \r\n     */\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    /**\r\n     * Create a new attribute handler instance\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     * @param {boolean} override If 'false' will skip existing atributes\r\n     */\r\n    static clone(from, to, override = true) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .filter(o => override || !to.hasAttribute(o.attribute))          \r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    /**\r\n     * Check if component is bindable to events\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static isBindable(el) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        return Object.values(def)\r\n            .filter(o => el.hasAttribute(o.attribute))\r\n            .length > 0;\r\n\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig  last in, first out (LIFO) order of operations.\r\n */\r\nexport class Stack extends Array {\r\n    \r\n    push(item) {\r\n        this.unshift(item);\r\n    }\r\n\r\n    pop() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig first in, first out (FIFO) order of operations.\r\n */\r\nexport class Queue extends Array {\r\n    \r\n    enqueue(item) {\r\n        this.push(item);\r\n    }\r\n\r\n    dequeue() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst tree = new BinaryTree(1, 'AB');\r\n\r\ntree.insert(1, 11, 'AC');\r\ntree.insert(1, 12, 'BC');\r\ntree.insert(12, 121, 'BG', { right: true });\r\n\r\n[...tree.preOrderTraversal()].map(x => x.value);\r\n// ['AB', 'AC', 'BC', 'BCG']\r\n\r\n[...tree.inOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB', 'BC', 'BG']\r\n\r\ntree.value;                // 'AB'\r\ntree.hasChildren;          // true\r\n\r\ntree.find(12).isLeaf;           // false\r\ntree.find(121).isLeaf;          // true\r\ntree.find(121).parent.value;    // 'BC'\r\ntree.find(12).left;             // null\r\ntree.find(12).right.value;      // 'BG'\r\n\r\ntree.remove(12);\r\n\r\n[...tree.postOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB']\r\n*/\r\n\r\n/**\r\n * Binary Tree Node data holder\r\n */\r\nexport class BinaryTreeNode {\r\n\r\n    constructor(key, value = key, parent = null) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n\r\n    /**\r\n     * Check if both left and right are empty.\r\n     */\r\n    get isLeaf() {\r\n        return this.left === null && this.right === null;\r\n    }\r\n\r\n    /**\r\n     * Check if node has children\r\n     */\r\n    get hasChildren() {\r\n        return !this.isLeaf;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Binary tree implementation\r\n */\r\nexport class BinaryTree extends BinaryTreeNode {\r\n\r\n    constructor(key, value = key) {\r\n        super(key, value);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in in-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *inOrderTraversal(node = this) {\r\n        if (node.left) yield* this.inOrderTraversal(node.left);\r\n        yield node;\r\n        if (node.right) yield* this.inOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in post-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *postOrderTraversal(node = this) {\r\n        if (node.left) yield* this.postOrderTraversal(node.left);\r\n        if (node.right) yield* this.postOrderTraversal(node.right);\r\n        yield node;\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in pre-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *preOrderTraversal(node = this) {\r\n        yield node;\r\n        if (node.left) yield* this.preOrderTraversal(node.left);\r\n        if (node.right) yield* this.preOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to find the given parent node and \r\n     * insert a new child BinaryTreeNode either as the left or right child, \r\n     * depending on the passed options object.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @param {*} options \r\n     * @returns {boolean} Return true if data inserted\r\n     */\r\n    insert(\r\n        parentNodeKey,\r\n        key,\r\n        value = key,\r\n        { left, right } = { left: true, right: true }\r\n    ) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === parentNodeKey) {\r\n                const canInsertLeft = left && node.left === null;\r\n                const canInsertRight = right && node.right === null;\r\n                if (!canInsertLeft && !canInsertRight) return false;\r\n                if (canInsertLeft) {\r\n                    node.left = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n                if (canInsertRight) {\r\n                    node.right = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to remove a BinaryTreeNode from the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.left.key === key) {\r\n                node.left = null;\r\n                return true;\r\n            }\r\n            if (node.right.key === key) {\r\n                node.right = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to retrieve the given node in the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    find(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new DoublyLinkedList();\r\n\r\nlist.insertFirst(1);\r\nlist.insertFirst(2);\r\nlist.insertFirst(3);\r\nlist.insertLast(4);\r\nlist.insertAt(3, 5);\r\n\r\nlist.size;                      // 5\r\nlist.head.value;                // 3\r\nlist.head.next.value;           // 2\r\nlist.tail.value;                // 4\r\nlist.tail.previous.value;       // 5\r\n[...list].map(e => e.value);    // [3, 2, 1, 5, 4]\r\n\r\nlist.removeAt(1);               // 2\r\nlist.getAt(1).value;            // 1\r\nlist.head.next.value;           // 1\r\n[...list].map(e => e.value);    // [3, 1, 5, 4]\r\n\r\nlist.reverse();\r\n[...list].map(e => e.value);    // [4, 5, 1, 3]\r\n\r\nlist.clear();\r\nlist.size;                      // 0\r\n*/\r\n\r\n/**\r\n * Node data holder\r\n */\r\nexport class Node {\r\n\r\n    value = null;\r\n    next = null;\r\n    previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    release() {\r\n        this.value = undefined;\r\n        this.next = undefined;\r\n        this.previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DoublyLinkedList {\r\n\r\n    #nodes = [];\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     */\r\n    get size() {\r\n        return this.#nodes.length;\r\n    }\r\n\r\n    /**\r\n     * First element in the list\r\n     */\r\n    get head() {\r\n        return this.size ? this.#nodes[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Last elemet in the list\r\n     */\r\n    get tail() {\r\n        return this.size ? this.#nodes[this.size - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Create new linked node\r\n     * @param {*} value \r\n     * @param {*} nextNode \r\n     * @param {*} previousNode \r\n     * @returns \r\n     */\r\n    create(value, nextNode, previousNode) {\r\n        return new Node(value, nextNode, previousNode);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the given position in the list\r\n     * @param {*} index \r\n     * @param {*} value \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    insertAt(index, value, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index] || null;\r\n        const node = create(value, nextNode, previousNode);\r\n\r\n        if (previousNode) previousNode.next = node;\r\n        if (nextNode) nextNode.previous = node;\r\n        this.#nodes.splice(index, 0, node);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the beginning of the list\r\n     * @param {*} value \r\n     */\r\n    insertFirst(value) {\r\n        this.insertAt(0, value);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the end of the list\r\n     * @param {*} value \r\n     */\r\n    insertLast(value) {\r\n        this.insertAt(this.size, value);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data in the given index\r\n     * @param {Number} index \r\n     * @returns \r\n     */\r\n    getAt(index) {\r\n        return this.#nodes[index];\r\n    }\r\n\r\n    indexOf(val) {\r\n        return this.#nodes.indexOf(val);\r\n    }\r\n\r\n    /**\r\n     * Remove the data at the given index\r\n     * @param {*} index \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    removeAt(index, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index + 1] || null;\r\n\r\n        if (previousNode) previousNode.next = nextNode;\r\n        if (nextNode) nextNode.previous = previousNode;\r\n\r\n        return this.#nodes.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    clear(full = true) {\r\n        if (full) this.#nodes.forEach(o => o.release());\r\n        this.#nodes = [];\r\n    }\r\n\r\n    /**\r\n     * Reverse data order\r\n     */\r\n    reverse() {\r\n        this.#nodes = this.#nodes.reduce((acc, { value }) => {\r\n            const nextNode = acc[0] || null;\r\n            const node = new Node(value, nextNode, null);\r\n            if (nextNode) nextNode.previous = node;\r\n            return [node, ...acc];\r\n        }, []);\r\n    }\r\n\r\n    toArray() {\r\n        return this.#nodes.map(e => e.value);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#nodes;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield* this.#nodes;\r\n    }\r\n\r\n    #validate(index, safe = false) {\r\n        const isInvalid = this.#isInvalidIndex(index);\r\n        if (isInvalid) {\r\n            if (safe) {\r\n                console.log(this.#error());\r\n            } else {\r\n                throw new Error(this.#error());\r\n            }\r\n        }\r\n        return !isInvalid;\r\n    }\r\n\r\n    #isInvalidIndex(index) {\r\n        return !Number.isInteger(index) || index < 0 || index > this.size;\r\n    }\r\n\r\n    #error() {\r\n        return `Invalid index. Current length is ${this.size}.`;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        const list = new DoublyLinkedList();\r\n        if (Array.isArray(data)) data.forEach(v => list.insertLast(v));\r\n        return list;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Tree Node data holder\r\n */\r\nexport class Tree {\r\n\r\n    value;\r\n\r\n    #key = null;\r\n    #parent = null;\r\n    #children;\r\n\r\n    #folder = false;\r\n    #level = 0;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        this.#key = key;\r\n        this.#parent = parent;\r\n        this.#folder = value?.leaf === false;\r\n        this.#level = parent ? parent.level + 1 : level;\r\n        this.#children = this.#folder ? [] : undefined;\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Return tree list from root to this node.\r\n     * TODO: Refactor when iterator \"map\" become available\r\n     */\r\n    get subtree() {\r\n        return Array.from(this.up(undefined, false, true, true));\r\n    }\r\n\r\n    get levelID() {\r\n        return this.subtree.map(o => o.level).join('.');\r\n    }\r\n\r\n    /**\r\n     * Unique node canonical form\r\n     */\r\n    get nodeID() {\r\n        //if (this.parent?.level < 0) return this.index;\r\n        return this.subtree.map(o => o.index).join('.');\r\n    }\r\n\r\n    get path() {\r\n        return this.subtree.map(o => o.key).join('/');\r\n    }\r\n\r\n    get index() {\r\n        return this.parent?.nodes.indexOf(this) || 0;\r\n    }\r\n\r\n    get size() {\r\n        return this.#children?.length || -1;\r\n    }\r\n\r\n    get level() {\r\n        return this.#level;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Check if #children is empty\r\n     */\r\n    get isLeaf() {\r\n        return !this.#folder;\r\n    }\r\n\r\n    get isFolder() {\r\n        return this.#folder;\r\n    }\r\n\r\n    /**\r\n     * Check if has #childrens\r\n     */\r\n    get hasChildren() {\r\n        return this.#folder && this.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get key() {\r\n        this.#key ??= this.nodeID;\r\n        return this.#key;\r\n    }\r\n\r\n    get nodes() {\r\n        return this.#children;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get parent() {\r\n        return this.#parent;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n    /**\r\n     * Check if there are more siblings \r\n     */\r\n    get hasMore() {\r\n        return this.#parent?.size > this.index + 1;\r\n    }\r\n\r\n    get firstChild() {\r\n        return this.hasMore ? this.#children[0] : undefined;\r\n    }\r\n\r\n    get lastChild() {\r\n        return this.hasMore ? this.#children[this.#children.length - 1] : undefined;\r\n    }\r\n\r\n    get next() {\r\n        return this.down(this, false, false).next().value || this.nextSibling || this.parent?.nextSibling;\r\n    }\r\n\r\n    get previous() {\r\n        const node = this.previousSibling;\r\n        return (node?.hasChildren) ? node.lastChild : node || this.up(this, false, false).next().value;\r\n    }\r\n\r\n    get nextSibling() {\r\n        return this.hasMore ? this.#parent.#children[this.index + 1] : undefined;\r\n    }\r\n\r\n    get previousSibling() {\r\n        return this.index > 0 ? this.#parent.#children[this.index - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Clear all #children\r\n     */\r\n    clear() {\r\n        if (this.#children) {\r\n            this.#children.forEach(o => o.release?.());\r\n            this.#children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally, if called externally, \r\n     * make sure node is removed from parent \r\n     */\r\n    release() {\r\n        this.clear();\r\n        this.#key = null;\r\n        this.value = null;\r\n        this.#parent = null;\r\n    }\r\n\r\n    /**\r\n     * Walk down the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     * @param {Boolean} flat Navigate all nodes out of subtree\r\n     */\r\n    *down(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (node.#children?.length) {\r\n            for (let child of node.#children) {\r\n                yield* this.down(child, values, true, reverse, flat);\r\n            }\r\n        }\r\n        if (flat) {\r\n            const item = node.nextSibling || node.parent.nextSibling;\r\n            if (item) yield* this.down(item, values, true, reverse, flat);\r\n        }\r\n        /*\r\n        */\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk up the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     */\r\n    *up(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (flat) {\r\n            let item = node.previousSibling;\r\n            item = item?.isFolder ? item.lastChild : item\r\n            if (item) yield* this.up(item, values, true, reverse, flat);\r\n        }        \r\n        if (node.parent) {\r\n            yield* this.up(node.parent, values, true, reverse, flat);\r\n        }\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk through all nodes\r\n     * @param {*} node \r\n     */\r\n    walk = this.down;\r\n\r\n    /**\r\n     * Simulate array function \"forEach\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */\r\n    forEach(callback, flat = false, reverse = false) {\r\n        this.every((node, index) => {\r\n            callback(node, index);\r\n            return true;\r\n        }, flat, reverse);\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"every\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    every(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let sts = true;\r\n        let i = 0;\r\n        for (let node of it) {\r\n            sts = callback(node, i++);\r\n            if (!sts) break;\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"find\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    find(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let i = 0;\r\n        for (let node of it) {\r\n            if (callback(node, i++)) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"filter\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only childrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    filter(callback, flat, reverse) {\r\n        return [...this.#filtered(callback, flat, reverse)];\r\n    }\r\n\r\n    *#filtered(callback, flat, reverse) {\r\n        const it = this.iterate(flat, reverse);\r\n        for (let node of it) {\r\n            let res = callback(node);\r\n            if (res) yield node;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Iterate all nodes\r\n     * @param {boolean} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {boolean} reverse If set, will iterate up the tree\r\n     */\r\n    *iterate(flat, reverse) {\r\n        reverse ? yield* this.up(this, false, false, false, flat) : yield* this.down(this, false, false,  false, flat);\r\n    }\r\n\r\n    /**\r\n     * Add a new Tree to the tree.\r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    append(key, value = key) {\r\n        let newOne = undefined;\r\n        if (key instanceof Tree) {\r\n            key.#parent = this;\r\n            key.#level = this.#level + 1;\r\n            newOne = key;\r\n        } else {\r\n            newOne = new Tree(key, value, this);\r\n        }\r\n        this.#folder = true;\r\n        this.#children ??= [];\r\n        this.#children.push(newOne);\r\n        return newOne;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method and Array.prototype.push() \r\n     * to add a new Tree to the tree.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    insert(parentNodeKey, key, value = key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === parentNodeKey) {\r\n                const newOne = new Tree(key, value, node);\r\n                this.#folder = true;\r\n                this.#children ??= [];\r\n                node.#children.push(newOne);\r\n                return newOne;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove node from tree. If key is set, will search for first node with matching key.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n\r\n        const me = this;\r\n\r\n        if (key) {\r\n            const node = me.findByKey(key);\r\n            node?.remove();\r\n            return node;\r\n        }\r\n\r\n        if (me.isRoot) throw new Error('Root node can\\'t be removed!');\r\n        const node = me.parent;\r\n        const filtered = node.#children.filter(c => c !== me);\r\n        if (filtered.length !== node.#children.length) {\r\n            node.#children = filtered;\r\n            return me;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method to retrieve the given node in the tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    findByKey(key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convert tree into array list\r\n     * @returns \r\n     */\r\n    flatten(values, inclusive, reverse) {\r\n        return [...this.down(this, values, inclusive, reverse)];\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) Tree.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.#children?.map(o => o.toJSON()) || {};\r\n        return this.isLeaf ? { key: this.key, value: this.value } :\r\n            {\r\n                key: this.key,\r\n                value: this.value,\r\n                items: this.#children.map(o => o.toJSON())\r\n            }\r\n    }\r\n\r\n    /**\r\n     * Make node iterable\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.down();\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof Tree;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) throw new Error('Parent required when data is array');\r\n            raw.forEach(o => Tree.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        const tree = new Tree(obj.key, obj, data ? parent : undefined);\r\n        if (hasParent) parent.append(tree);\r\n        if (items) Tree.from(tree, items);\r\n        return tree;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../base/GSID.mjs\";\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n    #processors = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to register\r\n     * @param {object} processor\r\n     */\r\n    addProcessor(processor) {\r\n        if (!processor) return;\r\n        this.#processors ??= new Set();\r\n        this.#processors.add(processor);\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to remove\r\n     * @param {object} processor \r\n     */    \r\n    removeProcessor(processor) {\r\n        if (processor) this.#processors?.delete(processor);\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Generic event dispatcher, can be overriden to controll when to fire event\r\n     * @param {*} owner \r\n     * @param {*} type \r\n     * @param {*} data \r\n     * @param {*} error \r\n     */\r\n    notify(owner, type, data, error) {\r\n        this.emit(error ? 'error' : type, { type: type, error: error, owner: owner, data: data }, true);\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.#processors?.forEach(c => c.postRead?.(data));\r\n            if (data) me.notify(owner, 'read', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'read', data, e);\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.#processors?.forEach(c => c.postWrite?.(data));\r\n            if (result) me.notify(owner, 'write', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'write', data, e);\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"../base/GSFunction.mjs\";\r\nimport { GSLoader } from \"../base/GSLoader.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSAbstractReadWrite } from \"./AbstractReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically register in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */\r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */\r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return { ...this.#headers };\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = { ...val };\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */\r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#filter = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#sort = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest', 'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#writer);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('remote', GSReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSData } from \"../base/GSData.mjs\";\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * ReadWrite with cached memory data. \r\n * @Class\r\n */\r\nexport class GSCachedReader extends GSReadWrite {\r\n\r\n    #data = [];\r\n\r\n    #reformat(data = []) {\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        return records;\r\n    }\r\n\r\n    #postFilter(data) {\r\n        const me = this;\r\n        data = GSData.sortData(data, me.sort);        \r\n        let limit = me.limit === 0 ? data.length : me.limit;\r\n        data = data.slice(me.skip, me.skip + limit);\r\n        return data;\r\n    }\r\n\r\n    clear() {\r\n        this.#data = [];\r\n    }\r\n\r\n    append(data) {\r\n        if(!data) return false;\r\n        const me = this;\r\n        data = me.#reformat(data);\r\n        me.#data = me.#data.concat(data);\r\n        return me.#data;\r\n    }\r\n\r\n    remove(data) {\r\n        const me = this;\r\n        me.#data = me.#data.filter(o => o =! data);\r\n        return me.#data;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n\r\n        if (me.#data.length === 0) {\r\n            const data = await super.onRead();\r\n            me.#data = me.#reformat(data);\r\n        }\r\n\r\n        let data = GSData.filterData(me.#data, me.filter, me.fields, me.limit);\r\n        data = me.#postFilter(data);\r\n        return data;\r\n    }\r\n\r\n    disable() {\r\n        this.#data = [];\r\n        super.disable();\r\n    }\r\n\r\n    set search(val) {\r\n        const me = this;\r\n        me.filter = val ? [{value : val}] : [];\r\n        me.read();\r\n        /*\r\n        let data = GSData.filterData(me.#data, [{value : val}]);\r\n        data = me.#postFilter(data);\r\n        me.notify(me, 'read', data);\r\n        */\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSCachedReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('cached', GSCachedReader);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { Tree } from \"../helpers/Tree.mjs\";\r\n\r\n/**\r\n * A module loading TreeNode class\r\n * @module data/TreeNode\r\n */\r\n\r\n/**\r\n * UI mediator between Tree linked nodes and WebComponents\r\n * @Class\r\n */\r\nexport class TreeNode extends Tree {\r\n\r\n    #multi = false;\r\n    #opened = false;\r\n    #focused = false;\r\n    #selected = false;\r\n    \r\n    #focusedNode = undefined;\r\n    #selectedNode = undefined;\r\n    #controllers = undefined;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        super(key, value, parent, level);\r\n\r\n        if (value?.select === true || (this.multi && parent?.selected)) this.selected = true;\r\n        if (value?.focus === true) this.focused = true;\r\n        if (value?.open === true) this.opened = true;\r\n    }\r\n\r\n    addController(controller) {\r\n        const root = this.root;\r\n        (root.#controllers ??= new Set()).add(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.root.#controllers?.delete(controller);\r\n    }\r\n\r\n    /**\r\n     * Is multi selection available\r\n     */\r\n    get multi() {\r\n        return this.root.#multi === true;\r\n    }\r\n\r\n    set multi(val) {\r\n        this.root.#multi = val === true;\r\n    }\r\n\r\n    get visible() {\r\n        if (this.level < 0) return true;\r\n        return this.parent?.opened;\r\n    }\r\n\r\n    /**\r\n     * select single node, removing seelction flag from all other nodes\r\n     */\r\n    get opened() {\r\n        if (this.level < 0) return true;\r\n        return this.isLeaf ? this.parent?.opened : this.#opened;\r\n    }\r\n\r\n    set opened(val) {\r\n        val = val === true;\r\n        if (val) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus single node, removing focus flag from all other nodes\r\n     */\r\n    get focused() {\r\n        return this.#focused;\r\n    }\r\n\r\n    set focused(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const changed = this.#focused != val;\r\n        const focusedNode = root.focusedNode();\r\n        \r\n        root.#focusedNode = undefined;        \r\n        this.#focused = val;\r\n        if (focusedNode && focusedNode !== this) {\r\n            focusedNode.focused = false;\r\n        }\r\n\r\n        if (val) root.#focusedNode = this;\r\n        if (changed) root.#controllers?.forEach((c) => c.onFocusChanged?.(this));\r\n    }\r\n\r\n    /**\r\n     * Select single or multi node, depending on multi selection flag\r\n     * If single, remove selection flag from all other nodes\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    set selected(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const selectedNode = root.selectedNode();\r\n        const changed = this.#selected != val;\r\n        this.#selected = val;\r\n        if (val) {\r\n            if (selectedNode && selectedNode !== this && !root.multi) {\r\n                selectedNode.selected = false;\r\n            }\r\n            root.#selectedNode = this;\r\n        }\r\n        if (changed) {\r\n            root.#controllers?.forEach((c) => c.onSelectionChanged?.(this, selectedNode));\r\n            if (root.multi) root.#controllers?.forEach((c) => c.onSelectionChanged?.(this.parent, selectedNode));\r\n        } \r\n    }\r\n\r\n    get isPartialySelected() {\r\n        return this.selected && this.hasChildren && this.nodes.length > this.nodes.filter(n => n.selected).length;\r\n    }\r\n\r\n    /* hide from public\r\n    get host() {\r\n        return this[Symbol.for('gs-element')];\r\n    }\r\n\r\n    set host(el) {\r\n        this[Symbol.for('gs-element')] = el;\r\n    }\r\n    */\r\n\r\n    selectAll() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            this.deselectAll();\r\n            this.selected = true;\r\n            return\r\n        }\r\n        this.#selectionFlag(true);\r\n        root.#selectedNode = this;\r\n        root.#controllers?.forEach((c) => c.onSelectAll?.(root));\r\n    }\r\n\r\n    deselectAll() {\r\n        const root = this.root;\r\n        this.#selectionFlag(false);\r\n        root.#selectedNode = undefined;\r\n        root.#controllers?.forEach((c) => c.onDeselectAll?.(root));\r\n    }\r\n\r\n    /**\r\n     * Return last focused node\r\n     * @returns \r\n     */\r\n    focusedNode() {\r\n        const node = this.root.#focusedNode;\r\n        return node?.focused ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * Return last selected node\r\n     * @returns \r\n     */\r\n    selectedNode() {\r\n        const node = this.root.#selectedNode;\r\n        return node?.selected ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * List all selected nodes.\r\n     * TODO; refactor when Iterator.filter become available \r\n     * @returns \r\n     */\r\n    selectedNodes() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            const node = root.selectedNode()\r\n            return node?.selected ? [node] : [];\r\n        }\r\n        const result = [];\r\n        for (let node of root.walk()) {\r\n            if (node.selected) result.push(node);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Call from external controller data must be refresshed (to notify UI optionally)\r\n     * @param {*} root \r\n     */\r\n    refresh(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onRefresh?.(this));\r\n    }\r\n\r\n    /**\r\n     * Notify controllers about data loading (from async controller)\r\n     * @param {*} root \r\n     */\r\n    loading(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onLoad?.(this));\r\n    }\r\n\r\n    expandAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.expand(root);\r\n        }\r\n    }\r\n\r\n    collapseAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.collapse(root);\r\n        }\r\n    }\r\n\r\n    expand(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        if (!me.parent?.opened) {\r\n            me.parent?.expand(root);\r\n        }\r\n        const update = !me.opened;\r\n        me.#opened = true;\r\n        if (update) me.#expanded(root);\r\n        //me.nodes?.filter( n => !n.opened).forEach(c => c.refresh(root));\r\n        me.nodes?.forEach(c => c.refresh(root));\r\n    }\r\n\r\n    collapse(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        const update = me.#opened || me.parent.#opened;\r\n        me.nodes?.filter(n => n.opened || n.parent.opened).forEach(o => o.collapse(root));\r\n        //me.nodes?.forEach(o => o.collapse(root));\r\n        me.#opened = false;\r\n        if (update) me.#collapsed(root);\r\n    }\r\n\r\n    select(val = true) {\r\n        this.selected = val === true;\r\n    }\r\n\r\n    #expanded(root) {\r\n        root.#controllers?.forEach((c) => c.onExpand?.(this));\r\n    }\r\n\r\n    #collapsed(root) {\r\n        root.#controllers?.forEach((c) => c.onCollapse?.(this));\r\n    }\r\n\r\n    release() {\r\n        if (this.#selected) this.selected = false;\r\n        super.release();\r\n    }\r\n\r\n    append(key, value = key) {\r\n        const me = this;\r\n        const node = super.append(key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onAppend?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    insert(parentNodeKey, key, value = key) {\r\n        const me = this;\r\n        const node = super.insert(parentNodeKey, key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onInsert?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    remove() {\r\n        const node = super.remove();\r\n        if (node) this.root.#controllers?.forEach((c) => c.onInsert?.(node));\r\n        return node;\r\n    }\r\n\r\n    #selectionFlag(val = false) {\r\n        val = val === true\r\n        for (let node of this.walk()) {\r\n            node.selected = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) TreeNode.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.nodes?.map(o => o.toJSON()) || {};\r\n        const obj = Object.assign({\r\n            key: this.key,\r\n            opened: this.#opened,\r\n            focused: this.#focused,\r\n            selected: this.#selected,\r\n            items: undefined\r\n        }, this.value);\r\n        obj.items = this.nodes?.map(o => o.toJSON());\r\n        return obj;\r\n    }\r\n\r\n    static get root() {\r\n        return new TreeNode(null, null, null, -1);\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof TreeNode;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) return TreeNode.from(TreeNode.root, raw);\r\n            raw.forEach(o => TreeNode.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        obj.leaf = !Array.isArray(items);\r\n        const tree = new TreeNode(obj.key, obj, data ? parent : undefined);\r\n        if (items) TreeNode.from(tree, items);\r\n        if (hasParent) parent.append(tree);\r\n        return tree;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { TreeNode } from \"./TreeNode.mjs\";\r\n\r\n/**\r\n * A module loading GSTreeReader class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for reading Tree nodes\r\n * @Class\r\n */\r\nexport class GSTreeReader extends GSReadWrite {\r\n\r\n    #data = TreeNode.root;\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    async write(val) {\r\n        throw new Error('Writer not available for TreeReader')\r\n    }\r\n\r\n    async read(owner) {\r\n        const me = this;\r\n        let node = undefined;\r\n        const data = await super.read(owner);\r\n        if (!this.#data) {\r\n            node = TreeNode.from(data);\r\n            this.#data = node;\r\n        } else {\r\n            const parent = me.filter?.length > 0 ? me.#data.findByKey(me.filter[0]) : me.#data;\r\n            parent.clear();\r\n            node = parent.fromJSON(data);\r\n        }\r\n        me.filter = undefined;\r\n        me.notify(owner, 'read', node);\r\n        return node;\r\n    }\r\n\r\n    disable() {\r\n        super.disable();\r\n        this.#data?.release();\r\n    }\r\n\r\n    notify(owner, type, data, error) {\r\n        const isNode = data instanceof TreeNode;\r\n        if (!error && !isNode && type === 'read') return;\r\n        super.notify(owner, type, data, error);\r\n    }\r\n\r\n    /**\r\n     * Called from Tree when node is expanded \r\n     * @param {*} node \r\n     */\r\n    async onExpand(node) {\r\n        if (node.hasChildren) return;\r\n        node.loading();\r\n        this.filter = node.key;\r\n        return await this.read();\r\n    }\r\n\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSTreeReader} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSTreeReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('tree', GSTreeReader);\r\n    }\r\n\r\n}","import { Directive, directive, nothing } from \"../lib.mjs\";\r\n\r\nconst definition = {\r\n    'action': 'gsAction',\r\n    'anchor': 'gsAnchor',\r\n    'attribute': 'gsAttribute',\r\n    'call': 'gsCall',\r\n    'exec': 'gsExec',\r\n    'inject': 'gsInject',\r\n    'property': 'gsProperty',\r\n    'swap': 'gsSwap',\r\n    'target': 'gsTarget',\r\n    'template': 'gsTemplate',\r\n    'toggle': 'gsToggle',\r\n    'trigger': 'gsTrigger',\r\n    'value': 'gsValue'\r\n}\r\n\r\nconst template = {\r\n    'gsAction': undefined,\r\n    'gsAnchor': undefined,\r\n    'gsAttribute': undefined,\r\n    'gsCall': undefined,\r\n    'gsExec': undefined,\r\n    'gsInject': undefined,\r\n    'gsProperty': undefined,\r\n    'gsSwap': undefined,\r\n    'gsTarget': undefined,\r\n    'gsTemplate': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTrigger': undefined,\r\n    'gsValue': undefined\r\n}\r\n\r\nclass DatasetDirective extends Directive {\r\n\r\n    render(obj) {\r\n        console.log(obj);\r\n        return nothing;\r\n    }\r\n\r\n    update(part, [obj, flat = true]) {\r\n\r\n        if (!obj) return nothing;\r\n\r\n        const dataset = part.element.dataset;\r\n        const srcset = obj.dataset || obj;\r\n        const isDataset = srcset instanceof DOMStringMap;\r\n\r\n        if (isDataset) {\r\n            Object.assign(dataset, srcset);\r\n        } \r\n        \r\n        if (flat) this.#remap(dataset, obj);\r\n\r\n        return nothing;\r\n    }\r\n\r\n    #remap(dataset, obj) {\r\n        const opt = Object.assign({}, template);\r\n        const list = Object.entries(obj).filter(v => Object.hasOwn(definition, v[0]));\r\n        if (list.length > 0) {\r\n            list.forEach(kv => opt[definition[kv[0]]] = kv[1]);\r\n            Object.assign(dataset, opt);\r\n        }\r\n    }\r\n}\r\n\r\nexport const dataset = directive(DatasetDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\n\r\n/**\r\n * Generic object property descritptor getter\r\n * @param {Object} instance \r\n * @returns {PropertyDescriptor}\r\n */\r\nfunction descriptors(instance) {\r\n  return Object.entries(Object.getOwnPropertyDescriptors(instance));\r\n}\r\n\r\n/**\r\n * List of all object property descriptors \r\n * @param {Object} instance Object instance \r\n * @returns {Array<PropertyDescriptor>}\r\n */\r\nfunction listProperties(instance) {\r\n  return descriptors(instance)\r\n    .filter(e => typeof e[1].value !== 'function')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List all object property getters\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGetters(instance) {\r\n  return descriptors(Reflect.getPrototypeOf(instance))\r\n    .filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List of all getteble properties from an object\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGettable(instance) {\r\n  return new Set([...listGetters(instance), ...listProperties(instance)]);\r\n}\r\n\r\n/**\r\n * Parse string literal template into Lit html instance\r\n * @param {*} tpl \r\n * @param {*} params \r\n * @returns {function}\r\n */\r\nexport function literalTemplate(tpl, params) {\r\n  const names = Array.from(listGettable(params));\r\n  const vals = names.map(v => params[v]);\r\n  names.push('html');\r\n  vals.push(html);\r\n  return new Function(...names, `return html\\`${tpl}\\`;`)(...vals);\r\n}","/**\r\n * A clone of classMap directive to support CSS directive.\r\n * Lit classs is not expoed, so we have to clone it and create our own.\r\n */\r\n\r\nimport { Directive, PartType, directive, noChange } from \"../lib.mjs\";\r\n\r\nclass CssMapDirective extends Directive {\r\n\r\n    constructor(partInfo) {\r\n        super(partInfo);\r\n        if (partInfo.type !== PartType.ATTRIBUTE ||\r\n            partInfo.name !== 'css' ||\r\n            partInfo.strings?.length > 2) {\r\n            throw new Error('`classMap()` can only be used in the `css` attribute ' +\r\n                'and must be the only part in the attribute.');\r\n        }\r\n    }\r\n\r\n    render(classInfo) {\r\n        // Add spaces to ensure separation from static classes\r\n        return (' ' +\r\n            Object.keys(classInfo)\r\n                .filter((key) => classInfo[key])\r\n                .join(' ') +\r\n            ' ');\r\n    }\r\n\r\n    update(part, [classInfo]) {\r\n\r\n        // Remember dynamic classes on the first render\r\n        if (this._previousClasses === undefined) {\r\n            this._previousClasses = new Set();\r\n            if (part.strings !== undefined) {\r\n                this._staticClasses = new Set(part.strings\r\n                    .join(' ')\r\n                    .split(/\\s/)\r\n                    .filter((s) => s !== ''));\r\n            }\r\n\r\n            for (const name in classInfo) {\r\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\r\n                    this._previousClasses.add(name);\r\n                }\r\n            }\r\n            return this.render(classInfo);\r\n        }\r\n\r\n        const classList = part.element.classList;\r\n\r\n        // Remove old classes that no longer apply\r\n        for (const name of this._previousClasses) {\r\n            if (!(name in classInfo)) {\r\n                classList.remove(name);\r\n                this._previousClasses.delete(name);\r\n            }\r\n        }\r\n\r\n        // Add or remove classes based on their classMap value\r\n        for (const name in classInfo) {\r\n            // We explicitly want a loose truthy check of `value` because it seems\r\n            // more convenient that '' and 0 are skipped.\r\n            const value = !!classInfo[name];\r\n            if (value !== this._previousClasses.has(name) &&\r\n                !this._staticClasses?.has(name)) {\r\n                if (value) {\r\n                    classList.add(name);\r\n                    this._previousClasses.add(name);\r\n                } else {\r\n                    classList.remove(name);\r\n                    this._previousClasses.delete(name);\r\n                }\r\n            }\r\n        }\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * A directive that applies dynamic CSS classes.\r\n *\r\n * This must be used in the `css` attribute and must be the only part used in\r\n * the attribute. It takes each property in the `classInfo` argument and adds\r\n * the property name to the element's `classList` if the property value is\r\n * truthy; if the property value is falsey, the property name is removed from\r\n * the element's `css`.\r\n *\r\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\r\n * truthy.\r\n *\r\n * @param classInfo\r\n */\r\nexport const cssMap = directive(CssMapDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class ButtonTypes {\r\n\r\n    static values = ['button', 'reset', 'submit'];\r\n\r\n    static is(val) {\r\n        return ButtonTypes.values.includes(val);\r\n    }\r\n\r\n    static isReest(val) {\r\n        return ButtonTypes.values.indexOf(val) === 1;\r\n    }\r\n\r\n    static isSubmit(val) {\r\n        return ButtonTypes.values.indexOf(val) === 2;\r\n    }\r\n} \r\n\r\nexport const buttonType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ButtonTypes.is(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ColorTypes = ['', 'primary', 'secondary', 'dark', 'light', 'info', 'warning', 'danger', 'alert', 'link', 'success'];\r\n\r\nexport const color = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ColorTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n\r\nexport const InputTypes = ['checkbox', 'radio', 'switch', 'number', 'range', 'text', 'passsword', 'email', 'url', 'file'];\r\n\r\nexport const inputType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && InputTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const NavTypes = ['', 'pills', 'tabs', 'underline'];\r\n\r\nexport const nav = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && NavTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PlacementTypes {\r\n\r\n    static values = ['center', 'left', 'right', 'start', 'end', 'top', 'bottom'];\r\n\r\n    static includes(val) {\r\n        return PlacementTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        return PlacementTypes.values.indexOf(val) > 4;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = PlacementTypes.values.indexOf(val)\r\n        return idx > 0 && idx < 5;\r\n    }\r\n\r\n    static isCenter(val) {\r\n        return PlacementTypes.values.indexOf(val) === 0;\r\n    }\r\n\r\n    static isBefore(val) {\r\n        return ['left', 'start', 'top'].includes(val);\r\n    }\r\n\r\n    static isAfter(val) {\r\n        return ['right', 'end', 'bottom'].includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const placement = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PlacementTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PositionTypes {\r\n\r\n    static values = ['absolute', 'fixed', 'relative', 'sticky', 'static'];\r\n\r\n    static includes(val) {\r\n        return PositionTypes.values.includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const position = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PositionTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const SizeTypes = { 'default' : '', 'normal': '',  'medium': '', 'small': 'sm', 'large': 'lg', 'big' : 'lg' };\r\n\r\nexport const size = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && Object.hasOwn(SizeTypes, newVal);\r\n    }\r\n\r\n};","export const stringArrayConverter = {\r\n    fromAttribute: (value, type) => {\r\n        return (value || '').split(',');\r\n    },\r\n    toAttribute: (value, type) => {\r\n        return (value || []).join(',');\r\n    }\r\n  }","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for elment move events, properly handling mouse events.\r\n */\r\nexport class ElementMoveController {\r\n\r\n  #host;\r\n  #element;\r\n  #attached = false;\r\n\r\n  #cursorX = 0;\r\n  #cursorY = 0;\r\n\r\n  #mouseUpCallback;\r\n  #mouseDownCallback;\r\n  #mouseMoveCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n    me.#mouseUpCallback = me.#onMouseUp.bind(me);\r\n    me.#mouseDownCallback = me.#onMouseDown.bind(me);\r\n    me.#mouseMoveCallback = me.#onMouseMove.bind(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  attach(element) {\r\n    const me = this;\r\n    if (!me.#attached) {\r\n      me.#element = element;\r\n      me.#attached = true;\r\n      me.#host.attachEvent(me.#element, 'mousedown', me.#mouseDownCallback);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.#cursorX = 0;\r\n    me.#cursorY = 0;\r\n    me.#host.removeEvent(document, 'mouseup', me.#mouseUpCallback);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n  * Call host onStartMove function\r\n  * @param {MouseEvent} e \r\n  */\r\n  #onMouseDown(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n    me.#host.onStartMove?.(e, me.#cursorX, me.#cursorY);\r\n    me.#host.attachEvent(document, 'mouseup', me.#mouseUpCallback, true);\r\n    me.#host.attachEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n   * Remove mousemove listener and call host onEndMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseUp(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n    return me.#host.onEndMove?.(e, me.#cursorX, me.#cursorY);\r\n  }\r\n\r\n  /**\r\n   * Call host onMouseMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseMove(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n\r\n    me.#host.onMouseMove?.(e, me.#cursorX, me.#cursorY);\r\n\r\n    if (me.#cursorX < e.clientX) {\r\n      me.#host.onCursorRight?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorX > e.clientX) {\r\n      me.#host.onCursorLeft?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    if (me.#cursorY < e.clientY) {\r\n      me.#host.onCursorUp?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorY > e.clientY) {\r\n      me.#host.onCursorDown?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from \"../GSElement.mjs\";\r\n\r\n/**\r\n * Controller for child element navigation / selection / focusing\r\n */\r\nexport class ElementNavigationController {\r\n\r\n  #host;\r\n  #attached;\r\n  #focused;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#attached = false;\r\n  }\r\n\r\n  get circular() {\r\n    return this.#host?.circular === true;\r\n  }\r\n\r\n  get multiple() {\r\n    return this.#host?.multiple === true;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host.active;\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */\r\n  init() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */  \r\n  attach(el) {\r\n    const me = this;\r\n    if (me.#attached) return;\r\n    me.#attached = true;\r\n    me.#host.attachEvent(el, 'keydown', e => me.onKeyDown(e));\r\n    me.#host.attachEvent(el, 'keyup', e => me.onKeyUp(e));\r\n    me.#host.attachEvent(el, 'click', e => me.onClick(e));\r\n    me.#host.attachEvent(el, 'focusin', e => me.onFocusIn(e));\r\n    me.#host.attachEvent(el, 'focusout', e => me.onFocusOut(e));\r\n  }\r\n\r\n  previous() {\r\n    const me = this;\r\n    let el = me.#focused?.previousElementSibling;\r\n    while (el?.disabled) el = el.previousElementSibling;\r\n    if (me.circular && !el) el = me.lastElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  next() {\r\n    const me = this;\r\n    let el = me.#focused?.nextElementSibling;\r\n    while (el?.disabled) el = el.nextElementSibling;\r\n    if (me.circular && !el) el = me.firstElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    const me = this;\r\n    const active = me.selected;\r\n    if (me.multiple) {\r\n      active.forEach(el => {\r\n        el.active = false;\r\n        el.blur();\r\n      });\r\n    } else if (active) {\r\n      active.active = false;\r\n      active.blur();\r\n    }\r\n    me.#focused = undefined;\r\n    me.#host?.emit('group-reset', undefined, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element selected\r\n   * @param {*} el \r\n   */\r\n  #onSelected(el) {\r\n    const me = this;\r\n    me.#host?.onSelected?.(el);\r\n    me.#host?.emit('group-selected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element deselected\r\n   * @param {*} el \r\n   */\r\n  #onDeselected(el) {\r\n    this.#host?.onDeselected?.(el);\r\n    this.#host?.emit('group-deselected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  #onFocused(el) {\r\n    this.#host?.onFocused?.(el);\r\n    this.#host?.emit('group-focused', el, true);\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  #isNavigable(el) {\r\n    return this.#host?.isNavigable ? this.#host?.isNavigable(el) : true;\r\n  }\r\n\r\n  #focus(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    me.#focused = el;\r\n    if (el) {\r\n      me.#onFocused(me.#focused);\r\n    }\r\n  }\r\n\r\n  #toggle(el) {\r\n    if (!el) return;\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    if (el.active) {\r\n      me.#onSelected(el);\r\n    } else {\r\n      me.#onDeselected(el);\r\n    }\r\n  }\r\n\r\n  #select(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n\r\n    const active = me.selected;\r\n    if (active && !me.multiple) {\r\n      active.active = false;\r\n      me.#toggle(active);\r\n    }\r\n\r\n    if (me.multiple) {\r\n      el.active = !el.active;\r\n    } else {\r\n      el.active = true;\r\n    }\r\n    me.#toggle(el);\r\n  }\r\n\r\n  onFocusOut(e) {\r\n    const me = this;\r\n    //if (me.#focused === e.target) me.#focused = undefined;\r\n  }\r\n\r\n  onFocusIn(e) {\r\n    const me = this;\r\n    me.#focus(e.target)\r\n  }\r\n\r\n  onClick(e) {\r\n    const me = this;\r\n    const el = e.composedPath()\r\n    .filter(el => el instanceof GSElement)\r\n    .filter(el => el.parentComponent === me.#host).pop();\r\n    if (!me.#isNavigable(el)) return;\r\n    if (e.ctrlKey) me.reset();\r\n    me.#onDeselected(me.selected);\r\n    me.#select(el);\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        me.next();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'Space':\r\n      case 'Enter':\r\n        me.#focused?.click();\r\n        break;\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEventBus } from \"../base/GSEventBus.mjs\";\r\n\r\n/**\r\n * Controller for multiple elements groups\r\n */\r\nexport class GroupController {\r\n\r\n  #host;\r\n\r\n  #busEvent;\r\n  #busCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    if (me.#host.group) {\r\n      me.#busCallback = me.#onBusEvent.bind(me);\r\n      me.#busEvent = GSEventBus.register(me.#host.clazzName);\r\n      me.#busEvent.on(me.#host.group, me.#busCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#busEvent?.off(me.#host.group, me.#busCallback);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  #onBusEvent(e) {\r\n    this.#host.onBusEvent?.(e);\r\n  }\r\n\r\n  notify(data) {\r\n    const me = this;\r\n    me.#busEvent?.emit(me.#host.group, {owner: me.#host, item:data}); \t\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\n\r\nexport class GSAccordionElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    autoclose: { type: Boolean },\r\n    cssItem: { reflect: true, attribute: 'css-item' },\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    data: { type: Array }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.settings;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n       @notify=\"${me.#onNotify.bind(me)}\"\r\n       @click=\"${me.#onClick}\" \r\n       @keyup=\"${me.#onKeyUp}\" \r\n       class=\"accordion ${classMap(me.renderClass())}\">\r\n       ${this.#renderItems()}\r\n       <slot></slot></div>`\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-accordion-item');\r\n  }\r\n\r\n  get settings() {\r\n    const cfg = this.constructor.properties;\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n  }\r\n\r\n  close() {\r\n    this.#state(false);\r\n  }\r\n\r\n  open() {\r\n    this.#state(true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-accordion-item generated\r\n        .opened=\"${ifDefined(o.disabled === true)}\" \r\n        message=\"${ifDefined(o.message)}\" \r\n        template=\"${ifDefined(o.template)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-accordion-item>`;\r\n    });\r\n  }\r\n\r\n  #state(val = false) {\r\n    this.items.forEach(el => el.opened = val);\r\n    this.notify();\r\n  }\r\n\r\n  #onNotify(e) {\r\n    const me = this;\r\n    if (me.autoclose && e.target.opened) {\r\n      me.items.filter(el => el != e.target).forEach(el => el.opened = false);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const isItemCloser = e?.composedPath()[0]?.matches('.accordion-button');\r\n    if(isItemCloser) e.target.toggle?.();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        e.target.close?.();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.target.open?.();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSAccordionItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    message: { reflect: true, },\r\n    title: { reflect: true, },\r\n    opened: { type: Boolean, reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-ACCORDION';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const owner = me.owner;\r\n    const cssHeader = me.cssHeader || owner?.cssHeader;\r\n    const cssBody = me.cssBody || owner?.cssBody;\r\n    return html`<div class=\"accordion-item ${me.css}\">\r\n             <h2 class=\"accordion-header\">\r\n               <button type=\"button\" \r\n                class=\"accordion-button  ${cssHeader} ${me.opened ? '' : 'collapsed'}\"> \r\n                 ${me.translate(me.title)}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse  ${cssBody} ${me.opened ? 'show' : ''}\">\r\n               <div class=\"accordion-body\">\r\n                   ${me.translate(me.message)}\r\n                   ${me.renderTemplate()}\r\n                   <slot></slot>\r\n               </div>\r\n             </div>      \r\n     </div>`\r\n  }\r\n\r\n  open() {\r\n    this.notify(true);\r\n  }\r\n  \r\n  close() {\r\n    this.notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.notify(!this.opened);\r\n  }\r\n\r\n  notify(val = false) {\r\n    const me = this;\r\n    me.opened = val;\r\n    super.notify();\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-accordion') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSAlertElement extends GSElement {\r\n\r\n    static properties = {\r\n        message: { reflect: true },\r\n        color: { ...color },\r\n        closed: { reflect: true, type: Boolean },\r\n        closable: { reflect: true, type: Boolean },\r\n        delay: { reflect: true, type: Number },\r\n    }\r\n\r\n    #ref;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.delay = 1;\r\n        this.#ref = createRef();\r\n        this.#data = this.#proxify(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div role=\"alert\" dir=\"${ifDefined(me.direction)}\" ${ref(me.#ref)} \r\n            @mouseover=\"${() => me.#pause = true}\"\r\n            @mouseout=\"${() => me.#pause = false}\"\r\n            class=\"alert fade ${classMap(me.renderClass())}\" >\r\n            ${me.#first}\r\n            ${me.renderTemplate()}\r\n            <slot></slot>\r\n            ${me.#second}\r\n        </div>`;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#handleBillboard();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        if (!changed.has('opened')) return;\r\n        this.#handleBillboard();\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': !me.closed,\r\n            'alert-dismissible': me.closable,\r\n            [`alert-${this.color}`]: me.color,\r\n\r\n        }\r\n        return css;\r\n    }\r\n\r\n    open() {\r\n        this.notify(false);\r\n    }\r\n\r\n    close() {\r\n        this.notify(true);\r\n    }\r\n\r\n    toggle() {\r\n        this.notify(!this.closed);\r\n    }\r\n\r\n    notify(val = false) {\r\n        const me = this;\r\n        me.closed = val;\r\n        if (me.closed) setTimeout(() => { me.#ref.value.classList.toggle('d-none', true) }, 250);\r\n        super.notify();\r\n    }\r\n\r\n    get isBillboard() {\r\n        return this.#data?.length > 0;\r\n    }\r\n\r\n    get #message() {\r\n        return this.translate(this.message);\r\n    }\r\n\r\n    get #first() { return this.rtl ? this.#button : this.#message; };\r\n\r\n    get #second() { return this.rtl ? this.#message : this.#button; };\r\n\r\n    get #button() {\r\n        return this.closable ? html`<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"${this.close}\"></button>` : '';\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, {message:{}}));\r\n    }\r\n\r\n    #handleBillboard() {\r\n        const me = this;\r\n        if (me.closed) {\r\n            clearInterval(me.#interval);\r\n            me.#interval = 0;\r\n        } else {\r\n            me.#billboard();\r\n        }        \r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        if (!me.isBillboard) return;\r\n        const items = me.#data;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].message;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].message;\r\n        }, me.delay * 1000);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-alert');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, size, buttonType, ButtonTypes, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSButtonElement extends GSElement {\r\n\r\n  static properties = {\r\n    type: { ...buttonType }, // reset, submit\r\n    size: { ...size }, // small, large, normal\r\n    color: { ...color },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    toggleColor: { ...color, attribute : 'toggle-color' },\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    outline: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    toggling: { type: Boolean },\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    text: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'button';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<button part=\"button\" role=\"button\" ${ref(me.#refEl)}\r\n        dir=\"${ifDefined(me.direction)}\"\r\n        type=\"${ifDefined(me.type)}\" \r\n        class=\"btn ${classMap(me.renderClass())}\" \r\n        title=\"${ifDefined(me.#tooltip)}\"\r\n        ?disabled=${me.disabled}\r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"\r\n        @click=\"${me.#onClick}\">\r\n          ${me.#first} ${me.#second}</button>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n      'focus-ring': document.activeElement === me,\r\n      [`text-${me.text}`]: me.text,\r\n      [`btn-${size}`]: size,\r\n      [`btn-outline-${me.color}`]: me.outline,\r\n      [`btn-${me.color}`]: !me.outline && me.color,\r\n      [`btn-${me.toggleColor}`]: me.active && me.toggleColor,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    if(me.toggling) me.toggle();\r\n    me.iconEl?.animate();\r\n    if (me.isReset) return me.form?.reset();\r\n    if (me.isSubmit) return me.form?.submit();\r\n    me.notify();\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get isReset() {\r\n    return ButtonTypes.isReest(this.type);\r\n  }\r\n\r\n  get isSubmit() {\r\n    return ButtonTypes.isSubmit(this.type);\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form, form');\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #tooltip() {\r\n    return this.translate(this.tooltip);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-button');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { unsafeHTML, classMap, html, ifDefined, css } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\n\r\nexport class GSCalendarElement extends GSElement {\r\n\r\n  static style = css`.year::-webkit-outer-spin-button,.year::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;} .year {-moz-appearance: textfield;} .day:focus{font-weight: bold;}`\r\n\r\n  static properties = {\r\n    date: {},\r\n    target: {},\r\n    format: { hasChanged: notEmpty },\r\n    year: { type: Number },\r\n    month: { type: Number, hasChanged: numGE0 },\r\n    day: { type: Number, hasChanged: numGE0 },\r\n    arrovPrev: { attribute: 'arrow-prev' },\r\n    arrowNext: { attribute: 'arrow-next' },\r\n    cssDays: { attribute: 'css-days' },\r\n    cssToday: { attribute: 'css-today' },\r\n    cssWeeks: { attribute: 'css-weeks' },\r\n    cssMonth: { attribute: 'css-month' },\r\n    cssYear: { attribute: 'css-year' },\r\n    cssNav: { attribute: 'css-nav' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    minYear: { attribute: 'year-min', type: Number },\r\n    maxYear: { attribute: 'year-max', type: Number },\r\n  }\r\n\r\n  #date;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.#date = new GSDate();\r\n    me.#date.locale = GSUtil.locale;\r\n    me.locale = GSUtil.locale;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.minYear = 1900;\r\n    me.maxYear = 2100;\r\n    me.arrowPrev = '&#10094;';\r\n    me.arrowNext = '&#10095;';\r\n    me.cssNav = 'btn-light';\r\n    me.cssToday = 'btn-secondary';\r\n    me.cssSelected = 'btn-primary';\r\n    me.cssWeeks = 'fw-bold text-bg-dark';\r\n    me.cssYear = 'form-control fs-5 fw-bold border-0 text-center m-1 p-0';\r\n    me.cssMonth = 'form-control fs-3 fw-bold border-0 text-center m-1 p-0';\r\n  }\r\n\r\n  get date() {\r\n    const me = this;\r\n    //return this.#date.toISOString();\r\n    return new Proxy(this.#date, {\r\n      set(target, prop, value) {\r\n        if (typeof target[prop] != 'function') {\r\n          target[prop] = value;\r\n          me.#update();\r\n        }\r\n        return true;\r\n      },\r\n      get(target, prop, receiver) {\r\n        const value = target[prop];\r\n        if (value instanceof Function) {\r\n          return function (...args) {\r\n            try {\r\n              return value.apply(this === receiver ? target : this, args);\r\n            } finally {\r\n              me.#update();\r\n            }\r\n          };\r\n        }\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  previousMonth() {\r\n    const me  =this;\r\n    if (me.month == 0) {\r\n      me.month = 11;\r\n      me.year--;\r\n    } else {\r\n      me.month--;\r\n    }\r\n  }\r\n\r\n  nextMonth() {\r\n    const me  =this;\r\n    if (me.month == 11) {\r\n      me.month = 0;\r\n      me.year++;\r\n    } else {\r\n      me.month++;\r\n    } \r\n  }\r\n\r\n  previousYear() {\r\n    this.year--;\r\n  }\r\n\r\n  nextYear() {\r\n    this.year++;\r\n  }\r\n\r\n  formatted(date) {\r\n    const me = this;\r\n    return (date || me.#date).format(me.format, me.locale);\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    const date = new GSDate(me.#date);\r\n    me.#updateTarget(date);\r\n    me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#date.year = me.year;\r\n    me.#date.month = me.month;\r\n    me.#date.day = me.day;\r\n    me.#date.locale = me.locale;\r\n\r\n    const week = GSDate.dayList(true, me.locale).map(v => html`<div class=\"col\">${v}</div>`);\r\n    const months = me.#monthsHTML();\r\n    const year = me.#yearHTML();\r\n\r\n    return html`\r\n          <div class=\"container-fluid text-center ${classMap(me.renderClass())}\"\r\n          dir=\"${ifDefined(me.direction)}\"\r\n          @keydown=\"${me.#onKey}\"\r\n          @click=\"${me.#onDay}\">\r\n          <div class=\"row align-items-center ${me.cssHeader} header\">\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.previousMonth}\" class=\"btn ${me.cssNav} arrow prev\">${unsafeHTML(me.arrowPrev)}</a>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  ${months}\r\n                  ${year}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.nextMonth}\" class=\"btn ${me.cssNav} arrow next\">${unsafeHTML(me.arrowNext)}</a>\r\n              </div>\r\n          </div>\r\n          <div class=\"row weeks ${me.cssWeeks}\">${week}</div>\r\n          ${unsafeHTML(me.#daysHTML())}\r\n      </div>`;\r\n  }\r\n\r\n  #updateTarget(date) {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    const tgt = GSDOM.query(document.documentElement, me.target);\r\n    if (!tgt) return;\r\n\r\n    if (tgt instanceof HTMLInputElement) {\r\n      if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n      return tgt.value = me.formatted(date);\r\n    }\r\n    GSDOM.setHTML(tgt, me.formatted(date));\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.locale = me.#date.locale;\r\n  }\r\n\r\n  #isToday(v, date) {\r\n    const me = this;\r\n    return v && GSUtil.asNum(v) === date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n  }\r\n\r\n  #daysHTML() {\r\n    const me = this;\r\n    const today = new GSDate();\r\n    today.locale = me.locale;\r\n    const list = me.#date.build(me.locale);\r\n    const result = list\r\n      .map(v => {\r\n        const c1 = me.#isToday(v, today) ? me.cssToday : '';\r\n        const c2 = me.#isToday(v, me.#date) ? me.cssSelected : '';\r\n\r\n        const d = v ? `<a tabindex=\"0\" href=\"#\" class=\"btn shadow-none ${c1} ${c2} day\" data-day=\"${v}\">${v}</a>` : ''\r\n        return `<div class=\"col p-0\">${d}</div>`;\r\n      })\r\n      .map((v, i) => {\r\n        if (i === 0) return `<div class=\"row days\">${v}`;\r\n        const isBreak = i % 7 == 0;\r\n        return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n      });\r\n    result.push('</div>');\r\n    return result.join('');\r\n  }\r\n\r\n\r\n  #monthsHTML() {\r\n    const me = this;\r\n    const current = me.#date.MMMM;\r\n    const months = GSDate.monthList(false, me.locale);\r\n    const list = months.map((v, i) => html`<option value=\"${i}\" selected=${ifDefined(current == v ? true : undefined)}>${v}</option>`);\r\n    //const list = GSDate.monthList(false, me.locale).map((v, i) => html`<option value=\"${i}\" ${current == v ? 'selected' : ''}>${v}</option>`);\r\n    return html`<select @change=\"${me.#onMonth}\" name=\"month\" class=\"month ${me.cssMonth}\" value=\"${months.indexOf(current)}\">${list}</select>`;\r\n  }\r\n\r\n  #yearHTML() {\r\n    const me = this;\r\n    return html`<input @change=\"${me.#onYear}\" name=\"year\" class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n  }\r\n\r\n  #onDay(e) {\r\n    GSEvents.prevent(e);\r\n    if (!e.target.classList.contains('day')) return;\r\n    this.day = GSUtil.asNum(e.target.dataset.day, this.day);\r\n  }\r\n\r\n  #onMonth(e) {\r\n    this.month = e.target.selectedIndex;\r\n  }\r\n\r\n  #onYear(e) {\r\n    this.year = e.target.value;\r\n  }\r\n\r\n  #onKey(e) {\r\n    console.log(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-calendar');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCardElement extends GSElement {\r\n\r\n  static styles = css`.card-header, .card-footer{ background-color: inherit; color: inherit;}`;\r\n\r\n  static properties = {\r\n\r\n    imageStyle: { type: Object, attribute: 'image-style', reflect : true },\r\n\r\n    overlay: { type: Boolean },\r\n    placement: { ...placement },\r\n    align: { ...placement },\r\n\r\n    image: {},\r\n    title: {},\r\n    subtitle: {},\r\n    text: {},\r\n    footer: {},\r\n    header: {},\r\n\r\n    colorText: { attribute: 'color-text' },\r\n    colorBack: { attribute: 'color-back' },\r\n    colorBorder: { attribute: 'color-border' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssSubtitle: { attribute: 'css-subtitle' },\r\n    cssText: { attribute: 'css-text' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssImage: { attribute: 'css-image' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.border = false;\r\n    this.shadow = false;\r\n    this.align = 'start';\r\n    this.placement = 'top';\r\n    this.imageStyle = this.imageStyle || {};\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const content =  me.isVertical ? me.#renderVertical() : me.#renderHorizontal();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"card ${classMap(me.renderClass())}\">${content}</div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return [me.#imageTop, me.#header, me.#body, me.#footer, me.#imageBottom];\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    const start = PlacementTypes.isBefore(me.placement);\r\n    const startClass = start ? 'col-4' : 'col-8';\r\n    const endClass = start ? 'col-8' : 'col-4';\r\n    const startHtml = start ? me.#images : me.#body;\r\n    const endHtml =  start ? me.#body : me.#images;\r\n    return html`<div class=\"row g-0\">\r\n        <div class=\"${startClass}\">\r\n            ${startHtml}\r\n        </div>\r\n        <div class=\"${endClass}\">\r\n          ${endHtml}\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      border: me.border || me.colorBorder,\r\n      [`text-${me.align}`]: me.align,\r\n      [`text-${me.colorText}`]: me.colorText,\r\n      [`bg-${me.colorBack}`]: me.colorBack,\r\n      [`border-${me.colorBorder}`]: me.colorBorder,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return PlacementTypes.isHorizontal(this.placement);\r\n  }\r\n\r\n  get #body() {\r\n    const me = this;\r\n    return html`<div class=\"${me.overlay ? 'card-img-overlay' : 'card-body'} ${me.cssBody}\">\r\n      <h5 class=\"card-title  ${me.cssTitle}\"><slot name=\"title\">${me.translate(me.title)}</slot></h5>\r\n      <h6 class=\"card-subtitle  ${me.cssSubtitle}\"><slot name=\"subtitle\">${me.translate(me.subtitle)}</slot></h6>\r\n      <p class=\"card-text ${me.cssText}\"><slot name=\"text\">${me.translate(me.text)}</slot></p>\r\n      <slot name=\"body\"></slot>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  get #header() {\r\n    return this.overlay ? '' : html`<div class=\"card-header  ${this.cssHeader}\"><slot name=\"header\">${this.header}</slot></div>`;\r\n  }\r\n\r\n  get #footer() {\r\n    return this.overlay ? '' : html`<div class=\"card-footer ${this.cssFooter}\"><slot name=\"footer\">${this.footer}</slot></div>`;\r\n  }\r\n\r\n  get #imageSlot() {\r\n    return html`<slot name=\"image\"></slot>`;\r\n  }\r\n\r\n  get #image() {\r\n    const me = this;\r\n    const css = me.isHorizontal ? 'img-fluid' : 'card-img';\r\n    me.dynamicStyle(me.#styleID, me.imageStyle);\r\n    return html`<img src=\"${me.image}\" class=\"rounded-${me.placement} ${css} ${me.cssImage} ${me.#styleID}\" alt=\"...\">`;\r\n  }\r\n\r\n  get #images() {\r\n    return this.image ? this.#image : this.#imageSlot;\r\n  }\r\n\r\n  get #imageTop() {\r\n    return this.placement === 'top' ? this.#images : '';\r\n  }\r\n\r\n  get #imageBottom() {\r\n    return this.placement === 'bottom' ? this.#images : '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-card');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSCenterElement extends GSElement {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n      class=\"position-absolute top-50 start-50 translate-middle ${classMap(me.renderClass())}\">\r\n    ${me.renderTemplate()}<slot></slot></div>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-center');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenuElement class\r\n * @module components/GSMenuElement\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSMenuElement extends GSElement {\r\n\r\n    static properties = {\r\n        storage: {},\r\n        auto: { type: Boolean, reflect: true },\r\n        opened: { type: Boolean, reflect: true },\r\n        dark: { type: Boolean },\r\n        reverse: { type: Boolean },\r\n        data: { type: Array },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {},\r\n        title: {},\r\n        header: {},\r\n        color: {},\r\n        icon: {},\r\n        url: { default: '#' }\r\n    }\r\n\r\n    #menuRef = createRef();\r\n    #styleID = GSID.id;\r\n    #controller = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.dynamicStyle(me.#styleID);\r\n        me.data = me.#proxify(me);\r\n        me.#controller = new GroupController(this);\r\n    }\r\n\r\n    onBusEvent(e) {\r\n       if (e.detail.owner != this) {\r\n            this.opened = false;\r\n       }\r\n     }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        if (changed.has('opened') && !this.opened) {\r\n            this.#closeSubmenus();\r\n        }\r\n    }\r\n\r\n    updated() {\r\n        this.#updatePosition();\r\n        if (this.opened) {\r\n            this.#controller.notify();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<ul \r\n            ${ref(me.#menuRef)}\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            class=\"dropdown-menu ${classMap(me.renderClass())}\"\r\n            data-gs-class=\"${me.#styleID}\"\r\n            data-menu=\"true\"\r\n            @mouseover=\"${me.#onMouseOver}\"\r\n            @mouseleave=\"${me.#onMouseLeave}\"\r\n            @keydown=\"${me.#onKeyDown}\"\r\n            @click=\"${me.#onClick}\">\r\n            ${me.#items(me.data)}\r\n        </ul>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'submenu': me.dataset.submenu,\r\n            'dropdown-menu-dark': me.dark,\r\n            [me.#styleID]: true,\r\n            'show': me.opened,\r\n            'dropend': !me.reverse,\r\n            'dropstart': me.reverse,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    /**\r\n     * Show at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {HTMLElement} caller\r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n\r\n        const me = this;\r\n        let target = caller;\r\n\r\n        if (GSEvents.isMouseOrPointerEvent(x)) {\r\n            const e = x;\r\n            target = e.target;\r\n            y = e.clientY;\r\n            x = e.clientX;\r\n            let offset = GSDOM.offsetParent(me);\r\n            offset = offset ? offset.getBoundingClientRect() : null;\r\n            x = x - (offset?.left || 0);\r\n            y = y - (offset?.top || 0);\r\n        }\r\n\r\n        const cfg = { clientX: x, clientY: y, target: target };\r\n\r\n        requestAnimationFrame(() => {\r\n            const style = {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                left: '0px',\r\n                translate: `${cfg.clientX}px ${cfg.clientY}px`\r\n            };\r\n            const rule = me.dynamicStyle(me.#styleID);\r\n            Object.assign(rule.style, style);\r\n        });\r\n        me.open();\r\n\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    #items(root) {\r\n        const me = this;\r\n        return root.map(el => me.#item(el));\r\n    }\r\n\r\n    #item(el) {\r\n        const me = this;\r\n        const isSub = el.items?.length > 0;\r\n        if (isSub) return me.#renderSubmenu(el);\r\n        if (!(el.header || el.name)) return me.#renderDivider();\r\n        return el.header ? me.#renderHeader(el) : me.#renderMenu(el);\r\n    }\r\n\r\n    #renderHeader(el) {\r\n        return html`<li data-inert=\"true\"><h6 class=\"dropdown-header\">${this.#renderIcon(el)}${el.header}</h6></li>`;\r\n    }\r\n\r\n    #renderDivider() {\r\n        return html`<li data-inert=\"true\"><hr class=\"dropdown-divider\"></li>`;\r\n    }\r\n\r\n    #renderSubmenu(el) {\r\n        const me = this;\r\n        return html`<li>\r\n            <a class=\"dropdown-item dropdown-toggle\" data-toggle=\"true\" href=\"#\">\r\n                <div class=\"d-inline-block w-100\">${me.#renderIcon(el)}${el.name}</div>\r\n            </a>\r\n            <gs-menu auto \r\n                .data=${el.items} \r\n                ?dark=${me.dark} \r\n                ?reverse=\"${me.reverse}\" \r\n                locale=\"${ifDefined(me.locale)}\" \r\n                data-submenu=\"true\">\r\n            </gs-menu>\r\n        </li>`;\r\n    }\r\n\r\n    #renderIcon(el) {\r\n        return el.icon ? html`<gs-icon css=\"mx-1\" name=\"${el.icon}\"></gs-icon>` : '';\r\n    }\r\n\r\n    #renderMenu(el) {\r\n        return html`<li>\r\n                <gs-button css=\"dropdown-item shadow-none\" \r\n                    ${dataset(el, false)}\r\n                    url=\"${el.url}\"\r\n                    title=\"${el.name}\" \r\n                    locale=\"${ifDefined(this.locale)}\" \r\n                    icon=\"${ifDefined(el.icon)}\" \r\n                    text=\"${ifDefined(el.color)}\"\r\n                    data-gs-target=\"${ifDefined(el.target || 'self')}\"\r\n                    data-gs-action=\"${ifDefined(el.action)}\">\r\n                </gs-button></li>`;\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSMenuElement.options));\r\n    }\r\n\r\n    #closeSubmenus(menu) {\r\n        GSDOM.queryAll(this.renderRoot, 'gs-menu', false, false)\r\n            .filter(el => el != menu)\r\n            .forEach(el => el.close());\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.key) {\r\n            case 'Escape':\r\n                me.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        submenu?.close();\r\n        if (me.auto) me.close();\r\n    }\r\n\r\n    #onMouseLeave(e) {\r\n        GSEvents.prevent(e);\r\n        if (this.auto) this.close();\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        me.#closeSubmenus(submenu);\r\n        submenu?.open();\r\n    }\r\n\r\n    #toSubmenu(e) {\r\n        const menuItem = e.target.closest('li');\r\n        return menuItem?.querySelector('gs-menu');\r\n    }\r\n\r\n    #updatePosition() {\r\n        const me = this;\r\n        if (!me.opened) return;\r\n        const rule = me.dynamicStyle(me.#styleID);\r\n        if (me.isSubmenu) {\r\n            const opt = { translate: `0px -25px` };\r\n            if (me.reverse) {\r\n                opt.left = 'inherited';\r\n                opt.right = '100%';\r\n            } else {\r\n                opt.right = 'inherited';\r\n                opt.left = '100%';\r\n            }\r\n            Object.assign(rule.style, opt);\r\n        } else {\r\n            rule.style.translate = null;\r\n            const rect = me.#menu.getBoundingClientRect();\r\n            const offset = window.innerWidth - rect.right;\r\n            me.reverse = offset - 5 < 0;\r\n            if (me.reverse) rule.style.translate = `${offset - 2}px`;\r\n        }\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.dataset.submenu;\r\n    }\r\n\r\n    get #menu() {\r\n        return this.#menuRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-menu');\r\n    }\r\n}\r\n","/*GSContextElement\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContextElement class\r\n * @module components/GSContextElement\r\n */\r\n\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSContextElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        target: {},\r\n        filter: {},\r\n        altContext: { type: Boolean },\r\n        disabled: { type: Boolean },\r\n    }\r\n\r\n    constructor() {\r\n        super();        \r\n        this.auto = true;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', me.close.bind(me));        \r\n        if (!me.slot) me.#attachTarget();\r\n    }\r\n    \r\n    onSlotInjected(slot) {\r\n        this.#attachTarget();\r\n    }\r\n\r\n    #attachTarget() {\r\n        const me = this;        \r\n        const owner = GSDOM.parent(me.assignedSlot || me);\r\n        let targets = me.target ? GSDOM.queryAll(owner, me.target) : [owner];\r\n        if (!targets.length) targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    }\r\n\r\n    #match(e) {\r\n        const me = this;\r\n        return e.composedPath().filter(el => el.matches)\r\n            .filter(el => el.matches(me.target || me.filter));\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        if (e.shiftKey && me.altContext) return;\r\n        const list = me.#match(e);\r\n        if (list.length === 0) return;\r\n        GSEvents.prevent(e);\r\n        me.popup(e);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show submenu at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n        return this.disabled ? false : super.popup(x, y, caller);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-context');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, notEmpty } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\nexport class GSCompareElement extends GSElement {\r\n\r\n  static styles = css`.slider {\r\n         --gs-position : 50%;\r\n          left : var(--gs-position);\r\n          width: 8px;\r\n          height: 100%;\r\n          border-width: 1px;\r\n          cursor: w-resize;\r\n          border-color: darkgray;\r\n          border-style: solid;\r\n          background-color: lightgray;\r\n      }\r\n      .clipper {\r\n        --gs-position : 50%;\r\n        clip-path: inset(0px var(--gs-position) 0px 0px);\r\n      }\r\n    `;\r\n\r\n  static properties = {\r\n    background: { ...color },\r\n    width: { type: Number },\r\n    height: { type: Number },\r\n    before: { hasChanged: notEmpty },\r\n    after: { hasChanged: notEmpty },\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  #elRef = createRef();\r\n  #clipRef = createRef();\r\n  #slideRef = createRef();\r\n\r\n  #mouseController;\r\n  #elPosition;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.width = 0;\r\n    me.height = 0;\r\n    me.dynamicStyle(me.#styleID);\r\n    me.#mouseController = new ElementMoveController(me);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#mouseController.attach(this.#splitter);\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n         dir=\"${ifDefined(me.direction)}\"\r\n         @loaded=\"${me.#onLoad}\" \r\n         @dblclick=\"${me.#onDoubleClick}\"\r\n         data-gs-class=\"${me.#styleID}\"\r\n         class=\"${classMap(me.renderClass())}\">\r\n      <div class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden\"><slot name=\"before\">${me.#before}</slot></div>\r\n      <div ${ref(me.#clipRef)} class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden clipper\"><slot name=\"after\">${me.#after}</slot></div>\r\n      <div ${ref(me.#slideRef)} class=\"slider position-absolute top-0><slot name=\"control\"></slot></div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      \"position-relative\": true,\r\n      \"user-select-none\": true,\r\n      \"d-contents\": me.isAuto,\r\n      \"h-100\": me.isAuto,\r\n      \"w-100\": me.isAuto,\r\n      \"overflow-hidden\": true,\r\n      [`bg-${me.background}`]: me.background,\r\n      [`${me.#styleID}`]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Handles resizing based on mouse move event\r\n   * @param {MouseEvent} e \r\n   */\r\n  onStartMove(e) {\r\n    this.#elPosition = this.#splitter.getBoundingClientRect();\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    const me = this;\r\n    const offset = me.#elPosition.left;\r\n    const width = me.#elPosition.width;\r\n    const pos = GSUtil.range(e.clientX - offset, 0, width);\r\n    const pct = (pos / width) * 100;\r\n    me.#update(pct);\r\n  }\r\n\r\n  get isAuto() {\r\n    return this.width == 0 || this.height == 0;\r\n  }\r\n\r\n  get isFixed() {\r\n    return !this.isAuto;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  get #before() {\r\n    return this.before ? html`<img @load=\"${this.#onLoad}\" src=\"${me.before}\"></img>` : '';\r\n  }\r\n\r\n  get #after() {\r\n    return this.after ? html`<img @load=\"${this.#onLoad}\" src=\"${me.after}\"></img>` : '';\r\n  }\r\n\r\n  get #isAuto() {\r\n    return this.width === 0 || this.height === 0;\r\n  }\r\n\r\n  get #splitter() {\r\n    return this.#elRef.value;\r\n  }\r\n\r\n  get #slider() {\r\n    return this.#slideRef.value;\r\n  }\r\n\r\n  get #clip() {\r\n    return this.#clipRef.value;\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const me = this;\r\n    if (me.#isAuto) {\r\n      const el = e.target;\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n    }\r\n  }\r\n\r\n  #onDoubleClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#update();\r\n    me.#mouseController.reset();\r\n  }\r\n\r\n  #update(pct = 50) {\r\n    const me = this;\r\n    me.#clip.style.setProperty('--gs-position', `${100 - pct}%`);\r\n    me.#slider.style.setProperty('--gs-position', `${pct}%`);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-compare');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\n\r\n/**\r\n * Helper component to enable controller attachment to the GS WebComponent.\r\n * It is used to simplify and separate templates from logic.\r\n */\r\nexport class GSControllerElement extends GSElement {\r\n\r\n  static properties = {\r\n    module: {},\r\n    controller: {},\r\n  }\r\n\r\n  #clazz = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  updated(changes) {\r\n    super.updated(changes);\r\n    const me = this;\r\n    if (me.isConnected && me.isValid) {\r\n      me.#initialize();\r\n    }\r\n  }\r\n\r\n  get isValid() {\r\n    return this.parentElement instanceof GSElement;\r\n  }\r\n\r\n  async #initialize() {\r\n\r\n    const me = this;\r\n    const host = me.parentElement;\r\n\r\n    if (me.#clazz) return;\r\n\r\n    let clazz = globalThis[me.controller];\r\n    if (!clazz && me.module) {\r\n      const url = GSLoader.normalizeURL(me.module);\r\n      const module = await import(url);\r\n      clazz = module[me.controller];\r\n    }\r\n\r\n    if (clazz) {\r\n      new clazz(host);\r\n      me.#clazz = clazz;\r\n      globalThis[me.controller] = clazz;\r\n    }\r\n\r\n  }\r\n\r\n  static {\r\n    this.define('gs-controller');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSCopyrightElement extends GSElement {\r\n\r\n  static properties = {\r\n    year: { reflect: true, type: Number },\r\n    company: { reflect: true },\r\n    url: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    if (!(me.isCompany && me.isYear)) return '';\r\n    const year = new Date().getFullYear();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"${classMap(me.renderClass())}\"><a target=\"_blank\" href=\"${me.url ? me.url : '#'}\"><small>&copy; ${me.company} ${me.year}. - ${year}.</small></a></div>`;\r\n  }\r\n\r\n  get isCompany() {\r\n    return GSUtil.isStringNonEmpty(this.company);\r\n  }\r\n\r\n  get isYear() {\r\n    return GSUtil.isStringNonEmpty(this.year);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-copyright');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSFunction } from '../base/GSFunction.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/verificator.mjs';\r\nimport { GSReadWriteRegistry } from '../data/ReadWriteRegistry.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for easier access to the GSReadWrite/GSTreeReader\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSDataHandler extends GSElement {\r\n\r\n    static properties = {\r\n        storage: { state: true },\r\n        src: { reflect: true },\r\n        action: { reflect: true },\r\n        mode: { reflect: true },\r\n        reader: { reflect: true },\r\n        writer: { reflect: true },\r\n        limit: { type: Number, reflect: true },\r\n        skip: { type: Number, reflect: true },\r\n        filter: { type: Array, reflect: true },\r\n        sort: { type: Array, reflect: true },\r\n        type: {},\r\n        autoload: { type: Boolean },\r\n        autorefresh: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    }\r\n\r\n    #iid = 0;\r\n    #config = null;\r\n    #handler = null;\r\n    #lifoReadRef = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        if (!me.id) throw new Error('Element ID is required attribute!');\r\n        GSItem.validate(me, me.tagName);\r\n        me.autorefresh = 0;\r\n        me.autoload = false;\r\n        me.flat = true;\r\n        me.filter = [];\r\n        me.sort = [];\r\n        me.limit = 0;\r\n        me.skip = 0;\r\n        me.type = 'remote';\r\n        me.mode = 'query';\r\n        me.reader = 'GET';\r\n        me.writer = 'POST';\r\n        me.storage = me.id;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#initLIFO();\r\n        me.#config = GSItem.proxify(me, GSData.PROPERTIES);\r\n        me.#handler = GSReadWriteRegistry.newHandler(me.type, me.id, false);\r\n        if (me.#config?.length > 0) me.#handler?.addProcessor(me);\r\n        me.#handler?.enable();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#handler?.disable();\r\n        this.#handler?.removeProcessor(this);\r\n        this.#lifoReadRef = null;\r\n        clearTimeout(this.#iid);\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.dataController?.read();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        const me = this;\r\n        me.#updateHandler();\r\n        if (changed.has('autorefresh')) me.schedule(me.autorefresh);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.formatSort(me.sort);\r\n        me.#handler.filter = me.formatFilter(me.filter);\r\n        if (me.autoload) me.read();\r\n    }\r\n\r\n    get isDebug() {\r\n        return this.dataset.gsDebug;\r\n    }\r\n\r\n    get handler() {\r\n        return this.#handler;\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    set search(val) {\r\n        if (this.#handler) this.#handler.search = val;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    formatFilter(val) {\r\n        val = this.#formated(val);\r\n        return Array.isArray(val) ? val : [];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    formatSort(val) {\r\n        val = this.#formated(val);\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort || [];\r\n    }\r\n\r\n    schedule(time = 0) {\r\n        const me = this;\r\n        time = GSUtil.asNum(time) * 1000;\r\n        clearInterval(me.#iid);\r\n        if (time > 0) me.#iid = setInterval(() => {\r\n            me.read(me);\r\n        }, time);\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data) {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        me.#handler?.write(me, data);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onDataRead(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data Read: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onDataWrite(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data write: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Process data after receive, before notifying \r\n     * @param {*} data \r\n     */\r\n    postRead(data) {\r\n        const me = this;\r\n        if (!Array.isArray(data)) data = [data];\r\n        data.forEach(r => {\r\n            me.#config.forEach(c => {\r\n                let val = r[c.name];\r\n                if (!GSUtil.isNull(val)) {\r\n                    val = GSData.format(c, val);\r\n                    r[c.name] = val;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onDataError(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data error: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #initLIFO() {\r\n        const me = this;\r\n        me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO();\r\n        return me.#lifoRead();\r\n    }\r\n\r\n    #lifoRead() {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        return me.#handler?.read(me);\r\n    }\r\n\r\n    #formated(val) {\r\n        return GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-data-handler');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSDialogElement extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n  static ALIGN = 'end';\r\n  static CANCEL = 'Cancel';\r\n  static CONFIRM = 'Ok';\r\n\r\n  static #STACK = [];\r\n\r\n  static styles = css`dialog{outline:none;}dialog::backdrop{backdrop-filter: blur(4px);}`;\r\n\r\n  static properties = {\r\n\r\n    standard: { reflect: true, type: Boolean },\r\n    opened: { reflect: true, type: Boolean },\r\n    cancelable: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    escapable: { reflect: true, type: Boolean },\r\n    disabled: { reflect: true, type: Boolean },\r\n\r\n\r\n    title: { reflect: true },\r\n    message: { reflect: true },\r\n    cancelText: { reflect: true, },\r\n    confirmText: { reflect: true, },\r\n\r\n    minWidth: { reflect: true, type: Number, attribute: 'min-width' },\r\n    buttonAlign: { reflect: true, attribute: 'button-align' },\r\n\r\n    iconCancel: { reflect: true, attribute: 'icon-cancel' },\r\n    iconConfirm: { reflect: true, attribute: 'icon-confirm' },\r\n\r\n    colorCancel: { attribute: 'color-cancel' },\r\n    colorConfirm: { attribute: 'color-confirm' },\r\n\r\n    cssCancel: { attribute: 'css-cancel' },\r\n    cssConfirm: { attribute: 'css-confirm' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssContent: { attribute: 'css-content' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #dialogRef = createRef();\r\n  #btnConfirmRef = createRef();\r\n  #btnCancelRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    const clazz = GSDialogElement;\r\n    me.opened = false;\r\n    me.standard = false;\r\n    me.cancelable = false;\r\n    me.closable = false;\r\n    me.escapable = false;\r\n    me.disabled = false;\r\n    me.shadow = false;\r\n    me.rounded = false;\r\n\r\n    me.minWidth = 0;\r\n    me.css = clazz.CSS;\r\n    me.cssTitle = clazz.TITLE_CSS;\r\n    me.cssHeader = clazz.HEADER_CSS;\r\n    me.buttonAlign = clazz.ALIGN;\r\n    me.cancelText = clazz.CANCEL;\r\n    me.confirmText = clazz.CONFIRM;\r\n    me.colorCancel = 'secondary';\r\n    me.colorConfirm = 'primary';\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialogElement.#updateStack();\r\n  }\r\n\r\n  updated(changed) {\r\n    super.updated(changed);\r\n    const me = this;\r\n    if (me.opened) {\r\n      GSDialogElement.#STACK.push(me);\r\n      if (me.standard) {\r\n        me.#dialog?.open();\r\n      } else {\r\n        me.#dialog?.showModal();\r\n      }\r\n      me.#focusable()?.focus();\r\n    } else {\r\n      GSDialogElement.#STACK.pop();\r\n      me.#dialog?.close();\r\n    }\r\n    me.notify();\r\n  }\r\n\r\n  #renderConfirm() {\r\n    const me = this;\r\n    if (!me.closable) return '';\r\n    return html`<gs-button  ${ref(me.#btnConfirmRef)} \r\n      @click=\"${me.#onConfirm.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconConfirm)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      .disabled=\"${me.disabled}\"  \r\n      css=\"${ifDefined(me.cssConfirm)}\" \r\n      color=\"${ifDefined(me.colorConfirm)}\" \r\n      title=\"${me.confirmText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderCancel() {\r\n    const me = this;\r\n    if (!me.cancelable) return '';\r\n    return html`<gs-button ${ref(me.#btnCancelRef)}\r\n      @click=\"${me.#onCancel.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconCancel)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      css=\"${ifDefined(me.cssCancel)}\" \r\n      color=\"${ifDefined(me.colorCancel)}\" \r\n      title=\"${me.cancelText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderFooter() {\r\n    const me = this;\r\n    const isFooter = me.cancelable || me.closable;\r\n    if (!isFooter) return '';\r\n    return html`<div class=\"card-footer d-flex user-select-none justify-content-${me.buttonAlign} ${me.cssFooter}\">\r\n      ${me.#renderCancel()} &nbsp;${me.#renderConfirm()}\r\n      </div>`;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const styles = { 'min-width': me.minWidth > 0 ? `${me.minWidth}px` : undefined };\r\n    me.dynamicStyle(me.#styleID, styles);\r\n    return html`\r\n        <dialog tabindex=\"-1\" ${ref(me.#dialogRef)} \r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @close=\"${me.#onCancel.bind(me)}\"\r\n            @cancel=\"${me.#onCancel.bind(me)}\"\r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @form=\"${me.#onForm.bind(me)}\"\r\n            @submit=\"${me.#onSubmit.bind(me)}\"\r\n            class=\"${classMap(me.renderClass())}\">\r\n            <div class=\"card ${me.cssContent}\">\r\n                <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n                  <div class=\"card-title ${me.cssTitle}\">\r\n                    <slot name=\"title\">${me.translate(me.title)}</slot>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body ${me.cssBody}\">\r\n                  <slot name=\"body\">\r\n                  ${me.translate(me.message)}\r\n                  ${me.renderTemplate()}\r\n                  </slot>\r\n                </div>\r\n                ${me.#renderFooter()}\r\n            </div>\r\n            <slot name=\"extra\"></slot>\r\n            <div class=\"toast-container position-fixed\"></slot></div>\r\n        </dialog>`\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'dialog': true,\r\n      'p-0': true,\r\n      'border-0': true,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.closable = closable;\r\n    me.cancelable = cancelable;\r\n    me.escapable = cancelable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('click-action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    return this.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    return this.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    index = GSUtil.asNum(index, 0);\r\n    const me = this;\r\n    me.forms?.forEach?.(f => { f.reset(); f.values = data; });\r\n    const tab = me.tab;\r\n    if (tab && index > -1) tab.index = index;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  get form() {\r\n    return this.query('gs-form', true);\r\n  }\r\n\r\n  get forms() {\r\n    return this.queryAll('gs-form', true);\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('gs-tab', true);\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.#dialogRef.value;\r\n  }\r\n\r\n  get #btnConfirm() {\r\n    return this.#btnConfirmRef.value;\r\n  }\r\n\r\n  get #btnCancel() {\r\n    return this.#btnCancelRef.value;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  #focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#btnCancel;\r\n    if (me.closable) return me.#btnConfirm;\r\n    return me;\r\n  }\r\n\r\n  async #onConfirm(e) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const ret = await Promise.all(me.forms?.map?.(form => form.submit()));\r\n    if (ret.indexOf(false) < 0) me.close();\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.close();\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle injected form events\r\n   * @param {*} e \r\n   */\r\n  #onForm(e) {\r\n    let  sts = true;\r\n    const me = this;\r\n    const data = e.detail;\r\n    switch (data.type) {\r\n      case 'submit':\r\n        sts = me.emit('data', data.data, false, false, true);\r\n        if (!sts) GSEvents.prevent(e);\r\n        //me.opened = false;\r\n        break;\r\n      case 'valid':\r\n        me.disabled = data.data === false;     \r\n        break;\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  #onSubmit(e) {\r\n    debugger;\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialogElement.#STACK = GSDialogElement.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  /**\r\n   * Return number of dialogs in a stack\r\n   */\r\n  static get size() {\r\n    return GSDialogElement.#STACK.length;\r\n  }\r\n\r\n  static get top() {\r\n    GSDialogElement.#updateStack();\r\n    const size = GSDialogElement.size;\r\n    return size === 0 ? null :  GSDialogElement.#STACK[size - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialogElement.#updateStack();\r\n    return Array.from(GSDialogElement.#STACK);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-dialog');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, unsafeHTML, html, ifDefined } from '../lib.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSDrawerElement extends GSElement {\r\n\r\n  static properties = {\r\n    autoclose: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    backdrop: { reflect: true, type: Boolean },\r\n    expanded: { reflect: true, type: Boolean },\r\n    scroll: { reflect: true, type: Boolean },\r\n\r\n    min: { reflect: true, type: Number},\r\n    max: { reflect: true},\r\n    fingers: { reflect: true, type: Number},\r\n    placement: {...placement},\r\n    \r\n    transition: { reflect: true },\r\n    duration: { reflect: true, type: Number },\r\n\r\n    title: { reflect: true},\r\n\r\n    cssTitle: { reflect: true, attribute: \"css-title\"},\r\n    cssHead: { reflect: true, attribute: \"css-head\" },\r\n    cssBody: { reflect: true, attribute: \"css-body\" },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.placement = 'start';\r\n    me.cssTitle = 'fs-5';\r\n    me.transition = 'linear';\r\n    me.duration = 0.2;\r\n    me.min = 0;\r\n    me.max = 'auto';\r\n    me.fingers = 2;\r\n    me.on('mouseleave', me.#onLeave.bind(me));\r\n    me.on('mouseenter', me.#onEnter.bind(me));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`${unsafeHTML(me.#style)}\r\n    <div tabindex=\"-1\" dir=\"${ifDefined(me.direction)}\"\r\n     class=\"offcanvas overflow-hidden anime ${classMap(me.renderClass())}\">\r\n      ${me.#header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        ${me.renderTemplate()}\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>${me.#backdrop}`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': true,\r\n      'anime-open' : me.expanded,\r\n      'anime-close' : !me.expanded,\r\n      [`offcanvas-${me.placement}`]: me.placement,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #style() {\r\n    const me = this;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    return `<style>\r\n    .anime {\r\n      transition-property: ${pos} !important;\r\n      transition-duration: ${me.duration}s  !important;\r\n      transition-timing-function: ${me.transition} !important;\r\n    }\r\n    .anime-open {\r\n        ${pos} : ${me.max}${GSUtil.isNumber(me.max) ? 'px':''} !important;\r\n    }\r\n    .anime-close {\r\n      ${pos} : ${me.min}${GSUtil.isNumber(me.min) ? 'px':''} !important;\r\n    }    \r\n    </style>`;\r\n  }\r\n\r\n  get #backdrop() {\r\n    const me = this;\r\n    if (!me.backdrop) return '';\r\n    return html`<div class=\"offcanvas-backdrop fade ${me.expanded ? 'show' : 'invisible'}\" @click=\"${me.close}\"></div>`;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    return me.closable ? html`<button type=\"button\" class=\"btn-close text-reset\" @click=\"${me.close}\"></button>` : '';\r\n  }\r\n\r\n  get #title() {\r\n    const me = this;\r\n    return me.title ? html`<div class=\"offcanvas-title ${me.cssTitle}\">${me.translate(me.title)}</div>` : '';\r\n  }\r\n\r\n  get #header() {\r\n    const me = this;\r\n    return me.#hasHeader ? html`<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${me.#title}${me.#button}</slot></div>` : '';\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  get #hasHeader() {\r\n    return this.title || this.closable || this.#headSlot;\r\n  }\r\n\r\n  #notify(val) {\r\n    const me = this;\r\n    me.expanded = val == true;\r\n    me.notify();\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  open() {\r\n    this.#notify(true);\r\n  }\r\n\r\n  close() {\r\n    this.#notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.#notify(!this.expanded);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return !this.isVertical;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-drawer');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdownElement class\r\n * @module components/GSDropdownElement\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { cssMap } from '../directives/css-map.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDropdownElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        icon: {},\r\n        text: {...color},\r\n        color: {...color},\r\n        size: {},\r\n        title: {},\r\n        tooltip: {},\r\n        group: {},\r\n        simple: {type:Boolean}\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"dropdown\"  dir=\"${ifDefined(me.direction)}\">\r\n                ${me.#renderButton()}\r\n                ${super.renderUI()}\r\n            </div>`;\r\n    }\r\n\r\n    #buttonClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'btn': true,\r\n            [`btn-${me.color}`] : me.color ? true : false,\r\n            'dropdown-toggle': !me.simple,\r\n            'shadow-none' : true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    #renderButton() {\r\n        const me = this;\r\n        return html`<gs-link css=\"${cssMap(me.#buttonClass())}\"\r\n            url=\"#\"         \r\n            icon=\"${ifDefined(me.icon)}\"\r\n            text=\"${ifDefined(me.text)}\"\r\n            size=\"${ifDefined(me.size)}\"\r\n            title=\"${ifDefined(me.title)}\"\r\n            tooltip=\"${ifDefined(me.tooltip)}\"\r\n            @notify=\"${me.toggle}\">\r\n            </gs-link>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-dropdown');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html, unsafeHTML } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Safe email rendering to protect from spam bots.\r\n */\r\nexport class GSEmailElement extends GSElement {\r\n\r\n  static shadowRootOptions = { mode: 'closed' }\r\n\r\n  static style = css`.e-mail:before {\r\n    content: attr(data-website) \"\\0040\" attr(data-user);\r\n    unicode-bidi: bidi-override;\r\n    direction: rtl;\r\n    }`;\r\n\r\n  static properties = {\r\n    user: { reflect: true },\r\n    domain: { reflect: true },\r\n    dev: { type: Boolean }\r\n  }\r\n\r\n  #user;\r\n  #domain;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  willUpdate(changes) {\r\n    super.willUpdate(changes);\r\n    this.#updateUser();\r\n    this.#updateDomain()\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${unsafeHTML(this.#style)}<a @click=\"${this.#onClick}\" class=\"e-mail\" data-user=\"${this.#user}\" data-website=\"${this.#domain}\"  href=\"mailto://\"></a>`;\r\n  }\r\n\r\n  get #style() {\r\n    return '<style>.e-mail:before { content: attr(data-website) \"\\u0040\" attr(data-user); unicode-bidi: bidi-override; direction: rtl; }</style>';\r\n  }\r\n\r\n  get #url() {\r\n    return `mailto://${GSUtil.reverse(this.dataset.user)}@${GSUtil.reverse(this.dataset.domain)}`;\r\n  }\r\n\r\n  #updateUser() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.user) {\r\n      me.#user = dataset.user || GSUtil.reverse(me.user);\r\n      if (me.dev) dataset.user = me.#user;\r\n      me.user = '';\r\n    }\r\n  }\r\n\r\n  #updateDomain() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.domain) {\r\n      me.#domain = dataset.domain || GSUtil.reverse(me.domain);\r\n      if (me.dev) dataset.domain = me.#domain;\r\n      me.domain = '';\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    window.location.href = me.#url;\r\n    //window.open(me.#url, '_blank');  \r\n  }\r\n\r\n  static {\r\n    this.define('gs-email');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSFormElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    disabled: { type: Boolean },\r\n    data: { type: Object },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<form ${ref(me.#formRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      @change=\"${me.#onChange}\"\r\n      @submit=\"${me.submit}\"\r\n      @reset=\"${me.reset}\"\r\n      method=\"dialog\">\r\n      <slot></slot>\r\n    </form>`;\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    this.dataController?.read();\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    if (changed.has('disabled')) {\r\n      if (me.disabled) {\r\n        me.disable();\r\n      } else {\r\n        me.enable();\r\n      }\r\n    }\r\n    if (changed.has('data')) {\r\n      me.asJSON = me.data;\r\n    }\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  get isValid() {\r\n    return this.elements\r\n      .filter(el => GSDOM.isVisible(el))\r\n      .map(el => el.checkValidity())\r\n      .filter(v => v === false).length === 0;\r\n  }\r\n\r\n  /**\r\n  * Overide native to pickup all form elements, including ones in shadow dom\r\n  */\r\n  get elements() {\r\n    return this.queryAll('input,select,output,textarea', true);\r\n  }\r\n\r\n  get fields() {\r\n    return this.elements;\r\n  }\r\n\r\n  get inputs() {\r\n    return this.elements;\r\n  }\r\n\r\n  get asJSON() {\r\n    return GSDOM.toObject(this);\r\n  }\r\n\r\n  set asJSON(data) {\r\n    const me = this;\r\n    GSDOM.fromObject(me, data);\r\n    return me.validate();\r\n  }\r\n\r\n  disable() {\r\n    GSDOM.disableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  enable() {\r\n    GSDOM.enableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.form.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    this.elements\r\n      .filter(el => GSDOM.isVisible(el))\r\n      .filter(el => !el.checkValidity())\r\n      .forEach(el => el.reportValidity() );\r\n    return this.form.reportValidity();\r\n  }\r\n\r\n  async reset(e) {\r\n    const me = this;\r\n    const internal = e?.target === me.form;\r\n\r\n    if (internal) {\r\n      me.elements.forEach(el => el.value = el.defaultValue);\r\n      await me.dataController?.read(me.asJSON);\r\n    } else {\r\n      me.data = {};\r\n      me.form.reset();\r\n    }\r\n  }\r\n\r\n  async submit(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    if (!me.validate()) return;\r\n    const json = me.asJSON;\r\n    await me.dataController?.write(json);\r\n    const data = { type: 'submit', data: json, source: e, owner : me};\r\n    return me.emit('form', data, true, true, true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataWrite(data) {\r\n\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  onFieldChange(el) {\r\n\r\n  }\r\n\r\n  onValidate(sts) {\r\n\r\n    return sts;\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    let isValid = me.checkValidity() && me.isValid;\r\n    if (!isValid) me.reportValidity();\r\n    const data = { type: 'valid', data: isValid, owner : me};\r\n    isValid = me.onValidate(isValid);\r\n    if (isValid) me.emit('form', data, true, true);\r\n    return isValid;\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if (me.isBindable) me.handle(e);\r\n    if (me.validate()) me.onFieldChange(e.detail);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { inputType, numGT0, numGE0 } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSFormGroupElement extends GSElement {\r\n\r\n  static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2';\r\n  static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n  static CSS_ICON = 'text-primary me-2 fs-5';\r\n  static ICON = 'info-circle-fill';\r\n\r\n  static properties = {\r\n    icon: {},\r\n    layout: {},\r\n    placement: {},\r\n\r\n    description: {},\r\n    label: {},\r\n    placeholder: {},\r\n    pattern: {},\r\n    mask: {},\r\n\r\n    name: {},\r\n    type: { ...inputType },\r\n    list: {},\r\n    accept: {},\r\n\r\n    lang: {},\r\n    default: { reflect: true },\r\n    step: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    min: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    max: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    minLength: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    maxLength: { type: Number, reflect: true, hasChanged: numGT0 },\r\n\r\n    reverse: { type: Boolean },\r\n\r\n    autoid: { type: Boolean },\r\n    autocopy: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    autocapitalize: { type: Boolean, reflect: true },\r\n    autocomplete: { type: Boolean, reflect: true },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    checked: { type: Boolean, reflect: true },\r\n    multiple: { type: Boolean, reflect: true },\r\n    reveal: { type: Boolean, reflect: true },\r\n    readonly: { type: Boolean, reflect: true },\r\n    required: { type: Boolean, reflect: true },\r\n\r\n    cellField: { attribute: 'cell-field' },\r\n    cellLabel: { attribute: 'cell-label' },\r\n    cssLabel: { attribute: 'css-label' },\r\n    cssField: { attribute: 'css-field' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #inputRef = createRef();\r\n  #ouptutRef = createRef();\r\n  #patterns = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.#validateAllowed();\r\n    this.dynamicStyle(this.#styleID);\r\n    this.type = 'text';\r\n    this.placement = 'top';\r\n    this.layout = 'horizontal';\r\n    this.icon = GSFormGroupElement.ICON;\r\n    this.cssLabel = GSFormGroupElement.CSS_LABEL;\r\n    this.cellLabel = GSFormGroupElement.CSS_LABEL_CELL;\r\n\r\n  }\r\n  \r\n  connectedCallback() {\r\n    const me = this;\r\n    const form = GSDOM.closest(me, 'gs-form');\r\n    me.layout = GSAttr.get(form, 'layout', me.layout);\r\n    me.#patterns = GSItem.collect(me)\r\n    .filter(el => el.dataset.pattern)\r\n    .map(el => new RegExp(el.dataset.pattern));\r\n    super.connectedCallback();\r\n  }\r\n\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    me.value = me.default;\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#onRange();\r\n    if (me.templateRef && !me.field) {\r\n      const field = GSDOM.formElements(me.renderRoot).pop();\r\n      me.#inputRef.value = field;\r\n      if (field) {\r\n        field.name = this.name;\r\n        me.attachEvent(field, 'change', me.#onChange.bind(me));\r\n      }\r\n    }\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    switch (me.layout) {\r\n      case 'floating': return me.#renderFloating();\r\n      case 'vertical': return me.#renderVertical();\r\n      default: return me.#renderHorizontal();\r\n    }\r\n  }\r\n\r\n  #renderFloating() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n       <div class=\"form-floating ${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n          ${me.#renderLabel()}\r\n       </div>\r\n       ${me.#renderInfo()}\r\n    </div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n      <div class=\"col-12 text-md-start ${me.cellLabel}\">\r\n          ${me.#renderLabel()}\r\n      </div>\r\n       <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n       </div>\r\n       ${me.#renderInfo()}   \r\n    </div>      \r\n    `;\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row form-group ${classMap(me.renderClass())}\">    \r\n       <slot name=\"header\"></slot>\r\n       ${me.#renderLabelWrap()}\r\n       ${me.#renderField()}\r\n       ${me.#renderInfo()}\r\n       <slot name=\"footer\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderLabel() {\r\n    const me = this;\r\n    return html`<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.translate(me.label)}</label>`;\r\n  }\r\n\r\n  #renderLabelWrap() {\r\n    const me = this;\r\n    return html`<div class=\" text-md-end ${me.cellLabel}\">${me.#renderLabel()}</div>`;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.#isIcon ? html`<gs-icon size=\"5\" css=\"${GSFormGroupElement.CSS_ICON}}\" name=\"${me.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderTooltip() {\r\n    const me = this;\r\n    const tgt = me.#isIcon ? '@parent' : `[name='${me.name}']`;\r\n    return me.description ? html`<gs-tooltip local locale=\"${ifDefined(me.locale)}\" placement=\"${me.placement}\" title=\"${me.description}\" target=${ifDefined(tgt)}></gs-tooltip>` : '';\r\n  }\r\n\r\n  #renderInfo() {\r\n    const me = this;\r\n    const tooltip = me.#renderTooltip();\r\n    if (tooltip && me.#isIcon) return html`\r\n    <div class=\"col-auto\">\r\n       ${tooltip}\r\n       ${me.#renderIcon()}\r\n    </div>`;\r\n    return tooltip;\r\n  }\r\n\r\n  #renderField() {\r\n    const me = this;\r\n    return html`\r\n    <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n       <slot name=\"body\">${me.#renderInput()}${me.#renderOutput()}</slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderOutput() {\r\n    const me = this;\r\n    if (!me.isRange) return \"\";\r\n    return html`<span ${ref(me.#ouptutRef)} class=\"position-absolute px-1\">${me.value}</span>`;\r\n  }\r\n\r\n  #renderInput() {\r\n\r\n    const me = this;\r\n\r\n    const tpl = me.query('template') || me.template;\r\n    if (tpl) return me.renderTemplate();\r\n\r\n    const idattr = me.autoid ? me.name : undefined;\r\n    const val = me.isFieldset ? me.value.split(',') : me.value;\r\n\r\n    if (Array.isArray(val)) {\r\n      const wrap = me.dataset.radioLayout === 'vertical';\r\n      return val.map((it, i) => { return { v: it, id: `${me.name}_${i}` } })\r\n        .map((o, i) => me.#fieldSet(me.name + i, o.v, me.#inputHTML(o.id, me.name, o.v), wrap));\r\n    }\r\n\r\n    return me.#inputHTML(idattr, me.name, me.value);\r\n  }\r\n\r\n  #fieldSet(id, val, fld, vertical = false) {\r\n    const me = this;\r\n    return vertical ?\r\n      html`<div class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></div>`\r\n      :\r\n      html`<span class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></span>`;\r\n  }\r\n\r\n  #inputHTML(id, name, value) {\r\n    const me = this;\r\n    const type = me.isSwitch ? 'checkbox' : me.type;\r\n\r\n    const style = {\r\n      transform: me.reverse && me.isRange ? 'rotateY(180deg)' : ''\r\n    }\r\n    me.dynamicStyle(me.#styleID, style);\r\n\r\n    return html`<input is=\"gs-ext-input\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n        \r\n            name=\"${name}\" \r\n            type=\"${type}\" \r\n            value=\"${ifDefined(value)}\"\r\n    \r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            placeholder=\"${ifDefined(me.translate(me.placeholder))}\"\r\n            description=\"${ifDefined(me.translate(me.description))}\"\r\n\r\n            mask=\"${ifDefined(me.mask)}\"\r\n            pattern=\"${ifDefined(me.pattern)}\"\r\n            list=\"${ifDefined(me.list)}\"\r\n            accept=\"${ifDefined(me.accept)}\"\r\n             \r\n            step=\"${ifDefined(me.step)}\"\r\n            min=\"${ifDefined(me.min)}\"\r\n            max=\"${ifDefined(me.max)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n            \r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?autocomplete=\"${me.autocomplete}\"\r\n            ?multiple=\"${me.multiple}\"\r\n            ?checked=\"${me.checked}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"\r\n            ?reveal=\"${me.reveal}\"\r\n            >`;\r\n  }\r\n\r\n  get #cssField() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-input ms-0';\r\n    if (me.isRange) return 'form-range';\r\n    return 'form-control';\r\n  }\r\n\r\n  get #cssLabel() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-label';\r\n    if (me.isFloating) return 'ms-2';\r\n    return me.isVertical ? 'form-label' : '';\r\n  }\r\n\r\n  get #cssCheck() {\r\n    const me = this;\r\n    if (me.isCheckable) {\r\n      //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      if (me.isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n      return me.isFieldset ? '' : 'form-check';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get #cellField() {\r\n    const me = this;\r\n    const val = (me.isHorizontal) ? '6' : '11';\r\n    return me.cellField || `col-md-${val} col-sm-${val} col-xs-11`;\r\n  }\r\n\r\n  get #isIcon() {\r\n    return GSUtil.isStringNonEmpty(this.icon);\r\n  }\r\n\r\n  #onRange(e) {\r\n    const me = this;\r\n    if (me.isRange) {\r\n      const el = me.#ouptutRef.value;\r\n      if (el) el.innerHTML = me.value || '';\r\n      me.field.title = me.value;\r\n    }\r\n    me.emit('input', e);\r\n  }\r\n\r\n  #onChange(e) {\r\n    this.emit('change', e, true);\r\n  }\r\n\r\n  async #onBlur(e) {\r\n\r\n    const me = this;\r\n    const el = me.field;\r\n\r\n    if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n    const isValid = me.checkValidity();\r\n    if (!isValid) {\r\n      me.reportValidity();\r\n      el.focus();\r\n      await GSUtil.timeout(2000);\r\n      el.setCustomValidity('');\r\n    }\r\n\r\n    me.emit('change', e);\r\n  }\r\n\r\n  #validateAllowed() {\r\n    const me = this;\r\n    const slots = ['header', 'body', 'footer'];\r\n    let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n    if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n    list = Array.from(me.children).filter(el => !el.slot);\r\n    const tagList = ['TEMPLATE', 'GS-ITEM'];\r\n    const allowed = GSDOM.isAllowed(list, tagList);\r\n    if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    const isValid = me.checkValidity();\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  checkValidity() {\r\n\r\n    const me = this;\r\n    const el = me.field;\r\n\r\n    let isValid = el?.checkValidity();\r\n    for (const r of me.#patterns) {\r\n      isValid = r.test(el?.value);\r\n      if (!isValid) break;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  reportValidity() {\r\n    const me = this;\r\n    const el = me.field;\r\n    const msg = me.#patterns.length > 0 ? 'Invalid input' : '';\r\n    el?.setCustomValidity(msg);\r\n    return el?.reportValidity();\r\n  }\r\n\r\n  get value() {\r\n    return this.field?.value;\r\n  }\r\n\r\n  set value(val) {\r\n    GSDOM.fromObject2Element(this.field, { [this.name]: val });\r\n    this.validate();\r\n    this.#onRange();\r\n  }\r\n\r\n  get isFloating() {\r\n    return this.layout === 'floating';\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.layout === 'horizontal';\r\n  }\r\n\r\n  get isVertical() {\r\n    return this.layout === 'vertical';\r\n  }\r\n\r\n  get isFieldset() {\r\n    const me = this;\r\n    return me.type === 'radio' && me.value?.includes(',');\r\n  }\r\n\r\n  get isCheckable() {\r\n    const me = this;\r\n    return me.isCheck || me.isRadio || me.isSwitch;\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.field.checked;\r\n  }\r\n\r\n  get isCheck() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get isRadio() {\r\n    return this.type === 'radio';\r\n  }\r\n\r\n  get isSwitch() {\r\n    return this.type === 'switch';\r\n  }\r\n\r\n  get isNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  get isRange() {\r\n    return this.type === 'range';\r\n  }\r\n\r\n  get isText() {\r\n    return this.type === 'text';\r\n  }\r\n\r\n  get isPassword() {\r\n    return this.type === 'passsword';\r\n  }\r\n\r\n  get isEmail() {\r\n    return this.type === 'email';\r\n  }\r\n\r\n  get isURL() {\r\n    return this.type === 'url';\r\n  }\r\n\r\n  get isFile() {\r\n    return this.type === 'file';\r\n  }\r\n\r\n  get field() {\r\n    return this.#inputRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref, repeat } from '../lib.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSFormGroupElement } from './FormGroup.mjs';\r\n\r\n/**\r\n * Component is responsible for auto-building gs-form and gs-form-group elements\r\n * from either JSON data or GS-ITEM elements.\r\n */\r\nexport class GSFormPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    formStorage: { attribute: 'form-storage' },\r\n    disabled: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.#proxify;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<gs-form ${ref(me.#formRef)}\r\n      ?disabled=${me.disabled} \r\n      storage=\"${ifDefined(me.formStorage)}\" \r\n      .locale=\"${me.locale}\"\r\n      .rtl=\"${me.rtl}\"\r\n      .css=\"${me.css}\"\r\n      .theme=\"${me.theme}\"\r\n      .margin=\"${me.margin}\"\r\n      .padding=\"${me.padding}\"\r\n      .border=\"${me.border}\"\r\n      .shadow=\"${me.shadow}\"\r\n      .os=\"${me.os}\"\r\n      .browser=\"${me.browser}\"\r\n      .environment=\"${me.environment}\"\r\n      .orientation=\"${me.orientation}\"\r\n      .protocol=\"${me.protocol}\">\r\n      <slot>\r\n        ${repeat(me.data, (r) => html`<gs-form-group .data=${r} locale=\"${ifDefined(me.locale)}\" ></gs-form-group>`)}\r\n      </slot>\r\n    </form>`;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  get #proxify() {\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, GSFormGroupElement.properties));\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGroupElement class\r\n * @module components/GSGroupElement\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { ElementNavigationController } from '../controllers/ElementNavigationController.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { classMap, createRef, html, render, ifDefined, ref } from '../lib.mjs';\r\n\r\n/**\r\n * Renderer for grouped elements such as Buttons, Navs, Tabs and lists.\r\n * Components handles grouped elements navigation, selection and focus.\r\n * \r\n * @class\r\n * @extends { GSElement }\r\n */\r\nexport class GSGroupElement extends GSElement {\r\n\r\n  static properties = {\r\n    // multiple lists with single select across \r\n    group : {},\r\n    storage: {},    \r\n    circular: { type: Boolean },\r\n    multiple: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #elRef = createRef();\r\n  #controller;\r\n  #controllerGroup;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.data = me.initData();\r\n    me.#controller = new ElementNavigationController(me);\r\n    me.#controllerGroup = new GroupController(me);\r\n  }\r\n\r\n  #prerender() {\r\n    const me = this;\r\n    me.queryAll('[generated]').forEach(el => el.remove());\r\n    if (me.data.length > 0) {\r\n      const items = me.renderItems();\r\n      const tpl = document.createElement('template');\r\n      render(items, tpl);\r\n      Array.of(...tpl.children).forEach(el => GSDOM.appendChild(me, el));\r\n    }\r\n  }\r\n  \r\n  firstUpdated(changed) {\r\n    const me = this;\r\n    me.#controller.init();\r\n    me.#controller.attach(me.#elRef.value);\r\n    super.firstUpdated(changed);\r\n    //me.#prerender();\r\n  }  \r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.#prerender();\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      ${me.renderWrappedUI()}\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedUI(name) {\r\n    const me = this;\r\n    return html`<div \r\n      class=\"${classMap(me.renderWrappedClass())}\">\r\n      <slot name=\"${ifDefined(name)}\"></slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    return {};\r\n  }\r\n\r\n  renderItems() {\r\n    return '';\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSItem);\r\n  }\r\n\r\n  previous() {\r\n    this.#controller.previous();\r\n  }\r\n\r\n  next() {\r\n    this.#controller.next();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    this.#controller.reset();\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  isNavigable(el) {\r\n    return el?.tagName === this.childTagName;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onBusEvent(e) {\r\n    let owner, item;  \r\n    ({owner, item} = e.detail);\r\n    if (owner != this) {\r\n      if (!item?.disabled || owner?.selectable) {\r\n        this.reset();\r\n      }\r\n    }\r\n  }\r\n  \r\n  onSelected(el) {\r\n    this.#controllerGroup.notify(el);\r\n  }\r\n\r\n  get focused() {\r\n    return this.#controller.focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#controller.selected;\r\n  }\r\n\r\n  get childTagName() {\r\n    return '';\r\n  }\r\n    \r\n  get items() {\r\n    const me = this;\r\n    return me.queryAll(me.childTagName);\r\n  }\r\n\r\n  get generated() {\r\n    const me = this;\r\n    return this.queryAll(`${me.childTagName}[generated]`);\r\n  }\r\n\r\n  get active() {\r\n    const me = this;\r\n    if (me.multiple) return me.queryAll(`${me.childTagName}[active]`);\r\n    return me.query(`${me.childTagName}[active]`);\r\n  }\r\n\r\n  settings(el) {\r\n    const tagName = customElements.getName(el)?.toUpperCase() || 'GS-ITEM';\r\n    const cfg = GSElement.allProperties(el);\r\n    const items = Array.from(this.children).filter(e => e.tagName === tagName ).map(el => GSAttr.proxify(el, cfg));\r\n    const active = items.filter(el => el.active);\r\n    active.forEach((el, idx) => el.active = idx === 0);\r\n    return items;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-group');\r\n  }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGT0 } from '../properties/index.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSIconElement extends GSElement {\r\n\r\n  static styles = css`\r\n    :host {\r\n      --gs-icon-super-color : cornflowerblue;\r\n      --gs-icon-content : '';\r\n    }\r\n    i::after {\r\n      top: -8px;\r\n      font-size: 0.7em;\r\n      position: relative;\r\n      content: var(--gs-icon-content);\r\n      content: attr(data-super);\r\n      color: var(--gs-icon-super-color);\r\n    }`;\r\n\r\n  static properties = {\r\n    name: { reflect: true, hasChanged: notEmpty },\r\n    size: { reflect: true, type: Number, hasChanged: numGT0 },\r\n    color: { reflect: true, ...color },\r\n    superColor: { attribute : 'super-color'},\r\n    super: { reflect: true },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    _clicked: { attribute:false},\r\n    _hovered: { attribute:false},\r\n  }\r\n\r\n  #ref = createRef();\r\n  \r\n  constructor() {\r\n    super();\r\n    //this.flat = true;\r\n  }\r\n\r\n  /*\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    this.#embdeded = GSDOM.matches(this.parentComponent, '[icon]');\r\n  }\r\n  */\r\n\r\n  updated(changed) {\r\n    if (changed.has('_clicked')) {\r\n      if (this._clicked) this.#postAnimate();\r\n    } \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.setCSSProperty(':host', '--gs-icon-super-color', me.superColor);\r\n    return html`<i  ${ref(me.#ref)}\r\n       class=\"bi ${classMap(me.renderClass())}\"\r\n       data-super=\"${ifDefined(me.super)}\"\r\n       @click=\"${me.animate}\"\r\n       @mouseover=\"${me.#onMouseOver}\"\r\n       @mouseout=\"${me.#onMouseOut}\"></i>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      [`text-${me.color}`]: me.color,\r\n      [`bi-${me.name}`]: me.name,\r\n      'fs': me.size > 0,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.clickCss]: me._clicked,\r\n      [me.hoverCss]: me._hovered,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  async #postAnimate() {\r\n    const me = this;\r\n    const delay = GSUtil.asNum(me.dataset.delay, 1);\r\n    if (delay > 0) {\r\n      await GSUtil.timeout(delay * 1000);\r\n      me._clicked = false;\r\n    }    \r\n  }\r\n\r\n  #onMouseOver(e) {\r\n    this.hover(true);\r\n  }\r\n\r\n  #onMouseOut(e) {\r\n    this.hover(false);\r\n  }\r\n\r\n  animate() {\r\n    const me = this;\r\n    me._hovered = false;\r\n    me._clicked = true;\r\n  }\r\n\r\n  hover(sts = false) {\r\n    const me = this;\r\n    if (sts) {\r\n      me._clicked = false;\r\n    }\r\n    me._hovered = sts;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-icon');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/index.mjs';\r\n\r\nexport class GSIndentElement extends GSElement {\r\n\r\n  static styles = css`.indent {\r\n      --gs-indent : 10px;\r\n      margin-left: var(--gs-indent);\r\n      margin-right: var(--gs-indent);\r\n    }`;\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    size: { type: Number, hasChanged: numGT0 },\r\n    multiplier: { type: Number, hasChanged: numGT0 }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.size = 1;\r\n    me.multiplier = 10;\r\n  }\r\n\r\n  renderUI() {\r\n    const size = this.size * this.multiplier;\r\n    return html`<span class=\"indent\" style=\"--gs-indent: ${size}px;\"></span>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-indent');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nconst numdef = { reflect: true, type: Number, hasChanged: numGE0 };\r\n\r\nexport class GSImageElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { hasChanged: notEmpty },\r\n    width: numdef,\r\n    height: numdef,\r\n    opacity: numdef,\r\n    invert: numdef,\r\n    grayscale: numdef,\r\n    brightness: numdef,\r\n    blur: numdef,\r\n    contrast: numdef,\r\n    saturate: numdef,\r\n    hue: numdef,\r\n    sepia: numdef,\r\n\r\n    alt: {},\r\n    loading: {}\r\n\r\n  }\r\n\r\n  #imageRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    this.#update();\r\n    return this.src;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<img ${ref(me.#imageRef)} \r\n            @load=\"${me.#onLoad}\"\r\n            src=\"${me.src}\" \r\n            alt=\"${me.alt}\" \r\n            loading=\"${ifDefined(me.loading)}\" \r\n            class=\"${me.#styleID}\" \r\n            data-gs-class=\"${me.#styleID}\">\r\n          </img>`;\r\n  }\r\n\r\n  get complete() {\r\n    return this.#imageRef.value?.complete || false;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  #renderStyle() {\r\n    const me = this;\r\n    const filter = me.#buildFilter();\r\n    const css = {\r\n      width: me.width > 0 ? me.width : undefined,\r\n      height: me.height > 0 ? me.height : undefined,\r\n      filter: filter.length > 0 ? filter.join(' ') : ''\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #buildFilter() {\r\n    const me = this;\r\n    const o = [];\r\n\r\n    if (me.blur > 0) o.push(`blur(${me.blur}px)`);\r\n    if (me.invert > 0) o.push(`invert(${me.invert})`);\r\n    if (me.opacity > 0) o.push(`opacity(${me.opacity})`);\r\n    if (me.contrast > 0) o.push(`contrast(${me.contrast})`);\r\n    if (me.grayscale > 0) o.push(`grayscale(${me.grayscale})`);\r\n    if (me.brightness > 0) o.push(`brightness(${me.brightness})`);\r\n\r\n    if (me.hue > 0) o.push(`hue-rotate(${me.hue}deg)`);\r\n    if (me.sepia > 0) o.push(`sepia(${me.sepia}%)`);\r\n    if (me.saturate > 0) o.push(`saturate(${me.saturate}%)`);\r\n\r\n    return o;\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.filter = me.#buildFilter().join(' ').trim();\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const el = e.target;\r\n    const me = this;\r\n    if (el) {\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n      me.emit('loaded', { width: el.width, height: el.height, element: el }, true);\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-image');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayoutElement\r\n */\r\n\r\nimport { classMap, html, ifDefined, templateContent } from '../lib.mjs';\r\nimport { orientation, OrientationTypes } from '../properties/orientation.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSLayoutElement extends GSElement {\r\n\r\n    static properties = {\r\n        type: { ...orientation }\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        id : {},\r\n        type: {},\r\n        min: { type: Number },\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        resizable: { type: Boolean },\r\n        autofit: { type: Boolean },\r\n        vPos: { attribute: 'h-pos' },\r\n        hPos: { attribute: 'v-pos' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.autofit = true;  \r\n        me.#items(me).map((el, idx, els) => me.#dyncss(el, idx, els, 0));\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if ( this.autofit && GSDOM.root(this) === document.body) document.body.classList.add('vh-100');\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const list = me.#items(me).map((el, idx, els) => me.#build(el, idx, els));\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"d-flex flex-fill w-100 h-100 ${classMap(me.renderClass())}\">${list}</div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const horizontal = OrientationTypes.isHorizontal(me.type);\r\n        return {\r\n            ...super.renderClass(),\r\n            'flex-column': horizontal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #items(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSLayoutElement.options));\r\n    }\r\n\r\n    #resizable(el) {\r\n        return el.size > 0 || el.min > 0 || el.max > 0 || el.resizable;\r\n    }\r\n\r\n    #dyncss(el, idx, els, lev = 0) {\r\n        const me = this;\r\n        me.#items(el.self).map((it, idx, items) => me.#dyncss(it, idx, items, lev+1));\r\n        if(me.#resizable(el)) me.dynamicStyle(`gsd-${lev}-${idx}`);\r\n    }\r\n\r\n    #build(el, idx, els, lev = 0) {\r\n\r\n        const me = this;\r\n        const type = el.self.parentElement.type || 'vertical';\r\n\r\n        const list = me.#items(el.self).map((it, idx, items) => me.#build(it, idx, items, lev+1));\r\n        \r\n        const min = el.min;\r\n        const max = el.max;\r\n        const template = el.template;\r\n        const tplEl = me.#elementTemplate(el);\r\n\r\n        const tc = `#${tplEl?.id}` !== template;\r\n\r\n        const dir = el.type || type || 'vertical';\r\n        const horizontal = OrientationTypes.isHorizontal(dir);\r\n        \r\n        const col = list.length > 0 && horizontal ? 'flex-column' : '';\r\n\r\n        const did = `gsd-${lev}-${idx}`;\r\n        const css = me.#panelCSS(el, col, did);\r\n        const style = me.#panelStyle(el, horizontal);\r\n        me.dynamicStyle(did, style);\r\n\r\n        const slot = el.name ? html`<slot name=\"${el.name}\"></slot>` : '';\r\n        const src = html`<div id=\"${ifDefined(el.id)}\" class=\"d-flex ${classMap(css)}\">\r\n            ${list}\r\n            ${templateContent(tplEl)}\r\n            ${template && tc ? html`<gs-template flat src=\"${template}\"></gs-template>` : ''}\r\n            ${slot}\r\n            </div>`;\r\n\r\n        if (!el.resizable) return src;\r\n\r\n        const resize = (idx === els.length - 1) ? 'end' : 'start';\r\n        const splitter = me.#splitter(min, max, type, resize);\r\n\r\n        if (idx === els.length - 1) return [splitter , src];\r\n        return [src, splitter];\r\n    }\r\n    \r\n    #elementTemplate(el) {\r\n        const tplEl = el.self.firstElementChild;\r\n        return tplEl instanceof HTMLTemplateElement ? tplEl : undefined;\r\n    }\r\n\r\n    #panelCSS(el, col, did) {\r\n\r\n        const resizable = this.#resizable(el);\r\n        const grow = resizable ? '' : 'flex-grow-1';\r\n\r\n        let vpos = el.vPos;\r\n        let hpos = el.hPos;\r\n\r\n        hpos = hpos ? `align-items-${hpos}` : '';\r\n        vpos = vpos ? `justify-content-${vpos}` : '';\r\n\r\n        const css = this.mapCSS(el.css, {\r\n            [did] : resizable,\r\n            [col] : col,\r\n            [grow] : grow,\r\n            [hpos] : hpos,\r\n            [vpos] : vpos\r\n        });\r\n    \r\n        return css;        \r\n    }\r\n\r\n    #panelStyle(el, horizontal) {\r\n        const min = el.size || el.min;\r\n        const max = el.max || el.size;\r\n        const style = {};\r\n        if (horizontal) {\r\n            style['min-height'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-height'] = max > 0 ? `${max}px` : undefined;\r\n        } else {\r\n            style['min-width'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-width'] = max > 0 ? `${max}px` : undefined;\r\n        }\r\n        return style;        \r\n    }\r\n\r\n    #splitter(min, max, dir, resize) {\r\n        return html`<gs-splitter split=\"${dir}\" resize=\"${resize}\" min=\"${min}\" max=\"${max}\"></gs-splitter>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-layout');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSLinklement extends GSElement {\r\n\r\n  static properties = {\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    size: { type: Number },\r\n    text: { ...color },\r\n    color: { ...color },\r\n    url: {},\r\n    ping: {},\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    target: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.url = '#';\r\n    // this.text = 'primary'; // do not set as default -> gs-dropdown\r\n    // this.target = '_blank'; // not used \r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n      <a ${ref(me.#refEl)}  \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        title=\"${ifDefined(me.translate(me.tooltip))}\" \r\n        href=\"${ifDefined(me.url)}\" \r\n        ping=\"${ifDefined(me.ping)}\" \r\n        target=\"${ifDefined(me.target)}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        ?disabled=${me.disabled} \r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"        \r\n        @click=\"${me.#onClick}\">\r\n        ${me.#first}${me.#second}\r\n        </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,      \r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [`text-${me.text}`]: me.text,\r\n      [`bg-${me.color}`]: me.color\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.iconEl?.animate();\r\n    me.notify();\r\n    if (me.url === '#' || GSUtil.isStringEmpty(me.url)) {\r\n      GSEvents.prevent(e);\r\n      me.handle(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon css=\"mx-1\" ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    size=\"${this.size}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  /**\r\n   * Generate clickable link\r\n   * @param {*} options \r\n   * @param {*} css \r\n   * @param {*} before \r\n   * @param {*} after \r\n   * @returns \r\n   */\r\n  static generate(options, css, before, after) {\r\n    const opt = options;\r\n    return html`<a class=\"${classMap(css)}\"\r\n        tabindex=\"0\"    \r\n        ${dataset(opt, true)}\r\n        part=\"${ifDefined(opt.part)}\"\r\n        tooltip=\"${ifDefined(opt.tooltip)}\"\r\n        href=\"${ifDefined(opt.url)}\">        \r\n        ${before || ''}\r\n        <slot>${opt.title}</slot> \r\n        ${after || ''}\r\n    </a>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-link');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\n\r\nexport class GSListElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    selectable: { reflect: true, type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = false;\r\n    this.multiple = false;\r\n    this.selectable = false;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  renderClass() {\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group': true,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    return html`<slot></slot>`;\r\n  }\r\n\r\n  reset() {\r\n    this.items.forEach(el => el.reset());\r\n    this.notify();\r\n  }\r\n\r\n  renderItems() {    \r\n    return this.data.map(o => {\r\n      return html`<gs-list-item generated\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-list-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return super.isNavigable(el) && this.selectable;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-LIST-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSListItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    size: { type: Number },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true }\r\n  }\r\n\r\n  #initial;\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.binded();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.#initial = this.active;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-LIST';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n        // allow single setting at the gs-list to applay to the child\r\n        // GSAttributeHandler.clone(this.parentComponent, this, false);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<a  tabindex=\"0\" ${ref(me.#refEl)}\r\n       href=\"${ifDefined(me.url)}\" \r\n       target=\"${ifDefined(me.target)}\" \r\n       class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()} \r\n        ${me.#renderSecond()}\r\n        <slot>${me.renderTemplate()}</slot>\r\n      </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.#itemCSS] : true,\r\n      'active': me.active && me.isSelectable()\r\n    }\r\n    return me.mapCSS(me.#itemStatusCSS, css);\r\n  }\r\n\r\n  isSelectable() {\r\n    return !GSUtil.asBool(this.disabled) || GSUtil.asBool(this.parentComponent.selectable);\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.icon ? html`<gs-icon name=\"${me.icon}\" size=\"${me.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderText() {\r\n    return this.title ? html`<span>${this.translate(this.title)}</span>` : html`<slot name=\"title\"></slot>`;\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.rtl ? this.#renderText() : this.#renderIcon();\r\n  }\r\n\r\n  #renderSecond() {\r\n    return this.rtl ? this.#renderIcon() : this.#renderText();\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || this.#initial || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #inactiveCSS() {\r\n    return this.parentComponent.dataset?.cssInactive || '';\r\n  }\r\n\r\n  get #itemCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #itemStatusCSS() {\r\n    return this.active && this.isSelectable() ? this.#activeCSS : this.#inactiveCSS;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { PlacementTypes, nav, placement } from '../properties/index.mjs';\r\n\r\nexport class GSNavElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    type: nav,\r\n    placement: placement,\r\n    vertical: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = true;\r\n    this.multiple = false;\r\n    this.type = 'pills';\r\n    this.placement = 'start';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-nav-item');\r\n  }\r\n  \r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const isBefore = PlacementTypes.isBefore(me.placement);\r\n    const isTab = me.type === 'tabs';\r\n    const css = {\r\n      'nav': true,\r\n      [`nav-${me.type}`]: me.type,\r\n      'flex-column': me.vertical,\r\n      'border-bottom-0': me.vertical,\r\n      'border-end': isTab && isBefore && me.vertical,\r\n      'border-start': isTab && !isBefore && me.vertical,\r\n      [`justify-content-${me.placement}`]: !me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Render items based on data propprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-nav-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-nav-item>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  onFocused(el) {\r\n    // el?.click();\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-NAV-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { NavTypes, PlacementTypes } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSNavItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    disabled: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    active: { type: Boolean, reflect: true }\r\n  }\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-NAV';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div class=\"nav-item ${classMap(me.renderClass())}\">${me.#button}</div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    return this.mapCSS(this.#itemsCSS, super.renderClass());\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get isNav() {\r\n    return true;\r\n  }\r\n\r\n  get vertical() {\r\n    return this.parentComponent.vertical || false;\r\n  }\r\n\r\n  get placement() {\r\n    return this.parentComponent.placement;\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #title() {\r\n    return html`<slot>${this.translate(this.title)}</slot>`;\r\n  }\r\n\r\n  get #icon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  get #first() {\r\n    return this.rtl ? this.#title : this.#icon;\r\n  }\r\n\r\n  get #second() {\r\n    return this.rtl ? this.#icon : this.#title;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#buttonCSS, {});\r\n    if (me.active) obj = me.mapCSS(me.#buildCSS + ' ' + me.#activeCSS, obj);\r\n    return html`<a tabindex=\"0\" type=\"button\" role=\"nav\" \r\n     ${ref(me.#refEl)}\r\n     class=\"nav-link ${classMap(obj)}\"\r\n     href=\"${ifDefined(me.url)}\" \r\n     target=\"${ifDefined(me.target)}\">\r\n        ${me.#first} \r\n        ${me.#second}\r\n      </a>`;\r\n  }\r\n\r\n  get #itemsCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #buttonCSS() {\r\n    return this.parentComponent.dataset?.cssButton || '';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #navType() {\r\n    return NavTypes.indexOf(this.parentComponent.type);\r\n  }\r\n\r\n  // fiix for shadowed DOM, parent class=\"nav nav-pills..\" \r\n  // do not cross shadow dom, so item elements does not see CSS\r\n  // we have to simulate\r\n  get #buildCSS() {\r\n    const isVertical = this.vertical;\r\n    const isBefore = PlacementTypes.isBefore(this.placement);\r\n    switch (this.#navType) {\r\n      // pills\r\n      case 1: return 'rounded text-bg-primary';\r\n      // tabs\r\n      case 2:\r\n        if (isVertical) {\r\n          if (isBefore) {\r\n            return 'shadow-none border border-end-0';\r\n          } else {\r\n            return 'shadow-none border border-start-0';\r\n          }\r\n        }\r\n        return 'shadow-none border border-bottom-0';\r\n      // underline\r\n      case 3: return 'shadow-none border-bottom border-3 fw-medium';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { svg, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSOverlayElement extends GSElement {\r\n\r\n    static properties = {\r\n        color: {},\r\n        target: {},\r\n        autoremove: { type: Boolean },\r\n        opened: { type: Boolean },\r\n        opacity: { type: Number },\r\n        padding: { type: Number },\r\n        radius: { type: Number },\r\n    }\r\n\r\n    #styleID = GSID.id;\r\n    #styleID2 = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        //this.color = 'rgb(0,0,0)';\r\n        this.color = '#000';\r\n        this.opacity = 0.7;\r\n        this.padding = 1;\r\n        this.radius = 6;\r\n        this.dynamicStyle(this.#styleID);\r\n        this.dynamicStyle(this.#styleID2);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', () => me.requestUpdate());\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        if (!me.opened) return '';\r\n        const path = me.#path;\r\n        return path ? html`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlspce=\"preserve\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\" preserveAspectRatio=\"xMinYMin slice\"\r\n            viewvbox=\"0 0 ${window.innerWidth} ${window.innerHeight}\"\r\n            class=\"gs-overlay gs-overlay-animated ${me.#styleID}\"\r\n            @click=\"${me.reset.bind(me)}\">\r\n            ${path}\r\n        </svg>` : '';\r\n    }\r\n\r\n    async firstUpdated(changed) {\r\n        const me = this;\r\n        const opt = {\r\n            fillRule: \"evenodd\",\r\n            clipRule: \"evenodd\",\r\n            strokeLinejoin: \"round\",\r\n            strokeMiterlimit: \"2\",\r\n            zIndex: \"10000\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    get #path() {\r\n        const me = this;\r\n        const el = GSDOM.query(me.target);\r\n        if (!me.target) return '';\r\n        const pathStr = me.#createSVGPathString(el);\r\n        const opt = { fill: me.color, opacity: me.opacity, pointerEvents: 'auto', cursor: 'auto' };\r\n        me.dynamicStyle(me.#styleID2, opt);\r\n        return svg`<path class=\"${me.#styleID2}\"  d=\"${pathStr}\"></path>`;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n\r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n\r\n        const rect = target.getBoundingClientRect();\r\n\r\n        const padding = me.padding;\r\n        const radius = me.radius;\r\n\r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n\r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n\r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n\r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n\r\n        const val = `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n            M${highlightBoxX},${highlightBoxY} \r\n            h${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n            v${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n            h-${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n            v-${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;\r\n        return val.replace(/[\\t\\n]/g, ' ');\r\n    }\r\n\r\n    static {\r\n        this.define('gs-overlay');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, map, range, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { size, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSPagerElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    size: { ...size },\r\n    first: { type: Boolean },\r\n    last: { type: Boolean },\r\n    next: { type: Boolean },\r\n    previous: { type: Boolean },\r\n    pages: { type: Number },\r\n\r\n    labelFirst: { attribute: 'label-first' },\r\n    labelLast: { attribute: 'label-last' },\r\n    labelNext: { attribute: 'label-next' },\r\n    labelPrevious: { attribute: 'label-previous' },\r\n\r\n    cssItem: { attribute: 'css-item' },\r\n\r\n  }\r\n\r\n  #ref = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.pages = 5;\r\n    this.labelFirst = '&laquo;';\r\n    this.labelLast = '&raquo;';\r\n    this.labelNext = '&rsaquo;';\r\n    this.labelPrevious = '&lsaquo;';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const half = Math.floor((me.pages - 1) / 2);\r\n    const page = me.dataController?.page || 0;\r\n    const start = page - half < 1 ? 1 : page - half;\r\n    const end = page > 0 ? page + half : me.pages;\r\n\r\n    return html`<nav \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        @click=\"${me.#onClick}\"\r\n        @keyup=\"${me.#onKeyUp}\"\r\n        @keydown=\"${me.#onKeyDown}\">\r\n        <ul ${ref(me.#ref)} class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()}\r\n        ${me.#renderPrevious()}\r\n        ${map(range(start, end + 1), (i) => me.#renderItem(i, '', '', i  === page))}\r\n        ${me.#renderNext()}\r\n        ${me.#renderLast()}\r\n        </ul></nav>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = me.size ? SizeTypes[me.size] || me.size : '';\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'pagination': true,\r\n      [`pagination-${size}`]: size,\r\n\r\n    }\r\n    return css;\r\n  }\r\n\r\n  updated() {\r\n    const target = this.#ref.value;\r\n    if (target && this.isFocused) {\r\n      target.querySelector('.active > a')?.focus();\r\n    }\r\n  }\r\n\r\n  onDataRead() {\r\n    this.requestUpdate();\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.first ? this.#renderItem(this.labelFirst, 'first', 'First page') : '';\r\n  }\r\n\r\n  #renderLast() {\r\n    return this.last ? this.#renderItem(this.labelLast, 'last', 'Last page') : '';\r\n  }\r\n\r\n  #renderPrevious() {\r\n    return this.previous ? this.#renderItem(this.labelPrevious, 'previous', 'Previous page') : '';\r\n  }\r\n\r\n  #renderNext() {\r\n    return this.next ? this.#renderItem(this.labelNext, 'next', 'Next page') : '';\r\n  }\r\n\r\n  #renderItem(text = '', name = '', title = '', active = false) {\r\n    const me = this;\r\n    text = GSUtil.decodeHTMLEntities(text);\r\n    return html`<li class=\"page-item ${active ? 'active' : ''}\">\r\n              <a class=\"page-link ${this.cssItem}\" \r\n                 name=\"${name}\" \r\n                 title=\"${me.translate(title)}\" \r\n                 href=\"#\">${me.translate(text)}</a>\r\n            </li>`;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const el = this.#toTarget(e, 'a');\r\n    if (!el) return;\r\n\r\n    const ctrl = me.dataController;\r\n    if (!ctrl) return;\r\n\r\n    const val = el.name || el.text;\r\n    me.emit(val, el);\r\n    \r\n    switch (val) {\r\n      case 'first':\r\n        return ctrl.firstPage();\r\n      case 'last':\r\n        return ctrl.lastPage();\r\n      case 'next':\r\n        return ctrl.nextPage();\r\n      case 'previous':\r\n        return ctrl.prevPage();\r\n    }\r\n\r\n    ctrl.page = val;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const current = this.#toTarget(e, 'li');\r\n    let el = null;\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        el = current?.previousElementSibling;\r\n        break;\r\n      case 'ArrowRight':\r\n        el = current?.nextElementSibling;\r\n        break;\r\n    }\r\n    el = el?.querySelector('a');\r\n    el?.focus();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') {\r\n      this.#toTarget(e, 'a')?.click();\r\n    }\r\n  }\r\n\r\n  #toTarget(e, name) {\r\n    const el = e.target.closest(name) || e.target;\r\n    return el.tagName === name.toUpperCase() ? el : undefined;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-pagination');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, position } from '../properties/index.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSPopper } from \"../base/GSPopper.mjs\";\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopupElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    position: { ...position },\r\n    trigger: {},\r\n    target: {},\r\n    autoclose: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    opened: { type: Boolean },\r\n    hPos: { type: Number, attribute: 'h-pos' },\r\n    vPos: { type: Number, attribute: 'v-pos' },\r\n    wMin: { type: Number, attribute: 'w-min' },\r\n    wMax: { type: Number, attribute: 'w-max' },\r\n    hMin: { type: Number, attribute: 'h-min' },\r\n    hMax: { type: Number, attribute: 'h-max' },\r\n\r\n  }\r\n\r\n  #caller = null;\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.autofocus = true;\r\n    this.autoclose = true;\r\n    this.trigger = 'click';\r\n    this.position = 'absolute';\r\n    this.placement = 'bottom';\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachTaraget();\r\n    me.attachEvent(window, 'resize', me.close.bind(me));\r\n    me.on('mouseleave', me.#onAuto.bind(me));\r\n  }\r\n\r\n  firstUpdated(changedProperties) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#resize();\r\n      me.#reposition();\r\n    });\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#reposition();\r\n    if (me.autofocus) me.focus();\r\n    me.notify();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div \r\n      ${ref(me.#panelRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"fade ${classMap(me.renderClass())}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      @keydown=\"${me.#onKeyDown}\">\r\n      ${me.renderTemplate()}\r\n      <slot></slot>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': me.opened,\r\n      //'d-none' : !me.opened,\r\n      [me.#styleID]: true,\r\n      [`position-${me.position}`]: me.position,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  focus() {\r\n    this.query('[tabindex], input, select, textarea, button, a', true)?.focus();\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Show popup at x/y position on the screen\r\n   * @param {Number} x \r\n   * @param {Number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const obj = {\r\n      top: '0px',\r\n      left: '0px',\r\n      translate: `${x}px ${y}px`\r\n    };\r\n    me.#resize(obj);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      case 'Escape':\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    //if (!me.opened) return;\r\n    if (me.vPos || me.hPos) {\r\n      const opt = {\r\n        top: '0px',\r\n        left: '0px',\r\n        translate: `${me.hPos}px ${me.vPos}px`\r\n      };\r\n      const rule = me.dynamicStyle(me.#styleID);\r\n      Object.assign(rule.style, opt);\r\n    } else if (me.target) {\r\n      let target = GSDOM.query(document.documentElement, me.target);\r\n      target = target.renderRoot?.firstElementChild || target;\r\n      GSPopper.popupFixed(me.placement, me.#panel, target);\r\n    }\r\n\r\n  }\r\n\r\n  #resize(obj = {}) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n    if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n    if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n    if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n    Object.assign(rule.style, obj);\r\n  }\r\n\r\n  #onPopup(e) {\r\n    const me = this;\r\n    me.#caller = e;\r\n    if (e instanceof Event) {\r\n      GSEvents.prevent(e);\r\n      me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n    }\r\n\r\n    if (me.placement) {\r\n      GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n      me.opened = true;\r\n      return;\r\n    }\r\n\r\n    let x = e.clientX, y = e.clientY;\r\n    const rect = me.#panel.getBoundingClientRect();\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #attachTaraget() {\r\n    const me = this;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    me.trigger.split(' ').forEach(evt => {\r\n      targets.forEach(target => me.attachEvent(target, evt, me.#onPopup.bind(me)));\r\n    });\r\n  }\r\n\r\n  #onAuto(e) {\r\n    if (this.autoclose) this.close();\r\n  }\r\n\r\n  get #panel() {\r\n    return this.#panelRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-popup');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, classMap, ifDefined } from '../lib.mjs';\r\nimport { literalTemplate } from '../directives/literal.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSProgressElement extends GSElement {\r\n\r\n  static properties = {\r\n    min: { reflect: true, type: Number },\r\n    max: { reflect: true, type: Number },\r\n    step: { reflect: true, type: Number },\r\n    value: { reflect: true, type: Number },\r\n    label: { reflect: true }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.min = 0;\r\n    this.step = 1;\r\n    this.max = 100;\r\n    this.value = 0;\r\n    this.styles = { width: '0%' };\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'progress-bar' : true,\r\n      [me.#styleID] : true\r\n    }\r\n    return css;\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#updateStyle();\r\n    const obj = {min :me.min, max:me.max, step:me.step, value:me.value, percentage:me.percentage};\r\n    return html`\r\n    <div class=\"progress\" @keydown=\"${me.#onKeySelect}\" dir=\"${ifDefined(me.direction)}\">\r\n        <div class=\"${classMap(me.renderClass())}\" \r\n             \r\n             role=\"progressbar\"\r\n             tabindex=\"0\">\r\n             ${literalTemplate(me.label, obj)}\r\n        </div>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    if (changed.has('value')) {\r\n      let val = me.step + changed.get('value');\r\n      val = me.#update(val, val);\r\n      changed.set('value', val);\r\n    }\r\n  }\r\n\r\n  updated(changed) {\r\n    if (changed.has('value')) {\r\n      this.notify();\r\n    }\r\n  }\r\n\r\n  increase(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value + val, me.value);\r\n    return true;\r\n  }\r\n\r\n  decrease(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value - val, me.value);\r\n    return true;\r\n  }\r\n\r\n  get percentage() {\r\n    const me = this;\r\n    return Math.trunc((me.value / me.max) * 100);\r\n  }\r\n\r\n  #updateStyle() {\r\n    const me = this;\r\n    me.styles.width = `${me.percentage}%`;\r\n    me.dynamicStyle(me.#styleID, me.styles);\r\n  }\r\n\r\n  #update(val, old = 0) {\r\n    val = GSUtil.asNum(val, GSUtil.asNum(old));\r\n    const me = this;\r\n    if (val > me.max) val = me.max;\r\n    if (val < me.min) val = me.min;\r\n    return val;\r\n  }\r\n\r\n  #onKeySelect(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp' :\r\n      case 'ArrowRight' :\r\n          return me.increase();\r\n      case 'ArrowLeft' :\r\n      case 'ArrowDown' :\r\n         return me.decrease();\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-progress');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\n\r\nexport class GSSpinnerElement extends GSElement {\r\n\r\n    static styles = css`.spinner-border { border: var(--bs-spinner-border-width) solid currentcolor; border-right-color: transparent; }`;\r\n\r\n    static properties = {\r\n        color: { ...color, reflect: true },\r\n        small: { type: Boolean, reflect: true },\r\n        pulsar: { type: Boolean }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\" role=\"status\"></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"spinner-border\": !me.pulsar,\r\n            \"spinner-grow\": me.pulsar,\r\n            [`text-${me.color}`]: me.color,\r\n            [`spinner-border-sm`]: !me.pulsar && me.small,\r\n            [`spinner-grow-sm`]: me.pulsar && me.small,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-spinner');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitterElement class\r\n * @module components/GSSplitterElement\r\n */\r\n\r\nimport { classMap, createRef, ref, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCSSMap } from '../base/GSCSSMap.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { notEmpty, numGT0, placement } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSSplitterElement extends GSElement {\r\n\r\n    static properties = {\r\n        // Check if splitter use vertical or horizontal splitting\r\n        split: { reflect: true },\r\n        // start|end|top|bottom\r\n        resize: { ...placement, hasChanged: notEmpty },\r\n        size: { type: Number, hasChanged: numGT0 }\r\n    }\r\n\r\n    #cursor = 0;\r\n    #styleID = GSID.id;\r\n    #styleTGT = GSID.id;\r\n    #elRef = createRef();\r\n    #mouseController;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.size = 8;\r\n        me.resize = 'start';\r\n        me.dynamicStyle(me.#styleID);\r\n        me.#load();\r\n        me.#mouseController = new ElementMoveController(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        //this.dynamicStyle(this.#styleTGT, null, true);\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        super.firstUpdated(changed);\r\n        const me = this;\r\n        me.#mouseController.attach(me.#splitter);\r\n        //const shadow = GSDOM.root(me.target) instanceof ShadowRoot;\r\n        //me.dynamicStyle(me.#styleTGT, {}, !shadow);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#elRef)} \r\n            @dblclick=\"${me.#onDoubleClick}\"\r\n            data-gs-class=\"${me.#styleID}\" \r\n            class=\"${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'splitter': true,\r\n            [me.#styleID]: true\r\n        }\r\n        return css;\r\n    }\r\n\r\n    updated(changedProperties) {\r\n        const me = this;\r\n        me.#cssUpdate();\r\n    }\r\n\r\n    /**\r\n    * Lock UI for mouse events to enable resizing over embedded iframes\r\n    * @param {MouseEvent} e \r\n    */\r\n    onStartMove(e) {\r\n        const me = this;\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', { start: true });\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    onMouseMove(e) {\r\n        const me = this;\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Save last position and unlock mouse UI events when resizing finished\r\n     * @param {*} e \r\n     */\r\n    onEndMove(e) {\r\n        const me = this;\r\n        me.#save();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', { stop: true });\r\n    }\r\n\r\n    /**\r\n    * Check if splitter use vertical or hotizontal splitting\r\n    * @returns {Boolean}\r\n    */\r\n    get isVertical() {\r\n        return this.split === 'vertical';\r\n    }\r\n\r\n    get isHorizontal() {\r\n        return !this.isVertical;\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display', 'none')).pop();\r\n        }\r\n        el.classList?.add(me.#styleTGT);\r\n        return el;\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.#elRef.value;\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        return this.target.style;\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n\r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n                .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, true);\r\n                    el.dataset.gsSplitter = true;\r\n                });\r\n        } else {\r\n            me.#lockable\r\n                .filter(el => el.dataset.gsSplitter)\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, false);\r\n                    delete el.dataset.gsSplitter;\r\n                });\r\n        }\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { width: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { height: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        const key = me.isVertical ? 'width' : 'height';\r\n        me.#styleDynamic[key] = val + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { [key]: val + \"px\" }, true);\r\n    }\r\n\r\n    #cssUpdate() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        const opt = {\r\n            [size]: `${me.size}px`,\r\n            [full]: '100%',\r\n            'border-width': '1px',\r\n            cursor: cursor,\r\n            'border-color': 'darkgray',\r\n            'border-style': 'solid',\r\n            'background-color': 'lightgray',\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-splitter');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNavItemElement } from '../NavItem.mjs';\r\n\r\n/**\r\n * Tab component (gs-tab), generate selectable/switchable tabs on a panel\r\n */\r\nexport class GSTabItemElement extends GSNavItemElement {\r\n\r\n  static properties = {\r\n    name: {}\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.#updateCSS + this.css;\r\n  }\r\n\r\n  get #updateCSS() {\r\n    const me = this;\r\n    return me.shouldUpdate() ? GSUtil.normalize(me.parentComponent?.tabCSS) : '';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.parentComponent?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\n\r\n/**\r\n * Container for individual tab; part of tabed panel\r\n */\r\nexport class GSTabPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    name: {},\r\n    template: {},\r\n    active: { type: Boolean, reflect : true }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.active = false;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" \r\n      class=\"${classMap(this.renderClass())}\">\r\n      <slot>\r\n      ${this.template ? html`<gs-template flat src=\"${this.template}\"></gs-template>` : ''}\r\n      </slot></div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tab-pane': true,\r\n      'd-none' : !me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tab-group') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../../base/GSID.mjs';\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { PlacementTypes } from '../../properties/placement.mjs';\r\nimport { GSNavElement } from '../Nav.mjs';\r\n\r\n/**\r\n * Panel with tabs component (gs-tab-group), generate childrens gs-tab and gs-tab-panel \r\n */\r\nexport class GSTabGroupElement extends GSNavElement {\r\n\r\n  static properties = {\r\n    panelCSS: { attribute: 'css-panel' },\r\n    tabCSS: { attribute: 'css-tab' },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n   \r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    // link tabs and panels\r\n    me.items.forEach(el => me.#findPanel(el));\r\n    me.onSelected(me.active);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.items.forEach(el => me.#findPanel(el));\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'd-flex': me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    const me = this;\r\n    const reverse = PlacementTypes.isAfter(me.placement);\r\n    const list = [super.renderWrappedUI('tabs'),\r\n    html`<div class=\"tab-content flex-fill ${me.panelCSS}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <slot name=\"panels\"></slot>\r\n      </div>\r\n      <slot class=\"d-none\"></slot>`];\r\n    return reverse ? list.reverse() : list;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const css = super.renderWrappedClass();\r\n    return me.mapCSS(me.tabCSS, css);\r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    const me = this;\r\n    const tabs =  me.#renderTabs();\r\n    const panels = me.#renderPanels();\r\n    return tabs.concat(...panels);\r\n  }\r\n\r\n  #renderTabs() {    \r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab generated slot=\"tabs\"\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\"    \r\n        title=\"${ifDefined(o.title)}\"\r\n        name=\"${o.name}\"></gs-tab>`;\r\n    });    \r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  #renderPanels() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-panel generated  \r\n        slot=\"panels\" name=\"${o.name}\" \r\n        .active=\"${ifDefined(o.active)}\"\r\n        template=\"${ifDefined(o.template)}\"></gs-tab-panel>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when tab selected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onSelected(el) {\r\n    el?.click();\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = true;\r\n  }\r\n\r\n  /**\r\n   * Callback when tab deselected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onDeselected(el) {\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = false;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-TAB';\r\n  }\r\n\r\n  /**\r\n   * Selected Tab node name is used to find the panel.\r\n   * If panel found, auto-link it with node element\r\n   * @param {GSTabElement} el \r\n   */\r\n  #findPanel(el) {\r\n    if (!el) return null;\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    const generated = me.data?.length > 0;\r\n    let panel = el[key] || me.query(`gs-tab-panel[name=\"${el.name}\"]`, generated);\r\n    if (!el[key]) el[key] = panel;\r\n    return panel;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\n\r\n/**\r\n * A simple HTML Table rederer for read-only tabular data representation\r\n * For complex interactive dat use gs-table\r\n */\r\nexport class GSTableElement extends GSElement {\r\n\r\n  static #icons = ['sort-up', 'arrow-down-up', 'sort-down-alt'];\r\n\r\n  static styles = css`th:hover { opacity: 50% !important; }`;\r\n\r\n  static CELLS = {\r\n    align: {},\r\n    width: {},\r\n    width: {},\r\n    css: {},\r\n    title: {},\r\n    filter: { type: Boolean },\r\n    filterType: { attribute: 'filter-type' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    ...GSData.PROPERTIES\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    color: { ...color },\r\n    colorHead: { ...color, attribute: 'head-color' },\r\n    colorSelect: { ...color, attribute: 'select-color' },\r\n    colorSort: { ...color, attribute: 'sort-color' },\r\n    stripedColumn: { type: Boolean, attribute: 'striped-column' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    divider: { type: Boolean },\r\n    striped: { type: Boolean },\r\n    hover: { type: Boolean },\r\n    small: { type: Boolean },\r\n    grid: { type: Boolean },\r\n    borderless: { type: Boolean },\r\n\r\n    sort: { type: Array, state: true },\r\n    columns: { type: Array, state: true },\r\n    selections: { type: Array, state: true },\r\n    key: { type: Number, state: true },\r\n\r\n    data: { type: Array },\r\n    datacolumn: { type: Boolean },\r\n    multisort: { type: Boolean },\r\n    multiselect: { type: Boolean },\r\n    protected: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n    sortable: { type: Boolean },\r\n  }\r\n\r\n  #config = [];\r\n  #sortOrder = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.headColor = 'secondary';\r\n    this.colorSelect = 'info';\r\n    this.columns = [];\r\n    this.selections = [];\r\n    this.data = [];\r\n    this.sort = [];\r\n    this.key = 0;\r\n  }\r\n\r\n  get selected() {\r\n    const me = this;\r\n    return me.data.filter((v, i) => me.selections.includes(i));\r\n  }\r\n\r\n  set search(val) {\r\n    const me = this;\r\n    if (me.storage) {\r\n      return me.dataController.search = val;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#config = GSItem.proxify(me, GSTableElement.CELLS);\r\n    if (me.columns.length === 0) me.columns = me.#config.map(v => v.name);\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.data = [];\r\n    this.selections = [];\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'user-select-none': me.protected,\r\n      'table': true,\r\n      'table-sm': me.small,\r\n      'table-hover': me.hover,\r\n      'table-striped': me.striped,\r\n      'table-bordered': me.grid,\r\n      'table-borderless': me.borderless,\r\n      'table-striped-columns': me.stripedColumns,\r\n      [`table-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.dataController?.read();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (me.columns.length != me.sort.length) me.sort = Array(me.columns.length).fill(0);\r\n    if (me.datacolumn && me.data.length > 0) {\r\n      me.columns = me.data[0];\r\n      me.data = me.data.slice(1);\r\n    }\r\n    if (changed.has('multiselect') && !me.multiselect) me.selections = [];\r\n    if (changed.has('selectable') && !me.selectable) me.selections = [];\r\n    if (changed.has('sortable') || changed.has('multisort')) {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [];\r\n    }\r\n\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const headColor = me.colorHead ? `table-${me.colorHead}` : '';\r\n    return html`\r\n      <table  \r\n       dir=\"${ifDefined(me.direction)}\"\r\n       @keyup=\"${me.#onKeyUp}\"\r\n       @keydown=\"${me.#onKeyDown}\"\r\n       class=\"${classMap(me.renderClass())}\">\r\n        <thead class=\"${ifDefined(headColor)}\">\r\n          ${me.#renderFilters()}\r\n          <tr @click=${me.#onSort}>\r\n            ${me.columns.map((entry, index) => me.#renderColumn(entry, index))}\r\n          </tr>\r\n        </thead>\r\n        <tbody @click=${me.#onSelect} class=\"${me.divider ? 'table-group-divider' : ''}\" role=\"button\">\r\n          ${me.data.map((entry, index) => me.#renderRecord(entry, index))}\r\n          ${me.#renderEmpty()}\r\n        </tbody>\r\n      </table>\r\n      <slot name=\"extra\"></slot>\r\n    `;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    const me = this;\r\n    me.data = data;\r\n    me.selections = [];\r\n\r\n    // update filtering\r\n    if (data.length > 0 && me.#hasFilters) {\r\n      me.#config.forEach((entry, index) => {\r\n        entry.columnType = me.#columType(index);\r\n      });\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.#input.forEach(el => el.value = '');\r\n    this.dataController?.filter([]);\r\n  }\r\n\r\n  valueAt(row, cell) {\r\n    return this.data.length > row ? this.data[row][cell] : undefined;\r\n  }\r\n\r\n  get #input() {\r\n    return this.queryAll('th > input', true);\r\n  }\r\n\r\n  get #hasFilters() {\r\n    return this.#config.filter(o => o.filter).length > 0;\r\n  }\r\n\r\n  #columType(index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const cell = me.valueAt(0, me.columns[index]);\r\n    cfg.type = cfg.type || 'text';\r\n    const cfgType = { 'string': 'text', 'currency': 'number', 'timestamp': 'datetime-local' }[cfg.type]\r\n    const dataType = cell instanceof Date ? 'date' : typeof cell;\r\n    return cell ? dataType : cfgType || cfg.type;\r\n  }\r\n\r\n  #renderFilters() {\r\n    const me = this;\r\n    return me.#hasFilters ? html`<tr>${me.columns.map((entry, index) => me.#renderFilter(entry, index))}</tr>` : '';\r\n  }\r\n\r\n  #renderFilter(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (!cfg?.filter) return html`<th></th>`;\r\n    let mask = '';\r\n    const isDate = cfg.columnType === 'date';\r\n    if (isDate) mask = cfg.format || GSUtil.getDateFormat(cfg.locale || GSUtil.locale);\r\n    const css = `${GSUtil.normalize(me.cssFilter)} ${GSUtil.normalize(cell.cssFilter)}`; \r\n\r\n    return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n        <input is=\"gs-ext-input\" .index=${index}\r\n            class=\"form-control ${css}\" \r\n            mask=\"${ifDefined(mask)}\"\r\n            name=\"${cell}\" \r\n            type=\"${cfg.filterType || cfg.columnType}\"\r\n            data-slots=\"${ifDefined(isDate ? 'DMY' : undefined)}\">\r\n        </th>`;\r\n  }\r\n\r\n  #renderColumn(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const css = `${GSUtil.normalize(me.cssHeader)} ${GSUtil.normalize(cell.cssHeader)}`; \r\n    return html`\r\n      <th .index=${index} class=\"${css}\" width=\"${ifDefined(me.#config[index]?.width)}\">\r\n        <div class=\"d-flex justify-content-between\"> \r\n          <span>${cfg?.title || cell}</span>\r\n          ${me.#renderIcon(index)}\r\n        </div>\r\n      </th>\r\n    `\r\n  }\r\n\r\n  #renderIcon(index) {\r\n    const me = this;\r\n    if (!me.sortable) return '';\r\n    const icons = GSTableElement.#icons;\r\n    const sortType = me.sort[index];\r\n    const order = me.multisort ? me.#sortOrder.indexOf(index) + 1 : '';\r\n    return html`<gs-icon name=\"${icons[sortType + 1]}\" super=\"${order > 0 ? order : ''}\" color=\"${ifDefined(me.colorSort)}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderRecord(entry, index) {\r\n    const me = this;\r\n    if (!Array.isArray(entry)) entry = me.columns.map(v => entry[v]);\r\n    entry = entry.map((val, i) => me.#config[i] ? GSData.format(me.#config[i], val) : val);\r\n    const color = me.colorSelect && me.selections.includes(index) ? `table-${me.colorSelect}` : '';\r\n    return html`\r\n        <tr .index=${index} class=\"${color}\" tabindex=\"0\">\r\n          ${entry.map((cell, i) => html`<td class=\"text-${me.#config[i]?.align}\"><span>${cell}</span></td>`)}\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  #renderEmpty() {\r\n    const me = this;\r\n    if (me.data.length > 0 ) return '';\r\n    return html`<tr data-ignore=\"true\"><td colspan=\"${me.columns.length}\" class=\"text-center fw-bold text-muted\">${me.translate('No Data')}</td></tr>`;\r\n\r\n  }\r\n\r\n  #onFilter(e) {\r\n    const me = this;\r\n    const filter = me.#input\r\n      .map(el => {\r\n        if (!el.value) return undefined;\r\n        const isDate = el.type === 'date';\r\n        const val = isDate ? el.valueAsDate : el.value;\r\n        const cfg = me.#config[el.index];\r\n        return { name: el.name, value: val, locale : cfg?.locale }\r\n      })\r\n      .filter(el => el?.value);\r\n    me.dataController.filter(filter);\r\n  }  \r\n\r\n  #onSort(e) {\r\n    const me = this;\r\n    if (!me.sortable) return;\r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const column = e.target.closest('th');\r\n    if (!icon || !column) return;\r\n    const idx = column.index !== undefined ? column.index : GSDOM.getElementIndex(column);\r\n    const current = me.sort[idx];\r\n    const sortType = current === 1 ? -1 : current + 1;\r\n\r\n    if (me.multisort) {\r\n      if (sortType == 0) {\r\n        me.#sortOrder = me.#sortOrder.filter(v => v != idx);\r\n      } else if (!me.#sortOrder.includes(idx)) {\r\n        me.#sortOrder.push(idx);\r\n      }\r\n    } else {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [idx];\r\n    }\r\n\r\n    me.sort[idx] = sortType;\r\n\r\n    const sort = me.#prepareSorter(me.sort, me.#sortOrder);\r\n\r\n    if (me.storage) {\r\n      return me.dataController.sort(sort);\r\n    }\r\n\r\n    me.data = GSData.sortData(me.data, sort);\r\n    me.emit('sort');\r\n  }\r\n\r\n  #prepareSorter(sort, sortOrder) {\r\n    const me = this;\r\n\r\n    if (sort.filter(v => v).length === 0) {\r\n      sort = Array(me.columns.length).fill(0);\r\n      sort[me.key] = 1;\r\n    }\r\n\r\n    // if data record is object (not simple array)\r\n    const isComplex = me.data[0] && !Array.isArray(me.data[0]);\r\n\r\n    // sort list \r\n    const list = sort.map((v, i) => v ? { name: isComplex ? me.columns[i] : undefined, col: i, ord: v, idx: sortOrder.indexOf(i) } : null).filter(v => v);\r\n\r\n    // order sort list by idx\r\n    sort = GSData.sortData(list, [{ name: 'idx', ord: 1 }]);\r\n\r\n    return sort;\r\n  }\r\n\r\n  #onSelect(e) {\r\n    const me = this;\r\n    if (!me.selectable) return;\r\n    const tr = e.target.tagName === 'TR' ? e.target : e.target.closest('tr');\r\n    if (!tr) return;\r\n    const isSelected = me.selections.includes(tr.index);\r\n    if (me.multiselect) {\r\n      if (isSelected) {\r\n        me.selections = me.selections.filter(v => v != tr.index);\r\n      } else {\r\n        me.selections.push(tr.index);\r\n        me.requestUpdate();\r\n      }\r\n    } else {\r\n      me.selections = isSelected ? [] : [tr.index];\r\n    }\r\n    me.emit('select');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    if (!e.target.matches('tbody tr')) return;\r\n    let el = null;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        el = e.target.previousElementSibling;\r\n        break;\r\n      case 'ArrowDown':\r\n        el = e.target.nextElementSibling;\r\n        break;\r\n    }\r\n\r\n    if (el) {\r\n      el.focus();\r\n      this.emit('focus', el);\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') this.#onSelect(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-table');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport { createRef, ref, classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { stringArrayConverter, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSTagElement}\r\n */\r\nexport default class GSTagElement extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static styles = css`\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n\r\n    static properties = {\r\n        placeholder: {},\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        name: {},\r\n        data: { type: Array },\r\n        values: { type: Array, reflect: true, converter: stringArrayConverter },\r\n        appendable: { type: Boolean },\r\n        color: { ...color },\r\n        closeColor: { ...color, attribute: 'close-color' },\r\n        cssClose: { attribute: 'css-close' },\r\n        cssTag: { attribute: 'css-tag' },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {}\r\n    }\r\n\r\n    #dataListRef = createRef();\r\n    #inputRef = createRef();\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = '';\r\n        this.data = this.#items;\r\n        this.closeColor = 'light';\r\n        this.color = 'primary';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const tags = me.#renderTags();\r\n        return html`\r\n        <div  dir=\"${ifDefined(me.direction)}\" \r\n            class=\"${classMap(me.renderClass())}\"\r\n            @click=\"${me.#onClick.bind(me)}\">\r\n            ${tags}\r\n            <input type=\"text\" \r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            ${ref(me.#inputRef)}\r\n            name=\"${me.name}\" \r\n            list=\"${me.name}_list\"\r\n            class=\"form-control d-flex w-auto flex-grow-1\" \r\n            placeholder=\"${me.#info}\">\r\n            <datalist ${ref(me.#dataListRef)} id=\"${me.name}_list\">${me.#renderList()}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"d-flex\": true,\r\n            \"flex-wrap\": true,\r\n            \"align-items-center\": true,\r\n            \"gap-1 \": true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    get #info() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return me.placeholder ? me.placeholder : alt;\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTagElement.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.data.length >= me.max;\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax || (!optEl && me.appendable == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (!me.values.includes(fld.value)) {\r\n            me.values.push(fld.value);\r\n            fld.value = '';\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const value = tagEl.dataset.value;\r\n        me.values = me.values.filter(v => v != value);\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v));\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        const size = me.size > 0 ? `fs-${me.size}` : '';\r\n        return html`<div class=\"${classMap(me.#tagClass)}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"${classMap(me.#btnClass)}\"></button></div>`;\r\n    }\r\n\r\n    get #tagClass() {\r\n        const me = this;\r\n        const opt = {\r\n            badge: true,\r\n            tag: true,\r\n            [`fs-${me.size}`]: me.size > 0,\r\n            [`bg-${me.color}`]: me.color ? true : false\r\n        }\r\n        return me.mapCSS(me.cssTag, opt);\r\n    }\r\n\r\n    get #btnClass() {\r\n        const me = this;\r\n        const opt = {\r\n            'btn-close': true,\r\n            'ms-1': true,\r\n            [`bg-${me.closeColor}`]: me.closeColor ? true : false\r\n        }\r\n        return me.mapCSS(me.cssClose, opt);\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        return me.data.map(v => html`<option value=\"${v}\">`);\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el));\r\n    }\r\n\r\n    get #items() {\r\n        return this.#proxify(this).map(el => el.name).filter(v => v ? true : false);\r\n    }\r\n\r\n    get #input() {\r\n        return this.#inputRef.value;\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.#dataListRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-tag');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSTextElement extends GSElement {\r\n\r\n  #text = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.#text = this.innerText;\r\n    this.innerText = \"\";\r\n  }\r\n\r\n  renderUI() {\r\n    return this.translate(this.#text);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-text');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSTooltipElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    title: {},\r\n    target: {},\r\n    opened: { type: Boolean },\r\n    local: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowStyle = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.placement = 'top';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowStyle);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      role=\"tooltip\"\r\n      data-popper-placement=\"${me.placement}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      <div ${ref(me.#arrowRef)} \r\n          class=\"tooltip-arrow ${me.#arrowStyle}\" \r\n          data-gs-class=\"${me.#arrowStyle}\">\r\n      </div>\r\n      <div class=\"tooltip-inner\">${me.translate(me.title)}</div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tooltip': true,\r\n      'bs-tooltip-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  #attachEvents() {\r\n    const me = this;\r\n    me.attachEvent(me.#ref, 'mouseenter', me.open.bind(me));\r\n    me.attachEvent(me.#ref, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const arrowEl = me.#arrow;\r\n    const panelEl = me.#panel;\r\n    if (!panelEl) return;\r\n    if (me.opened) {\r\n      GSPopper.popupFixed(me.placement, panelEl, me.#ref, arrowEl);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, { top: '-1000px', left: '-1000px' });\r\n    }\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return me.local ? me.#refLocal : me.#refGlobal;\r\n    }\r\n  }\r\n\r\n  get #refLocal() {\r\n    const root = GSDOM.root(this);\r\n    return GSDOM.query(root, this.target);\r\n  }\r\n  \r\n  get #refGlobal() {\r\n    return GSDOM.query(document.body, this.target);\r\n  }\r\n\r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-tooltip');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty } from '../properties/index.mjs';\r\n\r\nexport class GSTemplateElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { reflect: true, hasChanged: notEmpty }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    const me = this;\r\n    if (me.flat) {\r\n      me.renderOptions.renderBefore = me;\r\n      return me.parentElement;\r\n    }\r\n    return super.createRenderRoot();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${this.renderTemplate()}`;\r\n  }\r\n\r\n\ttemplateInjected() {\r\n\t\tthis.emit('template-injected', null, true, true);\r\n\t}\r\n\r\n  static {\r\n    this.define('gs-template');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle automatic field value copy and select\r\n */\r\nexport class CopySelectController {\r\n\r\n  #host;\r\n\r\n  #clickCallback;\r\n  #copyCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#clickCallback = me.#onClick.bind(me);\r\n    me.#copyCallback = me.#onCopy.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('click', me.#clickCallback);\r\n    me.#host.on('copy', me.#copyCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('click', me.#clickCallback);\r\n    me.#host.off('copy', me.#copyCallback);\r\n  }\r\n\r\n  #onCopy() {\r\n    GSUtil.writeToClipboard(this.#host.value);\r\n  }\r\n\r\n  #onClick(e) {\r\n      const me = this;\r\n      if (me.#host.autocopy) GSUtil.writeToClipboard(me.#host.value);\r\n      if (me.#host.autoselect) me.#host.select();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle field mask \r\n */\r\nexport class MaskController {\r\n\r\n  static #special = '.^$*+?()[]{}\\|';\r\n\r\n  static #maskType = {\r\n    x: /[0-9a-fA-F]/g,\r\n    n: /[0-9]/g,\r\n    y: /[0-9]/g,\r\n    m: /[0-9]/g,\r\n    d: /[0-9]/g,\r\n    h: /[0-9]/g,\r\n    s: /[0-9]/g,\r\n    '.': /[0-9]/g,\r\n    '#': /[a-zA-Z]/g,\r\n    '*': /[0-9a-zA-Z]/g,\r\n    '_': /./g\r\n  };\r\n\r\n  #back = false;\r\n  #slots;\r\n  #prev;\r\n  #first;\r\n  #accept;\r\n  #pattern;\r\n\r\n  #host;\r\n\r\n  #keyDownCallback;\r\n  #inputCallback;\r\n  #focusCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    me.#inputCallback = me.#format.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.initRules();\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n    me.#host.on('input', me.#inputCallback);\r\n    me.#host.on('focus', me.#focusCallback);\r\n    me.#host.on('blur', me.#blurCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n    me.#host.off('input', me.#inputCallback);\r\n    me.#host.off('focus', me.#focusCallback);\r\n    me.#host.off('blur', me.#blurCallback);\r\n  }\r\n\r\n  initRules() {\r\n    const me = this;\r\n    if (!me.pattern) return;\r\n    me.#slots = me.#builSlots();\r\n    me.#prev = (j => Array.from(me.pattern, (c, i) => me.#slots.has(c) ? j = i + 1 : j))(0);\r\n    me.#first = [...me.pattern].findIndex(c => me.#slots.has(c));\r\n    me.#accept = me.#builAccept();\r\n    me.#toPattern();    \r\n  }\r\n  \r\n  validate() {\r\n    const me = this;\r\n    me.setCustomValidity('');\r\n    me.#pattern.lastIndex = 0;\r\n    const isMatch = me.required ? me.#pattern.test(me.raw) : true;\r\n    const isValid = isMatch && me.checkValidity();\r\n    if (!isMatch) me.setCustomValidity('Data did not match pattern!');\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.#host.checkValidity();\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.#host.reportValidity();\r\n  }\r\n\r\n  setSelectionRange(i, j) {\r\n    this.#host.setSelectionRange(i, j);\r\n  }\r\n  \r\n  select() {\r\n    this.#host.select();\r\n  }\r\n\r\n  get value() {\r\n    const [i, j] = this.#range();\r\n    return this.raw.substring(0, j);\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get pattern() {\r\n    return this.#host.mask;\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get selectionStart() {\r\n    return this.#host.selectionStart;\r\n  }\r\n\r\n  get selectionEnd() {\r\n    return this.#host.selectionEnd;\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.#host.autoselect;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    this.#back = e.key === \"Backspace\";\r\n  }\r\n\r\n  #onFocus(e) {\r\n    const me = this;\r\n    me.#format(e);\r\n    if (me.autoselect) me.select();\r\n  }\r\n\r\n  #onBlur(e) {\r\n    // me.value === me.pattern && (me.value = \"\");\r\n    this.validate();\r\n  }\r\n\r\n  /**\r\n   * If data-slots not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #builSlots() {\r\n    const me = this;\r\n    let slots = me.dataset.slots;\r\n    if (!slots) {\r\n      const maskType = MaskController.#maskType;\r\n      slots = [...new Set(me.pattern)]\r\n        .filter(v => maskType[v.toLowerCase()])\r\n        .join('');\r\n    }\r\n    return new Set(slots || \"_\");\r\n  }\r\n\r\n  /**\r\n   * If data-accept not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #builAccept() {\r\n    const me = this;\r\n    let accept = me.dataset.accept;\r\n    if (!accept) {\r\n      const maskType = MaskController.#maskType;\r\n      accept = [...new Set(me.pattern)]\r\n      .map(v => maskType[v.toLowerCase()])\r\n      .filter(v => v);\r\n      if (accept.length > 0) {\r\n        const tmp = {};\r\n        accept.forEach(v => tmp[v.src] = v);\r\n        accept = Object.values(tmp);\r\n        return accept.length === 1 ? accept.pop() : accept;\r\n      } \r\n\r\n    }\r\n    return new RegExp(accept || \"\\\\d\", \"g\");\r\n  }\r\n\r\n  #range() {\r\n    const me = this;\r\n    const value = me.raw;\r\n    return [me.selectionStart, me.selectionEnd].map(i => {\r\n      i = me.#clean(value.slice(0, i)).findIndex(c => me.#slots.has(c));\r\n      return i < 0 ? me.#prev[me.#prev.length - 1] : me.#back ? me.#prev[i - 1] || me.#first : i;\r\n    });\r\n  }\r\n\r\n  #format(e) {\r\n    const me = this;\r\n    const [i, j] = me.#range();\r\n    me.value = me.#clean(me.#host.raw).join``;\r\n    me.setSelectionRange(i, j);\r\n    me.#back = false;\r\n  }\r\n\r\n  //  TODO support multi #accecpt\r\n  #clean(input) {\r\n    const me = this;\r\n    input = input.match(me.#accept) || [];\r\n    return Array.from(me.pattern, c => input[0] === c || me.#slots.has(c) ? input.shift() || c : c);\r\n  }\r\n\r\n  #toPattern() {\r\n\r\n    const me = this;\r\n\r\n    if (me.pattern.length === 0) return;\r\n\r\n    const chars = me.pattern.split('');\r\n    const masks = ['^'];\r\n\r\n    const maskType = MaskController.#maskType;\r\n    const special = MaskController.#special;\r\n\r\n    let cnt = 0;\r\n    chars.forEach((v, i) => {\r\n      const m = maskType[v.toLowerCase()];\r\n      if (!m) {\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        cnt = 0;\r\n        if (special.includes(v)) masks.push('\\\\');\r\n        return masks.push(v);\r\n      }\r\n\r\n      chars[i] = new RegExp(m, 'g');\r\n\r\n      if (masks.length === 0) return masks.push(m.source);\r\n\r\n      if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n      if (cnt > 0) masks.push(`{${++cnt}}`);\r\n      cnt = 0;\r\n      masks.push(m.source);\r\n    });\r\n\r\n    if (cnt > 0) masks.push(`{${++cnt}}`);\r\n    masks.push('$');\r\n\r\n    me.#pattern = new RegExp(masks.join(''), 'g');\r\n    // me.#max = me.pattern.length;\r\n    // me.#masks = chars;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type number to support max length entry\r\n */\r\nexport class NumberController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get maxLength() {\r\n    return GSUtil.asNum(this.#host.maxLength, 0);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n    \r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'number') return me.#onNumberInput(e);\r\n  }\r\n\r\n  #onNumberInput(e) {\r\n    const me = this;\r\n    if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n        me.value = me.value.substring(0, me.maxLength);\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle for input tpye password tosupport keyboard shortcut for password reveal.\r\n */\r\nexport class PasswordController {\r\n\r\n  #host;\r\n\r\n  #revealing = false;\r\n\r\n  #keyUpCallback;\r\n  #keyDownCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyUpCallback = me.#onKeyUp.bind(me);\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('keyup', me.#keyUpCallback);\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keyup', me.#keyUpCallback);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  get reveal() {\r\n    return this.#host.hasAttribute('reveal');\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  set type(val) {\r\n    if (this.#host) this.#host.type = val;\r\n  }\r\n\r\n  #isReveal(e) {\r\n    return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    const me = this;\r\n    if (e.key === 'Shift' && me.#revealing) {\r\n      me.type = 'password';\r\n    }\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (me.#isReveal(e)) {\r\n      me.#revealing = true;\r\n      me.type = 'text';\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCSSMap } from \"../../../base/GSCSSMap.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type text to support text value changes based on CSS\r\n */\r\nexport class TextController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'text') me.value = me.#updateText(me.value);\r\n  }\r\n\r\n  #updateText(value = '') {\r\n    const map = GSCSSMap.styleValue(this.#host, 'text-transform');\r\n    if (map) value = GSUtil.textTransform(map.value, value);\r\n    return value;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update avaialble selections in another field selections.\r\n */\r\nexport class ListController {\r\n\r\n  #host;\r\n\r\n  #monitorCallback;\r\n  #changeCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#monitorCallback = me.#onMonitor.bind(me);\r\n    me.#changeCallback = me.#onDataChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (list) {\r\n      me.#host.on('blur', me.#blurCallback);\r\n      me.#host.on('change', me.#changeCallback);\r\n      me.#host.attachEvent(me.filter, 'change', me.#monitorCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('blur', me.#blurCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n    me.#host.removeEvent(me.filter, 'change', me.#monitorCallback);\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n      this.#onDataChange();\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get list() {\r\n    const me = this;\r\n    if (me.#host.list) return me.#host.list;\r\n    const list = GSAttr.get(me.#host, 'list');\r\n    return GSDOM.getByID(me.#host.owner, list);\r\n  }\r\n\r\n  get filter() {\r\n    const me = this;\r\n    const filter = GSAttr.get(me.#host, 'data-filter');\r\n    return GSDOM.getByID(me.#host.owner, filter);\r\n  }\r\n\r\n  get owner() {\r\n    return this.#host.owner;\r\n  }\r\n\r\n  get strict() {\r\n    return GSAttr.get(this.#host, 'strict', '');\r\n  }\r\n\r\n  #onBlur(e) {\r\n    if (!this.#isInList()) GSEvents.send(this.#host, 'strict', { ok: false, source: e });\r\n  }\r\n\r\n  #onDataChange(e) {\r\n    const me = this;\r\n    const own = me.owner;\r\n    let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n    let clean = false;\r\n    if (!opt) {\r\n        opt = me.list?.querySelector('option');\r\n        clean = true;\r\n    }\r\n\r\n    const obj = opt?.dataset || {};\r\n    Object.entries(obj).forEach(p => {\r\n        const val = clean ? '' : p[1];\r\n        const key = p[0];\r\n        GSAttr.set(me.#host, `data-${key}`, p[1]);\r\n        if (key === 'id' || key === 'group') return;\r\n\r\n        const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n        const els = Array.from(GSDOM.queryAll(own, filter));\r\n        els.filter(el => el.tagName !== 'OPTION')\r\n            .filter(el => el !== me)\r\n            .filter(el => GSAttr.get(el, 'list').length === 0)\r\n            .forEach(el => me.#togleEl(el, key, val))\r\n    });\r\n  }\r\n\r\n  #onMonitor(e) {\r\n    const me = this;\r\n    const list = me.list;\r\n    me.value = '';\r\n    const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n    GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n    const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n    GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n\r\n  }\r\n\r\n  #togleEl(el, key = '', value = '') {\r\n\r\n    const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n    const isMatch = value.length > 0 && data.includes(value);\r\n    const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n\r\n    if (frmel) {\r\n      GSAttr.toggle(el, 'disabled', !isMatch);\r\n    } else {\r\n      isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n    }\r\n\r\n    const form = GSDOM.closest(el, 'form');\r\n    GSDOM.formElements(form)\r\n      .forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n  }\r\n\r\n  #isInList() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (!list) return true;\r\n    if (!me.strict) return true;\r\n    if (!list.querySelector('option')) return true;\r\n    const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n    return opt != null;\r\n  }\r\n\r\n}  ","\r\nimport { notEqual, defaultConverter } from '../../lib.mjs';\r\n\r\n\r\nconst defaultPropertyDeclaration = {\r\n    attribute: true,\r\n    reflect: false,\r\n    type: String,\r\n    converter: defaultConverter,\r\n    hasChanged: notEqual,\r\n}\r\n\r\nconst attributeToPropertyMap = Symbol();\r\nconst prepare = Symbol();\r\nconst elementProperties = Symbol();\r\nconst finalize = Symbol();\r\nconst finalized = Symbol();\r\n\r\nconst prepareFn = function () {\r\n    const me = this;\r\n    if (Object.getOwnPropertySymbols(me).includes(elementProperties)) return;\r\n    const superCtor = Object.getPrototypeOf(me);\r\n    if (typeof superCtor[finalize] === 'function') superCtor[finalize]();\r\n    me[elementProperties] = new Map(superCtor[elementProperties]);\r\n}\r\n\r\nconst attributeNameForProperty = (name, options) => {\r\n    const attribute = options.attribute;\r\n    return attribute === false\r\n        ? undefined\r\n        : typeof attribute === 'string'\r\n            ? attribute\r\n            : typeof name === 'string'\r\n                ? name.toLowerCase()\r\n                : undefined;\r\n}\r\n\r\n/**\r\n * Reactivity for HTMLInputElement based on Google ltd. Lit ReactiveElement\r\n */\r\nexport class ReactiveInput extends HTMLInputElement {\r\n\r\n    // user defiend \r\n    static properties = {};\r\n    \r\n    static [finalized] = false;\r\n\r\n    #reflectingProperties = undefined;\r\n    #instanceProperties = undefined;\r\n\r\n    #controllers = undefined;\r\n    #updatePromise = undefined;\r\n    #changedProperties = undefined;\r\n    #reflectingProperty = undefined;\r\n\r\n    #hasUpdated = false;\r\n    #isUpdatePending = false;\r\n\r\n    /**\r\n     * Returns a list of attributes corresponding to the registered properties.\r\n    */\r\n    static get observedAttributes() {\r\n        Object.defineProperty(ReactiveInput.__proto__, prepare, { value: prepareFn });\r\n        const me = this;\r\n        me[finalize]();\r\n        return me[attributeToPropertyMap] && [...me[attributeToPropertyMap].keys()];\r\n    }\r\n\r\n    static addInitializer(initializer) {\r\n        const me = this;\r\n        me[prepare]();\r\n        me.initializers ??= [].push(initializer);\r\n    }\r\n\r\n    static [finalize]() {\r\n        const me = this;\r\n        //if (Object.hasOwn(me, 'finalized')) return;\r\n        if (me[finalized] === true) return;\r\n        me[finalized] = true;\r\n        me[prepare]();\r\n\r\n        if (Object.hasOwn(me, 'properties')) {\r\n            const props = me.properties;\r\n            const propKeys = [\r\n                ...Object.getOwnPropertyNames(props),\r\n                ...Object.getOwnPropertySymbols(props),\r\n            ];\r\n            for (const p of propKeys) {\r\n                me.createProperty(p, props[p]);\r\n            }\r\n        }\r\n\r\n        // Create the attribute-to-property map\r\n        me[attributeToPropertyMap] = new Map();\r\n        for (const [p, options] of me[elementProperties]) {\r\n            const attr = attributeNameForProperty(p, options);\r\n            if (attr !== undefined) {\r\n                me[attributeToPropertyMap].set(attr, p);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static createProperty(name, options) {\r\n        const me = this;\r\n        if (options.state) options.attribute = false;\r\n        me[prepare]();\r\n        me[elementProperties].set(name, options);\r\n        if (!options.noAccessor) {\r\n            const key = Symbol();\r\n            const descriptor = me.getPropertyDescriptor(name, key, options);\r\n            if (descriptor !== undefined) {\r\n                Object.defineProperty(me.prototype, name, descriptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    static getPropertyDescriptor(name, key, options) {\r\n        const { get, set } = Object.getOwnPropertyDescriptor(this.prototype, name) ?? {\r\n            get() {\r\n                return this[key];\r\n            },\r\n            set(v) {\r\n                this[key] = v;\r\n            },\r\n        }\r\n        return {\r\n            get() {\r\n                return get?.call(this);\r\n            },\r\n            set(value) {\r\n                const me = this;\r\n                const oldValue = get?.call(me);\r\n                set?.call(me, value);\r\n                me.requestUpdate(name, oldValue, options);\r\n            },\r\n            configurable: true,\r\n            enumerable: true,\r\n        }\r\n    }\r\n\r\n    static getPropertyOptions(name) {\r\n        return this[elementProperties].get(name) ?? defaultPropertyDeclaration;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initialize();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.enableUpdating(true);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        this.#attributeToProperty(name, newValue);\r\n    }\r\n\r\n    // ******************************\r\n    // PUBLIC GETTERS\r\n    // ******************************\r\n\r\n    get hasUpdated() { return this.#hasUpdated; }\r\n    get isUpdatePending() { return this.#isUpdatePending; }\r\n    get renderRoot() { return this; }\r\n\r\n    // ******************************\r\n    // PROTECTED FUNCTIONS \r\n    // ******************************\r\n\r\n    addController(controller) {\r\n        // if (!(controller instanceof ReactiveController)) throw new Error('Argument not instance of ReactiveController');\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    enableUpdating(requestedUpdate) { }\r\n\r\n    firstUpdated(changedProperties) { }\r\n\r\n    updated(changedProperties) { }\r\n\r\n    getUpdateComplete() { return this.#updatePromise; }\r\n\r\n    scheduleUpdate() { return this.performUpdate(); }\r\n\r\n    shouldUpdate(changedProperties) { return true; }\r\n\r\n    willUpdate(changedProperties) { }\r\n\r\n    update(changedProperties) {\r\n        const me = this;\r\n        // The forEach() expression will only run when when #reflectingProperties is\r\n        // defined, and it returns undefined, setting #reflectingProperties to undefined\r\n        me.#reflectingProperties &&= me.#reflectingProperties.forEach((p) => me.#propertyToAttribute(p, this[p]));\r\n        me.#markUpdated();\r\n    }\r\n\r\n    get updateComplete() {\r\n        return this.getUpdateComplete();\r\n    }\r\n\r\n    requestUpdate(name, oldValue, options) {\r\n        const me = this;\r\n        if (name !== undefined) {\r\n            options ??= (me.constructor).getPropertyOptions(name);\r\n            const hasChanged = options.hasChanged ?? notEqual;\r\n            const newValue = me[name];\r\n            if (hasChanged(newValue, oldValue)) {\r\n                me.#changeProperty(name, oldValue, options);\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (me.#isUpdatePending === false) {\r\n            me.#updatePromise = me.#enqueueUpdate();\r\n        }\r\n    }\r\n\r\n    performUpdate() {\r\n\r\n        const me = this;\r\n        if (!me.#isUpdatePending) return;\r\n\r\n        if (!me.#hasUpdated) {\r\n\r\n            // Mixin instance properties once, if they exist.\r\n            if (me.#instanceProperties) {\r\n                for (const [p, value] of me.#instanceProperties) {\r\n                    this[p] = value;\r\n                }\r\n                me.#instanceProperties = undefined;\r\n            }\r\n\r\n            const elementProps = me.constructor[elementProperties];\r\n            if (elementProps.size > 0) {\r\n                for (const [p, options] of elementProps) {\r\n                    if (\r\n                        options.wrapped === true &&\r\n                        !me.#changedProperties.has(p) &&\r\n                        me[p] !== undefined\r\n                    ) {\r\n                        me.#changeProperty(p, this[p], options);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let shouldUpdate = false;\r\n        const changedProperties = me.#changedProperties;\r\n        try {\r\n            shouldUpdate = me.shouldUpdate(changedProperties);\r\n            if (shouldUpdate) {\r\n                me.willUpdate(changedProperties);\r\n                me.#controllers?.forEach((c) => c.hostUpdate?.());\r\n                me.update(changedProperties);\r\n            } else {\r\n                me.#markUpdated();\r\n            }\r\n        } catch (e) {\r\n            shouldUpdate = false;\r\n            me.#markUpdated();\r\n            throw e;\r\n        }\r\n\r\n        if (shouldUpdate) {\r\n            me.#didUpdate(changedProperties);\r\n        }\r\n    }\r\n\r\n    // ******************************\r\n    // PRIVATE FUNCTIONS \r\n    // ******************************\r\n\r\n    #didUpdate(changedProperties) {\r\n        const me = this;\r\n        me.#controllers?.forEach((c) => c.hostUpdated?.());\r\n        if (!me.#hasUpdated) {\r\n            me.#hasUpdated = true;\r\n            me.firstUpdated(changedProperties);\r\n        }\r\n        me.updated(changedProperties);\r\n    }\r\n\r\n    #markUpdated() {\r\n        const me = this;\r\n        me.#changedProperties = new Map();\r\n        me.#isUpdatePending = false;\r\n    }\r\n\r\n    async #enqueueUpdate() {\r\n        const me = this;\r\n        me.#isUpdatePending = true;\r\n        try {\r\n            await me.#updatePromise;\r\n        } catch (e) {\r\n            Promise.reject(e);\r\n        }\r\n        const result = me.scheduleUpdate();\r\n\r\n        if (result != null) {\r\n            await result;\r\n        }\r\n        return !me.#isUpdatePending;\r\n    }\r\n\r\n    #changeProperty(name, oldValue, options) {\r\n        const me = this;\r\n        if (!me.#changedProperties.has(name)) {\r\n            me.#changedProperties.set(name, oldValue);\r\n        }\r\n\r\n        if (options.reflect === true && me.#reflectingProperty !== name) {\r\n            (me.#reflectingProperties ??= new Set()).add(name);\r\n        }\r\n    }\r\n\r\n    #attributeToProperty(name, value) {\r\n        const me = this;\r\n        const ctor = me.constructor;\r\n        const propName = (ctor[attributeToPropertyMap]).get(name);\r\n        if (propName !== undefined && me.#reflectingProperty !== propName) {\r\n            const options = ctor.getPropertyOptions(propName);\r\n            const converter =\r\n                typeof options.converter === 'function'\r\n                    ? { fromAttribute: options.converter }\r\n                    : options.converter?.fromAttribute !== undefined\r\n                        ? options.converter\r\n                        : defaultConverter;\r\n            // mark state reflecting\r\n            me.#reflectingProperty = propName;\r\n            me[propName] = converter?.fromAttribute(value, options.type);\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #propertyToAttribute(name, value) {\r\n        const me = this;\r\n        const elementProps = me.constructor[elementProperties];\r\n        const options = elementProps?.get(name);\r\n        const attr = attributeNameForProperty(name, options);\r\n        if (attr !== undefined && options.reflect === true) {\r\n            const converter =\r\n                (options.converter)?.toAttribute !==\r\n                    undefined\r\n                    ? (options.converter)\r\n                    : defaultConverter;\r\n            const attrValue = converter?.toAttribute(value, options.type);\r\n\r\n            me.#reflectingProperty = name;\r\n            if (attrValue == null) {\r\n                me.removeAttribute(attr);\r\n            } else {\r\n                me.setAttribute(attr, attrValue);\r\n            }\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #saveInstanceProperties() {\r\n        const me = this;\r\n        const instanceProperties = new Map();\r\n        const elementProps = me.constructor[elementProperties];\r\n        for (const p of elementProps.keys()) {\r\n            if (Object.hasOwn(me, p)) {\r\n                instanceProperties.set(p, me[p]);\r\n                delete me[p];\r\n            }\r\n        }\r\n        if (instanceProperties.size > 0) {\r\n            me.#instanceProperties = instanceProperties;\r\n        }\r\n    }\r\n\r\n    #initialize() {\r\n        const me = this;\r\n        me.#updatePromise = new Promise((res) => me.enableUpdating = res);\r\n        me.#changedProperties = new Map();\r\n        me.#saveInstanceProperties();\r\n        me.requestUpdate();\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n        const data = this.form?.data;\r\n        if (data) GSDOM.fromObject2Element(this, data);\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity();\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get form() {\r\n        return this.closest('gs-form');\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Find closest top element by CSS selector\r\n     * @param {String} query \r\n     * @returns {HTMLElement}\r\n     */\r\n    closest(query = '') {\r\n        return GSDOM.closest(this, query);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = { value: o };\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSData } from '../../base/GSData.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\nimport { AdoptedController } from '../../controllers/AdoptedController.mjs';\r\nimport { AttributeController } from '../../controllers/AttributeController.mjs';\r\nimport { CopySelectController } from './controllers/CopySelectController.mjs';\r\nimport { MaskController } from './controllers/MaskController.mjs';\r\nimport { PasswordController } from './controllers/PasswordController.mjs';\r\nimport { NumberController } from './controllers/NumberController.mjs';\r\nimport { TextController } from './controllers/TextController.mjs';\r\nimport { ListController } from './controllers/ListController.mjs';\r\n\r\nimport { ReactiveInput } from './ReactiveInput.mjs';\r\n\r\n/**\r\n * Extended HTMLInputElement with controllers support\r\n * adding various feature such as masked input support \r\n */\r\nexport class GSInputElement extends ReactiveInput {\r\n\r\n  static properties = {\r\n    autocopy: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    autoselect: { type: Boolean },\r\n    reveal: { type: Boolean },\r\n    mask: { reflect: true }\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n\r\n  #copyselect;\r\n  #maskController;\r\n  #passwordController;\r\n  #numberController;\r\n  #textController;\r\n  #listController;\r\n\r\n  constructor() {\r\n    super();\r\n    this.#copyselect = new CopySelectController(this);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n\r\n    super.willUpdate(changed);\r\n\r\n    if (changed.has('mask') && this.mask && this.type === 'text') {\r\n      this.placeholder = this.mask;\r\n      this.#maskController ??= new MaskController(this);\r\n      this.#maskController.initRules();\r\n    }\r\n\r\n    if (this.list) {\r\n      this.#listController ??= new ListController(this);\r\n    }\r\n\r\n    switch (this.type) {\r\n      case 'text':\r\n        this.#textController ??= new TextController(this);\r\n        break;\r\n      case 'password':\r\n        this.#passwordController ??= new PasswordController(this);\r\n        break;\r\n      case 'number':\r\n        this.#numberController ??= new NumberController(this);\r\n        break;\r\n    }\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus) this.focus();    \r\n    const data = this.form?.data;\r\n    if (data) GSDOM.fromObject2Element(this, data);\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value) {\r\n    this.#adopted ??= new AdoptedController(me);\r\n    return this.#adopted.style(id, value);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form');\r\n  }\r\n\r\n  get owner() {\r\n    const own = GSDOM.root(this);\r\n    return GSDOM.unwrap(own);\r\n  }\r\n\r\n  get raw() {\r\n    return super.value;\r\n  }\r\n\r\n  get value() {\r\n    return this.#maskController ? this.#maskController.value : super.value;\r\n  }\r\n\r\n  set value(val) {\r\n    super.value = val;\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSInputElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   */\r\n  static define(name, clazz) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, { extends: 'input' });\r\n    }\r\n  }\r\n\r\n  static {\r\n    GSInputElement.define('gs-ext-input', GSInputElement);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined, repeat } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSBreadcrumbElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n    color: { ...color },\r\n    divider: { reflect: true },\r\n    spacing: { reflect: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.spacing = 1;\r\n    me.divider = 'chevron-right';\r\n    me.#updateChildren();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#updateChildren();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<nav part=\"base\" class=\"breadcrumb\" @click=\"${me.#onClick}\" dir=\"${ifDefined(me.direction)}\"><slot>\r\n      ${repeat(me.data || [], (item) => item, (item) => html`\r\n        <gs-breadcrumb-item  \r\n        href=\"${item.href}\"\r\n        color=\"${item.color}\"\r\n        .data=${item}     \r\n        .active=${item.active}\r\n        .divider=\"${item.divider || me.divider}\"\r\n        .spacing=\"${item.spacing || me.spacing}\">\r\n          ${item.$text}\r\n        </gs-breadcrumb-item>\r\n      `)}\r\n    </slot></nav>`;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #updateChildren() {\r\n    const me = this;\r\n    me.queryAll('gs-breadcrumb-item').forEach(el => {\r\n      el.divider = me.divider;\r\n      el.spacing = me.spacing;\r\n      el.color = me.color;\r\n    });\r\n  }\r\n\r\n  #onClick(e) {\r\n    const el = e.target.closest('gs-bradcrumb-item');\r\n    el?.handle(e);\r\n  } \r\n\r\n  static {\r\n    this.define('gs-breadcrumb');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSBreadcrumbItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    color: { ...color },\r\n    data: { state: true, type: Object },\r\n    active: { reflect: true, type: Boolean },\r\n    divider: { state: true, type: Boolean },\r\n    spacing: { state: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div part=\"base\" class=\"breadcrumb-item ${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <span part=\"prefix\"><slot name=\"prefix\"></slot></span>        \r\n        ${me.#label}\r\n        <span part=\"suffix\"><slot name=\"suffix\"></slot></span>\r\n        <span part=\"separator\"><slot name=\"separator\">${me.#separator}</slot></span>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #label() {\r\n    const me = this;\r\n    if (me.active) return html`<slot></slot>`;\r\n    me.data.url = me.data.url || me.href;\r\n    me.data.part = 'label';\r\n    return GSLinklement.generate(me.data, {})\r\n  }\r\n\r\n  get #separator() {\r\n    const me = this;\r\n    return me.nextElementSibling && me.divider ? html`<gs-icon size=\"7\" color=\"${me.color}\" css=\"mx-${me.spacing}\" name=\"${me.divider}\"></gs-icon>` : '';\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.query('a', true), e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-breadcrumb-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport { classMap, createRef, ref, css, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSAttachment } from './Attachment.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSFileBoxElement extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    static properties = {\r\n        cssList: { attribute: 'css-list' },\r\n        cssLabel: { attribute: 'css-label' },\r\n        cssInput: { attribute: 'css-input' },\r\n\r\n        multiple: { reflect: true, type: Boolean },\r\n        directory: { reflect: true, type: Boolean },\r\n        name: {},\r\n        title: {},\r\n        accept: {},\r\n        filter: {},\r\n    }\r\n\r\n    #listEl = createRef();\r\n    #fileEl = createRef();\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = GSFileBoxElement.CSS;\r\n        this.cssInput = 'd-none';\r\n        this.multiple = true;\r\n        this.title = GSFileBoxElement.TITLE;\r\n        this.filter = '^image\\/(gif|png|jpeg)$'\r\n        this.directory = false;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div part=\"border\" class=\"${classMap(me.renderClass())}\"\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @click=\"${me.#onClick}\"\r\n            @dragenter=\"${me.#onDragenter}\"\r\n            @dragover=\"${me.#onDragenter}\"\r\n            @dragleave=\"${me.#onDragleave}\"\r\n            @drop=\"${me.#onDrop}\"\r\n            @paste=\"${me.#onPaste}\"\r\n            @change=\"${me.#onChange}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.translate(me.title)}</label>\r\n            <input ${ref(me.#fileEl)}  part=\"input\" \r\n                type=\"file\" accept=\"${me.accept}\" \r\n                class=\"${me.cssInput}\" \r\n                name=\"${me.name}\" \r\n                id=\"${me.name}\" \r\n                ${me.multiple ? \"multiple\" : \"\"} \r\n                ${me.directory ? \"directory webkitdirectory\" : \"\"}>\r\n            <pre ${ref(me.#listEl)} part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    get listEl() {\r\n        return this.#listEl.value;\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.#fileEl.value;\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = me.emit('accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            me.emit('accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static styles = css`\r\n        .dash {\r\n            border-style: var(--gs-fieldbox-border, dashed) !important;\r\n            border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n        }\r\n        input[type=file] {\r\n            color : var(--gs-fieldbox-color, transparent);\r\n        } \r\n        input[type=file]::file-selector-button {}             \r\n        input[type=file]::file-selector-button:hover {}`;\r\n\r\n    static {\r\n        this.define('gs-filebox');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/TimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSTimeFormat extends GSElement {\r\n\r\n    static properties = {\r\n        interval: {reflect:true, type:Number},\r\n        locale: {reflect:true},\r\n    }\r\n\r\n    #id = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.interval = 1;\r\n        this.locale = GSUtil.locale;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const date = new Date();\r\n        return date.toLocaleTimeString(this.locale);\r\n    }    \r\n\r\n    start() {\r\n        const me = this;\r\n        if (me.interval >0 && me.#id === 0) {\r\n            me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n        } else {\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n        this.#id = 0;\r\n    }\r\n    \r\n    #update() {\r\n       requestAnimationFrame(() => this.requestUpdate());\r\n    }\r\n\r\n    static {\r\n        this.define('gs-time-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/DateFormat\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDate } from '../../base/GSDate.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSDateFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        format: {},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.locale = navigator.locale;\r\n        this.value = new Date();\r\n    }\r\n\r\n    renderUI() {\r\n        return this.result;\r\n    }    \r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.date;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get date() {\r\n        const me = this;\r\n        const o = Date.parse(me.value || new Date());\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n\r\n    static {\r\n        this.define('gs-date-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/YearFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSYearFormat extends GSElement {\r\n\r\n    static properties = {\r\n        offset: {type :Number},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n    }\r\n\r\n    renderUI() {\r\n        return this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        this.define('gs-year-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/CurrencyFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSCurrencyFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        currency: {},\r\n    }\r\n\r\n    renderUI() {\r\n        return this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-currency-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCacheStyles } from \"../../base/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepElement class\r\n * @module components/steps/GSStepElement\r\n */\r\n\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepElement extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-primary';\r\n    static COMPLETED = 'text-bg-secondary';\r\n\r\n    static ICON_CSS = 'border rounded-circle fs-1';\r\n    static TITLE_CSS = 'mb-0 fs-6 mt-3 fw-bold';\r\n\r\n    static properties = {\r\n        title: {},\r\n        icon: {},\r\n        color: {},\r\n        iconCSS: { attribute: 'icon-css' },\r\n        titleCSS: { attribute: 'title-css' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const clazz = GSStepElement;\r\n        this.icon = clazz.INACTIVE;\r\n        this.iconCSS = clazz.ICON_CSS;\r\n        this.titleCSS = clazz.TITLE_CSS;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"step d-block w-100 text-center mb-4\"  dir=\"${ifDefined(me.direction)}\">\r\n            <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color || GSStepElement.INACTIVE}\">\r\n                    ${me.#renderIcon()}\r\n                </div>\r\n            </div>\r\n            <div class=\"step-title ${me.titleCSS}\">${me.translate(me.title)}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    #renderIcon() {\r\n        return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-step');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepsElement class\r\n * @module components/steps/GSStepsElement\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSStepStyle } from \"./StepStyle.mjs\";\r\nimport GSStepElement from './Step.mjs';\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepsElement extends GSElement {\r\n\r\n    static CSS = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n\r\n    #index = -1;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldUpdate(changedProperties) { \r\n        return this.steps.length > 0;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\"><slot></slot></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        return this.mapCSS(GSStepsElement.CSS, super.renderClass());\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get length() {\r\n        return this.steps.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length - 1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isLast) return false;\r\n        if (me.#index > - 1) me.current.color = GSStepElement.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStepElement.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStepElement.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStepElement.SELECTED;\r\n        });\r\n    }\r\n\r\n    static {\r\n        GSStepStyle.style;\r\n        this.define('gs-steps', GSStepsElement);\r\n    }\r\n\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSAttr } from '../../base/GSAttr.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\n\r\nexport class GSNotificationElement extends GSElement {\r\n\r\n    static TOP_START = \"position-fixed top-0 start-0\";\r\n    static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n    static TOP_END = \"position-fixed top-0 end-0\";\r\n\r\n    static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n    static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n    static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n    \r\n    static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n    static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n    static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n    static DEFAULT = GSNotificationElement.BOTTOM_END;\r\n\r\n    static properties = {\r\n        position: { reflect: true },\r\n        native: { reflect: true, type: Boolean }\r\n    };\r\n\r\n    #list = new Set();\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = 'p-3';\r\n        this.position = GSNotificationElement.DEFAULT;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n            class=\"toast-container z-10k ${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        return me.mapCSS(me.#positionCSS, super.renderClass());\r\n    }    \r\n\r\n    get #positionCSS() {\r\n        const clazz = GSNotificationElement;\r\n        const val = this.position || clazz.DEFAULT;\r\n        return val.indexOf('_') > 0 && clazz[val] ? clazz[val] : val;\r\n    }\r\n\r\n    clear() {\r\n        this.queryAll('gs-toast').forEach(el => el.dismiss());\r\n    }\r\n\r\n    info(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n    }\r\n\r\n    success(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n    }\r\n\r\n    warn(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n    }\r\n\r\n    danger(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n    }\r\n\r\n    primary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n    }\r\n\r\n    secondary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n    }\r\n\r\n    dark(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n    }\r\n\r\n    light(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n    }\r\n\r\n    /**\r\n     * Main function to show notification. \r\n     * It has support for Bootstrap based and web based notifications.\r\n     * \r\n     * @async\r\n     * @param {String} title Notification title\r\n     * @param {String} message Notification message\r\n     * @param {String} css CSS styling (web only)\r\n     * @param {Boolean} closable Can user close it (web only)\r\n     * @param {Number} timeout Timeout after which to close notification  (default 2 sec)\r\n     * @param {Number} delay Timeout after which to show notification (default 1 sec)\r\n     * @param {Object} options Options for native Notification\r\n     * @returns {Promise<Notification|GSToast>}\r\n     */\r\n    async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n        if (!message) return;\r\n        const me = this;\r\n        if (me.native) {\r\n            let sts = await GSNotificationElement.requestPermission();\r\n            if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n            if (sts) return sts;\r\n        }\r\n        return me.#showWeb(title, message, css, closable, timeout, delay);\r\n    }\r\n\r\n    #showWeb(title, message, css, closable, timeout, delay) {\r\n        const me = this;\r\n        const tpl = `<gs-toast css=\"${css}\"  opened ${closable ? 'closable' : ''} timeout=\"${timeout}\"  delay=\"${delay}\" message=\"${message}\" title=\"${title}\" locale=\"${me.locale}\" ></gs-toast>`;\r\n        const el = GSDOM.parse(tpl, true);\r\n        requestAnimationFrame(async () => {\r\n            await me.#delay(delay);\r\n            const toast = me.#dialogToast;\r\n            if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n            toast.appendChild(el);\r\n        });\r\n        return el;\r\n    }\r\n\r\n    async #showNative(title, message, timeout, delay, options = {}) {\r\n        const me = this;\r\n        await me.#delay(delay);\r\n        options.body = options.body || message;\r\n        const notification = new Notification(title, options);\r\n        me.#list.add(notification);\r\n        const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n        notification.addEventListener('close', callback);\r\n        if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n        return notification;\r\n    }\r\n\r\n    get #dialogToast() {\r\n        const dlg = customElements.get('gs-dialog')?.top;\r\n        return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n    }\r\n\r\n    async #delay(delay = 0) {\r\n        if (GSUtil.isNumber(delay) && delay > 0) await GSUtil.timeout(delay * 1000);\r\n    }\r\n\r\n    #clearNative() {\r\n        const me = this;\r\n        me.notification.close();\r\n        me.owner.#list.delete(me.notification);\r\n        if (me.notification.iid) clearTimeout(me.notification.iid);\r\n    }\r\n\r\n    /**\r\n     * Clear all triggered notifications\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n        me.#list.forEach(nn => nn.close());\r\n        me.#list.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is supported\r\n     * @returns {Boolean} \r\n     */\r\n    static get isNativeSupported() {\r\n        return \"Notification\" in self;\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is allowed\r\n     * @returns {Boolean} \r\n     */\r\n    static get isGranted() {\r\n        return Notification.permission === \"granted\";\r\n    }\r\n\r\n    /**\r\n     * Request useage for browser native notification\r\n     * \r\n     * @async\r\n     * @returns {Promise<boolean>} Return granted status\r\n     */\r\n    static async requestPermission() {\r\n        const clazz = GSNotificationElement;\r\n        if (!clazz.isNativeSupported) return false;\r\n        if (!clazz.isGranted) await Notification.requestPermission();\r\n        return clazz.isGranted;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-notification');\r\n    }\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNotificationElement } from './Notification.mjs';\r\n\r\nexport class GSToastElement extends GSElement {\r\n\r\n    static properties = {\r\n        closable: { reflect: true, type: Boolean },\r\n        opened: { reflect: true, type: Boolean },\r\n        message: { reflect: true },\r\n        title: { reflect: true },\r\n        delay: { reflect: true, type: Number },\r\n        timeout: { reflect: true, type: Number }\r\n    }\r\n\r\n    #pending = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.timeout = 2;\r\n        me.delay = 2;\r\n        me.auto = true; \r\n    }\r\n\r\n    shouldUpdate(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.delay > 0 && me.opened && visibilityChange) {\r\n            me.#pending = true;\r\n            me.#pendingUpdate();\r\n        }\r\n        return me.#validParent && (!me.#pending);\r\n    }\r\n\r\n    #isVisibilityChanged(changedProperties) {\r\n        return changedProperties.has('opened');\r\n    }\r\n\r\n    async #pendingUpdate() {\r\n        const me = this;\r\n        await GSUtil.timeout(me.delay * 1000);\r\n        me.#pending = false;\r\n        me.requestUpdate();\r\n    }\r\n\r\n    async updated(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.timeout > 0 && me.opened) {\r\n            await GSUtil.timeout(me.timeout * 1000);\r\n            me.opened = false;\r\n        } else if (visibilityChange && !me.opened) { \r\n            me.remove();\r\n        };\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return me.title ? me.#renderWithHeader() : me.#renderSimple();\r\n    }\r\n\r\n    #renderWithHeader() {\r\n        const me = this;\r\n        return html`\r\n        <div dir=\"${ifDefined(me.direction)}\"\r\n            class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n            <div class=\"toast-header\">\r\n                ${me.translate(me.title)}\r\n                <slot name=\"header\"></slot>\r\n                ${me.closable ? me.#button : ''}\r\n            </div>\r\n            <div class=\"toast-body\">\r\n                ${me.translate(me.message)}\r\n                <slot name=\"body\"></slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    #renderSimple() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.translate(me.message)}\r\n              <slot name=\"body\"></slot>\r\n              </div>\r\n              ${me.closable ? me.#button : ''}\r\n          </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': me.opened,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    dismiss() {\r\n        this.opened = false;\r\n    }\r\n\r\n    get #button() {\r\n        const me = this;\r\n        return html`<button type=\"button\" class=\"btn-close me-2 m-auto\" @click=\"${me.dismiss}\"></button>`;\r\n    }\r\n\r\n    get #validParent() {\r\n        const isToast = GSDOM.hasClass(this.parentElement, 'toast-container');\r\n        const isNotify = this.parentElement instanceof GSNotificationElement;\r\n        return isToast || isNotify;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-toast');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller managing data tree navigation.\r\n * Controller is added to every gs-tree-node and \r\n * reacts on Tree node changes to update UI\r\n */\r\nexport class AbstractTreeController {\r\n\r\n    #host;\r\n    #node;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        host.addController(me);\r\n    }\r\n    \r\n    hostConnected() {\r\n        const me = this;\r\n        me.#node = me.#host.node;\r\n        me.#addNodeController(me);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        const me = this;\r\n        me.#removeNodeController(me);\r\n        me.#host.removeController(me);\r\n    }\r\n\r\n    // before rendering\r\n    hostUpdate() {\r\n        const me = this;\r\n        const oldNode = me.#node;\r\n        me.#node = me.#host.node;\r\n        if (oldNode != me.#node) {\r\n            me.#removeNodeController(me);\r\n            me.#addNodeController(me);\r\n        }\r\n    }\r\n\r\n    // link Tree node callbacks with controller and component\r\n    #addNodeController(controller) {\r\n        this.#host.node?.addController?.(controller);\r\n    }\r\n\r\n    // unlink Tree node callbacks with controller and component\r\n    #removeNodeController(controller) {\r\n        this.#node?.removeController?.(controller);\r\n    }\r\n\r\n    host(node) {\r\n        return node[Symbol.for('gs-element')] || this.#host;\r\n    }\r\n\r\n    match(node) {\r\n        const host = this.host(node);\r\n        return host?.node === node;\r\n    }\r\n\r\n    get store() {\r\n        return this.#host.dataController?.store;\r\n    }\r\n\r\n    requestUpdate(node) {\r\n        if (this.match(node)) this.host(node).requestUpdate();\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { AbstractTreeController } from './AbstractTreeController.mjs';\r\n\r\n/**\r\n * Controller managing data TreeNode callbacks to reflect UI.\r\n */\r\nexport class TreeController extends AbstractTreeController {\r\n\r\n    constructor(host) {\r\n        super(host);\r\n    }\r\n\r\n    #toggleState(node, state = false) {\r\n        const el = this.host(node);\r\n        if (el) el.loading = state;\r\n    }\r\n\r\n    // Tree controller callbacks\r\n    onLoad(node) {\r\n        this.#toggleState(node, true);\r\n    }\r\n\r\n    onRefresh(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onAppend(node, addedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onInsert(node, insertedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onExpand(node) {\r\n        const store = this.store;\r\n        if (store) {\r\n            store.onExpand(node);\r\n        } else {\r\n            this.requestUpdate(node);\r\n        }\r\n    }\r\n\r\n    onCollapse(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onFocusChanged(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onSelectionChanged(node, selectedNode) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onRemove(node) {\r\n        if (this.match(node)) this.host(node).remove();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../../lib.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSTreeItemElement extends GSElement {\r\n\r\n  /*\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n    */\r\n\r\n  static properties = {\r\n    loading: { state: true },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('node')) this.node[Symbol.for('gs-element')] = this;\r\n  }\r\n\r\n  updated() {\r\n    if (this.focused) this.query('a')?.focus();\r\n    this.dataset.visible = this.visible;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const opt = me.value || {};\r\n    opt.tooltip = me.translate(opt.tooltip)\r\n    opt.title = me.translate(opt.title)\r\n    const before = me.loading ? me.#renderSpinner(node.level) : me.#renderIcon(node.level);\r\n    return GSLinklement.generate(opt, me.renderClass(), before);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const opt = {\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      'user-select-none  ': true,\r\n      'border-0': me.#border ? false : true,\r\n      'gs-hide': !me.visible\r\n    };\r\n    return me.mapCSS(me.#cssFocus, me.mapCSS(me.#cssSelected, opt, me.selected && !me.multiselect), me.focused);\r\n  }\r\n\r\n  /**\r\n   * Toggle folder\r\n   */\r\n  toggle() {\r\n    this.opened ? this.close() : this.open();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open() {\r\n    this.#status(true);\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   */\r\n  close() {\r\n    this.#status(false);\r\n  }\r\n\r\n  focus(val = true) {\r\n    if (val) super.focus();\r\n    this.focused = val == true;\r\n  }\r\n\r\n  select(val = true) {\r\n    this.selected = val == true;\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.querySelector('a'), e);\r\n  }\r\n\r\n  get isLeaf() {\r\n    return this.node?.isLeaf;\r\n  }\r\n\r\n  get isFolder() {\r\n    return !this.isLeaf;\r\n  }\r\n\r\n  get key() {\r\n    return this.node?.key;\r\n  }\r\n\r\n  get value() {\r\n    return this.node?.value || {};\r\n  }\r\n\r\n  get level() {\r\n    return this.node?.level || -1;\r\n  }\r\n\r\n  get focused() {\r\n    return this.node?.focused;\r\n  }\r\n\r\n  get visible() {\r\n    const parent = this.parent;\r\n    return parent?.opened || parent?.level === -1;\r\n  }\r\n\r\n  get parent() {\r\n    return this.node?.parent;\r\n  }\r\n\r\n  get parentItem() {\r\n    const item = this.parent?.[Symbol.for('gs-element')];\r\n    return item instanceof GSTreeItemElement ? item : undefined;\r\n  }\r\n\r\n  set focused(val) {\r\n    val = val === true;\r\n    this.node.focused = val;\r\n  }\r\n\r\n  get selected() {\r\n    return this.node?.selected;\r\n  }\r\n\r\n  set selected(val) {\r\n    val = val === true;\r\n    const me = this;\r\n    if (me.isFolder && me.owner.leaf) val = false;\r\n\r\n    if (me.multiselect) {\r\n      if (val) {\r\n        me.node.selectAll();\r\n      } else {\r\n        me.node.deselectAll();\r\n      }\r\n    } else {\r\n      me.node.selected = val;\r\n    }\r\n  }\r\n\r\n  get opened() {\r\n    return this.node?.opened;\r\n  }\r\n\r\n  set opened(val) {\r\n    this.#status(val === true);\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tree');\r\n  }\r\n\r\n  get multiselect() {\r\n    return this.owner.multiselect;\r\n  }\r\n\r\n  get #cssFocus() { return this.owner.cssFocus || 'focus-ring'; }\r\n  get #cssSelected() { return this.owner.cssSelected || 'active'; }\r\n  get #cssCheck() { return this.owner.cssCheck || ''; }\r\n  get #checkColor() { return this.owner.checkColor || 'secondary'; }\r\n  get #checkColorSelected() { return this.owner.checkColorSelected || 'primary'; }\r\n\r\n  get #border() {\r\n    return this.value?.border === true || this.owner.border === true;\r\n  }\r\n\r\n  get #icon() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const data = me.value;\r\n    const ui = me.owner;\r\n    let itemIco = data.icon || ui.itemIcon;\r\n    if (node.isFolder) itemIco = node.opened ? (data.openIcon || ui.openIcon) : (data.closeIcon || ui.closeIcon);\r\n    return itemIco;\r\n  }\r\n\r\n  #renderIndent(level) {\r\n    return html`<gs-indent size=\"${level}\"></gs-indent>`;\r\n  }\r\n\r\n  #renderSpinner(level) {\r\n    return html`${this.#renderIndent(level)}<gs-spinner small></gs-spinner>`;\r\n  }\r\n\r\n  #renderIcon(level) {\r\n    return html`${this.#renderIndent(level)}${this.#renderMulti()}<gs-icon size=\"5\" name=\"${this.#icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderMulti() {\r\n    const me = this;\r\n    if (!me.multiselect) return '';\r\n    const color = me.selected ? me.#checkColorSelected : me.#checkColor;\r\n    const icon = me.node.isPartialySelected ? 'dash-square-fill' : me.selected ? 'check-square-fill' : 'square';\r\n    return html`<gs-icon size=\"6\" data-type=\"state\" \r\n                css=\"me-1 text-${color} ${me.#cssCheck}\"\r\n                name=\"${icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #status(val = false) {\r\n    const me = this;\r\n    if (me.node?.isFolder) {\r\n      me.node.opened = val;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, css, createRef, ref, repeat, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { TreeController } from './controllers/TreeController.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSTreeElement extends GSElement {\r\n\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n\r\n  static shared = {\r\n    itemIcon: { attribute: 'icon-item' },\r\n    closeIcon: { attribute: 'icon-close' },\r\n    openIcon: { attribute: 'icon-open' },\r\n    cssCheck: { attribute: 'css-check' },\r\n    cssFocus: { attribute: 'css-focus' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    checkColor: { attribute: 'check-color', ...color },\r\n    checkColorSelected: { attribute: 'check-color-selected', ...color },\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode },\r\n    border: { type: Boolean, reflect: true },\r\n    guide: { type: Boolean, reflect: true },\r\n    leaf: { type: Boolean, reflect: true },\r\n    multiselect: { type: Boolean, reflect: true },\r\n    circular: { type: Boolean, reflect: true },\r\n    ...GSTreeElement.shared\r\n  }\r\n\r\n  // GS-ITEM attributes mapping\r\n  static options = {\r\n    ...GSTreeElement.shared,\r\n    css: {},\r\n    icon: {},\r\n    color: {},\r\n    title: {},\r\n    tooltip: {},\r\n    opened: { type: Boolean },\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  #queued = false;\r\n  #listRef = createRef();\r\n\r\n  #controller = null;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.leaf = false;\r\n    me.multiselect = false;\r\n    me.data = GSDOM.toJson(me, true, true).items;\r\n    me.node = new TreeNode(null, { '#tagName': this.tagName }, null, -1);\r\n    me.itemIcon = 'file-earmark';\r\n    me.closeIcon = 'folder'; // caret-right; chevron-right\r\n    me.openIcon = 'folder2-open'; // caret-down; chevron-down\r\n    me.cssSelected = 'active'; // fw-bold\r\n    me.cssFocus = 'focus-ring';\r\n    me.node[Symbol.for('gs-element')] = me;\r\n    me.#controller = new TreeController(me);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n          class=\"treeview ${classMap(me.renderClass())}\"          \r\n          @click=\"${me.#onClick}\"\r\n          @keydown=\"${me.#onKeyDown}\"\r\n          @keyup=\"${me.#onKeyUp}\">\r\n          <div class=\"list-group\" ${ref(me.#listRef)}>\r\n          ${repeat(me.node.walk(me.node, false, false), (node) => node.key, (node) => html`\r\n            <gs-tree-item .node=\"${node}\"></gs-tree-item>\r\n          `)}\r\n          </div>    \r\n        </div>`;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data') && me.data && !me.#queued) {\r\n      me.#queued = true;\r\n      queueMicrotask(() => {\r\n        me.node.clear();\r\n        me.node.fromJSON(me.data);\r\n        me.#queued = false;\r\n        me.requestUpdate();\r\n      });\r\n    }\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('multiselect') && !this.multiselect) this.node?.deselectAll();\r\n    this.node.multi = this.multiselect;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    if (data instanceof TreeNode) {\r\n      if (data.root !== this.node) this.node = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n\r\n  next(expand = false) {\r\n    const me = this;\r\n    let item = me.nextItem;\r\n    if (!item & me.circular) item = me.#first;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (expand && me.focused?.isFolder) me.focused.open();\r\n    }\r\n    return me.focused;\r\n  }\r\n\r\n  previous(collapse = false) {\r\n    const me = this;\r\n    let item = me.previousItem;\r\n    if (!item & me.circular) item = me.#last;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (item.isFolder && collapse) item.close();\r\n    }\r\n    return me.focused;\r\n\r\n  }\r\n\r\n  expandAll() {\r\n    this.node?.expandAll();\r\n  }\r\n\r\n  collapseAll() {\r\n    this.node?.collapseAll();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open(path) {\r\n    const me = this;\r\n    me.focused?.open();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   * TODO - path navigation\r\n   */\r\n  close(path) {\r\n    const me = this;\r\n    me.focused?.close();\r\n  }\r\n\r\n  clear() {\r\n    this.node?.clear();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  reload() {\r\n    this.clear();\r\n    this.dataController?.read();\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host(this.node.selectedNode());\r\n  }\r\n\r\n  get focused() {\r\n    return this.#host(this.node.focusedNode());\r\n  }\r\n\r\n  /**\r\n   * Previous visible ge-node-item\r\n   */\r\n  get previousItem() {\r\n    return this.focused?.node.find(n => n?.visible, true, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  /**\r\n   * Next visible ge-node-item\r\n   */\r\n  get nextItem() {\r\n    return this.focused?.node.find(n => n?.visible, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  get #list() {\r\n    return this.#listRef.value;\r\n  }\r\n\r\n  get #first() {\r\n    return this.#list.firstElementChild;\r\n  }\r\n\r\n  get #last() {\r\n    return this.#list.lastElementChild;\r\n  }\r\n\r\n  #host(node) {\r\n    return node?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const isIcon = e.target.closest('gs-icon')?.dataset.type === 'state';\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!el.node) return;\r\n\r\n    const me = this;\r\n\r\n    if (me.multiselect) {\r\n      if (isIcon) el.select(!el.selected);\r\n    } else {\r\n      el.select(true);\r\n    }\r\n\r\n    const expandable = (me.multiselect && !isIcon) || (!me.multiselect);\r\n    if (el.isFolder && expandable) el.toggle();\r\n\r\n    el.focus();\r\n    el.handle(e);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    const me = this;\r\n    const el = me.focused;\r\n    if (!el) return;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n        me.next();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (el.isFolder) {\r\n          if (el.opened) {\r\n            me.close();\r\n          } else {\r\n            (el.parentItem || el)?.focus();\r\n          }\r\n        } else {\r\n          me.previous();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if (el.isFolder && !el.opened) {\r\n          me.open();\r\n        } else {\r\n          me.next();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!(el?.node)) return;\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        el.handle(e);\r\n        break;\r\n      case 'Tab':\r\n        el.focus();\r\n        break;\r\n      case 'Space':\r\n        el.select(this.multiselect ? !el.selected : true);\r\n        el.focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\n\r\nexport class GSChartElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/bootstrap-lit';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        config: {},\r\n        storage: {},\r\n        height: { type: Number },\r\n        width: { type: Number },\r\n        data: { type: Array },\r\n        options: { type: Object },\r\n    }\r\n\r\n    #canvasRef = createRef();\r\n    #chart = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.height = 0;\r\n        this.width = 0;\r\n        GSChartElement.#init();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#waitInit();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    shouldUpdate(changed) {\r\n        return GSChartElement.#isChart;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#render();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        const me = this;\r\n        if (changed.has('url') || changed.has('config')) me.#render();\r\n        if (changed.has('data') || changed.has('options')) me.#renderData(me.data, me.options);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<canvas ${ref(me.#canvasRef)} \r\n                class=\"${classMap(me.renderClass())}\"\r\n                width=\"${ifDefined(me.width > 0 ? me.width : false)}\" \r\n                height=\"${ifDefined(me.height > 0 ? me.height : false)}\" >\r\n            </canvas>`;\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.#canvasRef.value;\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    refresh() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    updateChart(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const options = await GSLoader.loadSafe(me.config, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.url, 'GET', null, true, []);\r\n        me.data = data;\r\n        me.options = options;\r\n    }\r\n\r\n    #renderData(data, options) {\r\n        const me = this;\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChartElement.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => o.data = sets.length === 1 ? data : data[i] || []);\r\n\r\n        if (me.#chart) return me.updateChart(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChartElement.#Chart(ctx, opt);\r\n    }\r\n\r\n    async #waitInit() {\r\n        if (!GSChartElement.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        this.requestUpdate();\r\n    }\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    static async #init() {\r\n        const me = GSChartElement;\r\n        if (me.URL_LIB === false) return;\r\n        if (me.#isChart || me.#initializing) return;\r\n        me.#initializing = true;\r\n        try {\r\n            const origin = GSChartElement.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);\r\n            me.#Chart = Chart;\r\n            me.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            me.#initializing = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert DOM tree into a JSON structure\r\n     * \r\n     * @param {HTMLElement} obj HTML element instance to convert\r\n     * @param {string} name DOM attribute name for object key\r\n     * @param {string} value DOM attribute name for object value\r\n     * @param {string} type DOM attribute name for object type\r\n     * @returns {object}\r\n     */\r\n    static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n        if (!(el instanceof HTMLElement)) return {};\r\n\r\n        const nameV = el.getAttribute(name);\r\n        const valV = el.getAttribute(value);\r\n        const typeV = el.getAttribute(type);\r\n\r\n        let obj = null;\r\n\r\n        switch (typeV) {\r\n            case 'array':\r\n                obj = [];\r\n                break;\r\n            case 'object':\r\n                obj = {};\r\n                break;\r\n            default:\r\n                return GSChartElement.#toType(valV, typeV);\r\n        }\r\n\r\n        const childs = Array.from(el.children);\r\n        const isArray = typeV === 'array';\r\n        const isObject = typeV === 'object';\r\n\r\n        childs.forEach(el => {\r\n            const _nam = el.getAttribute(name);\r\n            if (isArray) {\r\n                obj.push(GSChart.toJson(el, name, value, type));\r\n            } else if (isObject) {\r\n                const tmp = GSChartElement.toJson(el, name, value, type);\r\n                obj[_nam] = tmp;\r\n            } else {\r\n                const _val = el.getAttribute(value);\r\n                const _typ = el.getAttribute(type);\r\n                obj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    static #toType(val, type) {\r\n        switch (type) {\r\n            case 'boolean': return val === 'true';\r\n            case 'number': return parseFloat(val);\r\n            default: return val\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-chart');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#data = data;\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append: append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSMarkdownElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        history: { type: Number },\r\n        maxHeight: { type: Number, attribute: 'max-height' },\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        this.history = 10;\r\n        this.dynamicStyle(this.#styleID);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const me = this;\r\n        await me.#initLib();\r\n        if (globalThis.showdown) {\r\n            const opt = { tasklists: true, tables: true };\r\n            me.#converter = new globalThis.showdown.Converter(opt);\r\n            super.connectedCallback();\r\n        }\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('url')) {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url);\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const height = me.maxHeight > 0 ? `${me.maxHeight}px;` : false;\r\n        const opt = { 'max-height': height }\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        return html`<div ${ref(me.#containerRef)} class=\"overflow-auto ${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [me.#styleID] : true,\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        me.#onURL(url);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n\r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n\r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });\r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n            GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n\r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list = GSDOM.queryAll(me.#container, qry);\r\n        requestAnimationFrame(() => list.forEach(el => GSDOM.toggleClass(el, css)) );\r\n    }\r\n\r\n    #handleLinks() {\r\n        const me = this;\r\n        const links = GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n            .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')))\r\n            .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n            .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/'))\r\n            .forEach(el => GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me)));\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        if (me.#cache.length === 0 ) return me.#first;\r\n        const url = me.#cache.pop();\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if (me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdownElement.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-markdown');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSMonacoElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #editor = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = '';\r\n        this.theme = 'vs-dark';\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonacoElement.#init();\r\n        super.connectedCallback();\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.#onMonacoReady();\r\n        super.firstUpdated();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        if (changed.has('theme')) me.#onTheme(me.theme);\r\n        if (changed.has('target')) me.#onTarget(me.target);\r\n        if (changed.has('url')) me.#onURL(me.url);\r\n        if (changed.has('language')) me.#onLanguage(me.language);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#containerRef)} class=\"${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        return this.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    get owner() {\r\n        return this.parentElement;\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n\r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor?.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor?.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    static #initialized;\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonacoElement.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        const url = GSMonacoElement.URL_LIB;\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${url}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${url}'};\r\n                importScripts('${url}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({\r\n                paths: { 'vs': `${GSMonacoElement.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false }\r\n            });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static async #init() {\r\n        const me = GSMonacoElement;\r\n        if (me.#initialized) return;\r\n        me.#initEnv();\r\n        await me.#initLib();\r\n        await me.#initMonaco();\r\n        me.#initialized = true;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-monaco');\r\n    }\r\n\r\n}"],"names":["GSVersion","version","build","gsstyles","GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSUtil$1","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Date","Boolean","value","toString","val","trim","toLowerCase","str","obj","replace","x","g","split","reverse","join","word","toUpperCase","slice","map","i","capitalize","constructor","min","max","Math","match","dft","locale","isString","sep","numberSeparator","extractNumber","replaceAll","isNumber","url","test","startsWith","endsWith","pattern","charset","floor","random","length","navigator","language","languages","flags","RegExp","isStringEmpty","undefined","Intl","NumberFormat","format","DateTimeFormat","string","isNull","Array","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","separator","filter","capitalizeAll","tpl","params","names","keys","vals","values","Function","text","textArea","document","createElement","innerHTML","isStringNonEmpty","o","window","forEach","a","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","result","permissions","query","state","clipboard","writeText","readText","GSFunction$1","GSFunction","isFunction","includes","own","isFunctionDefined","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","from","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSID","prefx","next","s","l","h","charCodeAt","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","attributes","host","opt","recursive","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","children","proxify","safe","unsafe","dflt","default","multi","hasAttribute","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","first","getDay","mondayFirst","isMondayFirst","days","repeat","push","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","d","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","m","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","k","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Locale","weekInfo","firstDay","charAt","toLocaleString","size","isLowercase","hour","hour12","pop","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","getDateFormat","regex","getFormattedDateRegex","parseFormattedDate","groups","y","Y","valueOf","GSData","currency","extract","Set","b","every","index","toSorted","compareArrays","second","arr","indexOf","list","it","cfg","toType","rule","toRegex","fmt","style","fields","limit","sts","rec","filterRecord","filterSimple","filterComplex","key","filterValue","found","flt","matchDate","matchNumber","op","toLocaleLowerCase","local","toLocaleDateString","iso","toISOString","operator","sort","sortPair","ord","idx","col","v1","v2","compare","order","compareNum","compareString","isBool","compareBool","isDate","s1","s2","localeCompare","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","partial","r","readFromProperty","readFromObject","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","wrap","appendChild","link","slot","isText","tagName","FORMEL","queryAll","HTMLButtonElement","hasClass","ownClazz","inheritance","pel","HTMLSlotElement","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","parentElement","offsetParent","c","ShadowRoot","HTMLBodyElement","root","getByID","documentElement","walk","qry","levels","proxy","res","receiver","sanitize","sanitizer","setHTML","Document","textContent","requestAnimationFrame","toggleClass","contains","unwrap","querySelectorAll","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","fromValue","plain","innerText","props","allProperties","getAsNum","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","location","hash","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","CLEANUP1","whiteList","asState","isAllowed","toValidationError","allowElement","allowTag","fetch","ok","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","properties","mergeObjects","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","detail","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","delete","removeListener","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","for","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","rid","waitAnimationFrame","onResize","attach","GSAbortController","AbortController","super","abort","clearInterval","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","isFunctions","getFilter","exec","create","GSDynamicStyle","deleteRule","getRule","setRule","sync","insertRule","updateRule","isImportant","setProperty","source","dynamicStyleSheetByID","dynamicStyleSheet","gsClass","dynamicRule","dynamicRuleByID","dynamicStyle","assign","dynamicStyleByID","GSCacheStyles","store","dynamic","styles","adopt","adoptedId","GSAdoptedEngine","now","preload","timerID","setInterval","sheets","adoptable","adoptSheet","update","scheduled","sorted","ID","cssText","monitorAttributes","ownerNode","adoptStyle","disconnect","mutationList","onAttributeChange","attributeFilter","attributeOldValue","HTMLLinkElement","rel","as","HTMLStyleElement","then","adoptLink","registerFilter","onMonitorFilter","onMonitorConnect","onMonitorDisconnect","init","GSEnvironment","isMobile","userAgentData","mobile","userAgent","isDesktop","isWebkit","protocol","strVal","brands","brand","strAgt","isEdge","isDevice","platform","screen","otype","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","ps","p","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","querySelector","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSItem","autofocus","validate","parentComponent","GSElement","tags","collect","definition","GSLoader","GS_TEMPLATE_URL","origin","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","UNIQUE","searchParams","append","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GS_LOCALIZATION_LANGUAGE","lang","GSLocalization","GSLocalizationImpl","queue","queued","GS_LOCALIZATION_URL","translate","deft","getLanguage","texthash","reset","promises","loadWait","sequential","Pragma","isDefault","hk","details","GSPopper","asRect","sx","scrollX","sy","scrollY","top","bottom","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","arrow","pos","fromPlacement","isPlacementValid","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","aopt","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","applyDynamicStyle","GSQueryCSS","property","object","GSQuery","instance","GSTemplateCache","template","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTheme","switch","theme","STORAGE","htmlEl","bsTheme","matchMedia","q","URLSearchParams","onTheme","settings","getSystemDefaultTheme","darkMode","lightMode","setup","litUrl","GS_LIT_URL","litModule","ReactiveController","ReactiveElement","AsyncDirective","AsyncReplaceDirective","CSSResult","Directive","LitElement","PartType","TemplateResultType","UnsafeHTMLDirective","UntilDirective","_$LE","_$LH","adoptStyles","asyncAppend","asyncReplace","choose","classMap","clearPart","createRef","defaultConverter","directive","getCommittedValue","getCompatibleStyle","getDirectiveClass","guard","ifDefined","insertPart","isCompiledTemplateResult","isDirectiveResult","isPrimitive","isServer","isSingleExpression","isTemplateResult","keyed","literal","live","noChange","notEqual","nothing","range","ref","removePart","render","setChildPartValue","setCommittedValue","staticHtml","staticSvg","styleMap","supportsAdoptingStyleSheets","svg","templateContent","unsafeCSS","unsafeHTML","unsafeSVG","unsafeStatic","until","when","withStatic","AdoptedController","addController","hostConnected","controllers","hostDisconnected","removeController","isGlobal","rules","removeRule","changed","renderRoot","onAdopted","ContentController","refs","removeContent","hostUpdated","isSelf","contentRef","options","renderOptions","renderBefore","previousElementSibling","keep","AttributeController","GSAttributeHandler","eventName","deattach","onNotify","handle","isFormEl","isFormElement","LocalizationController","hostUpdate","updateLanguage","updateLanguageExt","langauge","requestUpdate","onLanguage","OrientationController","hosts","onOrientation","TemplateController","lastRef","injected","request","templateInjected","templateRef","schedule","tasks","item","task","process","finally","OrientationTypes","hasChanged","newVal","oldVal","ProtocolTypes","EnvironmentTypes","environment","ThemeController","updateTheme","updateThemeExt","notEmpty","numGT0","numGE0","numLT0","numLE0","GSReadWriteRegistryImpl","handlers","INTERNAL","addHandler","removeHandler","getHandler","newHandler","enabled","verify","find","unregister","rw","GSReadWriteRegistry","DataController","readCallback","writeCallback","errorCallback","onRead","onWrite","read","write","storeID","search","storage","firstPage","page","lastPage","nextPage","prevPage","skip","onDataRead","notify","onDataWrite","onDataError","SlotController","attachEvent","onSlotChanged","assignedElements","onSlotInjected","flat","rtl","reflect","hide","rounded","bordered","onready","os","browser","adopted","uiHandler","localization","dataController","slotController","themes","attributeChangedCallback","oldValue","newValue","connectedCallback","isBindable","binded","disconnectedCallback","deattachListeners","createRenderRoot","firstUpdated","willUpdate","relink","isAllowRender","renderUI","renderTemplate","renderClass","border","mapCSS","flag","waitEvent","removeEvent","direction","isFocused","isValidEnvironment","isValidBrowser","isValidOS","isValidProtocol","isValidOrientation","definitions","elementStyles","cssRule","setCSSProperty","anchor","call","inject","swap","trigger","calls","toggles","triggers","targets","handleTarget","handleBinding","handleAction","handleAttribute","handleProperty","handleToggle","handleTrigger","handleCall","handleExec","handleSwap","handleInject","handleTemplate","field","form","isForm","HTMLFormElement","isField","toObject","isAttributeJSON","jsonToAttr","toggleAttribute","isPropertyJSON","toggleProperty","tout","symbol","toHTML","applyContent","applyTemplate","clone","insertAdjacent","DEFINITION","override","Stack","unshift","peek","isEmpty","Queue","enqueue","dequeue","BinaryTreeNode","isLeaf","hasChildren","isRoot","BinaryTree","inOrderTraversal","postOrderTraversal","preOrderTraversal","insert","parentNodeKey","canInsertLeft","canInsertRight","Node","previous","release","toJSON","DoublyLinkedList","tail","previousNode","insertAt","splice","insertFirst","insertLast","getAt","removeAt","acc","toArray","iterator","isInvalid","isInvalidIndex","isInteger","Tree","folder","leaf","up","levelID","nodeID","isFolder","hasMore","firstChild","lastChild","down","previousSibling","inclusive","iterate","filtered","js","newOne","findByKey","flatten","fromJSON","raw","hasParent","GSAbstractReadWrite","processors","enable","addProcessor","processor","removeProcessor","disable","isRegistered","postRead","postWrite","GSReadWrite","reader","writer","mode","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCachedReader","reformat","records","postFilter","sortData","filterData","TreeNode","opened","focused","selected","focusedNode","selectedNode","select","focus","open","visible","expand","collapse","onFocusChanged","onSelectionChanged","isPartialySelected","selectAll","deselectAll","selectionFlag","onSelectAll","onDeselectAll","selectedNodes","refresh","onRefresh","loading","onLoad","expandAll","collapseAll","expanded","collapsed","onExpand","onCollapse","onAppend","onInsert","GSTreeReader","gsAction","gsAnchor","gsAttribute","gsCall","gsExec","gsInject","gsProperty","gsSwap","gsTarget","gsTemplate","gsToggle","gsTrigger","gsValue","DatasetDirective","part","srcset","DOMStringMap","remap","hasOwn","descriptors","getOwnPropertyDescriptors","listProperties","listGetters","getPrototypeOf","literalTemplate","listGettable","cssMap","CssMapDirective","partInfo","ATTRIBUTE","strings","classInfo","_previousClasses","_staticClasses","ButtonTypes","buttonType","is","ColorTypes","color","InputTypes","inputType","NavTypes","nav","PlacementTypes","PositionTypes","SizeTypes","normal","medium","small","large","big","stringArrayConverter","fromAttribute","toAttribute","ElementMoveController","attached","cursorX","cursorY","mouseUpCallback","mouseDownCallback","mouseMoveCallback","onMouseUp","onMouseDown","onMouseMove","onStartMove","onEndMove","onCursorRight","onCursorLeft","onCursorUp","onCursorDown","ElementNavigationController","circular","multiple","onKeyUp","onClick","onFocusIn","onFocusOut","lastElementChild","blur","onSelected","onDeselected","onFocused","isNavigable","composedPath","GroupController","busEvent","busCallback","onBusEvent","GSAccordionElement","autoclose","cssItem","cssHeader","cssBody","renderItems","close","message","isItemCloser","GSAccordionItemElement","shouldUpdate","changedProperties","component","GSAlertElement","closed","closable","pause","interval","handleBillboard","updated","show","isBillboard","button","billboard","GSButtonElement","clickCss","hoverCss","toggleColor","outline","toggling","icon","tooltip","refEl","refIco","onMouseOver","onMouseOut","iconEl","animate","isReset","isSubmit","submit","hover","isReest","iconHtml","renderIcon","GSCalendarElement","arrovPrev","arrowNext","cssDays","cssToday","cssWeeks","cssMonth","cssYear","cssNav","cssSelected","minYear","maxYear","arrowPrev","previousMonth","nextMonth","previousYear","nextYear","formatted","updateTarget","week","dayList","months","monthsHTML","yearHTML","onKey","onDay","daysHTML","tgt","HTMLInputElement","valueAsDate","isToday","today","c1","c2","current","monthList","onMonth","onYear","selectedIndex","GSCardElement","imageStyle","overlay","align","image","subtitle","footer","header","colorText","colorBack","colorBorder","cssTitle","cssSubtitle","cssFooter","cssImage","styleID","isVertical","renderVertical","renderHorizontal","imageTop","imageBottom","isBefore","startClass","endClass","startHtml","images","endHtml","isHorizontal","imageSlot","GSCenterElement","GSMenuElement","auto","dark","menuRef","closeSubmenus","updatePosition","onMouseLeave","submenu","dropend","dropstart","popup","caller","isMouseOrPointerEvent","renderSubmenu","renderHeader","renderMenu","renderDivider","menu","toSubmenu","menuItem","isSubmenu","innerWidth","GSContextElement","attachTarget","assignedSlot","onPopup","GSCompareElement","background","before","after","elRef","clipRef","slideRef","mouseController","elPosition","splitter","onDoubleClick","isAuto","pct","isFixed","slider","clip","GSControllerElement","module","changes","initialize","GSCopyrightElement","company","isCompany","isYear","GSDataHandler","autoload","autorefresh","config","handler","lifoReadRef","initLIFO","PROPERTIES","updateHandler","formatSort","formatFilter","isDebug","gsDebug","formated","verifyHandler","save","callOnceLifo","lifoReadRefCallback","lifoRead","GSDialogElement","standard","escapable","cancelText","confirmText","minWidth","buttonAlign","iconCancel","iconConfirm","colorCancel","colorConfirm","cssCancel","cssConfirm","cssContent","dialogRef","btnConfirmRef","btnCancelRef","CSS","TITLE_CSS","HEADER_CSS","ALIGN","CANCEL","CONFIRM","updateStack","STACK","dialog","showModal","focusable","renderConfirm","onConfirm","renderCancel","onCancel","renderFooter","onForm","onSubmit","info","confirm","prompt","forms","f","tab","btnConfirm","btnCancel","QUERY_INPUT","isVisible","GSDrawerElement","backdrop","scroll","fingers","transition","duration","cssHead","onLeave","onEnter","hasHeader","headSlot","GSDropdownElement","simple","renderButton","buttonClass","btn","GSEmailElement","user","domain","dev","updateUser","updateDomain","GSFormElement","formRef","onChange","elements","inputs","fromObject","disableInput","enableInput","reportValidity","defaultValue","onFieldChange","onValidate","GSFormGroupElement","layout","description","label","placeholder","mask","step","minLength","maxLength","autoid","autocopy","autoselect","autocapitalize","autocomplete","reveal","readonly","required","cellField","cellLabel","cssLabel","cssField","inputRef","ouptutRef","patterns","validateAllowed","ICON","CSS_LABEL","CSS_LABEL_CELL","onRange","formElements","renderFloating","cssCheck","renderInput","renderOutput","renderLabel","renderInfo","renderLabelWrap","renderField","isIcon","CSS_ICON","renderTooltip","isRange","idattr","isFieldset","radioLayout","fieldSet","inputHTML","fld","vertical","isSwitch","onBlur","isCheckable","isFloating","setCustomValidity","slots","tagList","isCheck","isRadio","isChecked","isPassword","isEmail","isURL","GSFormPanelElement","formStorage","GSGroupElement","controllerGroup","initData","prerender","of","renderWrappedUI","renderWrappedClass","childTagName","selectable","generated","getName","GSIconElement","superColor","_clicked","_hovered","postAnimate","fs","GSIndentElement","multiplier","numdef","GSImageElement","invert","grayscale","brightness","contrast","saturate","hue","sepia","alt","imageRef","complete","renderStyle","buildFilter","GSLayoutElement","resizable","autofit","vPos","hPos","els","dyncss","horizontal","lev","tplEl","elementTemplate","tc","dir","did","panelCSS","panelStyle","resize","grow","vpos","hpos","GSLinklement","ping","GSListElement","GSListItemElement","initial","renderFirst","renderSecond","itemCSS","isSelectable","itemStatusCSS","renderText","activeCSS","cssActive","inactiveCSS","cssInactive","GSNavElement","isTab","GSNavItemElement","itemsCSS","isNav","buttonCSS","buildCSS","cssButton","navType","GSOverlayElement","autoremove","radius","styleID2","innerHeight","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathStr","createSVGPathString","fill","pointerEvents","cursor","windowX","windowY","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPagerElement","pages","labelFirst","labelLast","labelNext","labelPrevious","half","renderPrevious","renderItem","renderNext","renderLast","pagination","decodeHTMLEntities","toTarget","ctrl","GSPopupElement","wMin","wMax","hMin","hMax","panelRef","attachTaraget","onAuto","reposition","popupFixed","panel","Event","overflowH","overflowV","GSProgressElement","updateStyle","percentage","onKeySelect","increase","decrease","trunc","old","GSSpinnerElement","pulsar","GSSplitterElement","styleTGT","cssUpdate","lock","updateMouse","stop","isPreceeding","isStyleValue","styleDynamic","lockable","csize","cls","gsSplitter","updateX","updateY","dx","GSTabItemElement","updateCSS","tabCSS","GSTabPanelElement","GSTabGroupElement","findPanel","isAfter","tabs","renderTabs","panels","renderPanels","GSTableElement","filterType","cssFilter","colorHead","colorSelect","colorSort","stripedColumn","divider","striped","grid","borderless","columns","selections","datacolumn","multisort","multiselect","protected","sortable","sortOrder","headColor","CELLS","table","stripedColumns","renderFilters","onSort","entry","renderColumn","onSelect","renderRecord","renderEmpty","columnType","columType","input","valueAt","row","cell","cfgType","timestamp","dataType","renderFilter","onFilter","icons","sortType","column","getElementIndex","prepareSorter","isComplex","tr","isSelected","GSTagElement","converter","appendable","closeColor","cssClose","cssTag","dataListRef","renderTags","onInput","renderList","updateTag","KEYS","srcElement","removeTag","addTag","isMax","datalist","optEl","tagEl","renderTag","tagClass","btnClass","badge","GSTextElement","GSTooltipElement","arrowRef","arrowStyle","attachEvents","fade","arrowEl","panelEl","refLocal","refGlobal","GSTemplateElement","CopySelectController","clickCallback","copyCallback","onCopy","writeToClipboard","MaskController","_","back","prev","keyDownCallback","inputCallback","focusCallback","blurCallback","onFocus","initRules","j","builSlots","findIndex","builAccept","toPattern","lastIndex","isMatch","setSelectionRange","substring","selectionStart","selectionEnd","maskType","clean","chars","masks","special","NumberController","onNumberInput","PasswordController","revealing","keyUpCallback","isReveal","altKey","TextController","updateText","ListController","monitorCallback","changeCallback","onMonitor","onDataChange","hasUpdated","strict","isInList","togleEl","dataGroup","isButtonElement","defaultPropertyDeclaration","attributeToPropertyMap","prepare","elementProperties","finalize","finalized","prepareFn","getOwnPropertySymbols","superCtor","attributeNameForProperty","ReactiveInput","reflectingProperties","instanceProperties","updatePromise","reflectingProperty","isUpdatePending","observedAttributes","initializer","initializers","propKeys","getOwnPropertyNames","createProperty","noAccessor","descriptor","getPropertyDescriptor","prototype","configurable","enumerable","enableUpdating","attributeToProperty","requestedUpdate","getUpdateComplete","scheduleUpdate","performUpdate","propertyToAttribute","markUpdated","updateComplete","getPropertyOptions","changeProperty","enqueueUpdate","elementProps","wrapped","didUpdate","ctor","propName","attrValue","saveInstanceProperties","GSComboExt","HTMLSelectElement","setIf","objToHTML","GSDataListExt","HTMLDataListElement","GSInputElement","copyselect","maskController","passwordController","numberController","textController","listController","GSBreadcrumbElement","spacing","updateChildren","$text","GSBreadcrumbItemElement","generate","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","hidden","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBoxElement","cssList","cssInput","listEl","fileEl","dragging","TITLE","onDragenter","onDragleave","onDrop","onPaste","dataTransfer","hasFile","dropEffect","clipboardData","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","GSTimeFormat","toLocaleTimeString","GSDateFormat","GSYearFormat","GSCurrencyFormat","GSStepStyle","GSStepElement","iconCSS","titleCSS","INACTIVE","ICON_CSS","GSStepsElement","steps","isFirst","isLast","COMPLETED","SELECTED","GSNotificationElement","BOTTOM_END","DEFAULT","positionCSS","dismiss","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","dlg","nn","isNativeSupported","isGranted","permission","GSToastElement","pending","visibilityChange","isVisibilityChanged","pendingUpdate","validParent","renderWithHeader","renderSimple","isToast","isNotify","AbstractTreeController","addNodeController","removeNodeController","oldNode","TreeController","toggleState","addedNode","insertedNode","onRemove","GSTreeItemElement","renderSpinner","cssFocus","status","parentItem","checkColor","checkColorSelected","ui","itemIco","itemIcon","openIcon","closeIcon","renderIndent","renderMulti","GSTreeElement","guide","shared","listRef","nextItem","previousItem","reload","expandable","GSChartElement","URL_LIB","GS_URL_CHART","canvasRef","chart","waitInit","destroy","isChart","renderData","canvas","updateChart","div","toBase64Image","quality","sets","datasets","ctx","getContext","Chart","initializing","registerables","nameV","valV","typeV","childs","isObject","_nam","GSChart","_val","_typ","GSHighlightElement","GS_URL_HLJS","codeRef","onTarget","onURL","onHighlight","hasLangauge","highlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMarkdownElement","GS_URL_MARKDOWN","history","maxHeight","containerRef","initLib","showdown","tasklists","tables","Converter","toCache","fromCache","container","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","script","GSMonacoElement","GS_URL_MONACO","editor","onMonacoReady","monaco","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","automaticLayout","minimap","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","paths","vs","initialized","initEnv","initMonaco"],"mappings":"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"}