{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/style.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSID.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSDynamicStyle.mjs","../../modules/base/GSCacheStyles.mjs","../../modules/base/GSAdoptedEngine.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSLocalization.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSTemplateCache.mjs","../../modules/base/GSTheme.mjs","../../modules/base/GSAttributeHandler.mjs","../../modules/helpers/Stack.mjs","../../modules/helpers/Queue.mjs","../../modules/helpers/BinaryTree.mjs","../../modules/helpers/DoublyLinkedList.mjs","../../modules/helpers/Tree.mjs","../../modules/data/ReadWriteRegistry.mjs","../../modules/data/AbstractReadWrite.mjs","../../modules/data/ReadWrite.mjs","../../modules/data/CachedReader.mjs","../../modules/data/TreeNode.mjs","../../modules/data/TreeReader.mjs","../../modules/lib.mjs","../../modules/directives/dataset.mjs","../../modules/directives/literal.mjs","../../modules/directives/css-map.mjs","../../modules/properties/verificator.mjs","../../modules/properties/buttonType.mjs","../../modules/properties/color.mjs","../../modules/properties/environment.mjs","../../modules/properties/inputType.mjs","../../modules/properties/nav.mjs","../../modules/properties/orientation.mjs","../../modules/properties/placement.mjs","../../modules/properties/position.mjs","../../modules/properties/protocol.mjs","../../modules/properties/size.mjs","../../modules/properties/arrayConverter.mjs","../../modules/controllers/AdoptedController.mjs","../../modules/controllers/AttributeController.mjs","../../modules/controllers/ContentController.mjs","../../modules/controllers/DataController.mjs","../../modules/controllers/ElementMoveController.mjs","../../modules/controllers/ElementNavigationController.mjs","../../modules/controllers/OrientationController.mjs","../../modules/controllers/ThemeController.mjs","../../modules/controllers/TemplateController.mjs","../../modules/controllers/SlotController.mjs","../../modules/controllers/LocalizationController.mjs","../../modules/GSElement.mjs","../../modules/components/Accordion.mjs","../../modules/components/AccordionItem.mjs","../../modules/components/Alert.mjs","../../modules/components/Button.mjs","../../modules/components/Calendar.mjs","../../modules/components/Card.mjs","../../modules/components/Center.mjs","../../modules/components/Menu.mjs","../../modules/components/Context.mjs","../../modules/components/Compare.mjs","../../modules/components/Controller.mjs","../../modules/components/Copyright.mjs","../../modules/components/DataHandler.mjs","../../modules/components/Dialog.mjs","../../modules/components/Drawer.mjs","../../modules/components/Dropdown.mjs","../../modules/components/Email.mjs","../../modules/components/Form.mjs","../../modules/components/FormGroup.mjs","../../modules/components/FormPanel.mjs","../../modules/components/Group.mjs","../../modules/components/Icon.mjs","../../modules/components/Indent.mjs","../../modules/components/Image.mjs","../../modules/components/Layout.mjs","../../modules/components/Link.mjs","../../modules/components/ListItem.mjs","../../modules/components/List.mjs","../../modules/components/NavItem.mjs","../../modules/components/Nav.mjs","../../modules/components/Overlay.mjs","../../modules/components/Pager.mjs","../../modules/components/Popup.mjs","../../modules/components/Progress.mjs","../../modules/components/Spinner.mjs","../../modules/components/Splitter.mjs","../../modules/components/tab/Tab.mjs","../../modules/components/tab/TabPanel.mjs","../../modules/components/tab/TabGroup.mjs","../../modules/components/Table.mjs","../../modules/components/Tag.mjs","../../modules/components/Text.mjs","../../modules/components/Tooltip.mjs","../../modules/components/Template.mjs","../../modules/components/ext/controllers/CopySelectController.mjs","../../modules/components/ext/controllers/MaskController.mjs","../../modules/components/ext/controllers/NumberController.mjs","../../modules/components/ext/controllers/PasswordController.mjs","../../modules/components/ext/controllers/TextController.mjs","../../modules/components/ext/controllers/ListController.mjs","../../modules/components/ext/ReactiveInput.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSInputElement.mjs","../../modules/components/breadcrumb/Breadcrumb.mjs","../../modules/components/breadcrumb/BreadcrumbItem.mjs","../../modules/components/intl/TimeFormat.mjs","../../modules/components/intl/DateFormat.mjs","../../modules/components/intl/YearFormat.mjs","../../modules/components/intl/CurrencyFormat.mjs","../../modules/components/steps/StepStyle.mjs","../../modules/components/steps/Step.mjs","../../modules/components/steps/Steps.mjs","../../modules/components/toast/Notification.mjs","../../modules/components/toast/Toast.mjs","../../modules/components/tree/controllers/AbstractTreeController.mjs","../../modules/components/tree/controllers/TreeController.mjs","../../modules/components/tree/TreeItem.mjs","../../modules/components/tree/Tree.mjs","../../modules/extra/Chart.mjs","../../modules/extra/Highlight.mjs","../../modules/extra/Markdown.mjs","../../modules/extra/Monaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Required CSS Styles for WebCompoents, regardless Bootstrap CSS.\r\n */\r\nexport const gsstyles = `.z-10k{z-index:10000 !important;}\r\n.gs-hide,gs-item{display:none !important;}\r\ngs-popover,gs-tooltip{position:fixed;top:0px;left:0px;},\r\n.d-contents{display:contents;}';\r\ngs-button-group::part(.btn-group){box-shadow:rgba(72, 72, 72, 0.4) 0px 0.125rem 0.25rem;}\r\ngs-group>gs-button::part(button) {box-shadow: none;}\r\ngs-group>gs-button:not(:last-child)::part(button) {border-top-right-radius: 0;border-bottom-right-radius: 0;}\r\ngs-group>gs-button:not(:first-child)::part(button) {margin-left: calc(var(--bs-border-width) * -5);border-top-left-radius: 0;border-bottom-left-radius: 0;}\r\ngs-layout {width: 100%;height: 100%;}\r\ngs-split-panel{flex: 1 1 auto !important;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]:before {content: attr(data-value);}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {visibility: hidden;display: inline-block;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-calendar-picker-indicator {position: relative;top: 0px;right: 0;color: black;opacity: 0.5;}\r\n`;","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic asNum(val = 0, dft = 0, locale) {\r\n\t\tlocale = locale || GSUtil.locale;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(locale);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(locale = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(locale).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to write to the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async writeToClipboard(value = '') {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-write\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.writeText(value);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to read from the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async readFromClipboard() {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-read\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.readText();\r\n\t\t}\r\n\t\treturn '';\r\n\t}\t\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribite name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop];\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst safe = opt[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = opt[prop]?.default;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, locale) {\r\n        format = format || GSUtil.getDateFormat(locale);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, locale: {}, extract: {} };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', locale:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const locale = cfg.locale || GSUtil.locale;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, locale);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'text':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(locale);\r\n                    return new GSDate(val).format(fmt, locale);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, locale);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static *filter(data = [], filter = [], fields, limit = 0) {\r\n        let cnt = 0;\r\n        let sts = false;\r\n        for (let rec of data) {\r\n            sts = GSData.filterRecord(rec, filter, fields);\r\n            if (sts) {\r\n                cnt++\r\n                yield rec;\r\n            }\r\n            if (limit > 0 && cnt >= limit) break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields, limit = 0) {\r\n        data = Array.isArray(data) ? data : [];\r\n        filter = Array.isArray(filter) ? filter : [];\r\n        if (filter.length === 0) return data;\r\n        return [...GSData.filter(data, filter, fields, limit)];\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (GSData.filterValue(value, filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let value = null;\r\n\r\n        for (let flt of filter) {\r\n            value = rec[flt.name];\r\n            if (flt.name) {\r\n                found = found && GSData.filterValue(value, flt)\r\n            } else {\r\n                found = found && GSData.filterSimple(rec, flt.value);\r\n            }\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static filterValue(value, filter) {\r\n        if (value instanceof Date) {\r\n            return GSData.matchDate(value, filter);\r\n        } else if (value instanceof Date) {\r\n            return GSData.matchNumber(value, GSUtil.asNum(filter.value), filter.op);\r\n        } else {\r\n            return ('' + value).toLocaleLowerCase().includes(('' + filter.value).toLocaleLowerCase());\r\n        }\r\n    }\r\n\r\n    static matchDate(val, filter, locale) {\r\n\r\n        if (typeof filter === 'string') {\r\n            const value = '' + filter;\r\n            const local = val.toLocaleDateString(locale);\r\n            const iso = val.toISOString();\r\n            return local.includes(value) || iso.includes(value);\r\n        }\r\n\r\n        if (!filter.value) return false;\r\n\r\n        const qry = filter.value instanceof Date ? 'date' : typeof filter.value;\r\n\r\n        switch (qry) {\r\n            case 'number':\r\n                return GSData.matchNumber(val.getTime(), filter.value, filter.op);\r\n            case 'date':\r\n                return GSData.matchNumber(val.getTime(), filter.value.getTime(), filter.op);\r\n        }\r\n\r\n        return GSData.matchDate(val, '' + filter.value, filter.locale);\r\n    }\r\n\r\n    /**\r\n     * Match number by operator\r\n     * @param {*} value \r\n     * @param {*} query \r\n     * @param {*} operator \r\n     */\r\n    static matchNumber(value = 0, query = 0, operator = 'eq') {\r\n        switch (operator) {\r\n            case 'gt': return query > value;\r\n            case 'lt': return query < value;\r\n            case 'ge': return query >= value;\r\n            case 'le': return query <= value;\r\n        }\r\n        return value === query;\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToOject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromObject(obj, name) {\r\n        name.split('.')\r\n            .filter(v => !GSUtil.isNull(v))\r\n            .forEach(v => obj = GSData.readFromProperty(obj, v));\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static objectPathExist(obj, name) {\r\n        if (!name) return false;\r\n        return name.split('.')\r\n            .map(v => GSData.readFromProperty(obj, v))\r\n            .filter(v => !GSUtil.isNull(v))\r\n            .length > 0;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSlotElement\r\n\t * @returns {Boolean}\r\n\t */\t\r\n\tstatic isSlotElement(el) {\r\n\t\treturn el instanceof HTMLSlotElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value') && el.value) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t}\r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t */\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = GSUtil.isString(data) ? data : data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(me.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {Boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el, opt) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el, opt);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {Boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {Boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {Boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {Boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {Boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {Boolean} forRemove - call on node remove or add\r\n     * @param {HTMLElement} target - element to monitor\r\n     * @returns {Boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {Boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {Boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = (style || '').toString();\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop();\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n    * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\nimport { gsstyles } from \"./style.mjs\";\r\n\r\n/**\r\n * Cache for dynaamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Create a new CSSStyleSheet\r\n\t * @param {String} id Unique ID\r\n\t * @returns {CSSStyleSheet} Created instance\r\n\t */\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {String} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\t\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\t\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {String} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {String} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id, style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSID.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(gsstyles);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSDOM } from './GSDOM.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSDOMObserver } from './GSDOMObserver.mjs';\r\nimport { GSCacheStyles } from './GSCacheStyles.mjs';\r\n\r\nconst adoptedId = Symbol();\r\nconst observer = Symbol();\r\n\r\n/**\r\n * Monitor HTMLStyleElement & HTMLLinkElement (of type stylesheet) for changes.\r\n * Every such element marked with data-adoptable=\"true\" will be cached and\r\n * will trigger gs-adopted event to notify component controller to update adoptableStyleSheet list\r\n */\r\nexport class GSAdoptedEngine {\r\n\r\n  static #timerID = 0;\r\n  static #ID = Date.now();\r\n  static #scheduled = false;\r\n\r\n  static #init() {\r\n    const me = GSAdoptedEngine;\r\n    me.observe(document.head);\r\n    me.#preload();\r\n    me.#timerID = setInterval(() => me.#adopt(), me.timeout);\r\n  }\r\n\r\n  static #clear() {\r\n    const me = GSAdoptedEngine;\r\n    clearInterval(me.#timerID);\r\n    me.#timerID = undefined;\r\n  }\r\n\r\n  static #adopt() {\r\n    const me = GSAdoptedEngine;\r\n    const sheets = me.#adoptable;\r\n    if (sheets.length == 0) return me.#clear();\r\n    sheets.map(s => me.#adoptSheet(s));\r\n    me.update();\r\n  }\r\n\r\n  static update() {\r\n    const me = GSAdoptedEngine;\r\n    if (me.#scheduled) return;\r\n    me.#scheduled = true;\r\n    queueMicrotask(() => {\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          document.adoptedStyleSheets = me.#sorted;\r\n          document.adoptedStyleSheets.id = ++me.#ID;\r\n        } finally {\r\n          me.#scheduled = false;\r\n          globalThis.dispatchEvent(new CustomEvent('gs-adopted'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static #asText(sheet) {\r\n    return Object.values(sheet.cssRules).map(o => o.cssText).join('');\r\n  }\r\n\r\n  static #adoptLink(el) {\r\n    const me = GSAdoptedEngine;\r\n    GSAdoptedEngine.#monitorAttributes(el);\r\n    Array.from(document.styleSheets).filter(s => s.ownerNode === el).map(s => me.#adoptSheet(s));\r\n  }\r\n\r\n  static #adoptSheet(sheet) {\r\n    const me = GSAdoptedEngine;\r\n    const style = me.#asText(sheet);\r\n    return me.#adoptStyle(sheet.ownerNode, style);\r\n  }\r\n\r\n  static #adoptStyle(ownerNode, style) {\r\n    const me = GSAdoptedEngine;\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(style);\r\n    sheet.id = ++me.#ID;\r\n    ownerNode[adoptedId] = sheet.id;\r\n    me.#store(ownerNode, sheet);\r\n    return sheet;\r\n  }\r\n\r\n  static #store(ownerNode, sheet) {\r\n    GSCacheStyles.set(sheet.id, sheet);\r\n  }\r\n\r\n  static #remove(ownerNode, sheet) {\r\n    GSCacheStyles.remove(sheet.id);\r\n    ownerNode[observer]?.disconnect?.();\r\n    ownerNode[observer] = undefined;\r\n  }\r\n\r\n  static get #sorted() {\r\n    return GSCacheStyles.styles;\r\n  }\r\n\r\n  /**\r\n   * List of adoptable styles or links. Filter only those with dataset.adoptable=true\r\n   * @returns {HTMLStyleElement|HTMLLinkElement}\r\n   */\r\n  static get #adoptable() {\r\n    return Object.values(document.styleSheets)\r\n      .filter(o => o.ownerNode)\r\n      .filter(o => o.ownerNode.dataset.adoptable)\r\n      .filter(o => !o.ownerNode[adoptedId]);\r\n  }\r\n\r\n  static #preload() {\r\n    GSDOM.queryAll(document.head, 'link[rel=\"preload\"][as=\"style\"]')\r\n    .forEach(el => {\r\n      el.remove();\r\n      document.head.appendChild(el);\r\n    });\r\n  }\r\n\r\n  static #onAttributeChange(mutationList) {\r\n    mutationList.forEach((mutation) => {\r\n       const id = mutation.target[adoptedId];\r\n       const style = GSCacheStyles.get(id);\r\n       if(style) style.disabled = mutation.target.hasAttribute('disabled');\r\n    });\r\n    GSAdoptedEngine.update();\r\n  }\r\n  \r\n  static #monitorAttributes(element) {\r\n    const me = GSAdoptedEngine;\r\n    const callback = me.#onAttributeChange.bind(me);\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(element, {\r\n      attributeFilter: [\"disabled\"],\r\n      attributeOldValue: true,\r\n      subtree: false,\r\n    });\r\n    return observer;\r\n  }\r\n  \r\n  /**\r\n   * Filter style and link(css) elements which will be shared\r\n   * with all web componentes. Filter only those marked with data-adoptable\r\n   * @param {HTMLElement} el \r\n   * @returns {Boolean} Return true if monotired element is selected for further processing\r\n   */\r\n  static #onMonitorFilter(el) {\r\n    return (Boolean(el.dataset?.adoptable))\r\n      && (\r\n        (el instanceof HTMLLinkElement && (el.rel === 'stylesheet' || el.as === \"style\"))\r\n        || el instanceof HTMLStyleElement\r\n      );\r\n  }\r\n\r\n  /**\r\n   * When style added to the HTML page, attach it to the WebComponents\r\n   * @param {HTMLStyleElement|HTMLLinkElement} el \r\n   */\r\n  static #onMonitorConnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    if (el instanceof HTMLStyleElement) {\r\n      me.#adoptStyle(el, el.innerText);\r\n      me.update();\r\n    } else if (el instanceof HTMLLinkElement) {\r\n      GSEvents.wait(el, 'load', 0, false).then(e => {\r\n        if (el.rel === 'preload') return el.rel = \"stylesheet\";\r\n        me.#adoptLink(e.target);\r\n        me.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When style removed, remove from adoptable and update\r\n   * @param {HTMLElement} el \r\n   */\r\n  static #onMonitorDisconnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    me.#sorted.filter(o => o.id === el[adoptedId])\r\n          .forEach(o => me.#remove(el, o));\r\n    me.update();\r\n  }\r\n\r\n  /**\r\n   * Observe DOM tree from mutations\r\n   * @param {HTMLElement} owner Root element to watch DOM tree from \r\n   */\r\n  static observe(owner) {\r\n    const me = GSAdoptedEngine;\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorConnect, false, owner);\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorDisconnect, true, owner);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promisses sequentially\r\n\t * @param {Arrayy<Promise>} ps \r\n\t * @returns \r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport { GSEvent } from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport class GSEventBus {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {String} name EventBus name\r\n     * @param {String} type Event name\r\n     * @param {Object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {String} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {String} name unique buss name\r\n     * @returns {Boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constructor to attach Gesture featuer to an HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {Boolean} swipe Monitor swipe gesture\r\n     * @param {Boolean} tap Monitor tap gesture\r\n     * @param {Boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move: me.#handleTouchMove.bind(me),\r\n            start: me.#handleTouchStart.bind(me),\r\n            end: me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) {\r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 && Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {Number}\r\n     */\r\n    static fingers(e) {\r\n        return e.detail.touches?.length;\r\n    }\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns {GSGesture}\r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport class GSItem extends HTMLElement {\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return template content of GS-ITEM element (if exists)\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tget body() {\r\n\t\tlet tpl = GSAttr.get(this, 'template');\r\n\t\tif (tpl) return `<gs-template flat src=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = this.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item elements\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tget items() {\r\n\t\treturn Array.from(this.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSAttr.get(this, 'name', '');\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate that parent element contains only specific childrens\r\n\t * @param {*} own \r\n\t * @param {*} tagName \r\n\t * @returns \r\n\t */\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic collect(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Convert GS-ITEM list to JSON\r\n\t * @param {HTMLElement} root Element containing GS-ITEM childs \r\n\t * @returns {Array} Arary of JSON objects\r\n\t */\r\n\tstatic toJSON(root) {\r\n\t\treturn GSItem.collect(root).map(el => el.asJSON(true));\r\n\t}\r\n\r\n\t/**\r\n\t * Make GS-ITEM attributes JSON compatible \r\n\t * @param {*} root \r\n\t * @param {*} definition \r\n\t * @returns \r\n\t */\r\n    static proxify(root, definition) {        \r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, definition));\r\n    }\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport class GSPopper {\r\n\r\n\t/**\r\n\t * A simple wrapper to get element DOMRect\r\n\t * @param {HTMLElement} el \r\n\t * @returns {DOMRect}\r\n\t */\r\n\tstatic asRect(el) {\r\n\t\treturn el.getBoundingClientRect();\r\n\t}\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = GSPopper.asRect(el);\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = GSPopper.asRect(element);\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\r\n\t\tconst css = {\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '0px',\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.translate = `${obj.x}px ${obj.y}px`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tconst astyle = GSDynamicStyle.dynamicStyle(arrow);\r\n\r\n\t\tconst css = {\r\n\t\t\tinset: GSPopper.#inset(pos),\r\n\t\t\tposition: 'absolute',\r\n\t\t\tmargin: '0px',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\twidth: 'max-content',\r\n\t\t\theight: 'max-content',\t\t\t\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\t\tastyle.position = 'absolute';\r\n\r\n\t\tconst srect = GSPopper.asRect(source);\r\n\t\tconst arect = GSPopper.asRect(arrow);\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tconst aopt = {\r\n\t\t\ttranslate: `${arr.x}px ${arr.y}px`,\r\n\t\t\ttop: arr.top ? arr.top : '',\r\n\t\t\tleft: arr.left ? arr.left : ''\r\n\t\t}\r\n\r\n\t\tconst opt = {\r\n\t\t\ttranslate : `${obj.x}px ${obj.y}px`\r\n\t\t};\r\n\r\n\t\tObject.assign(style, opt);\r\n\t\tObject.assign(astyle, aopt);\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst opt = {};\r\n\r\n\t\topt.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\topt.left = '';\r\n\t\t\topt.top = '0px';\r\n\t\t\tshift = 0; //pos.isStart ? size : -1 * size;\r\n\t\t\topt.translate = `${shift}px ${arrowPosH / 2}px`;\r\n\t\t} else {\r\n\t\t\topt.top = '';\r\n\t\t\topt.left = '0px';\r\n\t\t\tshift = 0; //pos.isTop ? size : -1 * size;\r\n\t\t\topt.translate = `${arrowPosW}px ${shift}px`;\r\n\t\t}\r\n\r\n\t\tGSDynamicStyle.applyDynamicStyle(arrow, opt);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {\r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSQueryCSS } from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value);\r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n\r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\treturn document.getElementById(tpl.slice(1));\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTheme class\r\n * @module base/GSTheme\r\n */\r\n\r\n/**\r\n * Switch between dark and light mode\r\n * @Class\r\n */\r\nexport class GSTheme {\r\n\r\n    static #STORAGE = 'gs-theme-mode';\r\n\r\n    /**\r\n     * Changes the theme to 'dark mode' and save settings to local stroage.\r\n     * Basically, replaces/toggles every CSS class that has '-light' class with '-dark'\r\n     * @param {HTMLElement} el \r\n     */\r\n    static darkMode(el) {\r\n        GSTheme.#switch(el, 'light', 'dark');\r\n    }\r\n\r\n    /**\r\n     * Changes the theme to 'light mode' and save settings to local stroage.\r\n     * @param {HTMLElement} el \r\n     */\r\n    static lightMode(el) {\r\n        GSTheme.#switch(el, 'dark', 'light');\r\n    }\r\n\r\n    static #switch(el, from = 'light', to = 'dark') {\r\n\r\n        const root = el || document.body;\r\n\r\n        // TODO  switch dark/light mode ?!??!? \r\n\r\n        // save last state\r\n        GSTheme.theme = to;\r\n    }\r\n\r\n    static get theme() {\r\n        return localStorage.getItem(GSTheme.#STORAGE);\r\n    }\r\n\r\n    static set theme(val) {\r\n        localStorage.setItem(GSTheme.#STORAGE, val);\r\n        window.dispatchEvent(new CustomEvent('gs-theme', { detail: val }));\r\n        const htmlEl = document.head.parentElement;\r\n        if (val) {\r\n            htmlEl.dataset.bsTheme = val;\r\n        } else {\r\n            delete htmlEl.dataset.bsTheme;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get system default theme by media query\r\n     * @returns {String} dark|light \r\n     */\r\n    static getSystemDefaultTheme() {\r\n        const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\r\n        return darkThemeMq.matches ? 'dark' : 'light';\r\n    }\r\n\r\n    static #onTheme(e) {\r\n        const q = new URLSearchParams(location.hash.slice(1));\r\n        GSTheme.theme = q.get('theme');\r\n    }\r\n\r\n    static #setup() {\r\n        window.addEventListener('hashchange', GSTheme.#onTheme)\r\n        let settings = localStorage.getItem(GSTheme.#STORAGE);\r\n        if (settings == null) {\r\n            settings = GSTheme.getSystemDefaultTheme();\r\n        }\r\n\r\n\r\n        if (settings == 'dark') return GSTheme.darkMode();\r\n        if (settings == 'light') return GSTheme.lightMode();\r\n        // TODO switch\r\n\r\n    }\r\n\r\n    static {\r\n        GSTheme.#setup();\r\n        globalThis.GSTheme = GSTheme;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-attribute - toggle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-call - calls a function on a given target (multipel functions supported)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: \r\n * data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * \r\n * data-gs-target determine element on which to execute,\r\n * if not specified, it means current element\r\n * \r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el) {\r\n        const me = this;\r\n        me.#host = el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = GSAttributeHandler.proxify(me.#host);\r\n    }\r\n\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleSwap(target);\r\n        me.#handleInject(host, target);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    #handleBinding(target, evt) {\r\n        const source = evt.target.field || evt.target.form || evt.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (!(isField || isForm)) return;\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n    }\r\n\r\n    #handleAction(target) {\r\n        if (this.action) GSEvents.send(target, 'action', this.action, true, true);\r\n    }\r\n\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)();\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    #handleInject(host, target) {\r\n        if (this.inject) {\r\n            const src = this.#toHTML(this.inject);\r\n            const content = GSDOM.parse(src, true);\r\n            this.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n    #handleSwap(target) {\r\n        if (this.swap) target.innerHTML =  this.#toHTML(this.swap);\r\n    }\r\n\r\n    #toHTML(value = '') {\r\n        return value.indexOf('/') < 0 ? `<${value}></${value}>` : `<gs-template flat src=\"${value}\"></gs-template>`;\r\n    }\r\n\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    #applyContent(host, target, content) {\r\n        if (host.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    deattach(name = 'click') {\r\n        //GSEvents.deattachListeners(this.#host);\r\n        const me = this;\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        me.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n        const me = this;\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                return [GSDOM.root(me.#host)];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n        const list = GSDOM.queryAll(document.body, me.target, false, true).filter(el => el.tagName !== 'GS-ITEM'); \r\n        if (list.length === 0) list.push(me.#host);\r\n        return list;\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     */\r\n    static clone(from, to) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig  last in, first out (LIFO) order of operations.\r\n */\r\nexport class Stack extends Array {\r\n    \r\n    push(item) {\r\n        this.unshift(item);\r\n    }\r\n\r\n    pop() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig first in, first out (FIFO) order of operations.\r\n */\r\nexport class Queue extends Array {\r\n    \r\n    enqueue(item) {\r\n        this.push(item);\r\n    }\r\n\r\n    dequeue() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst tree = new BinaryTree(1, 'AB');\r\n\r\ntree.insert(1, 11, 'AC');\r\ntree.insert(1, 12, 'BC');\r\ntree.insert(12, 121, 'BG', { right: true });\r\n\r\n[...tree.preOrderTraversal()].map(x => x.value);\r\n// ['AB', 'AC', 'BC', 'BCG']\r\n\r\n[...tree.inOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB', 'BC', 'BG']\r\n\r\ntree.value;                // 'AB'\r\ntree.hasChildren;          // true\r\n\r\ntree.find(12).isLeaf;           // false\r\ntree.find(121).isLeaf;          // true\r\ntree.find(121).parent.value;    // 'BC'\r\ntree.find(12).left;             // null\r\ntree.find(12).right.value;      // 'BG'\r\n\r\ntree.remove(12);\r\n\r\n[...tree.postOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB']\r\n*/\r\n\r\n/**\r\n * Binary Tree Node data holder\r\n */\r\nexport class BinaryTreeNode {\r\n\r\n    constructor(key, value = key, parent = null) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n\r\n    /**\r\n     * Check if both left and right are empty.\r\n     */\r\n    get isLeaf() {\r\n        return this.left === null && this.right === null;\r\n    }\r\n\r\n    /**\r\n     * Check if node has children\r\n     */\r\n    get hasChildren() {\r\n        return !this.isLeaf;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Binary tree implementation\r\n */\r\nexport class BinaryTree extends BinaryTreeNode {\r\n\r\n    constructor(key, value = key) {\r\n        super(key, value);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in in-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *inOrderTraversal(node = this) {\r\n        if (node.left) yield* this.inOrderTraversal(node.left);\r\n        yield node;\r\n        if (node.right) yield* this.inOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in post-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *postOrderTraversal(node = this) {\r\n        if (node.left) yield* this.postOrderTraversal(node.left);\r\n        if (node.right) yield* this.postOrderTraversal(node.right);\r\n        yield node;\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in pre-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *preOrderTraversal(node = this) {\r\n        yield node;\r\n        if (node.left) yield* this.preOrderTraversal(node.left);\r\n        if (node.right) yield* this.preOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to find the given parent node and \r\n     * insert a new child BinaryTreeNode either as the left or right child, \r\n     * depending on the passed options object.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @param {*} options \r\n     * @returns {boolean} Return true if data inserted\r\n     */\r\n    insert(\r\n        parentNodeKey,\r\n        key,\r\n        value = key,\r\n        { left, right } = { left: true, right: true }\r\n    ) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === parentNodeKey) {\r\n                const canInsertLeft = left && node.left === null;\r\n                const canInsertRight = right && node.right === null;\r\n                if (!canInsertLeft && !canInsertRight) return false;\r\n                if (canInsertLeft) {\r\n                    node.left = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n                if (canInsertRight) {\r\n                    node.right = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to remove a BinaryTreeNode from the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.left.key === key) {\r\n                node.left = null;\r\n                return true;\r\n            }\r\n            if (node.right.key === key) {\r\n                node.right = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to retrieve the given node in the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    find(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new DoublyLinkedList();\r\n\r\nlist.insertFirst(1);\r\nlist.insertFirst(2);\r\nlist.insertFirst(3);\r\nlist.insertLast(4);\r\nlist.insertAt(3, 5);\r\n\r\nlist.size;                      // 5\r\nlist.head.value;                // 3\r\nlist.head.next.value;           // 2\r\nlist.tail.value;                // 4\r\nlist.tail.previous.value;       // 5\r\n[...list].map(e => e.value);    // [3, 2, 1, 5, 4]\r\n\r\nlist.removeAt(1);               // 2\r\nlist.getAt(1).value;            // 1\r\nlist.head.next.value;           // 1\r\n[...list].map(e => e.value);    // [3, 1, 5, 4]\r\n\r\nlist.reverse();\r\n[...list].map(e => e.value);    // [4, 5, 1, 3]\r\n\r\nlist.clear();\r\nlist.size;                      // 0\r\n*/\r\n\r\n/**\r\n * Node data holder\r\n */\r\nexport class Node {\r\n\r\n    value = null;\r\n    next = null;\r\n    previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    release() {\r\n        this.value = undefined;\r\n        this.next = undefined;\r\n        this.previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DoublyLinkedList {\r\n\r\n    #nodes = [];\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     */\r\n    get size() {\r\n        return this.#nodes.length;\r\n    }\r\n\r\n    /**\r\n     * First element in the list\r\n     */\r\n    get head() {\r\n        return this.size ? this.#nodes[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Last elemet in the list\r\n     */\r\n    get tail() {\r\n        return this.size ? this.#nodes[this.size - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Create new linked node\r\n     * @param {*} value \r\n     * @param {*} nextNode \r\n     * @param {*} previousNode \r\n     * @returns \r\n     */\r\n    create(value, nextNode, previousNode) {\r\n        return new Node(value, nextNode, previousNode);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the given position in the list\r\n     * @param {*} index \r\n     * @param {*} value \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    insertAt(index, value, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index] || null;\r\n        const node = create(value, nextNode, previousNode);\r\n\r\n        if (previousNode) previousNode.next = node;\r\n        if (nextNode) nextNode.previous = node;\r\n        this.#nodes.splice(index, 0, node);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the beginning of the list\r\n     * @param {*} value \r\n     */\r\n    insertFirst(value) {\r\n        this.insertAt(0, value);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the end of the list\r\n     * @param {*} value \r\n     */\r\n    insertLast(value) {\r\n        this.insertAt(this.size, value);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data in the given index\r\n     * @param {Number} index \r\n     * @returns \r\n     */\r\n    getAt(index) {\r\n        return this.#nodes[index];\r\n    }\r\n\r\n    indexOf(val) {\r\n        return this.#nodes.indexOf(val);\r\n    }\r\n\r\n    /**\r\n     * Remove the data at the given index\r\n     * @param {*} index \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    removeAt(index, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index + 1] || null;\r\n\r\n        if (previousNode) previousNode.next = nextNode;\r\n        if (nextNode) nextNode.previous = previousNode;\r\n\r\n        return this.#nodes.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    clear(full = true) {\r\n        if (full) this.#nodes.forEach(o => o.release());\r\n        this.#nodes = [];\r\n    }\r\n\r\n    /**\r\n     * Reverse data order\r\n     */\r\n    reverse() {\r\n        this.#nodes = this.#nodes.reduce((acc, { value }) => {\r\n            const nextNode = acc[0] || null;\r\n            const node = new Node(value, nextNode, null);\r\n            if (nextNode) nextNode.previous = node;\r\n            return [node, ...acc];\r\n        }, []);\r\n    }\r\n\r\n    toArray() {\r\n        return this.#nodes.map(e => e.value);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#nodes;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield* this.#nodes;\r\n    }\r\n\r\n    #validate(index, safe = false) {\r\n        const isInvalid = this.#isInvalidIndex(index);\r\n        if (isInvalid) {\r\n            if (safe) {\r\n                console.log(this.#error());\r\n            } else {\r\n                throw new Error(this.#error());\r\n            }\r\n        }\r\n        return !isInvalid;\r\n    }\r\n\r\n    #isInvalidIndex(index) {\r\n        return !Number.isInteger(index) || index < 0 || index > this.size;\r\n    }\r\n\r\n    #error() {\r\n        return `Invalid index. Current length is ${this.size}.`;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        const list = new DoublyLinkedList();\r\n        if (Array.isArray(data)) data.forEach(v => list.insertLast(v));\r\n        return list;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Tree Node data holder\r\n */\r\nexport class Tree {\r\n\r\n    value;\r\n\r\n    #key = null;\r\n    #parent = null;\r\n    #children;\r\n\r\n    #folder = false;\r\n    #level = 0;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        this.#key = key;\r\n        this.#parent = parent;\r\n        this.#folder = value?.leaf === false;\r\n        this.#level = parent ? parent.level + 1 : level;\r\n        this.#children = this.#folder ? [] : undefined;\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Return tree list from root to this node.\r\n     * TODO: Refactor when iterator \"map\" become available\r\n     */\r\n    get subtree() {\r\n        return Array.from(this.up(undefined, false, true, true));\r\n    }\r\n\r\n    get levelID() {\r\n        return this.subtree.map(o => o.level).join('.');\r\n    }\r\n\r\n    /**\r\n     * Unique node canonical form\r\n     */\r\n    get nodeID() {\r\n        //if (this.parent?.level < 0) return this.index;\r\n        return this.subtree.map(o => o.index).join('.');\r\n    }\r\n\r\n    get path() {\r\n        return this.subtree.map(o => o.key).join('/');\r\n    }\r\n\r\n    get index() {\r\n        return this.parent?.nodes.indexOf(this) || 0;\r\n    }\r\n\r\n    get size() {\r\n        return this.#children?.length || -1;\r\n    }\r\n\r\n    get level() {\r\n        return this.#level;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Check if #children is empty\r\n     */\r\n    get isLeaf() {\r\n        return !this.#folder;\r\n    }\r\n\r\n    get isFolder() {\r\n        return this.#folder;\r\n    }\r\n\r\n    /**\r\n     * Check if has #childrens\r\n     */\r\n    get hasChildren() {\r\n        return this.#folder && this.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get key() {\r\n        this.#key ??= this.nodeID;\r\n        return this.#key;\r\n    }\r\n\r\n    get nodes() {\r\n        return this.#children;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get parent() {\r\n        return this.#parent;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n    /**\r\n     * Check if there are more siblings \r\n     */\r\n    get hasMore() {\r\n        return this.#parent?.size > this.index + 1;\r\n    }\r\n\r\n    get firstChild() {\r\n        return this.hasMore ? this.#children[0] : undefined;\r\n    }\r\n\r\n    get lastChild() {\r\n        return this.hasMore ? this.#children[this.#children.length - 1] : undefined;\r\n    }\r\n\r\n    get next() {\r\n        return this.down(this, false, false).next().value || this.nextSibling || this.parent?.nextSibling;\r\n    }\r\n\r\n    get previous() {\r\n        const node = this.previousSibling;\r\n        return (node?.hasChildren) ? node.lastChild : node || this.up(this, false, false).next().value;\r\n    }\r\n\r\n    get nextSibling() {\r\n        return this.hasMore ? this.#parent.#children[this.index + 1] : undefined;\r\n    }\r\n\r\n    get previousSibling() {\r\n        return this.index > 0 ? this.#parent.#children[this.index - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Clear all #children\r\n     */\r\n    clear() {\r\n        if (this.#children) {\r\n            this.#children.forEach(o => o.release?.());\r\n            this.#children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally, if called externally, \r\n     * make sure node is removed from parent \r\n     */\r\n    release() {\r\n        this.clear();\r\n        this.#key = null;\r\n        this.value = null;\r\n        this.#parent = null;\r\n    }\r\n\r\n    /**\r\n     * Walk down the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     * @param {Boolean} flat Navigate all nodes out of subtree\r\n     */\r\n    *down(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (node.#children?.length) {\r\n            for (let child of node.#children) {\r\n                yield* this.down(child, values, true, reverse, flat);\r\n            }\r\n        }\r\n        if (flat) {\r\n            const item = node.nextSibling || node.parent.nextSibling;\r\n            if (item) yield* this.down(item, values, true, reverse, flat);\r\n        }\r\n        /*\r\n        */\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk up the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     */\r\n    *up(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (flat) {\r\n            let item = node.previousSibling;\r\n            item = item?.isFolder ? item.lastChild : item\r\n            if (item) yield* this.up(item, values, true, reverse, flat);\r\n        }        \r\n        if (node.parent) {\r\n            yield* this.up(node.parent, values, true, reverse, flat);\r\n        }\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk through all nodes\r\n     * @param {*} node \r\n     */\r\n    walk = this.down;\r\n\r\n    /**\r\n     * Simulate array function \"forEach\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */\r\n    forEach(callback, flat = false, reverse = false) {\r\n        this.every((node, index) => {\r\n            callback(node, index);\r\n            return true;\r\n        }, flat, reverse);\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"every\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    every(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let sts = true;\r\n        let i = 0;\r\n        for (let node of it) {\r\n            sts = callback(node, i++);\r\n            if (!sts) break;\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"find\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    find(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let i = 0;\r\n        for (let node of it) {\r\n            if (callback(node, i++)) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"filter\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only childrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    filter(callback, flat, reverse) {\r\n        return [...this.#filtered(callback, flat, reverse)];\r\n    }\r\n\r\n    *#filtered(callback, flat, reverse) {\r\n        const it = this.iterate(flat, reverse);\r\n        for (let node of it) {\r\n            let res = callback(node);\r\n            if (res) yield node;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Iterate all nodes\r\n     * @param {boolean} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {boolean} reverse If set, will iterate up the tree\r\n     */\r\n    *iterate(flat, reverse) {\r\n        reverse ? yield* this.up(this, false, false, false, flat) : yield* this.down(this, false, false,  false, flat);\r\n    }\r\n\r\n    /**\r\n     * Add a new Tree to the tree.\r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    append(key, value = key) {\r\n        let newOne = undefined;\r\n        if (key instanceof Tree) {\r\n            key.#parent = this;\r\n            key.#level = this.#level + 1;\r\n            newOne = key;\r\n        } else {\r\n            newOne = new Tree(key, value, this);\r\n        }\r\n        this.#folder = true;\r\n        this.#children ??= [];\r\n        this.#children.push(newOne);\r\n        return newOne;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method and Array.prototype.push() \r\n     * to add a new Tree to the tree.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    insert(parentNodeKey, key, value = key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === parentNodeKey) {\r\n                const newOne = new Tree(key, value, node);\r\n                this.#folder = true;\r\n                this.#children ??= [];\r\n                node.#children.push(newOne);\r\n                return newOne;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove node from tree. If key is set, will search for first node with matching key.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n\r\n        const me = this;\r\n\r\n        if (key) {\r\n            const node = me.findByKey(key);\r\n            node?.remove();\r\n            return node;\r\n        }\r\n\r\n        if (me.isRoot) throw new Error('Root node can\\'t be removed!');\r\n        const node = me.parent;\r\n        const filtered = node.#children.filter(c => c !== me);\r\n        if (filtered.length !== node.#children.length) {\r\n            node.#children = filtered;\r\n            return me;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method to retrieve the given node in the tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    findByKey(key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convert tree into array list\r\n     * @returns \r\n     */\r\n    flatten(values, inclusive, reverse) {\r\n        return [...this.down(this, values, inclusive, reverse)];\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) Tree.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.#children?.map(o => o.toJSON()) || {};\r\n        return this.isLeaf ? { key: this.key, value: this.value } :\r\n            {\r\n                key: this.key,\r\n                value: this.value,\r\n                items: this.#children.map(o => o.toJSON())\r\n            }\r\n    }\r\n\r\n    /**\r\n     * Make node iterable\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.down();\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof Tree;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) throw new Error('Parent required when data is array');\r\n            raw.forEach(o => Tree.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        const tree = new Tree(obj.key, obj, data ? parent : undefined);\r\n        if (hasParent) parent.append(tree);\r\n        if (items) Tree.from(tree, items);\r\n        return tree;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../base/GSID.mjs\";\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n    #processors = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to register\r\n     * @param {object} processor\r\n     */\r\n    addProcessor(processor) {\r\n        if (!processor) return;\r\n        this.#processors ??= new Set();\r\n        this.#processors.add(processor);\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to remove\r\n     * @param {object} processor \r\n     */    \r\n    removeProcessor(processor) {\r\n        if (processor) this.#processors?.delete(processor);\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Generic event dispatcher, can be overriden to controll when to fire event\r\n     * @param {*} owner \r\n     * @param {*} type \r\n     * @param {*} data \r\n     * @param {*} error \r\n     */\r\n    notify(owner, type, data, error) {\r\n        this.emit(error ? 'error' : type, { type: type, error: error, owner: owner, data: data }, true);\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.#processors?.forEach(c => c.postRead?.(data));\r\n            if (data) me.notify(owner, 'read', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'read', data, e);\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.#processors?.forEach(c => c.postWrite?.(data));\r\n            if (result) me.notify(owner, 'write', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'write', data, e);\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"../base/GSFunction.mjs\";\r\nimport { GSLoader } from \"../base/GSLoader.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSAbstractReadWrite } from \"./AbstractReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically register in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */\r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */\r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return { ...this.#headers };\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = { ...val };\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */\r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#filter = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#sort = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest', 'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#writer);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('remote', GSReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSData } from \"../base/GSData.mjs\";\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * ReadWrite with cached memory data. \r\n * @Class\r\n */\r\nexport class GSCachedReader extends GSReadWrite {\r\n\r\n    #data = [];\r\n\r\n    #reformat(data = []) {\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        return records;\r\n    }\r\n\r\n    #postFilter(data) {\r\n        const me = this;\r\n        data = GSData.sortData(data, me.sort);        \r\n        let limit = me.limit === 0 ? data.length : me.limit;\r\n        data = data.slice(me.skip, me.skip + limit);\r\n        return data;\r\n    }\r\n\r\n    clear() {\r\n        this.#data = [];\r\n    }\r\n\r\n    append(data) {\r\n        if(!data) return false;\r\n        const me = this;\r\n        data = me.#reformat(data);\r\n        me.#data = me.#data.concat(data);\r\n        return me.#data;\r\n    }\r\n\r\n    remove(data) {\r\n        const me = this;\r\n        me.#data = me.#data.filter(o => o =! data);\r\n        return me.#data;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n\r\n        if (me.#data.length === 0) {\r\n            const data = await super.onRead();\r\n            me.#data = me.#reformat(data);\r\n        }\r\n\r\n        let data = GSData.filterData(me.#data, me.filter, me.fields, me.limit);\r\n        data = me.#postFilter(data);\r\n        return data;\r\n    }\r\n\r\n    disable() {\r\n        this.#data = [];\r\n        super.disable();\r\n    }\r\n\r\n    set search(val) {\r\n        const me = this;\r\n        me.filter = val ? [{value : val}] : [];\r\n        me.read();\r\n        /*\r\n        let data = GSData.filterData(me.#data, [{value : val}]);\r\n        data = me.#postFilter(data);\r\n        me.notify(me, 'read', data);\r\n        */\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSCachedReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('cached', GSCachedReader);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { Tree } from \"../helpers/Tree.mjs\";\r\n\r\n/**\r\n * A module loading TreeNode class\r\n * @module data/TreeNode\r\n */\r\n\r\n/**\r\n * UI mediator between Tree linked nodes and WebComponents\r\n * @Class\r\n */\r\nexport class TreeNode extends Tree {\r\n\r\n    #multi = false;\r\n    #opened = false;\r\n    #focused = false;\r\n    #selected = false;\r\n    \r\n    #focusedNode = undefined;\r\n    #selectedNode = undefined;\r\n    #controllers = undefined;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        super(key, value, parent, level);\r\n\r\n        if (value?.select === true || (this.multi && parent?.selected)) this.selected = true;\r\n        if (value?.focus === true) this.focused = true;\r\n        if (value?.open === true) this.opened = true;\r\n    }\r\n\r\n    addController(controller) {\r\n        const root = this.root;\r\n        (root.#controllers ??= new Set()).add(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.root.#controllers?.delete(controller);\r\n    }\r\n\r\n    /**\r\n     * Is multi selection available\r\n     */\r\n    get multi() {\r\n        return this.root.#multi === true;\r\n    }\r\n\r\n    set multi(val) {\r\n        this.root.#multi = val === true;\r\n    }\r\n\r\n    get visible() {\r\n        if (this.level < 0) return true;\r\n        return this.parent?.opened;\r\n    }\r\n\r\n    /**\r\n     * select single node, removing seelction flag from all other nodes\r\n     */\r\n    get opened() {\r\n        if (this.level < 0) return true;\r\n        return this.isLeaf ? this.parent?.opened : this.#opened;\r\n    }\r\n\r\n    set opened(val) {\r\n        val = val === true;\r\n        if (val) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus single node, removing focus flag from all other nodes\r\n     */\r\n    get focused() {\r\n        return this.#focused;\r\n    }\r\n\r\n    set focused(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const changed = this.#focused != val;\r\n        const focusedNode = root.focusedNode();\r\n        \r\n        root.#focusedNode = undefined;        \r\n        this.#focused = val;\r\n        if (focusedNode && focusedNode !== this) {\r\n            focusedNode.focused = false;\r\n        }\r\n\r\n        if (val) root.#focusedNode = this;\r\n        if (changed) root.#controllers?.forEach((c) => c.onFocusChanged?.(this));\r\n    }\r\n\r\n    /**\r\n     * Select single or multi node, depending on multi selection flag\r\n     * If single, remove selection flag from all other nodes\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    set selected(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const selectedNode = root.selectedNode();\r\n        const changed = this.#selected != val;\r\n        this.#selected = val;\r\n        if (val) {\r\n            if (selectedNode && selectedNode !== this && !root.multi) {\r\n                selectedNode.selected = false;\r\n            }\r\n            root.#selectedNode = this;\r\n        }\r\n        if (changed) {\r\n            root.#controllers?.forEach((c) => c.onSelectionChanged?.(this, selectedNode));\r\n            if (root.multi) root.#controllers?.forEach((c) => c.onSelectionChanged?.(this.parent, selectedNode));\r\n        } \r\n    }\r\n\r\n    get isPartialySelected() {\r\n        return this.selected && this.hasChildren && this.nodes.length > this.nodes.filter(n => n.selected).length;\r\n    }\r\n\r\n    /* hide from public\r\n    get host() {\r\n        return this[Symbol.for('gs-element')];\r\n    }\r\n\r\n    set host(el) {\r\n        this[Symbol.for('gs-element')] = el;\r\n    }\r\n    */\r\n\r\n    selectAll() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            this.deselectAll();\r\n            this.selected = true;\r\n            return\r\n        }\r\n        this.#selectionFlag(true);\r\n        root.#selectedNode = this;\r\n        root.#controllers?.forEach((c) => c.onSelectAll?.(root));\r\n    }\r\n\r\n    deselectAll() {\r\n        const root = this.root;\r\n        this.#selectionFlag(false);\r\n        root.#selectedNode = undefined;\r\n        root.#controllers?.forEach((c) => c.onDeselectAll?.(root));\r\n    }\r\n\r\n    /**\r\n     * Return last focused node\r\n     * @returns \r\n     */\r\n    focusedNode() {\r\n        const node = this.root.#focusedNode;\r\n        return node?.focused ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * Return last selected node\r\n     * @returns \r\n     */\r\n    selectedNode() {\r\n        const node = this.root.#selectedNode;\r\n        return node?.selected ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * List all selected nodes.\r\n     * TODO; refactor when Iterator.filter become available \r\n     * @returns \r\n     */\r\n    selectedNodes() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            const node = root.selectedNode()\r\n            return node?.selected ? [node] : [];\r\n        }\r\n        const result = [];\r\n        for (let node of root.walk()) {\r\n            if (node.selected) result.push(node);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Call from external controller data must be refresshed (to notify UI optionally)\r\n     * @param {*} root \r\n     */\r\n    refresh(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onRefresh?.(this));\r\n    }\r\n\r\n    /**\r\n     * Notify controllers about data loading (from async controller)\r\n     * @param {*} root \r\n     */\r\n    loading(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onLoad?.(this));\r\n    }\r\n\r\n    expandAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.expand(root);\r\n        }\r\n    }\r\n\r\n    collapseAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.collapse(root);\r\n        }\r\n    }\r\n\r\n    expand(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        if (!me.parent?.opened) {\r\n            me.parent?.expand(root);\r\n        }\r\n        const update = !me.opened;\r\n        me.#opened = true;\r\n        if (update) me.#expanded(root);\r\n        //me.nodes?.filter( n => !n.opened).forEach(c => c.refresh(root));\r\n        me.nodes?.forEach(c => c.refresh(root));\r\n    }\r\n\r\n    collapse(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        const update = me.#opened || me.parent.#opened;\r\n        me.nodes?.filter(n => n.opened || n.parent.opened).forEach(o => o.collapse(root));\r\n        //me.nodes?.forEach(o => o.collapse(root));\r\n        me.#opened = false;\r\n        if (update) me.#collapsed(root);\r\n    }\r\n\r\n    select(val = true) {\r\n        this.selected = val === true;\r\n    }\r\n\r\n    #expanded(root) {\r\n        root.#controllers?.forEach((c) => c.onExpand?.(this));\r\n    }\r\n\r\n    #collapsed(root) {\r\n        root.#controllers?.forEach((c) => c.onCollapse?.(this));\r\n    }\r\n\r\n    release() {\r\n        if (this.#selected) this.selected = false;\r\n        super.release();\r\n    }\r\n\r\n    append(key, value = key) {\r\n        const me = this;\r\n        const node = super.append(key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onAppend?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    insert(parentNodeKey, key, value = key) {\r\n        const me = this;\r\n        const node = super.insert(parentNodeKey, key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onInsert?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    remove() {\r\n        const node = super.remove();\r\n        if (node) this.root.#controllers?.forEach((c) => c.onInsert?.(node));\r\n        return node;\r\n    }\r\n\r\n    #selectionFlag(val = false) {\r\n        val = val === true\r\n        for (let node of this.walk()) {\r\n            node.selected = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) TreeNode.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.nodes?.map(o => o.toJSON()) || {};\r\n        const obj = Object.assign({\r\n            key: this.key,\r\n            opened: this.#opened,\r\n            focused: this.#focused,\r\n            selected: this.#selected,\r\n            items: undefined\r\n        }, this.value);\r\n        obj.items = this.nodes?.map(o => o.toJSON());\r\n        return obj;\r\n    }\r\n\r\n    static get root() {\r\n        return new TreeNode(null, null, null, -1);\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof TreeNode;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) return TreeNode.from(TreeNode.root, raw);\r\n            raw.forEach(o => TreeNode.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        obj.leaf = !Array.isArray(items);\r\n        const tree = new TreeNode(obj.key, obj, data ? parent : undefined);\r\n        if (items) TreeNode.from(tree, items);\r\n        if (hasParent) parent.append(tree);\r\n        return tree;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { TreeNode } from \"./TreeNode.mjs\";\r\n\r\n/**\r\n * A module loading GSTreeReader class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for reading Tree nodes\r\n * @Class\r\n */\r\nexport class GSTreeReader extends GSReadWrite {\r\n\r\n    #data = TreeNode.root;\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    async write(val) {\r\n        throw new Error('Writer not available for TreeReader')\r\n    }\r\n\r\n    async read(owner) {\r\n        const me = this;\r\n        let node = undefined;\r\n        const data = await super.read(owner);\r\n        if (!this.#data) {\r\n            node = TreeNode.from(data);\r\n            this.#data = node;\r\n        } else {\r\n            const parent = me.filter?.length > 0 ? me.#data.findByKey(me.filter[0]) : me.#data;\r\n            parent.clear();\r\n            node = parent.fromJSON(data);\r\n        }\r\n        me.filter = undefined;\r\n        me.notify(owner, 'read', node);\r\n        return node;\r\n    }\r\n\r\n    disable() {\r\n        super.disable();\r\n        this.#data?.release();\r\n    }\r\n\r\n    notify(owner, type, data, error) {\r\n        const isNode = data instanceof TreeNode;\r\n        if (!error && !isNode && type === 'read') return;\r\n        super.notify(owner, type, data, error);\r\n    }\r\n\r\n    /**\r\n     * Called from Tree when node is expanded \r\n     * @param {*} node \r\n     */\r\n    async onExpand(node) {\r\n        if (node.hasChildren) return;\r\n        node.loading();\r\n        this.filter = node.key;\r\n        return await this.read();\r\n    }\r\n\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSTreeReader} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSTreeReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('tree', GSTreeReader);\r\n    }\r\n\r\n}","// Lit 3.0 Google\r\nconst litUrl = globalThis.GS_LIT_URL || '/bootstrap-lit/assets/lib/lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const Directive = litModule.Directive;\r\nexport const LitElement = litModule.LitElement;\r\nexport const PartType = litModule.PartType;\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const adoptStyles = litModule.adoptStyles;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const createRef = litModule.createRef;\r\nexport const css = litModule.css;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const directive = litModule.directive;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getCompatibleStyle = litModule.getCompatibleStyle;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const guard = litModule.guard;\r\nexport const html = litModule.html;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isServer = litModule.isServer;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const literal = litModule.literal;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const noChange = litModule.noChange;\r\nexport const notEqual = litModule.notEqual;\r\nexport const nothing = litModule.nothing;\r\nexport const range = litModule.range;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const render = litModule.render;\r\nexport const repeat = litModule.repeat;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const staticHtml = litModule.staticHtml;\r\nexport const staticSvg = litModule.staticSvg;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const svg = litModule.svg;\r\nexport const templateContent = litModule.templateContent;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const unsafeStatic = litModule.unsafeStatic;\r\nexport const until = litModule.until;\r\nexport const when = litModule.when;\r\nexport const withStatic = litModule.withStatic;","import { Directive, directive, nothing } from \"../lib.mjs\";\r\n\r\nconst definition = {\r\n    'action': 'gsAction',\r\n    'anchor': 'gsAnchor',\r\n    'attribute': 'gsAttribute',\r\n    'call': 'gsCall',\r\n    'exec': 'gsExec',\r\n    'inject': 'gsInject',\r\n    'property': 'gsProperty',\r\n    'swap': 'gsSwap',\r\n    'target': 'gsTarget',\r\n    'template': 'gsTemplate',\r\n    'toggle': 'gsToggle',\r\n    'trigger': 'gsTrigger',\r\n    'value': 'gsValue'\r\n}\r\n\r\nconst template = {\r\n    'gsAction': undefined,\r\n    'gsAnchor': undefined,\r\n    'gsAttribute': undefined,\r\n    'gsCall': undefined,\r\n    'gsExec': undefined,\r\n    'gsInject': undefined,\r\n    'gsProperty': undefined,\r\n    'gsSwap': undefined,\r\n    'gsTarget': undefined,\r\n    'gsTemplate': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTrigger': undefined,\r\n    'gsValue': undefined\r\n}\r\n\r\nclass DatasetDirective extends Directive {\r\n\r\n    render(obj) {\r\n        console.log(obj);\r\n        return nothing;\r\n    }\r\n\r\n    update(part, [obj, flat = true]) {\r\n\r\n        if (!obj) return nothing;\r\n\r\n        const dataset = part.element.dataset;\r\n        const srcset = obj.dataset || obj;\r\n        const isDataset = srcset instanceof DOMStringMap;\r\n\r\n        if (isDataset) {\r\n            Object.assign(dataset, srcset);\r\n        } \r\n        \r\n        if (flat) this.#remap(dataset, obj);\r\n\r\n        return nothing;\r\n    }\r\n\r\n    #remap(dataset, obj) {\r\n        const opt = Object.assign({}, template);\r\n        const list = Object.entries(obj).filter(v => Object.hasOwn(definition, v[0]));\r\n        if (list.length > 0) {\r\n            list.forEach(kv => opt[definition[kv[0]]] = kv[1]);\r\n            Object.assign(dataset, opt);\r\n        }\r\n    }\r\n}\r\n\r\nexport const dataset = directive(DatasetDirective);\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\n\r\n/**\r\n * Generic object property descritptor getter\r\n * @param {Object} instance \r\n * @returns {PropertyDescriptor}\r\n */\r\nfunction descriptors(instance) {\r\n  return Object.entries(Object.getOwnPropertyDescriptors(instance));\r\n}\r\n\r\n/**\r\n * List of all object property descriptors \r\n * @param {Object} instance Object instance \r\n * @returns {Array<PropertyDescriptor>}\r\n */\r\nfunction listProperties(instance) {\r\n  return descriptors(instance)\r\n    .filter(e => typeof e[1].value !== 'function')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List all object property getters\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGetters(instance) {\r\n  return descriptors(Reflect.getPrototypeOf(instance))\r\n    .filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List of all getteble properties from an object\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGettable(instance) {\r\n  return new Set([...listGetters(instance), ...listProperties(instance)]);\r\n}\r\n\r\n/**\r\n * Parse string literal template into Lit html instance\r\n * @param {*} tpl \r\n * @param {*} params \r\n * @returns {function}\r\n */\r\nexport function literalTemplate(tpl, params) {\r\n  const names = Array.from(listGettable(params));\r\n  const vals = names.map(v => params[v]);\r\n  names.push('html');\r\n  vals.push(html);\r\n  return new Function(...names, `return html\\`${tpl}\\`;`)(...vals);\r\n}","/**\r\n * A clone of classMap directive to support CSS directive.\r\n * Lit classs is not expoed, so we have to clone it and create our own.\r\n */\r\n\r\nimport { Directive, PartType, directive, noChange } from \"../lib.mjs\";\r\n\r\nclass CssMapDirective extends Directive {\r\n\r\n    constructor(partInfo) {\r\n        super(partInfo);\r\n        if (partInfo.type !== PartType.ATTRIBUTE ||\r\n            partInfo.name !== 'css' ||\r\n            partInfo.strings?.length > 2) {\r\n            throw new Error('`classMap()` can only be used in the `css` attribute ' +\r\n                'and must be the only part in the attribute.');\r\n        }\r\n    }\r\n\r\n    render(classInfo) {\r\n        // Add spaces to ensure separation from static classes\r\n        return (' ' +\r\n            Object.keys(classInfo)\r\n                .filter((key) => classInfo[key])\r\n                .join(' ') +\r\n            ' ');\r\n    }\r\n\r\n    update(part, [classInfo]) {\r\n\r\n        // Remember dynamic classes on the first render\r\n        if (this._previousClasses === undefined) {\r\n            this._previousClasses = new Set();\r\n            if (part.strings !== undefined) {\r\n                this._staticClasses = new Set(part.strings\r\n                    .join(' ')\r\n                    .split(/\\s/)\r\n                    .filter((s) => s !== ''));\r\n            }\r\n\r\n            for (const name in classInfo) {\r\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\r\n                    this._previousClasses.add(name);\r\n                }\r\n            }\r\n            return this.render(classInfo);\r\n        }\r\n\r\n        const classList = part.element.classList;\r\n\r\n        // Remove old classes that no longer apply\r\n        for (const name of this._previousClasses) {\r\n            if (!(name in classInfo)) {\r\n                classList.remove(name);\r\n                this._previousClasses.delete(name);\r\n            }\r\n        }\r\n\r\n        // Add or remove classes based on their classMap value\r\n        for (const name in classInfo) {\r\n            // We explicitly want a loose truthy check of `value` because it seems\r\n            // more convenient that '' and 0 are skipped.\r\n            const value = !!classInfo[name];\r\n            if (value !== this._previousClasses.has(name) &&\r\n                !this._staticClasses?.has(name)) {\r\n                if (value) {\r\n                    classList.add(name);\r\n                    this._previousClasses.add(name);\r\n                } else {\r\n                    classList.remove(name);\r\n                    this._previousClasses.delete(name);\r\n                }\r\n            }\r\n        }\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * A directive that applies dynamic CSS classes.\r\n *\r\n * This must be used in the `css` attribute and must be the only part used in\r\n * the attribute. It takes each property in the `classInfo` argument and adds\r\n * the property name to the element's `classList` if the property value is\r\n * truthy; if the property value is falsey, the property name is removed from\r\n * the element's `css`.\r\n *\r\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\r\n * truthy.\r\n *\r\n * @param classInfo\r\n */\r\nexport const cssMap = directive(CssMapDirective);\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class ButtonTypes {\r\n\r\n    static values = ['button', 'reset', 'submit'];\r\n\r\n    static is(val) {\r\n        return ButtonTypes.values.includes(val);\r\n    }\r\n\r\n    static isReest(val) {\r\n        return ButtonTypes.values.indexOf(val) === 1;\r\n    }\r\n\r\n    static isSubmit(val) {\r\n        return ButtonTypes.values.indexOf(val) === 2;\r\n    }\r\n} \r\n\r\nexport const buttonType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ButtonTypes.is(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const ColorTypes = ['', 'primary', 'secondary', 'dark', 'light', 'info', 'warning', 'danger', 'alert', 'link', 'success'];\r\n\r\nexport const color = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ColorTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'dektop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n\r\nexport const InputTypes = ['checkbox', 'radio', 'switch', 'number', 'range', 'text', 'passsword', 'email', 'url', 'file'];\r\n\r\nexport const inputType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && InputTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const NavTypes = ['', 'pills', 'tabs', 'underline'];\r\n\r\nexport const nav = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && NavTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class PlacementTypes {\r\n\r\n    static values = ['center', 'left', 'right', 'start', 'end', 'top', 'bottom'];\r\n\r\n    static includes(val) {\r\n        return PlacementTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        return PlacementTypes.values.indexOf(val) > 4;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = PlacementTypes.values.indexOf(val)\r\n        return idx > 0 && idx < 5;\r\n    }\r\n\r\n    static isCenter(val) {\r\n        return PlacementTypes.values.indexOf(val) === 0;\r\n    }\r\n\r\n    static isBefore(val) {\r\n        return ['left', 'start', 'top'].includes(val);\r\n    }\r\n\r\n    static isAfter(val) {\r\n        return ['right', 'end', 'bottom'].includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const placement = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PlacementTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class PositionTypes {\r\n\r\n    static values = ['absolute', 'fixed', 'relative', 'sticky', 'static'];\r\n\r\n    static includes(val) {\r\n        return PositionTypes.values.includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const position = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PositionTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const SizeTypes = { 'default' : '', 'normal': '',  'medium': '', 'small': 'sm', 'large': 'lg', 'big' : 'lg' };\r\n\r\nexport const size = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && Object.hasOwn(SizeTypes, newVal);\r\n    }\r\n\r\n};","export const stringArrayConverter = {\r\n    fromAttribute: (value, type) => {\r\n        return (value || '').split(',');\r\n    },\r\n    toAttribute: (value, type) => {\r\n        return (value || []).join(',');\r\n    }\r\n  }","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCacheStyles } from '../base/GSCacheStyles.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time even gs-adopted is triggered by the GSAdoptedEngien class,\r\n * all registerd controller will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to preven dom node polution; \r\n * Style  changes  are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me.#host);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values, isGlobal = false) {\r\n    const me = this;\r\n    let style = null;\r\n    if (isGlobal) {\r\n      style = GSCacheStyles.dynamic;\r\n    } else {\r\n      me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');      \r\n      style = me.#dynamic;\r\n    }    \r\n    if (values === null && style.rules.length > 0 ) return style.removeRule(name);\r\n    return style.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.deattach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (!me.#isSelf()) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs).forEach(el => el?.remove());\r\n      me.#refs.clear();\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async relink(read = true) {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#listen(read);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.filter = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    storage?.on('read', me.#readCallback);\r\n    storage?.on('write', me.#writeCallback);\r\n    storage?.on('error', me.#errorCallback);\r\n    if (read) storage.read(me.#host);\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    storage?.off('read', me.#readCallback);\r\n    storage?.off('write', me.#writeCallback);\r\n    storage?.off('error', me.#errorCallback);\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for elment move events, properly handling mouse events.\r\n */\r\nexport class ElementMoveController {\r\n\r\n  #host;\r\n  #element;\r\n  #attached = false;\r\n\r\n  #cursorX = 0;\r\n  #cursorY = 0;\r\n\r\n  #mouseUpCallback;\r\n  #mouseDownCallback;\r\n  #mouseMoveCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n    me.#mouseUpCallback = me.#onMouseUp.bind(me);\r\n    me.#mouseDownCallback = me.#onMouseDown.bind(me);\r\n    me.#mouseMoveCallback = me.#onMouseMove.bind(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  attach(element) {\r\n    const me = this;\r\n    if (!me.#attached) {\r\n      me.#element = element;\r\n      me.#attached = true;\r\n      me.#host.attachEvent(me.#element, 'mousedown', me.#mouseDownCallback);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.#cursorX = 0;\r\n    me.#cursorY = 0;\r\n    me.#host.removeEvent(document, 'mouseup', me.#mouseUpCallback);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n  * Call host onStartMove function\r\n  * @param {MouseEvent} e \r\n  */\r\n  #onMouseDown(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n    me.#host.onStartMove?.(e, me.#cursorX, me.#cursorY);\r\n    me.#host.attachEvent(document, 'mouseup', me.#mouseUpCallback, true);\r\n    me.#host.attachEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n   * Remove mousemove listener and call host onEndMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseUp(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n    return me.#host.onEndMove?.(e, me.#cursorX, me.#cursorY);\r\n  }\r\n\r\n  /**\r\n   * Call host onMouseMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseMove(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n\r\n    me.#host.onMouseMove?.(e, me.#cursorX, me.#cursorY);\r\n\r\n    if (me.#cursorX < e.clientX) {\r\n      me.#host.onCursorRight?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorX > e.clientX) {\r\n      me.#host.onCursorLeft?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    if (me.#cursorY < e.clientY) {\r\n      me.#host.onCursorUp?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorY > e.clientY) {\r\n      me.#host.onCursorDown?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for child element navigation / selection / focusing\r\n */\r\nexport class ElementNavigationController {\r\n\r\n  #host;\r\n  #attached;\r\n  #selected;\r\n  #focused;\r\n  #multiselect = new Set();\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.init();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#attached = false;\r\n  }\r\n\r\n  get circular() {\r\n    return this.#host?.circular === true;\r\n  }\r\n\r\n  get multiple() {\r\n    return this.#host?.multiple === true;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.multiple ? [...this.#multiselect.values()] : this.#selected;\r\n  }\r\n\r\n  init() {\r\n    const me = this;\r\n    me.#selected = me.#host.data?.filter(o => o.active).pop();\r\n  }\r\n\r\n  attach(el) {\r\n    const me = this;\r\n    if (me.#attached) return;\r\n    me.#attached = true;\r\n    me.#host.attachEvent(el, 'keydown', e => me.onKeyDown(e));\r\n    me.#host.attachEvent(el, 'keyup', e => me.onKeyUp(e));\r\n    me.#host.attachEvent(el, 'click', e => me.onClick(e));\r\n    me.#host.attachEvent(el, 'focusin', e => me.onFocusIn(e));\r\n    me.#host.attachEvent(el, 'focusout', e => me.onFocusOut(e));\r\n  }\r\n\r\n  previous() {\r\n    const me = this;\r\n    let el = me.#focused?.previousElementSibling;\r\n    while (el && el.disabled) el = el.previousElementSibling;\r\n    if (me.circular && !el) el = me.lastElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  next() {\r\n    const me = this;\r\n    let el = me.#focused?.nextElementSibling;\r\n    while (el && el.disabled) el = el.nextElementSibling;\r\n    if (me.circular && !el) el = me.firstElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    const me = this;\r\n    if (me.multiple) {\r\n      me.#multiselect.forEach(el => {\r\n        el.active = false;\r\n        el.blur();\r\n      });\r\n    } else if (me.#selected) {\r\n      me.#selected.active = false;\r\n      me.#selected.blur();\r\n    }\r\n    me.#multiselect.clear();\r\n    me.#focused = undefined;\r\n    me.#selected = undefined;\r\n    this.#host?.emit('group-reset', undefined, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element selected\r\n   * @param {*} el \r\n   */\r\n  #onSelected(el) {\r\n    this.#host?.onSelected?.(el);\r\n    this.#host?.emit('group-selected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element deselected\r\n   * @param {*} el \r\n   */\r\n  #onDeselected(el) {\r\n    this.#host?.onDeselected?.(el);\r\n    this.#host?.emit('group-deselected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  #onFocused(el) {\r\n    this.#host?.onFocused?.(el);\r\n    this.#host?.emit('group-focused', el, true);\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  #isNavigable(el) {\r\n    return this.#host?.isNavigable ? this.#host?.isNavigable(el) : true;\r\n  }\r\n\r\n  #focus(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    me.#focused = el;\r\n    if (el) {\r\n      me.#onFocused(me.#focused);\r\n    }\r\n  }\r\n\r\n  #toggle(el) {\r\n    if (!el) return;\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    if (el.active) {\r\n      me.#multiselect.add(el);\r\n      me.#onSelected(el);\r\n    } else {\r\n      me.#multiselect.delete(el);\r\n      me.#onDeselected(el);\r\n    }\r\n  }\r\n\r\n  #select(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n\r\n    if (me.#selected && !me.multiple) {\r\n      me.#selected.active = false;\r\n      me.#toggle(me.#selected);\r\n    }\r\n\r\n    me.#selected = el;\r\n    if (el) {\r\n      if (me.multiple) {\r\n        el.active = !el.active;\r\n      } else {\r\n        el.active = true;\r\n      }\r\n      me.#toggle(el);\r\n    }\r\n  }\r\n\r\n  onFocusOut(e) {\r\n    const me = this;\r\n    //if (me.#focused === e.target) me.#focused = undefined;\r\n  }\r\n\r\n  onFocusIn(e) {\r\n    const me = this;\r\n    me.#focus(e.target)\r\n  }\r\n\r\n  onClick(e) {\r\n    const me = this;\r\n    const el = e.composedPath().filter(el => el.parentElement === me.#host).pop();\r\n    //if (!e.target.isNavigable) return;\r\n    if (!el) return;\r\n    if (e.ctrlKey) me.reset();\r\n    me.#onDeselected(me.#selected);\r\n    me.#select(el);\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        me.next();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'Space':\r\n      case 'Enter':\r\n        me.#focused?.click();\r\n        break;\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me.#host);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n  #injected;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#injected = false;\r\n    me.#request();    \r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  hostUpdate() {\r\n    this.#request();\r\n  }\r\n\r\n  requestUpdate() {\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  hostUpdated() {\r\n    if (this.#injected) this.#host.templateInjected?.();\r\n  }\r\n\r\n  #request() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      me.#lastRef = ref;\r\n      if (ref) TemplateController.#schedule(this);\r\n    }\r\n  }\r\n\r\n  async #load() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (!ref) return;\r\n    const isTplEl = ref instanceof HTMLTemplateElement;\r\n    const template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n    if (template) {\r\n      me.#template = template;\r\n      me.#injected = true;\r\n      me.#host.requestUpdate();\r\n    }\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    const host = this.#host;\r\n    if (!host) return;\r\n    if(this.isTemplateElement) return host.src;\r\n    return host.template || host.query('template', false);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    await GSUtil.timeout(100);\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = false));\r\n    }\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle event when template slot changes\r\n */\r\nexport class SlotController {\r\n\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      const me = this;\r\n      const target = me.#host.renderRoot || me.#host;\r\n      me.#host.attachEvent(target, 'slotchange', me.#onSlotChanged.bind(me));\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    #onSlotChanged(e) {\r\n      e.target.assignedElements().forEach(el => {\r\n        el.onSlotInjected?.(e.target);\r\n      });\r\n    }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #locale;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#locale = host.locale;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#locale !== me.#host?.locale) {\r\n      me.#locale === me.#host?.locale;\r\n      me.updateLanguage(me.#locale);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#locale) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\nimport { SlotController } from './controllers/SlotController.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    locale: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n  #orientation;\r\n  #localization;\r\n  #dataController;\r\n  #slotController;\r\n  #themes\r\n  #template;\r\n  #content;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.locale = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n    me.#slotController = new SlotController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('storage')) {\r\n      if (me.storage) {\r\n        if (!me.#dataController) {\r\n          me.#dataController = new DataController(me);\r\n        } else {\r\n          me.#dataController.relink();\r\n        }\r\n      } else {\r\n        me.#dataController?.hostDisconnected();\r\n        me.#dataController = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when this element injected in some slot\r\n   * @param {*} slot \r\n   */\r\n  onSlotInjected(slot) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return this.renderTemplate();\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : noChange;\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Called when asynchronnous template is injected into component\r\n   */\r\n  templateInjected() {\r\n    \r\n\t}\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to witch to add parsed CSS\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @param {boolean} isGlobal \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value, isGlobal = false) {\r\n    return this.#adopted.style(id, value, isGlobal);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.locale, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment);\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os);\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol);\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Get instance of internal styles\r\n   */\r\n  get elementStyles() {\r\n    return this.constructor.elementStyles.map(s => Object.values(s).filter(o => o instanceof CSSStyleSheet).pop()).pop();\r\n  }\r\n\r\n  /**\r\n   * Internal shadow styles rule\r\n   * @param {*} name \r\n   * @returns \r\n   */\r\n  cssRule(name) {\r\n    return Array.from(this.elementStyles.rules).filter(r => r.selectorText === name).pop();\r\n  }\r\n\r\n  /**\r\n   * Set dynamic CSS rule \r\n   * See GSIcon hot it is done\r\n   * @param {*} rule \r\n   * @param {*} name \r\n   * @param {*} value \r\n   */\r\n  setCSSProperty(rule, name, value) {\r\n    this.cssRule(rule).style.setProperty(name, value);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, opt);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\n\r\nexport class GSAccordionElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    autoclose: { type: Boolean },\r\n    cssItem: { reflect: true, attribute: 'css-item' },\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    data: { type: Array }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.settings;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n       @notify=\"${me.#onNotify.bind(me)}\"\r\n       @click=\"${me.#onClick}\" \r\n       @keyup=\"${me.#onKeyUp}\" \r\n       class=\"accordion ${classMap(me.renderClass())}\">\r\n       ${this.#renderItems()}\r\n       <slot></slot></div>`\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-accordion-item');\r\n  }\r\n\r\n  get settings() {\r\n    const cfg = this.constructor.properties;\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n  }\r\n\r\n  close() {\r\n    this.#state(false);\r\n  }\r\n\r\n  open() {\r\n    this.#state(true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-accordion-item generated\r\n        .opened=\"${ifDefined(o.disabled === true)}\" \r\n        message=\"${ifDefined(o.message)}\" \r\n        template=\"${ifDefined(o.template)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-accordion-item>`;\r\n    });\r\n  }\r\n\r\n  #state(val = false) {\r\n    this.items.forEach(el => el.opened = val);\r\n    this.notify();\r\n  }\r\n\r\n  #onNotify(e) {\r\n    const me = this;\r\n    if (me.autoclose && e.target.opened) {\r\n      me.items.filter(el => el != e.target).forEach(el => el.opened = false);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const isItemCloser = e?.composedPath()[0]?.matches('.accordion-button');\r\n    if(isItemCloser) e.target.toggle?.();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        e.target.close?.();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.target.open?.();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSAccordionItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    message: { reflect: true, },\r\n    title: { reflect: true, },\r\n    opened: { type: Boolean, reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-ACCORDION';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const owner = me.owner;\r\n    const cssHeader = me.cssHeader || owner?.cssHeader;\r\n    const cssBody = me.cssBody || owner?.cssBody;\r\n    return html`<div class=\"accordion-item ${me.css}\">\r\n             <h2 class=\"accordion-header\">\r\n               <button type=\"button\" \r\n                class=\"accordion-button  ${cssHeader} ${me.opened ? '' : 'collapsed'}\"> \r\n                 ${me.translate(me.title)}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse  ${cssBody} ${me.opened ? 'show' : ''}\">\r\n               <div class=\"accordion-body\">\r\n                   ${me.translate(me.message)}\r\n                   ${me.renderTemplate()}\r\n                   <slot></slot>\r\n               </div>\r\n             </div>      \r\n     </div>`\r\n  }\r\n\r\n  open() {\r\n    this.notify(true);\r\n  }\r\n  \r\n  close() {\r\n    this.notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.notify(!this.opened);\r\n  }\r\n\r\n  notify(val = false) {\r\n    const me = this;\r\n    me.opened = val;\r\n    super.notify();\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-accordion') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSAlertElement extends GSElement {\r\n\r\n    static properties = {\r\n        message: { reflect: true },\r\n        color: { ...color },\r\n        closed: { reflect: true, type: Boolean },\r\n        closable: { reflect: true, type: Boolean },\r\n        delay: { reflect: true, type: Number },\r\n    }\r\n\r\n    #ref;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.delay = 1;\r\n        this.#ref = createRef();\r\n        this.#data = this.#proxify(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div role=\"alert\" dir=\"${ifDefined(me.direction)}\" ${ref(me.#ref)} \r\n            @mouseover=\"${() => me.#pause = true}\"\r\n            @mouseout=\"${() => me.#pause = false}\"\r\n            class=\"alert fade ${classMap(me.renderClass())}\" >\r\n            ${me.#first}\r\n            ${me.renderTemplate()}\r\n            <slot></slot>\r\n            ${me.#second}\r\n        </div>`;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#handleBillboard();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        if (!changed.has('opened')) return;\r\n        this.#handleBillboard();\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': !me.closed,\r\n            'alert-dismissible': me.closable,\r\n            [`alert-${this.color}`]: me.color,\r\n\r\n        }\r\n        return css;\r\n    }\r\n\r\n    open() {\r\n        this.notify(false);\r\n    }\r\n\r\n    close() {\r\n        this.notify(true);\r\n    }\r\n\r\n    toggle() {\r\n        this.notify(!this.closed);\r\n    }\r\n\r\n    notify(val = false) {\r\n        const me = this;\r\n        me.closed = val;\r\n        if (me.closed) setTimeout(() => { me.#ref.value.classList.toggle('d-none', true) }, 250);\r\n        super.notify();\r\n    }\r\n\r\n    get isBillboard() {\r\n        return this.#data?.length > 0;\r\n    }\r\n\r\n    get #message() {\r\n        return this.translate(this.message);\r\n    }\r\n\r\n    get #first() { return this.rtl ? this.#button : this.#message; };\r\n\r\n    get #second() { return this.rtl ? this.#message : this.#button; };\r\n\r\n    get #button() {\r\n        return this.closable ? html`<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"${this.close}\"></button>` : '';\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, {message:{}}));\r\n    }\r\n\r\n    #handleBillboard() {\r\n        const me = this;\r\n        if (me.closed) {\r\n            clearInterval(me.#interval);\r\n            me.#interval = 0;\r\n        } else {\r\n            me.#billboard();\r\n        }        \r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        if (!me.isBillboard) return;\r\n        const items = me.#data;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].message;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].message;\r\n        }, me.delay * 1000);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-alert');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, size, buttonType, ButtonTypes, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSButtonElement extends GSElement {\r\n\r\n  static properties = {\r\n    type: { ...buttonType }, // reset, submit\r\n    size: { ...size }, // small, large, normal\r\n    color: { ...color },\r\n    toggleColor: { ...color, attribute : 'toggle-color' },\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    outline: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    toggling: { type: Boolean },\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    text: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'button';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<button part=\"button\" role=\"button\" ${ref(me.#refEl)}\r\n        dir=\"${ifDefined(me.direction)}\"\r\n        type=\"${ifDefined(me.type)}\" \r\n        class=\"btn ${classMap(me.renderClass())}\" \r\n        title=\"${ifDefined(me.#tooltip)}\"\r\n        ?disabled=${me.disabled} \r\n        @click=\"${me.#onClick}\">\r\n          ${me.#first} ${me.#second}</button>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n      'focus-ring': document.activeElement === me,\r\n      [`text-${me.text}`]: me.text,\r\n      [`btn-${size}`]: size,\r\n      [`btn-outline-${me.color}`]: me.outline,\r\n      [`btn-${me.color}`]: !me.outline && me.color,\r\n      [`btn-${me.toggleColor}`]: me.active && me.toggleColor,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    if(me.toggling) me.toggle();\r\n    if (me.isReset) return me.form?.reset();\r\n    if (me.isSubmit) return me.form?.submit();\r\n    me.notify();\r\n  }\r\n\r\n  get isReset() {\r\n    return ButtonTypes.isReest(this.type);\r\n  }\r\n\r\n  get isSubmit() {\r\n    return ButtonTypes.isSubmit(this.type);\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form, form');\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #tooltip() {\r\n    return this.translate(this.tooltip);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#icon; };\r\n\r\n  get #second() { return this.rtl ? this.#icon : this.#title; };\r\n\r\n  get #icon() { return this.icon ? html`<gs-icon class=\"bi bi-${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  static {\r\n    this.define('gs-button');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { unsafeHTML, classMap, html, ifDefined, css } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\n\r\nexport class GSCalendarElement extends GSElement {\r\n\r\n  static style = css`.year::-webkit-outer-spin-button,.year::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;} .year {-moz-appearance: textfield;} .day:focus{font-weight: bold;}`\r\n\r\n  static properties = {\r\n    date: {},\r\n    target: {},\r\n    format: { hasChanged: notEmpty },\r\n    year: { type: Number },\r\n    month: { type: Number, hasChanged: numGE0 },\r\n    day: { type: Number, hasChanged: numGE0 },\r\n    arrovPrev: { attribute: 'arrow-prev' },\r\n    arrowNext: { attribute: 'arrow-next' },\r\n    cssDays: { attribute: 'css-days' },\r\n    cssToday: { attribute: 'css-today' },\r\n    cssWeeks: { attribute: 'css-weeks' },\r\n    cssMonth: { attribute: 'css-month' },\r\n    cssYear: { attribute: 'css-year' },\r\n    cssNav: { attribute: 'css-nav' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    minYear: { attribute: 'year-min', type: Number },\r\n    maxYear: { attribute: 'year-max', type: Number },\r\n  }\r\n\r\n  #date;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.#date = new GSDate();\r\n    me.#date.locale = GSUtil.locale;\r\n    me.locale = GSUtil.locale;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.minYear = 1900;\r\n    me.maxYear = 2100;\r\n    me.arrowPrev = '&#10094;';\r\n    me.arrowNext = '&#10095;';\r\n    me.cssNav = 'btn-light';\r\n    me.cssToday = 'btn-secondary';\r\n    me.cssSelected = 'btn-primary';\r\n    me.cssWeeks = 'fw-bold text-bg-dark';\r\n    me.cssYear = 'form-control fs-5 fw-bold border-0 text-center m-1 p-0';\r\n    me.cssMonth = 'form-control fs-3 fw-bold border-0 text-center m-1 p-0';\r\n  }\r\n\r\n  get date() {\r\n    const me = this;\r\n    //return this.#date.toISOString();\r\n    return new Proxy(this.#date, {\r\n      set(target, prop, value) {\r\n        if (typeof target[prop] != 'function') {\r\n          target[prop] = value;\r\n          me.#update();\r\n        }\r\n        return true;\r\n      },\r\n      get(target, prop, receiver) {\r\n        const value = target[prop];\r\n        if (value instanceof Function) {\r\n          return function (...args) {\r\n            try {\r\n              return value.apply(this === receiver ? target : this, args);\r\n            } finally {\r\n              me.#update();\r\n            }\r\n          };\r\n        }\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  previousMonth() {\r\n    const me  =this;\r\n    if (me.month == 0) {\r\n      me.month = 11;\r\n      me.year--;\r\n    } else {\r\n      me.month--;\r\n    }\r\n  }\r\n\r\n  nextMonth() {\r\n    const me  =this;\r\n    if (me.month == 11) {\r\n      me.month = 0;\r\n      me.year++;\r\n    } else {\r\n      me.month++;\r\n    } \r\n  }\r\n\r\n  previousYear() {\r\n    this.year--;\r\n  }\r\n\r\n  nextYear() {\r\n    this.year++;\r\n  }\r\n\r\n  formatted(date) {\r\n    const me = this;\r\n    return (date || me.#date).format(me.format, me.locale);\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    const date = new GSDate(me.#date);\r\n    me.#updateTarget(date);\r\n    me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#date.year = me.year;\r\n    me.#date.month = me.month;\r\n    me.#date.day = me.day;\r\n    me.#date.locale = me.locale;\r\n\r\n    const week = GSDate.dayList(true, me.locale).map(v => html`<div class=\"col\">${v}</div>`);\r\n    const months = me.#monthsHTML();\r\n    const year = me.#yearHTML();\r\n\r\n    return html`\r\n          <div class=\"container-fluid text-center ${classMap(me.renderClass())}\"\r\n          dir=\"${ifDefined(me.direction)}\"\r\n          @keydown=\"${me.#onKey}\"\r\n          @click=\"${me.#onDay}\">\r\n          <div class=\"row align-items-center ${me.cssHeader} header\">\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.previousMonth}\" class=\"btn ${me.cssNav} arrow prev\">${unsafeHTML(me.arrowPrev)}</a>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  ${months}\r\n                  ${year}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.nextMonth}\" class=\"btn ${me.cssNav} arrow next\">${unsafeHTML(me.arrowNext)}</a>\r\n              </div>\r\n          </div>\r\n          <div class=\"row weeks ${me.cssWeeks}\">${week}</div>\r\n          ${unsafeHTML(me.#daysHTML())}\r\n      </div>`;\r\n  }\r\n\r\n  #updateTarget(date) {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    const tgt = GSDOM.query(document.documentElement, me.target);\r\n    if (!tgt) return;\r\n\r\n    if (tgt instanceof HTMLInputElement) {\r\n      if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n      return tgt.value = me.formatted(date);\r\n    }\r\n    GSDOM.setHTML(tgt, me.formatted(date));\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.locale = me.#date.locale;\r\n  }\r\n\r\n  #isToday(v, date) {\r\n    const me = this;\r\n    return v && GSUtil.asNum(v) === date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n  }\r\n\r\n  #daysHTML() {\r\n    const me = this;\r\n    const today = new GSDate();\r\n    today.locale = me.locale;\r\n    const list = me.#date.build(me.locale);\r\n    const result = list\r\n      .map(v => {\r\n        const c1 = me.#isToday(v, today) ? me.cssToday : '';\r\n        const c2 = me.#isToday(v, me.#date) ? me.cssSelected : '';\r\n\r\n        const d = v ? `<a tabindex=\"0\" href=\"#\" class=\"btn shadow-none ${c1} ${c2} day\" data-day=\"${v}\">${v}</a>` : ''\r\n        return `<div class=\"col p-0\">${d}</div>`;\r\n      })\r\n      .map((v, i) => {\r\n        if (i === 0) return `<div class=\"row days\">${v}`;\r\n        const isBreak = i % 7 == 0;\r\n        return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n      });\r\n    result.push('</div>');\r\n    return result.join('');\r\n  }\r\n\r\n\r\n  #monthsHTML() {\r\n    const me = this;\r\n    const current = me.#date.MMMM;\r\n    const months = GSDate.monthList(false, me.locale);\r\n    const list = months.map((v, i) => html`<option value=\"${i}\" selected=${ifDefined(current == v ? true : undefined)}>${v}</option>`);\r\n    //const list = GSDate.monthList(false, me.locale).map((v, i) => html`<option value=\"${i}\" ${current == v ? 'selected' : ''}>${v}</option>`);\r\n    return html`<select @change=\"${me.#onMonth}\" name=\"month\" class=\"month ${me.cssMonth}\" value=\"${months.indexOf(current)}\">${list}</select>`;\r\n  }\r\n\r\n  #yearHTML() {\r\n    const me = this;\r\n    return html`<input @change=\"${me.#onYear}\" name=\"year\" class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n  }\r\n\r\n  #onDay(e) {\r\n    GSEvents.prevent(e);\r\n    if (!e.target.classList.contains('day')) return;\r\n    this.day = GSUtil.asNum(e.target.dataset.day, this.day);\r\n  }\r\n\r\n  #onMonth(e) {\r\n    this.month = e.target.selectedIndex;\r\n  }\r\n\r\n  #onYear(e) {\r\n    this.year = e.target.value;\r\n  }\r\n\r\n  #onKey(e) {\r\n    console.log(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-calendar');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCardElement extends GSElement {\r\n\r\n  static styles = css`.card-header, .card-footer{ background-color: inherit; color: inherit;}`;\r\n\r\n  static properties = {\r\n\r\n    imageStyle: { type: Object, attribute: 'image-style', reflect : true },\r\n\r\n    overlay: { type: Boolean },\r\n    placement: { ...placement },\r\n    align: { ...placement },\r\n\r\n    image: {},\r\n    title: {},\r\n    subtitle: {},\r\n    text: {},\r\n    footer: {},\r\n    header: {},\r\n\r\n    colorText: { attribute: 'color-text' },\r\n    colorBack: { attribute: 'color-back' },\r\n    colorBorder: { attribute: 'color-border' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssSubtitle: { attribute: 'css-subtitle' },\r\n    cssText: { attribute: 'css-text' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssImage: { attribute: 'css-image' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.border = false;\r\n    this.shadow = false;\r\n    this.align = 'start';\r\n    this.placement = 'top';\r\n    this.imageStyle = this.imageStyle || {};\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const content =  me.isVertical ? me.#renderVertical() : me.#renderHorizontal();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"card ${classMap(me.renderClass())}\">${content}</div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return [me.#imageTop, me.#header, me.#body, me.#footer, me.#imageBottom];\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    const start = PlacementTypes.isBefore(me.placement);\r\n    const startClass = start ? 'col-4' : 'col-8';\r\n    const endClass = start ? 'col-8' : 'col-4';\r\n    const startHtml = start ? me.#images : me.#body;\r\n    const endHtml =  start ? me.#body : me.#images;\r\n    return html`<div class=\"row g-0\">\r\n        <div class=\"${startClass}\">\r\n            ${startHtml}\r\n        </div>\r\n        <div class=\"${endClass}\">\r\n          ${endHtml}\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      border: me.border || me.colorBorder,\r\n      [`text-${me.align}`]: me.align,\r\n      [`text-${me.colorText}`]: me.colorText,\r\n      [`bg-${me.colorBack}`]: me.colorBack,\r\n      [`border-${me.colorBorder}`]: me.colorBorder,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return PlacementTypes.isHorizontal(this.placement);\r\n  }\r\n\r\n  get #body() {\r\n    const me = this;\r\n    return html`<div class=\"${me.overlay ? 'card-img-overlay' : 'card-body'} ${me.cssBody}\">\r\n      <h5 class=\"card-title  ${me.cssTitle}\"><slot name=\"title\">${me.translate(me.title)}</slot></h5>\r\n      <h6 class=\"card-subtitle  ${me.cssSubtitle}\"><slot name=\"subtitle\">${me.translate(me.subtitle)}</slot></h6>\r\n      <p class=\"card-text ${me.cssText}\"><slot name=\"text\">${me.translate(me.text)}</slot></p>\r\n      <slot name=\"body\"></slot>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  get #header() {\r\n    return this.overlay ? '' : html`<div class=\"card-header  ${this.cssHeader}\"><slot name=\"header\">${this.header}</slot></div>`;\r\n  }\r\n\r\n  get #footer() {\r\n    return this.overlay ? '' : html`<div class=\"card-footer ${this.cssFooter}\"><slot name=\"footer\">${this.footer}</slot></div>`;\r\n  }\r\n\r\n  get #imageSlot() {\r\n    return html`<slot name=\"image\"></slot>`;\r\n  }\r\n\r\n  get #image() {\r\n    const me = this;\r\n    const css = me.isHorizontal ? 'img-fluid' : 'card-img';\r\n    me.dynamicStyle(me.#styleID, me.imageStyle);\r\n    return html`<img src=\"${me.image}\" class=\"rounded-${me.placement} ${css} ${me.cssImage} ${me.#styleID}\" alt=\"...\">`;\r\n  }\r\n\r\n  get #images() {\r\n    return this.image ? this.#image : this.#imageSlot;\r\n  }\r\n\r\n  get #imageTop() {\r\n    return this.placement === 'top' ? this.#images : '';\r\n  }\r\n\r\n  get #imageBottom() {\r\n    return this.placement === 'bottom' ? this.#images : '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-card');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSCenterElement extends GSElement {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n      class=\"position-absolute top-50 start-50 translate-middle ${classMap(me.renderClass())}\">\r\n    ${me.renderTemplate()}<slot></slot></div>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-center');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenuElement class\r\n * @module components/GSMenuElement\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSMenuElement extends GSElement {\r\n\r\n    static properties = {\r\n        storage: {},\r\n        auto: { type: Boolean, reflect: true },\r\n        opened: { type: Boolean, reflect: true },\r\n        dark: { type: Boolean },\r\n        reverse: { type: Boolean },\r\n        data: { type: Array },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {},\r\n        title: {},\r\n        header: {},\r\n        color: {},\r\n        icon: {},\r\n        url: { default: '#' }\r\n    }\r\n\r\n    #menuRef = createRef();\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.dynamicStyle(me.#styleID);\r\n        me.data = me.#proxify(me);\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        if (changed.has('opened') && !this.opened) {\r\n            this.#closeSubmenus();\r\n        }\r\n    }\r\n\r\n    updated() {\r\n        this.#updatePosition();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<ul \r\n            ${ref(me.#menuRef)}\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            class=\"dropdown-menu ${classMap(me.renderClass())}\"\r\n            data-gs-class=\"${me.#styleID}\"\r\n            data-menu=\"true\"\r\n            @mouseover=\"${me.#onMouseOver}\"\r\n            @mouseleave=\"${me.#onMouseLeave}\"\r\n            @keydown=\"${me.#onKeyDown}\"\r\n            @click=\"${me.#onClick}\">\r\n            ${me.#items(me.data)}\r\n        </ul>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'submenu': me.dataset.submenu,\r\n            'dropdown-menu-dark': me.dark,\r\n            [me.#styleID]: true,\r\n            'show': me.opened,\r\n            'dropend': !me.reverse,\r\n            'dropstart': me.reverse,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    /**\r\n     * Show at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {HTMLElement} caller\r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n\r\n        const me = this;\r\n        let target = caller;\r\n\r\n        if (GSEvents.isMouseOrPointerEvent(x)) {\r\n            const e = x;\r\n            target = e.target;\r\n            y = e.clientY;\r\n            x = e.clientX;\r\n            let offset = GSDOM.offsetParent(me);\r\n            offset = offset ? offset.getBoundingClientRect() : null;\r\n            x = x - (offset?.left || 0);\r\n            y = y - (offset?.top || 0);\r\n        }\r\n\r\n        const cfg = { clientX: x, clientY: y, target: target };\r\n\r\n        requestAnimationFrame(() => {\r\n            const style = {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                left: '0px',\r\n                translate: `${cfg.clientX}px ${cfg.clientY}px`\r\n            };\r\n            const rule = me.dynamicStyle(me.#styleID);\r\n            Object.assign(rule.style, style);\r\n        });\r\n        me.open();\r\n\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    #items(root) {\r\n        const me = this;\r\n        return root.map(el => me.#item(el));\r\n    }\r\n\r\n    #item(el) {\r\n        const me = this;\r\n        const isSub = el.items?.length > 0;\r\n        if (isSub) return me.#renderSubmenu(el);\r\n        if (!(el.header || el.name)) return me.#renderDivider();\r\n        return el.header ? me.#renderHeader(el) : me.#renderMenu(el);\r\n    }\r\n\r\n    #renderHeader(el) {\r\n        return html`<li data-inert=\"true\"><h6 class=\"dropdown-header\">${el.header}</h6></li>`;\r\n    }\r\n\r\n    #renderDivider() {\r\n        return html`<li data-inert=\"true\"><hr class=\"dropdown-divider\"></li>`;\r\n    }\r\n\r\n    #renderSubmenu(el) {\r\n        const me = this;\r\n        return html`<li>\r\n            <a class=\"dropdown-item dropdown-toggle\" data-toggle=\"true\" href=\"#\">\r\n                <div class=\"d-inline-block w-100\">${el.name}</div>\r\n            </a>\r\n            <gs-menu auto \r\n                .data=${el.items} \r\n                ?dark=${me.dark} \r\n                ?reverse=\"${me.reverse}\" \r\n                locale=\"${ifDefined(me.locale)}\" \r\n                data-submenu=\"true\">\r\n            </gs-menu>\r\n        </li>`;\r\n    }\r\n\r\n    #renderMenu(el) {\r\n        return html`<li>\r\n                <gs-button css=\"dropdown-item shadow-none\" \r\n                    ${dataset(el, false)}\r\n                    url=\"${el.url}\"\r\n                    title=\"${el.name}\" \r\n                    locale=\"${ifDefined(this.locale)}\" \r\n                    icon=\"${ifDefined(el.icon)}\" \r\n                    text=\"${ifDefined(el.color)}\"\r\n                    data-gs-target=\"${ifDefined(el.target || 'self')}\"\r\n                    data-gs-action=\"${ifDefined(el.action)}\">\r\n                </gs-button></li>`;\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSMenuElement.options));\r\n    }\r\n\r\n    #closeSubmenus(menu) {\r\n        GSDOM.queryAll(this.renderRoot, 'gs-menu', false, false)\r\n            .filter(el => el != menu)\r\n            .forEach(el => el.close());\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.key) {\r\n            case 'Escape':\r\n                me.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        submenu?.close();\r\n        if (me.auto) me.close();\r\n    }\r\n\r\n    #onMouseLeave(e) {\r\n        GSEvents.prevent(e);\r\n        if (this.auto) this.close();\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        me.#closeSubmenus(submenu);\r\n        submenu?.open();\r\n    }\r\n\r\n    #toSubmenu(e) {\r\n        const menuItem = e.target.closest('li');\r\n        return menuItem?.querySelector('gs-menu');\r\n    }\r\n\r\n    #updatePosition() {\r\n        const me = this;\r\n        if (!me.opened) return;\r\n        const rule = me.dynamicStyle(me.#styleID);\r\n        if (me.isSubmenu) {\r\n            const opt = { translate: `0px -25px` };\r\n            if (me.reverse) {\r\n                opt.left = 'inherited';\r\n                opt.right = '100%';\r\n            } else {\r\n                opt.right = 'inherited';\r\n                opt.left = '100%';\r\n            }\r\n            Object.assign(rule.style, opt);\r\n        } else {\r\n            rule.style.translate = null;\r\n            const rect = me.#menu.getBoundingClientRect();\r\n            const offset = window.innerWidth - rect.right;\r\n            me.reverse = offset - 5 < 0;\r\n            if (me.reverse) rule.style.translate = `${offset - 2}px`;\r\n        }\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.dataset.submenu;\r\n    }\r\n\r\n    get #menu() {\r\n        return this.#menuRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-menu');\r\n    }\r\n}\r\n","/*GSContextElement\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContextElement class\r\n * @module components/GSContextElement\r\n */\r\n\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSContextElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        target: {},\r\n        filter: {},\r\n        altContext: { type: Boolean },\r\n        disabled: { type: Boolean },\r\n    }\r\n\r\n    constructor() {\r\n        super();        \r\n        this.auto = true;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', me.close.bind(me));        \r\n        if (!me.slot) me.#attachTarget();\r\n    }\r\n    \r\n    onSlotInjected(slot) {\r\n        this.#attachTarget();\r\n    }\r\n\r\n    #attachTarget() {\r\n        const me = this;        \r\n        const owner = GSDOM.parent(me.assignedSlot || me);\r\n        let targets = me.target ? GSDOM.queryAll(owner, me.target) : [owner];\r\n        if (!targets.length) targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    }\r\n\r\n    #match(e) {\r\n        const me = this;\r\n        return e.composedPath().filter(el => el.matches)\r\n            .filter(el => el.matches(me.target || me.filter));\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        if (e.shiftKey && me.altContext) return;\r\n        const list = me.#match(e);\r\n        if (list.length === 0) return;\r\n        GSEvents.prevent(e);\r\n        me.popup(e);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show submenu at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n        return this.disabled ? false : super.popup(x, y, caller);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-context');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, notEmpty } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\nexport class GSCompareElement extends GSElement {\r\n\r\n  static styles = css`.slider {\r\n         --gs-position : 50%;\r\n          left : var(--gs-position);\r\n          width: 8px;\r\n          height: 100%;\r\n          border-width: 1px;\r\n          cursor: w-resize;\r\n          border-color: darkgray;\r\n          border-style: solid;\r\n          background-color: lightgray;\r\n      }\r\n      .clipper {\r\n        --gs-position : 50%;\r\n        clip-path: inset(0px var(--gs-position) 0px 0px);\r\n      }\r\n    `;\r\n\r\n  static properties = {\r\n    background: { ...color },\r\n    width: { type: Number },\r\n    height: { type: Number },\r\n    before: { hasChanged: notEmpty },\r\n    after: { hasChanged: notEmpty },\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  #elRef = createRef();\r\n  #clipRef = createRef();\r\n  #slideRef = createRef();\r\n\r\n  #mouseController;\r\n  #elPosition;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.width = 0;\r\n    me.height = 0;\r\n    me.dynamicStyle(me.#styleID);\r\n    me.#mouseController = new ElementMoveController(me);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#mouseController.attach(this.#splitter);\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n         dir=\"${ifDefined(me.direction)}\"\r\n         @loaded=\"${me.#onLoad}\" \r\n         @dblclick=\"${me.#onDoubleClick}\"\r\n         data-gs-class=\"${me.#styleID}\"\r\n         class=\"${classMap(me.renderClass())}\">\r\n      <div class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden\"><slot name=\"before\">${me.#before}</slot></div>\r\n      <div ${ref(me.#clipRef)} class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden clipper\"><slot name=\"after\">${me.#after}</slot></div>\r\n      <div ${ref(me.#slideRef)} class=\"slider position-absolute top-0><slot name=\"control\"></slot></div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      \"position-relative\": true,\r\n      \"user-select-none\": true,\r\n      \"d-contents\": me.isAuto,\r\n      \"h-100\": me.isAuto,\r\n      \"w-100\": me.isAuto,\r\n      \"overflow-hidden\": true,\r\n      [`bg-${me.background}`]: me.background,\r\n      [`${me.#styleID}`]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Handles resizing based on mouse move event\r\n   * @param {MouseEvent} e \r\n   */\r\n  onStartMove(e) {\r\n    this.#elPosition = this.#splitter.getBoundingClientRect();\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    const me = this;\r\n    const offset = me.#elPosition.left;\r\n    const width = me.#elPosition.width;\r\n    const pos = GSUtil.range(e.clientX - offset, 0, width);\r\n    const pct = (pos / width) * 100;\r\n    me.#update(pct);\r\n  }\r\n\r\n  get isAuto() {\r\n    return this.width == 0 || this.height == 0;\r\n  }\r\n\r\n  get isFixed() {\r\n    return !this.isAuto;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  get #before() {\r\n    return this.before ? html`<img @load=\"${this.#onLoad}\" src=\"${me.before}\"></img>` : '';\r\n  }\r\n\r\n  get #after() {\r\n    return this.after ? html`<img @load=\"${this.#onLoad}\" src=\"${me.after}\"></img>` : '';\r\n  }\r\n\r\n  get #isAuto() {\r\n    return this.width === 0 || this.height === 0;\r\n  }\r\n\r\n  get #splitter() {\r\n    return this.#elRef.value;\r\n  }\r\n\r\n  get #slider() {\r\n    return this.#slideRef.value;\r\n  }\r\n\r\n  get #clip() {\r\n    return this.#clipRef.value;\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const me = this;\r\n    if (me.#isAuto) {\r\n      const el = e.target;\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n    }\r\n  }\r\n\r\n  #onDoubleClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#update();\r\n    me.#mouseController.reset();\r\n  }\r\n\r\n  #update(pct = 50) {\r\n    const me = this;\r\n    me.#clip.style.setProperty('--gs-position', `${100 - pct}%`);\r\n    me.#slider.style.setProperty('--gs-position', `${pct}%`);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-compare');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\n\r\n/**\r\n * Helper component to enable controller attachment to the GS WebComponent.\r\n * It is used to simplify and separate templates from logic.\r\n */\r\nexport class GSControllerElement extends GSElement {\r\n\r\n  static properties = {\r\n    module: {},\r\n    controller: {},\r\n  }\r\n\r\n  #clazz = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  updated(changes) {\r\n    super.updated(changes);\r\n    const me = this;\r\n    if (me.isConnected && me.isValid) {\r\n      me.#initialize();\r\n    }\r\n  }\r\n\r\n  get isValid() {\r\n    return this.parentElement instanceof GSElement;\r\n  }\r\n\r\n  async #initialize() {\r\n\r\n    const me = this;\r\n    const host = me.parentElement;\r\n\r\n    if (me.#clazz) return;\r\n\r\n    let clazz = globalThis[me.controller];\r\n    if (!clazz && me.module) {\r\n      const url = GSLoader.normalizeURL(me.module);\r\n      const module = await import(url);\r\n      clazz = module[me.controller];\r\n    }\r\n\r\n    if (clazz) {\r\n      new clazz(host);\r\n      me.#clazz = clazz;\r\n      globalThis[me.controller] = clazz;\r\n    }\r\n\r\n  }\r\n\r\n  static {\r\n    this.define('gs-controller');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSCopyrightElement extends GSElement {\r\n\r\n  static properties = {\r\n    year: { reflect: true, type: Number },\r\n    company: { reflect: true },\r\n    url: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    if (!(me.isCompany && me.isYear)) return '';\r\n    const year = new Date().getFullYear();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"${classMap(me.renderClass())}\"><a target=\"_blank\" href=\"${me.url ? me.url : '#'}\"><small>&copy; ${me.company} ${me.year}. - ${year}.</small></a></div>`;\r\n  }\r\n\r\n  get isCompany() {\r\n    return GSUtil.isStringNonEmpty(this.company);\r\n  }\r\n\r\n  get isYear() {\r\n    return GSUtil.isStringNonEmpty(this.year);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-copyright');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSFunction } from '../base/GSFunction.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/verificator.mjs';\r\nimport { GSReadWriteRegistry } from '../data/ReadWriteRegistry.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for easier access to the GSReadWrite/GSTreeReader\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSDataHandler extends GSElement {\r\n\r\n    static properties = {\r\n        storage: { state: true },\r\n        src: { reflect: true },\r\n        action: { reflect: true },\r\n        mode: { reflect: true },\r\n        reader: { reflect: true },\r\n        writer: { reflect: true },\r\n        limit: { type: Number, reflect: true },\r\n        skip: { type: Number, reflect: true },\r\n        filter: { type: Array, reflect: true },\r\n        sort: { type: Array, reflect: true },\r\n        type: {},\r\n        autoload: { type: Boolean },\r\n        autorefresh: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    }\r\n\r\n    #iid = 0;\r\n    #config = null;\r\n    #handler = null;\r\n    #lifoReadRef = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        if (!me.id) throw new Error('Element ID is required attribute!');\r\n        GSItem.validate(me, me.tagName);\r\n        me.autorefresh = 0;\r\n        me.autoload = false;\r\n        me.flat = true;\r\n        me.filter = [];\r\n        me.sort = [];\r\n        me.limit = 0;\r\n        me.skip = 0;\r\n        me.type = 'remote';\r\n        me.mode = 'query';\r\n        me.reader = 'GET';\r\n        me.writer = 'POST';\r\n        me.storage = me.id;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#initLIFO();\r\n        me.#config = GSItem.proxify(me, GSData.PROPERTIES);\r\n        me.#handler = GSReadWriteRegistry.newHandler(me.type, me.id, false);\r\n        if (me.#config?.length > 0) me.#handler?.addProcessor(me);\r\n        me.#handler?.enable();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#handler?.disable();\r\n        this.#handler?.removeProcessor(this);\r\n        this.#lifoReadRef = null;\r\n        clearTimeout(this.#iid);\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.dataController?.read();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        const me = this;\r\n        me.#updateHandler();\r\n        if (changed.has('autorefresh')) me.schedule(me.autorefresh);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.formatSort(me.sort);\r\n        me.#handler.filter = me.formatFilter(me.filter);\r\n        if (me.autoload) me.read();\r\n    }\r\n\r\n    get isDebug() {\r\n        return this.dataset.gsDebug;\r\n    }\r\n\r\n    get handler() {\r\n        return this.#handler;\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    set search(val) {\r\n        if (this.#handler) this.#handler.search = val;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    formatFilter(val) {\r\n        val = this.#formated(val);\r\n        return Array.isArray(val) ? val : [];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    formatSort(val) {\r\n        val = this.#formated(val);\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort || [];\r\n    }\r\n\r\n    schedule(time = 0) {\r\n        const me = this;\r\n        time = GSUtil.asNum(time) * 1000;\r\n        clearInterval(me.#iid);\r\n        if (time > 0) me.#iid = setInterval(() => {\r\n            me.read(me);\r\n        }, time);\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data) {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        me.#handler?.write(me, data);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onDataRead(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data Read: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onDataWrite(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data write: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Process data after receive, before notifying \r\n     * @param {*} data \r\n     */\r\n    postRead(data) {\r\n        const me = this;\r\n        if (!Array.isArray(data)) data = [data];\r\n        data.forEach(r => {\r\n            me.#config.forEach(c => {\r\n                let val = r[c.name];\r\n                if (!GSUtil.isNull(val)) {\r\n                    val = GSData.format(c, val);\r\n                    r[c.name] = val;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onDataError(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data error: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #initLIFO() {\r\n        const me = this;\r\n        me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO();\r\n        return me.#lifoRead();\r\n    }\r\n\r\n    #lifoRead() {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        return me.#handler?.read(me);\r\n    }\r\n\r\n    #formated(val) {\r\n        return GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-data-handler');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSDialogElement extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n  static ALIGN = 'end';\r\n  static CANCEL = 'Cancel';\r\n  static CONFIRM = 'Ok';\r\n\r\n  static #STACK = [];\r\n\r\n  static styles = css`dialog{outline:none;}dialog::backdrop{backdrop-filter: blur(4px);}`;\r\n\r\n  static properties = {\r\n\r\n    standard: { reflect: true, type: Boolean },\r\n    opened: { reflect: true, type: Boolean },\r\n    cancelable: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    escapable: { reflect: true, type: Boolean },\r\n    disabled: { reflect: true, type: Boolean },\r\n\r\n\r\n    title: { reflect: true },\r\n    message: { reflect: true },\r\n    cancelText: { reflect: true, },\r\n    confirmText: { reflect: true, },\r\n\r\n    minWidth: { reflect: true, type: Number, attribute: 'min-width' },\r\n    buttonAlign: { reflect: true, attribute: 'button-align' },\r\n\r\n    iconCancel: { reflect: true, attribute: 'icon-cancel' },\r\n    iconConfirm: { reflect: true, attribute: 'icon-confirm' },\r\n\r\n    colorCancel: { attribute: 'color-cancel' },\r\n    colorConfirm: { attribute: 'color-confirm' },\r\n\r\n    cssCancel: { attribute: 'css-cancel' },\r\n    cssConfirm: { attribute: 'css-confirm' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssContent: { attribute: 'css-content' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #dialogRef = createRef();\r\n  #btnConfirmRef = createRef();\r\n  #btnCancelRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    const clazz = GSDialogElement;\r\n    me.opened = false;\r\n    me.standard = false;\r\n    me.cancelable = false;\r\n    me.closable = false;\r\n    me.escapable = false;\r\n    me.disabled = false;\r\n    me.shadow = false;\r\n    me.rounded = false;\r\n\r\n    me.minWidth = 0;\r\n    me.css = clazz.CSS;\r\n    me.cssTitle = clazz.TITLE_CSS;\r\n    me.cssHeader = clazz.HEADER_CSS;\r\n    me.buttonAlign = clazz.ALIGN;\r\n    me.cancelText = clazz.CANCEL;\r\n    me.confirmText = clazz.CONFIRM;\r\n    me.colorCancel = 'secondary';\r\n    me.colorConfirm = 'primary';\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialogElement.#updateStack();\r\n  }\r\n\r\n  updated(changed) {\r\n    super.updated(changed);\r\n    const me = this;\r\n    if (me.opened) {\r\n      GSDialogElement.#STACK.push(me);\r\n      if (me.standard) {\r\n        me.#dialog?.open();\r\n      } else {\r\n        me.#dialog?.showModal();\r\n      }\r\n      me.#focusable()?.focus();\r\n    } else {\r\n      GSDialogElement.#STACK.pop();\r\n      me.#dialog?.close();\r\n    }\r\n    me.notify();\r\n  }\r\n\r\n  #renderConfirm() {\r\n    const me = this;\r\n    if (!me.closable) return '';\r\n    return html`<gs-button  ${ref(me.#btnConfirmRef)} \r\n      @click=\"${me.#onConfirm.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconConfirm)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      .disabled=\"${me.disabled}\"  \r\n      css=\"${ifDefined(me.cssConfirm)}\" \r\n      color=\"${ifDefined(me.colorConfirm)}\" \r\n      title=\"${me.confirmText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderCancel() {\r\n    const me = this;\r\n    if (!me.cancelable) return '';\r\n    return html`<gs-button ${ref(me.#btnCancelRef)}\r\n      @click=\"${me.#onCancel.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconCancel)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      css=\"${ifDefined(me.cssCancel)}\" \r\n      color=\"${ifDefined(me.colorCancel)}\" \r\n      title=\"${me.cancelText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderFooter() {\r\n    const me = this;\r\n    const isFooter = me.cancelable || me.closable;\r\n    if (!isFooter) return '';\r\n    return html`<div class=\"card-footer d-flex user-select-none justify-content-${me.buttonAlign} ${me.cssFooter}\">\r\n      ${me.#renderCancel()} &nbsp;${me.#renderConfirm()}\r\n      </div>`;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const styles = { 'min-width': me.minWidth > 0 ? `${me.minWidth}px` : undefined };\r\n    me.dynamicStyle(me.#styleID, styles);\r\n    return html`\r\n        <dialog tabindex=\"-1\" ${ref(me.#dialogRef)} \r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @close=\"${me.#onCancel.bind(me)}\"\r\n            @cancel=\"${me.#onCancel.bind(me)}\"\r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @form=\"${me.#onForm.bind(me)}\"\r\n            @submit=\"${me.#onSubmit.bind(me)}\"\r\n            class=\"${classMap(me.renderClass())}\">\r\n            <div class=\"card ${me.cssContent}\">\r\n                <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n                  <div class=\"card-title ${me.cssTitle}\">\r\n                    <slot name=\"title\">${me.translate(me.title)}</slot>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body ${me.cssBody}\">\r\n                  <slot name=\"body\">\r\n                  ${me.translate(me.message)}\r\n                  ${me.renderTemplate()}\r\n                  </slot>\r\n                </div>\r\n                ${me.#renderFooter()}\r\n            </div>\r\n            <slot name=\"extra\"></slot>\r\n            <div class=\"toast-container position-fixed\"></slot></div>\r\n        </dialog>`\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'dialog': true,\r\n      'p-0': true,\r\n      'border-0': true,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.closable = closable;\r\n    me.cancelable = cancelable;\r\n    me.escapable = cancelable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('click-action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    return this.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    return this.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    index = GSUtil.asNum(index, 0);\r\n    const me = this;\r\n    me.forms.forEach(f => { f.reset(); f.values = data; });\r\n    const tab = me.tab;\r\n    if (tab && index > -1) tab.index = index;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  get form() {\r\n    return this.query('gs-form', true);\r\n  }\r\n\r\n  get forms() {\r\n    return this.queryAll('gs-form', true);\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('gs-tab', true);\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.#dialogRef.value;\r\n  }\r\n\r\n  get #btnConfirm() {\r\n    return this.#btnConfirmRef.value;\r\n  }\r\n\r\n  get #btnCancel() {\r\n    return this.#btnCancelRef.value;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  #focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#btnCancel;\r\n    if (me.closable) return me.#btnConfirm;\r\n    return me;\r\n  }\r\n\r\n  #onConfirm(e) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    //me.forms.forEach(form => form.submit());\r\n    const ret = me.forms.map(form => form.submit());\r\n    if (ret.indexOf(false) < 0) me.close();\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.close();\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle injected form events\r\n   * @param {*} e \r\n   */\r\n  #onForm(e) {\r\n    const me = this;\r\n    const data = e.detail;\r\n    switch (data.type) {\r\n      case 'submit':\r\n        const sts = me.emit('data', data.data, false, false, true);\r\n        if (!sts) GSEvents.prevent(e);\r\n        //me.opened = false;\r\n        break;\r\n      case 'valid':\r\n        me.disabled = data.data === false;\r\n        break;\r\n    }\r\n  }\r\n\r\n  #onSubmit(e) {\r\n    debugger;\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialogElement.#STACK = GSDialogElement.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  static get top() {\r\n    GSDialogElement.#updateStack();\r\n    const stack = GSDialogElement.#STACK;\r\n    if (stack.length === 0) return null;\r\n    return stack[stack.length - 1];\r\n  }\r\n\r\n  static {\r\n    this.define('gs-dialog');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, unsafeHTML, html, ifDefined } from '../lib.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSDrawerElement extends GSElement {\r\n\r\n  static properties = {\r\n    autoclose: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    backdrop: { reflect: true, type: Boolean },\r\n    expanded: { reflect: true, type: Boolean },\r\n    scroll: { reflect: true, type: Boolean },\r\n\r\n    min: { reflect: true, type: Number},\r\n    max: { reflect: true},\r\n    fingers: { reflect: true, type: Number},\r\n    placement: {...placement},\r\n    \r\n    transition: { reflect: true },\r\n    duration: { reflect: true, type: Number },\r\n\r\n    title: { reflect: true},\r\n\r\n    cssTitle: { reflect: true, attribute: \"css-title\"},\r\n    cssHead: { reflect: true, attribute: \"css-head\" },\r\n    cssBody: { reflect: true, attribute: \"css-body\" },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.placement = 'start';\r\n    me.cssTitle = 'fs-5';\r\n    me.transition = 'linear';\r\n    me.duration = 0.2;\r\n    me.min = 0;\r\n    me.max = 'auto';\r\n    me.fingers = 2;\r\n    me.on('mouseleave', me.#onLeave.bind(me));\r\n    me.on('mouseenter', me.#onEnter.bind(me));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`${unsafeHTML(me.#style)}\r\n    <div tabindex=\"-1\" dir=\"${ifDefined(me.direction)}\"\r\n     class=\"offcanvas overflow-hidden anime ${classMap(me.renderClass())}\">\r\n      ${me.#header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        ${me.renderTemplate()}\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>${me.#backdrop}`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': true,\r\n      'anime-open' : me.expanded,\r\n      'anime-close' : !me.expanded,\r\n      [`offcanvas-${me.placement}`]: me.placement,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #style() {\r\n    const me = this;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    return `<style>\r\n    .anime {\r\n      transition-property: ${pos} !important;\r\n      transition-duration: ${me.duration}s  !important;\r\n      transition-timing-function: ${me.transition} !important;\r\n    }\r\n    .anime-open {\r\n        ${pos} : ${me.max}${GSUtil.isNumber(me.max) ? 'px':''} !important;\r\n    }\r\n    .anime-close {\r\n      ${pos} : ${me.min}${GSUtil.isNumber(me.min) ? 'px':''} !important;\r\n    }    \r\n    </style>`;\r\n  }\r\n\r\n  get #backdrop() {\r\n    const me = this;\r\n    if (!me.backdrop) return '';\r\n    return html`<div class=\"offcanvas-backdrop fade ${me.expanded ? 'show' : 'invisible'}\" @click=\"${me.close}\"></div>`;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    return me.closable ? html`<button type=\"button\" class=\"btn-close text-reset\" @click=\"${me.close}\"></button>` : '';\r\n  }\r\n\r\n  get #title() {\r\n    const me = this;\r\n    return me.title ? html`<div class=\"offcanvas-title ${me.cssTitle}\">${me.translate(me.title)}</div>` : '';\r\n  }\r\n\r\n  get #header() {\r\n    const me = this;\r\n    return me.#hasHeader ? html`<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${me.#title}${me.#button}</slot></div>` : '';\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  get #hasHeader() {\r\n    return this.title || this.closable || this.#headSlot;\r\n  }\r\n\r\n  #notify(val) {\r\n    const me = this;\r\n    me.expanded = val == true;\r\n    me.notify();\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  open() {\r\n    this.#notify(true);\r\n  }\r\n\r\n  close() {\r\n    this.#notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.#notify(!this.expanded);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return !this.isVertical;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-drawer');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdownElement class\r\n * @module components/GSDropdownElement\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { cssMap } from '../directives/css-map.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDropdownElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        icon: {},\r\n        text: {...color},\r\n        color: {...color},\r\n        size: {},\r\n        title: {}\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"dropdown\"  dir=\"${ifDefined(me.direction)}\">\r\n                ${me.#renderButton()}\r\n                ${super.renderUI()}\r\n            </div>`;\r\n    }\r\n\r\n    #buttonClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'btn': true,\r\n            [`btn-${me.color}`] : me.color ? true : false,\r\n            'dropdown-toggle': true,\r\n            'shadow-none' : true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    #renderButton() {\r\n        const me = this;\r\n        return html`<gs-link css=\"${cssMap(me.#buttonClass())}\"\r\n            url=\"#\"         \r\n            icon=\"${ifDefined(me.icon)}\"\r\n            text=\"${ifDefined(me.text)}\"\r\n            size=\"${ifDefined(me.size)}\"\r\n            title=\"${ifDefined(me.title)}\"\r\n            @notify=\"${me.open}\">\r\n            </gs-link>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-dropdown');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { css, html, unsafeHTML } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Safe email rendering to protect from spam bots.\r\n */\r\nexport class GSEmailElement extends GSElement {\r\n\r\n  static shadowRootOptions = { mode: 'closed' }\r\n\r\n  static style = css`.e-mail:before {\r\n    content: attr(data-website) \"\\0040\" attr(data-user);\r\n    unicode-bidi: bidi-override;\r\n    direction: rtl;\r\n    }`;\r\n\r\n  static properties = {\r\n    user: { reflect: true },\r\n    domain: { reflect: true },\r\n    dev: { type: Boolean }\r\n  }\r\n\r\n  #user;\r\n  #domain;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  willUpdate(changes) {\r\n    super.willUpdate(changes);\r\n    this.#updateUser();\r\n    this.#updateDomain()\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${unsafeHTML(this.#style)}<a @click=\"${this.#onClick}\" class=\"e-mail\" data-user=\"${this.#user}\" data-website=\"${this.#domain}\"  href=\"mailto://\"></a>`;\r\n  }\r\n\r\n  get #style() {\r\n    return '<style>.e-mail:before { content: attr(data-website) \"\\u0040\" attr(data-user); unicode-bidi: bidi-override; direction: rtl; }</style>';\r\n  }\r\n\r\n  get #url() {\r\n    return `mailto://${GSUtil.reverse(this.dataset.user)}@${GSUtil.reverse(this.dataset.domain)}`;\r\n  }\r\n\r\n  #updateUser() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.user) {\r\n      me.#user = dataset.user || GSUtil.reverse(me.user);\r\n      if (me.dev) dataset.user = me.#user;\r\n      me.user = '';\r\n    }\r\n  }\r\n\r\n  #updateDomain() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.domain) {\r\n      me.#domain = dataset.domain || GSUtil.reverse(me.domain);\r\n      if (me.dev) dataset.domain = me.#domain;\r\n      me.domain = '';\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    window.location.href = me.#url;\r\n    //window.open(me.#url, '_blank');  \r\n  }\r\n\r\n  static {\r\n    this.define('gs-email');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSFormElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    disabled: { type: Boolean },\r\n    data: { type: Object },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<form ${ref(me.#formRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      @change=\"${me.#onChange}\"\r\n      @submit=\"${me.submit}\"\r\n      @reset=\"${me.reset}\"\r\n      method=\"dialog\">\r\n      <slot></slot>\r\n    </form>`;\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    this.dataController?.read();\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    if (changed.has('disabled')) {\r\n      if (me.disabled) {\r\n        me.disable();\r\n      } else {\r\n        me.enable();\r\n      }\r\n    }\r\n    if (changed.has('data')) {\r\n      me.asJSON = me.data;\r\n    }\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  get isValid() {\r\n    return this.elements\r\n      .filter(el => GSDOM.isVisible(el))\r\n      .map(el => el.checkValidity())\r\n      .filter(v => v === false).length === 0;\r\n  }\r\n\r\n  /**\r\n  * Overide native to pickup all form elements, including ones in shadow dom\r\n  */\r\n  get elements() {\r\n    return this.queryAll('input,select,output,textarea', true);\r\n  }\r\n\r\n  get fields() {\r\n    return this.elements;\r\n  }\r\n\r\n  get inputs() {\r\n    return this.elements;\r\n  }\r\n\r\n  get asJSON() {\r\n    return GSDOM.toObject(this);\r\n  }\r\n\r\n  set asJSON(data) {\r\n    const me = this;\r\n    GSDOM.fromObject(me, data);\r\n    return me.validate();\r\n  }\r\n\r\n  disable() {\r\n    GSDOM.disableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  enable() {\r\n    GSDOM.enableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.form.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    this.elements\r\n      .filter(el => GSDOM.isVisible(el))\r\n      .filter(el => !el.checkValidity())\r\n      .forEach(el => el.reportValidity() );\r\n    return this.form.reportValidity();\r\n  }\r\n\r\n  reset(e) {\r\n    const me = this;\r\n    const internal = e?.target === me.form;\r\n\r\n    if (internal) {\r\n      me.elements.forEach(el => el.value = el.defaultValue);\r\n      me.dataController?.read(me.asJSON);\r\n    } else {\r\n      me.data = {};\r\n      me.form.reset();\r\n    }\r\n  }\r\n\r\n  submit(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    if (!me.validate()) return;\r\n    const json = me.asJSON;\r\n    me.dataController?.write(json);\r\n    const data = { type: 'submit', data: json, source: e, owner : me};\r\n    return me.emit('form', data, true, true, true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataWrite(data) {\r\n\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  onFieldChange(el) {\r\n\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    const isValid = me.checkValidity() && me.isValid;\r\n    if (!isValid) me.reportValidity();\r\n    const data = { type: 'valid', data: isValid, owner : me};\r\n    me.emit('form', data, true, true);\r\n    return isValid;\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if (me.isBindable) me.handle(e);\r\n    if (me.validate()) me.onFieldChange(e.detail);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { inputType, numGT0, numGE0 } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSFormGroupElement extends GSElement {\r\n\r\n  static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2';\r\n  static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n  static CSS_ICON = 'text-primary me-2 fs-5';\r\n  static ICON = 'info-circle-fill';\r\n\r\n  static properties = {\r\n    icon: {},\r\n    layout: {},\r\n    placement: {},\r\n\r\n    description: {},\r\n    label: {},\r\n    placeholder: {},\r\n    pattern: {},\r\n    mask: {},\r\n\r\n    name: {},\r\n    type: { ...inputType },\r\n    list: {},\r\n    accept: {},\r\n\r\n    lang : {},\r\n    step: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    min: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    max: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    minLength: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    maxLength: { type: Number, reflect: true, hasChanged: numGT0 },\r\n\r\n    reverse: { type: Boolean },\r\n\r\n    autoid: { type: Boolean },\r\n    autocopy: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    autocapitalize: { type: Boolean, reflect: true },\r\n    autocomplete: { type: Boolean, reflect: true },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    checked: { type: Boolean, reflect: true },\r\n    multiple: { type: Boolean, reflect: true },\r\n    reveal: { type: Boolean, reflect: true },\r\n    readonly: { type: Boolean, reflect: true },\r\n    required: { type: Boolean, reflect: true },\r\n\r\n    cellField: { attribute: 'cell-field' },\r\n    cellLabel: { attribute: 'cell-label' },\r\n    cssLabel: { attribute: 'css-label' },\r\n    cssField: { attribute: 'css-field' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #inputRef = createRef();\r\n  #ouptutRef = createRef();\r\n  #patterns = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.#validateAllowed();\r\n    this.dynamicStyle(this.#styleID);\r\n    this.type = 'text';\r\n    this.placement = 'top';\r\n    this.layout = 'horizontal';\r\n    this.icon = GSFormGroupElement.ICON;\r\n    this.cssLabel = GSFormGroupElement.CSS_LABEL;\r\n    this.cellLabel = GSFormGroupElement.CSS_LABEL_CELL;\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#patterns = GSItem.collect(me)\r\n      .filter(el => el.dataset.pattern)\r\n      .map(el => new RegExp(el.dataset.pattern));\r\n    super.connectedCallback();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#onRange();\r\n    if (me.templateRef && !me.field)  {\r\n      const field = GSDOM.formElements(me.renderRoot).pop();\r\n      me.#inputRef.value = field;\r\n      if (field) {\r\n        field.name = this.name;\r\n        me.attachEvent(field, 'change', me.#onChange.bind(me));\r\n      } \r\n    }\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    switch (me.layout) {\r\n      case 'floating': return me.#renderFloating();\r\n      case 'vertical': return me.#renderVertical();\r\n      default: return me.#renderHorizontal();\r\n    }\r\n  }\r\n\r\n  #renderFloating() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n       <div class=\"form-floating ${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n          ${me.#renderLabel()}\r\n       </div>\r\n       ${me.#renderInfo()}\r\n    </div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n      <div class=\"col-12 text-md-start ${me.cellLabel}\">\r\n          ${me.#renderLabel()}\r\n      </div>\r\n       <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n       </div>\r\n       ${me.#renderInfo()}   \r\n    </div>      \r\n    `;\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row form-group ${classMap(me.renderClass())}\">    \r\n       <slot name=\"header\"></slot>\r\n       ${me.#renderLabelWrap()}\r\n       ${me.#renderField()}\r\n       ${me.#renderInfo()}\r\n       <slot name=\"footer\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderLabel() {\r\n    const me = this;\r\n    return html`<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.translate(me.label)}</label>`;\r\n  }\r\n\r\n  #renderLabelWrap() {\r\n    const me = this;\r\n    return html`<div class=\" text-md-end ${me.cellLabel}\">${me.#renderLabel()}</div>`;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.#isIcon ? html`<gs-icon size=\"5\" css=\"${GSFormGroupElement.CSS_ICON}}\" name=\"${me.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderTooltip() {\r\n    const me = this;\r\n    const tgt = me.#isIcon ? '@parent' : `[name='${me.name}']`;\r\n    return me.description ? html`<gs-tooltip local locale=\"${ifDefined(me.locale)}\" placement=\"${me.placement}\" title=\"${me.description}\" target=${ifDefined(tgt)}></gs-tooltip>` : '';\r\n  }\r\n\r\n  #renderInfo() {\r\n    const me = this;\r\n    const tooltip = me.#renderTooltip();\r\n    if (tooltip && me.#isIcon) return html`\r\n    <div class=\"col-auto\">\r\n       ${tooltip}\r\n       ${me.#renderIcon()}\r\n    </div>`;\r\n    return tooltip;\r\n  }\r\n\r\n  #renderField() {\r\n    const me = this;\r\n    return html`\r\n    <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n       <slot name=\"body\">${me.#renderInput()}${me.#renderOutput()}</slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderOutput() {\r\n    const me = this;\r\n    if (!me.isRange) return \"\";\r\n    return html`<span ${ref(me.#ouptutRef)} class=\"position-absolute px-1\">${me.value}</span>`;\r\n  }\r\n\r\n  #renderInput() {\r\n\r\n    const me = this;\r\n\r\n    const tpl = me.query('template') || me.template;\r\n    if (tpl) return me.renderTemplate();\r\n\r\n    const idattr = me.autoid ? me.name : undefined;\r\n    const val = me.isFieldset ? me.value.split(',') : me.value;\r\n\r\n    if (Array.isArray(val)) {\r\n      const wrap = me.dataset.radioLayout === 'vertical';\r\n      return val.map((it, i) => { return { v: it, id: `${me.name}_${i}` } })\r\n        .map((o, i) => me.#fieldSet(me.name + i, o.v, me.#inputHTML(o.id, me.name, o.v), wrap));\r\n    }\r\n\r\n    return me.#inputHTML(idattr, me.name, me.value);\r\n  }\r\n\r\n  #fieldSet(id, val, fld, vertical = false) {\r\n    const me = this;\r\n    return vertical ?\r\n      html`<div class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></div>`\r\n      :\r\n      html`<span class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></span>`;\r\n  }\r\n\r\n  #inputHTML(id, name, value) {\r\n    const me = this;\r\n    const type = me.isSwitch ? 'checkbox' : me.type;\r\n    \r\n    const style = {\r\n      transform : me.reverse && me.isRange ? 'rotateY(180deg)' : ''\r\n    }\r\n    me.dynamicStyle(me.#styleID, style);\r\n\r\n    return html`<input is=\"gs-ext-input\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n        \r\n            name=\"${name}\" \r\n            value=\"${value}\"\r\n            type=\"${type}\" \r\n    \r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            placeholder=\"${ifDefined(me.translate(me.placeholder))}\"\r\n            description=\"${ifDefined(me.translate(me.description))}\"\r\n\r\n            mask=\"${ifDefined(me.mask)}\"\r\n            pattern=\"${ifDefined(me.pattern)}\"\r\n            list=\"${ifDefined(me.list)}\"\r\n            accept=\"${ifDefined(me.accept)}\"\r\n             \r\n            step=\"${ifDefined(me.step)}\"\r\n            min=\"${ifDefined(me.min)}\"\r\n            max=\"${ifDefined(me.max)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n            \r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?autocomplete=\"${me.autocomplete}\"\r\n            ?multiple=\"${me.multiple}\"\r\n            ?checked=\"${me.checked}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"\r\n            ?reveal=\"${me.reveal}\"\r\n            >`;\r\n  }\r\n\r\n  get #cssField() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-input ms-0';\r\n    if (me.isRange) return 'form-range';\r\n    return 'form-control';\r\n  }\r\n\r\n  get #cssLabel() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-label';\r\n    if (me.isFloating) return 'ms-2';\r\n    return me.isVertical ? 'form-label' : '';\r\n  }\r\n\r\n  get #cssCheck() {\r\n    const me = this;\r\n    if (me.isCheckable) {\r\n      //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      if (me.isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n      return me.isFieldset ? '' : 'form-check';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get #cellField() {\r\n    const me = this;\r\n    const val = (me.isHorizontal) ? '6' : '11';\r\n    return me.cellField || `col-md-${val} col-sm-${val} col-xs-11`;\r\n  }\r\n\r\n  get #isIcon() {\r\n    return GSUtil.isStringNonEmpty(this.icon);\r\n  }\r\n\r\n  #onRange(e) {\r\n    const me = this;\r\n    if (me.isRange) {\r\n      const el = me.#ouptutRef.value;\r\n      if (el) el.innerHTML = me.field?.value || '';\r\n      me.field.title = me.field.value;\r\n    }\r\n    me.emit('input', e);\r\n  }\r\n\r\n  #onChange(e) {\r\n    this.emit('change', e, true);\r\n  }\r\n\r\n  async #onBlur(e) {\r\n\r\n    const me = this;\r\n    const el = me.field;\r\n\r\n    if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n    const isValid = me.checkValidity();\r\n    if (!isValid) {\r\n      me.reportValidity();\r\n      el.focus();\r\n      await GSUtil.timeout(2000);\r\n      el.setCustomValidity('');\r\n    }\r\n\r\n    me.emit('change', e);\r\n  }\r\n\r\n  #validateAllowed() {\r\n    const me = this;\r\n    const slots = ['header', 'body', 'footer'];\r\n    let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n    if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n    list = Array.from(me.children).filter(el => !el.slot);\r\n    const tagList = ['TEMPLATE', 'GS-ITEM'];\r\n    const allowed = GSDOM.isAllowed(list, tagList);\r\n    if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    const isValid = me.checkValidity();\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  checkValidity() {\r\n\r\n    const me = this;\r\n    const el = me.field;\r\n\r\n    let isValid = el.checkValidity();\r\n    for (const r of me.#patterns) {\r\n      isValid = r.test(el.value);\r\n      if (!isValid) break;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  reportValidity() {\r\n    const me = this;\r\n    const el = me.field;\r\n    const msg = me.#patterns.length > 0 ? 'Invalid input' : '';\r\n    el.setCustomValidity(msg);\r\n    return el.reportValidity();\r\n  }\r\n\r\n  get value() {\r\n    return this.field?.value;\r\n  }\r\n\r\n  set value(val) {\r\n    GSDOM.fromObject2Element(this.field, { [this.name]: val });\r\n    this.validate();\r\n  }\r\n\r\n  get isFloating() {\r\n    return this.layout === 'floating';\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.layout === 'horizontal';\r\n  }\r\n\r\n  get isVertical() {\r\n    return this.layout === 'vertical';\r\n  }\r\n\r\n  get isFieldset() {\r\n    const me = this;\r\n    return me.type === 'radio' && me.value?.includes(',');\r\n  }\r\n\r\n  get isCheckable() {\r\n    const me = this;\r\n    return me.isCheck || me.isRadio || me.isSwitch;\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.field.checked;\r\n  }\r\n\r\n  get isCheck() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get isRadio() {\r\n    return this.type === 'radio';\r\n  }\r\n\r\n  get isSwitch() {\r\n    return this.type === 'switch';\r\n  }\r\n\r\n  get isNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  get isRange() {\r\n    return this.type === 'range';\r\n  }\r\n\r\n  get isText() {\r\n    return this.type === 'text';\r\n  }\r\n\r\n  get isPassword() {\r\n    return this.type === 'passsword';\r\n  }\r\n\r\n  get isEmail() {\r\n    return this.type === 'email';\r\n  }\r\n\r\n  get isURL() {\r\n    return this.type === 'url';\r\n  }\r\n\r\n  get isFile() {\r\n    return this.type === 'file';\r\n  }\r\n\r\n  get field() {\r\n    return this.#inputRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref, repeat } from '../lib.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSFormGroupElement } from './FormGroup.mjs';\r\n\r\n/**\r\n * Component is responsible for auto-building gs-form and gs-form-group elements\r\n * from either JSON data or GS-ITEM elements.\r\n */\r\nexport class GSFormPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    formStorage: { attribute: 'form-storage' },\r\n    disabled: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.#proxify;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<gs-form ${ref(me.#formRef)}\r\n      ?disabled=${me.disabled} \r\n      storage=\"${ifDefined(me.formStorage)}\" \r\n      .locale=\"${me.locale}\"\r\n      .rtl=\"${me.rtl}\"\r\n      .css=\"${me.css}\"\r\n      .theme=\"${me.theme}\"\r\n      .margin=\"${me.margin}\"\r\n      .padding=\"${me.padding}\"\r\n      .border=\"${me.border}\"\r\n      .shadow=\"${me.shadow}\"\r\n      .os=\"${me.os}\"\r\n      .browser=\"${me.browser}\"\r\n      .environment=\"${me.environment}\"\r\n      .orientation=\"${me.orientation}\"\r\n      .protocol=\"${me.protocol}\">\r\n      <slot>\r\n        ${repeat(me.data, (r) => html`<gs-form-group .data=${r} locale=\"${ifDefined(me.locale)}\" ></gs-form-group>`)}\r\n      </slot>\r\n    </form>`;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  get #proxify() {\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, GSFormGroupElement.properties));\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGroupElement class\r\n * @module components/GSGroupElement\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { ElementNavigationController } from '../controllers/ElementNavigationController.mjs';\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\n\r\n/**\r\n * Renderer for grouped elements such as Buttons, Navs, Tabs and lists.\r\n * Components handles grouped elements navigation, selection and focus.\r\n * \r\n * @class\r\n * @extends { GSElement }\r\n */\r\nexport class GSGroupElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    circular: { type: Boolean },\r\n    multiple: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #elRef = createRef();\r\n  #controller;\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.initData();\r\n    this.#controller = new ElementNavigationController(this);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#controller.init();\r\n    this.#controller.attach(this.#elRef.value);\r\n    super.firstUpdated(changed);\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      ${me.renderWrappedUI()}\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedUI(name) {\r\n    const me = this;\r\n    return html`<div \r\n      class=\"${classMap(me.renderWrappedClass())}\">\r\n      <slot name=\"${ifDefined(name)}\">${me.renderItems()}</slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    return {};\r\n  }\r\n\r\n  renderItems() {\r\n    return '';\r\n  }\r\n\r\n  initData() {\r\n    return undefined;\r\n  }\r\n\r\n  previous() {\r\n    this.#controller.previous();\r\n  }\r\n\r\n  next() {\r\n    this.#controller.next();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    this.#controller.reset();\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  isNavigable(el) {\r\n    return true;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#controller.focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#controller.selected;\r\n  }\r\n\r\n  settings(el) {\r\n    const tagName = customElements.getName(el).toUpperCase() || 'GS-ITEM';\r\n    const cfg = GSElement.allProperties(el);\r\n    const items = Array.from(this.children).filter(e => e.tagName === tagName ).map(el => GSAttr.proxify(el, cfg));\r\n    const active = items.filter(el => el.active);\r\n    active.forEach((el, idx) => el.active = idx === 0);\r\n    return items;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-group');\r\n  }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGT0 } from '../properties/index.mjs';\r\nimport { color } from '../properties/color.mjs';\r\n\r\nexport class GSIconElement extends GSElement {\r\n\r\n  static styles = css`\r\n    :host {\r\n      --gs-icon-super-color : cornflowerblue;\r\n      --gs-icon-content : '';\r\n    }\r\n    i::after {\r\n      top: -8px;\r\n      font-size: 0.7em;\r\n      position: relative;\r\n      content: var(--gs-icon-content);\r\n      content: attr(data-super);\r\n      color: var(--gs-icon-super-color);\r\n    }`;\r\n\r\n  static properties = {\r\n    name: { reflect: true, hasChanged: notEmpty },\r\n    size: { reflect: true, type: Number, hasChanged: numGT0 },\r\n    color: { reflect: true, ...color },\r\n    superColor: { attribute : 'super-color'},\r\n    super: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    //this.flat = true;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.setCSSProperty(':host', '--gs-icon-super-color', me.superColor);\r\n    return html`<i class=\"bi ${classMap(me.renderClass())}\" data-super=\"${ifDefined(me.super)}\"></i>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      [`text-${me.color}`]: me.color,\r\n      [`bi-${me.name}`]: me.name,\r\n      'fs': me.size > 0,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-icon');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/index.mjs';\r\n\r\nexport class GSIndentElement extends GSElement {\r\n\r\n  static styles = css`.indent {\r\n      --gs-indent : 10px;\r\n      margin-left: var(--gs-indent);\r\n      margin-right: var(--gs-indent);\r\n    }`;\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    size: { type: Number, hasChanged: numGT0 },\r\n    multiplier: { type: Number, hasChanged: numGT0 }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.size = 1;\r\n    me.multiplier = 10;\r\n  }\r\n\r\n  renderUI() {\r\n    const size = this.size * this.multiplier;\r\n    return html`<span class=\"indent\" style=\"--gs-indent: ${size}px;\"></span>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-indent');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nconst numdef = { reflect: true, type: Number, hasChanged: numGE0 };\r\n\r\nexport class GSImageElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { hasChanged: notEmpty },\r\n    width: numdef,\r\n    height: numdef,\r\n    opacity: numdef,\r\n    invert: numdef,\r\n    grayscale: numdef,\r\n    brightness: numdef,\r\n    blur: numdef,\r\n    contrast: numdef,\r\n    saturate: numdef,\r\n    hue: numdef,\r\n    sepia: numdef,\r\n\r\n    alt: {},\r\n    loading: {}\r\n\r\n  }\r\n\r\n  #imageRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    this.#update();\r\n    return this.src;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<img ${ref(me.#imageRef)} \r\n            @load=\"${me.#onLoad}\"\r\n            src=\"${me.src}\" \r\n            alt=\"${me.alt}\" \r\n            loading=\"${ifDefined(me.loading)}\" \r\n            class=\"${me.#styleID}\" \r\n            data-gs-class=\"${me.#styleID}\">\r\n          </img>`;\r\n  }\r\n\r\n  get complete() {\r\n    return this.#imageRef.value?.complete || false;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  #renderStyle() {\r\n    const me = this;\r\n    const filter = me.#buildFilter();\r\n    const css = {\r\n      width: me.width > 0 ? me.width : undefined,\r\n      height: me.height > 0 ? me.height : undefined,\r\n      filter: filter.length > 0 ? filter.join(' ') : ''\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #buildFilter() {\r\n    const me = this;\r\n    const o = [];\r\n\r\n    if (me.blur > 0) o.push(`blur(${me.blur}px)`);\r\n    if (me.invert > 0) o.push(`invert(${me.invert})`);\r\n    if (me.opacity > 0) o.push(`opacity(${me.opacity})`);\r\n    if (me.contrast > 0) o.push(`contrast(${me.contrast})`);\r\n    if (me.grayscale > 0) o.push(`grayscale(${me.grayscale})`);\r\n    if (me.brightness > 0) o.push(`brightness(${me.brightness})`);\r\n\r\n    if (me.hue > 0) o.push(`hue-rotate(${me.hue}deg)`);\r\n    if (me.sepia > 0) o.push(`sepia(${me.sepia}%)`);\r\n    if (me.saturate > 0) o.push(`saturate(${me.saturate}%)`);\r\n\r\n    return o;\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.filter = me.#buildFilter().join(' ').trim();\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const el = e.target;\r\n    const me = this;\r\n    if (el) {\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n      me.emit('loaded', { width: el.width, height: el.height, element: el }, true);\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-image');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayoutElement\r\n */\r\n\r\nimport { classMap, html, ifDefined, templateContent } from '../lib.mjs';\r\nimport { orientation, OrientationTypes } from '../properties/orientation.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSLayoutElement extends GSElement {\r\n\r\n    static properties = {\r\n        type: { ...orientation }\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        id : {},\r\n        type: {},\r\n        min: { type: Number },\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        resizable: { type: Boolean },\r\n        autofit: { type: Boolean },\r\n        vPos: { attribute: 'h-pos' },\r\n        hPos: { attribute: 'v-pos' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.autofit = true;  \r\n        me.#items(me).map((el, idx, els) => me.#dyncss(el, idx, els, 0));\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if ( this.autofit && GSDOM.root(this) === document.body) document.body.classList.add('vh-100');\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const list = me.#items(me).map((el, idx, els) => me.#build(el, idx, els));\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"d-flex flex-fill w-100 h-100 ${classMap(me.renderClass())}\">${list}</div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const horizontal = OrientationTypes.isHorizontal(me.type);\r\n        return {\r\n            ...super.renderClass(),\r\n            'flex-column': horizontal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #items(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSLayoutElement.options));\r\n    }\r\n\r\n    #resizable(el) {\r\n        return el.size > 0 || el.min > 0 || el.max > 0 || el.resizable;\r\n    }\r\n\r\n    #dyncss(el, idx, els, lev = 0) {\r\n        const me = this;\r\n        me.#items(el.self).map((it, idx, items) => me.#dyncss(it, idx, items, lev+1));\r\n        if(me.#resizable(el)) me.dynamicStyle(`gsd-${lev}-${idx}`);\r\n    }\r\n\r\n    #build(el, idx, els, lev = 0) {\r\n\r\n        const me = this;\r\n        const type = el.self.parentElement.type || 'vertical';\r\n\r\n        const list = me.#items(el.self).map((it, idx, items) => me.#build(it, idx, items, lev+1));\r\n        \r\n        const min = el.min;\r\n        const max = el.max;\r\n        const template = el.template;\r\n        const tplEl = me.#elementTemplate(el);\r\n\r\n        const tc = `#${tplEl?.id}` !== template;\r\n\r\n        const dir = el.type || type || 'vertical';\r\n        const horizontal = OrientationTypes.isHorizontal(dir);\r\n        \r\n        const col = list.length > 0 && horizontal ? 'flex-column' : '';\r\n\r\n        const did = `gsd-${lev}-${idx}`;\r\n        const css = me.#panelCSS(el, col, did);\r\n        const style = me.#panelStyle(el, horizontal);\r\n        me.dynamicStyle(did, style);\r\n\r\n        const slot = el.name ? html`<slot name=\"${el.name}\"></slot>` : '';\r\n        const src = html`<div id=\"${ifDefined(el.id)}\" class=\"d-flex ${classMap(css)}\">\r\n            ${list}\r\n            ${templateContent(tplEl)}\r\n            ${template && tc ? html`<gs-template flat src=\"${template}\"></gs-template>` : ''}\r\n            ${slot}\r\n            </div>`;\r\n\r\n        if (!el.resizable) return src;\r\n\r\n        const resize = (idx === els.length - 1) ? 'end' : 'start';\r\n        const splitter = me.#splitter(min, max, type, resize);\r\n\r\n        if (idx === els.length - 1) return [splitter , src];\r\n        return [src, splitter];\r\n    }\r\n    \r\n    #elementTemplate(el) {\r\n        const tplEl = el.self.firstElementChild;\r\n        return tplEl instanceof HTMLTemplateElement ? tplEl : undefined;\r\n    }\r\n\r\n    #panelCSS(el, col, did) {\r\n\r\n        const resizable = this.#resizable(el);\r\n        const grow = resizable ? '' : 'flex-grow-1';\r\n\r\n        let vpos = el.vPos;\r\n        let hpos = el.hPos;\r\n\r\n        hpos = hpos ? `align-items-${hpos}` : '';\r\n        vpos = vpos ? `justify-content-${vpos}` : '';\r\n\r\n        const css = this.mapCSS(el.css, {\r\n            [did] : resizable,\r\n            [col] : col,\r\n            [grow] : grow,\r\n            [hpos] : hpos,\r\n            [vpos] : vpos\r\n        });\r\n    \r\n        return css;        \r\n    }\r\n\r\n    #panelStyle(el, horizontal) {\r\n        const min = el.size || el.min;\r\n        const max = el.max || el.size;\r\n        const style = {};\r\n        if (horizontal) {\r\n            style['min-height'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-height'] = max > 0 ? `${max}px` : undefined;\r\n        } else {\r\n            style['min-width'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-width'] = max > 0 ? `${max}px` : undefined;\r\n        }\r\n        return style;        \r\n    }\r\n\r\n    #splitter(min, max, dir, resize) {\r\n        return html`<gs-splitter split=\"${dir}\" resize=\"${resize}\" min=\"${min}\" max=\"${max}\"></gs-splitter>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-layout');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSLinklement extends GSElement {\r\n\r\n  static properties = {\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    size: { type: Number },\r\n    text: { ...color },\r\n    color: { ...color },\r\n    url: {},\r\n    ping: {},\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    target: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.url = '#';\r\n    // this.text = 'primary'; // do not set as default -> gs-dropdown\r\n    // this.target = '_blank'; // not used \r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n      <a ${ref(me.#refEl)}  \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        title=\"${ifDefined(me.translate(me.tooltip))}\" \r\n        href=\"${ifDefined(me.url)}\" \r\n        ping=\"${ifDefined(me.ping)}\" \r\n        target=\"${ifDefined(me.target)}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        ?disabled=${me.disabled} \r\n        @click=\"${me.#onClick}\">\r\n        ${me.#first}${me.#second}\r\n        </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,      \r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [`text-${me.text}`]: me.text,\r\n      [`bg-${me.color}`]: me.color\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.notify();\r\n    if (me.url === '#' || GSUtil.isStringEmpty(me.url)) {\r\n      GSEvents.prevent(e);\r\n      me.handle(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#icon; };\r\n\r\n  get #second() { return this.rtl ? this.#icon : this.#title; };\r\n\r\n  get #icon() { return this.icon ? html`<gs-icon css=\"mx-1\" name=\"${this.icon}\" size=\"${this.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  /**\r\n   * Generate clickable link\r\n   * @param {*} options \r\n   * @param {*} css \r\n   * @param {*} before \r\n   * @param {*} after \r\n   * @returns \r\n   */\r\n  static generate(options, css, before, after) {\r\n    const opt = options;\r\n    return html`<a class=\"${classMap(css)}\"\r\n        tabindex=\"0\"    \r\n        ${dataset(opt, true)}\r\n        part=\"${ifDefined(opt.part)}\"\r\n        tooltip=\"${ifDefined(opt.tooltip)}\"\r\n        href=\"${ifDefined(opt.url)}\">        \r\n        ${before || ''}\r\n        <slot>${opt.title}</slot> \r\n        ${after || ''}\r\n    </a>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-link');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSListItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    size: { type: Number },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    selectable: { type: Boolean, reflect: true },\r\n    generated: { state: true, type: Boolean }\r\n  }\r\n\r\n  #initial;\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.binded();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.#initial = this.active;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-LIST';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<a  tabindex=\"0\" ${ref(me.#refEl)}\r\n       href=\"${ifDefined(me.url)}\" \r\n       target=\"${ifDefined(me.target)}\" \r\n       class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()} \r\n        ${me.#renderSecond()}\r\n        <slot>${me.renderTemplate()}</slot>\r\n      </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.#itemCSS] : true,\r\n      'active': me.active\r\n    }\r\n    return me.mapCSS(me.#itemStatusCSS, css);\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.icon ? html`<gs-icon name=\"${me.icon}\" size=\"${me.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderText() {\r\n    return this.title ? html`<span>${this.translate(this.title)}</span>` : html`<slot name=\"title\"></slot>`;\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.rtl ? this.#renderText() : this.#renderIcon();\r\n  }\r\n\r\n  #renderSecond() {\r\n    return this.rtl ? this.#renderIcon() : this.#renderText();\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || this.#initial || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get owner() {\r\n    return (this.hasAttribute('generated') ? GSDOM.component(this) : this.parentElement);\r\n  }\r\n  \r\n  get #activeCSS() {\r\n    return this.owner.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #inactiveCSS() {\r\n    return this.owner.dataset?.cssInactive || '';\r\n  }\r\n\r\n  get #itemCSS() {\r\n    return this.owner.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #itemStatusCSS() {\r\n    return this.active ? this.#activeCSS : this.#inactiveCSS;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { GSListItemElement } from './ListItem.mjs';\r\n\r\nexport class GSListElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    selectable: { reflect: true, type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = false;\r\n    this.multiple = false;\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSListItemElement);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-list-item');\r\n  }\r\n\r\n  renderClass() {\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group': true,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    return html`<slot>${this.renderItems()}</slot>`;\r\n  }\r\n\r\n  reset() {\r\n    this.items.forEach(el => el.reset());\r\n    this.notify();\r\n  }\r\n\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-list-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .selectable=\"${o.selectable === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-list-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-LIST-ITEM';\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-list-item');\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { NavTypes, PlacementTypes } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSNavItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    disabled: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    active: { type: Boolean, reflect: true },\r\n    generated: { state: true, type : Boolean }\r\n  }\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-NAV';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div class=\"nav-item ${classMap(me.renderClass())}\">${me.#button}</div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    return this.mapCSS(this.#itemsCSS, super.renderClass());\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get isNav() {\r\n    return true;\r\n  }\r\n\r\n  get vertical() {\r\n    return this.parentElement.vertical || false;\r\n  }\r\n\r\n  get placement() {\r\n    return this.parentElement.placement;\r\n  }\r\n\r\n  get owner() {\r\n    return (this.hasAttribute('generated') ? GSDOM.component(this) : this.parentElement);\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #title() {\r\n    return html`<slot>${this.translate(this.title)}</slot>`;\r\n  }\r\n\r\n  get #icon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  get #first() {\r\n    return this.rtl ? this.#title : this.#icon;\r\n  }\r\n\r\n  get #second() {\r\n    return this.rtl ? this.#icon : this.#title;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#buttonCSS, {});\r\n    if (me.active) obj = me.mapCSS(me.#buildCSS + ' ' + me.#activeCSS, obj);\r\n    return html`<a tabindex=\"0\" type=\"button\" role=\"nav\" \r\n     ${ref(me.#refEl)}\r\n     class=\"nav-link ${classMap(obj)}\"\r\n     href=\"${ifDefined(me.url)}\" \r\n     target=\"${ifDefined(me.target)}\">\r\n        ${me.#first} \r\n        ${me.#second}\r\n      </a>`;\r\n  }\r\n\r\n  get #itemsCSS() {\r\n    return this.owner.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #buttonCSS() {\r\n    return this.owner.dataset?.cssButton || '';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.owner.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #navType() {\r\n    return NavTypes.indexOf(this.owner.type);\r\n  }\r\n\r\n  // fiix for shadowed DOM, parent class=\"nav nav-pills..\" \r\n  // do not cross shadow dom, so item elements does not see CSS\r\n  // we have to simulate\r\n  get #buildCSS() {\r\n    const isVertical = this.vertical;\r\n    const isBefore = PlacementTypes.isBefore(this.placement);\r\n    switch (this.#navType) {\r\n      // pills\r\n      case 1: return 'rounded text-bg-primary';\r\n      // tabs\r\n      case 2:\r\n        if (isVertical) {\r\n          if (isBefore) {\r\n            return 'shadow-none border border-end-0';\r\n          } else {\r\n            return 'shadow-none border border-start-0';\r\n          }\r\n        }\r\n        return 'shadow-none border border-bottom-0';\r\n      // underline\r\n      case 3: return 'shadow-none border-bottom border-3 fw-medium';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { GSNavItemElement } from './NavItem.mjs';\r\nimport { PlacementTypes, nav, placement } from '../properties/index.mjs';\r\n\r\nexport class GSNavElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    type: nav,\r\n    placement: placement,\r\n    vertical: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = true;\r\n    this.multiple = false;\r\n    this.type = 'pills';\r\n    this.placement = 'start';\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSNavItemElement);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-nav-item');\r\n  }\r\n  \r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const isBefore = PlacementTypes.isBefore(me.placement);\r\n    const isTab = me.type === 'tabs';\r\n    const css = {\r\n      'nav': true,\r\n      [`nav-${me.type}`]: me.type,\r\n      'flex-column': me.vertical,\r\n      'border-bottom-0': me.vertical,\r\n      'border-end': isTab && isBefore && me.vertical,\r\n      'border-start': isTab && !isBefore && me.vertical,\r\n      [`justify-content-${me.placement}`]: !me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Render items based on data propprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-nav-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-nav-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-NAV-ITEM';\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  onFocused(el) {\r\n    // el?.click();\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { svg, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSOverlayElement extends GSElement {\r\n\r\n    static properties = {\r\n        color: {},\r\n        target: {},\r\n        autoremove: { type: Boolean },\r\n        opened: { type: Boolean },\r\n        opacity: { type: Number },\r\n        padding: { type: Number },\r\n        radius: { type: Number },\r\n    }\r\n\r\n    #styleID = GSID.id;\r\n    #styleID2 = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        //this.color = 'rgb(0,0,0)';\r\n        this.color = '#000';\r\n        this.opacity = 0.7;\r\n        this.padding = 1;\r\n        this.radius = 6;\r\n        this.dynamicStyle(this.#styleID);\r\n        this.dynamicStyle(this.#styleID2);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', () => me.requestUpdate());\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        if (!me.opened) return '';\r\n        const path = me.#path;\r\n        return path ? html`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlspce=\"preserve\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\" preserveAspectRatio=\"xMinYMin slice\"\r\n            viewvbox=\"0 0 ${window.innerWidth} ${window.innerHeight}\"\r\n            class=\"gs-overlay gs-overlay-animated ${me.#styleID}\"\r\n            @click=\"${me.reset.bind(me)}\">\r\n            ${path}\r\n        </svg>` : '';\r\n    }\r\n\r\n    async firstUpdated(changed) {\r\n        const me = this;\r\n        const opt = {\r\n            fillRule: \"evenodd\",\r\n            clipRule: \"evenodd\",\r\n            strokeLinejoin: \"round\",\r\n            strokeMiterlimit: \"2\",\r\n            zIndex: \"10000\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    get #path() {\r\n        const me = this;\r\n        const el = GSDOM.query(me.target);\r\n        if (!me.target) return '';\r\n        const pathStr = me.#createSVGPathString(el);\r\n        const opt = { fill: me.color, opacity: me.opacity, pointerEvents: 'auto', cursor: 'auto' };\r\n        me.dynamicStyle(me.#styleID2, opt);\r\n        return svg`<path class=\"${me.#styleID2}\"  d=\"${pathStr}\"></path>`;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n\r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n\r\n        const rect = target.getBoundingClientRect();\r\n\r\n        const padding = me.padding;\r\n        const radius = me.radius;\r\n\r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n\r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n\r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n\r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n\r\n        const val = `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n            M${highlightBoxX},${highlightBoxY} \r\n            h${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n            v${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n            h-${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n            v-${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;\r\n        return val.replace(/[\\t\\n]/g, ' ');\r\n    }\r\n\r\n    static {\r\n        this.define('gs-overlay');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, map, range, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { size, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSPagerElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    size: { ...size },\r\n    first: { type: Boolean },\r\n    last: { type: Boolean },\r\n    next: { type: Boolean },\r\n    previous: { type: Boolean },\r\n    pages: { type: Number },\r\n\r\n    labelFirst: { attribute: 'label-first' },\r\n    labelLast: { attribute: 'label-last' },\r\n    labelNext: { attribute: 'label-next' },\r\n    labelPrevious: { attribute: 'label-previous' },\r\n\r\n    cssItem: { attribute: 'css-item' },\r\n\r\n  }\r\n\r\n  #ref = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.pages = 5;\r\n    this.labelFirst = '&laquo;';\r\n    this.labelLast = '&raquo;';\r\n    this.labelNext = '&rsaquo;';\r\n    this.labelPrevious = '&lsaquo;';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const half = Math.floor((me.pages - 1) / 2);\r\n    const page = me.dataController?.page || 0;\r\n    const start = page - half < 1 ? 1 : page - half;\r\n    const end = page > 0 ? page + half : me.pages;\r\n\r\n    return html`<nav \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        @click=\"${me.#onClick}\"\r\n        @keyup=\"${me.#onKeyUp}\"\r\n        @keydown=\"${me.#onKeyDown}\">\r\n        <ul ${ref(me.#ref)} class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()}\r\n        ${me.#renderPrevious()}\r\n        ${map(range(start, end + 1), (i) => me.#renderItem(i, '', '', i  === page))}\r\n        ${me.#renderNext()}\r\n        ${me.#renderLast()}\r\n        </ul></nav>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = me.size ? SizeTypes[me.size] || me.size : '';\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'pagination': true,\r\n      [`pagination-${size}`]: size,\r\n\r\n    }\r\n    return css;\r\n  }\r\n\r\n  updated() {\r\n    const target = this.#ref.value;\r\n    if (target && this.isFocused) {\r\n      target.querySelector('.active > a')?.focus();\r\n    }\r\n  }\r\n\r\n  onDataRead() {\r\n    this.requestUpdate();\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.first ? this.#renderItem(this.labelFirst, 'first', 'First page') : '';\r\n  }\r\n\r\n  #renderLast() {\r\n    return this.last ? this.#renderItem(this.labelLast, 'last', 'Last page') : '';\r\n  }\r\n\r\n  #renderPrevious() {\r\n    return this.previous ? this.#renderItem(this.labelPrevious, 'previous', 'Previous page') : '';\r\n  }\r\n\r\n  #renderNext() {\r\n    return this.next ? this.#renderItem(this.labelNext, 'next', 'Next page') : '';\r\n  }\r\n\r\n  #renderItem(text = '', name = '', title = '', active = false) {\r\n    const me = this;\r\n    text = GSUtil.decodeHTMLEntities(text);\r\n    return html`<li class=\"page-item ${active ? 'active' : ''}\">\r\n              <a class=\"page-link ${this.cssItem}\" \r\n                 name=\"${name}\" \r\n                 title=\"${me.translate(title)}\" \r\n                 href=\"#\">${me.translate(text)}</a>\r\n            </li>`;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const el = this.#toTarget(e, 'a');\r\n    if (!el) return;\r\n\r\n    const ctrl = me.dataController;\r\n    if (!ctrl) return;\r\n\r\n    const val = el.name || el.text;\r\n    me.emit(val, el);\r\n    \r\n    switch (val) {\r\n      case 'first':\r\n        return ctrl.firstPage();\r\n      case 'last':\r\n        return ctrl.lastPage();\r\n      case 'next':\r\n        return ctrl.nextPage();\r\n      case 'previous':\r\n        return ctrl.prevPage();\r\n    }\r\n\r\n    ctrl.page = val;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const current = this.#toTarget(e, 'li');\r\n    let el = null;\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        el = current?.previousElementSibling;\r\n        break;\r\n      case 'ArrowRight':\r\n        el = current?.nextElementSibling;\r\n        break;\r\n    }\r\n    el = el?.querySelector('a');\r\n    el?.focus();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') {\r\n      this.#toTarget(e, 'a')?.click();\r\n    }\r\n  }\r\n\r\n  #toTarget(e, name) {\r\n    const el = e.target.closest(name) || e.target;\r\n    return el.tagName === name.toUpperCase() ? el : undefined;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-pagination');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, position } from '../properties/index.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSPopper } from \"../base/GSPopper.mjs\";\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopupElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    position: { ...position },\r\n    trigger: {},\r\n    target: {},\r\n    autoclose: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    opened: { type: Boolean },\r\n    hPos: { type: Number, attribute: 'h-pos' },\r\n    vPos: { type: Number, attribute: 'v-pos' },\r\n    wMin: { type: Number, attribute: 'w-min' },\r\n    wMax: { type: Number, attribute: 'w-max' },\r\n    hMin: { type: Number, attribute: 'h-min' },\r\n    hMax: { type: Number, attribute: 'h-max' },\r\n\r\n  }\r\n\r\n  #caller = null;\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.autofocus = true;\r\n    this.autoclose = true;\r\n    this.trigger = 'click';\r\n    this.position = 'absolute';\r\n    this.placement = 'bottom';\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachTaraget();\r\n    me.attachEvent(window, 'resize', me.close.bind(me));\r\n    me.on('mouseleave', me.#onAuto.bind(me));\r\n  }\r\n\r\n  firstUpdated(changedProperties) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#resize();\r\n      me.#reposition();\r\n    });\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#reposition();\r\n    if (me.autofocus) me.focus();\r\n    me.notify();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div \r\n      ${ref(me.#panelRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"fade ${classMap(me.renderClass())}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      @keydown=\"${me.#onKeyDown}\">\r\n      ${me.renderTemplate()}\r\n      <slot></slot>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': me.opened,\r\n      //'d-none' : !me.opened,\r\n      [me.#styleID]: true,\r\n      [`position-${me.position}`]: me.position,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  focus() {\r\n    this.query('[tabindex], input, select, textarea, button, a', true)?.focus();\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Show popup at x/y position on the screen\r\n   * @param {Number} x \r\n   * @param {Number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const obj = {\r\n      top: '0px',\r\n      left: '0px',\r\n      translate: `${x}px ${y}px`\r\n    };\r\n    me.#resize(obj);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      case 'Escape':\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    //if (!me.opened) return;\r\n    if (me.vPos || me.hPos) {\r\n      const opt = {\r\n        top: '0px',\r\n        left: '0px',\r\n        translate: `${me.hPos}px ${me.vPos}px`\r\n      };\r\n      const rule = me.dynamicStyle(me.#styleID);\r\n      Object.assign(rule.style, opt);\r\n    } else if (me.target) {\r\n      let target = GSDOM.query(document.documentElement, me.target);\r\n      target = target.renderRoot?.firstElementChild || target;\r\n      GSPopper.popupFixed(me.placement, me.#panel, target);\r\n    }\r\n\r\n  }\r\n\r\n  #resize(obj = {}) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n    if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n    if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n    if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n    Object.assign(rule.style, obj);\r\n  }\r\n\r\n  #onPopup(e) {\r\n    const me = this;\r\n    me.#caller = e;\r\n    if (e instanceof Event) {\r\n      GSEvents.prevent(e);\r\n      me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n    }\r\n\r\n    if (me.placement) {\r\n      GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n      me.opened = true;\r\n      return;\r\n    }\r\n\r\n    let x = e.clientX, y = e.clientY;\r\n    const rect = me.#panel.getBoundingClientRect();\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #attachTaraget() {\r\n    const me = this;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    me.trigger.split(' ').forEach(evt => {\r\n      targets.forEach(target => me.attachEvent(target, evt, me.#onPopup.bind(me)));\r\n    });\r\n  }\r\n\r\n  #onAuto(e) {\r\n    if (this.autoclose) this.close();\r\n  }\r\n\r\n  get #panel() {\r\n    return this.#panelRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-popup');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, classMap, ifDefined } from '../lib.mjs';\r\nimport { literalTemplate } from '../directives/literal.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSProgressElement extends GSElement {\r\n\r\n  static properties = {\r\n    min: { reflect: true, type: Number },\r\n    max: { reflect: true, type: Number },\r\n    step: { reflect: true, type: Number },\r\n    value: { reflect: true, type: Number },\r\n    label: { reflect: true }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.min = 0;\r\n    this.step = 1;\r\n    this.max = 100;\r\n    this.value = 0;\r\n    this.styles = { width: '0%' };\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'progress-bar' : true,\r\n      [me.#styleID] : true\r\n    }\r\n    return css;\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#updateStyle();\r\n    const obj = {min :me.min, max:me.max, step:me.step, value:me.value, percentage:me.percentage};\r\n    return html`\r\n    <div class=\"progress\" @keydown=\"${me.#onKeySelect}\" dir=\"${ifDefined(me.direction)}\">\r\n        <div class=\"${classMap(me.renderClass())}\" \r\n             \r\n             role=\"progressbar\"\r\n             tabindex=\"0\">\r\n             ${literalTemplate(me.label, obj)}\r\n        </div>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    if (changed.has('value')) {\r\n      let val = me.step + changed.get('value');\r\n      val = me.#update(val, val);\r\n      changed.set('value', val);\r\n    }\r\n  }\r\n\r\n  updated(changed) {\r\n    if (changed.has('value')) {\r\n      this.notify();\r\n    }\r\n  }\r\n\r\n  increase(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value + val, me.value);\r\n    return true;\r\n  }\r\n\r\n  decrease(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value - val, me.value);\r\n    return true;\r\n  }\r\n\r\n  get percentage() {\r\n    const me = this;\r\n    return Math.trunc((me.value / me.max) * 100);\r\n  }\r\n\r\n  #updateStyle() {\r\n    const me = this;\r\n    me.styles.width = `${me.percentage}%`;\r\n    me.dynamicStyle(me.#styleID, me.styles);\r\n  }\r\n\r\n  #update(val, old = 0) {\r\n    val = GSUtil.asNum(val, GSUtil.asNum(old));\r\n    const me = this;\r\n    if (val > me.max) val = me.max;\r\n    if (val < me.min) val = me.min;\r\n    return val;\r\n  }\r\n\r\n  #onKeySelect(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp' :\r\n      case 'ArrowRight' :\r\n          return me.increase();\r\n      case 'ArrowLeft' :\r\n      case 'ArrowDown' :\r\n         return me.decrease();\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-progress');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\n\r\nexport class GSSpinnerElement extends GSElement {\r\n\r\n    static styles = css`.spinner-border { border: var(--bs-spinner-border-width) solid currentcolor; border-right-color: transparent; }`;\r\n\r\n    static properties = {\r\n        color: { ...color, reflect: true },\r\n        small: { type: Boolean, reflect: true },\r\n        pulsar: { type: Boolean }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\" role=\"status\"></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"spinner-border\": !me.pulsar,\r\n            \"spinner-grow\": me.pulsar,\r\n            [`text-${me.color}`]: me.color,\r\n            [`spinner-border-sm`]: !me.pulsar && me.small,\r\n            [`spinner-grow-sm`]: me.pulsar && me.small,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-spinner');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitterElement class\r\n * @module components/GSSplitterElement\r\n */\r\n\r\nimport { classMap, createRef, ref, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCSSMap } from '../base/GSCSSMap.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { notEmpty, numGT0, placement } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSSplitterElement extends GSElement {\r\n\r\n    static properties = {\r\n        // Check if splitter use vertical or horizontal splitting\r\n        split: { reflect: true },\r\n        // start|end|top|bottom\r\n        resize: { ...placement, hasChanged: notEmpty },\r\n        size: { type: Number, hasChanged: numGT0 }\r\n    }\r\n\r\n    #cursor = 0;\r\n    #styleID = GSID.id;\r\n    #styleTGT = GSID.id;\r\n    #elRef = createRef();\r\n    #mouseController;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.size = 8;\r\n        me.resize = 'start';\r\n        me.dynamicStyle(me.#styleID);\r\n        me.#load();\r\n        me.#mouseController = new ElementMoveController(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        //this.dynamicStyle(this.#styleTGT, null, true);\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        super.firstUpdated(changed);\r\n        const me = this;\r\n        me.#mouseController.attach(me.#splitter);\r\n        //const shadow = GSDOM.root(me.target) instanceof ShadowRoot;\r\n        //me.dynamicStyle(me.#styleTGT, {}, !shadow);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#elRef)} \r\n            @dblclick=\"${me.#onDoubleClick}\"\r\n            data-gs-class=\"${me.#styleID}\" \r\n            class=\"${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'splitter': true,\r\n            [me.#styleID]: true\r\n        }\r\n        return css;\r\n    }\r\n\r\n    updated(changedProperties) {\r\n        const me = this;\r\n        me.#cssUpdate();\r\n    }\r\n\r\n    /**\r\n    * Lock UI for mouse events to enable resizing over embedded iframes\r\n    * @param {MouseEvent} e \r\n    */\r\n    onStartMove(e) {\r\n        const me = this;\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', { start: true });\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    onMouseMove(e) {\r\n        const me = this;\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Save last position and unlock mouse UI events when resizing finished\r\n     * @param {*} e \r\n     */\r\n    onEndMove(e) {\r\n        const me = this;\r\n        me.#save();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', { stop: true });\r\n    }\r\n\r\n    /**\r\n    * Check if splitter use vertical or hotizontal splitting\r\n    * @returns {Boolean}\r\n    */\r\n    get isVertical() {\r\n        return this.split === 'vertical';\r\n    }\r\n\r\n    get isHorizontal() {\r\n        return !this.isVertical;\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display', 'none')).pop();\r\n        }\r\n        el.classList?.add(me.#styleTGT);\r\n        return el;\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.#elRef.value;\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        return this.target.style;\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n\r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n                .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, true);\r\n                    el.dataset.gsSplitter = true;\r\n                });\r\n        } else {\r\n            me.#lockable\r\n                .filter(el => el.dataset.gsSplitter)\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, false);\r\n                    delete el.dataset.gsSplitter;\r\n                });\r\n        }\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { width: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { height: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        const key = me.isVertical ? 'width' : 'height';\r\n        me.#styleDynamic[key] = val + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { [key]: val + \"px\" }, true);\r\n    }\r\n\r\n    #cssUpdate() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        const opt = {\r\n            [size]: `${me.size}px`,\r\n            [full]: '100%',\r\n            'border-width': '1px',\r\n            cursor: cursor,\r\n            'border-color': 'darkgray',\r\n            'border-style': 'solid',\r\n            'background-color': 'lightgray',\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-splitter');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNavItemElement } from '../NavItem.mjs';\r\n\r\n/**\r\n * Tab component (gs-tab), generate selectable/switchable tabs on a panel\r\n */\r\nexport class GSTabItemElement extends GSNavItemElement {\r\n\r\n  static properties = {\r\n    name: {}\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.#updateCSS + this.css;\r\n  }\r\n\r\n  get #updateCSS() {\r\n    const me = this;\r\n    return me.shouldUpdate() ? GSUtil.normalize(me.parentElement?.tabCSS) : '';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.owner?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\n\r\n/**\r\n * Container for individual tab; part of tabed panel\r\n */\r\nexport class GSTabPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    name: {},\r\n    template: {},\r\n    active: { type: Boolean, reflect : true }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.active = false;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" \r\n      class=\"${classMap(this.renderClass())}\">\r\n      <slot>\r\n      ${this.template ? html`<gs-template flat src=\"${this.template}\"></gs-template>` : ''}\r\n      </slot></div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tab-pane': true,\r\n      'd-none' : !me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tab-group') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../../base/GSID.mjs';\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { PlacementTypes } from '../../properties/placement.mjs';\r\nimport { GSNavElement } from '../Nav.mjs';\r\nimport { GSTabItemElement } from './Tab.mjs';\r\n\r\n/**\r\n * Panel with tabs component (gs-tab-group), generate childrens gs-tab and gs-tab-panel \r\n */\r\nexport class GSTabGroupElement extends GSNavElement {\r\n\r\n  static properties = {\r\n    panelCSS: { attribute: 'css-panel' },\r\n    tabCSS: { attribute: 'css-tab' },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    // link tabs and panels\r\n    me.queryAll('gs-tab').forEach(el => me.#findPanel(el));\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSTabItemElement);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    const tabEl = me.query('gs-tab[active],gs-tab[autofocus],gs-tab')\r\n    me.onSelected(tabEl);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-tab');\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'd-flex': me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    const me = this;\r\n    const reverse = PlacementTypes.isAfter(me.placement);\r\n    const list = [super.renderWrappedUI('tabs'),\r\n    html`<div class=\"tab-content flex-fill ${me.panelCSS}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <slot name=\"panels\"></slot>\r\n      </div>\r\n      <slot class=\"d-none\"></slot>`];\r\n    return reverse ? list.reverse() : list;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const css = super.renderWrappedClass();\r\n    return me.mapCSS(me.tabCSS, css);\r\n  }\r\n\r\n  /**\r\n   * Render items based on data proeprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab generated\r\n        .active=\"${o.active}\"\r\n        .autofocus=\"${o.autofocus || o.active}\"\r\n        .disabled=\"${ifDefined(o.disabled)}\" \r\n        icon=\"${ifDefined(o.icon)}\"    \r\n        title=\"${ifDefined(o.title)}\"\r\n        name=\"${o.name}\"></gs-tab>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Render items based on data proeprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderPanels() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-panel name=\"${o.name}\" \r\n        template=\"${ifDefined(o.template)}\"></gs-tab-panel>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Filter navigable element\r\n   * @param {HTMLElement} el \r\n   */\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-TAB';\r\n  }\r\n\r\n  /**\r\n   * Callback when tab selected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onSelected(el) {\r\n    el?.click();\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = true;\r\n  }\r\n\r\n  /**\r\n   * Callback when tab deselected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onDeselected(el) {\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = false;\r\n  }\r\n\r\n  /**\r\n   * Selected Tab node name is used to find the panel.\r\n   * If panel found, auto-link it with node element\r\n   * @param {GSTabElement} el \r\n   */\r\n  #findPanel(el) {\r\n    if (!el) return null;\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    const generated = false; // me.data?.length > 0;\r\n    let panel = el[key] || me.query(`gs-tab-panel[name=\"${el.name}\"]`, generated);\r\n    if (!el[key]) el[key] = panel;\r\n    return panel;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\n\r\n/**\r\n * A simple HTML Table rederer for read-only tabular data representation\r\n * For complex interactive dat use gs-table\r\n */\r\nexport class GSTableElement extends GSElement {\r\n\r\n  static #icons = ['sort-up', 'arrow-down-up', 'sort-down-alt'];\r\n\r\n  static styles = css`th:hover { opacity: 50% !important; }`;\r\n\r\n  static CELLS = {\r\n    align: {},\r\n    width: {},\r\n    width: {},\r\n    css: {},\r\n    title: {},\r\n    filter: { type: Boolean },\r\n    filterType: { attribute: 'filter-type' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    ...GSData.PROPERTIES\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    color: { ...color },\r\n    colorHead: { ...color, attribute: 'head-color' },\r\n    colorSelect: { ...color, attribute: 'select-color' },\r\n    colorSort: { ...color, attribute: 'sort-color' },\r\n    stripedColumn: { type: Boolean, attribute: 'striped-column' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    divider: { type: Boolean },\r\n    striped: { type: Boolean },\r\n    hover: { type: Boolean },\r\n    small: { type: Boolean },\r\n    grid: { type: Boolean },\r\n    borderless: { type: Boolean },\r\n\r\n    sort: { type: Array, state: true },\r\n    columns: { type: Array, state: true },\r\n    selections: { type: Array, state: true },\r\n    key: { type: Number, state: true },\r\n\r\n    data: { type: Array },\r\n    datacolumn: { type: Boolean },\r\n    multisort: { type: Boolean },\r\n    multiselect: { type: Boolean },\r\n    protected: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n    sortable: { type: Boolean },\r\n  }\r\n\r\n  #config = [];\r\n  #sortOrder = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.headColor = 'secondary';\r\n    this.colorSelect = 'info';\r\n    this.columns = [];\r\n    this.selections = [];\r\n    this.data = [];\r\n    this.sort = [];\r\n    this.key = 0;\r\n  }\r\n\r\n  get selected() {\r\n    const me = this;\r\n    return me.data.filter((v, i) => me.selections.includes(i));\r\n  }\r\n\r\n  set search(val) {\r\n    const me = this;\r\n    if (me.storage) {\r\n      return me.dataController.search = val;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#config = GSItem.proxify(me, GSTableElement.CELLS);\r\n    if (me.columns.length === 0) me.columns = me.#config.map(v => v.name);\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.data = [];\r\n    this.selections = [];\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'user-select-none': me.protected,\r\n      'table': true,\r\n      'table-sm': me.small,\r\n      'table-hover': me.hover,\r\n      'table-striped': me.striped,\r\n      'table-bordered': me.grid,\r\n      'table-borderless': me.borderless,\r\n      'table-striped-columns': me.stripedColumns,\r\n      [`table-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.dataController?.read();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (me.columns.length != me.sort.length) me.sort = Array(me.columns.length).fill(0);\r\n    if (me.datacolumn && me.data.length > 0) {\r\n      me.columns = me.data[0];\r\n      me.data = me.data.slice(1);\r\n    }\r\n    if (changed.has('multiselect') && !me.multiselect) me.selections = [];\r\n    if (changed.has('selectable') && !me.selectable) me.selections = [];\r\n    if (changed.has('sortable') || changed.has('multisort')) {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [];\r\n    }\r\n\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const headColor = me.colorHead ? `table-${me.colorHead}` : '';\r\n    return html`\r\n      <table  \r\n       dir=\"${ifDefined(me.direction)}\"\r\n       @keyup=\"${me.#onKeyUp}\"\r\n       @keydown=\"${me.#onKeyDown}\"\r\n       class=\"${classMap(me.renderClass())}\">\r\n        <thead class=\"${ifDefined(headColor)}\">\r\n          ${me.#renderFilters()}\r\n          <tr @click=${me.#onSort}>\r\n            ${me.columns.map((entry, index) => me.#renderColumn(entry, index))}\r\n          </tr>\r\n        </thead>\r\n        <tbody @click=${me.#onSelect} class=\"${me.divider ? 'table-group-divider' : ''}\" role=\"button\">\r\n          ${me.data.map((entry, index) => me.#renderRecord(entry, index))}\r\n          ${me.#renderEmpty()}\r\n        </tbody>\r\n      </table>\r\n      <slot name=\"extra\"></slot>\r\n    `;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    const me = this;\r\n    me.data = data;\r\n    me.selections = [];\r\n\r\n    // update filtering\r\n    if (data.length > 0 && me.#hasFilters) {\r\n      me.#config.forEach((entry, index) => {\r\n        entry.columnType = me.#columType(index);\r\n      });\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.#input.forEach(el => el.value = '');\r\n    this.dataController?.filter([]);\r\n  }\r\n\r\n  valueAt(row, cell) {\r\n    return this.data.length > row ? this.data[row][cell] : undefined;\r\n  }\r\n\r\n  get #input() {\r\n    return this.queryAll('th > input', true);\r\n  }\r\n\r\n  get #hasFilters() {\r\n    return this.#config.filter(o => o.filter).length > 0;\r\n  }\r\n\r\n  #columType(index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const cell = me.valueAt(0, me.columns[index]);\r\n    cfg.type = cfg.type || 'text';\r\n    const cfgType = { 'string': 'text', 'currency': 'number', 'timestamp': 'datetime-local' }[cfg.type]\r\n    const dataType = cell instanceof Date ? 'date' : typeof cell;\r\n    return cell ? dataType : cfgType || cfg.type;\r\n  }\r\n\r\n  #renderFilters() {\r\n    const me = this;\r\n    return me.#hasFilters ? html`<tr>${me.columns.map((entry, index) => me.#renderFilter(entry, index))}</tr>` : '';\r\n  }\r\n\r\n  #renderFilter(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (!cfg?.filter) return html`<th></th>`;\r\n    let mask = '';\r\n    const isDate = cfg.columnType === 'date';\r\n    if (isDate) mask = cfg.format || GSUtil.getDateFormat(cfg.locale || GSUtil.locale);\r\n    const css = `${GSUtil.normalize(me.cssFilter)} ${GSUtil.normalize(cell.cssFilter)}`; \r\n\r\n    return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n        <input is=\"gs-ext-input\" .index=${index}\r\n            class=\"form-control ${css}\" \r\n            mask=\"${ifDefined(mask)}\"\r\n            name=\"${cell}\" \r\n            type=\"${cfg.filterType || cfg.columnType}\"\r\n            data-slots=\"${ifDefined(isDate ? 'DMY' : undefined)}\">\r\n        </th>`;\r\n  }\r\n\r\n  #renderColumn(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const css = `${GSUtil.normalize(me.cssHeader)} ${GSUtil.normalize(cell.cssHeader)}`; \r\n    return html`\r\n      <th .index=${index} class=\"${css}\" width=\"${ifDefined(me.#config[index]?.width)}\">\r\n        <div class=\"d-flex justify-content-between\"> \r\n          <span>${cfg?.title || cell}</span>\r\n          ${me.#renderIcon(index)}\r\n        </div>\r\n      </th>\r\n    `\r\n  }\r\n\r\n  #renderIcon(index) {\r\n    const me = this;\r\n    if (!me.sortable) return '';\r\n    const icons = GSTableElement.#icons;\r\n    const sortType = me.sort[index];\r\n    const order = me.multisort ? me.#sortOrder.indexOf(index) + 1 : '';\r\n    return html`<gs-icon name=\"${icons[sortType + 1]}\" super=\"${order > 0 ? order : ''}\" color=\"${ifDefined(me.colorSort)}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderRecord(entry, index) {\r\n    const me = this;\r\n    if (!Array.isArray(entry)) entry = me.columns.map(v => entry[v]);\r\n    entry = entry.map((val, i) => me.#config[i] ? GSData.format(me.#config[i], val) : val);\r\n    const color = me.colorSelect && me.selections.includes(index) ? `table-${me.colorSelect}` : '';\r\n    return html`\r\n        <tr .index=${index} class=\"${color}\" tabindex=\"0\">\r\n          ${entry.map((cell, i) => html`<td class=\"text-${me.#config[i]?.align}\"><span>${cell}</span></td>`)}\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  #renderEmpty() {\r\n    const me = this;\r\n    if (me.data.length > 0 ) return '';\r\n    return html`<tr data-ignore=\"true\"><td colspan=\"${me.columns.length}\" class=\"text-center fw-bold text-muted\">${me.translate('No Data')}</td></tr>`;\r\n\r\n  }\r\n\r\n  #onFilter(e) {\r\n    const me = this;\r\n    const filter = me.#input\r\n      .map(el => {\r\n        if (!el.value) return undefined;\r\n        const isDate = el.type === 'date';\r\n        const val = isDate ? el.valueAsDate : el.value;\r\n        const cfg = me.#config[el.index];\r\n        return { name: el.name, value: val, locale : cfg?.locale }\r\n      })\r\n      .filter(el => el?.value);\r\n    me.dataController.filter(filter);\r\n  }  \r\n\r\n  #onSort(e) {\r\n    const me = this;\r\n    if (!me.sortable) return;\r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const column = e.target.closest('th');\r\n    if (!icon || !column) return;\r\n    const idx = column.index !== undefined ? column.index : GSDOM.getElementIndex(column);\r\n    const current = me.sort[idx];\r\n    const sortType = current === 1 ? -1 : current + 1;\r\n\r\n    if (me.multisort) {\r\n      if (sortType == 0) {\r\n        me.#sortOrder = me.#sortOrder.filter(v => v != idx);\r\n      } else if (!me.#sortOrder.includes(idx)) {\r\n        me.#sortOrder.push(idx);\r\n      }\r\n    } else {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [idx];\r\n    }\r\n\r\n    me.sort[idx] = sortType;\r\n\r\n    const sort = me.#prepareSorter(me.sort, me.#sortOrder);\r\n\r\n    if (me.storage) {\r\n      return me.dataController.sort(sort);\r\n    }\r\n\r\n    me.data = GSData.sortData(me.data, sort);\r\n    me.emit('sort');\r\n  }\r\n\r\n  #prepareSorter(sort, sortOrder) {\r\n    const me = this;\r\n\r\n    if (sort.filter(v => v).length === 0) {\r\n      sort = Array(me.columns.length).fill(0);\r\n      sort[me.key] = 1;\r\n    }\r\n\r\n    // if data record is object (not simple array)\r\n    const isComplex = me.data[0] && !Array.isArray(me.data[0]);\r\n\r\n    // sort list \r\n    const list = sort.map((v, i) => v ? { name: isComplex ? me.columns[i] : undefined, col: i, ord: v, idx: sortOrder.indexOf(i) } : null).filter(v => v);\r\n\r\n    // order sort list by idx\r\n    sort = GSData.sortData(list, [{ name: 'idx', ord: 1 }]);\r\n\r\n    return sort;\r\n  }\r\n\r\n  #onSelect(e) {\r\n    const me = this;\r\n    if (!me.selectable) return;\r\n    const tr = e.target.tagName === 'TR' ? e.target : e.target.closest('tr');\r\n    if (!tr) return;\r\n    const isSelected = me.selections.includes(tr.index);\r\n    if (me.multiselect) {\r\n      if (isSelected) {\r\n        me.selections = me.selections.filter(v => v != tr.index);\r\n      } else {\r\n        me.selections.push(tr.index);\r\n        me.requestUpdate();\r\n      }\r\n    } else {\r\n      me.selections = isSelected ? [] : [tr.index];\r\n    }\r\n    me.emit('select');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    if (!e.target.matches('tbody tr')) return;\r\n    let el = null;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        el = e.target.previousElementSibling;\r\n        break;\r\n      case 'ArrowDown':\r\n        el = e.target.nextElementSibling;\r\n        break;\r\n    }\r\n\r\n    if (el) {\r\n      el.focus();\r\n      this.emit('focus', el);\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') this.#onSelect(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-table');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport { createRef, ref, classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { stringArrayConverter, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSTagElement}\r\n */\r\nexport default class GSTagElement extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static styles = css`\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n\r\n    static properties = {\r\n        placeholder: {},\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        name: {},\r\n        data: { type: Array },\r\n        values: { type: Array, reflect: true, converter: stringArrayConverter },\r\n        appendable: { type: Boolean },\r\n        color: { ...color },\r\n        closeColor: { ...color, attribute: 'close-color' },\r\n        cssClose: { attribute: 'css-close' },\r\n        cssTag: { attribute: 'css-tag' },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {}\r\n    }\r\n\r\n    #dataListRef = createRef();\r\n    #inputRef = createRef();\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = '';\r\n        this.data = this.#items;\r\n        this.closeColor = 'light';\r\n        this.color = 'primary';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const tags = me.#renderTags();\r\n        return html`\r\n        <div  dir=\"${ifDefined(me.direction)}\" \r\n            class=\"${classMap(me.renderClass())}\"\r\n            @click=\"${me.#onClick.bind(me)}\">\r\n            ${tags}\r\n            <input type=\"text\" \r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            ${ref(me.#inputRef)}\r\n            name=\"${me.name}\" \r\n            list=\"${me.name}_list\"\r\n            class=\"form-control d-flex w-auto flex-grow-1\" \r\n            placeholder=\"${me.#info}\">\r\n            <datalist ${ref(me.#dataListRef)} id=\"${me.name}_list\">${me.#renderList()}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"d-flex\": true,\r\n            \"flex-wrap\": true,\r\n            \"align-items-center\": true,\r\n            \"gap-1 \": true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    get #info() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return me.placeholder ? me.placeholder : alt;\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTagElement.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.data.length >= me.max;\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax || (!optEl && me.appendable == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (!me.values.includes(fld.value)) {\r\n            me.values.push(fld.value);\r\n            fld.value = '';\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const value = tagEl.dataset.value;\r\n        me.values = me.values.filter(v => v != value);\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v));\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        const size = me.size > 0 ? `fs-${me.size}` : '';\r\n        return html`<div class=\"${classMap(me.#tagClass)}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"${classMap(me.#btnClass)}\"></button></div>`;\r\n    }\r\n\r\n    get #tagClass() {\r\n        const me = this;\r\n        const opt = {\r\n            badge: true,\r\n            tag: true,\r\n            [`fs-${me.size}`]: me.size > 0,\r\n            [`bg-${me.color}`]: me.color ? true : false\r\n        }\r\n        return me.mapCSS(me.cssTag, opt);\r\n    }\r\n\r\n    get #btnClass() {\r\n        const me = this;\r\n        const opt = {\r\n            'btn-close': true,\r\n            'ms-1': true,\r\n            [`bg-${me.closeColor}`]: me.closeColor ? true : false\r\n        }\r\n        return me.mapCSS(me.cssClose, opt);\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        return me.data.map(v => html`<option value=\"${v}\">`);\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el));\r\n    }\r\n\r\n    get #items() {\r\n        return this.#proxify(this).map(el => el.name).filter(v => v ? true : false);\r\n    }\r\n\r\n    get #input() {\r\n        return this.#inputRef.value;\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.#dataListRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-tag');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSTextElement extends GSElement {\r\n\r\n  #text = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.#text = this.innerText;\r\n    this.innerText = \"\";\r\n  }\r\n\r\n  renderUI() {\r\n    return this.translate(this.#text);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-text');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSTooltipElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    title: {},\r\n    target: {},\r\n    opened: { type: Boolean },\r\n    local: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowStyle = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.placement = 'top';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowStyle);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      role=\"tooltip\"\r\n      data-popper-placement=\"${me.placement}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      <div ${ref(me.#arrowRef)} \r\n          class=\"tooltip-arrow ${me.#arrowStyle}\" \r\n          data-gs-class=\"${me.#arrowStyle}\">\r\n      </div>\r\n      <div class=\"tooltip-inner\">${me.translate(me.title)}</div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tooltip': true,\r\n      'bs-tooltip-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  #attachEvents() {\r\n    const me = this;\r\n    me.attachEvent(me.#ref, 'mouseenter', me.open.bind(me));\r\n    me.attachEvent(me.#ref, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const arrowEl = me.#arrow;\r\n    const panelEl = me.#panel;\r\n    if (!panelEl) return;\r\n    if (me.opened) {\r\n      GSPopper.popupFixed(me.placement, panelEl, me.#ref, arrowEl);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, { top: '-1000px', left: '-1000px' });\r\n    }\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return me.local ? me.#refLocal : me.#refGlobal;\r\n    }\r\n  }\r\n\r\n  get #refLocal() {\r\n    const root = GSDOM.root(this);\r\n    return GSDOM.query(root, this.target);\r\n  }\r\n  \r\n  get #refGlobal() {\r\n    return GSDOM.query(document.body, this.target);\r\n  }\r\n\r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-tooltip');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty } from '../properties/index.mjs';\r\n\r\nexport class GSTemplateElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { reflect: true, hasChanged: notEmpty }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    const me = this;\r\n    if (me.flat) {\r\n      me.renderOptions.renderBefore = me;\r\n      return me.parentElement;\r\n    }\r\n    return super.createRenderRoot();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${this.renderTemplate()}`;\r\n  }\r\n\r\n\ttemplateInjected() {\r\n\t\tthis.emit('template-injected', null, true, true);\r\n\t}\r\n\r\n  static {\r\n    this.define('gs-template');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle automatic field value copy and select\r\n */\r\nexport class CopySelectController {\r\n\r\n  #host;\r\n\r\n  #clickCallback;\r\n  #copyCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#clickCallback = me.#onClick.bind(me);\r\n    me.#copyCallback = me.#onCopy.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('click', me.#clickCallback);\r\n    me.#host.on('copy', me.#copyCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('click', me.#clickCallback);\r\n    me.#host.off('copy', me.#copyCallback);\r\n  }\r\n\r\n  #onCopy() {\r\n    GSUtil.writeToClipboard(this.#host.value);\r\n  }\r\n\r\n  #onClick(e) {\r\n      const me = this;\r\n      if (me.#host.autocopy) GSUtil.writeToClipboard(me.#host.value);\r\n      if (me.#host.autoselect) me.#host.select();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle field mask \r\n */\r\nexport class MaskController {\r\n\r\n  static #special = '.^$*+?()[]{}\\|';\r\n\r\n  static #maskType = {\r\n    x: /[0-9a-fA-F]/g,\r\n    n: /[0-9]/g,\r\n    y: /[0-9]/g,\r\n    m: /[0-9]/g,\r\n    d: /[0-9]/g,\r\n    h: /[0-9]/g,\r\n    s: /[0-9]/g,\r\n    '.': /[0-9]/g,\r\n    '#': /[a-zA-Z]/g,\r\n    '*': /[0-9a-zA-Z]/g,\r\n    '_': /./g\r\n  };\r\n\r\n  #back = false;\r\n  #slots;\r\n  #prev;\r\n  #first;\r\n  #accept;\r\n  #pattern;\r\n\r\n  #host;\r\n\r\n  #keyDownCallback;\r\n  #inputCallback;\r\n  #focusCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    me.#inputCallback = me.#format.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.initRules();\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n    me.#host.on('input', me.#inputCallback);\r\n    me.#host.on('focus', me.#focusCallback);\r\n    me.#host.on('blur', me.#blurCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n    me.#host.off('input', me.#inputCallback);\r\n    me.#host.off('focus', me.#focusCallback);\r\n    me.#host.off('blur', me.#blurCallback);\r\n  }\r\n\r\n  initRules() {\r\n    const me = this;\r\n    if (!me.pattern) return;\r\n    me.#slots = me.#builSlots();\r\n    me.#prev = (j => Array.from(me.pattern, (c, i) => me.#slots.has(c) ? j = i + 1 : j))(0);\r\n    me.#first = [...me.pattern].findIndex(c => me.#slots.has(c));\r\n    me.#accept = me.#builAccept();\r\n    me.#toPattern();    \r\n  }\r\n  \r\n  validate() {\r\n    const me = this;\r\n    me.setCustomValidity('');\r\n    me.#pattern.lastIndex = 0;\r\n    const isMatch = me.required ? me.#pattern.test(me.raw) : true;\r\n    const isValid = isMatch && me.checkValidity();\r\n    if (!isMatch) me.setCustomValidity('Data did not match pattern!');\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.#host.checkValidity();\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.#host.reportValidity();\r\n  }\r\n\r\n  setSelectionRange(i, j) {\r\n    this.#host.setSelectionRange(i, j);\r\n  }\r\n  \r\n  select() {\r\n    this.#host.select();\r\n  }\r\n\r\n  get value() {\r\n    const [i, j] = this.#range();\r\n    return this.raw.substring(0, j);\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get pattern() {\r\n    return this.#host.mask;\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get selectionStart() {\r\n    return this.#host.selectionStart;\r\n  }\r\n\r\n  get selectionEnd() {\r\n    return this.#host.selectionEnd;\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.#host.autoselect;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    this.#back = e.key === \"Backspace\";\r\n  }\r\n\r\n  #onFocus(e) {\r\n    const me = this;\r\n    me.#format(e);\r\n    if (me.autoselect) me.select();\r\n  }\r\n\r\n  #onBlur(e) {\r\n    // me.value === me.pattern && (me.value = \"\");\r\n    this.validate();\r\n  }\r\n\r\n  /**\r\n   * If data-slots not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #builSlots() {\r\n    const me = this;\r\n    let slots = me.dataset.slots;\r\n    if (!slots) {\r\n      const maskType = MaskController.#maskType;\r\n      slots = [...new Set(me.pattern)]\r\n        .filter(v => maskType[v.toLowerCase()])\r\n        .join('');\r\n    }\r\n    return new Set(slots || \"_\");\r\n  }\r\n\r\n  /**\r\n   * If data-accept not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #builAccept() {\r\n    const me = this;\r\n    let accept = me.dataset.accept;\r\n    if (!accept) {\r\n      const maskType = MaskController.#maskType;\r\n      accept = [...new Set(me.pattern)]\r\n      .map(v => maskType[v.toLowerCase()])\r\n      .filter(v => v);\r\n      if (accept.length > 0) {\r\n        const tmp = {};\r\n        accept.forEach(v => tmp[v.src] = v);\r\n        accept = Object.values(tmp);\r\n        return accept.length === 1 ? accept.pop() : accept;\r\n      } \r\n\r\n    }\r\n    return new RegExp(accept || \"\\\\d\", \"g\");\r\n  }\r\n\r\n  #range() {\r\n    const me = this;\r\n    const value = me.raw;\r\n    return [me.selectionStart, me.selectionEnd].map(i => {\r\n      i = me.#clean(value.slice(0, i)).findIndex(c => me.#slots.has(c));\r\n      return i < 0 ? me.#prev[me.#prev.length - 1] : me.#back ? me.#prev[i - 1] || me.#first : i;\r\n    });\r\n  }\r\n\r\n  #format(e) {\r\n    const me = this;\r\n    const [i, j] = me.#range();\r\n    me.value = me.#clean(me.#host.raw).join``;\r\n    me.setSelectionRange(i, j);\r\n    me.#back = false;\r\n  }\r\n\r\n  //  TODO support multi #accecpt\r\n  #clean(input) {\r\n    const me = this;\r\n    input = input.match(me.#accept) || [];\r\n    return Array.from(me.pattern, c => input[0] === c || me.#slots.has(c) ? input.shift() || c : c);\r\n  }\r\n\r\n  #toPattern() {\r\n\r\n    const me = this;\r\n\r\n    if (me.pattern.length === 0) return;\r\n\r\n    const chars = me.pattern.split('');\r\n    const masks = ['^'];\r\n\r\n    const maskType = MaskController.#maskType;\r\n    const special = MaskController.#special;\r\n\r\n    let cnt = 0;\r\n    chars.forEach((v, i) => {\r\n      const m = maskType[v.toLowerCase()];\r\n      if (!m) {\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        cnt = 0;\r\n        if (special.includes(v)) masks.push('\\\\');\r\n        return masks.push(v);\r\n      }\r\n\r\n      chars[i] = new RegExp(m, 'g');\r\n\r\n      if (masks.length === 0) return masks.push(m.source);\r\n\r\n      if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n      if (cnt > 0) masks.push(`{${++cnt}}`);\r\n      cnt = 0;\r\n      masks.push(m.source);\r\n    });\r\n\r\n    if (cnt > 0) masks.push(`{${++cnt}}`);\r\n    masks.push('$');\r\n\r\n    me.#pattern = new RegExp(masks.join(''), 'g');\r\n    // me.#max = me.pattern.length;\r\n    // me.#masks = chars;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type number to support max length entry\r\n */\r\nexport class NumberController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get maxLength() {\r\n    return GSUtil.asNum(this.#host.maxLength, 0);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n    \r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'number') return me.#onNumberInput(e);\r\n  }\r\n\r\n  #onNumberInput(e) {\r\n    const me = this;\r\n    if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n        me.value = me.value.substring(0, me.maxLength);\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle for input tpye password tosupport keyboard shortcut for password reveal.\r\n */\r\nexport class PasswordController {\r\n\r\n  #host;\r\n\r\n  #revealing = false;\r\n\r\n  #keyUpCallback;\r\n  #keyDownCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyUpCallback = me.#onKeyUp.bind(me);\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('keyup', me.#keyUpCallback);\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keyup', me.#keyUpCallback);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  get reveal() {\r\n    return this.#host.hasAttribute('reveal');\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  set type(val) {\r\n    if (this.#host) this.#host.type = val;\r\n  }\r\n\r\n  #isReveal(e) {\r\n    return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    const me = this;\r\n    if (e.key === 'Shift' && me.#revealing) {\r\n      me.type = 'password';\r\n    }\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (me.#isReveal(e)) {\r\n      me.#revealing = true;\r\n      me.type = 'text';\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSCSSMap } from \"../../../base/GSCSSMap.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type text to support text value changes based on CSS\r\n */\r\nexport class TextController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'text') me.value = me.#updateText(me.value);\r\n  }\r\n\r\n  #updateText(value = '') {\r\n    const map = GSCSSMap.styleValue(this.#host, 'text-transform');\r\n    if (map) value = GSUtil.textTransform(map.value, value);\r\n    return value;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update avaialble selections in another field selections.\r\n */\r\nexport class ListController {\r\n\r\n  #host;\r\n\r\n  #monitorCallback;\r\n  #changeCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#monitorCallback = me.#onMonitor.bind(me);\r\n    me.#changeCallback = me.#onDataChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (list) {\r\n      me.#host.on('blur', me.#blurCallback);\r\n      me.#host.on('change', me.#changeCallback);\r\n      me.#host.attachEvent(me.filter, 'change', me.#monitorCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('blur', me.#blurCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n    me.#host.removeEvent(me.filter, 'change', me.#monitorCallback);\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n      this.#onDataChange();\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get list() {\r\n    const me = this;\r\n    if (me.#host.list) return me.#host.list;\r\n    const list = GSAttr.get(me.#host, 'list');\r\n    return GSDOM.getByID(me.#host.owner, list);\r\n  }\r\n\r\n  get filter() {\r\n    const me = this;\r\n    const filter = GSAttr.get(me.#host, 'data-filter');\r\n    return GSDOM.getByID(me.#host.owner, filter);\r\n  }\r\n\r\n  get owner() {\r\n    return this.#host.owner;\r\n  }\r\n\r\n  get strict() {\r\n    return GSAttr.get(this.#host, 'strict', '');\r\n  }\r\n\r\n  #onBlur(e) {\r\n    if (!this.#isInList()) GSEvents.send(this.#host, 'strict', { ok: false, source: e });\r\n  }\r\n\r\n  #onDataChange(e) {\r\n    const me = this;\r\n    const own = me.owner;\r\n    let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n    let clean = false;\r\n    if (!opt) {\r\n        opt = me.list?.querySelector('option');\r\n        clean = true;\r\n    }\r\n\r\n    const obj = opt?.dataset || {};\r\n    Object.entries(obj).forEach(p => {\r\n        const val = clean ? '' : p[1];\r\n        const key = p[0];\r\n        GSAttr.set(me.#host, `data-${key}`, p[1]);\r\n        if (key === 'id' || key === 'group') return;\r\n\r\n        const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n        const els = Array.from(GSDOM.queryAll(own, filter));\r\n        els.filter(el => el.tagName !== 'OPTION')\r\n            .filter(el => el !== me)\r\n            .filter(el => GSAttr.get(el, 'list').length === 0)\r\n            .forEach(el => me.#togleEl(el, key, val))\r\n    });\r\n  }\r\n\r\n  #onMonitor(e) {\r\n    const me = this;\r\n    const list = me.list;\r\n    me.value = '';\r\n    const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n    GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n    const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n    GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n\r\n  }\r\n\r\n  #togleEl(el, key = '', value = '') {\r\n\r\n    const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n    const isMatch = value.length > 0 && data.includes(value);\r\n    const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n\r\n    if (frmel) {\r\n      GSAttr.toggle(el, 'disabled', !isMatch);\r\n    } else {\r\n      isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n    }\r\n\r\n    const form = GSDOM.closest(el, 'form');\r\n    GSDOM.formElements(form)\r\n      .forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n  }\r\n\r\n  #isInList() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (!list) return true;\r\n    if (!me.strict) return true;\r\n    if (!list.querySelector('option')) return true;\r\n    const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n    return opt != null;\r\n  }\r\n\r\n}  ","\r\nimport { notEqual, defaultConverter } from '../../lib.mjs';\r\n\r\n\r\nconst defaultPropertyDeclaration = {\r\n    attribute: true,\r\n    reflect: false,\r\n    type: String,\r\n    converter: defaultConverter,\r\n    hasChanged: notEqual,\r\n}\r\n\r\nconst attributeToPropertyMap = Symbol();\r\nconst prepare = Symbol();\r\nconst elementProperties = Symbol();\r\nconst finalize = Symbol();\r\nconst finalized = Symbol();\r\n\r\nconst prepareFn = function () {\r\n    const me = this;\r\n    if (Object.getOwnPropertySymbols(me).includes(elementProperties)) return;\r\n    const superCtor = Object.getPrototypeOf(me);\r\n    if (typeof superCtor[finalize] === 'function') superCtor[finalize]();\r\n    me[elementProperties] = new Map(superCtor[elementProperties]);\r\n}\r\n\r\nconst attributeNameForProperty = (name, options) => {\r\n    const attribute = options.attribute;\r\n    return attribute === false\r\n        ? undefined\r\n        : typeof attribute === 'string'\r\n            ? attribute\r\n            : typeof name === 'string'\r\n                ? name.toLowerCase()\r\n                : undefined;\r\n}\r\n\r\n/**\r\n * Reactivity for HTMLInputElement based on Google ltd. Lit ReactiveElement\r\n */\r\nexport class ReactiveInput extends HTMLInputElement {\r\n\r\n    // user defiend \r\n    static properties = {};\r\n    \r\n    static [finalized] = false;\r\n\r\n    #reflectingProperties = undefined;\r\n    #instanceProperties = undefined;\r\n\r\n    #controllers = undefined;\r\n    #updatePromise = undefined;\r\n    #changedProperties = undefined;\r\n    #reflectingProperty = undefined;\r\n\r\n    #hasUpdated = false;\r\n    #isUpdatePending = false;\r\n\r\n    /**\r\n     * Returns a list of attributes corresponding to the registered properties.\r\n    */\r\n    static get observedAttributes() {\r\n        Object.defineProperty(ReactiveInput.__proto__, prepare, { value: prepareFn });\r\n        const me = this;\r\n        me[finalize]();\r\n        return me[attributeToPropertyMap] && [...me[attributeToPropertyMap].keys()];\r\n    }\r\n\r\n    static addInitializer(initializer) {\r\n        const me = this;\r\n        me[prepare]();\r\n        me.initializers ??= [].push(initializer);\r\n    }\r\n\r\n    static [finalize]() {\r\n        const me = this;\r\n        //if (Object.hasOwn(me, 'finalized')) return;\r\n        if (me[finalized] === true) return;\r\n        me[finalized] = true;\r\n        me[prepare]();\r\n\r\n        if (Object.hasOwn(me, 'properties')) {\r\n            const props = me.properties;\r\n            const propKeys = [\r\n                ...Object.getOwnPropertyNames(props),\r\n                ...Object.getOwnPropertySymbols(props),\r\n            ];\r\n            for (const p of propKeys) {\r\n                me.createProperty(p, props[p]);\r\n            }\r\n        }\r\n\r\n        // Create the attribute-to-property map\r\n        me[attributeToPropertyMap] = new Map();\r\n        for (const [p, options] of me[elementProperties]) {\r\n            const attr = attributeNameForProperty(p, options);\r\n            if (attr !== undefined) {\r\n                me[attributeToPropertyMap].set(attr, p);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static createProperty(name, options) {\r\n        const me = this;\r\n        if (options.state) options.attribute = false;\r\n        me[prepare]();\r\n        me[elementProperties].set(name, options);\r\n        if (!options.noAccessor) {\r\n            const key = Symbol();\r\n            const descriptor = me.getPropertyDescriptor(name, key, options);\r\n            if (descriptor !== undefined) {\r\n                Object.defineProperty(me.prototype, name, descriptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    static getPropertyDescriptor(name, key, options) {\r\n        const { get, set } = Object.getOwnPropertyDescriptor(this.prototype, name) ?? {\r\n            get() {\r\n                return this[key];\r\n            },\r\n            set(v) {\r\n                this[key] = v;\r\n            },\r\n        }\r\n        return {\r\n            get() {\r\n                return get?.call(this);\r\n            },\r\n            set(value) {\r\n                const me = this;\r\n                const oldValue = get?.call(me);\r\n                set?.call(me, value);\r\n                me.requestUpdate(name, oldValue, options);\r\n            },\r\n            configurable: true,\r\n            enumerable: true,\r\n        }\r\n    }\r\n\r\n    static getPropertyOptions(name) {\r\n        return this[elementProperties].get(name) ?? defaultPropertyDeclaration;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initialize();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.enableUpdating(true);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        this.#attributeToProperty(name, newValue);\r\n    }\r\n\r\n    // ******************************\r\n    // PUBLIC GETTERS\r\n    // ******************************\r\n\r\n    get hasUpdated() { return this.#hasUpdated; }\r\n    get isUpdatePending() { return this.#isUpdatePending; }\r\n    get renderRoot() { return this; }\r\n\r\n    // ******************************\r\n    // PROTECTED FUNCTIONS \r\n    // ******************************\r\n\r\n    addController(controller) {\r\n        // if (!(controller instanceof ReactiveController)) throw new Error('Argument not instance of ReactiveController');\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    enableUpdating(requestedUpdate) { }\r\n\r\n    firstUpdated(changedProperties) { }\r\n\r\n    updated(changedProperties) { }\r\n\r\n    getUpdateComplete() { return this.#updatePromise; }\r\n\r\n    scheduleUpdate() { return this.performUpdate(); }\r\n\r\n    shouldUpdate(changedProperties) { return true; }\r\n\r\n    willUpdate(changedProperties) { }\r\n\r\n    update(changedProperties) {\r\n        const me = this;\r\n        // The forEach() expression will only run when when #reflectingProperties is\r\n        // defined, and it returns undefined, setting #reflectingProperties to undefined\r\n        me.#reflectingProperties &&= me.#reflectingProperties.forEach((p) => me.#propertyToAttribute(p, this[p]));\r\n        me.#markUpdated();\r\n    }\r\n\r\n    get updateComplete() {\r\n        return this.getUpdateComplete();\r\n    }\r\n\r\n    requestUpdate(name, oldValue, options) {\r\n        const me = this;\r\n        if (name !== undefined) {\r\n            options ??= (me.constructor).getPropertyOptions(name);\r\n            const hasChanged = options.hasChanged ?? notEqual;\r\n            const newValue = me[name];\r\n            if (hasChanged(newValue, oldValue)) {\r\n                me.#changeProperty(name, oldValue, options);\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (me.#isUpdatePending === false) {\r\n            me.#updatePromise = me.#enqueueUpdate();\r\n        }\r\n    }\r\n\r\n    performUpdate() {\r\n\r\n        const me = this;\r\n        if (!me.#isUpdatePending) return;\r\n\r\n        if (!me.#hasUpdated) {\r\n\r\n            // Mixin instance properties once, if they exist.\r\n            if (me.#instanceProperties) {\r\n                for (const [p, value] of me.#instanceProperties) {\r\n                    this[p] = value;\r\n                }\r\n                me.#instanceProperties = undefined;\r\n            }\r\n\r\n            const elementProps = me.constructor[elementProperties];\r\n            if (elementProps.size > 0) {\r\n                for (const [p, options] of elementProps) {\r\n                    if (\r\n                        options.wrapped === true &&\r\n                        !me.#changedProperties.has(p) &&\r\n                        me[p] !== undefined\r\n                    ) {\r\n                        me.#changeProperty(p, this[p], options);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let shouldUpdate = false;\r\n        const changedProperties = me.#changedProperties;\r\n        try {\r\n            shouldUpdate = me.shouldUpdate(changedProperties);\r\n            if (shouldUpdate) {\r\n                me.willUpdate(changedProperties);\r\n                me.#controllers?.forEach((c) => c.hostUpdate?.());\r\n                me.update(changedProperties);\r\n            } else {\r\n                me.#markUpdated();\r\n            }\r\n        } catch (e) {\r\n            shouldUpdate = false;\r\n            me.#markUpdated();\r\n            throw e;\r\n        }\r\n\r\n        if (shouldUpdate) {\r\n            me.#didUpdate(changedProperties);\r\n        }\r\n    }\r\n\r\n    // ******************************\r\n    // PRIVATE FUNCTIONS \r\n    // ******************************\r\n\r\n    #didUpdate(changedProperties) {\r\n        const me = this;\r\n        me.#controllers?.forEach((c) => c.hostUpdated?.());\r\n        if (!me.#hasUpdated) {\r\n            me.#hasUpdated = true;\r\n            me.firstUpdated(changedProperties);\r\n        }\r\n        me.updated(changedProperties);\r\n    }\r\n\r\n    #markUpdated() {\r\n        const me = this;\r\n        me.#changedProperties = new Map();\r\n        me.#isUpdatePending = false;\r\n    }\r\n\r\n    async #enqueueUpdate() {\r\n        const me = this;\r\n        me.#isUpdatePending = true;\r\n        try {\r\n            await me.#updatePromise;\r\n        } catch (e) {\r\n            Promise.reject(e);\r\n        }\r\n        const result = me.scheduleUpdate();\r\n\r\n        if (result != null) {\r\n            await result;\r\n        }\r\n        return !me.#isUpdatePending;\r\n    }\r\n\r\n    #changeProperty(name, oldValue, options) {\r\n        const me = this;\r\n        if (!me.#changedProperties.has(name)) {\r\n            me.#changedProperties.set(name, oldValue);\r\n        }\r\n\r\n        if (options.reflect === true && me.#reflectingProperty !== name) {\r\n            (me.#reflectingProperties ??= new Set()).add(name);\r\n        }\r\n    }\r\n\r\n    #attributeToProperty(name, value) {\r\n        const me = this;\r\n        const ctor = me.constructor;\r\n        const propName = (ctor[attributeToPropertyMap]).get(name);\r\n        if (propName !== undefined && me.#reflectingProperty !== propName) {\r\n            const options = ctor.getPropertyOptions(propName);\r\n            const converter =\r\n                typeof options.converter === 'function'\r\n                    ? { fromAttribute: options.converter }\r\n                    : options.converter?.fromAttribute !== undefined\r\n                        ? options.converter\r\n                        : defaultConverter;\r\n            // mark state reflecting\r\n            me.#reflectingProperty = propName;\r\n            me[propName] = converter?.fromAttribute(value, options.type);\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #propertyToAttribute(name, value) {\r\n        const me = this;\r\n        const elementProps = me.constructor[elementProperties];\r\n        const options = elementProps?.get(name);\r\n        const attr = attributeNameForProperty(name, options);\r\n        if (attr !== undefined && options.reflect === true) {\r\n            const converter =\r\n                (options.converter)?.toAttribute !==\r\n                    undefined\r\n                    ? (options.converter)\r\n                    : defaultConverter;\r\n            const attrValue = converter?.toAttribute(value, options.type);\r\n\r\n            me.#reflectingProperty = name;\r\n            if (attrValue == null) {\r\n                me.removeAttribute(attr);\r\n            } else {\r\n                me.setAttribute(attr, attrValue);\r\n            }\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #saveInstanceProperties() {\r\n        const me = this;\r\n        const instanceProperties = new Map();\r\n        const elementProps = me.constructor[elementProperties];\r\n        for (const p of elementProps.keys()) {\r\n            if (Object.hasOwn(me, p)) {\r\n                instanceProperties.set(p, me[p]);\r\n                delete me[p];\r\n            }\r\n        }\r\n        if (instanceProperties.size > 0) {\r\n            me.#instanceProperties = instanceProperties;\r\n        }\r\n    }\r\n\r\n    #initialize() {\r\n        const me = this;\r\n        me.#updatePromise = new Promise((res) => me.enableUpdating = res);\r\n        me.#changedProperties = new Map();\r\n        me.#saveInstanceProperties();\r\n        me.requestUpdate();\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity();\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = { value: o };\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSData } from '../../base/GSData.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\nimport { AdoptedController } from '../../controllers/AdoptedController.mjs';\r\nimport { AttributeController } from '../../controllers/AttributeController.mjs';\r\nimport { CopySelectController } from './controllers/CopySelectController.mjs';\r\nimport { MaskController } from './controllers/MaskController.mjs';\r\nimport { PasswordController } from './controllers/PasswordController.mjs';\r\nimport { NumberController } from './controllers/NumberController.mjs';\r\nimport { TextController } from './controllers/TextController.mjs';\r\nimport { ListController } from './controllers/ListController.mjs';\r\n\r\nimport { ReactiveInput } from './ReactiveInput.mjs';\r\n\r\n/**\r\n * Extended HTMLInputElement with controllers support\r\n * adding various feature such as masked input support \r\n */\r\nexport class GSInputElement extends ReactiveInput {\r\n\r\n  static properties = {\r\n    autocopy: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    autoselect: { type: Boolean },\r\n    reveal: { type: Boolean },\r\n    mask: { reflect: true }\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n\r\n  #copyselect;\r\n  #maskController;\r\n  #passwordController;\r\n  #numberController;\r\n  #textController;\r\n  #listController;\r\n\r\n  constructor() {\r\n    super();\r\n    this.#copyselect = new CopySelectController(this);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n\r\n    super.willUpdate(changed);\r\n\r\n    if (changed.has('mask') && this.mask && this.type === 'text') {\r\n      this.placeholder = this.mask;\r\n      this.#maskController ??= new MaskController(this);\r\n      this.#maskController.initRules();\r\n    }\r\n\r\n    if (this.list) {\r\n      this.#listController ??= new ListController(this);\r\n    }\r\n\r\n    switch (this.type) {\r\n      case 'text':\r\n        this.#textController ??= new TextController(this);\r\n        break;\r\n      case 'password':\r\n        this.#passwordController ??= new PasswordController(this);\r\n        break;\r\n      case 'number':\r\n        this.#numberController ??= new NumberController(this);\r\n        break;\r\n    }\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus) this.focus();\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value) {\r\n    this.#adopted ??= new AdoptedController(me);\r\n    return this.#adopted.style(id, value);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  get owner() {\r\n    const own = GSDOM.root(this);\r\n    return GSDOM.unwrap(own);\r\n  }\r\n\r\n  get raw() {\r\n    return super.value;\r\n  }\r\n\r\n  get value() {\r\n    return this.#maskController ? this.#maskController.value : super.value;\r\n  }\r\n\r\n  set value(val) {\r\n    super.value = val;\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSInputElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   */\r\n  static define(name, clazz) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, { extends: 'input' });\r\n    }\r\n  }\r\n\r\n  static {\r\n    GSInputElement.define('gs-ext-input', GSInputElement);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined, repeat } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSBreadcrumbElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n    color: { ...color },\r\n    divider: { reflect: true },\r\n    spacing: { reflect: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.spacing = 1;\r\n    me.divider = 'chevron-right';\r\n    me.#updateChildren();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#updateChildren();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<nav part=\"base\" class=\"breadcrumb\" @click=\"${me.#onClick}\" dir=\"${ifDefined(me.direction)}\"><slot>\r\n      ${repeat(me.data || [], (item) => item, (item) => html`\r\n        <gs-breadcrumb-item  \r\n        href=\"${item.href}\"\r\n        color=\"${item.color}\"\r\n        .data=${item}     \r\n        .active=${item.active}\r\n        .divider=\"${item.divider || me.divider}\"\r\n        .spacing=\"${item.spacing || me.spacing}\">\r\n          ${item.$text}\r\n        </gs-breadcrumb-item>\r\n      `)}\r\n    </slot></nav>`;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #updateChildren() {\r\n    const me = this;\r\n    me.queryAll('gs-breadcrumb-item').forEach(el => {\r\n      el.divider = me.divider;\r\n      el.spacing = me.spacing;\r\n      el.color = me.color;\r\n    });\r\n  }\r\n\r\n  #onClick(e) {\r\n    const el = e.target.closest('gs-bradcrumb-item');\r\n    el?.handle(e);\r\n  } \r\n\r\n  static {\r\n    this.define('gs-breadcrumb');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSBreadcrumbItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    color: { ...color },\r\n    data: { state: true, type: Object },\r\n    active: { reflect: true, type: Boolean },\r\n    divider: { state: true, type: Boolean },\r\n    spacing: { state: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div part=\"base\" class=\"breadcrumb-item ${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <span part=\"prefix\"><slot name=\"prefix\"></slot></span>        \r\n        ${me.#label}\r\n        <span part=\"suffix\"><slot name=\"suffix\"></slot></span>\r\n        <span part=\"separator\"><slot name=\"separator\">${me.#separator}</slot></span>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #label() {\r\n    const me = this;\r\n    if (me.active) return html`<slot></slot>`;\r\n    me.data.url = me.data.url || me.href;\r\n    me.data.part = 'label';\r\n    return GSLinklement.generate(me.data, {})\r\n  }\r\n\r\n  get #separator() {\r\n    const me = this;\r\n    return me.nextElementSibling && me.divider ? html`<gs-icon size=\"7\" color=\"${me.color}\" css=\"mx-${me.spacing}\" name=\"${me.divider}\"></gs-icon>` : '';\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.query('a', true), e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-breadcrumb-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/TimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSTimeFormat extends GSElement {\r\n\r\n    static properties = {\r\n        interval: {reflect:true, type:Number},\r\n        locale: {reflect:true},\r\n    }\r\n\r\n    #id = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.interval = 1;\r\n        this.locale = GSUtil.locale;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const date = new Date();\r\n        return date.toLocaleTimeString(this.locale);\r\n    }    \r\n\r\n    start() {\r\n        const me = this;\r\n        if (me.interval >0 && me.#id === 0) {\r\n            me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n        } else {\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n        this.#id = 0;\r\n    }\r\n    \r\n    #update() {\r\n       requestAnimationFrame(() => this.requestUpdate());\r\n    }\r\n\r\n    static {\r\n        this.define('gs-time-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/DateFormat\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDate } from '../../base/GSDate.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSDateFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        format: {},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.locale = navigator.locale;\r\n        this.value = new Date();\r\n    }\r\n\r\n    renderUI() {\r\n        return this.result;\r\n    }    \r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.date;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get date() {\r\n        const me = this;\r\n        const o = Date.parse(me.value || new Date());\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n\r\n    static {\r\n        this.define('gs-date-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/YearFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSYearFormat extends GSElement {\r\n\r\n    static properties = {\r\n        offset: {type :Number},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n    }\r\n\r\n    renderUI() {\r\n        return this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        this.define('gs-year-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/CurrencyFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSCurrencyFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        currency: {},\r\n    }\r\n\r\n    renderUI() {\r\n        return this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-currency-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSCacheStyles } from \"../../base/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepElement class\r\n * @module components/steps/GSStepElement\r\n */\r\n\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepElement extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-primary';\r\n    static COMPLETED = 'text-bg-secondary';\r\n\r\n    static ICON_CSS = 'border rounded-circle fs-1';\r\n    static TITLE_CSS = 'mb-0 fs-6 mt-3 fw-bold';\r\n\r\n    static properties = {\r\n        title: {},\r\n        icon: {},\r\n        color: {},\r\n        iconCSS: { attribute: 'icon-css' },\r\n        titleCSS: { attribute: 'title-css' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const clazz = GSStepElement;\r\n        this.icon = clazz.INACTIVE;\r\n        this.iconCSS = clazz.ICON_CSS;\r\n        this.titleCSS = clazz.TITLE_CSS;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"step d-block w-100 text-center mb-4\"  dir=\"${ifDefined(me.direction)}\">\r\n            <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color || GSStepElement.INACTIVE}\">\r\n                    ${me.#renderIcon()}\r\n                </div>\r\n            </div>\r\n            <div class=\"step-title ${me.titleCSS}\">${me.translate(me.title)}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    #renderIcon() {\r\n        return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-step');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepsElement class\r\n * @module components/steps/GSStepsElement\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSStepStyle } from \"./StepStyle.mjs\";\r\nimport GSStepElement from './Step.mjs';\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepsElement extends GSElement {\r\n\r\n    static CSS = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n\r\n    #index = -1;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldUpdate(changedProperties) { \r\n        return this.steps.length > 0;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\"><slot></slot></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        return this.mapCSS(GSStepsElement.CSS, super.renderClass());\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get length() {\r\n        return this.steps.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length - 1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isLast) return false;\r\n        if (me.#index > - 1) me.current.color = GSStepElement.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStepElement.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStepElement.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStepElement.SELECTED;\r\n        });\r\n    }\r\n\r\n    static {\r\n        GSStepStyle.style;\r\n        this.define('gs-steps', GSStepsElement);\r\n    }\r\n\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\nexport class GSNotificationElement extends GSElement {\r\n\r\n    static TOP_START = \"position-fixed top-0 start-0\";\r\n    static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n    static TOP_END = \"position-fixed top-0 end-0\";\r\n\r\n    static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n    static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n    static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n    \r\n    static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n    static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n    static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n    static DEFAULT = GSNotificationElement.BOTTOM_END;\r\n\r\n    static properties = {\r\n        position: { reflect: true },\r\n        native: { reflect: true, type: Boolean }\r\n    };\r\n\r\n    #list = new Set();\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = 'p-3';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n            class=\"toast-container z-10k ${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        return me.mapCSS(me.#positionCSS, super.renderClass());\r\n    }    \r\n\r\n    get #positionCSS() {\r\n        const clazz = GSNotificationElement;\r\n        const val = this.position || clazz.DEFAULT;\r\n        return val.indexOf('_') > 0 && clazz[val] ? clazz[val] : val;\r\n    }\r\n\r\n    clear() {\r\n        this.queryAll('gs-toast').forEach(el => el.dismiss());\r\n    }\r\n\r\n    info(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n    }\r\n\r\n    success(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n    }\r\n\r\n    warn(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n    }\r\n\r\n    danger(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n    }\r\n\r\n    primary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n    }\r\n\r\n    secondary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n    }\r\n\r\n    dark(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n    }\r\n\r\n    light(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n    }\r\n\r\n    /**\r\n     * Main function to show notification. \r\n     * It has support for Bootstrap based and web based notifications.\r\n     * \r\n     * @async\r\n     * @param {String} title Notification title\r\n     * @param {String} message Notification message\r\n     * @param {String} css CSS styling (web only)\r\n     * @param {Boolean} closable Can user close it (web only)\r\n     * @param {Number} timeout Timeout after which to close notification  (default 2 sec)\r\n     * @param {Number} delay Timeout after which to show notification (default 1 sec)\r\n     * @param {Object} options Options for native Notification\r\n     * @returns {Promise<Notification|GSToast>}\r\n     */\r\n    async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n        if (!message) return;\r\n        const me = this;\r\n        if (me.native) {\r\n            let sts = await GSNotificationElement.requestPermission();\r\n            if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n            if (sts) return sts;\r\n        }\r\n        return me.#showWeb(title, message, css, closable, timeout, delay);\r\n    }\r\n\r\n    #showWeb(title, message, css, closable, timeout, delay) {\r\n        const me = this;\r\n        const tpl = `<gs-toast css=\"${css}\"  opened ${closable ? 'closable' : ''} timeout=\"${timeout}\"  delay=\"${delay}\" message=\"${message}\" title=\"${title}\" locale=\"${me.locale}\" ></gs-toast>`;\r\n        const el = GSDOM.parse(tpl, true);\r\n        requestAnimationFrame(async () => {\r\n            await me.#delay(delay);\r\n            const toast = me.#dialogToast;\r\n            if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n            toast.appendChild(el);\r\n        });\r\n        return el;\r\n    }\r\n\r\n    async #showNative(title, message, timeout, delay, options = {}) {\r\n        const me = this;\r\n        await me.#delay(delay);\r\n        options.body = options.body || message;\r\n        const notification = new Notification(title, options);\r\n        me.#list.add(notification);\r\n        const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n        notification.addEventListener('close', callback);\r\n        if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n        return notification;\r\n    }\r\n\r\n    get #dialogToast() {\r\n        const dlg = customElements.get('gs-dialog')?.top;\r\n        return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n    }\r\n\r\n    async #delay(delay = 0) {\r\n        if (GSUtil.isNumber(delay) && delay > 0) await GSUtil.timeout(delay * 1000);\r\n    }\r\n\r\n    #clearNative() {\r\n        const me = this;\r\n        me.notification.close();\r\n        me.owner.#list.delete(me.notification);\r\n        if (me.notification.iid) clearTimeout(me.notification.iid);\r\n    }\r\n\r\n    /**\r\n     * Clear all triggered notifications\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n        me.#list.forEach(nn => nn.close());\r\n        me.#list.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is supported\r\n     * @returns {Boolean} \r\n     */\r\n    static get isNativeSupported() {\r\n        return \"Notification\" in self;\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is allowed\r\n     * @returns {Boolean} \r\n     */\r\n    static get isGranted() {\r\n        return Notification.permission === \"granted\";\r\n    }\r\n\r\n    /**\r\n     * Request useage for browser native notification\r\n     * \r\n     * @async\r\n     * @returns {Promise<boolean>} Return granted status\r\n     */\r\n    static async requestPermission() {\r\n        const clazz = GSNotificationElement;\r\n        if (!clazz.isNativeSupported) return false;\r\n        if (!clazz.isGranted) await Notification.requestPermission();\r\n        return clazz.isGranted;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-notification');\r\n    }\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNotificationElement } from './Notification.mjs';\r\n\r\nexport class GSToastElement extends GSElement {\r\n\r\n    static properties = {\r\n        closable: { reflect: true, type: Boolean },\r\n        opened: { reflect: true, type: Boolean },\r\n        message: { reflect: true },\r\n        title: { reflect: true },\r\n        delay: { reflect: true, type: Number },\r\n        timeout: { reflect: true, type: Number }\r\n    }\r\n\r\n    #pending = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.timeout = 2;\r\n        me.delay = 2;\r\n        me.auto = true; \r\n    }\r\n\r\n    shouldUpdate(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = changedProperties.has('opened');\r\n        if (me.delay > 0 && me.opened && visibilityChange) {\r\n            me.#pending = true;\r\n            me.#pendingUpdate();\r\n        }\r\n        return me.#validParent && (!me.#pending);\r\n    }\r\n\r\n    async #pendingUpdate() {\r\n        const me = this;\r\n        await GSUtil.timeout(me.delay * 1000);\r\n        me.#pending = false;\r\n        me.requestUpdate();\r\n    }\r\n\r\n    async updated(changedProperties) {\r\n        const me = this;\r\n        if (me.timeout > 0) {\r\n            await GSUtil.timeout(me.timeout * 1000);\r\n            me.opened = false;\r\n            await GSUtil.timeout(GSDOM.SPEED);\r\n            me.remove();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return me.title ? me.#renderWithHeader() : me.#renderSimple();\r\n    }\r\n\r\n    #renderWithHeader() {\r\n        const me = this;\r\n        return html`\r\n        <div dir=\"${ifDefined(me.direction)}\"\r\n            class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n            <div class=\"toast-header\">\r\n                ${me.translate(me.title)}\r\n                <slot name=\"header\"></slot>\r\n                ${me.closable ? me.#button : ''}\r\n            </div>\r\n            <div class=\"toast-body\">\r\n                ${me.translate(me.message)}\r\n                <slot name=\"body\"></slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    #renderSimple() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.translate(me.message)}\r\n              <slot name=\"body\"></slot>\r\n              </div>\r\n              ${me.closable ? me.#button : ''}\r\n          </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': me.opened,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    dismiss() {\r\n        this.opened = false;\r\n    }\r\n\r\n    get #button() {\r\n        const me = this;\r\n        return html`<button type=\"button\" class=\"btn-close me-2 m-auto\" @click=\"${me.dismiss}\"></button>`;\r\n    }\r\n\r\n    get #validParent() {\r\n        return this.parentElement instanceof GSNotificationElement;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-toast');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller managing data tree navigation.\r\n * Controller is added to every gs-tree-node and \r\n * reacts on Tree node changes to update UI\r\n */\r\nexport class AbstractTreeController {\r\n\r\n    #host;\r\n    #node;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        host.addController(me);\r\n    }\r\n    \r\n    hostConnected() {\r\n        const me = this;\r\n        me.#node = me.#host.node;\r\n        me.#addNodeController(me);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        const me = this;\r\n        me.#removeNodeController(me);\r\n        me.#host.removeController(me);\r\n    }\r\n\r\n    // before rendering\r\n    hostUpdate() {\r\n        const me = this;\r\n        const oldNode = me.#node;\r\n        me.#node = me.#host.node;\r\n        if (oldNode != me.#node) {\r\n            me.#removeNodeController(me);\r\n            me.#addNodeController(me);\r\n        }\r\n    }\r\n\r\n    // link Tree node callbacks with controller and component\r\n    #addNodeController(controller) {\r\n        this.#host.node?.addController?.(controller);\r\n    }\r\n\r\n    // unlink Tree node callbacks with controller and component\r\n    #removeNodeController(controller) {\r\n        this.#node?.removeController?.(controller);\r\n    }\r\n\r\n    host(node) {\r\n        return node[Symbol.for('gs-element')] || this.#host;\r\n    }\r\n\r\n    match(node) {\r\n        const host = this.host(node);\r\n        return host?.node === node;\r\n    }\r\n\r\n    get store() {\r\n        return this.#host.dataController?.store;\r\n    }\r\n\r\n    requestUpdate(node) {\r\n        if (this.match(node)) this.host(node).requestUpdate();\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { AbstractTreeController } from './AbstractTreeController.mjs';\r\n\r\n/**\r\n * Controller managing data TreeNode callbacks to reflect UI.\r\n */\r\nexport class TreeController extends AbstractTreeController {\r\n\r\n    constructor(host) {\r\n        super(host);\r\n    }\r\n\r\n    #toggleState(node, state = false) {\r\n        const el = this.host(node);\r\n        if (el) el.loading = state;\r\n    }\r\n\r\n    // Tree controller callbacks\r\n    onLoad(node) {\r\n        this.#toggleState(node, true);\r\n    }\r\n\r\n    onRefresh(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onAppend(node, addedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onInsert(node, insertedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onExpand(node) {\r\n        const store = this.store;\r\n        if (store) {\r\n            store.onExpand(node);\r\n        } else {\r\n            this.requestUpdate(node);\r\n        }\r\n    }\r\n\r\n    onCollapse(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onFocusChanged(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onSelectionChanged(node, selectedNode) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onRemove(node) {\r\n        if (this.match(node)) this.host(node).remove();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../../lib.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSTreeItemElement extends GSElement {\r\n\r\n  /*\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n    */\r\n\r\n  static properties = {\r\n    loading: { state: true },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('node')) this.node[Symbol.for('gs-element')] = this;\r\n  }\r\n\r\n  updated() {\r\n    if (this.focused) this.query('a')?.focus();\r\n    this.dataset.visible = this.visible;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const opt = me.value || {};\r\n    opt.tooltip = me.translate(opt.tooltip)\r\n    opt.title = me.translate(opt.title)\r\n    const before = me.loading ? me.#renderSpinner(node.level) : me.#renderIcon(node.level);\r\n    return GSLinklement.generate(opt, me.renderClass(), before);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const opt = {\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      'user-select-none  ': true,\r\n      'border-0': me.#border ? false : true,\r\n      'gs-hide': !me.visible\r\n    };\r\n    return me.mapCSS(me.#cssFocus, me.mapCSS(me.#cssSelected, opt, me.selected && !me.multiselect), me.focused);\r\n  }\r\n\r\n  /**\r\n   * Toggle folder\r\n   */\r\n  toggle() {\r\n    this.opened ? this.close() : this.open();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open() {\r\n    this.#status(true);\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   */\r\n  close() {\r\n    this.#status(false);\r\n  }\r\n\r\n  focus(val = true) {\r\n    if (val) super.focus();\r\n    this.focused = val == true;\r\n  }\r\n\r\n  select(val = true) {\r\n    this.selected = val == true;\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.querySelector('a'), e);\r\n  }\r\n\r\n  get isLeaf() {\r\n    return this.node?.isLeaf;\r\n  }\r\n\r\n  get isFolder() {\r\n    return !this.isLeaf;\r\n  }\r\n\r\n  get key() {\r\n    return this.node?.key;\r\n  }\r\n\r\n  get value() {\r\n    return this.node?.value || {};\r\n  }\r\n\r\n  get level() {\r\n    return this.node?.level || -1;\r\n  }\r\n\r\n  get focused() {\r\n    return this.node?.focused;\r\n  }\r\n\r\n  get visible() {\r\n    const parent = this.parent;\r\n    return parent?.opened || parent?.level === -1;\r\n  }\r\n\r\n  get parent() {\r\n    return this.node?.parent;\r\n  }\r\n\r\n  get parentItem() {\r\n    const item = this.parent?.[Symbol.for('gs-element')];\r\n    return item instanceof GSTreeItemElement ? item : undefined;\r\n  }\r\n\r\n  set focused(val) {\r\n    val = val === true;\r\n    this.node.focused = val;\r\n  }\r\n\r\n  get selected() {\r\n    return this.node?.selected;\r\n  }\r\n\r\n  set selected(val) {\r\n    val = val === true;\r\n    const me = this;\r\n    if (me.isFolder && me.owner.leaf) val = false;\r\n\r\n    if (me.multiselect) {\r\n      if (val) {\r\n        me.node.selectAll();\r\n      } else {\r\n        me.node.deselectAll();\r\n      }\r\n    } else {\r\n      me.node.selected = val;\r\n    }\r\n  }\r\n\r\n  get opened() {\r\n    return this.node?.opened;\r\n  }\r\n\r\n  set opened(val) {\r\n    this.#status(val === true);\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tree');\r\n  }\r\n\r\n  get multiselect() {\r\n    return this.owner.multiselect;\r\n  }\r\n\r\n  get #cssFocus() { return this.owner.cssFocus || 'focus-ring'; }\r\n  get #cssSelected() { return this.owner.cssSelected || 'active'; }\r\n  get #cssCheck() { return this.owner.cssCheck || ''; }\r\n  get #checkColor() { return this.owner.checkColor || 'secondary'; }\r\n  get #checkColorSelected() { return this.owner.checkColorSelected || 'primary'; }\r\n\r\n  get #border() {\r\n    return this.value?.border === true || this.owner.border === true;\r\n  }\r\n\r\n  get #icon() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const data = me.value;\r\n    const ui = me.owner;\r\n    let itemIco = data.icon || ui.itemIcon;\r\n    if (node.isFolder) itemIco = node.opened ? (data.openIcon || ui.openIcon) : (data.closeIcon || ui.closeIcon);\r\n    return itemIco;\r\n  }\r\n\r\n  #renderIndent(level) {\r\n    return html`<gs-indent size=\"${level}\"></gs-indent>`;\r\n  }\r\n\r\n  #renderSpinner(level) {\r\n    return html`${this.#renderIndent(level)}<gs-spinner small></gs-spinner>`;\r\n  }\r\n\r\n  #renderIcon(level) {\r\n    return html`${this.#renderIndent(level)}${this.#renderMulti()}<gs-icon size=\"5\" name=\"${this.#icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderMulti() {\r\n    const me = this;\r\n    if (!me.multiselect) return '';\r\n    const color = me.selected ? me.#checkColorSelected : me.#checkColor;\r\n    const icon = me.node.isPartialySelected ? 'dash-square-fill' : me.selected ? 'check-square-fill' : 'square';\r\n    return html`<gs-icon size=\"6\" data-type=\"state\" \r\n                css=\"me-1 text-${color} ${me.#cssCheck}\"\r\n                name=\"${icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #status(val = false) {\r\n    const me = this;\r\n    if (me.node?.isFolder) {\r\n      me.node.opened = val;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, css, createRef, ref, repeat, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { TreeController } from './controllers/TreeController.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSTreeElement extends GSElement {\r\n\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n\r\n  static shared = {\r\n    itemIcon: { attribute: 'icon-item' },\r\n    closeIcon: { attribute: 'icon-close' },\r\n    openIcon: { attribute: 'icon-open' },\r\n    cssCheck: { attribute: 'css-check' },\r\n    cssFocus: { attribute: 'css-focus' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    checkColor: { attribute: 'check-color', ...color },\r\n    checkColorSelected: { attribute: 'check-color-selected', ...color },\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode },\r\n    border: { type: Boolean, reflect: true },\r\n    guide: { type: Boolean, reflect: true },\r\n    leaf: { type: Boolean, reflect: true },\r\n    multiselect: { type: Boolean, reflect: true },\r\n    circular: { type: Boolean, reflect: true },\r\n    ...GSTreeElement.shared\r\n  }\r\n\r\n  // GS-ITEM attributes mapping\r\n  static options = {\r\n    ...GSTreeElement.shared,\r\n    css: {},\r\n    icon: {},\r\n    color: {},\r\n    title: {},\r\n    tooltip: {},\r\n    opened: { type: Boolean },\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  #queued = false;\r\n  #listRef = createRef();\r\n\r\n  #controller = null;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.leaf = false;\r\n    me.multiselect = false;\r\n    me.data = GSDOM.toJson(me, true, true).items;\r\n    me.node = new TreeNode(null, { '#tagName': this.tagName }, null, -1);\r\n    me.itemIcon = 'file-earmark';\r\n    me.closeIcon = 'folder'; // caret-right; chevron-right\r\n    me.openIcon = 'folder2-open'; // caret-down; chevron-down\r\n    me.cssSelected = 'active'; // fw-bold\r\n    me.cssFocus = 'focus-ring';\r\n    me.node[Symbol.for('gs-element')] = me;\r\n    me.#controller = new TreeController(me);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n          class=\"treeview ${classMap(me.renderClass())}\"          \r\n          @click=\"${me.#onClick}\"\r\n          @keydown=\"${me.#onKeyDown}\"\r\n          @keyup=\"${me.#onKeyUp}\">\r\n          <div class=\"list-group\" ${ref(me.#listRef)}>\r\n          ${repeat(me.node.walk(me.node, false, false), (node) => node.key, (node) => html`\r\n            <gs-tree-item .node=\"${node}\"></gs-tree-item>\r\n          `)}\r\n          </div>    \r\n        </div>`;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data') && me.data && !me.#queued) {\r\n      me.#queued = true;\r\n      queueMicrotask(() => {\r\n        me.node.clear();\r\n        me.node.fromJSON(me.data);\r\n        me.#queued = false;\r\n        me.requestUpdate();\r\n      });\r\n    }\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('multiselect') && !this.multiselect) this.node?.deselectAll();\r\n    this.node.multi = this.multiselect;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    if (data instanceof TreeNode) {\r\n      if (data.root !== this.node) this.node = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n\r\n  next(expand = false) {\r\n    const me = this;\r\n    let item = me.nextItem;\r\n    if (!item & me.circular) item = me.#first;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (expand && me.focused?.isFolder) me.focused.open();\r\n    }\r\n    return me.focused;\r\n  }\r\n\r\n  previous(collapse = false) {\r\n    const me = this;\r\n    let item = me.previousItem;\r\n    if (!item & me.circular) item = me.#last;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (item.isFolder && collapse) item.close();\r\n    }\r\n    return me.focused;\r\n\r\n  }\r\n\r\n  expandAll() {\r\n    this.node?.expandAll();\r\n  }\r\n\r\n  collapseAll() {\r\n    this.node?.collapseAll();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open(path) {\r\n    const me = this;\r\n    me.focused?.open();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   * TODO - path navigation\r\n   */\r\n  close(path) {\r\n    const me = this;\r\n    me.focused?.close();\r\n  }\r\n\r\n  clear() {\r\n    this.node?.clear();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  reload() {\r\n    this.clear();\r\n    this.dataController?.read();\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host(this.node.selectedNode());\r\n  }\r\n\r\n  get focused() {\r\n    return this.#host(this.node.focusedNode());\r\n  }\r\n\r\n  /**\r\n   * Previous visible ge-node-item\r\n   */\r\n  get previousItem() {\r\n    return this.focused?.node.find(n => n?.visible, true, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  /**\r\n   * Next visible ge-node-item\r\n   */\r\n  get nextItem() {\r\n    return this.focused?.node.find(n => n?.visible, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  get #list() {\r\n    return this.#listRef.value;\r\n  }\r\n\r\n  get #first() {\r\n    return this.#list.firstElementChild;\r\n  }\r\n\r\n  get #last() {\r\n    return this.#list.lastElementChild;\r\n  }\r\n\r\n  #host(node) {\r\n    return node?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const isIcon = e.target.closest('gs-icon')?.dataset.type === 'state';\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!el.node) return;\r\n\r\n    const me = this;\r\n\r\n    if (me.multiselect) {\r\n      if (isIcon) el.select(!el.selected);\r\n    } else {\r\n      el.select(true);\r\n    }\r\n\r\n    const expandable = (me.multiselect && !isIcon) || (!me.multiselect);\r\n    if (el.isFolder && expandable) el.toggle();\r\n\r\n    el.focus();\r\n    el.handle(e);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    const me = this;\r\n    const el = me.focused;\r\n    if (!el) return;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n        me.next();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (el.isFolder) {\r\n          if (el.opened) {\r\n            me.close();\r\n          } else {\r\n            (el.parentItem || el)?.focus();\r\n          }\r\n        } else {\r\n          me.previous();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if (el.isFolder && !el.opened) {\r\n          me.open();\r\n        } else {\r\n          me.next();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!(el?.node)) return;\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        el.handle(e);\r\n        break;\r\n      case 'Tab':\r\n        el.focus();\r\n        break;\r\n      case 'Space':\r\n        el.select(this.multiselect ? !el.selected : true);\r\n        el.focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\n\r\nexport class GSChartElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/bootstrap-lit';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        config: {},\r\n        storage: {},\r\n        height: { type: Number },\r\n        width: { type: Number },\r\n        data: { type: Array },\r\n        options: { type: Object },\r\n    }\r\n\r\n    #canvasRef = createRef();\r\n    #chart = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.height = 0;\r\n        this.width = 0;\r\n        GSChartElement.#init();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#waitInit();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    shouldUpdate(changed) {\r\n        return GSChartElement.#isChart;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#render();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        const me = this;\r\n        if (changed.has('url') || changed.has('config')) me.#render();\r\n        if (changed.has('data') || changed.has('options')) me.#renderData(me.data, me.options);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<canvas ${ref(me.#canvasRef)} \r\n                class=\"${classMap(me.renderClass())}\"\r\n                width=\"${ifDefined(me.width > 0 ? me.width : false)}\" \r\n                height=\"${ifDefined(me.height > 0 ? me.height : false)}\" >\r\n            </canvas>`;\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.#canvasRef.value;\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    refresh() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    updateChart(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const options = await GSLoader.loadSafe(me.config, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.url, 'GET', null, true, []);\r\n        me.data = data;\r\n        me.options = options;\r\n    }\r\n\r\n    #renderData(data, options) {\r\n        const me = this;\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChartElement.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => o.data = sets.length === 1 ? data : data[i] || []);\r\n\r\n        if (me.#chart) return me.updateChart(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChartElement.#Chart(ctx, opt);\r\n    }\r\n\r\n    async #waitInit() {\r\n        if (!GSChartElement.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        this.requestUpdate();\r\n    }\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    static async #init() {\r\n        const me = GSChartElement;\r\n        if (me.URL_LIB === false) return;\r\n        if (me.#isChart || me.#initializing) return;\r\n        me.#initializing = true;\r\n        try {\r\n            const origin = GSChartElement.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);\r\n            me.#Chart = Chart;\r\n            me.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            me.#initializing = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert DOM tree into a JSON structure\r\n     * \r\n     * @param {HTMLElement} obj HTML element instance to convert\r\n     * @param {string} name DOM attribute name for object key\r\n     * @param {string} value DOM attribute name for object value\r\n     * @param {string} type DOM attribute name for object type\r\n     * @returns {object}\r\n     */\r\n    static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n        if (!(el instanceof HTMLElement)) return {};\r\n\r\n        const nameV = el.getAttribute(name);\r\n        const valV = el.getAttribute(value);\r\n        const typeV = el.getAttribute(type);\r\n\r\n        let obj = null;\r\n\r\n        switch (typeV) {\r\n            case 'array':\r\n                obj = [];\r\n                break;\r\n            case 'object':\r\n                obj = {};\r\n                break;\r\n            default:\r\n                return GSChartElement.#toType(valV, typeV);\r\n        }\r\n\r\n        const childs = Array.from(el.children);\r\n        const isArray = typeV === 'array';\r\n        const isObject = typeV === 'object';\r\n\r\n        childs.forEach(el => {\r\n            const _nam = el.getAttribute(name);\r\n            if (isArray) {\r\n                obj.push(GSChart.toJson(el, name, value, type));\r\n            } else if (isObject) {\r\n                const tmp = GSChartElement.toJson(el, name, value, type);\r\n                obj[_nam] = tmp;\r\n            } else {\r\n                const _val = el.getAttribute(value);\r\n                const _typ = el.getAttribute(type);\r\n                obj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    static #toType(val, type) {\r\n        switch (type) {\r\n            case 'boolean': return val === 'true';\r\n            case 'number': return parseFloat(val);\r\n            default: return val\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-chart');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#data = data;\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append: append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSMarkdownElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        history: { type: Number },\r\n        maxHeight: { type: Number, attribute: 'max-height' },\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        this.history = 10;\r\n        this.dynamicStyle(this.#styleID);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const me = this;\r\n        await me.#initLib();\r\n        if (globalThis.showdown) {\r\n            const opt = { tasklists: true, tables: true };\r\n            me.#converter = new globalThis.showdown.Converter(opt);\r\n            super.connectedCallback();\r\n        }\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('url')) {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url);\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const height = me.maxHeight > 0 ? `${me.maxHeight}px;` : false;\r\n        const opt = { 'max-height': height }\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        return html`<div ${ref(me.#containerRef)} class=\"overflow-auto ${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [me.#styleID] : true,\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        me.#onURL(url);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n\r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n\r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });\r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n            GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n\r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list = GSDOM.queryAll(me.#container, qry);\r\n        requestAnimationFrame(() => list.forEach(el => GSDOM.toggleClass(el, css)) );\r\n    }\r\n\r\n    #handleLinks() {\r\n        const me = this;\r\n        const links = GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n            .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')))\r\n            .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n            .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/'))\r\n            .forEach(el => GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me)));\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        if (me.#cache.length === 0 ) return me.#first;\r\n        const url = me.#cache.pop();\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if (me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdownElement.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-markdown');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSMonacoElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #editor = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = '';\r\n        this.theme = 'vs-dark';\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonacoElement.#init();\r\n        super.connectedCallback();\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.#onMonacoReady();\r\n        super.firstUpdated();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        if (changed.has('theme')) me.#onTheme(me.theme);\r\n        if (changed.has('target')) me.#onTarget(me.target);\r\n        if (changed.has('url')) me.#onURL(me.url);\r\n        if (changed.has('language')) me.#onLanguage(me.language);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#containerRef)} class=\"${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        return this.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    get owner() {\r\n        return this.parentElement;\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n\r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor?.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor?.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    static #initialized;\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonacoElement.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        const url = GSMonacoElement.URL_LIB;\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${url}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${url}'};\r\n                importScripts('${url}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({\r\n                paths: { 'vs': `${GSMonacoElement.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false }\r\n            });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static async #init() {\r\n        const me = GSMonacoElement;\r\n        if (me.#initialized) return;\r\n        me.#initEnv();\r\n        await me.#initLib();\r\n        await me.#initMonaco();\r\n        me.#initialized = true;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-monaco');\r\n    }\r\n\r\n}"],"names":["gsstyles","GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSUtil$1","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Date","Boolean","value","toString","val","trim","toLowerCase","str","obj","replace","x","g","split","reverse","join","word","toUpperCase","slice","map","i","capitalize","constructor","min","max","Math","match","dft","locale","isString","sep","numberSeparator","extractNumber","replaceAll","isNumber","url","test","startsWith","endsWith","pattern","charset","floor","random","length","navigator","language","languages","flags","RegExp","isStringEmpty","undefined","Intl","NumberFormat","format","DateTimeFormat","Array","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","separator","filter","capitalizeAll","tpl","params","names","keys","vals","values","Function","text","textArea","document","createElement","innerHTML","isStringNonEmpty","o","window","forEach","a","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","result","permissions","query","state","clipboard","writeText","readText","GSFunction$1","GSFunction","isFunction","includes","own","isFunctionDefined","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","from","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSID","prefx","next","s","l","h","charCodeAt","GSAttr$1","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","attributes","host","opt","recursive","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","children","proxify","safe","unsafe","dflt","default","multi","hasAttribute","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","first","getDay","mondayFirst","isMondayFirst","days","repeat","push","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","d","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","m","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","k","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Locale","weekInfo","firstDay","charAt","toLocaleString","size","isLowercase","hour","hour12","pop","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","getDateFormat","regex","getFormattedDateRegex","parseFormattedDate","groups","y","Y","valueOf","GSData","currency","extract","Set","b","every","index","toSorted","compareArrays","second","arr","indexOf","list","it","cfg","toType","rule","toRegex","fmt","style","fields","limit","sts","rec","filterRecord","filterSimple","filterComplex","key","filterValue","found","flt","matchDate","matchNumber","op","toLocaleLowerCase","local","toLocaleDateString","iso","toISOString","operator","sort","sortPair","ord","idx","col","v1","v2","compare","order","compareNum","compareString","isBool","compareBool","isDate","s1","s2","localeCompare","ignoreNull","isNull","seg","writeSingleToOject","tree","hasOwnProperty","r","readFromProperty","GSDOM$1","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","wrap","appendChild","link","slot","isText","tagName","FORMEL","queryAll","HTMLButtonElement","hasClass","ownClazz","inheritance","pel","HTMLSlotElement","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","parentElement","offsetParent","c","ShadowRoot","HTMLBodyElement","root","getByID","documentElement","walk","qry","proxy","res","receiver","sanitize","sanitizer","setHTML","Document","textContent","requestAnimationFrame","toggleClass","contains","unwrap","querySelectorAll","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","readFromObject","fromValue","plain","innerText","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","location","hash","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","allowElement","allowTag","fetch","ok","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","detail","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","delete","removeListener","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","for","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","rid","waitAnimationFrame","onResize","attach","GSAbortController","AbortController","super","abort","clearInterval","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","isFunctions","getFilter","exec","create","GSDynamicStyle","deleteRule","getRule","setRule","sync","insertRule","updateRule","isImportant","setProperty","source","dynamicStyleSheetByID","dynamicStyleSheet","gsClass","dynamicRule","dynamicRuleByID","dynamicStyle","assign","dynamicStyleByID","GSCacheStyles","store","dynamic","styles","adopt","adoptedId","GSAdoptedEngine","now","preload","timerID","setInterval","sheets","adoptable","adoptSheet","update","scheduled","sorted","ID","cssText","monitorAttributes","ownerNode","adoptStyle","disconnect","mutationList","onAttributeChange","attributeFilter","attributeOldValue","HTMLLinkElement","rel","as","HTMLStyleElement","then","adoptLink","registerFilter","onMonitorFilter","onMonitorConnect","onMonitorDisconnect","init","GSEnvironment","isMobile","userAgentData","mobile","userAgent","isDesktop","isWebkit","protocol","strVal","brands","brand","strAgt","isEdge","isDevice","platform","screen","otype","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","ps","p","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","querySelector","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSItem","validate","tags","collect","definition","GSLoader","GS_TEMPLATE_URL","origin","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","searchParams","append","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GS_LOCALIZATION_LANGUAGE","lang","GSLocalization","GSLocalizationImpl","queue","queued","GS_LOCALIZATION_URL","translate","deft","getLanguage","texthash","reset","promises","loadWait","sequential","Pragma","isDefault","hk","details","GSPopper","asRect","sx","scrollX","sy","scrollY","top","bottom","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","arrow","pos","fromPlacement","isPlacementValid","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","aopt","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","applyDynamicStyle","GSQueryCSS","property","object","GSQuery","instance","GSTemplateCache","template","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTheme","switch","theme","STORAGE","htmlEl","bsTheme","matchMedia","q","URLSearchParams","onTheme","settings","getSystemDefaultTheme","darkMode","lightMode","setup","GSAttributeHandler","anchor","call","inject","swap","trigger","calls","toggles","triggers","handle","targets","handleTarget","handleBinding","handleAction","handleAttribute","handleProperty","handleToggle","handleTrigger","handleCall","handleExec","handleSwap","handleInject","handleTemplate","field","form","isForm","HTMLFormElement","isField","isFormElement","toObject","isAttributeJSON","jsonToAttr","toggleAttribute","isPropertyJSON","properties","toggleProperty","tout","symbol","toHTML","applyContent","applyTemplate","clone","insertAdjacent","deattach","DEFINITION","Stack","item","unshift","peek","isEmpty","Queue","enqueue","dequeue","BinaryTreeNode","isLeaf","hasChildren","isRoot","BinaryTree","inOrderTraversal","postOrderTraversal","preOrderTraversal","insert","parentNodeKey","canInsertLeft","canInsertRight","find","Node","previous","release","toJSON","DoublyLinkedList","tail","previousNode","insertAt","splice","insertFirst","insertLast","getAt","removeAt","acc","toArray","iterator","isInvalid","isInvalidIndex","isInteger","Tree","folder","leaf","up","levelID","nodeID","isFolder","hasMore","firstChild","lastChild","down","previousSibling","inclusive","flat","iterate","filtered","Ye","newOne","findByKey","flatten","fromJSON","raw","hasParent","GSReadWriteRegistryImpl","handlers","INTERNAL","addHandler","removeHandler","getHandler","newHandler","enabled","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","processors","enable","addProcessor","processor","removeProcessor","disable","isRegistered","notify","onRead","postRead","onWrite","postWrite","GSReadWrite","reader","writer","mode","skip","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCachedReader","reformat","records","postFilter","sortData","filterData","search","read","TreeNode","opened","focused","selected","focusedNode","selectedNode","controllers","select","focus","open","addController","removeController","visible","expand","collapse","changed","onFocusChanged","onSelectionChanged","isPartialySelected","selectAll","deselectAll","selectionFlag","onSelectAll","onDeselectAll","selectedNodes","refresh","onRefresh","loading","onLoad","expandAll","collapseAll","expanded","collapsed","onExpand","onCollapse","onAppend","onInsert","GSTreeReader","litUrl","GS_LIT_URL","litModule","ReactiveController","ReactiveElement","AsyncDirective","AsyncReplaceDirective","CSSResult","Directive","LitElement","PartType","TemplateResultType","UnsafeHTMLDirective","UntilDirective","_$LE","_$LH","adoptStyles","asyncAppend","asyncReplace","choose","classMap","clearPart","createRef","defaultConverter","directive","getCommittedValue","getCompatibleStyle","getDirectiveClass","guard","ifDefined","insertPart","isCompiledTemplateResult","isDirectiveResult","isPrimitive","isServer","isSingleExpression","isTemplateResult","keyed","literal","live","noChange","notEqual","nothing","range","ref","removePart","render","setChildPartValue","setCommittedValue","staticHtml","staticSvg","styleMap","supportsAdoptingStyleSheets","svg","templateContent","unsafeCSS","unsafeHTML","unsafeSVG","unsafeStatic","until","when","withStatic","gsAction","gsAnchor","gsAttribute","gsCall","gsExec","gsInject","gsProperty","gsSwap","gsTarget","gsTemplate","gsToggle","gsTrigger","gsValue","DatasetDirective","part","srcset","DOMStringMap","remap","hasOwn","descriptors","getOwnPropertyDescriptors","listProperties","listGetters","getPrototypeOf","literalTemplate","listGettable","cssMap","CssMapDirective","partInfo","ATTRIBUTE","strings","classInfo","_previousClasses","_staticClasses","notEmpty","newVal","oldVal","numGT0","numGE0","numLT0","numLE0","ButtonTypes","buttonType","hasChanged","is","ColorTypes","color","EnvironmentTypes","environment","InputTypes","inputType","NavTypes","nav","OrientationTypes","PlacementTypes","PositionTypes","ProtocolTypes","SizeTypes","normal","medium","small","large","big","stringArrayConverter","fromAttribute","toAttribute","AdoptedController","hostConnected","hostDisconnected","isGlobal","rules","removeRule","renderRoot","onAdopted","AttributeController","eventName","onNotify","isFormEl","ContentController","refs","removeContent","hostUpdated","isSelf","contentRef","options","renderOptions","renderBefore","previousElementSibling","keep","DataController","readCallback","writeCallback","errorCallback","write","storeID","storage","firstPage","page","lastPage","nextPage","prevPage","onDataRead","onDataWrite","onDataError","ElementMoveController","attached","cursorX","cursorY","mouseUpCallback","mouseDownCallback","mouseMoveCallback","onMouseUp","onMouseDown","onMouseMove","attachEvent","removeEvent","onStartMove","onEndMove","onCursorRight","onCursorLeft","onCursorUp","onCursorDown","ElementNavigationController","multiselect","circular","multiple","onKeyUp","onClick","onFocusIn","onFocusOut","lastElementChild","blur","onSelected","onDeselected","onFocused","isNavigable","composedPath","OrientationController","hosts","requestUpdate","onOrientation","ThemeController","hostUpdate","updateTheme","updateThemeExt","TemplateController","lastRef","injected","request","templateInjected","templateRef","schedule","tasks","task","process","finally","SlotController","onSlotChanged","assignedElements","onSlotInjected","LocalizationController","updateLanguage","updateLanguageExt","langauge","onLanguage","GSElement","rtl","reflect","hide","rounded","bordered","onready","os","browser","adopted","uiHandler","localization","dataController","slotController","themes","attributeChangedCallback","oldValue","newValue","connectedCallback","isBindable","binded","disconnectedCallback","deattachListeners","createRenderRoot","firstUpdated","willUpdate","relink","isAllowRender","renderUI","renderTemplate","renderClass","border","mapCSS","flag","waitEvent","direction","isFocused","isValidEnvironment","isValidBrowser","isValidOS","isValidProtocol","isValidOrientation","definitions","mergeObjects","elementStyles","cssRule","setCSSProperty","GSAccordionElement","autoclose","cssItem","cssHeader","cssBody","renderItems","close","message","isItemCloser","GSAccordionItemElement","shouldUpdate","changedProperties","component","GSAlertElement","closed","closable","pause","interval","handleBillboard","updated","show","isBillboard","button","billboard","GSButtonElement","toggleColor","autofocus","outline","toggling","icon","tooltip","refEl","isReset","isSubmit","submit","isReest","GSCalendarElement","arrovPrev","arrowNext","cssDays","cssToday","cssWeeks","cssMonth","cssYear","cssNav","cssSelected","minYear","maxYear","arrowPrev","previousMonth","nextMonth","previousYear","nextYear","formatted","updateTarget","week","dayList","months","monthsHTML","yearHTML","onKey","onDay","daysHTML","tgt","HTMLInputElement","valueAsDate","isToday","today","c1","c2","current","monthList","onMonth","onYear","selectedIndex","GSCardElement","imageStyle","overlay","align","image","subtitle","footer","header","colorText","colorBack","colorBorder","cssTitle","cssSubtitle","cssFooter","cssImage","styleID","isVertical","renderVertical","renderHorizontal","imageTop","imageBottom","isBefore","startClass","endClass","startHtml","images","endHtml","isHorizontal","imageSlot","GSCenterElement","GSMenuElement","auto","dark","menuRef","closeSubmenus","updatePosition","onMouseOver","onMouseLeave","submenu","dropend","dropstart","popup","caller","isMouseOrPointerEvent","renderSubmenu","renderHeader","renderMenu","renderDivider","menu","toSubmenu","menuItem","isSubmenu","innerWidth","GSContextElement","attachTarget","assignedSlot","onPopup","GSCompareElement","background","before","after","elRef","clipRef","slideRef","mouseController","elPosition","splitter","onDoubleClick","isAuto","pct","isFixed","slider","clip","GSControllerElement","module","changes","initialize","GSCopyrightElement","company","isCompany","isYear","GSDataHandler","autoload","autorefresh","config","handler","lifoReadRef","initLIFO","PROPERTIES","updateHandler","formatSort","formatFilter","isDebug","gsDebug","formated","verifyHandler","save","callOnceLifo","lifoReadRefCallback","lifoRead","GSDialogElement","standard","escapable","cancelText","confirmText","minWidth","buttonAlign","iconCancel","iconConfirm","colorCancel","colorConfirm","cssCancel","cssConfirm","cssContent","dialogRef","btnConfirmRef","btnCancelRef","CSS","TITLE_CSS","HEADER_CSS","ALIGN","CANCEL","CONFIRM","updateStack","STACK","dialog","showModal","focusable","renderConfirm","onConfirm","renderCancel","onCancel","renderFooter","onForm","onSubmit","info","confirm","prompt","forms","f","tab","btnConfirm","btnCancel","QUERY_INPUT","isVisible","stack","GSDrawerElement","backdrop","scroll","fingers","transition","duration","cssHead","onLeave","onEnter","hasHeader","headSlot","GSDropdownElement","renderButton","buttonClass","btn","GSEmailElement","user","domain","dev","updateUser","updateDomain","GSFormElement","formRef","onChange","elements","inputs","fromObject","disableInput","enableInput","reportValidity","defaultValue","onFieldChange","GSFormGroupElement","layout","description","label","placeholder","mask","step","minLength","maxLength","autoid","autocopy","autoselect","autocapitalize","autocomplete","reveal","readonly","required","cellField","cellLabel","cssLabel","cssField","inputRef","ouptutRef","patterns","validateAllowed","ICON","CSS_LABEL","CSS_LABEL_CELL","onRange","formElements","renderFloating","cssCheck","renderInput","renderOutput","renderLabel","renderInfo","renderLabelWrap","renderField","renderIcon","isIcon","CSS_ICON","renderTooltip","isRange","idattr","isFieldset","radioLayout","fieldSet","inputHTML","fld","vertical","isSwitch","onBlur","isCheckable","isFloating","setCustomValidity","slots","tagList","isCheck","isRadio","isChecked","isPassword","isEmail","isURL","GSFormPanelElement","formStorage","GSGroupElement","initData","renderWrappedUI","renderWrappedClass","getName","allProperties","GSIconElement","superColor","fs","GSIndentElement","multiplier","numdef","GSImageElement","invert","grayscale","brightness","contrast","saturate","hue","sepia","alt","imageRef","complete","renderStyle","buildFilter","GSLayoutElement","resizable","autofit","vPos","hPos","els","dyncss","horizontal","lev","tplEl","elementTemplate","tc","dir","did","panelCSS","panelStyle","resize","grow","vpos","hpos","GSLinklement","ping","GSListItemElement","selectable","generated","initial","renderFirst","renderSecond","itemCSS","itemStatusCSS","renderText","activeCSS","cssActive","inactiveCSS","cssInactive","GSListElement","GSNavItemElement","itemsCSS","isNav","buttonCSS","buildCSS","cssButton","navType","GSNavElement","isTab","GSOverlayElement","autoremove","radius","styleID2","innerHeight","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathStr","createSVGPathString","fill","pointerEvents","cursor","windowX","windowY","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPagerElement","pages","labelFirst","labelLast","labelNext","labelPrevious","half","renderPrevious","renderItem","renderNext","renderLast","pagination","decodeHTMLEntities","toTarget","ctrl","GSPopupElement","wMin","wMax","hMin","hMax","panelRef","attachTaraget","onAuto","reposition","popupFixed","panel","Event","overflowH","overflowV","GSProgressElement","updateStyle","percentage","onKeySelect","increase","decrease","trunc","old","GSSpinnerElement","pulsar","GSSplitterElement","styleTGT","cssUpdate","lock","updateMouse","stop","isPreceeding","isStyleValue","styleDynamic","lockable","csize","cls","gsSplitter","updateX","updateY","dx","GSTabItemElement","updateCSS","tabCSS","GSTabPanelElement","GSTabGroupElement","findPanel","tabEl","isAfter","renderPanels","GSTableElement","filterType","cssFilter","colorHead","colorSelect","colorSort","stripedColumn","divider","striped","hover","grid","borderless","columns","selections","datacolumn","multisort","protected","sortable","sortOrder","headColor","CELLS","table","stripedColumns","renderFilters","onSort","entry","renderColumn","onSelect","renderRecord","renderEmpty","columnType","columType","input","valueAt","row","cell","cfgType","string","timestamp","dataType","renderFilter","onFilter","icons","sortType","column","getElementIndex","prepareSorter","isComplex","tr","isSelected","GSTagElement","converter","appendable","closeColor","cssClose","cssTag","dataListRef","renderTags","onInput","renderList","updateTag","KEYS","srcElement","removeTag","addTag","isMax","datalist","optEl","tagEl","renderTag","tagClass","btnClass","badge","GSTextElement","GSTooltipElement","arrowRef","arrowStyle","attachEvents","fade","arrowEl","panelEl","refLocal","refGlobal","GSTemplateElement","CopySelectController","clickCallback","copyCallback","onCopy","writeToClipboard","MaskController","_","back","prev","keyDownCallback","inputCallback","focusCallback","blurCallback","onFocus","initRules","j","builSlots","findIndex","builAccept","toPattern","lastIndex","isMatch","setSelectionRange","substring","selectionStart","selectionEnd","maskType","clean","chars","masks","special","NumberController","onNumberInput","PasswordController","revealing","keyUpCallback","isReveal","altKey","TextController","updateText","ListController","monitorCallback","changeCallback","onMonitor","onDataChange","hasUpdated","strict","isInList","togleEl","dataGroup","isButtonElement","defaultPropertyDeclaration","attributeToPropertyMap","prepare","elementProperties","finalize","finalized","prepareFn","getOwnPropertySymbols","superCtor","attributeNameForProperty","ReactiveInput","reflectingProperties","instanceProperties","updatePromise","reflectingProperty","isUpdatePending","observedAttributes","initializer","initializers","props","propKeys","getOwnPropertyNames","createProperty","noAccessor","descriptor","getPropertyDescriptor","prototype","configurable","enumerable","enableUpdating","attributeToProperty","requestedUpdate","getUpdateComplete","scheduleUpdate","performUpdate","propertyToAttribute","markUpdated","updateComplete","getPropertyOptions","changeProperty","enqueueUpdate","elementProps","wrapped","didUpdate","ctor","propName","attrValue","saveInstanceProperties","GSComboExt","HTMLSelectElement","setIf","objToHTML","GSDataListExt","HTMLDataListElement","GSInputElement","copyselect","maskController","passwordController","numberController","textController","listController","GSBreadcrumbElement","spacing","updateChildren","$text","GSBreadcrumbItemElement","generate","GSTimeFormat","toLocaleTimeString","GSDateFormat","GSYearFormat","GSCurrencyFormat","GSStepStyle","GSStepElement","iconCSS","titleCSS","INACTIVE","ICON_CSS","GSStepsElement","steps","isFirst","isLast","COMPLETED","SELECTED","GSNotificationElement","BOTTOM_END","positionCSS","DEFAULT","dismiss","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","dlg","nn","isNativeSupported","isGranted","permission","GSToastElement","pending","visibilityChange","pendingUpdate","validParent","SPEED","renderWithHeader","renderSimple","AbstractTreeController","addNodeController","removeNodeController","oldNode","TreeController","toggleState","addedNode","insertedNode","onRemove","GSTreeItemElement","renderSpinner","cssFocus","status","parentItem","checkColor","checkColorSelected","ui","itemIco","itemIcon","openIcon","closeIcon","renderIndent","renderMulti","GSTreeElement","guide","shared","listRef","nextItem","previousItem","reload","expandable","GSChartElement","URL_LIB","GS_URL_CHART","canvasRef","chart","waitInit","destroy","isChart","renderData","canvas","updateChart","div","toBase64Image","quality","sets","datasets","ctx","getContext","Chart","initializing","registerables","nameV","valV","typeV","childs","isObject","_nam","GSChart","_val","_typ","GSHighlightElement","GS_URL_HLJS","codeRef","onTarget","onURL","onHighlight","hasLangauge","highlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMarkdownElement","GS_URL_MARKDOWN","history","maxHeight","containerRef","initLib","showdown","tasklists","tables","Converter","toCache","fromCache","container","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","script","GSMonacoElement","GS_URL_MONACO","editor","onMonacoReady","monaco","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","automaticLayout","minimap","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","paths","vs","initialized","initEnv","initMonaco"],"mappings":"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"}