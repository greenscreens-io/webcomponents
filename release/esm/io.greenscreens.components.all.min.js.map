{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/GSVersion.mjs","../../modules/base/style.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSID.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSDynamicStyle.mjs","../../modules/base/GSCacheStyles.mjs","../../modules/base/GSAdoptedEngine.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSTemplateCache.mjs","../../modules/base/GSAttributeHandler.mjs","../../modules/base/GSBeep.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSLocalization.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSRouter.mjs","../../modules/base/GSTheme.mjs","../../modules/helpers/BinaryTree.mjs","../../modules/helpers/DoublyLinkedList.mjs","../../modules/helpers/LinkedList.mjs","../../modules/helpers/Stack.mjs","../../modules/helpers/Queue.mjs","../../modules/helpers/Tree.mjs","../../modules/data/DataSelector.mjs","../../modules/data/ReadWriteRegistry.mjs","../../modules/data/AbstractReadWrite.mjs","../../modules/data/ReadWrite.mjs","../../modules/data/CachedReadWrite.mjs","../../modules/data/TreeNode.mjs","../../modules/data/TreeReader.mjs","../../modules/lib1.mjs","../../modules/directives/dataset.mjs","../../modules/directives/literal.mjs","../../modules/directives/css-map.mjs","../../modules/properties/verificator.mjs","../../modules/properties/autocapitalize.mjs","../../modules/properties/autocomplete.mjs","../../modules/properties/autocorrect.mjs","../../modules/properties/buttonType.mjs","../../modules/properties/color.mjs","../../modules/properties/environment.mjs","../../modules/properties/inputType.mjs","../../modules/properties/nav.mjs","../../modules/properties/orientation.mjs","../../modules/properties/placement.mjs","../../modules/properties/position.mjs","../../modules/properties/protocol.mjs","../../modules/properties/size.mjs","../../modules/properties/arrayConverter.mjs","../../modules/controllers/AdoptedController.mjs","../../modules/controllers/AttributeController.mjs","../../modules/controllers/ContentController.mjs","../../modules/controllers/DataController.mjs","../../modules/controllers/ElementMoveController.mjs","../../modules/controllers/LocalizationController.mjs","../../modules/controllers/OrientationController.mjs","../../modules/controllers/TemplateController.mjs","../../modules/controllers/ThemeController.mjs","../../modules/controllers/SlotController.mjs","../../modules/GSElement.mjs","../../modules/controllers/ElementNavigationController.mjs","../../modules/controllers/GroupController.mjs","../../modules/components/Router.mjs","../../modules/components/Accordion.mjs","../../modules/components/AccordionItem.mjs","../../modules/components/Alert.mjs","../../modules/components/Button.mjs","../../modules/components/Calendar.mjs","../../modules/components/Card.mjs","../../modules/components/Center.mjs","../../modules/components/Menu.mjs","../../modules/components/Context.mjs","../../modules/components/Compare.mjs","../../modules/components/Controller.mjs","../../modules/components/Copyright.mjs","../../modules/components/DataHandler.mjs","../../modules/components/Dialog.mjs","../../modules/components/Drawer.mjs","../../modules/components/Dropdown.mjs","../../modules/components/Email.mjs","../../modules/components/Form.mjs","../../modules/components/FormGroup.mjs","../../modules/components/FormPanel.mjs","../../modules/components/Group.mjs","../../modules/components/Icon.mjs","../../modules/components/Indent.mjs","../../modules/components/Image.mjs","../../modules/components/Layout.mjs","../../modules/components/Link.mjs","../../modules/components/List.mjs","../../modules/components/ListItem.mjs","../../modules/components/Mouse.mjs","../../modules/components/Movable.mjs","../../modules/components/Nav.mjs","../../modules/components/NavItem.mjs","../../modules/components/Overlay.mjs","../../modules/components/Pager.mjs","../../modules/components/Popup.mjs","../../modules/components/Popover.mjs","../../modules/components/Progress.mjs","../../modules/components/Spinner.mjs","../../modules/components/Splitter.mjs","../../modules/components/tab/TabHeader.mjs","../../modules/components/tab/TabPanel.mjs","../../modules/components/tab/TabGroup.mjs","../../modules/components/Table.mjs","../../modules/components/Tag.mjs","../../modules/components/Text.mjs","../../modules/components/Tooltip.mjs","../../modules/components/Template.mjs","../../modules/components/ext/controllers/CopySelectController.mjs","../../modules/components/ext/controllers/MaskController.mjs","../../modules/components/ext/controllers/MultipatternController.mjs","../../modules/components/ext/controllers/NumberController.mjs","../../modules/components/ext/controllers/PasswordController.mjs","../../modules/components/ext/controllers/TextController.mjs","../../modules/components/ext/controllers/InteractiveController.mjs","../../modules/components/ext/controllers/ComboController.mjs","../../modules/components/ext/controllers/ListController.mjs","../../modules/components/ext/controllers/ValidityController.mjs","../../modules/components/ext/EventsMixin.mjs","../../modules/components/ext/controllers/FormController.mjs","../../modules/components/ext/ControllerHandler.mjs","../../modules/components/ext/GSButtonElement.mjs","../../modules/components/ext/GSInputElement.mjs","../../modules/components/ext/GSTextAreaElement.mjs","../../modules/components/ext/GSSelectElement.mjs","../../modules/components/ext/GSDataListElement.mjs","../../modules/components/ext/GSFormElement.mjs","../../modules/components/breadcrumb/Breadcrumb.mjs","../../modules/components/breadcrumb/BreadcrumbItem.mjs","../../modules/components/filebox/Attachment.mjs","../../modules/components/filebox/FileBox.mjs","../../modules/components/intl/TimeFormat.mjs","../../modules/components/intl/DateFormat.mjs","../../modules/components/intl/YearFormat.mjs","../../modules/components/intl/CurrencyFormat.mjs","../../modules/components/steps/StepStyle.mjs","../../modules/components/steps/Step.mjs","../../modules/components/steps/Steps.mjs","../../modules/components/toast/Notification.mjs","../../modules/components/toast/Toast.mjs","../../modules/components/tree/controllers/AbstractTreeController.mjs","../../modules/components/tree/controllers/TreeController.mjs","../../modules/components/tree/TreeItem.mjs","../../modules/components/tree/Tree.mjs","../../modules/components/ServiceWorkker.mjs","../../modules/extra/Chart.mjs","../../modules/extra/Highlight.mjs","../../modules/extra/Markdown.mjs","../../modules/extra/Monaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport class GSVersion {\r\n\r\n    static get version() {\r\n        return '2.0.0';\r\n    }\r\n\r\n    static get build() {\r\n        return 2025.0131;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Required CSS Styles for WebCompoents, regardless Bootstrap CSS.\r\n */\r\nexport const gsstyles = `.z-10k{z-index:10000 !important;}\r\n.gs-hide,gs-item{display:none !important;}\r\ngs-popover,gs-tooltip{position:fixed;top:0px;left:0px;},\r\n.d-contents{display:contents;}';\r\ngs-button-group::part(.btn-group){box-shadow:rgba(72, 72, 72, 0.4) 0px 0.125rem 0.25rem;}\r\ngs-group>gs-button::part(button) {box-shadow: none;}\r\ngs-group>gs-button:not(:last-child)::part(button) {border-top-right-radius: 0;border-bottom-right-radius: 0;}\r\ngs-group>gs-button:not(:first-child)::part(button) {margin-left: calc(var(--bs-border-width) * -5);border-top-left-radius: 0;border-bottom-left-radius: 0;}\r\ngs-layout {width: 100%;height: 100%;}\r\ngs-split-panel{flex: 1 1 auto !important;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]:before {content: attr(data-value);display: inline-block;position: absolute;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {visibility: hidden;display: inline-block;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-calendar-picker-indicator {position: relative;top: 0px;right: 0;color: black;opacity: 0.5;}\r\n`;","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => {\r\n\t\tconst v = GSUtil.normalize(val).toLowerCase();\r\n\t\treturn v === 'true' || v === '1';\r\n\t};\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic isPrimitive = (o) => !Array.isArray(o) && (this.isBool(o) || this.isDate(o) || this.isNumber(o) || this.isString(o));\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic nonNull = value => !GSUtil.isNull(value);\r\n\r\n\tstatic asArray(val) {\r\n\t\treturn Array.isArray(val) ? val : [val];\r\n\t}\r\n\r\n\tstatic asNum(val, dft = 0, language) {\r\n\t\tlanguage = language || GSUtil.language;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(language);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default language\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get language() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(language) {\r\n\t\treturn Intl.NumberFormat(language).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(language) {\r\n\t\treturn Intl.NumberFormat(language).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Check if number is in range, inclusive\r\n\t * @param {Number} x \r\n\t * @param {Number} min \r\n\t * @param {Number} max \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic inRange(x = 0, min = 0, max = 0) {\r\n\t\treturn x >= min && x <= max;\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(language = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(language).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\t\t\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t\t\"\\n\": '<br>',\r\n\t\t\t\"\\r\": '<br>',\r\n\t\t\t\"\\t\": '&nbsp;&nbsp;&nbsp;&nbsp;',\r\n\t\t\t' ': '&nbsp;',\r\n\t\t\t'\\\\': '&#x5C;',\r\n\t\t\t'`': '&#x60;'\r\n\t\t};\r\n\t\tconst reg = new RegExp(`[${Object.keys(map).join('')}]`, 'ig');\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\t\t\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() === right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tif (time <= 0) return;\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to write to the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async writeToClipboard(value = '') {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-write\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.writeText(value);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to read from the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async readFromClipboard() {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-read\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.readText();\r\n\t\t}\r\n\t\treturn '';\r\n\t}\t\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type generator function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunctionGenerator(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const GeneratorFunction = (function* () { }).constructor;\r\n        return fn instanceof GeneratorFunction;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Debounce function makes sure that code is only triggered once per user input. \r\n     * Search box suggestions, text-field auto-saves, and eliminating double-button clicks are all use cases for debounce.\r\n     * @param {Function} func \r\n     * @param {Number} timeout \r\n     * @returns {Function}\r\n     */\r\n    static debounce(func, timeout = 300, leading = false) {\r\n        return leading ? GSFunction.#debounceLifo(func, timeout) : GSFunction.#debounceFifo(func, timeout);\r\n    }\r\n\r\n    /**\r\n     * Call only last function call within timeout period.\r\n     * @param {Function} func \r\n     * @param {Number} timeout \r\n     * @returns {Function}\r\n     */\r\n    static #debounceLifo(func, timeout = 300) {\r\n        let timer;\r\n        return (...args) => {\r\n            clearTimeout(timer);\r\n            timer = setTimeout(() => { func.apply(this, args); }, timeout);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Call only first function call within timeout period.\r\n     * @param {*} func \r\n     * @param {*} timeout \r\n     * @returns \r\n     */\r\n    static #debounceFifo(func, timeout = 300) {\r\n        let timer;\r\n        return (...args) => {\r\n            if (!timer) {\r\n                func.apply(this, args);\r\n            }\r\n            clearTimeout(timer);\r\n            timer = setTimeout(() => {\r\n                timer = undefined;\r\n            }, timeout);\r\n        };\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${++this.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\nconst isProxy = Symbol(\"isProxy\")\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribute name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.asBool(val)) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return val;\r\n\t\tconst v = el.getAttribute(name) ?? val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '{}') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.toJson(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\t//GSAttr.toggle(el, name, GSUtil.asBool(val));\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string} val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '{}') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {})\r\n\t\t.filter(kv => kv[0] != 'items')\r\n\t\t.filter(kv => kv[0][0] != '#')\r\n\t\t.filter(kv => kv[0][0] != '$')\r\n\t\t.map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @param {HTMLElement} host The host element to proxify\r\n\t * @param {Object} [opt={}] Options object describing attribute mapping and types\r\n\t * @param {String} [recursive='items'] Property name for recursive proxification of children\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop] = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop];\r\n\t\t\t\tif (prop === 'isProxy') return isProxy;\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\t\t\t\t\r\n\t\t\t\tconst tmp = opt; // Object.hasOwn(opt, prop) ? opt : target;\r\n\t\t\t\t\r\n\t\t\t\tconst type = tmp[prop]?.type;\r\n\t\t\t\tconst safe = tmp[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = tmp[prop]?.default;\r\n\t\t\t\tconst multi = tmp[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = tmp[prop]?.attribute || prop;\r\n\t\t\t\tlet val = target.hasAttribute(prop) ? GSAttr.get(target, prop) : target[prop];\r\n\r\n\t\t\t\tif (GSFunction.isFunction(val)) return val.bind(target);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computedStyleMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        if (GSCSSMap.#modern) return GSUtil.asNum(val?.value);\r\n        const num = val?.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift();\r\n        return GSUtil.asNum(num);\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #language = navigator.language;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, language) {\r\n        const me = this;\r\n        if (language) me.language = language;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const dayOffset = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + dayOffset).split(' ');\r\n        /*\r\n        const emptyDays =  first === 0 ? 0 : first + dayOffset;\r\n        const days = Array.from({ length: emptyDays }, () => '');\r\n        */\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get language() {\r\n        return this.#language;\r\n    }\r\n\r\n    set language(val) {\r\n        this.#language = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, language = navigator.language, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.language = language;\r\n        tmp.setDate(1);\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, language = navigator.language, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.language = language;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#language)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#language, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, language) {\r\n        format = format || GSUtil.getDateFormat(language);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    /**\r\n     * Check if a year is a leap year\r\n     * @param {number} year \r\n     * @returns {Boolean}\r\n     */\r\n    static isLeapYear(year) {\r\n        return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, language: {}, extract: {}, key: { type: Boolean } };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static unique(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * TODO: improve https://www.geeksforgeeks.org/how-to-convert-array-of-objects-into-unique-array-of-objects-in-javascript/\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @param {Boolean} advanced Used when data is Object instead of string\r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = [], advanced = false) {\r\n        if (advanced) {\r\n            return [...new Set([...first, ...second].map(JSON.stringify))].map(JSON.parse);\r\n        }\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', language:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const language = cfg.language || GSUtil.language;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        // intercept overrides; used b GS-TABLE cell Ui remapping\r\n        if (cfg.childElementCount > 0) {\r\n            const el = cfg.querySelector(`gs-item[value=\"${val}\"]`);\r\n            return GSAttr.get(el, \"map\", val);\r\n        }\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                if (GSUtil.isNumber(val)) return new GSDate(val).format(cfg.format, language);\r\n                if (cfg.format) return GSDate.parse(val, cfg.format, language);\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, language);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, language) : val;\r\n            case 'string':\r\n            case 'text':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(language);\r\n                    return new GSDate(val).format(fmt, language);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, language);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(language, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static *filter(data = [], filter = [], fields, limit = 0) {\r\n        let cnt = 0;\r\n        let sts = false;\r\n        for (let rec of data) {\r\n            sts = GSData.filterRecord(rec, filter, fields);\r\n            if (sts) {\r\n                cnt++\r\n                yield rec;\r\n            }\r\n            if (limit > 0 && cnt >= limit) break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields, limit = 0) {\r\n        data = Array.isArray(data) ? data : [data];\r\n        filter = Array.isArray(filter) ? filter : [filter];\r\n        if (filter.length === 0) return data;\r\n        return [...GSData.filter(data, filter, fields, limit)];\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = GSUtil.isPrimitive(filter);\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter, fields);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (GSData.filterValue(value, filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter, fields) {\r\n\r\n        let primitive = false;\r\n        let found = true;\r\n        let value = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            primitive = GSUtil.isPrimitive(flt);\r\n            if (primitive) {\r\n                found = found && GSData.filterSimple(rec, flt, fields);\r\n            } else {\r\n                value = rec[flt.name];\r\n                if (flt.name) {\r\n                    found = found && GSData.filterValue(value, flt)\r\n                } else {\r\n                    found = found && GSData.filterSimple(rec, flt.value, fields);\r\n                }\r\n            }\r\n\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static filterValue(value, filter) {\r\n        const toCheck = GSUtil.isPrimitive(filter) ? filter : filter.value;\r\n        if (GSUtil.isDate(value)) {\r\n            return GSData.matchDate(value, filter);\r\n        } else if (GSUtil.isNumber(value)) {\r\n            return GSData.matchNumber(value, GSUtil.asNum(toCheck, null), filter.op);\r\n        } else {\r\n            return (GSUtil.normalize(value)).toLocaleLowerCase().includes(GSUtil.normalize(toCheck).toLocaleLowerCase());\r\n        }\r\n    }\r\n\r\n    static matchDate(val, filter, language) {\r\n\r\n        if (typeof filter === 'string') {\r\n            const value = '' + filter;\r\n            const local = val.toLocaleDateString(language);\r\n            const iso = val.toISOString();\r\n            return local.includes(value) || iso.includes(value);\r\n        }\r\n\r\n        if (!filter.value) return false;\r\n\r\n        const qry = filter.value instanceof Date ? 'date' : typeof filter.value;\r\n\r\n        switch (qry) {\r\n            case 'number':\r\n                return GSData.matchNumber(val.getTime(), filter.value, filter.op);\r\n            case 'date':\r\n                return GSData.matchNumber(val.getTime(), filter.value.getTime(), filter.op);\r\n        }\r\n\r\n        return GSData.matchDate(val, '' + filter.value, filter.language);\r\n    }\r\n\r\n    /**\r\n     * Match number by operator\r\n     * @param {*} value \r\n     * @param {*} query \r\n     * @param {*} operator \r\n     */\r\n    static matchNumber(value = 0, query = 0, operator = 'eq') {\r\n        switch (operator) {\r\n            case 'gt': return query > value;\r\n            case 'lt': return query < value;\r\n            case 'ge': return query >= value;\r\n            case 'le': return query <= value;\r\n        }\r\n        return value === query;\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToObject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToObject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToObject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToObject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name, partial = false) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj[n][i] : null;\r\n        } else if (obj.hasOwnProperty(n)) {\r\n            obj = partial ? obj[n] || obj : obj[n];\r\n        } else {\r\n            obj = null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n\tstatic readFromObject(obj, name) {\r\n        if (obj?.hasOwnProperty(name)) return GSData.readFromProperty(obj, name);\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    /**\r\n     * Create a deep clone of an object\r\n     * @param {Object} obj \r\n     * @returns {Object}\r\n     */\r\n    static deepClone(obj) {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Recursevly clean child elements. Helper for GC\r\n\t * @param {*} owner \r\n\t */\r\n\tstatic cleanup(owner) {\r\n\t\tArray.from(GSDOM.walk(owner, false, true, false))\r\n\t\t.forEach(el => {\r\n\t\t\tif (GSDOM.isTemplateElement(el)) GSDOM.cleanup(el.content);\r\n\t\t\tel.remove?.();\r\n\t\t\tel.innerHTML = '';\r\n\t\t\tel.nodeValue = undefined;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} shadow \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el, shadow = false) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()), shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSelectElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSelect(el) {\r\n\t\treturn el instanceof HTMLSelectElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSlotElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSlotElement(el) {\r\n\t\treturn el instanceof HTMLSlotElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is inside shadowDom\r\n\t * @param {*} el \r\n\t */\r\n\tstatic isShadowed(el) {\r\n\t\treturn GSDOM.parentAll(el).filter(e => e instanceof ShadowRoot).next()?.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @param {Number} level How many levels to walk, 0 = all\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry, levels = 0) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tlevels = GSUtil.asNum(levels, 0);\r\n\t\tconst limit = levels > 0;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t\tif (limit && --levels == 0) return null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => Object.assign(it.style, obj));\r\n\t\t\t/*\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t*/\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el, defaults = false) {\r\n\t\tlet val = null;\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\t\tval = el.value ? el.valueAsNumber : el.value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'number':\r\n\t\t\t\tval = el.value ? el.valueAsNumber : 0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\tval = Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (GSUtil.isStringNonEmpty(el.value)) {\r\n\t\t\t\t\tval = el.checked ? el.value : null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tval = el.checked;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tval = el.value;\r\n\t\t}\r\n\r\n\t\tif (GSUtil.isNull(val) && defaults) {\r\n\t\t\tval = el.defaultValue;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el, defaults);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromValue(el, val, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (GSUtil.isStringNonEmpty(el.value)) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tif (defaults) el.defaultValue = el.checked;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = GSUtil.normalize(data);\r\n\t\t\t\tif (defaults) el.defaultValue = el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true, defaults = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => GSDOM.fromElement2Object(el, params, defaults));\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @param {Boolean} defaults Set default value for form reset  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output', defaults = false) {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\t// if (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj, defaults));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromObject2Element(el, obj, defaults = false) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\tGSDOM.fromValue(el, val, defaults);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement (input) value to JSON Object  \r\n\t * @param {HTMLElement} owner Element value source\r\n\t * @param {Object} obj Object to populate \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromElement2Object(el, obj, defaults = false, noEmpty = false) {\r\n\t\tif (el?.name) {\r\n\t\t\tif (noEmpty && GSUtil.isStringEmpty(el.value)) return obj;\r\n\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\tGSData.writeToObject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t\t} else if (el.checked) {\r\n\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\tGSData.writeToObject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.warn('Skipping element, name not defined!', el);\r\n\t\t}\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  If false, will include #tagName\r\n\t * @param {Object} definitions Json data type definitions\t\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false, definitions) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive, plain, definitions));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\t//obj.dataset = Object.assign({}, own.dataset);\r\n\r\n\t\tconst props = definitions || GSDOM.allProperties(own);\r\n\t\tArray.from(own.attributes).forEach(v => {\r\n\t\t\tconst type = props[v.name]?.type;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase Boolean:\r\n\t\t\t\t\tobj[v.name] = own.hasAttribute(v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Number:\r\n\t\t\t\t\tobj[v.name] = GSAttr.getAsNum(own, v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tobj[v.name] = v.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain, definitions));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj)\r\n\t\t\t.filter(v => v != 'items')\r\n\t\t\t.filter(v => v[0] != '#')\r\n\t\t\t.filter(v => v[0] != '$')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (obj[\"#def\"]) {\r\n\t\t\tel[Symbol.for(\"#def\")] = obj[\"#def\"];\r\n\t\t}\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj)\r\n\t\t\t.filter(v => v != 'items')\r\n\t\t\t.filter(v => v[0] != '#')\r\n\t\t\t.filter(v => v[0] != '$')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tgroup = GSUtil.capitalizeAttr(group);\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tgroup = GSUtil.capitalizeAttr(group);\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', '');\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own\r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t */\r\n\tstatic setValue(qry, val, own, defaults = false) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\t/**\r\n\t * Reset form element\r\n\t * @param {*} element \r\n\t * @returns \r\n\t */\r\n\tstatic reset(element) {\r\n\t\tif (GSDOM.isFormElement(element)) {\r\n\t\t\tif (!GSDOM.resetSelect(element)) {\r\n\t\t\t\telement.dataset.typed = false;\r\n\t\t\t\telement.value = element.defaultValue;\r\n\t\t\t\tGSDOM.#dispatch(element);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reset select element to default value\r\n\t * @param {HTMLSelectElement} element \r\n\t */\r\n\tstatic resetSelect(element) {\r\n\t\tif (GSDOM.isSelect(element)) {\r\n\t\t\tArray.from(element.options).forEach(el => el.selected = el.hasAttribute('selected'));\r\n\t\t\tGSDOM.#dispatch(element);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #dispatch(element) {\r\n\t\telement.dispatchEvent(new Event('change', { bubbles: true, composed: true }));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Extract and merge all static properties definition from WebComponent instance\r\n\t * @param {GSElement} obj \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic allProperties(obj) {\r\n\t\tconst list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n\t\tlist.push(obj.constructor?.properties || obj.properties);\r\n\t\treturn GSData.mergeObjects(list);\r\n\t}\r\n\r\n\t/**\r\n\t * Return element template ref\r\n\t * @param {GSElement} host \r\n\t * @returns \r\n\t */\r\n\tstatic templateRef(host) {\r\n\t\tif (!host) return;\r\n\t\tif (host.tagName === 'GS-TEMPLATE') return host.src;\r\n\t\treturn host.template || host.query?.('template', false);\r\n\t}\r\n\r\n\tstatic #globalDispatch(name, opt) {\r\n\t\tqueueMicrotask(() => {\r\n\t\t\tglobalThis.dispatchEvent?.(new CustomEvent(name, opt));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Register class as WebComponent to the browser\r\n\t * @param {String} name \r\n\t * @param {class} clazz Optional, if not set, use self\r\n\t * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n\t */\r\n\tstatic define(name, clazz, opt) {\r\n\t\tif (!customElements.get(name)) {\r\n\t\t\tcustomElements.define(name, clazz, opt);\r\n\t\t\tGSDOM.#globalDispatch(name, { detail: { customElements: true } });\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t\tGSDOM.#globalDispatch('gs-base-ready', {\r\n\t\t\tdetail: {\r\n\t\t\t\tmessage: 'GS Base is ready',\r\n\t\t\t\ttime: new Date(),\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #suspended = 0; // Corrected typo\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 0, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error('Error waiting for page load:', e); // Improved error handling\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (GSEvents.#loaded) {\r\n\t\t\tawait GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.sendSuspended(target, name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#suspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#suspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#suspended > 0) GSEvents.#suspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, evt => {\r\n\t\t\t\t\tsignal.removeEventListener('abort', reject);\r\n\t\t\t\t\tcallback?.(evt);\r\n\t\t\t\t\tresolve(evt);\r\n\t\t\t\t}, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event\r\n\t *  default - prevent system default event handling\r\n\t *  propagation - prevent all bubbling\r\n\t *  immedate - prevent all bubbling + this element \r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, defaults = true, propagate = true, immediate = true) {\r\n\t\tif (e) {\r\n\t\t\tif (defaults) e.preventDefault?.();\r\n\t\t\tif (propagate) e.stopPropagation?.();\r\n\t\t\tif (immediate) e.stopImmediatePropagation?.();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tif (!GSUtil.isString(name) || name.length === 0) return false;\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner (used to store event handler for later release by element destruction )\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic detachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if available.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = GSUtil.isString(data) ? data : data.action || data.data?.action;\r\n\t\t\tGSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t\tGSEvents.waitPageLoad();\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(this.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {Boolean} A status of successful observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el, opt) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el, opt);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {Boolean} forRemove If \"true\", return injection filter functions, else removal functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {Boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {Boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {Boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {Boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {Boolean} forRemove - call on node remove or add\r\n     * @param {HTMLElement} target - element to monitor\r\n     * @returns {Boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {Boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {Boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n    /**\r\n     * Convert id to CSS class name .[name] or [name] if raw\r\n     * @param {String} id \r\n     * @param {boolean} raw If true, id is used as is, otherwise prefixed with '.'\r\n     * @returns \r\n     */\r\n    #toName(id = '', raw = false) {\r\n        return raw ? id : `.${id}`;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n     * @param {boolean} raw If true, id is used as is, otherwise prefixed with '.'\r\n\t */\r\n\tdeleteRule(id = '', raw = false) {\r\n        const me = this;\r\n        const name = me.#toName(id, raw);\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === name ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => super.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @param {boolean} raw If true, id is used as is, otherwise prefixed with '.'\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '', raw = false) {\r\n        const me = this;\r\n        const name = me.#toName(id, raw);\r\n        return Array.from(me.cssRules).filter(v => v.selectorText === name).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     * @param {boolean} sync If true, applys rules immediately, otherwise on next animation frame\r\n     * @param {boolean} raw If true, id is used as is, otherwise prefixed with '.'\r\n     */\r\n    setRule(id, style = '', sync = false, raw = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id, raw);\r\n\t\tif (!rule) {\r\n            const name = me.#toName(id, raw);\r\n\t\t\tme.insertRule(`${name} {}`);\r\n\t\t\treturn me.setRule(id, style, sync, raw);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = (style || '').toString();\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn root?.adoptedStyleSheets ?  Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop() : null;\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n     * @param {boolean} raw If true, id is used as is, otherwise prefixed with '.'\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source, raw = false) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass, raw);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @param {boolean} raw If true, id is used as is, otherwise prefixed with '.'\r\n     * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id, raw = false) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id, raw);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @param {boolean} raw If true, id is used as is, otherwise prefixed with '.'\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source, raw = false) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source, raw);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @param {boolean} raw If true, id is used as is, otherwise prefixed with '.'\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id, raw = false) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id, raw);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @param {boolean} raw If true, id is used as is, otherwise prefixed with '.'\r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt, raw = false) {\r\n        queueMicrotask(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source, raw);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @param {boolean} raw If true, id is used as is, otherwise prefixed with '.'\r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt, raw = false) {\r\n        queueMicrotask(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id, raw);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\nimport { gsstyles } from \"./style.mjs\";\r\n\r\n/**\r\n * Cache for dynamically loaded styles.\r\n * Used to share styles among GS-* WebComponents\r\n * @class\r\n */\r\nexport class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Create a new CSSStyleSheet\r\n\t * @param {String} id Unique ID\r\n\t * @returns {CSSStyleSheet} Created instance\r\n\t */\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {String} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\t\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\t\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {String} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '', raw = false) {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id, raw);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {String} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false, raw = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id, style, sync, raw);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tstatic deleteRule(id = '', raw = false) {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id, raw);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/**\r\n\t * Inject CSS used by framework across all shadows\r\n\t * @param {string} css CSS string to inject\r\n\t * @param {number} [hash=0] Optional hash for the style\r\n\t */\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSID.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(gsstyles);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from './GSDOM.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSDOMObserver } from './GSDOMObserver.mjs';\r\nimport { GSCacheStyles } from './GSCacheStyles.mjs';\r\n\r\nconst adoptedId = Symbol();\r\nconst observer = Symbol();\r\n\r\n/**\r\n * Monitor HTMLStyleElement & HTMLLinkElement (of type stylesheet) for changes.\r\n * Every such element marked with data-adoptable=\"true\" will be cached and\r\n * will trigger gs-adopted event to notify component controller to update adoptableStyleSheet list\r\n */\r\nexport class GSAdoptedEngine {\r\n\r\n  static timeout = 1000; // Default timeout for adopting stylesheets\r\n  static #timerID = 0;\r\n  static #ID = Date.now();\r\n  static #scheduled = false;\r\n\r\n  static #init() {\r\n    const me = GSAdoptedEngine;\r\n    me.observe(document.head);\r\n    me.#preload();\r\n    me.#timerID = setInterval(() => me.#adopt(), me.timeout);\r\n  }\r\n\r\n  static #clear() {\r\n    const me = GSAdoptedEngine;\r\n    clearInterval(me.#timerID);\r\n    me.#timerID = undefined;\r\n  }\r\n\r\n  static #adopt() {\r\n    const me = GSAdoptedEngine;\r\n    const sheets = me.#adoptable;\r\n    if (sheets.length == 0) return me.#clear();\r\n    sheets.map(s => me.#adoptSheet(s));\r\n    me.update();\r\n  }\r\n\r\n  static update() {\r\n    const me = GSAdoptedEngine;\r\n    if (me.#scheduled) return;\r\n    me.#scheduled = true;\r\n    queueMicrotask(() => {\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          document.adoptedStyleSheets = me.#sorted;\r\n          document.adoptedStyleSheets.id = ++me.#ID;\r\n        } finally {\r\n          me.#scheduled = false;\r\n          globalThis.dispatchEvent(new CustomEvent('gs-adopted'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static #asText(sheet) {\r\n    return Object.values(sheet.cssRules).map(o => o.cssText).join('');\r\n  }\r\n\r\n  static #adoptLink(el) {\r\n    const me = GSAdoptedEngine;\r\n    GSAdoptedEngine.#monitorAttributes(el);\r\n    Array.from(document.styleSheets).filter(s => s.ownerNode === el).map(s => me.#adoptSheet(s));\r\n  }\r\n\r\n  static #adoptSheet(sheet) {\r\n    const me = GSAdoptedEngine;\r\n    const style = me.#asText(sheet);\r\n    return me.#adoptStyle(sheet.ownerNode, style);\r\n  }\r\n\r\n  static #adoptStyle(ownerNode, style) {\r\n    const me = GSAdoptedEngine;\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(style);\r\n    sheet.id = ++me.#ID;\r\n    ownerNode[adoptedId] = sheet.id;\r\n    me.#store(ownerNode, sheet);\r\n    return sheet;\r\n  }\r\n\r\n  static #store(ownerNode, sheet) {\r\n    GSCacheStyles.set(sheet.id, sheet);\r\n  }\r\n\r\n  static #remove(ownerNode, sheet) {\r\n    GSCacheStyles.remove(sheet.id);\r\n    ownerNode[observer]?.disconnect?.();\r\n    ownerNode[observer] = undefined;\r\n  }\r\n\r\n  static get #sorted() {\r\n    return GSCacheStyles.styles;\r\n  }\r\n\r\n  /**\r\n   * List of adoptable styles or links. Filter only those with dataset.adoptable=true\r\n   * @returns {HTMLStyleElement|HTMLLinkElement}\r\n   */\r\n  static get #adoptable() {\r\n    return Object.values(document.styleSheets)\r\n      .filter(o => o.ownerNode)\r\n      .filter(o => o.ownerNode.dataset.adoptable)\r\n      .filter(o => !o.ownerNode[adoptedId]);\r\n  }\r\n\r\n  static #preload() {\r\n    GSDOM.queryAll(document.head, 'link[rel=\"preload\"][as=\"style\"]')\r\n    .forEach(el => {\r\n      el.remove();\r\n      document.head.appendChild(el);\r\n    });\r\n  }\r\n\r\n  static #onAttributeChange(mutationList) {\r\n    mutationList.forEach((mutation) => {\r\n       const id = mutation.target[adoptedId];\r\n       const style = GSCacheStyles.get(id);\r\n       if(style) style.disabled = mutation.target.hasAttribute('disabled');\r\n    });\r\n    GSAdoptedEngine.update();\r\n  }\r\n  \r\n  static #monitorAttributes(element) {\r\n    const me = GSAdoptedEngine;\r\n    const callback = me.#onAttributeChange.bind(me);\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(element, {\r\n      attributeFilter: [\"disabled\"],\r\n      attributeOldValue: true,\r\n      subtree: false,\r\n    });\r\n    return observer;\r\n  }\r\n  \r\n  /**\r\n   * Filter style and link(css) elements which will be shared\r\n   * with all web components. Filter only those marked with data-adoptable\r\n   * @param {HTMLElement} el \r\n   * @returns {Boolean} Return true if monitored element is selected for further processing\r\n   */\r\n  static #onMonitorFilter(el) {\r\n    return (Boolean(el.dataset?.adoptable))\r\n      && (\r\n        (el instanceof HTMLLinkElement && (el.rel === 'stylesheet' || el.as === \"style\"))\r\n        || el instanceof HTMLStyleElement\r\n      );\r\n  }\r\n\r\n  /**\r\n   * When style added to the HTML page, attach it to the WebComponents\r\n   * @param {HTMLStyleElement|HTMLLinkElement} el \r\n   */\r\n  static #onMonitorConnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    if (el instanceof HTMLStyleElement) {\r\n      me.#adoptStyle(el, el.innerText);\r\n      me.update();\r\n    } else if (el instanceof HTMLLinkElement) {\r\n      GSEvents.wait(el, 'load', 0, false).then(e => {\r\n        if (el.rel === 'preload') return el.rel = \"stylesheet\";\r\n        me.#adoptLink(e.target);\r\n        me.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When style removed, remove from adoptable and update\r\n   * @param {HTMLElement} el \r\n   */\r\n  static #onMonitorDisconnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    me.#sorted.filter(o => o.id === el[adoptedId])\r\n          .forEach(o => me.#remove(el, o));\r\n    me.update();\r\n  }\r\n\r\n  /**\r\n   * Observe DOM tree for mutations\r\n   * @param {HTMLElement} owner Root element to watch DOM tree from \r\n   */\r\n  static observe(owner) {\r\n    const me = GSAdoptedEngine;\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorConnect, false, owner);\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorDisconnect, true, owner);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSVersion } from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static ROUTER_URL = globalThis.GS_ROUTER_URL || location.origin;\r\n\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        const rootURL = GSLoader.#defaultURL;\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            GSLoader.TEMPLATE_URL = rootURL;\r\n            globalThis.GS_TEMPLATE_URL = rootURL;\r\n        }\r\n\r\n        if (!globalThis.GS_ROUTER_URL) {\r\n            GSLoader.ROUTER_URL = rootURL;\r\n            globalThis.GS_ROUTER_URL = rootURL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n\r\n    static get #defaultURL() {\r\n        const url = location.href.split('?').pop();\r\n        const seg = url.split('/');\r\n        return url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n    }\r\n\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        //if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        }\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used to load router definition from virtual path\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getRouter(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? GSUtil.toJson(el.innerHTML) : {};\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getRouterURL(def);\r\n        return GSLoader.loadSafe(def, 'GET', null, true);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getRouterURL(url = '') {\r\n        url = url.startsWith('//') ? GSLoader.#routerURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #routerURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#routerPath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #routerPath() {\r\n        return GSLoader.ROUTER_URL ? GSLoader.ROUTER_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP method get|put|post\r\n     * @param {Object} headers HTTP request headers in JSON key/value pairs\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @param {} body Data to send in a request \r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            // TODO - detect if binary\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t static clear() {\r\n\t\tGSTemplateCache.#store.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by its name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve already existing template by name,\r\n\t * or inject a new one if it does not exist already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} tpl Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t// return document.getElementById(tpl.slice(1));\r\n\t\t\treturn GSDOM.query(`template[id=\"${tpl.slice(1)}\"]`, true);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-attribute - toggle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-call - calls a function on a given target (multiple functions supported)\r\n * - data-gs-event - emit event (can bubble or compose)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: \r\n * data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * \r\n * data-gs-target determine element on which to execute,\r\n * if not specified, it means current element\r\n * \r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n\r\n        event: { attribute: 'data-gs-event' },\r\n        bubbles: { attribute: 'data-gs-bubbles', type: Boolean },\r\n        composed: { attribute: 'data-gs-composed', type: Boolean },\r\n\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        hashed: { attribute: 'data-gs-hashed', type: Boolean },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #targetList = null\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el, target) {\r\n        const me = this;\r\n        me.#host = el.isProxy ? el.self : el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = el.isProxy ? el : GSAttributeHandler.proxify(me.#host);\r\n        if (target) me.#targetList = Array.isArray(target) ? target : [target];\r\n    }\r\n\r\n    /**\r\n     * Main function to process element data-gs-* attributes\r\n     * @param {Event} e \r\n     */\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    /**\r\n     * Process each individual data-gs-* attribute\r\n     * @param {GSElement} host \r\n     * @param {String|HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleSwap(host, target);\r\n        me.#handleInject(host, target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleEvent(host, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    /**\r\n     * Bind provided value to the form or form element\r\n     * @param {HTMLFormElement|HTMLInputElement} target \r\n     * @param {Event} evt \r\n     * @returns \r\n     */\r\n    #handleBinding(target, evt) {\r\n        const source = evt?.target?.field || evt?.target?.form || evt?.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (!(isField || isForm)) return;\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Trigger 'action' event on target to execute specific function\r\n     * @param {GSElement} target \r\n     */\r\n    #handleAction(target) {\r\n        if (this.action) GSEvents.send(target, 'action', this.action, true, true);\r\n    }\r\n\r\n    /**\r\n     * Set target attribute value\r\n     * @param {HTMLElement} target \r\n     * @returns \r\n     */\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    /**\r\n     * Set value to target propery\r\n     * @param {GSElement} target \r\n     * @returns \r\n     */\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle target css class\r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.slice().reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {*} host \r\n     * @param {*} target \r\n     * @param {*} evt \r\n     * @returns \r\n     */\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)(evt);\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send an event to a target\r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    #handleEvent(host, evt) {\r\n        //host.emit?.(this.event, evt, this.bubbles, this.composed, true);\r\n        GSEvents.send(host, this.event, evt, this.bubbles, this.composed, true);\r\n    }\r\n\r\n    #handleContent(host, target, value, clean = false) {\r\n        const me = this;\r\n        if (value) {\r\n            let src = '';\r\n            const useDef = GSUtil.asBool(value);\r\n            if (useDef) {\r\n                src = GSDOM.fromJsonAsString(me.definition);\r\n            } else {\r\n                src = me.#toHTML(value);\r\n            }\r\n\r\n            const content = GSDOM.parse(src, true);\r\n\r\n            if (!useDef) {\r\n                GSAttr.jsonToAttr(me.definition, content);\r\n            }\r\n\r\n            if (clean) {\r\n                //target.innerHTML = '';\r\n                GSDOM.cleanup(target);\r\n            }\r\n\r\n            content.dataset.gsHashed = me.hashed;\r\n            me.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Inject HTML to target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleInject(host, target) {\r\n        this.#handleContent(host, target, this.inject, false);\r\n    }\r\n\r\n    /**\r\n     * Swap inner HTML on a target\r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleSwap(host, target) {\r\n        this.#handleContent(host, target, this.swap, true);\r\n    }\r\n\r\n    /**\r\n     * Convert value as URL to a tempalte or as a component name to inject\r\n     * @param {String} value \r\n     * @returns {String}\r\n     */\r\n    #toHTML(value = '') {\r\n        return value.indexOf('/') < 0 ? `<${value}></${value}>` : `<gs-template flat src=\"${value}\"></gs-template>`;\r\n    }\r\n\r\n    /**\r\n     * Load HTML template and apply to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    /**\r\n     * Apply htmltemplate to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} template \r\n     */\r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    /**\r\n     * Apply html template to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} content \r\n     */\r\n    #applyContent(host, target, content) {\r\n        if (host?.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    detach(name = 'click') {\r\n        //GSEvents.detachListeners(this.#host);\r\n        const me = this;\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        me.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n\r\n        const me = this;\r\n\r\n        // if target not set (element #id), use owner element where to inject actions\r\n        if (!me.target && me.#targetList) {\r\n            return me.#targetList;\r\n        }\r\n\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                //return [GSDOM.root(me.#host)];\r\n                return [me.#host.parentComponent];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n\r\n        const list = GSDOM.queryAll(document.body, me.target, false, true).filter(el => el.tagName !== 'GS-ITEM');\r\n        if (list.length === 0) list.push(me.#host);\r\n        return list;\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get definition() { return this.#proxy[Symbol.for('#def')]; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get event() { return this.#proxy.event; }\r\n    get bubbles() { return this.#proxy.bubbles; }\r\n    get composed() { return this.#proxy.composed; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n    get hashed() { return this.#proxy.hashed; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v[0]));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v[0]));\r\n    }\r\n\r\n    /**\r\n     * Is property value JSON\r\n     */\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    /**\r\n     * Is element attribute value JSON\r\n     */\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    /**\r\n     * Wrap any element into data-gs-* handler\r\n     * @param {HTMLElement} el \r\n     * @returns {Proxy}\r\n     */\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    /**\r\n     * Process data-gs-* attributes on a element\r\n     * @param {HTMLElement} el \r\n     * @param {Event} e \r\n     * @returns \r\n     */\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('data-gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    /**\r\n     * Create a new attribute handler instance\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     * @param {boolean} override If 'false' will skip existing attributes\r\n     */\r\n    static clone(from, to, override = true) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .filter(o => override || !to.hasAttribute(o.attribute))\r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    /**\r\n     * Check if component is bindable to events\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static isBindable(el) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        return Object.values(def)\r\n            .filter(o => el.hasAttribute(o.attribute))\r\n            .length > 0;\r\n\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBeep class\r\n * @module base/GSBeep\r\n */\r\n\r\n\r\n/**\r\n * A helper class to use browser AudiContext to make tones\r\n * @class\r\n */\r\nexport class GSBeep {\r\n\r\n    static audioCtx = globalThis.AudioContext || globalThis.webkitAudioContext || globalThis.audioContext;\r\n\r\n    /**\r\n     * Helper function to emit a beep sound in the browser using the Web Audio API.\r\n     * \r\n     * @param {number} duration - The duration of the beep sound in milliseconds.\r\n     * @param {number} frequency - The frequency of the beep sound.\r\n     * @param {number} volume - The volume of the beep sound.\r\n     * @param {string} tyoe - The sound type (sine, square, sawtooth, triangle, custom)\r\n     * \r\n     * @returns {Promise} - A promise that resolves when the beep sound is finished.\r\n     */\r\n    static beep(duration = 200, frequency = 440, volume = 1, type = 'sine') {\r\n        return new Promise((resolve, reject) => {\r\n            try{\r\n                if (!GSBeep.isAvailable) return resolve();\r\n                const context = new GSBeep.audioCtx();\r\n                const oscillatorNode = context.createOscillator();\r\n                const gainNode = context.createGain();\r\n                oscillatorNode.connect(gainNode);\r\n\r\n                // Set the oscillator frequency in hertz\r\n                oscillatorNode.frequency.value = frequency;\r\n\r\n                // Set the type of oscillator\r\n                oscillatorNode.type = type;\r\n                gainNode.connect(context.destination);\r\n\r\n                // Set the gain to the volume\r\n                gainNode.gain.value = volume * 0.01;\r\n\r\n                // Start audio with the desired duration\r\n                oscillatorNode.start(context.currentTime);\r\n                oscillatorNode.stop(context.currentTime + duration * 0.001);\r\n\r\n                // Resolve the promise when the sound is finished\r\n                oscillatorNode.onended = () => resolve();                \r\n            }catch(error) {\r\n                reject(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    static get isAvailable() {\r\n        const {isActive, hasBeenActive } =  navigator.userActivation;\r\n        return isActive || hasBeenActive;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promises sequentially\r\n\t * @param {Array<Promise>} ps \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const controller = abortable instanceof AbortController ? abortable : (abortable ? new GSAbortController(timeout) : null);\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        wrap.controller = abortable instanceof AbortController ? abortable : (abortable ? new GSAbortController(timeout) : null);\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n            me.#listeners.delete(o);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport { GSEvent } from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport class GSEventBus {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {String} name EventBus name\r\n     * @param {String} type Event name\r\n     * @param {Object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {String} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {String} name unique buss name\r\n     * @returns {Boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constructor to attach Gesture featuer to an HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {Boolean} swipe Monitor swipe gesture\r\n     * @param {Boolean} tap Monitor tap gesture\r\n     * @param {Boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move: me.#handleTouchMove.bind(me),\r\n            start: me.#handleTouchStart.bind(me),\r\n            end: me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) {\r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 && Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {Number}\r\n     */\r\n    static fingers(e) {\r\n        return e.detail.touches?.length;\r\n    }\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns {GSGesture}\r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport class GSItem extends HTMLElement {\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic properties = {\r\n\t\tactive: { type: Boolean },\r\n\t\tdisabled: { type: Boolean },\r\n\t\tselected: { type: Boolean },\r\n\t\tautofocus: { type: Boolean },\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return template content of GS-ITEM element (if exists)\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tget body() {\r\n\t\tlet tpl = GSAttr.get(this, 'template');\r\n\t\tif (tpl) return `<gs-template flat src=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = this.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item elements\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tget items() {\r\n\t\treturn Array.from(this.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSAttr.get(this, 'name', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent GS-* component\r\n\t */\r\n\tget parentComponent() {\r\n\t\treturn GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n\t}\r\n\t\t\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate that parent element contains only specific childrens\r\n\t * @param {*} own \r\n\t * @param {*} tagName \r\n\t * @returns \r\n\t */\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic collect(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Convert GS-ITEM list to JSON\r\n\t * @param {HTMLElement} root Element containing GS-ITEM childs \r\n\t * @returns {Array} Arary of JSON objects\r\n\t */\r\n\tstatic toJSON(root) {\r\n\t\treturn GSItem.collect(root).map(el => el.asJSON(true));\r\n\t}\r\n\r\n\t/**\r\n\t * Make GS-ITEM attributes JSON compatible \r\n\t * @param {*} root \r\n\t * @param {*} definition \r\n\t * @returns \r\n\t */\r\n    static proxify(root, definition) {        \r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, definition));\r\n    }\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport class GSPopper {\r\n\r\n\t/**\r\n\t * A simple wrapper to get element DOMRect\r\n\t * @param {HTMLElement} el \r\n\t * @returns {DOMRect}\r\n\t */\r\n\tstatic asRect(el) {\r\n\t\treturn el.getBoundingClientRect();\r\n\t}\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = GSPopper.asRect(el);\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = GSPopper.asRect(element);\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tif (!style) return;\r\n\r\n\t\tconst css = {\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '0px',\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.translate = `${obj.x}px ${obj.y}px`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tconst astyle = GSDynamicStyle.dynamicStyle(arrow);\r\n\t\tif (!style) return;\r\n\t\t\r\n\t\tconst css = {\r\n\t\t\tinset: GSPopper.#inset(pos),\r\n\t\t\tposition: 'absolute',\r\n\t\t\tmargin: '0px',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\twidth: 'max-content',\r\n\t\t\theight: 'max-content',\t\t\t\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\t\tastyle.position = 'absolute';\r\n\r\n\t\tconst srect = GSPopper.asRect(source);\r\n\t\tconst arect = GSPopper.asRect(arrow);\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tconst aopt = {\r\n\t\t\ttranslate: `${arr.x}px ${arr.y}px`,\r\n\t\t\ttop: arr.top ? arr.top : '',\r\n\t\t\tleft: arr.left ? arr.left : ''\r\n\t\t}\r\n\r\n\t\tconst opt = {\r\n\t\t\ttranslate : `${obj.x}px ${obj.y}px`\r\n\t\t};\r\n\r\n\t\tObject.assign(style, opt);\r\n\t\tObject.assign(astyle, aopt);\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst opt = {};\r\n\r\n\t\topt.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\topt.left = '';\r\n\t\t\topt.top = '0px';\r\n\t\t\tshift = 0; //pos.isStart ? size : -1 * size;\r\n\t\t\topt.translate = `${shift}px ${arrowPosH / 2}px`;\r\n\t\t} else {\r\n\t\t\topt.top = '';\r\n\t\t\topt.left = '0px';\r\n\t\t\tshift = 0; //pos.isTop ? size : -1 * size;\r\n\t\t\topt.translate = `${arrowPosW}px ${shift}px`;\r\n\t\t}\r\n\r\n\t\tGSDynamicStyle.applyDynamicStyle(arrow, opt);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {\r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSQueryCSS } from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value);\r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n\r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSRouter class\r\n * @module base/GSRouter\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSAttributeHandler } from \"./GSAttributeHandler.mjs\";\r\n\r\n/**\r\n * Class for handling hash based routing.\r\n * Class uses GSAttributeHandler and optional JSON definition to handle routing.\r\n * \r\n * Use globalThis.GS_ROUTER_URL before loading this module to define JSON definition file location\r\n * @Class\r\n */\r\nexport class GSRouter {\r\n\r\n    #owner = null;\r\n    #logging = true;\r\n    #enabled = false;\r\n    #hashCallback = null;\r\n    #cache = null;\r\n    #definition = {};\r\n\r\n    constructor(owner) {\r\n        const me = this;\r\n        me.#owner = owner;\r\n        me.#cache ??= new Map();\r\n        me.#hashCallback = me.#onHashChange.bind(me);\r\n    }\r\n\r\n    /**\r\n     * Loda JSON definition for routing from JSON document.\r\n     * @param {string} url \r\n     * @returns \r\n     */\r\n    async loadDefinition(url) {\r\n        return GSLoader.getRouter(url);\r\n    }\r\n\r\n    /**\r\n     * Initialize routing from provided URL\r\n     * @param {string} url \r\n     * @param {number} wait in ms\r\n     */\r\n    async initialize(url, wait = 0) {\r\n        const me = this;\r\n        me.#cache.clear();        \r\n        if (GSUtil.isStringNonEmpty(url)) {\r\n            me.#definition = await me.loadDefinition(url);\r\n        }\r\n        if (wait > 0) {\r\n            await GSEvents.waitPageLoad(null, null, null, wait);\r\n        }\r\n        me.enable();\r\n        me.#onHashChange();        \r\n    }\r\n\r\n    /**\r\n     * Enable routing\r\n     */\r\n    enable() {\r\n        if (this.#enabled) return;\r\n        GSEvents.on(globalThis, null, 'hashchange', this.#hashCallback);\r\n        this.#enabled = true;\r\n    }\r\n\r\n    /**\r\n     * Disable routing\r\n     */\r\n    disable() {\r\n        GSEvents.off(globalThis, null, 'hashchange', this.#hashCallback);\r\n        this.#enabled = false;\r\n    }\r\n\r\n    /**\r\n     * Register a single route with options\r\n     * @param {string} route Abstract url for a route\r\n     * @param {Object} options \r\n     */\r\n    register(route, options) {\r\n        this.#definition[route] = options;\r\n    }\r\n\r\n    /**\r\n     * Unregister a single route\r\n     * @param {string} route \r\n     */\r\n    unregister(route) {\r\n        delete this.#definition[route];\r\n    }\r\n\r\n    /**\r\n     * Get URL hashbang without hash\r\n     */\r\n    get hash() {\r\n        return location.hash.slice(1);\r\n    }\r\n\r\n    /**\r\n     * Return routing definition object\r\n     */\r\n    get definition() {\r\n        return GSData.deepClone(this.#definition);\r\n    }\r\n\r\n    get log() {\r\n        return this.#logging;\r\n    }\r\n\r\n    set log(val) {\r\n        this.#logging = GSUtil.asBool(val);\r\n    }\r\n\r\n    #onHashChange(e) {\r\n        const me = this;\r\n        const hash = me.hash;\r\n        let px = me.#cache.get(hash);\r\n        if (!px) {   \r\n            px = me.#proxify();         \r\n            if (px) me.#cache.set(hash, px);\r\n        }\r\n        // 1. 31.07.2025.\r\n        // GSAttributeHandler.process(px);\r\n        px?.handle(e);\r\n    }\r\n\r\n    #proxify() {\r\n        let px = undefined;\r\n        const me = this;\r\n        const hash = me.hash;\r\n        const def = me.#definition[\"#def\"] || {};\r\n        const defaults = me.#definition[\"#defaults\"] || {};\r\n        const route = me.#definition[hash];\r\n        if (route) {\r\n            const el = GSDOM.fromJson(Object.assign({}, route, def, defaults));\r\n            el.dataset.gsHashed = true;\r\n            // 1. 31.07.2025.\r\n            //px = GSAttributeHandler.proxify(el);\r\n            px = new GSAttributeHandler(el, me.#owner);\r\n        } else if (me.#logging) {\r\n            GSLog.warn(null, `No routing definition found for: ${hash}`);\r\n        }\r\n        return px;\r\n    }\r\n\r\n    static {\r\n        if (globalThis.GS_DEFINITION_URL) {\r\n            new GSRouter().initialize(globalThis.GS_DEFINITION_URL, globalThis.GS_ROUTER_WAIT);\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTheme class\r\n * @module base/GSTheme\r\n */\r\n\r\n/**\r\n * Switch between dark and light mode\r\n * @Class\r\n */\r\nexport class GSTheme {\r\n\r\n    static #STORAGE = 'gs-theme-mode';\r\n\r\n    /**\r\n     * Changes the theme to 'dark mode' and save settings to local stroage.\r\n     * Basically, replaces/toggles every CSS class that has '-light' class with '-dark'\r\n     * @param {HTMLElement} el \r\n     */\r\n    static darkMode(el) {\r\n        GSTheme.#switch(el, 'light', 'dark');\r\n    }\r\n\r\n    /**\r\n     * Changes the theme to 'light mode' and save settings to local stroage.\r\n     * @param {HTMLElement} el \r\n     */\r\n    static lightMode(el) {\r\n        GSTheme.#switch(el, 'dark', 'light');\r\n    }\r\n\r\n    static #switch(el, from = 'light', to = 'dark') {\r\n\r\n        const root = el || document.body;\r\n\r\n        // TODO  switch dark/light mode ?!??!? \r\n\r\n        // save last state\r\n        GSTheme.theme = to;\r\n    }\r\n\r\n    static get theme() {\r\n        return localStorage.getItem(GSTheme.#STORAGE);\r\n    }\r\n\r\n    static set theme(val) {\r\n        localStorage.setItem(GSTheme.#STORAGE, val);\r\n        window.dispatchEvent(new CustomEvent('gs-theme', { detail: val }));\r\n        const htmlEl = document.head.parentElement;\r\n        if (val) {\r\n            htmlEl.dataset.bsTheme = val;\r\n        } else {\r\n            delete htmlEl.dataset.bsTheme;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get system default theme by media query\r\n     * @returns {String} dark|light \r\n     */\r\n    static getSystemDefaultTheme() {\r\n        const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\r\n        return darkThemeMq.matches ? 'dark' : 'light';\r\n    }\r\n\r\n    static #onTheme(e) {\r\n        const q = new URLSearchParams(location.hash.slice(1));\r\n        GSTheme.theme = q.get('theme');\r\n    }\r\n\r\n    static #setup() {\r\n        window.addEventListener('hashchange', GSTheme.#onTheme)\r\n        let settings = localStorage.getItem(GSTheme.#STORAGE);\r\n        if (settings == null) {\r\n            settings = GSTheme.getSystemDefaultTheme();\r\n        }\r\n\r\n\r\n        if (settings == 'dark') return GSTheme.darkMode();\r\n        if (settings == 'light') return GSTheme.lightMode();\r\n        // TODO switch\r\n\r\n    }\r\n\r\n    static {\r\n        GSTheme.#setup();\r\n        globalThis.GSTheme = GSTheme;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst tree = new BinaryTree(1, 'AB');\r\n\r\ntree.insert(1, 11, 'AC');\r\ntree.insert(1, 12, 'BC');\r\ntree.insert(12, 121, 'BG', { right: true });\r\n\r\n[...tree.preOrderTraversal()].map(x => x.value);\r\n// ['AB', 'AC', 'BC', 'BCG']\r\n\r\n[...tree.inOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB', 'BC', 'BG']\r\n\r\ntree.value;                // 'AB'\r\ntree.hasChildren;          // true\r\n\r\ntree.find(12).isLeaf;           // false\r\ntree.find(121).isLeaf;          // true\r\ntree.find(121).parent.value;    // 'BC'\r\ntree.find(12).left;             // null\r\ntree.find(12).right.value;      // 'BG'\r\n\r\ntree.remove(12);\r\n\r\n[...tree.postOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB']\r\n*/\r\n\r\n/**\r\n * Binary Tree Node data holder\r\n */\r\nexport class BinaryTreeNode {\r\n\r\n    constructor(key, value = key, parent = null) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n\r\n    /**\r\n     * Check if both left and right are empty.\r\n     */\r\n    get isLeaf() {\r\n        return this.left === null && this.right === null;\r\n    }\r\n\r\n    /**\r\n     * Check if node has children\r\n     */\r\n    get hasChildren() {\r\n        return !this.isLeaf;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Binary tree implementation\r\n */\r\nexport class BinaryTree extends BinaryTreeNode {\r\n\r\n    constructor(key, value = key) {\r\n        super(key, value);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in in-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *inOrderTraversal(node = this) {\r\n        if (node.left) yield* this.inOrderTraversal(node.left);\r\n        yield node;\r\n        if (node.right) yield* this.inOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in post-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *postOrderTraversal(node = this) {\r\n        if (node.left) yield* this.postOrderTraversal(node.left);\r\n        if (node.right) yield* this.postOrderTraversal(node.right);\r\n        yield node;\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in pre-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *preOrderTraversal(node = this) {\r\n        yield node;\r\n        if (node.left) yield* this.preOrderTraversal(node.left);\r\n        if (node.right) yield* this.preOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to find the given parent node and \r\n     * insert a new child BinaryTreeNode either as the left or right child, \r\n     * depending on the passed options object.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @param {*} options \r\n     * @returns {boolean} Return true if data inserted\r\n     */\r\n    insert(\r\n        parentNodeKey,\r\n        key,\r\n        value = key,\r\n        { left, right } = { left: true, right: true }\r\n    ) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === parentNodeKey) {\r\n                const canInsertLeft = left && node.left === null;\r\n                const canInsertRight = right && node.right === null;\r\n                if (!canInsertLeft && !canInsertRight) return false;\r\n                if (canInsertLeft) {\r\n                    node.left = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n                if (canInsertRight) {\r\n                    node.right = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to remove a BinaryTreeNode from the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.left.key === key) {\r\n                node.left = null;\r\n                return true;\r\n            }\r\n            if (node.right.key === key) {\r\n                node.right = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to retrieve the given node in the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    find(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new DoublyLinkedList();\r\n\r\nlist.insertFirst(1);\r\nlist.insertFirst(2);\r\nlist.insertFirst(3);\r\nlist.insertLast(4);\r\nlist.insertAt(3, 5);\r\n\r\nlist.size;                      // 5\r\nlist.head.value;                // 3\r\nlist.head.next.value;           // 2\r\nlist.tail.value;                // 4\r\nlist.tail.previous.value;       // 5\r\n[...list].map(e => e.value);    // [3, 2, 1, 5, 4]\r\n\r\nlist.removeAt(1);               // 2\r\nlist.getAt(1).value;            // 1\r\nlist.head.next.value;           // 1\r\n[...list].map(e => e.value);    // [3, 1, 5, 4]\r\n\r\nlist.reverse();\r\n[...list].map(e => e.value);    // [4, 5, 1, 3]\r\n\r\nlist.clear();\r\nlist.size;                      // 0\r\n*/\r\n\r\n/**\r\n *  Linear data structure following doubly linked list order of operations.\r\n */\r\nexport class Node {\r\n\r\n    value = null;\r\n    next = null;\r\n    previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    release() {\r\n        this.value = undefined;\r\n        this.next = undefined;\r\n        this.previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DoublyLinkedList {\r\n\r\n    #nodes = [];\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     */\r\n    get size() {\r\n        return this.#nodes.length;\r\n    }\r\n\r\n    /**\r\n     * First element in the list\r\n     */\r\n    get head() {\r\n        return this.size ? this.#nodes[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Last elemet in the list\r\n     */\r\n    get tail() {\r\n        return this.size ? this.#nodes[this.size - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Create new linked node\r\n     * @param {*} value \r\n     * @param {*} nextNode \r\n     * @param {*} previousNode \r\n     * @returns \r\n     */\r\n    create(value, nextNode, previousNode) {\r\n        return new Node(value, nextNode, previousNode);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the given position in the list\r\n     * @param {*} index \r\n     * @param {*} value \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    insertAt(index, value, safe) {\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index] || null;\r\n        const node = this.create(value, nextNode, previousNode);\r\n\r\n        if (previousNode) previousNode.next = node;\r\n        if (nextNode) nextNode.previous = node;\r\n        this.#nodes.splice(index, 0, node);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the beginning of the list\r\n     * @param {*} value \r\n     */\r\n    insertFirst(value) {\r\n        this.insertAt(0, value);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the end of the list\r\n     * @param {*} value \r\n     */\r\n    insertLast(value) {\r\n        this.insertAt(this.size, value);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data in the given index\r\n     * @param {Number} index \r\n     * @returns \r\n     */\r\n    getAt(index) {\r\n        return this.#nodes[index];\r\n    }\r\n\r\n    indexOf(val) {\r\n        return this.#nodes.indexOf(val);\r\n    }\r\n\r\n    /**\r\n     * Remove the data at the given index\r\n     * @param {*} index \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    removeAt(index, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index + 1] || null;\r\n\r\n        if (previousNode) previousNode.next = nextNode;\r\n        if (nextNode) nextNode.previous = previousNode;\r\n\r\n        return this.#nodes.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    clear(full = true) {\r\n        if (full) this.#nodes.forEach(o => o.release());\r\n        this.#nodes = [];\r\n    }\r\n\r\n    /**\r\n     * Reverse data order\r\n     */\r\n    reverse() {\r\n        this.#nodes = this.#nodes.reduce((acc, { value }) => {\r\n            const nextNode = acc[0] || null;\r\n            const node = new Node(value, nextNode, null);\r\n            if (nextNode) nextNode.previous = node;\r\n            return [node, ...acc];\r\n        }, []);\r\n    }\r\n\r\n    toArray() {\r\n        return this.#nodes.map(e => e.value);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#nodes;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield* this.#nodes;\r\n    }\r\n\r\n    #validate(index, safe = false) {\r\n        const isInvalid = this.#isInvalidIndex(index);\r\n        if (isInvalid) {\r\n            if (safe) {\r\n                console.log(this.#error());\r\n            } else {\r\n                throw new Error(this.#error());\r\n            }\r\n        }\r\n        return !isInvalid;\r\n    }\r\n\r\n    #isInvalidIndex(index) {\r\n        return !Number.isInteger(index) || index < 0 || index > this.size;\r\n    }\r\n\r\n    #error() {\r\n        return `Invalid index. Current length is ${this.size}.`;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        const list = new DoublyLinkedList();\r\n        if (Array.isArray(data)) data.forEach(v => list.insertLast(v));\r\n        return list;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new LinkedList(1);\r\n\r\nlist.append(2).append(3).append(4);\r\n\r\n*/\r\n\r\n/**\r\n * Node data holder\r\n */\r\nexport class LinkedList {\r\n\r\n    #value = null;\r\n    #next = null;\r\n    #previous = null;\r\n\r\n    constructor(value) {\r\n        this.#value = value;\r\n    }\r\n\r\n    [Symbol.for('gs-next')](val) {\r\n        this.#next = val;\r\n    }\r\n\r\n    [Symbol.for('gs-prev')](val) {\r\n        this.#previous = val;\r\n    }\r\n\r\n    remove() {\r\n        const me = this;\r\n        me.#previous?.[Symbol.for('gs-next')](me.#next);\r\n        me.#next?.[Symbol.for('gs-prev')](me.#previous);\r\n        return me.#release();\r\n    }\r\n\r\n    delete() {\r\n        return this.remove();\r\n    }\r\n    \r\n    /**\r\n     * Append node after \r\n     * @param {*} node \r\n     */\r\n    append(node) {\r\n\r\n        node = LinkedList.wrap(node);\r\n        node.#next = this.#next;\r\n        node.#previous = this;\r\n        this.#next = node;\r\n        return node;\r\n    }\r\n\r\n    add(node) {\r\n        return this.append(node);\r\n    }\r\n\r\n    /**\r\n     * Insert node before\r\n     * @param {*} node \r\n     */\r\n    insert(node) {\r\n        node = LinkedList.wrap(node);\r\n        node.#previous = this.#previous;\r\n        node.#next = this;\r\n        this.#previous = node;\r\n        return node;\r\n    }\r\n\r\n    update(val) {\r\n        this.#value = val;\r\n        return this;\r\n    }\r\n\r\n    find(cb) {\r\n        return this.iterator.find(cb);\r\n    }\r\n\r\n    filter(cb) {\r\n        return this.iterator.filter(cb);\r\n    }\r\n\r\n    map(cb) {\r\n        return this.iterator.map(cb);\r\n    }\r\n\r\n    forEach(cb) {\r\n        for (let n of this.iterator) {\r\n            cb(n, -1, this);\r\n        }\r\n    }\r\n    \r\n    every(cb) {\r\n        let result = undefined;\r\n        for (let n of this.iterator) {\r\n            result = cb(n, -1, this);\r\n            if (result) break;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    toArray(values = true) {\r\n        return values ? this.asValues : this.asNodes;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    #release() {\r\n        this.#value = undefined;\r\n        this.#next = undefined;\r\n        this.#previous = undefined;\r\n        return this;\r\n    }\r\n        \r\n    get head() {\r\n        return this.previous?.head || this;\r\n    }\r\n\r\n    get tail() {\r\n        return this.next?.tail || this;\r\n    }\r\n\r\n    get next() {\r\n        return this.#next;\r\n    }\r\n\r\n    get previous() {\r\n        return this.#previous;\r\n    }\r\n\r\n    get value() {\r\n        return this.#value;\r\n    }\r\n\r\n    set value(val) {\r\n        this.#value = val;\r\n    }    \r\n\r\n    get asValues() {\r\n        return [...this].map(v => v.value);\r\n    }\r\n\r\n    get asNodes() {\r\n        return [...this];\r\n    }\r\n    \r\n    get iterator() {\r\n        return this[Symbol.iterator]();\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield this;\r\n        if (this.#next) yield* this.#next.iterator;        \r\n    }\r\n\r\n    static wrap(node) {\r\n        return node instanceof LinkedList ? node : new LinkedList(node);\r\n    }\r\n    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure following last in, first out (LIFO) order of operations.\r\n */\r\nexport class Stack extends Array {\r\n    \r\n    push(item) {\r\n        this.unshift(item);\r\n    }\r\n\r\n    pop() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure following first in, first out (FIFO) order of operations.\r\n */\r\nexport class Queue extends Array {\r\n    \r\n    enqueue(item) {\r\n        this.push(item);\r\n    }\r\n\r\n    dequeue() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Tree Node data holder\r\n */\r\nexport class Tree {\r\n\r\n    value;\r\n\r\n    #key = null;\r\n    #parent = null;\r\n    #children;\r\n\r\n    #folder = false;\r\n    #level = 0;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        this.#key = key;\r\n        this.#parent = parent;\r\n        this.#folder = value?.leaf === false;\r\n        this.#level = parent ? parent.level + 1 : level;\r\n        this.#children = this.#folder ? [] : undefined;\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Return tree list from root to this node.\r\n     */\r\n    get subtree() {\r\n        return Array.from(this.up(undefined, false, true, true));\r\n    }\r\n\r\n    get levelID() {\r\n        return this.subtree.map(o => o.level).join('.');\r\n    }\r\n\r\n    /**\r\n     * Unique node canonical form\r\n     */\r\n    get nodeID() {\r\n        //if (this.parent?.level < 0) return this.index;\r\n        return this.subtree.map(o => o.index).join('.');\r\n    }\r\n\r\n    get path() {\r\n        return this.subtree.map(o => o.key).join('/');\r\n    }\r\n\r\n    get index() {\r\n        return this.parent?.nodes.indexOf(this) || 0;\r\n    }\r\n\r\n    get size() {\r\n        return this.#children?.length || -1;\r\n    }\r\n\r\n    get level() {\r\n        return this.#level;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Check if #children is empty\r\n     */\r\n    get isLeaf() {\r\n        return !this.#folder;\r\n    }\r\n\r\n    get isFolder() {\r\n        return this.#folder;\r\n    }\r\n\r\n    /**\r\n     * Check if has #childrens\r\n     */\r\n    get hasChildren() {\r\n        return this.#folder && this.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get key() {\r\n        this.#key ??= this.nodeID;\r\n        return this.#key;\r\n    }\r\n\r\n    get nodes() {\r\n        return this.#children;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get parent() {\r\n        return this.#parent;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n    /**\r\n     * Check if there are more siblings \r\n     */\r\n    get hasMore() {\r\n        return this.#parent?.size > this.index + 1;\r\n    }\r\n\r\n    get firstChild() {\r\n        return this.hasMore ? this.#children[0] : undefined;\r\n    }\r\n\r\n    get lastChild() {\r\n        return this.hasMore ? this.#children[this.#children.length - 1] : undefined;\r\n    }\r\n\r\n    get next() {\r\n        return this.down(this, false, false).next().value || this.nextSibling || this.parent?.nextSibling;\r\n    }\r\n\r\n    get previous() {\r\n        const node = this.previousSibling;\r\n        return (node?.hasChildren) ? node.lastChild : node || this.up(this, false, false).next().value;\r\n    }\r\n\r\n    get nextSibling() {\r\n        return this.hasMore ? this.#parent.#children[this.index + 1] : undefined;\r\n    }\r\n\r\n    get previousSibling() {\r\n        return this.index > 0 ? this.#parent.#children[this.index - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Clear all #children\r\n     */\r\n    clear() {\r\n        if (this.#children) {\r\n            this.#children.forEach(o => o.release?.());\r\n            this.#children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally, if called externally, \r\n     * make sure node is removed from parent \r\n     */\r\n    release() {\r\n        this.clear();\r\n        this.#key = null;\r\n        this.value = null;\r\n        this.#parent = null;\r\n    }\r\n\r\n    /**\r\n     * Walk down the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     * @param {Boolean} flat Navigate all nodes out of subtree\r\n     */\r\n    *down(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (node.#children?.length) {\r\n            for (let child of node.#children) {\r\n                yield* this.down(child, values, true, reverse, flat);\r\n            }\r\n        }\r\n        if (flat) {\r\n            const item = node.nextSibling || node.parent.nextSibling;\r\n            if (item) yield* this.down(item, values, true, reverse, flat);\r\n        }\r\n        /*\r\n        */\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk up the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     */\r\n    *up(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (flat) {\r\n            let item = node.previousSibling;\r\n            item = item?.isFolder ? item.lastChild : item;\r\n            if (item) yield* this.up(item, values, true, reverse, flat);\r\n        }        \r\n        if (node.parent) {\r\n            yield* this.up(node.parent, values, true, reverse, flat);\r\n        }\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk through all nodes\r\n     * @param {*} node \r\n     */\r\n    walk = this.down;\r\n\r\n    /**\r\n     * Simulate array function \"forEach\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */\r\n    forEach(callback, flat = false, reverse = false) {\r\n        this.every((node, index) => {\r\n            callback(node, index);\r\n            return true;\r\n        }, flat, reverse);\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"every\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    every(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let sts = true;\r\n        let i = 0;\r\n        for (let node of it) {\r\n            sts = callback(node, i++);\r\n            if (!sts) break;\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"find\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    find(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let i = 0;\r\n        for (let node of it) {\r\n            if (callback(node, i++)) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"filter\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only childrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    filter(callback, flat, reverse) {\r\n        return [...this.#filtered(callback, flat, reverse)];\r\n    }\r\n\r\n    *#filtered(callback, flat, reverse) {\r\n        const it = this.iterate(flat, reverse);\r\n        for (let node of it) {\r\n            let res = callback(node);\r\n            if (res) yield node;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Iterate all nodes\r\n     * @param {boolean} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {boolean} reverse If set, will iterate up the tree\r\n     */\r\n    *iterate(flat, reverse) {\r\n        reverse ? yield* this.up(this, false, false, false, flat) : yield* this.down(this, false, false,  false, flat);\r\n    }\r\n\r\n    /**\r\n     * Add a new Tree to the tree.\r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    append(key, value = key) {\r\n        let newOne = undefined;\r\n        if (key instanceof Tree) {\r\n            key.#parent = this;\r\n            key.#level = this.#level + 1;\r\n            newOne = key;\r\n        } else {\r\n            newOne = new Tree(key, value, this);\r\n        }\r\n        this.#folder = true;\r\n        this.#children ??= [];\r\n        this.#children.push(newOne);\r\n        return newOne;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method and Array.prototype.push() \r\n     * to add a new Tree to the tree.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    insert(parentNodeKey, key, value = key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === parentNodeKey) {\r\n                const newOne = new Tree(key, value, node);\r\n                this.#folder = true;\r\n                this.#children ??= [];\r\n                node.#children.push(newOne);\r\n                return newOne;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove node from tree. If key is set, will search for first node with matching key.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n\r\n        const me = this;\r\n\r\n        if (key) {\r\n            const node = me.findByKey(key);\r\n            node?.remove();\r\n            return node;\r\n        }\r\n\r\n        if (me.isRoot) throw new Error('Root node can\\'t be removed!');\r\n        const node = me.parent;\r\n        const filtered = node.#children.filter(c => c !== me);\r\n        if (filtered.length !== node.#children.length) {\r\n            node.#children = filtered;\r\n            return me;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method to retrieve the given node in the tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    findByKey(key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convert tree into array list\r\n     * @returns \r\n     */\r\n    flatten(values, inclusive, reverse) {\r\n        return [...this.down(this, values, inclusive, reverse)];\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) Tree.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.#children?.map(o => o.toJSON()) || {};\r\n        return this.isLeaf ? { key: this.key, value: this.value } :\r\n            {\r\n                key: this.key,\r\n                value: this.value,\r\n                items: this.#children.map(o => o.toJSON())\r\n            };\r\n    }\r\n\r\n    /**\r\n     * Make node iterable\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.down();\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof Tree;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) throw new Error('Parent required when data is array');\r\n            raw.forEach(o => Tree.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        const tree = new Tree(obj.key, obj, data ? parent : undefined);\r\n        if (hasParent) parent.append(tree);\r\n        if (items) Tree.from(tree, items);\r\n        return tree;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynamic menu etc.\r\n * @Class\r\n */\r\nexport class DataSelector  {\r\n\r\n    static #SELECT = Symbol('select');\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static addSelected(val) {\r\n        if (!val) return false;\r\n\r\n        if (Array.isArray(val)) {\r\n            val[DataSelector.#SELECT] = true;\r\n        } else {\r\n            GSUtil.asArray(val).forEach(o => o[DataSelector.#SELECT] = true);\r\n        }\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    static removeSelected(val) {\r\n        if (!val) return false;\r\n        delete val[DataSelector.#SELECT];\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    static clearSelected(data) {\r\n        const me = this;\r\n        GSUtil.asArray(data).forEach(o => me.removeSelected(o));\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    static getSelected(data = []) {\r\n        const me = this;        \r\n        return me.isSelected(data) || GSUtil.asArray(data).filter(o => me.isSelected(o));\r\n    }\r\n\r\n    /**\r\n     * Check if record id is in list of selected records\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static isSelected(val) {\r\n        return val ? val[DataSelector.#SELECT] === true : false;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    /**\r\n     * Reset the registry\r\n     */\r\n    resetRegistry() {\r\n        this.#handlers.clear();\r\n        this.#map.clear();\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../base/GSID.mjs\";\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { DataSelector } from \"./DataSelector.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynamic menu etc.\r\n * @Class\r\n */\r\nexport class GSAbstractReadWrite extends GSEvent {\r\n\r\n    static #SELECT = Symbol('select');\r\n\r\n    #id = null;\r\n    #processors = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to register\r\n     * @param {object} processor\r\n     */\r\n    addProcessor(processor) {\r\n        if (!processor) return;\r\n        this.#processors ??= new Set();\r\n        this.#processors.add(processor);\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to remove\r\n     * @param {object} processor \r\n     */    \r\n    removeProcessor(processor) {\r\n        if (processor) this.#processors?.delete(processor);\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Generic event dispatcher, can be overriden to controll when to fire event\r\n     * @param {*} owner \r\n     * @param {*} type \r\n     * @param {*} data \r\n     * @param {*} error \r\n     */\r\n    notify(owner, type, data, error) {\r\n        this.emit(error ? 'error' : type, { type: type, error: error, owner: owner, data: data }, true);\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.#processors?.forEach(c => c.postRead?.(data));\r\n            if (data) me.notify(owner, 'read', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'read', data, e);\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.#processors?.forEach(c => c.postWrite?.(data));\r\n            if (result) me.notify(owner, 'write', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'write', data, e);\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        if (!val) return false;\r\n        DataSelector.addSelected(val);\r\n        const me = this;\r\n        me.emit('selection-add', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        if (!val) return false;\r\n        DataSelector.removeSelected(val);\r\n        const me = this;\r\n        me.emit('selection-remove', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        DataSelector.clearSelected(data);\r\n        const me = this;\r\n        me.emit('selection-clear');\r\n        me.emit('select');\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    getSelected(data = []) {\r\n        return DataSelector.getSelected(data);\r\n    }\r\n\r\n    /**\r\n     * Check if record id is in list of selected records\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    isSelected(val) {\r\n        return DataSelector.isSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Get list of selected records.\r\n     * Override in inherited class\r\n     */\r\n    get selected() {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n    /**\r\n     * Reset the abstract read/write handler\r\n     */\r\n    reset() {\r\n        this.#processors = null;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"../base/GSFunction.mjs\";\r\nimport { GSLoader } from \"../base/GSLoader.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSAbstractReadWrite } from \"./AbstractReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #TYPE = \"remote\";\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #key = null;\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically register in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */\r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */\r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return { ...this.#headers };\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = { ...val };\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     */\r\n    get key() {\r\n        return this.#key;\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     * @var {String} \r\n     */\r\n    set key(val) {\r\n        this.#key = val;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */\r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#filter = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#sort = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest', 'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#writer);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Reset the read/write handler\r\n     */\r\n    reset() {\r\n        this.#src = '';\r\n        this.#headers = {};\r\n        this.#reader = 'GET';\r\n        this.#writer = 'POST';\r\n        this.#action = '';\r\n        this.#mode = '';\r\n        this.#key = null;\r\n        this.#skip = 0;\r\n        this.#limit = 0;\r\n        this.#sort = [];\r\n        this.#filter = [];\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSReadWrite.#TYPE, GSReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSData } from \"../base/GSData.mjs\";\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSCachedReadWrite class\r\n * @module base/GSCachedReadWrite\r\n */\r\n\r\n/**\r\n * ReadWrite with cached memory data. \r\n * @Class\r\n */\r\nexport class GSCachedReadWrite extends GSReadWrite {\r\n\r\n    static #TYPE = 'cached';\r\n\r\n    #data = [];\r\n\r\n    #reformat(data = []) {\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        return records;\r\n    }\r\n\r\n    #postFilter(data) {\r\n        const me = this;\r\n        data = GSData.sortData(data, me.sort);        \r\n        let limit = me.limit === 0 ? data.length : me.limit;\r\n        data = data.slice(me.skip, me.skip + limit);\r\n        return data;\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelected(this.#data);\r\n        this.#data = [];\r\n    }\r\n\r\n    append(data) {\r\n        if(!data) return false;\r\n        const me = this;\r\n        data = me.#reformat(data);\r\n        me.#data = me.#data.concat(data);\r\n        return me.#data;\r\n    }\r\n\r\n    remove(data) {\r\n        const me = this;\r\n        me.removeSelected(data);\r\n        me.#data = me.#data.filter(o => o =! data);\r\n        return me.#data;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n\r\n        if (me.#data.length === 0) {\r\n            const data = await super.onRead();\r\n            me.#data = me.#reformat(data);\r\n        }\r\n\r\n        let data = GSData.filterData(me.#data, me.filter, me.fields, me.limit);\r\n        data = me.#postFilter(data);\r\n        return data;\r\n    }\r\n\r\n    async onWrite(owner, data) {\r\n        return this.append(data);        \r\n    }\r\n\r\n    disable() {\r\n        this.#data = [];\r\n        super.disable();\r\n    }\r\n\r\n    set search(val) {\r\n        const me = this;\r\n        me.filter = val ? [{value : val}] : [];\r\n        me.read();\r\n        /*\r\n        let data = GSData.filterData(me.#data, [{value : val}]);\r\n        data = me.#postFilter(data);\r\n        me.notify(me, 'read', data);\r\n        */\r\n    }\r\n\r\n    clearSelected() {\r\n        return super.clearSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return super.getSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSCachedReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Reset the cached read/write handler\r\n     */\r\n    reset() {\r\n        this.clear();\r\n        super.reset();\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSCachedReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSCachedReadWrite.#TYPE, GSCachedReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { Tree } from \"../helpers/Tree.mjs\";\r\n\r\n/**\r\n * A module loading TreeNode class\r\n * @module data/TreeNode\r\n */\r\n\r\n/**\r\n * UI mediator between Tree linked nodes and WebComponents\r\n * @Class\r\n */\r\nexport class TreeNode extends Tree {\r\n\r\n    #multi = false;\r\n    #opened = false;\r\n    #focused = false;\r\n    #selected = false;\r\n    \r\n    #focusedNode = undefined;\r\n    #selectedNode = undefined;\r\n    #controllers = undefined;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        super(key, value, parent, level);\r\n\r\n        if (value?.select === true || (this.multi && parent?.selected)) this.selected = true;\r\n        if (value?.focus === true) this.focused = true;\r\n        if (value?.open === true) this.opened = true;\r\n    }\r\n\r\n    addController(controller) {\r\n        const root = this.root;\r\n        (root.#controllers ??= new Set()).add(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.root.#controllers?.delete(controller);\r\n    }\r\n\r\n    /**\r\n     * Is multi selection available\r\n     */\r\n    get multi() {\r\n        return this.root.#multi === true;\r\n    }\r\n\r\n    set multi(val) {\r\n        this.root.#multi = val === true;\r\n    }\r\n\r\n    get visible() {\r\n        if (this.level < 0) return true;\r\n        return this.parent?.opened;\r\n    }\r\n\r\n    /**\r\n     * select single node, removing seelction flag from all other nodes\r\n     */\r\n    get opened() {\r\n        if (this.level < 0) return true;\r\n        return this.isLeaf ? this.parent?.opened : this.#opened;\r\n    }\r\n\r\n    set opened(val) {\r\n        val = val === true;\r\n        if (val) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus single node, removing focus flag from all other nodes\r\n     */\r\n    get focused() {\r\n        return this.#focused;\r\n    }\r\n\r\n    set focused(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const changed = this.#focused != val;\r\n        const focusedNode = root.focusedNode();\r\n        \r\n        root.#focusedNode = undefined;        \r\n        this.#focused = val;\r\n        if (focusedNode && focusedNode !== this) {\r\n            focusedNode.focused = false;\r\n        }\r\n\r\n        if (val) root.#focusedNode = this;\r\n        if (changed) root.#controllers?.forEach((c) => c.onFocusChanged?.(this));\r\n    }\r\n\r\n    /**\r\n     * Select single or multi node, depending on multi selection flag\r\n     * If single, remove selection flag from all other nodes\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    set selected(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const selectedNode = root.selectedNode();\r\n        const changed = this.#selected != val;\r\n        this.#selected = val;\r\n        if (val) {\r\n            if (selectedNode && selectedNode !== this && !root.multi) {\r\n                selectedNode.selected = false;\r\n            }\r\n            root.#selectedNode = this;\r\n        }\r\n        if (changed) {\r\n            root.#controllers?.forEach((c) => c.onSelectionChanged?.(this, selectedNode));\r\n            if (root.multi) root.#controllers?.forEach((c) => c.onSelectionChanged?.(this.parent, selectedNode));\r\n        } \r\n    }\r\n\r\n    get isPartialySelected() {\r\n        return this.selected && this.hasChildren && this.nodes.length > this.nodes.filter(n => n.selected).length;\r\n    }\r\n\r\n    /* hide from public\r\n    get host() {\r\n        return this[Symbol.for('gs-element')];\r\n    }\r\n\r\n    set host(el) {\r\n        this[Symbol.for('gs-element')] = el;\r\n    }\r\n    */\r\n\r\n    selectAll() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            this.deselectAll();\r\n            this.selected = true;\r\n            return\r\n        }\r\n        this.#selectionFlag(true);\r\n        root.#selectedNode = this;\r\n        root.#controllers?.forEach((c) => c.onSelectAll?.(root));\r\n    }\r\n\r\n    deselectAll() {\r\n        const root = this.root;\r\n        this.#selectionFlag(false);\r\n        root.#selectedNode = undefined;\r\n        root.#controllers?.forEach((c) => c.onDeselectAll?.(root));\r\n    }\r\n\r\n    /**\r\n     * Return last focused node\r\n     * @returns \r\n     */\r\n    focusedNode() {\r\n        const node = this.root.#focusedNode;\r\n        return node?.focused ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * Return last selected node\r\n     * @returns \r\n     */\r\n    selectedNode() {\r\n        const node = this.root.#selectedNode;\r\n        return node?.selected ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * List all selected nodes.\r\n     * @returns \r\n     */\r\n    selectedNodes() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            const node = root.selectedNode()\r\n            return node?.selected ? [node] : [];\r\n        }\r\n        return Array.from(root.walk().filter(o => o.selected));\r\n    }\r\n\r\n    /**\r\n     * Call from external controller data must be refresshed (to notify UI optionally)\r\n     * @param {*} root \r\n     */\r\n    refresh(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onRefresh?.(this));\r\n    }\r\n\r\n    /**\r\n     * Notify controllers about data loading (from async controller)\r\n     * @param {*} root \r\n     */\r\n    loading(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onLoad?.(this));\r\n    }\r\n\r\n    expandAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.expand(root);\r\n        }\r\n    }\r\n\r\n    collapseAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.collapse(root);\r\n        }\r\n    }\r\n\r\n    expand(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        if (!me.parent?.opened) {\r\n            me.parent?.expand(root);\r\n        }\r\n        const update = !me.opened;\r\n        me.#opened = true;\r\n        if (update) me.#expanded(root);\r\n        //me.nodes?.filter( n => !n.opened).forEach(c => c.refresh(root));\r\n        me.nodes?.forEach(c => c.refresh(root));\r\n    }\r\n\r\n    collapse(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        const update = me.#opened || me.parent.#opened;\r\n        me.nodes?.filter(n => n.opened || n.parent.opened).forEach(o => o.collapse(root));\r\n        //me.nodes?.forEach(o => o.collapse(root));\r\n        me.#opened = false;\r\n        if (update) me.#collapsed(root);\r\n    }\r\n\r\n    select(val = true) {\r\n        this.selected = val === true;\r\n    }\r\n\r\n    #expanded(root) {\r\n        root.#controllers?.forEach((c) => c.onExpand?.(this));\r\n    }\r\n\r\n    #collapsed(root) {\r\n        root.#controllers?.forEach((c) => c.onCollapse?.(this));\r\n    }\r\n\r\n    release() {\r\n        if (this.#selected) this.selected = false;\r\n        super.release();\r\n    }\r\n\r\n    append(key, value = key) {\r\n        const me = this;\r\n        const node = super.append(key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onAppend?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    insert(parentNodeKey, key, value = key) {\r\n        const me = this;\r\n        const node = super.insert(parentNodeKey, key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onInsert?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    remove() {\r\n        const node = super.remove();\r\n        if (node) this.root.#controllers?.forEach((c) => c.onInsert?.(node));\r\n        return node;\r\n    }\r\n\r\n    #selectionFlag(val = false) {\r\n        val = val === true\r\n        for (let node of this.walk()) {\r\n            node.selected = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) TreeNode.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.nodes?.map(o => o.toJSON()) || {};\r\n        const obj = Object.assign({\r\n            key: this.key,\r\n            opened: this.#opened,\r\n            focused: this.#focused,\r\n            selected: this.#selected,\r\n            items: undefined\r\n        }, this.value);\r\n        obj.items = this.nodes?.map(o => o.toJSON());\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Reset the tree node\r\n     */\r\n    reset() {\r\n        this.#multi = false;\r\n        this.#opened = false;\r\n        this.#focused = false;\r\n        this.#selected = false;\r\n        this.#focusedNode = undefined;\r\n        this.#selectedNode = undefined;\r\n        this.#controllers = undefined;\r\n    }\r\n\r\n    static get root() {\r\n        return new TreeNode(null, null, null, -1);\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof TreeNode;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) return TreeNode.from(TreeNode.root, raw);\r\n            raw.forEach(o => TreeNode.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        obj.leaf = !Array.isArray(items);\r\n        const tree = new TreeNode(obj.key, obj, data ? parent : undefined);\r\n        if (items) TreeNode.from(tree, items);\r\n        if (hasParent) parent.append(tree);\r\n        return tree;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { TreeNode } from \"./TreeNode.mjs\";\r\n\r\n/**\r\n * A module loading GSTreeReader class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for reading Tree nodes\r\n * @Class\r\n */\r\nexport class GSTreeReader extends GSReadWrite {\r\n\r\n    #data = TreeNode.root;\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    async write(val) {\r\n        throw new Error('Writer not available for TreeReader')\r\n    }\r\n\r\n    async read(owner) {\r\n        const me = this;\r\n        let node = undefined;\r\n        const data = await super.read(owner);\r\n        if (!this.#data) {\r\n            node = TreeNode.from(data);\r\n            this.#data = node;\r\n        } else {\r\n            const parent = me.filter?.length > 0 ? me.#data.findByKey(me.filter[0]) : me.#data;\r\n            parent.clear();\r\n            node = parent.fromJSON(data);\r\n        }\r\n        me.filter = undefined;\r\n        me.notify(owner, 'read', node);\r\n        return node;\r\n    }\r\n\r\n    disable() {\r\n        super.disable();\r\n        this.#data?.release();\r\n    }\r\n\r\n    notify(owner, type, data, error) {\r\n        const isNode = data instanceof TreeNode;\r\n        if (!error && !isNode && type === 'read') return;\r\n        super.notify(owner, type, data, error);\r\n    }\r\n\r\n    /**\r\n     * Called from Tree when node is expanded \r\n     * @param {*} node \r\n     */\r\n    async onExpand(node) {\r\n        if (node.hasChildren) return;\r\n        node.loading();\r\n        this.filter = node.key;\r\n        return await this.read();\r\n    }\r\n\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    /**\r\n     * Reset the tree data\r\n     */\r\n    resetData() {\r\n        this.#data = TreeNode.root;\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSTreeReader} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSTreeReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('tree', GSTreeReader);\r\n    }\r\n\r\n}","// Lit 3.0 Google\r\nconst litUrl = globalThis.GS_LIT_URL || '/bootstrap-lit/assets/lib/lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const Directive = litModule.Directive;\r\nexport const LitElement = litModule.LitElement;\r\nexport const PartType = litModule.PartType;\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const adoptStyles = litModule.adoptStyles;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const createRef = litModule.createRef;\r\nexport const css = litModule.css;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const directive = litModule.directive;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getCompatibleStyle = litModule.getCompatibleStyle;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const guard = litModule.guard;\r\nexport const html = litModule.html;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isServer = litModule.isServer;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const literal = litModule.literal;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const noChange = litModule.noChange;\r\nexport const notEqual = litModule.notEqual;\r\nexport const nothing = litModule.nothing;\r\nexport const range = litModule.range;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const render = litModule.render;\r\nexport const repeat = litModule.repeat;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const staticHtml = litModule.staticHtml;\r\nexport const staticSvg = litModule.staticSvg;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const svg = litModule.svg;\r\nexport const templateContent = litModule.templateContent;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const unsafeStatic = litModule.unsafeStatic;\r\nexport const until = litModule.until;\r\nexport const when = litModule.when;\r\nexport const withStatic = litModule.withStatic;","import { Directive, directive, nothing } from \"../lib.mjs\";\r\n\r\nconst definition = {\r\n    'action': 'gsAction',\r\n    'anchor': 'gsAnchor',\r\n    'attribute': 'gsAttribute',\r\n    'call': 'gsCall',\r\n    'exec': 'gsExec',\r\n    'inject': 'gsInject',\r\n    'property': 'gsProperty',\r\n    'swap': 'gsSwap',\r\n    'target': 'gsTarget',\r\n    'template': 'gsTemplate',\r\n    'toggle': 'gsToggle',\r\n    'trigger': 'gsTrigger',\r\n    'value': 'gsValue',\r\n    'calls':'gsCall',\r\n    'toggles':'gsToggle',\r\n    'timeout':'gsTimeout',\r\n    'triggers':'gsTrigger'\r\n};\r\n\r\nconst template = {\r\n    'gsAction': undefined,\r\n    'gsAnchor': undefined,\r\n    'gsAttribute': undefined,\r\n    'gsCall': undefined,\r\n    'gsExec': undefined,\r\n    'gsInject': undefined,\r\n    'gsProperty': undefined,\r\n    'gsSwap': undefined,\r\n    'gsTarget': undefined,\r\n    'gsTemplate': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTrigger': undefined,\r\n    'gsValue': undefined,\r\n    'gsCall': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTimeout': undefined,\r\n    'gsTrigger': undefined\r\n};\r\n\r\nclass DatasetDirective extends Directive {\r\n\r\n    render(obj) {\r\n        console.log(obj);\r\n        return nothing;\r\n    }\r\n\r\n    update(part, [obj, flat = true]) {\r\n\r\n        if (!obj) return nothing;\r\n        const dataset = part.element.dataset;\r\n        const srcset = obj.dataset || obj;\r\n        const isDataset = srcset instanceof DOMStringMap;\r\n\r\n        if (isDataset) {\r\n            Object.assign(dataset, srcset);\r\n        } \r\n        \r\n        if (flat) this.#remap(dataset, obj);\r\n\r\n        return nothing;\r\n    }\r\n\r\n    #remap(dataset, obj) {\r\n        const opt = Object.assign({}, template);\r\n        const list = Object.entries(obj).filter(v => Object.hasOwn(definition, v[0]));\r\n        if (list.length > 0) {\r\n            list.forEach(kv => opt[definition[kv[0]]] = kv[1]);\r\n            Object.keys(opt)\r\n            .filter(k => opt[k] !== undefined)\r\n            .forEach(k => dataset[k] = opt[k]);\r\n        }\r\n    }\r\n}\r\n\r\nexport const dataset = directive(DatasetDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\n\r\n/**\r\n * Generic object property descriptor getter\r\n * @param {Object} instance \r\n * @returns {PropertyDescriptor}\r\n */\r\nfunction descriptors(instance) {\r\n  return Object.entries(Object.getOwnPropertyDescriptors(instance));\r\n}\r\n\r\n/**\r\n * List of all object property descriptors \r\n * @param {Object} instance Object instance \r\n * @returns {Array<PropertyDescriptor>}\r\n */\r\nfunction listProperties(instance) {\r\n  return descriptors(instance)\r\n    .filter(e => typeof e[1].value !== 'function')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List all object property getters\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGetters(instance) {\r\n  return descriptors(Reflect.getPrototypeOf(instance))\r\n    .filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List of all gettable properties from an object\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGettable(instance) {\r\n  return new Set([...listGetters(instance), ...listProperties(instance)]);\r\n}\r\n\r\n/**\r\n * Parse string literal template into Lit html instance\r\n * @param {*} tpl \r\n * @param {*} params \r\n * @returns {function}\r\n */\r\nexport function literalTemplate(tpl, params) {\r\n  const names = Array.from(listGettable(params));\r\n  const vals = names.map(v => params[v]);\r\n  names.push('html');\r\n  vals.push(html);\r\n  return new Function(...names, `return html\\`${tpl}\\`;`)(...vals);\r\n}","/**\r\n * A clone of classMap directive to support CSS directive.\r\n * Lit classs is not expoed, so we have to clone it and create our own.\r\n */\r\n\r\nimport { Directive, PartType, directive, noChange } from \"../lib.mjs\";\r\n\r\nclass CssMapDirective extends Directive {\r\n\r\n    constructor(partInfo) {\r\n        super(partInfo);\r\n        if (partInfo.type !== PartType.ATTRIBUTE ||\r\n            partInfo.name !== 'css' ||\r\n            partInfo.strings?.length > 2) {\r\n            throw new Error('`classMap()` can only be used in the `css` attribute ' +\r\n                'and must be the only part in the attribute.');\r\n        }\r\n    }\r\n\r\n    render(classInfo) {\r\n        // Add spaces to ensure separation from static classes\r\n        return (' ' +\r\n            Object.keys(classInfo)\r\n                .filter((key) => classInfo[key])\r\n                .join(' ') +\r\n            ' ');\r\n    }\r\n\r\n    update(part, [classInfo]) {\r\n\r\n        // Remember dynamic classes on the first render\r\n        if (this._previousClasses === undefined) {\r\n            this._previousClasses = new Set();\r\n            if (part.strings !== undefined) {\r\n                this._staticClasses = new Set(part.strings\r\n                    .join(' ')\r\n                    .split(/\\s/)\r\n                    .filter((s) => s !== ''));\r\n            }\r\n\r\n            for (const name in classInfo) {\r\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\r\n                    this._previousClasses.add(name);\r\n                }\r\n            }\r\n            return this.render(classInfo);\r\n        }\r\n\r\n        const classList = part.element.classList;\r\n\r\n        // Remove old classes that no longer apply\r\n        for (const name of this._previousClasses) {\r\n            if (!(name in classInfo)) {\r\n                classList.remove(name);\r\n                this._previousClasses.delete(name);\r\n            }\r\n        }\r\n\r\n        // Add or remove classes based on their classMap value\r\n        for (const name in classInfo) {\r\n            // We explicitly want a loose truthy check of `value` because it seems\r\n            // more convenient that '' and 0 are skipped.\r\n            const value = !!classInfo[name];\r\n            if (value !== this._previousClasses.has(name) &&\r\n                !this._staticClasses?.has(name)) {\r\n                if (value) {\r\n                    classList.add(name);\r\n                    this._previousClasses.add(name);\r\n                } else {\r\n                    classList.remove(name);\r\n                    this._previousClasses.delete(name);\r\n                }\r\n            }\r\n        }\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * A directive that applies dynamic CSS classes.\r\n *\r\n * This must be used in the `css` attribute and must be the only part used in\r\n * the attribute. It takes each property in the `classInfo` argument and adds\r\n * the property name to the element's `classList` if the property value is\r\n * truthy; if the property value is falsey, the property name is removed from\r\n * the element's `css`.\r\n *\r\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\r\n * truthy.\r\n *\r\n * @param classInfo\r\n */\r\nexport const cssMap = directive(CssMapDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocapitalizeTypes = ['', 'none', 'off', 'on', 'sentences', 'words', 'characters'];\r\n\r\nexport const autocapitalize = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocapitalizeTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocompleteTypes = ['', 'off', 'on'];\r\n\r\nexport const autocomplete = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocompleteTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocorrectTypes = ['', 'on', 'off'];\r\n\r\nexport const autocorrect = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocorrectTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\nexport class ButtonTypes {\r\n\r\n    static values = ['button', 'reset', 'submit'];\r\n\r\n    static is(val) {\r\n        return ButtonTypes.values.includes(val);\r\n    }\r\n\r\n    static isReset(val) {\r\n        return  ButtonTypes.isType(val, 'reset');\r\n    }\r\n\r\n    static isSubmit(val) {\r\n        return  ButtonTypes.isType(val, 'submit');\r\n    }\r\n\r\n    /**\r\n     * Check button type, by spec, if not set, default is 'submit'\r\n     * @param {*} type - button type\r\n     * @param {*} value - matching value\r\n     * @returns \r\n     */\r\n    static isType(type, value) {\r\n        return ButtonTypes.#normalize(type) === value;\r\n    }\r\n\r\n    static #normalize(type) {\r\n        return GSUtil.normalize(type, 'submit').toLowerCase();\r\n    }\r\n} \r\n\r\nexport const buttonType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ButtonTypes.is(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ColorTypes = ['', 'primary', 'secondary', 'dark', 'light', 'info', 'warning', 'danger', 'alert', 'link', 'success'];\r\n\r\nexport const color = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ColorTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'desktop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const InputTypes = [\r\n   { type: 'checkbox', ignore: true},\r\n   { type: 'radio', ignore: true},\r\n   { type: 'switch', ignore: true},\r\n   { type: 'range', ignore: true},\r\n   { type: 'number', native: true},\r\n   { type: 'email', native: true},\r\n   { type: 'url',  native: true},\r\n   { type: 'file', native: true}, \r\n   { type: 'text'},\r\n   { type: 'password'}\r\n];\r\n\r\nexport const inputType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && InputTypes.filter(o => o.type === newVal).length === 1;\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const NavTypes = ['', 'pills', 'tabs', 'underline'];\r\n\r\nexport const nav = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && NavTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val);\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val);\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PlacementTypes {\r\n\r\n    static values = ['center', 'left', 'right', 'start', 'end', 'top', 'bottom'];\r\n\r\n    static includes(val) {\r\n        return PlacementTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        return PlacementTypes.values.indexOf(val) > 4;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = PlacementTypes.values.indexOf(val)\r\n        return idx > 0 && idx < 5;\r\n    }\r\n\r\n    static isCenter(val) {\r\n        return PlacementTypes.values.indexOf(val) === 0;\r\n    }\r\n\r\n    static isBefore(val) {\r\n        return ['left', 'start', 'top'].includes(val);\r\n    }\r\n\r\n    static isAfter(val) {\r\n        return ['right', 'end', 'bottom'].includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const placement = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PlacementTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PositionTypes {\r\n\r\n    static values = ['absolute', 'fixed', 'relative', 'sticky', 'static'];\r\n\r\n    static includes(val) {\r\n        return PositionTypes.values.includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const position = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PositionTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const SizeTypes = { 'default' : '', 'normal': '',  'medium': '', 'small': 'sm', 'large': 'lg', 'big' : 'lg', 'extra' : 'xl' };\r\n\r\nexport const size = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && Object.hasOwn(SizeTypes, newVal);\r\n    }\r\n\r\n};","export const stringArrayConverter = {\r\n    fromAttribute: (value, type) => {\r\n        return (value || '').split(',');\r\n    },\r\n    toAttribute: (value, type) => {\r\n        return (value || []).join(',');\r\n    }\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\nimport { GSCacheStyles } from '../base/GSCacheStyles.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time gs-adopted event is triggered by the GSAdoptedEngine class,\r\n * all registerd controllers will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to prevent DOM node polution; \r\n * Style changes are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#dynamic = null;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values, isGlobal = false) {\r\n    const me = this;\r\n    let style = null;\r\n    if (isGlobal) {\r\n      style = GSCacheStyles.dynamic;\r\n    } else {\r\n      me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');      \r\n      style = me.#dynamic;\r\n    }    \r\n    if (values === null && style.rules.length > 0 ) return style.removeRule(name);\r\n    return style.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host?.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.detach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  // called only once, before host.firstUpdate\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (!me.#isSelf() && me.#target) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs)\r\n        .filter(el => el ? true : false)\r\n        .forEach(el => GSDOM.cleanup(el));\r\n    }\r\n    me.#refs?.clear();\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { DataSelector } from \"../data/DataSelector.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n  #selectCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#selectCallback = me.#onSelect.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.filter = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get selected() {\r\n    return this.store?.selected;\r\n  }\r\n\r\n  isSelected(val) {\r\n    return this.#selector.isSelected(val);\r\n  }\r\n\r\n  addSelected(val) {\r\n    return this.#selector.addSelected(val);\r\n  }\r\n  \r\n  removeSelected(val) {\r\n    return this.#selector.removeSelected(val);\r\n  }\r\n\r\n  clearSelected(data) {\r\n    return this.#selector.clearSelected(data);\r\n  }\r\n\r\n  getSelected(data) {\r\n    return GSUtil.asArray(data).filter(o => DataSelector.isSelected(o));\r\n  }\r\n\r\n  get #selector() {\r\n    return this.store || DataSelector;\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    if (storage) {\r\n      storage.on('read', me.#readCallback);\r\n      storage.on('write', me.#writeCallback);\r\n      storage.on('error', me.#errorCallback);\r\n      storage.on('select', me.#selectCallback);\r\n      if (read) storage.read(me.#host);\r\n    }\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    if (storage) {\r\n      storage.off('read', me.#readCallback);\r\n      storage.off('write', me.#writeCallback);\r\n      storage.off('error', me.#errorCallback);\r\n      storage.off('select', me.#selectCallback);\r\n    }\r\n  }\r\n\r\n  #onSelect(e) {\r\n    this.#host.requestUpdate?.();\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for elment move events, properly handling mouse events.\r\n */\r\nexport class ElementMoveController {\r\n\r\n  #host;\r\n  #element;\r\n  #attached = false;\r\n\r\n  #cursorX = 0;\r\n  #cursorY = 0;\r\n\r\n  #mouseUpCallback;\r\n  #mouseDownCallback;\r\n  #mouseMoveCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n    me.#mouseUpCallback = me.#onMouseUp.bind(me);\r\n    me.#mouseDownCallback = me.#onMouseDown.bind(me);\r\n    me.#mouseMoveCallback = me.#onMouseMove.bind(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  attach(element) {\r\n    const me = this;\r\n    if (!me.#attached) {\r\n      me.#element = element;\r\n      me.#attached = true;\r\n      me.#host.attachEvent(me.#element, 'mousedown', me.#mouseDownCallback);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.#cursorX = 0;\r\n    me.#cursorY = 0;\r\n    me.#host.removeEvent(document, 'mouseup', me.#mouseUpCallback);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n  * Call host onStartMove function\r\n  * @param {MouseEvent} e \r\n  */\r\n  #onMouseDown(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n    me.#host.onStartMove?.(e, me.#cursorX, me.#cursorY);\r\n    me.#host.attachEvent(document, 'mouseup', me.#mouseUpCallback, true);\r\n    me.#host.attachEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n   * Remove mousemove listener and call host onEndMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseUp(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n    return me.#host.onEndMove?.(e, me.#cursorX, me.#cursorY);\r\n  }\r\n\r\n  /**\r\n   * Call host onMouseMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseMove(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n\r\n    me.#host.onMouseMove?.(e, me.#cursorX, me.#cursorY);\r\n\r\n    if (me.#cursorX < e.clientX) {\r\n      me.#host.onCursorRight?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorX > e.clientX) {\r\n      me.#host.onCursorLeft?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    if (me.#cursorY < e.clientY) {\r\n      me.#host.onCursorUp?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorY > e.clientY) {\r\n      me.#host.onCursorDown?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #language;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#language = host.language;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#language = null;\r\n  }\r\n\r\n  // called every time host is updated\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#language !== me.#host?.language) {\r\n      me.#language === me.#host?.language;\r\n      me.updateLanguage(me.#language);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#language) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n// internal hidden flag to prevent double injection\r\nconst RENDER_SYMBOL = Symbol.for(\"GS-TEMPLATE-RENDER\");\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n  #once;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n  static #cache = new Map();\r\n  static #refs = new Set();\r\n\r\n  static get isPrefetch() {\r\n    return globalThis.GS_TEMPLATE_PREFETCH || false;\r\n  }\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#once = true;\r\n    host[RENDER_SYMBOL] = false;\r\n    host.addController(this);\r\n  }\r\n\r\n  // inherited\r\n  hostConnected() {\r\n    const me = this;\r\n    /* \r\n    if(TemplateController.isPrefetch) {\r\n      me.hostUpdate();\r\n    }\r\n    */\r\n  }\r\n\r\n  // inherited\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    delete me.#host[RENDER_SYMBOL];\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  // inherited\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#template) return;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      const template = TemplateController.#cache.get(me.#toKey(ref));\r\n      if (GSUtil.isJsonType(template)) me.#applyTemplate(template);\r\n      me.#lastRef = ref;\r\n      if (ref && !me.#template) {\r\n        TemplateController.#schedule(me);\r\n      }\r\n    }\r\n  }\r\n\r\n  // inherited\r\n  hostUpdated() {\r\n    const me = this;\r\n    const host = me.#host;\r\n    // after fixing gselement.#updateHide this controller can be auto-removed\r\n    // in case of issues, replace with commented block\r\n    if (me.#template && host.hasUpdated) {\r\n      host.removeController(me);\r\n      host.templateInjected?.();\r\n      queueMicrotask(()=> me.hostDisconnected());\r\n    }\r\n\r\n    /*\r\n    if (me.#template && me.#once) {\r\n      me.#once = false;\r\n      host.templateInjected?.();\r\n    }\r\n    */\r\n\r\n  }\r\n\r\n  #toKey(ref) {\r\n    const me = this;\r\n    return GSUtil.isString(ref) ? `${ref}@${me.#host?.tagName || ''}` : ref;\r\n  }\r\n\r\n  #hasKey(key) {\r\n    return TemplateController.#refs.has(key) || TemplateController.#cache.has(key);\r\n  }\r\n\r\n  // applly template opts {simple, slots}\r\n  #applyTemplate({ simple, slots }) {\r\n\r\n    // is template does not contain slots\r\n    const me = this;\r\n    if (!me.#host) return;\r\n\r\n    const hasSlots = GSDOM.isTemplateElement(slots);\r\n    const hasSimple = GSDOM.isTemplateElement(simple);\r\n\r\n    let signal = true;\r\n\r\n    if (hasSlots) {\r\n      // slot elements must be added only once \r\n      if (me.#host[RENDER_SYMBOL] === false) {\r\n        me.#host[RENDER_SYMBOL] = true;\r\n        const clone = slots.cloneNode(true);\r\n        Array.from(clone.content.children).forEach(el => me.#host.appendChild(el));\r\n      }\r\n    }\r\n\r\n    if (hasSimple) {\r\n      if (simple.content.childElementCount > 0) {\r\n        signal = false;\r\n        me.#template = simple.cloneNode(true);\r\n        me.#host.requestUpdate();\r\n      }\r\n    }\r\n\r\n    if (signal) me.#host.templateInjected?.();\r\n\r\n  }\r\n\r\n  // separate first level nodes into sloted nodes and plain shadow injectable node \r\n  #preprocessTemplate(template) {\r\n    let templateSimple = null;\r\n    let templateSlots = null;\r\n    const slots = Array.from(template.content.children).filter(el => el.hasAttribute('slot'));\r\n    const hasSlots = slots.length > 0;\r\n    const hasSimple = template.content.childElementCount > slots.length;\r\n    if (hasSlots) {\r\n      if (hasSimple) {\r\n        templateSlots = document.createElement('template');\r\n        slots.forEach(el => templateSlots.content.appendChild(el));\r\n      } else {\r\n        templateSlots = template;\r\n      }\r\n    }\r\n    templateSimple = hasSimple && template?.content.childElementCount > 0 ? template : null;\r\n    templateSlots = hasSlots && templateSlots?.content.childElementCount > 0 ? templateSlots : null;\r\n    // cache copy for page injected templates as they might be cleared elswhere\r\n    templateSimple = templateSimple?.isConnected ? templateSimple.cloneNode(true) : templateSimple;\r\n    return { simple: templateSimple, slots: templateSlots };\r\n  }\r\n\r\n  async #load() {\r\n\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    \r\n    if (!ref) return;\r\n    const key = me.#toKey(ref);\r\n\r\n    // prevents double load\r\n    if (me.#hasKey(key)) {\r\n      // already scheduled\r\n      return;\r\n    }\r\n    TemplateController.#refs.add(key);\r\n\r\n    let templates = null;\r\n\r\n    const isTplEl = GSDOM.isTemplateElement(ref);\r\n    const cacheable = GSUtil.isString(ref);\r\n    if (cacheable) {\r\n      templates = TemplateController.#cache.get(key);\r\n    }\r\n\r\n    if (!templates) {\r\n      \r\n      try {\r\n        const template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n        templates = me.#preprocessTemplate(template);\r\n      } catch (err) {\r\n        TemplateController.#refs.delete(key);\r\n        throw err;\r\n      }\r\n\r\n      if (cacheable) {\r\n        if (templates.simple) templates.simple.dataset.gsCache = true;\r\n        TemplateController.#cache.set(key, templates);\r\n      }\r\n    }\r\n    \r\n    TemplateController.#refs.delete(key);\r\n    me.#applyTemplate(templates);\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    return GSDOM.templateRef(this.#host);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = false));\r\n    }\r\n  }\r\n\r\n  static clear() {\r\n    GSTemplateCache.clear();\r\n    TemplateController.#tasks.clear();\r\n    TemplateController.#cache.clear();\r\n    TemplateController.#refs.clear();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#theme = null;\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle event when template slot changes\r\n */\r\nexport class SlotController {\r\n\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      const me = this;\r\n      const target = me.#host.renderRoot || me.#host;\r\n      me.#host.attachEvent(target, 'slotchange', me.#onSlotChanged.bind(me));\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    #onSlotChanged(e) {\r\n      if (typeof e.target.assignedElements === 'function') {\r\n        e.target.assignedElements().forEach(el => {\r\n          el.onSlotInjected?.(e.target);\r\n        });\r\n      }\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\nimport { SlotController } from './controllers/SlotController.mjs';\r\nimport { GSAttributeHandler } from './base/GSAttributeHandler.mjs';\r\nimport { GSDOMObserver } from './base/GSDOMObserver.mjs';\r\nimport { GSID } from './base/GSID.mjs';\r\nimport { GSCacheStyles } from './base/GSCacheStyles.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    language: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted = undefined;\r\n  #uiHandler = undefined;\r\n  #orientation = undefined;\r\n  #localization = undefined;\r\n  #dataController = undefined;\r\n  #slotController = undefined;\r\n  #themes = undefined;\r\n  #template = undefined;\r\n  #content = undefined;\r\n  \r\n  #ref = undefined;\r\n  #refs = undefined;\r\n  #refx = undefined;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.language = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    //me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n    me.#slotController = new SlotController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    const tpl = GSDOM.templateRef(me);\r\n    if (tpl) me.#template = new TemplateController(me);\r\n    if (me.isBindable) me.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.detachListeners(this);\r\n    super.disconnectedCallback();\r\n    me.#ref?.clear();\r\n    me.#refs?.clear();\r\n    me.#refx?.clear();\r\n    me.#ref = null;\r\n    me.#refs = null;\r\n    me.#refx = null;\r\n    me.#adopted = null;\r\n    me.#uiHandler = null;\r\n    me.#orientation = null;\r\n    me.#localization = null;\r\n    me.#dataController = null;\r\n    me.#slotController = null;\r\n    me.#themes = null;\r\n    me.#template = null;\r\n    me.#content = null;\r\n    //me.renderOptions = null;\r\n    me.adoptedStyleSheets = [];\r\n    GSCacheStyles.deleteRule(me.#ruleName, true);\r\n    const shadow = this.shadowRoot;\r\n    if (shadow) {\r\n      //if (shadow._$litPart$) shadow._$litPart$ = null;\r\n      shadow.adoptedStyleSheets = [];\r\n      // shadow.innerHTML = '';\r\n      //GSDOM.cleanup(shadow);\r\n      queueMicrotask(() => GSDOM.cleanup(shadow));\r\n    }\r\n    queueMicrotask(() => GSDOM.cleanup(me));\r\n    // GSDOM.cleanup(me);\r\n    // console.log('deleted', me);\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.isConnected; // && this.isAllowRender;\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('hide')) {\r\n      me.#updateHide();\r\n    }\r\n    if (changed.has('storage')) {\r\n      me.#updateStorage();\r\n    }\r\n  }\r\n\r\n  get #ruleName() {\r\n    const me = this;\r\n    me.id = me.id ? me.id : GSID.id;\r\n    return `${me.tagName.toLowerCase()}#${me.id}`;\r\n  }\r\n\r\n  #updateHide() {\r\n    const me = this;\r\n    const value = me.hide ? 'none' : '';\r\n    GSCacheStyles.setRule(me.#ruleName, {display:value}, false, true);\r\n  }\r\n  \r\n  #updateStorage() {\r\n    const me = this;\r\n    me.#dataController?.hostDisconnected();\r\n    me.#dataController = undefined;\r\n    if (me.storage) {\r\n      me.#dataController = new DataController(me);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when this element injected in some slot\r\n   * @param {*} slot \r\n   */\r\n  onSlotInjected(slot) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    // repalced by #updateHide\r\n    //return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n    return this.isAllowRender ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return this.renderTemplate();\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : noChange;\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Called when asynchronnous template is injected into component\r\n   */\r\n  templateInjected() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to which to add parsed CSS\r\n   * @param {boolean} flag Default activation (true|false) for each CSS property\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .forEach(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @param {boolean} isGlobal \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value, isGlobal = false) {\r\n    return this.#adopted?.style(id, value, isGlobal);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @param {Number} levels - walk limit\r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '', levels = -1, cached = false) {\r\n    const me = this;\r\n\r\n    let result = me.#refx?.get(query);\r\n    if (result && !result.isConnected) {\r\n      result = undefined;\r\n      me.#refx?.delete(query);\r\n    }\r\n    result ??= GSDOM.closest(this, query, levels);\r\n    \r\n    if (result && cached && !me.#ref?.has(query)) {\r\n      me.#refx ??= new Map();\r\n      me.#refx.set(query, result);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false, cached = false) {\r\n    const me = this;\r\n\r\n    let result = me.#refs?.get(query);\r\n    if (result && !result.isConnected) {\r\n      result = undefined;\r\n      me.#refs?.delete(query);\r\n    }\r\n    result ??= GSDOM.query(this, query, false, shadow);\r\n    \r\n    if (result && cached && !me.#ref?.has(query)) {\r\n      me.#ref ??= new Map();\r\n      me.#ref.set(query, result);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false, cached = false) {\r\n    const me = this;\r\n    let result = me.#refs?.get(query);\r\n    if (result && !result.isConnected) {\r\n      result = undefined;\r\n      me.#refs?.delete(query);\r\n    }\r\n    result ??= GSDOM.queryAll(this, query, false, shadow);\r\n    if (result && cached && !me.#refs?.has(query)) {\r\n      me.#refs ??= new Map();\r\n      me.#refs.set(query, result);\r\n    } \r\n    return result;        \r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e, defaults, propagate, immediate) {\r\n    return GSEvents.prevent(e, defaults, propagate, immediate);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.language, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    //return this.dataset.gsTarget;\r\n    return GSAttributeHandler.isBindable(this);\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template?.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content?.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    // this.isConnected &&\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment ?? '');\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol ?? '');\r\n  }\r\n\r\n  /**\r\n   * Internal attribute set if component is generated by other components\r\n   */\r\n  get isGenerated() {\r\n    return this.hasAttribute('generated');\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Get instance of internal styles\r\n   */\r\n  get elementStyles() {\r\n    return this.constructor.elementStyles\r\n        .filter(o => o instanceof CSSStyleSheet || o.styleSheet instanceof CSSStyleSheet)\r\n        .map(o => o.styleSheet || o)\r\n        .pop();    \r\n    /*\r\n    .map(s => {\r\n       Object.values(s)\r\n        .filter(o => o instanceof CSSStyleSheet || o instanceof CSSResult)\r\n        .map(o => o.styleSheet || o)\r\n        .pop()\r\n    }).pop();\r\n    */\r\n  }\r\n\r\n  /**\r\n   * Internal shadow styles rule\r\n   * @param {*} name \r\n   * @returns \r\n   */\r\n  cssRule(name) {\r\n    return Array.from(this.elementStyles?.rules ?? []).filter(r => r.selectorText === name).pop();\r\n  }\r\n\r\n  /**\r\n   * Set dynamic CSS rule \r\n   * See GSIcon hot it is done\r\n   * @param {*} rule \r\n   * @param {*} name \r\n   * @param {*} value \r\n   */\r\n  setCSSProperty(rule, name, value) {\r\n    this.cssRule(rule)?.style?.setProperty(name, value);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    return GSDOM.allProperties(obj);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    return GSDOM.define(name, clazz || this, opt);\r\n  }\r\n\r\n  static {\r\n    GSElement.define('gs-element', GSElement);\r\n    // global document element removal monitor, help GS cleanup\r\n    GSDOMObserver.registerFilter(el => true, el => { GSDOM.cleanup(el) }, true, document.body);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from \"../GSElement.mjs\";\r\n\r\n/**\r\n * Controller for child element navigation / selection / focusing\r\n */\r\nexport class ElementNavigationController {\r\n\r\n  #host;\r\n  #attached;\r\n  #focused;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#attached = false;\r\n  }\r\n\r\n  get circular() {\r\n    return this.#host?.circular === true;\r\n  }\r\n\r\n  get multiple() {\r\n    return this.#host?.multiple === true;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host.active;\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */\r\n  init() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */  \r\n  attach(el) {\r\n    const me = this;\r\n    if (me.#attached) return;\r\n    me.#attached = true;\r\n    if (me.#host) {\r\n      me.#host.attachEvent(el, 'keydown', e => me.onKeyDown(e));\r\n      me.#host.attachEvent(el, 'keyup', e => me.onKeyUp(e));\r\n      me.#host.attachEvent(el, 'click', e => me.onClick(e));\r\n      me.#host.attachEvent(el, 'focusin', e => me.onFocusIn(e));\r\n      me.#host.attachEvent(el, 'focusout', e => me.onFocusOut(e));\r\n    }\r\n  }\r\n\r\n  previous() {\r\n    const me = this;\r\n    let el = me.#focused?.previousElementSibling;\r\n    while (el?.disabled) el = el.previousElementSibling;\r\n    if (me.circular && !el) el = me.lastElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  next() {\r\n    const me = this;\r\n    let el = me.#focused?.nextElementSibling;\r\n    while (el?.disabled) el = el.nextElementSibling;\r\n    if (me.circular && !el) el = me.firstElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    const me = this;\r\n    const active = me.selected;\r\n    if (me.multiple) {\r\n      active.forEach(el => {\r\n        el.active = false;\r\n        el.blur();\r\n      });\r\n    } else if (active) {\r\n      active.active = false;\r\n      active.blur();\r\n    }\r\n    me.#focused = undefined;\r\n    me.#host?.emit('group-reset', undefined, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element selected\r\n   * @param {*} el \r\n   */\r\n  #onSelected(el) {\r\n    const me = this;\r\n    me.#host?.onSelected?.(el);\r\n    me.#host?.emit('group-selected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element deselected\r\n   * @param {*} el \r\n   */\r\n  #onDeselected(el) {\r\n    this.#host?.onDeselected?.(el);\r\n    this.#host?.emit('group-deselected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  #onFocused(el) {\r\n    this.#host?.onFocused?.(el);\r\n    this.#host?.emit('group-focused', el, true);\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  #isNavigable(el) {\r\n    return this.#host?.isNavigable ? this.#host?.isNavigable(el) : true;\r\n  }\r\n\r\n  #focus(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    me.#focused = el;\r\n    if (el) {\r\n      me.#onFocused(me.#focused);\r\n    }\r\n  }\r\n\r\n  #toggle(el) {\r\n    if (!el) return;\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    if (el.active) {\r\n      me.#onSelected(el);\r\n    } else {\r\n      me.#onDeselected(el);\r\n    }\r\n  }\r\n\r\n  #select(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n\r\n    const active = me.selected;\r\n    if (active && !me.multiple) {\r\n      active.active = false;\r\n      me.#toggle(active);\r\n    }\r\n\r\n    if (me.multiple) {\r\n      el.active = !el.active;\r\n    } else {\r\n      el.active = true;\r\n    }\r\n    me.#toggle(el);\r\n  }\r\n\r\n  onFocusOut(e) {\r\n    const me = this;\r\n    //if (me.#focused === e.target) me.#focused = undefined;\r\n  }\r\n\r\n  onFocusIn(e) {\r\n    if (!e.target.isNav) return;\r\n    const me = this;\r\n    if(e.relatedTarget?.isNav) {\r\n      me.#focus(e.target)\r\n    } else {\r\n      me.selected?.focus();\r\n    }\r\n\r\n  }\r\n\r\n  onClick(e) {\r\n    const me = this;\r\n    const el = e.composedPath()\r\n    .filter(el => el instanceof GSElement)\r\n    .filter(el => el.parentComponent === me.#host).pop();\r\n    if (!me.#isNavigable(el)) return;\r\n    if (e.ctrlKey) me.reset();\r\n    me.#onDeselected(me.selected);\r\n    me.#select(el);\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    if (!e.target.isNav) return;\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        me.next();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    if (!e.target.isNav) return;\r\n    switch (e.code) {\r\n      case 'Space':\r\n      case 'Enter':\r\n        me.#focused?.click();\r\n        break;\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEventBus } from \"../base/GSEventBus.mjs\";\r\n\r\n/**\r\n * Controller for multiple elements groups\r\n */\r\nexport class GroupController {\r\n\r\n  #host;\r\n\r\n  #busEvent;\r\n  #busCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    if (me.#host.group) {\r\n      me.#busCallback = me.#onBusEvent.bind(me);\r\n      me.#busEvent = GSEventBus.register(me.#host.clazzName);\r\n      me.#busEvent.on(me.#host.group, me.#busCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#busEvent?.off(me.#host.group, me.#busCallback);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  #onBusEvent(e) {\r\n    this.#host.onBusEvent?.(e);\r\n  }\r\n\r\n  notify(data) {\r\n    const me = this;\r\n    me.#busEvent?.emit(me.#host.group, {owner: me.#host, item:data}); \t\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSRouter } from '../base/GSRouter.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { html } from '../lib1.mjs';\r\n\r\nexport class GSRouterElement extends GSElement {\r\n\r\n  #router = null;\r\n\r\n  static properties = {\r\n    url: {},\r\n    disabled: { type: Boolean },\r\n    logging: { type: Boolean }\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.id = GSID.next();\r\n    me.logging = false;\r\n    me.#router = new GSRouter(me);\r\n    me.#router.log = false;\r\n  }\r\n\r\n  renderUI() {\r\n    //return super.renderUI();\r\n    return html`<slot><slot/>`;\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    me.#router.log = me.logging;\r\n    if (changed.has('url')) {\r\n      me.#router.initialize(me.url);\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#router?.disable();\r\n    me.#router = null;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-router');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\n\r\nexport class GSAccordionElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    autoclose: { type: Boolean },\r\n    cssItem: { reflect: true, attribute: 'css-item' },\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    data: { type: Array }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.settings;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n       @notify=\"${me.#onNotify.bind(me)}\"\r\n       @click=\"${me.#onClick}\" \r\n       @keyup=\"${me.#onKeyUp}\" \r\n       class=\"accordion ${classMap(me.renderClass())}\">\r\n       ${this.#renderItems()}\r\n       <slot></slot></div>`\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-accordion-item', false, true);\r\n  }\r\n\r\n  get settings() {\r\n    const cfg = this.constructor.properties;\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n  }\r\n\r\n  close() {\r\n    this.#state(false);\r\n  }\r\n\r\n  open() {\r\n    this.#state(true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-accordion-item generated\r\n        .opened=\"${ifDefined(o.disabled === true)}\" \r\n        message=\"${ifDefined(o.message)}\" \r\n        template=\"${ifDefined(o.template)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-accordion-item>`;\r\n    });\r\n  }\r\n\r\n  #state(val = false) {\r\n    this.items.forEach(el => el.opened = val);\r\n    this.notify();\r\n  }\r\n\r\n  #onNotify(e) {\r\n    const me = this;\r\n    if (me.autoclose && e.target.opened) {\r\n      me.items.filter(el => el != e.target).forEach(el => el.opened = false);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const isItemCloser = e?.composedPath()[0]?.matches('.accordion-button');\r\n    if(isItemCloser) e.target.toggle?.();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        e.target.close?.();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.target.open?.();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSAccordionItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    message: { reflect: true, },\r\n    title: { reflect: true, },\r\n    opened: { type: Boolean, reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-ACCORDION';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const owner = me.owner;\r\n    const cssHeader = me.cssHeader || owner?.cssHeader;\r\n    const cssBody = me.cssBody || owner?.cssBody;\r\n    return html`<div class=\"accordion-item ${me.css}\">\r\n             <h2 class=\"accordion-header\">\r\n               <button type=\"button\" \r\n                class=\"accordion-button  ${cssHeader} ${me.opened ? '' : 'collapsed'}\"> \r\n                 ${me.translate(me.title)}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse  ${cssBody} ${me.opened ? 'show' : ''}\">\r\n               <div class=\"accordion-body\">\r\n                   ${me.translate(me.message)}\r\n                   ${me.renderTemplate()}\r\n                   <slot></slot>\r\n               </div>\r\n             </div>      \r\n     </div>`\r\n  }\r\n\r\n  open() {\r\n    this.notify(true);\r\n  }\r\n  \r\n  close() {\r\n    this.notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.notify(!this.opened);\r\n  }\r\n\r\n  notify(val = false) {\r\n    const me = this;\r\n    me.opened = val;\r\n    super.notify();\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-accordion') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSAlertElement extends GSElement {\r\n\r\n    static properties = {\r\n        message: { reflect: true },\r\n        color: { ...color },\r\n        closed: { reflect: true, type: Boolean },\r\n        closable: { reflect: true, type: Boolean },\r\n        delay: { reflect: true, type: Number },\r\n    }\r\n\r\n    #ref;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.delay = 1;\r\n        this.#ref = createRef();\r\n        this.#data = this.#proxify(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div role=\"alert\" dir=\"${ifDefined(me.direction)}\" ${ref(me.#ref)} \r\n            @mouseover=\"${() => me.#pause = true}\"\r\n            @mouseout=\"${() => me.#pause = false}\"\r\n            class=\"alert fade ${classMap(me.renderClass())}\" >\r\n            ${me.#first}\r\n            ${me.renderTemplate()}\r\n            <slot></slot>\r\n            ${me.#second}\r\n        </div>`;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#handleBillboard();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        if (!changed.has('opened')) return;\r\n        this.#handleBillboard();\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': !me.closed,\r\n            'alert-dismissible': me.closable,\r\n            [`alert-${me.color}`]: me.color,\r\n\r\n        }\r\n        return css;\r\n    }\r\n\r\n    open() {\r\n        this.notify(false);\r\n    }\r\n\r\n    close() {\r\n        this.notify(true);\r\n    }\r\n\r\n    toggle() {\r\n        this.notify(!this.closed);\r\n    }\r\n\r\n    notify(val = false) {\r\n        const me = this;\r\n        me.closed = val;\r\n        if (me.closed) setTimeout(() => { me.#ref.value.classList.toggle('d-none', true) }, 250);\r\n        super.notify();\r\n    }\r\n\r\n    get isBillboard() {\r\n        return this.#data?.length > 0;\r\n    }\r\n\r\n    get #message() {\r\n        return this.translate(this.message);\r\n    }\r\n\r\n    get #first() { return this.rtl ? this.#button : this.#message; };\r\n\r\n    get #second() { return this.rtl ? this.#message : this.#button; };\r\n\r\n    get #button() {\r\n        return this.closable ? html`<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"${this.close}\"></button>` : '';\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, {message:{}}));\r\n    }\r\n\r\n    #handleBillboard() {\r\n        const me = this;\r\n        if (me.closed) {\r\n            clearInterval(me.#interval);\r\n            me.#interval = 0;\r\n        } else {\r\n            me.#billboard();\r\n        }        \r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        if (!me.isBillboard) return;\r\n        const items = me.#data;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].message;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].message;\r\n        }, me.delay * 1000);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-alert');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { color, size, buttonType, ButtonTypes, SizeTypes } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSButtonElement extends GSElement {\r\n\r\n  static properties = {\r\n    type: { ...buttonType }, // reset, submit\r\n    size: { ...size }, // small, large, normal\r\n    color: { ...color },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    toggleColor: { ...color, attribute : 'toggle-color' },\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    outline: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    toggling: { type: Boolean },\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    text: {},\r\n    url: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'button';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<button is=\"gs-ext-button\" part=\"button\" role=\"button\" \r\n        ${ref(me.#refEl)}\r\n        dir=\"${ifDefined(me.direction)}\"\r\n        type=\"${ifDefined(me.type)}\" \r\n        class=\"btn ${classMap(me.renderClass())}\" \r\n        title=\"${ifDefined(me.#tooltip)}\"\r\n        ?disabled=${me.disabled}\r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"\r\n        @disabled=\"${me.#onDisabled}\"\r\n        @click=\"${me.#onClick}\">\r\n          ${me.#first} ${me.#second}</button>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n      'focus-ring': document.activeElement === me,\r\n      [`text-${me.text}`]: me.text,\r\n      [`btn-${size}`]: size,\r\n      [`btn-outline-${me.color}`]: me.outline,\r\n      [`btn-${me.color}`]: !me.outline && me.color,\r\n      [`btn-${me.toggleColor}`]: me.active && me.toggleColor,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    if(me.toggling) me.toggle();\r\n    me.iconEl?.animate?.();\r\n    me.#onHref(e)\r\n    if (me.dataset.event) return me.emit(me.dataset.event, null, me.dataset.bubbles, me.dataset.composed, true);\r\n    if (me.isReset) return me.form?.reset();\r\n    if (me.isSubmit) return me.form?.submit();\r\n    me.notify();\r\n  }\r\n\r\n  #onDisabled(e) {\r\n    this.disabled = this.buttonEl.disabled;\r\n  }\r\n\r\n  #onHref(e) {\r\n    const me = this;\r\n    if (!me.url) return;\r\n    if (me.url.startsWith('#')) {\r\n      location.hash = me.url;\r\n    } else {\r\n      location.href = me.url;\r\n    }\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover?.(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover?.(false);\r\n  }\r\n\r\n  get isReset() {\r\n    return ButtonTypes.isReset(this.type);\r\n  }\r\n\r\n  get isSubmit() {\r\n    return ButtonTypes.isSubmit(this.type);\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  get buttonEl() {\r\n    return this.#refEl.value;\r\n  }\r\n  \r\n\r\n  get form() {\r\n    return this.closest('gs-form, form');\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #tooltip() {\r\n    return this.translate(this.tooltip);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-button');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { unsafeHTML, classMap, html, ifDefined, css } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCalendarElement extends GSElement {\r\n\r\n  static styles = css`.year::-webkit-outer-spin-button,.year::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;} .year {-moz-appearance: textfield;} .day:focus{font-weight: bold;}`\r\n\r\n  static properties = {\r\n    date: {},\r\n    target: {},\r\n    format: { hasChanged: notEmpty },\r\n    editable: { type: Boolean },\r\n    range: { type: Number },\r\n    year: { type: Number },\r\n    month: { type: Number, hasChanged: numGE0 },\r\n    day: { type: Number, hasChanged: numGE0 },\r\n    minYear: { attribute: 'year-min', type: Number },\r\n    maxYear: { attribute: 'year-max', type: Number },\r\n    arrovPrev: { attribute: 'arrow-prev' },\r\n    arrowNext: { attribute: 'arrow-next' },\r\n    cssDays: { attribute: 'css-days' },\r\n    cssToday: { attribute: 'css-today' },\r\n    cssWeeks: { attribute: 'css-weeks' },\r\n    cssMonth: { attribute: 'css-month' },\r\n    cssYear: { attribute: 'css-year' },\r\n    cssNav: { attribute: 'css-nav' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n  }\r\n\r\n  #date;\r\n  #selected;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.#date = new GSDate();\r\n    me.#date.day = 1;\r\n    me.#selected = new GSDate();\r\n    me.#date.language = GSUtil.language;\r\n    me.#selected.language = GSUtil.language;\r\n    \r\n    me.language = GSUtil.language;\r\n    me.day = me.#selected.day;\r\n    me.month = me.#selected.month;\r\n    me.year = me.#selected.year;\r\n    \r\n    me.editable = false;\r\n    me.range = 5;\r\n    me.minYear = 1900;\r\n    me.maxYear = 2100;\r\n    me.arrowPrev = '&#10094;';\r\n    me.arrowNext = '&#10095;';\r\n    me.cssNav = 'btn-light';\r\n    me.cssToday = 'btn-secondary';\r\n    me.cssSelected = 'btn-primary';\r\n    me.cssWeeks = 'fw-bold text-bg-dark';\r\n    me.cssYear = 'form-control fs-5 fw-bold border-0 text-center m-1 p-0';\r\n    me.cssMonth = 'form-control fs-3 fw-bold border-0 text-center m-1 p-0';\r\n  }\r\n\r\n  get date() {\r\n    const me = this;\r\n    //return this.#date.toISOString();\r\n    return new Proxy(this.#date, {\r\n      set(target, prop, value) {\r\n        if (typeof target[prop] != 'function') {\r\n          target[prop] = value;\r\n          me.#update();\r\n        }\r\n        return true;\r\n      },\r\n      get(target, prop, receiver) {\r\n        const value = target[prop];\r\n        if (value instanceof Function) {\r\n          return function (...args) {\r\n            try {\r\n              return value.apply(this === receiver ? target : this, args);\r\n            } finally {\r\n              me.#update();\r\n            }\r\n          };\r\n        }\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  previousMonth() {\r\n    const me = this;\r\n    if (me.month == 0) {\r\n      me.month = 11;\r\n      me.year--;\r\n    } else {\r\n      me.month--;\r\n    }\r\n  }\r\n\r\n  nextMonth() {\r\n    const me = this;\r\n    if (me.month == 11) {\r\n      me.month = 0;\r\n      me.year++;\r\n    } else {\r\n      me.month++;\r\n    }\r\n  }\r\n\r\n  previousYear() {\r\n    this.year--;\r\n  }\r\n\r\n  nextYear() {\r\n    this.year++;\r\n  }\r\n\r\n  formatted(date) {\r\n    const me = this;\r\n    return (date || me.#date).format(me.format, me.language);\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    const date = new GSDate(me.#date);\r\n    me.#updateTarget(date);\r\n    me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#date.day = 1;\r\n    me.#date.month = me.month;\r\n    me.#date.year = me.year;\r\n    me.#date.day = me.day;\r\n    me.#date.language = me.language;\r\n\r\n    const week = GSDate.dayList(true, me.language).map(v => html`<div class=\"col\">${v}</div>`);\r\n    const months = me.#monthsHTML();\r\n    const year = me.#yearHTML();\r\n\r\n    return html`\r\n          <div class=\"container-fluid text-center ${classMap(me.renderClass())}\"\r\n          dir=\"${ifDefined(me.direction)}\"\r\n          @keydown=\"${me.#onKey}\"\r\n          @click=\"${me.#onDay}\">\r\n          <div class=\"row align-items-center ${me.cssHeader} header\">\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.previousMonth}\" class=\"btn ${me.cssNav} arrow prev\">${unsafeHTML(me.arrowPrev)}</a>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  ${months}\r\n                  ${year}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.nextMonth}\" class=\"btn ${me.cssNav} arrow next\">${unsafeHTML(me.arrowNext)}</a>\r\n              </div>\r\n          </div>\r\n          <div class=\"row weeks ${me.cssWeeks}\">${week}</div>\r\n          ${unsafeHTML(me.#daysHTML())}\r\n      </div>`;\r\n  }\r\n\r\n  #updateTarget(date) {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    const tgt = GSDOM.query(document.documentElement, me.target);\r\n    if (!tgt) return;\r\n\r\n    if (tgt instanceof HTMLInputElement) {\r\n      if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n      return tgt.value = me.formatted(date);\r\n    }\r\n    GSDOM.setHTML(tgt, me.formatted(date));\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    me.#selected.day = 1;\r\n    me.#selected.month = me.#date.month;\r\n    me.#selected.year = me.#date.year;\r\n    me.#selected.day = me.#date.day;\r\n    me.#selected.language = me.#date.language;\r\n\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.language = me.#date.language;\r\n  }\r\n\r\n  #isToday(v, date) {\r\n    const me = this;\r\n    return v && GSUtil.asNum(v) === date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n  }\r\n\r\n  #daysHTML() {\r\n    const me = this;\r\n    const today = new GSDate();\r\n    today.language = me.language;\r\n    const list = me.#date.build(me.language);\r\n    const result = list\r\n      .map(v => {\r\n        const c1 = me.#isToday(v, today) ? me.cssToday : '';\r\n        const c2 = me.#isToday(v, me.#selected) ? me.cssSelected : '';\r\n\r\n        const d = v ? `<a tabindex=\"0\" href=\"#\" class=\"btn shadow-none ${c2} ${c1} day\" data-day=\"${v}\">${v}</a>` : ''\r\n        return `<div class=\"col p-0\">${d}</div>`;\r\n      })\r\n      .map((v, i) => {\r\n        if (i === 0) return `<div class=\"row days\">${v}`;\r\n        const isBreak = i % 7 == 0;\r\n        return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n      });\r\n    result.push('</div>');\r\n    return result.join('');\r\n  }\r\n\r\n  #monthsHTML() {\r\n    const me = this;\r\n    const current = me.#date.MMMM;\r\n    const months = GSDate.monthList(false, me.language);\r\n    const list = months.map((v, i) => html`<option value=\"${i}\" selected=${ifDefined(current == v ? true : undefined)}>${v}</option>`);\r\n    return html`<select @change=\"${me.#onMonth}\" name=\"month\" class=\"month ${me.cssMonth}\" value=\"${months.indexOf(current)}\">${list}</select>`;\r\n  }\r\n\r\n  #yearHTML() {\r\n\r\n    const me = this;\r\n\r\n    const options = [];\r\n    let minYear = me.minYear;\r\n    let maxYear = me.maxYear;\r\n\r\n    if (me.range > 0) {\r\n      const year = new GSDate().year;\r\n      minYear = year - me.range;\r\n      maxYear = year + me.range;\r\n      me.#optionsHTML(options, minYear, maxYear);\r\n    }\r\n\r\n    if (!me.editable) {\r\n      return html`<select @change=\"${me.#onYear}\" name=\"year\" class=\"year ${me.cssYear}\" data-gs-min=\"${minYear}\" data-gs-max=\"${maxYear}\">${options}</select>`;\r\n    }\r\n\r\n    const isList = me.editable && me.range && options.length > 0;\r\n    const listID = isList ? GSID.next : null;\r\n    const list = isList ? html`<datalist id=\"${listID}\">${options}</datalist>` : '';\r\n\r\n    return html`<input name=\"year\" \r\n      type=\"number\" \r\n      list=\"${ifDefined(listID)}\"\r\n      class=\"year ${me.cssYear}\" \r\n      @change=\"${me.#onYear}\" \r\n      min=\"${minYear}\" \r\n      max=\"${maxYear}\"\r\n      value=\"${me.#date.getFullYear()}\">\r\n      ${list}`;\r\n  }\r\n\r\n  #optionsHTML(options, minYear = 0, maxYear = 0) {\r\n    const me = this;\r\n    let val = minYear;\r\n    while (val <= maxYear) {\r\n      if (me.editable) {\r\n        options.push(html`<option value=\"${val}\" selected=${ifDefined(val == me.year ? true : undefined)}>`);\r\n      } else {\r\n        options.push(html`<option value=\"${val}\" selected=${ifDefined(val == me.year ? true : undefined)}>${val}</option>`);\r\n      }\r\n      val++;\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  #onDay(e) {\r\n    GSEvents.prevent(e);\r\n    if (!e.target.classList.contains('day')) return;\r\n    const me = this;\r\n    const day = GSUtil.asNum(e.target.dataset.day, me.day);\r\n\r\n    me.#selected.day = 1;\r\n    me.#selected.month = me.month;\r\n    me.#selected.year = me.year;\r\n    me.#selected.day = day;\r\n\r\n    me.day = day;\r\n  }\r\n\r\n  #onMonth(e) {\r\n    this.month = e.target.selectedIndex;\r\n  }\r\n\r\n  #onYear(e) {\r\n    const yearEl = e?.target;\r\n    if (yearEl?.validity.valid) {\r\n      this.year = yearEl.value;\r\n    }\r\n  }\r\n\r\n  #onKey(e) {\r\n    // console.log(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-calendar');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCardElement extends GSElement {\r\n\r\n  static styles = css`.card-header, .card-footer{ background-color: inherit; color: inherit;}`;\r\n\r\n  static properties = {\r\n\r\n    imageStyle: { type: Object, attribute: 'image-style', reflect : true },\r\n\r\n    overlay: { type: Boolean },\r\n    placement: { ...placement },\r\n    align: { ...placement },\r\n\r\n    image: {},\r\n    title: {},\r\n    subtitle: {},\r\n    text: {},\r\n    footer: {},\r\n    header: {},\r\n\r\n    colorText: { attribute: 'color-text' },\r\n    colorBack: { attribute: 'color-back' },\r\n    colorBorder: { attribute: 'color-border' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssSubtitle: { attribute: 'css-subtitle' },\r\n    cssText: { attribute: 'css-text' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssImage: { attribute: 'css-image' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.border = false;\r\n    this.shadow = false;\r\n    this.align = 'start';\r\n    this.placement = 'top';\r\n    this.imageStyle = this.imageStyle || {};\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const content =  me.isVertical ? me.#renderVertical() : me.#renderHorizontal();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"card ${classMap(me.renderClass())}\">${content}</div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return [me.#imageTop, me.#header, me.#body, me.#footer, me.#imageBottom];\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    const start = PlacementTypes.isBefore(me.placement);\r\n    const startClass = start ? 'col-4' : 'col-8';\r\n    const endClass = start ? 'col-8' : 'col-4';\r\n    const startHtml = start ? me.#images : me.#body;\r\n    const endHtml =  start ? me.#body : me.#images;\r\n    return html`<div class=\"row g-0\">\r\n        <div class=\"${startClass}\">\r\n            ${startHtml}\r\n        </div>\r\n        <div class=\"${endClass}\">\r\n          ${endHtml}\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      border: me.border || me.colorBorder,\r\n      [`text-${me.align}`]: me.align,\r\n      [`text-${me.colorText}`]: me.colorText,\r\n      [`bg-${me.colorBack}`]: me.colorBack,\r\n      [`border-${me.colorBorder}`]: me.colorBorder,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return PlacementTypes.isHorizontal(this.placement);\r\n  }\r\n\r\n  get #body() {\r\n    const me = this;\r\n    return html`<div class=\"${me.overlay ? 'card-img-overlay' : 'card-body'} ${me.cssBody}\">\r\n      <h5 class=\"card-title  ${me.cssTitle}\"><slot name=\"title\">${me.translate(me.title)}</slot></h5>\r\n      <h6 class=\"card-subtitle  ${me.cssSubtitle}\"><slot name=\"subtitle\">${me.translate(me.subtitle)}</slot></h6>\r\n      <p class=\"card-text ${me.cssText}\"><slot name=\"text\">${me.translate(me.text)}</slot></p>\r\n      <slot name=\"body\"></slot>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  get #header() {\r\n    return this.overlay ? '' : html`<div class=\"card-header  ${this.cssHeader}\"><slot name=\"header\">${this.header}</slot></div>`;\r\n  }\r\n\r\n  get #footer() {\r\n    return this.overlay ? '' : html`<div class=\"card-footer ${this.cssFooter}\"><slot name=\"footer\">${this.footer}</slot></div>`;\r\n  }\r\n\r\n  get #imageSlot() {\r\n    return html`<slot name=\"image\"></slot>`;\r\n  }\r\n\r\n  get #image() {\r\n    const me = this;\r\n    const css = me.isHorizontal ? 'img-fluid' : 'card-img';\r\n    me.dynamicStyle(me.#styleID, me.imageStyle);\r\n    return html`<img src=\"${me.image}\" class=\"rounded-${me.placement} ${css} ${me.cssImage} ${me.#styleID}\" alt=\"...\">`;\r\n  }\r\n\r\n  get #images() {\r\n    return this.image ? this.#image : this.#imageSlot;\r\n  }\r\n\r\n  get #imageTop() {\r\n    return this.placement === 'top' ? this.#images : '';\r\n  }\r\n\r\n  get #imageBottom() {\r\n    return this.placement === 'bottom' ? this.#images : '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-card');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSCenterElement extends GSElement {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n      class=\"position-absolute top-50 start-50 translate-middle ${classMap(me.renderClass())}\">\r\n    ${me.renderTemplate()}<slot></slot></div>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-center');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenuElement class\r\n * @module components/GSMenuElement\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSMenuElement extends GSElement {\r\n\r\n    static properties = {\r\n        storage: {},\r\n        auto: { type: Boolean, reflect: true },\r\n        opened: { type: Boolean, reflect: true },\r\n        dark: { type: Boolean },\r\n        reverse: { type: Boolean },\r\n        offset: { type: Number },\r\n        data: { type: Array },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {},\r\n        title: {},\r\n        header: {},\r\n        color: {},\r\n        icon: {},\r\n        url: { default: '#' }\r\n    }\r\n\r\n    #menuRef = createRef();\r\n    #styleID = GSID.id;\r\n    #controller = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.offset = 0;\r\n        me.dynamicStyle(me.#styleID);\r\n        me.data = me.#proxify(me);\r\n        me.#controller = new GroupController(this);\r\n    }\r\n\r\n    onBusEvent(e) {\r\n       if (e.detail.owner != this) {\r\n            this.opened = false;\r\n       }\r\n     }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        if (changed.has('opened') && !this.opened) {\r\n            this.#closeSubmenus();\r\n        }\r\n    }\r\n\r\n    updated() {\r\n        this.#updatePosition();\r\n        if (this.opened) {\r\n            this.#controller.notify();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<ul \r\n            ${ref(me.#menuRef)}\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            class=\"dropdown-menu ${classMap(me.renderClass())}\"\r\n            data-gs-class=\"${me.#styleID}\"\r\n            data-menu=\"true\"\r\n            @mouseover=\"${me.#onMouseOver}\"\r\n            @mouseleave=\"${me.#onMouseLeave}\"\r\n            @keydown=\"${me.#onKeyDown}\"\r\n            @click=\"${me.#onClick}\">\r\n            ${me.#items(me.data)}\r\n        </ul>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'submenu': me.dataset.submenu,\r\n            'dropdown-menu-dark': me.dark,\r\n            [me.#styleID]: true,\r\n            'show': me.opened,\r\n            'dropend': !me.reverse,\r\n            'dropstart': me.reverse,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    /**\r\n     * Show at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {HTMLElement} caller\r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n\r\n        const me = this;\r\n        // offset to render under the mouse,\r\n        // important for GSGrid for better UI experience\r\n        const offset = GSUtil.asNum(me.offset, 0);\r\n        let target = caller;\r\n\r\n        if (GSEvents.isMouseOrPointerEvent(x)) {\r\n            const e = x;\r\n            target = e.target;\r\n            y = e.clientY;\r\n            x = e.clientX;\r\n            let offset = GSDOM.offsetParent(me);\r\n            offset = offset ? offset.getBoundingClientRect() : null;\r\n            x = x - (offset?.left || 0);\r\n            y = y - (offset?.top || 0);\r\n        }\r\n\r\n        const cfg = { clientX: x - offset, clientY: y - offset, target: target };\r\n\r\n        requestAnimationFrame(() => {\r\n            const style = {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                left: '0px',\r\n                translate: `${cfg.clientX}px ${cfg.clientY}px`\r\n            };\r\n            const rule = me.dynamicStyle(me.#styleID);\r\n            Object.assign(rule.style, style);\r\n        });\r\n        me.open();\r\n\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    #items(root) {\r\n        const me = this;\r\n        return root.map(el => me.#item(el));\r\n    }\r\n\r\n    #item(el) {\r\n        const me = this;\r\n        const isSub = el.items?.length > 0;\r\n        if (isSub) return me.#renderSubmenu(el);\r\n        if (!(el.header || el.name)) return me.#renderDivider();\r\n        return el.header ? me.#renderHeader(el) : me.#renderMenu(el);\r\n    }\r\n\r\n    #renderHeader(el) {\r\n        return html`<li data-inert=\"true\"><h6 class=\"dropdown-header\">${this.#renderIcon(el)}${el.header}</h6></li>`;\r\n    }\r\n\r\n    #renderDivider() {\r\n        return html`<li data-inert=\"true\"><hr class=\"dropdown-divider\"></li>`;\r\n    }\r\n\r\n    #renderSubmenu(el) {\r\n        const me = this;\r\n        return html`<li>\r\n            <a class=\"dropdown-item dropdown-toggle\" data-toggle=\"true\" href=\"#\">\r\n                <div class=\"d-inline-block w-100\">${me.#renderIcon(el)}${el.name}</div>\r\n            </a>\r\n            <gs-menu auto \r\n                .data=${el.items} \r\n                ?dark=${me.dark} \r\n                ?reverse=\"${me.reverse}\" \r\n                language=\"${ifDefined(me.language)}\" \r\n                data-submenu=\"true\">\r\n            </gs-menu>\r\n        </li>`;\r\n    }\r\n\r\n    #renderIcon(el) {\r\n        return el.icon ? html`<gs-icon css=\"mx-1\" name=\"${el.icon}\"></gs-icon>` : '';\r\n    }\r\n\r\n    #renderMenu(el) {\r\n        return html`<li>\r\n                <gs-button css=\"dropdown-item shadow-none\" \r\n                    ${dataset(el, false)}\r\n                    url=\"${el.url}\"\r\n                    title=\"${el.name}\" \r\n                    language=\"${ifDefined(this.language)}\" \r\n                    icon=\"${ifDefined(el.icon)}\" \r\n                    text=\"${ifDefined(el.color)}\"\r\n                    data-gs-target=\"${ifDefined(el.target || 'self')}\"\r\n                    data-gs-action=\"${ifDefined(el.action)}\">\r\n                </gs-button></li>`;\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSMenuElement.options));\r\n    }\r\n\r\n    #closeSubmenus(menu) {\r\n        GSDOM.queryAll(this.renderRoot, 'gs-menu', false, false)\r\n            .filter(el => el != menu)\r\n            .forEach(el => el.close());\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.key) {\r\n            case 'Escape':\r\n                me.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        submenu?.close();\r\n        if (me.auto) me.close();\r\n    }\r\n\r\n    #onMouseLeave(e) {\r\n        GSEvents.prevent(e);\r\n        if (this.auto) this.close();\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        me.#closeSubmenus(submenu);\r\n        submenu?.open();\r\n    }\r\n\r\n    #toSubmenu(e) {\r\n        const menuItem = e.target.closest('li');\r\n        return menuItem?.querySelector('gs-menu');\r\n    }\r\n\r\n    #updatePosition() {\r\n        const me = this;\r\n        if (!me.opened) return;\r\n        const rule = me.dynamicStyle(me.#styleID);\r\n        if (me.isSubmenu) {\r\n            const opt = { translate: `0px -25px` };\r\n            if (me.reverse) {\r\n                opt.left = 'inherited';\r\n                opt.right = '100%';\r\n            } else {\r\n                opt.right = 'inherited';\r\n                opt.left = '100%';\r\n            }\r\n            Object.assign(rule.style, opt);\r\n        } else {\r\n            rule.style.translate = null;\r\n            const rect = me.#menu.getBoundingClientRect();\r\n            const offset = window.innerWidth - rect.right;\r\n            me.reverse = offset - 5 < 0;\r\n            if (me.reverse) rule.style.translate = `${offset - 2}px`;\r\n        }\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.dataset.submenu;\r\n    }\r\n\r\n    get #menu() {\r\n        return this.#menuRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-menu');\r\n    }\r\n}\r\n","/*GSContextElement\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContextElement class\r\n * @module components/GSContextElement\r\n */\r\n\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for context menu\r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSContextElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        target: {},\r\n        filter: {},\r\n        altContext: { type: Boolean, attribute: 'altcontext' },\r\n        disabled: { type: Boolean },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;        \r\n        me.auto = true;\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n            me.target = \"tbody\";\r\n            me.filter = \"[selected]\";\r\n            me.offset =\"4\";\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', me.close.bind(me));        \r\n        if (!me.slot) me.#attachTarget();\r\n    }\r\n    \r\n    onSlotInjected(slot) {\r\n        this.#attachTarget();\r\n    }\r\n\r\n    #attachTarget() {\r\n        const me = this;        \r\n        const owner = GSDOM.parent(me.assignedSlot || me);\r\n        let targets = me.target ? GSDOM.queryAll(owner, me.target) : [owner];\r\n        if (!targets.length) targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    }\r\n\r\n    #match(e) {\r\n        const me = this;\r\n        return e.composedPath().filter(el => el.matches)\r\n            .filter(el => el.matches(me.filter ? me.filter : me.target));\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        if (e.shiftKey && me.altContext) return;\r\n        const list = me.#match(e);\r\n        if (list.length === 0) return;\r\n        GSEvents.prevent(e);\r\n        me.popup(e);\r\n        return true;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    /**\r\n     * Show submenu at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n        return this.disabled ? false : super.popup(x, y, caller);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-context');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, notEmpty } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\nexport class GSCompareElement extends GSElement {\r\n\r\n  static styles = css`.slider {\r\n         --gs-position : 50%;\r\n          left : var(--gs-position);\r\n          width: 8px;\r\n          height: 100%;\r\n          border-width: 1px;\r\n          cursor: w-resize;\r\n          border-color: darkgray;\r\n          border-style: solid;\r\n          background-color: lightgray;\r\n      }\r\n      .clipper {\r\n        --gs-position : 50%;\r\n        clip-path: inset(0px var(--gs-position) 0px 0px);\r\n      }\r\n    `;\r\n\r\n  static properties = {\r\n    background: { ...color },\r\n    width: { type: Number },\r\n    height: { type: Number },\r\n    before: { hasChanged: notEmpty },\r\n    after: { hasChanged: notEmpty },\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  #elRef = createRef();\r\n  #clipRef = createRef();\r\n  #slideRef = createRef();\r\n\r\n  #mouseController;\r\n  #elPosition;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.width = 0;\r\n    me.height = 0;\r\n    me.dynamicStyle(me.#styleID);\r\n    me.#mouseController = new ElementMoveController(me);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#mouseController.attach(this.#splitter);\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n         dir=\"${ifDefined(me.direction)}\"\r\n         @loaded=\"${me.#onLoad}\" \r\n         @dblclick=\"${me.#onDoubleClick}\"\r\n         data-gs-class=\"${me.#styleID}\"\r\n         class=\"${classMap(me.renderClass())}\">\r\n      <div class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden\"><slot name=\"before\">${me.#before}</slot></div>\r\n      <div ${ref(me.#clipRef)} class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden clipper\"><slot name=\"after\">${me.#after}</slot></div>\r\n      <div ${ref(me.#slideRef)} class=\"slider position-absolute top-0><slot name=\"control\"></slot></div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      \"position-relative\": true,\r\n      \"user-select-none\": true,\r\n      \"d-contents\": me.isAuto,\r\n      \"h-100\": me.isAuto,\r\n      \"w-100\": me.isAuto,\r\n      \"overflow-hidden\": true,\r\n      [`bg-${me.background}`]: me.background,\r\n      [`${me.#styleID}`]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Handles resizing based on mouse move event\r\n   * @param {MouseEvent} e \r\n   */\r\n  onStartMove(e) {\r\n    this.#elPosition = this.#splitter.getBoundingClientRect();\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    const me = this;\r\n    const offset = me.#elPosition.left;\r\n    const width = me.#elPosition.width;\r\n    const pos = GSUtil.range(e.clientX - offset, 0, width);\r\n    const pct = (pos / width) * 100;\r\n    me.#update(pct);\r\n  }\r\n\r\n  get isAuto() {\r\n    return this.width == 0 || this.height == 0;\r\n  }\r\n\r\n  get isFixed() {\r\n    return !this.isAuto;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  get #before() {\r\n    return this.before ? html`<img @load=\"${this.#onLoad}\" src=\"${me.before}\"></img>` : '';\r\n  }\r\n\r\n  get #after() {\r\n    return this.after ? html`<img @load=\"${this.#onLoad}\" src=\"${me.after}\"></img>` : '';\r\n  }\r\n\r\n  get #isAuto() {\r\n    return this.width === 0 || this.height === 0;\r\n  }\r\n\r\n  get #splitter() {\r\n    return this.#elRef.value;\r\n  }\r\n\r\n  get #slider() {\r\n    return this.#slideRef.value;\r\n  }\r\n\r\n  get #clip() {\r\n    return this.#clipRef.value;\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const me = this;\r\n    if (me.#isAuto) {\r\n      const el = e.target;\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n    }\r\n  }\r\n\r\n  #onDoubleClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#update();\r\n    me.#mouseController.reset();\r\n  }\r\n\r\n  #update(pct = 50) {\r\n    const me = this;\r\n    me.#clip.style.setProperty('--gs-position', `${100 - pct}%`);\r\n    me.#slider.style.setProperty('--gs-position', `${pct}%`);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-compare');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\n\r\n/**\r\n * Helper component to enable controller attachment to the GS WebComponent.\r\n * It is used to simplify and separate templates from logic.\r\n */\r\nexport class GSControllerElement extends GSElement {\r\n\r\n  static properties = {\r\n    module: {},\r\n    controller: {},\r\n  }\r\n\r\n  #clazz = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  updated(changes) {\r\n    super.updated(changes);\r\n    const me = this;\r\n    if (me.isConnected && me.isValid) {\r\n      me.#initialize();\r\n    }\r\n  }\r\n\r\n  get isValid() {\r\n    return this.parentElement instanceof GSElement;\r\n  }\r\n\r\n  async #initialize() {\r\n\r\n    const me = this;\r\n    const host = me.parentElement;\r\n\r\n    if (me.#clazz) return;\r\n\r\n    let clazz = globalThis[me.controller];\r\n    if (!clazz && me.module) {\r\n      const url = GSLoader.normalizeURL(me.module);\r\n      const module = await import(url);\r\n      clazz = module[me.controller];\r\n    }\r\n\r\n    if (clazz) {\r\n      new clazz(host);\r\n      me.#clazz = clazz;\r\n      globalThis[me.controller] = clazz;\r\n    }\r\n\r\n  }\r\n\r\n  static {\r\n    this.define('gs-controller');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSCopyrightElement extends GSElement {\r\n\r\n  static properties = {\r\n    year: { reflect: true, type: Number },\r\n    company: { reflect: true },\r\n    url: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    if (!(me.isCompany && me.isYear)) return '';\r\n    const year = new Date().getFullYear();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"${classMap(me.renderClass())}\"><a target=\"_blank\" href=\"${me.url ? me.url : '#'}\"><small>&copy; ${me.company} ${me.year}. - ${year}.</small></a></div>`;\r\n  }\r\n\r\n  get isCompany() {\r\n    return GSUtil.isStringNonEmpty(this.company);\r\n  }\r\n\r\n  get isYear() {\r\n    return GSUtil.isStringNonEmpty(this.year);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-copyright');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSFunction } from '../base/GSFunction.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/verificator.mjs';\r\nimport { GSReadWriteRegistry } from '../data/ReadWriteRegistry.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for easier access to the GSReadWrite/GSTreeReader\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSDataHandler extends GSElement {\r\n\r\n    static properties = {\r\n        storage: { state: true },\r\n        src: { reflect: true },\r\n        action: { reflect: true },\r\n        mode: { reflect: true },\r\n        reader: { reflect: true },\r\n        writer: { reflect: true },\r\n        limit: { type: Number, reflect: true },\r\n        skip: { type: Number, reflect: true },\r\n        filter: { type: Array, reflect: true },\r\n        sort: { type: Array, reflect: true },\r\n        type: {},\r\n        autoload: { type: Boolean },\r\n        autorefresh: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    }\r\n\r\n    #iid = 0;\r\n    #config = null;\r\n    #handler = null;\r\n    #lifoReadRef = null;\r\n    #lifoWriteRef = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        me.autorefresh = 0;\r\n        me.autoload = false;\r\n        me.flat = true;\r\n        me.filter = [];\r\n        me.sort = [];\r\n        me.limit = 0;\r\n        me.skip = 0;\r\n        me.src = '';\r\n        me.type = 'remote';\r\n        me.mode = 'query';\r\n        me.reader = 'GET';\r\n        me.writer = 'POST';\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n          }\r\n        if (!me.isGenerated && !me.id) throw new Error('Element ID is required attribute!');\r\n        GSItem.validate(me, me.tagName);\r\n    }\r\n    \r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        const itemHolder = me.isGenerated && me.childElementCount === 0 ? me.parentComponent : me;\r\n        me.#config = GSItem.proxify(itemHolder, GSData.PROPERTIES);\r\n        me.#initLIFO(true);\r\n        me.#initLIFO(false);\r\n    }\r\n    \r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        me.#handler?.disable();\r\n        me.#handler?.removeProcessor(me);\r\n        me.#lifoReadRef = null;\r\n        me.#lifoWriteRef = null;\r\n        clearTimeout(me.#iid);\r\n    }\r\n    \r\n    firstUpdated() {\r\n        const me = this;\r\n        me.#handler = GSReadWriteRegistry.newHandler(me.type, me.storage, false);\r\n        if (me.#config?.length > 0) me.#handler?.addProcessor(me);\r\n        me.#updateHandler(true);                \r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        const me = this;\r\n        me.#updateHandler();\r\n        if (changed.has('autorefresh')) me.schedule(me.autorefresh);\r\n    }\r\n\r\n    #updateHandler(first = false) {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.key = me.key;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.formatSort(me.sort);\r\n        me.#handler.filter = me.formatFilter(me.filter);\r\n        if (me.autoload) me.read();\r\n        if (first) {\r\n            me.#handler.enable();\r\n            // to prevent double read by this component and table\r\n            if (me.autoload) {\r\n                me.dataController?.read();\r\n            } \r\n        }\r\n    }\r\n\r\n    get isDebug() {\r\n        return this.dataset.gsDebug;\r\n    }\r\n\r\n    get handler() {\r\n        return this.#handler;\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    get isCached() {\r\n        return this.#handler?.type == 'cached';\r\n    }\r\n\r\n    set search(val) {\r\n        if (this.#handler) this.#handler.search = val;\r\n    }\r\n\r\n    get key() {\r\n        return this.#config.filter(o => o.key).map(o => o.name).pop() || null;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    formatFilter(val) {\r\n        val = this.#formated(val);\r\n        return Array.isArray(val) ? val : [];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    formatSort(val) {\r\n        val = this.#formated(val);\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort || [];\r\n    }\r\n\r\n    schedule(time = 0) {\r\n        const me = this;\r\n        time = GSUtil.asNum(time) * 1000;\r\n        clearInterval(me.#iid);\r\n        if (time > 0) me.#iid = setInterval(() => {\r\n            me.read(me);\r\n        }, time);\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data, append = false) {\r\n        return this.#lifoWriteRef(data, append);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return this.#handler?.selected;\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        return this.#handler?.addSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        return this.#handler?.removeSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        return this.#handler?.clearSelected();\r\n    }\r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onDataRead(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data Read: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onDataWrite(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data write: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Process data after receive, before notifying \r\n     * @param {*} data \r\n     */\r\n    postRead(data) {\r\n        const me = this;\r\n        if (!Array.isArray(data)) data = [data];\r\n        data.forEach(r => {\r\n            me.#config.forEach(c => {\r\n                let val = r[c.name];\r\n                if (!GSUtil.isNull(val)) {\r\n                    val = GSData.format(c, val);\r\n                    r[c.name] = val;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onDataError(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data error: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #initLIFO(read = true) {\r\n        const me = this;\r\n        if (read) {\r\n            me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n        } else {\r\n            me.#lifoWriteRef = GSFunction.callOnceLifo(me.#lifoWriteRefCallback, me);\r\n        }\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO(true);\r\n        return me.#lifoCall(true);\r\n    }\r\n\r\n    #lifoWriteRefCallback(data, append) {\r\n        const me = this;\r\n        me.#initLIFO(false);\r\n        return me.#lifoCall(false, data, append);\r\n    }\r\n    \r\n    #lifoCall(read = true, data, append) {\r\n        const me = this;\r\n        me.#verifyHandler();        \r\n        if (read) return me.#handler?.read(me);        \r\n        if (!append) me.#handler.clear();\r\n        return me.#handler?.write(me, data);\r\n    }\r\n\r\n    #formated(val) {\r\n        return GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    static {\r\n        this.define('gs-data-handler');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { size, SizeTypes } from '../properties/size.mjs';\r\n\r\nexport class GSDialogElement extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n  static ALIGN = 'end';\r\n  static CANCEL = 'Cancel';\r\n  static CONFIRM = 'Ok';\r\n\r\n  static #STACK = [];\r\n\r\n  static styles = css`dialog {\r\n      --bs-modal-width: 500px;\r\n      width:var(--bs-modal-width);\r\n      outline:none;\r\n    }\r\n    dialog::backdrop {\r\n      backdrop-filter: blur(4px);\r\n      backdrop-filter: blur(var(--gs-backdrop-blur));      \r\n      background-color: var(--gs-backdrop-color);\r\n      display: var(--gs-backdrop-display);\r\n    }`;\r\n\r\n  static properties = {\r\n\r\n    standard: { reflect: true, type: Boolean },\r\n    opened: { reflect: true, type: Boolean },\r\n    cancelable: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    escapable: { reflect: true, type: Boolean },\r\n    disabled: { reflect: true, type: Boolean },\r\n\r\n    size: size,\r\n\r\n    title: { reflect: true },\r\n    message: { reflect: true },\r\n    cancelText: { reflect: true, attribute: 'text-cancel' },\r\n    confirmText: { reflect: true, attribute: 'text-confirm' },\r\n\r\n    minWidth: { reflect: true, type: Number, attribute: 'min-width' },\r\n    buttonAlign: { reflect: true, attribute: 'button-align' },\r\n\r\n    iconCancel: { reflect: true, attribute: 'icon-cancel' },\r\n    iconConfirm: { reflect: true, attribute: 'icon-confirm' },\r\n\r\n    colorCancel: { attribute: 'color-cancel' },\r\n    colorConfirm: { attribute: 'color-confirm' },\r\n\r\n    cssCancel: { attribute: 'css-cancel' },\r\n    cssConfirm: { attribute: 'css-confirm' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssContent: { attribute: 'css-content' },\r\n\r\n  }\r\n\r\n  #pass = false;\r\n  #styleID = GSID.id;\r\n  #dialogRef = createRef();\r\n  #btnConfirmRef = createRef();\r\n  #btnCancelRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    const clazz = GSDialogElement;\r\n    me.opened = false;\r\n    me.standard = false;\r\n    me.cancelable = false;\r\n    me.closable = false;\r\n    me.escapable = false;\r\n    me.disabled = false;\r\n    me.shadow = false;\r\n    me.rounded = false;\r\n\r\n    me.minWidth = 0;\r\n    me.css = clazz.CSS;\r\n    me.cssTitle = clazz.TITLE_CSS;\r\n    me.cssHeader = clazz.HEADER_CSS;\r\n    me.buttonAlign = clazz.ALIGN;\r\n    me.cancelText = clazz.CANCEL;\r\n    me.confirmText = clazz.CONFIRM;\r\n    me.colorCancel = 'secondary';\r\n    me.colorConfirm = 'primary';\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialogElement.#updateStack();\r\n  }\r\n\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    this.#pass = true;\r\n  }\r\n\r\n  _shouldUpdate(changed) {\r\n    const me = this;\r\n    return me.opened === true || me.#pass;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    const allowed = me.opened === true || me.#pass;\r\n    // initially hidden dialogs rendering are posponed\r\n    if (!allowed) {\r\n      GSUtil.timeout(1000).then(() => {\r\n        queueMicrotask(() => { \r\n          const allowed = me.opened === true || me.#pass;\r\n          if (!allowed) {\r\n            me.#pass = true;\r\n            if (me.isConnected) me.requestUpdate();\r\n          }\r\n        });          \r\n      });\r\n    }\r\n    return allowed;\r\n  }\r\n\r\n  updated(changed) {\r\n    super.updated(changed);\r\n    if (changed.has('opened')) {\r\n      this.#onOpenChanged();\r\n    }\r\n  }\r\n\r\n  #onOpenChanged() {\r\n    const me = this;\r\n    let state = null;\r\n    if (me.opened) {\r\n      GSDialogElement.#STACK.push(me);\r\n      state = 'opening';\r\n      if (me.standard) {\r\n        me.#dialog?.open();\r\n      } else {\r\n        me.#dialog?.showModal();\r\n      }\r\n      me.#focusable()?.focus();\r\n    } else {\r\n      state = 'closing';\r\n      if (me.isHashed) location.hash = '';\r\n      GSDialogElement.#STACK.pop();\r\n      me.#dialog?.close();\r\n    }\r\n    me.notify(true, false, state);\r\n  }\r\n\r\n  #renderConfirm() {\r\n    const me = this;\r\n    if (!me.closable) return '';\r\n    return html`<gs-button  ${ref(me.#btnConfirmRef)} \r\n      @click=\"${me.#onConfirm.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconConfirm)}\"\r\n      language=\"${ifDefined(me.language)}\"\r\n      .disabled=\"${me.disabled}\"  \r\n      css=\"${ifDefined(me.cssConfirm)}\" \r\n      color=\"${ifDefined(me.colorConfirm)}\" \r\n      title=\"${me.confirmText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderCancel() {\r\n    const me = this;\r\n    if (!me.cancelable) return '';\r\n    return html`<gs-button ${ref(me.#btnCancelRef)}\r\n      @click=\"${me.#onCancel.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconCancel)}\"\r\n      language=\"${ifDefined(me.language)}\"\r\n      css=\"${ifDefined(me.cssCancel)}\" \r\n      color=\"${ifDefined(me.colorCancel)}\" \r\n      title=\"${me.cancelText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderFooter() {\r\n    const me = this;\r\n    const isFooter = me.cancelable || me.closable;\r\n    if (!isFooter) return '';\r\n    return html`<div class=\"card-footer d-flex user-select-none justify-content-${me.buttonAlign} ${me.cssFooter}\">\r\n       <slot name=\"actions\"></slot>\r\n      ${me.#renderCancel()} &nbsp;${me.#renderConfirm()}\r\n      </div>`;\r\n  }\r\n\r\n  #renderContent() {\r\n    const me = this;\r\n    const css = {\r\n      card : true,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0      \r\n    }\r\n    me.cssContent?.match(/[^ ]+/g).forEach(v => css[v]=true);\r\n    return css;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    //...super.renderClass(),\r\n    const css = {\r\n      'dialog': true,\r\n      'p-0': true,\r\n      'border': me.bordered,\r\n      'border-0': !me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,      \r\n      [me.#styleID]: true,\r\n      [`modal-${size}`]: size ? true : false\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const styles = {\r\n      'min-width': me.minWidth > 0 ? `${me.minWidth}px` : undefined\r\n    };\r\n    me.dynamicStyle(me.#styleID, styles);\r\n    return html`\r\n        <dialog tabindex=\"-1\" ${ref(me.#dialogRef)} \r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @close=\"${me.#onCancel.bind(me)}\"\r\n            @cancel=\"${me.#onCancel.bind(me)}\"\r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @form=\"${me.#onForm.bind(me)}\"\r\n            @confirm=\"${me.#onConfirm.bind(me)}\"\r\n            @submit=\"${me.#onSubmit.bind(me)}\"\r\n            class=\"${classMap(me.renderClass())}\">\r\n            <div class=\"${classMap(me.#renderContent())}\">\r\n                <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n                  <div class=\"card-title ${me.cssTitle}\">\r\n                    <slot name=\"title\">${me.translate(me.title)}</slot>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body ${me.cssBody}\">\r\n                  <slot name=\"body\">\r\n                  ${me.translate(me.message)}\r\n                  ${me.renderTemplate()}\r\n                  </slot>\r\n                  </div>\r\n                  ${me.#renderFooter()}\r\n                  </div>\r\n                  <slot name=\"extra\"></slot>\r\n                  <div class=\"toast-container position-fixed\"></slot></div>\r\n                  </dialog>\r\n                  `;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.closable = closable;\r\n    me.cancelable = cancelable;\r\n    me.escapable = cancelable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('click-action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    return this.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    return this.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    index = GSUtil.asNum(index, 0);\r\n    const me = this;\r\n    me.forms?.forEach?.(f => { f.reset(); f.data = data; });\r\n    const tab = me.tab;\r\n    if (tab && index > -1) tab.index = index;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Retrun true if dialog is opened by hashbang.\r\n   * Used to clear the hashbang on close\r\n   */\r\n  get isHashed() {\r\n    return GSUtil.asBool(this.dataset.gsHashed);\r\n  }\r\n\r\n  get form() {\r\n    return this.query('gs-form', true, true);\r\n  }\r\n\r\n  get forms() {\r\n    return this.queryAll('gs-form', true, true);\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('gs-tab', true, true);\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.#dialogRef.value;\r\n  }\r\n\r\n  get #btnConfirm() {\r\n    return this.#btnConfirmRef.value;\r\n  }\r\n\r\n  get #btnCancel() {\r\n    return this.#btnCancelRef.value;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  #focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#btnCancel;\r\n    if (me.closable) return me.#btnConfirm;\r\n    return me;\r\n  }\r\n\r\n  async #onConfirm(e) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const ret = await Promise.all(me.forms?.map?.(form => form.submit()));\r\n    if (ret.indexOf(false) < 0) me.close();\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.close();\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle injected form events\r\n   * @param {*} e \r\n   */\r\n  #onForm(e) {\r\n    let sts = true;\r\n    const me = this;\r\n    const data = e.detail;\r\n    switch (data.type) {\r\n      case 'submit':\r\n        sts = me.emit('data', data.data, false, false, true);\r\n        if (!sts) GSEvents.prevent(e);\r\n        //me.opened = false;\r\n        break;\r\n      case 'valid':\r\n        me.disabled = data.data === false;\r\n        break;\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  #onSubmit(e) {\r\n    debugger;\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialogElement.#STACK = GSDialogElement.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  /**\r\n   * Return number of dialogs in a stack\r\n   */\r\n  static get size() {\r\n    return GSDialogElement.#STACK.length;\r\n  }\r\n\r\n  static get top() {\r\n    GSDialogElement.#updateStack();\r\n    const size = GSDialogElement.size;\r\n    return size === 0 ? null : GSDialogElement.#STACK[size - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialogElement.#updateStack();\r\n    return Array.from(GSDialogElement.#STACK);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-dialog');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, unsafeHTML, html, ifDefined } from '../lib.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSDrawerElement extends GSElement {\r\n\r\n  static properties = {\r\n    autoclose: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    backdrop: { reflect: true, type: Boolean },\r\n    expanded: { reflect: true, type: Boolean },\r\n    scroll: { reflect: true, type: Boolean },\r\n\r\n    min: { reflect: true, type: Number},\r\n    max: { reflect: true},\r\n    fingers: { reflect: true, type: Number},\r\n    placement: {...placement},\r\n    \r\n    transition: { reflect: true },\r\n    duration: { reflect: true, type: Number },\r\n\r\n    title: { reflect: true},\r\n\r\n    cssTitle: { reflect: true, attribute: \"css-title\"},\r\n    cssHead: { reflect: true, attribute: \"css-head\" },\r\n    cssBody: { reflect: true, attribute: \"css-body\" },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.placement = 'start';\r\n    me.cssTitle = 'fs-5';\r\n    me.transition = 'linear';\r\n    me.duration = 0.2;\r\n    me.min = 0;\r\n    me.max = 'auto';\r\n    me.fingers = 2;\r\n    me.on('mouseleave', me.#onLeave.bind(me));\r\n    me.on('mouseenter', me.#onEnter.bind(me));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`${unsafeHTML(me.#style)}\r\n    <div tabindex=\"-1\" dir=\"${ifDefined(me.direction)}\"\r\n     class=\"offcanvas overflow-hidden anime ${classMap(me.renderClass())}\">\r\n      ${me.#header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        ${me.renderTemplate()}\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>${me.#backdrop}`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': true,\r\n      'anime-open' : me.expanded,\r\n      'anime-close' : !me.expanded,\r\n      [`offcanvas-${me.placement}`]: me.placement,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #style() {\r\n    const me = this;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    return `<style>\r\n    .anime {\r\n      transition-property: ${pos} !important;\r\n      transition-duration: ${me.duration}s  !important;\r\n      transition-timing-function: ${me.transition} !important;\r\n    }\r\n    .anime-open {\r\n        ${pos} : ${me.max}${GSUtil.isNumber(me.max) ? 'px':''} !important;\r\n    }\r\n    .anime-close {\r\n      ${pos} : ${me.min}${GSUtil.isNumber(me.min) ? 'px':''} !important;\r\n    }    \r\n    </style>`;\r\n  }\r\n\r\n  get #backdrop() {\r\n    const me = this;\r\n    if (!me.backdrop) return '';\r\n    return html`<div class=\"offcanvas-backdrop fade ${me.expanded ? 'show' : 'invisible'}\" @click=\"${me.close}\"></div>`;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    return me.closable ? html`<button type=\"button\" class=\"btn-close text-reset\" @click=\"${me.close}\"></button>` : '';\r\n  }\r\n\r\n  get #title() {\r\n    const me = this;\r\n    return me.title ? html`<div class=\"offcanvas-title ${me.cssTitle}\">${me.translate(me.title)}</div>` : '';\r\n  }\r\n\r\n  get #header() {\r\n    const me = this;\r\n    return me.#hasHeader ? html`<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${me.#title}${me.#button}</slot></div>` : '';\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]', false, true);\r\n  }\r\n\r\n  get #hasHeader() {\r\n    return this.title || this.closable || this.#headSlot;\r\n  }\r\n\r\n  #notify(val) {\r\n    const me = this;\r\n    me.expanded = val == true;\r\n    me.notify();\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  open() {\r\n    this.#notify(true);\r\n  }\r\n\r\n  close() {\r\n    this.#notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.#notify(!this.expanded);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return !this.isVertical;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-drawer');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdownElement class\r\n * @module components/GSDropdownElement\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { cssMap } from '../directives/css-map.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDropdownElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        icon: {},\r\n        text: {...color},\r\n        color: {...color},\r\n        size: {},\r\n        title: {},\r\n        tooltip: {},\r\n        group: {},\r\n        simple: {type:Boolean}\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"dropdown\"  dir=\"${ifDefined(me.direction)}\">\r\n                ${me.#renderButton()}\r\n                ${super.renderUI()}\r\n            </div>`;\r\n    }\r\n\r\n    #buttonClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'btn': true,\r\n            [`btn-${me.color}`] : me.color ? true : false,\r\n            'dropdown-toggle': !me.simple,\r\n            'shadow-none' : true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    #renderButton() {\r\n        const me = this;\r\n        return html`<gs-link css=\"${cssMap(me.#buttonClass())}\"\r\n            url=\"#\"         \r\n            icon=\"${ifDefined(me.icon)}\"\r\n            text=\"${ifDefined(me.text)}\"\r\n            size=\"${ifDefined(me.size)}\"\r\n            title=\"${ifDefined(me.title)}\"\r\n            tooltip=\"${ifDefined(me.tooltip)}\"\r\n            @notify=\"${me.toggle}\">\r\n            </gs-link>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-dropdown');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html, unsafeHTML } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Safe email rendering to protect from spam bots.\r\n */\r\nexport class GSEmailElement extends GSElement {\r\n\r\n  static shadowRootOptions = { mode: 'closed' }\r\n\r\n  static style = css`.e-mail:before {\r\n    content: attr(data-website) \"\\0040\" attr(data-user);\r\n    unicode-bidi: bidi-override;\r\n    direction: rtl;\r\n    }`;\r\n\r\n  static properties = {\r\n    user: { reflect: true },\r\n    domain: { reflect: true },\r\n    dev: { type: Boolean }\r\n  }\r\n\r\n  #user;\r\n  #domain;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  willUpdate(changes) {\r\n    super.willUpdate(changes);\r\n    this.#updateUser();\r\n    this.#updateDomain()\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${unsafeHTML(this.#style)}<a @click=\"${this.#onClick}\" class=\"e-mail\" data-user=\"${this.#user}\" data-website=\"${this.#domain}\"  href=\"mailto://\"></a>`;\r\n  }\r\n\r\n  get #style() {\r\n    return '<style>.e-mail:before { content: attr(data-website) \"\\u0040\" attr(data-user); unicode-bidi: bidi-override; direction: rtl; }</style>';\r\n  }\r\n\r\n  get #url() {\r\n    return `mailto://${GSUtil.reverse(this.dataset.user)}@${GSUtil.reverse(this.dataset.domain)}`;\r\n  }\r\n\r\n  #updateUser() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.user) {\r\n      me.#user = dataset.user || GSUtil.reverse(me.user);\r\n      if (me.dev) dataset.user = me.#user;\r\n      me.user = '';\r\n    }\r\n  }\r\n\r\n  #updateDomain() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.domain) {\r\n      me.#domain = dataset.domain || GSUtil.reverse(me.domain);\r\n      if (me.dev) dataset.domain = me.#domain;\r\n      me.domain = '';\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    window.location.href = me.#url;\r\n    //window.open(me.#url, '_blank');  \r\n  }\r\n\r\n  static {\r\n    this.define('gs-email');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref, templateContent } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSFormElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    disabled: { reflect: true, type: Boolean },\r\n\r\n    url: { reflect: true },\r\n    name: { reflect: true },\r\n    rel: { reflect: true },\r\n    acceptCharset: { reflect: true, attribute: 'accept-charset' },\r\n    autocapitalize: { reflect: true },\r\n    autocomplete: { reflect: true },\r\n\r\n    // default settings for FormGroup or gs-ext-* form elements\r\n    autocopy: { reflect: true, type: Boolean },\r\n    autofocus: { reflect: true, type: Boolean },\r\n    autoselect: { reflect: true, type: Boolean },\r\n    autovalidate: { reflect: true, type: Boolean },\r\n    autoreport: { reflect: true, type: Boolean },\r\n\r\n    action: { reflect: true },\r\n    enctype: { reflect: true },\r\n    method: { reflect: true },\r\n    novalidate: { reflect: true, type: Boolean },\r\n    target: { reflect: true },\r\n\r\n    block: { reflect: true, type: Boolean },\r\n    beep: { reflect: true, type: Boolean },\r\n    timeout: { reflect: true, type: Number }\r\n  }\r\n\r\n  #formRef = createRef();\r\n  #lastState = undefined;\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n    this.disabled = false;\r\n    this.method = \"dialog\";\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<form is=\"gs-ext-form\"\r\n      ${ref(me.#formRef)}\r\n      id=\"${ifDefined(me.name)}\"\r\n      name=\"${ifDefined(me.name)}\"\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\"\r\n      \r\n      @blur=\"${me.#onBlur}\"\r\n      @change=\"${me.#onChange}\"\r\n      @invalid=\"${me.#onInvalid}\"\r\n      @submit=\"${me.submit}\"\r\n      @reset=\"${me.reset}\"\r\n      \r\n      method=\"${me.method}\"      \r\n      url=\"${ifDefined(me.url)}\"\r\n      \r\n      rel=\"${ifDefined(me.rel)}\"\r\n      acceptCharset=\"${ifDefined(me.acceptCharset)}\"\r\n      autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n      autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n      action=\"${ifDefined(me.action)}\"\r\n      enctype=\"${ifDefined(me.enctype)}\"\r\n      target=\"${ifDefined(me.target)}\"\r\n\r\n      ?novalidate=\"${me.novalidate}\">\r\n      ${templateContent(me.#elementTemplate)}\r\n      <slot></slot>\r\n    </form>`;\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    me.dataController?.read();\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {\r\n      if (GSUtil.isNull(me.data)) {\r\n        me.reset();\r\n      } else {\r\n        me.asJSON = Object.assign(me.asJSON, me.data);\r\n      }\r\n    }\r\n  }\r\n\r\n  templateInjected() {\r\n    const me = this;\r\n  }\r\n\r\n  async reset(e) {\r\n    const me = this;\r\n    me.form?.reset();\r\n    me.data = {};\r\n    await me.dataController?.read(me.asJSON);\r\n  }\r\n\r\n  async submit(e) {\r\n    GSEvents.prevent(e, true, false, false);\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    if (!me.validate()) return;\r\n    const json = me.asJSON;\r\n    await me.dataController?.write(json);\r\n    const data = { type: 'submit', data: json, source: e, owner: me };\r\n    return me.emit('form', data, true, true, true);\r\n  }\r\n\r\n  get submitButton() {\r\n    return this.form?.submitButton;\r\n  }\r\n\r\n  get resetButton() {\r\n    return this.form?.resetButton;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  /**\r\n  * Overide native to pickup all form elements, including ones in shadow dom\r\n  */\r\n  get elements() {\r\n    return this.form?.elements || [];\r\n  }\r\n\r\n  /**\r\n   * Get all form attached native fields unwrapepd from GSWebComponents\r\n   */\r\n  get fields() {\r\n    return this.form?.fields || [];\r\n  }\r\n\r\n  /**\r\n   * Find all inputs by querying across inner shadow \r\n   */\r\n  get inputs() {\r\n    return this.form?.inputs || [];\r\n  }\r\n\r\n  get invalid() {\r\n    return this.form?.invalid;\r\n  }\r\n\r\n  get isValid() {\r\n    return this.form?.isValid;\r\n  }\r\n\r\n  get asJSON() {\r\n    return this.form?.asJSON;\r\n  }\r\n\r\n  set asJSON(data) {\r\n    const me = this;\r\n    if (me.form) {\r\n      me.form.asJSON = data;\r\n      me.validate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find field by name\r\n   * @param {*} name \r\n   * @returns \r\n   */\r\n  field(name) {\r\n    return this.form?.field(name);\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.form?.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.form?.reportValidity();\r\n  }\r\n\r\n  validate(e) {\r\n    const me = this;\r\n    let isValid = me.form?.validate();\r\n    isValid = me.onValidate(isValid);\r\n    me.#notify(isValid, e);\r\n    me.invalid[0]?.focus();\r\n    return isValid;\r\n  }\r\n\r\n  disable(all = false) {\r\n    this.form?.disable(all);\r\n  }\r\n\r\n  enable(all = false) {\r\n    this.form?.enable(all);\r\n  }\r\n\r\n  /**\r\n   * For DataController read callback\r\n   * \r\n   * @param {Array} data \r\n   */\r\n  onDataRead(data) {\r\n    const me = this;\r\n    if (Array.isArray(data)) {\r\n      data.forEach(o => me.asJSON = o);\r\n    } else {\r\n      me.asJSON = data;\r\n    }\r\n  }\r\n\r\n  onDataWrite(data) {\r\n\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  onValidate(sts) {\r\n\r\n    return sts;\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    const me = this;\r\n    me.prevent(e, false, true, false);\r\n    me.#notify(false, e);\r\n  }\r\n\r\n  #onBlur(e) {\r\n    const me = this;\r\n    me.prevent(e, false, true, false);\r\n    me.#notify(me.isValid, e);\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    //me.prevent(e, false, true, false);\r\n    me.#notify(me.isValid, e);\r\n  }\r\n\r\n  #notify(isValid = false, e) {\r\n    const me = this;\r\n    if (me.#lastState === isValid) return;\r\n    me.#lastState = isValid;\r\n    const data = { type: 'valid', data: isValid, owner: me, event: e };\r\n    me.emit('form', data, true, true);\r\n  }\r\n\r\n  get #elementTemplate() {\r\n    const tplEl = this.firstElementChild;\r\n    return GSDOM.isTemplateElement(tplEl) ? tplEl : undefined;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, unsafeHTML, ifDefined } from '../lib.mjs';\r\nimport { inputType, numGT0, numGE0, autocapitalize, autocorrect } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSFormGroupElement extends GSElement {\r\n\r\n  static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2';\r\n  static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n  static CSS_ICON = 'text-primary me-2 fs-5';\r\n  static ICON = 'info-circle-fill';\r\n\r\n  static formAssociated = true;\r\n\r\n  static #SELECTOPT = {\r\n    name: {},\r\n    value: {},\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  static properties = {\r\n    icon: { reflect: true },\r\n    layout: { reflect: true },\r\n    placement: { reflect: true },\r\n\r\n    label: { reflect: true },\r\n    description: { reflect: true },\r\n    placeholder: { reflect: true },\r\n\r\n    pattern: { reflect: true },\r\n    mask: { reflect: true },\r\n\r\n    form: { reflect: true },\r\n    wrap: { reflect: true },\r\n    spellcheck: { reflect: true },\r\n\r\n    type: { reflect: true, ...inputType },\r\n    name: { reflect: true },\r\n    list: { reflect: true },\r\n    accept: { reflect: true },\r\n    value: { noAccessor: true },\r\n\r\n    values: {},\r\n\r\n    lang: { reflect: true },\r\n    title: { reflect: true },\r\n    rows: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    cols: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    step: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    min: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    max: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    minLength: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    maxLength: { type: Number, reflect: true, hasChanged: numGT0 },\r\n\r\n    reverse: { reflect: true, type: Boolean },\r\n    selectable: { reflect: true, type: Boolean },\r\n\r\n    autoid: { type: Boolean, reflect: true },\r\n    autocopy: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    autocapitalize: { ...autocapitalize, reflect: true },\r\n    autocorrect: { ...autocorrect, reflect: true },\r\n    autocomplete: { reflect: true },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n    autovalidate: { type: Boolean, reflect: true },\r\n    autoreport: { type: Boolean, reflect: true },\r\n\r\n    disabled: { type: Boolean, reflect: true },\r\n    checked: { type: Boolean, reflect: true },\r\n    multiple: { type: Boolean, reflect: true },\r\n    reveal: { type: Boolean, reflect: true },\r\n    readonly: { type: Boolean, reflect: true },\r\n    required: { type: Boolean, reflect: true },\r\n\r\n    invalidMessage: { reflect: true, attribute: 'invalid-message' },\r\n\r\n    cellField: { reflect: true, attribute: 'cell-field' },\r\n    cellLabel: { reflect: true, attribute: 'cell-label' },\r\n    cssLabel: { reflect: true, attribute: 'css-label' },\r\n    cssField: { reflect: true, attribute: 'css-field' },\r\n\r\n    block: { reflect: true, type: Boolean },\r\n    beep: { reflect: true, type: Boolean },\r\n    timeout: { reflect: true, type: Number }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #inputRef = createRef();\r\n  #ouptutRef = createRef();\r\n  #patterns = [];\r\n  #options = [];\r\n  #internals = null;\r\n\r\n  constructor() {\r\n    super();\r\n    this.#internals = this.attachInternals();\r\n    this.#validateAllowed();\r\n    this.dynamicStyle(this.#styleID);\r\n    this.rows = 0;\r\n    this.cols = 0;\r\n    this.type = 'text';\r\n    this.placement = 'top';\r\n    this.layout = 'horizontal';\r\n    this.invalidMessage = 'Invalid input',\r\n      this.icon = GSFormGroupElement.ICON;\r\n    this.cssLabel = GSFormGroupElement.CSS_LABEL;\r\n    this.cellLabel = GSFormGroupElement.CSS_LABEL_CELL;\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    const form = me.formComponent;\r\n    me.layout = GSAttr.get(form, 'layout', me.layout);\r\n\r\n    if (!me.form && form) me.form = form.name;\r\n\r\n    if (me.selectable) {\r\n      me.#options = GSItem.proxify(me, GSFormGroupElement.#SELECTOPT);\r\n    } else {\r\n      me.#patterns = GSItem.collect(me)\r\n        .filter(el => el.dataset.pattern)\r\n        .map(el => new RegExp(el.dataset.pattern));\r\n    }\r\n    super.connectedCallback();\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    //me.#onInput();\r\n    me.emit('input');\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    switch (me.layout) {\r\n      case 'floating': return me.#renderFloating();\r\n      case 'vertical': return me.#renderVertical();\r\n      default: return me.#renderHorizontal();\r\n    }\r\n  }\r\n\r\n\r\n  #renderFloating() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n       <div class=\"form-floating ${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n          ${me.#renderLabel()}\r\n       </div>\r\n       ${me.#renderInfo()}\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n      <div class=\"col-12 text-md-start ${me.cellLabel}\">\r\n          ${me.#renderLabel()}\r\n      </div>\r\n       <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n       </div>\r\n       ${me.#renderInfo()}   \r\n    </div>      \r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row form-group ${classMap(me.renderClass())}\">    \r\n       <slot name=\"header\"></slot>\r\n       ${me.#renderLabelWrap()}\r\n       ${me.#renderField()}\r\n       ${me.#renderInfo()}\r\n       <slot name=\"footer\"></slot>\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderLabel() {\r\n    const me = this;\r\n    return html`<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.translate(me.label)}</label>`;\r\n  }\r\n\r\n  #renderLabelWrap() {\r\n    const me = this;\r\n    return html`<div class=\" text-md-end ${me.cellLabel}\">${me.#renderLabel()}</div>`;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.#isIcon ? html`<gs-icon size=\"5\" css=\"${GSFormGroupElement.CSS_ICON}}\" name=\"${me.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderTooltip() {\r\n    const me = this;\r\n    const tgt = me.#isIcon ? '@parent' : `[name='${me.name}']`;\r\n    return me.description ? html`<gs-tooltip local language=\"${ifDefined(me.language)}\" placement=\"${me.placement}\" title=\"${me.description}\" target=${ifDefined(tgt)}></gs-tooltip>` : '';\r\n  }\r\n\r\n  #renderInfo() {\r\n    const me = this;\r\n    const tooltip = me.#renderTooltip();\r\n    if (tooltip && me.#isIcon) return html`\r\n    <div class=\"col-auto\">\r\n       ${tooltip}\r\n       ${me.#renderIcon()}\r\n    </div>`;\r\n    return tooltip;\r\n  }\r\n\r\n  #renderField() {\r\n    const me = this;\r\n    return html`\r\n    <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n       <slot name=\"body\">${me.#renderInput()}${me.#renderOutput()}</slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderOutput() {\r\n    const me = this;\r\n    if (!me.isRange) return \"\";\r\n    return html`<span ${ref(me.#ouptutRef)} class=\"position-absolute px-1\">${me.value}</span>`;\r\n  }\r\n\r\n  #renderInput() {\r\n\r\n    const me = this;\r\n\r\n    const idattr = me.autoid ? me.name : undefined;\r\n    const val = me.isFieldset ? me.values.split(',') : me.value;\r\n\r\n    if (Array.isArray(val)) {\r\n      const wrap = me.dataset.radioLayout === 'vertical';\r\n      return val.map((it, i) => { return { v: it, id: `${me.name}_${i}` } })\r\n        .map((o, i) => me.#fieldSet(me.name + i, o.v, me.#inputHTML(o.id, me.name, o.v), wrap));\r\n    }\r\n\r\n    if (me.selectable) return me.#selectHTML(idattr, me.name, me.value);\r\n\r\n    if (me.#isTextArea) return me.#textArea(idattr, me.name, me.value);\r\n\r\n    return me.#inputHTML(idattr, me.name, me.value);\r\n  }\r\n\r\n  #fieldSet(id, val, fld, vertical = false) {\r\n    const me = this;\r\n    return vertical ?\r\n      html`<div class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></div>`\r\n      :\r\n      html`<span class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></span>`;\r\n  }\r\n\r\n  #initStyle() {\r\n    const me = this;\r\n    const style = {\r\n      transform: me.reverse && me.isRange ? 'rotateY(180deg)' : ''\r\n    }\r\n    me.dynamicStyle(me.#styleID, style);\r\n  }\r\n\r\n  #renderOption(el) {\r\n    const title = el.name || el.innerText || el.value;\r\n    return html`<option ${dataset(el, false)} value=\"${el.value}\" ?selected=\"${el.selected}\">${title}</option>`;\r\n  }\r\n\r\n  #renderOptions() {\r\n    const me = this;\r\n    return me.#options.map(el => me.#renderOption(el));\r\n    /*\r\n    return repeat(me.#options, (el) => el.value, (el, index) => {\r\n      return html`<option value=\"${el.value}\">${el.name || el.innerText || el.value}</option>`\r\n    });\r\n    */\r\n  }\r\n\r\n  #selectHTML(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n\r\n    // not used \r\n    // id=${ifDefined(id)} \r\n    return html`<select ais=\"gs-ext-select\"\r\n            ${ref(me.#inputRef)}\r\n            ${dataset(me, false)}\r\n\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n        \r\n            name=\"${name}\"             \r\n            form=\"${ifDefined(me.form)}\"\r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            ?autofocus=\"${me.autofocus || me.form?.autofocus}\"\r\n            ?autocopy=\"${me.autocopy || me.form?.autocopy}\"\r\n            ?autoselect=\"${me.autoselect || me.form?.autoselect}\"\r\n            ?autovalidate=\"${me.autovalidate || me.form?.autovalidate}\"\r\n            ?autoreport=\"${me.autoreport || me.form?.autoreport}\"\r\n\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\">\r\n              ${me.#renderOptions()}\r\n            </select>`;\r\n  }\r\n\r\n  get #isTextArea() {\r\n    const me = this;\r\n    return (me.rows > 0 || me.cols > 0) && me.type === 'text';\r\n  }\r\n\r\n  get #listHTML() {\r\n    const me = this;\r\n    let list = '';\r\n    if (me.list) {\r\n      const root = me.parentComponent || me.parentElement;\r\n      const el = GSDOM.query(root, `datalist[id=\"${me.list}\"]`, true, true);\r\n      if (el) list = html`${unsafeHTML(el.outerHTML)}`;\r\n    }\r\n    return list;\r\n  }\r\n\r\n  get #isBlock() {\r\n    return this.block || this.formComponent?.block || false;\r\n  }\r\n\r\n  get #isBeep() {\r\n    return this.beep || this.formComponent?.beep || false;\r\n  }\r\n\r\n  #timeout() {\r\n    return this.timeout || this.formComponent?.timeout || 0;\r\n  }\r\n\r\n  #textArea(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder, false) : null;\r\n    const title = me.title ? me.translate(me.title, false) : null;\r\n\r\n    // not used\r\n    // id=${ifDefined(id)}\r\n\r\n    return html`<textarea is=\"gs-ext-textarea\" \r\n            ${ref(me.#inputRef)}\r\n            ${dataset(me, false)}\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @invalid=\"${me.#onInvalid.bind(me)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n            cols=\"${me.cols}\"\r\n            rows=\"${me.rows}\"\r\n\r\n            ?block=\"${me.#isBlock}\"\r\n            ?beep=\"${me.#isBeep}\"\r\n            timeout=\"${me.#timeout()}\"\r\n\r\n            spellcheck=\"${ifDefined(me.spellcheck)}\" \r\n            wrap=\"${ifDefined(me.wrap)}\" \r\n            form=\"${ifDefined(me.form)}\" \r\n            name=\"${name}\" \r\n            value=\"${ifDefined(value)}\"\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            title=\"${ifDefined(title)}\"\r\n    \r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus || me.form?.autofocus}\"\r\n            ?autocopy=\"${me.autocopy || me.form?.autocopy}\"\r\n            ?autoselect=\"${me.autoselect || me.form?.autoselect}\"\r\n            ?autovalidate=\"${me.autovalidate || me.form?.autovalidate}\"\r\n            ?autoreport=\"${me.autoreport || me.form?.autoreport}\"\r\n\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"      \r\n      ></textarea>`;\r\n  }\r\n\r\n  #inputHTML(id, name, value) {\r\n    const me = this;\r\n    const type = me.isSwitch ? 'checkbox' : me.type;\r\n    let title = me.isRange ? me.defaultValue : me.title;\r\n    title = title ? me.translate(me.title, false) : title;\r\n\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder, false) : null;\r\n    const description = me.description ? me.translate(me.description, false) : null;\r\n\r\n    me.#initStyle();\r\n\r\n    // this does not work, \"is\" must be set explicitly, or it will not initialize element properly\r\n    // is=\"${ifDefined(me.isDate ? '' : 'gs-ext-input')}\"\r\n\r\n    // not used\r\n    // id=${ifDefined(id)} \r\n\r\n    return html`<input is=\"gs-ext-input\"\r\n            ${ref(me.#inputRef)}\r\n            ${dataset(me, false)}\r\n\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @invalid=\"${me.#onInvalid.bind(me)}\"\r\n        \r\n            name=\"${name}\" \r\n            type=\"${type}\" \r\n            form=\"${ifDefined(me.form)}\"\r\n            value=\"${ifDefined(value)}\"\r\n            title=\"${ifDefined(title)}\"\r\n\r\n\r\n            ?block=\"${me.#isBlock}\"\r\n            ?beep=\"${me.#isBeep}\"\r\n            timeout=\"${me.#timeout()}\"\r\n\r\n            class=\"${me.#cssField} ${me.cssField} ${me.mask ? 'font-monospace' : ''} ${me.#styleID}\" \r\n\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            description=\"${ifDefined(description)}\"\r\n\r\n            .multipattern=\"${ifDefined(me.#patterns)}\"\r\n            mask=\"${ifDefined(me.mask)}\"\r\n            pattern=\"${ifDefined(me.pattern)}\"\r\n            list=\"${ifDefined(me.list)}\"\r\n            accept=\"${ifDefined(me.accept)}\"\r\n             \r\n            step=\"${ifDefined(me.step)}\"\r\n            min=\"${ifDefined(me.min)}\"\r\n            max=\"${ifDefined(me.max)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus || me.form?.autofocus}\"\r\n            ?autocopy=\"${me.autocopy || me.form?.autocopy}\"\r\n            ?autoselect=\"${me.autoselect || me.form?.autoselect}\"\r\n            ?autovalidate=\"${me.autovalidate || me.form?.autovalidate}\"\r\n            ?autoreport=\"${me.autoreport || me.form?.autoreport}\"            \r\n\r\n            ?multiple=\"${me.multiple}\"\r\n            ?checked=\"${me.checked}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"\r\n            ?reveal=\"${me.reveal}\"\r\n            >${me.#listHTML}`;\r\n  }\r\n\r\n  get #cssField() {\r\n    const me = this;\r\n    if (me.selectable) return 'form-select ms-0';\r\n    if (me.isCheckable) return 'form-check-input ms-0';\r\n    if (me.isRange) return 'form-range';\r\n    return 'form-control';\r\n  }\r\n\r\n  get #cssLabel() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-label';\r\n    if (me.isFloating) return 'ms-2';\r\n    return me.isVertical ? 'form-label' : '';\r\n  }\r\n\r\n  get #cssCheck() {\r\n    const me = this;\r\n    if (me.isCheckable) {\r\n      //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      if (me.isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n      return me.isFieldset ? '' : 'form-check';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get #cellField() {\r\n    const me = this;\r\n    const val = (me.isHorizontal) ? '6' : '11';\r\n    return me.cellField || `col-md-${val} col-sm-${val} col-xs-11`;\r\n  }\r\n\r\n  get #isIcon() {\r\n    return GSUtil.isStringNonEmpty(this.icon);\r\n  }\r\n\r\n  #onInput(e) {\r\n    if (!e.composed) this.emit(e.type, e);\r\n  }\r\n\r\n  #onBlur(e) {\r\n    if (!e.composed) this.emit(e.type, e, true, true);\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    const field = me.field;\r\n    me.#internals?.setFormValue(field.value);\r\n    me.#internals?.setValidity(field.validity, field.validationMessage, field);\r\n    if (!e.composed) me.emit(e.type, e, true, true);\r\n    me.requestUpdate();\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    if (!e.composed) this.emit('invalid', e, true, true);\r\n  }\r\n\r\n  #validateAllowed() {\r\n    const me = this;\r\n    const slots = ['header', 'body', 'footer'];\r\n    let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n    if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n    list = Array.from(me.children).filter(el => !el.slot);\r\n    const tagList = ['GS-ITEM', 'DATALIST'];\r\n    const allowed = GSDOM.isAllowed(list, tagList);\r\n    if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n  translate(value = '', sanitize) {\r\n    value = super.translate(value);\r\n    return sanitize ? GSUtil.sanitize(value) : value;\r\n  }\r\n\r\n  reset() {\r\n    this.field?.reset?.();\r\n  }\r\n\r\n  get isFloating() {\r\n    return this.layout === 'floating';\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.layout === 'horizontal';\r\n  }\r\n\r\n  get isVertical() {\r\n    return this.layout === 'vertical';\r\n  }\r\n\r\n  get isFieldset() {\r\n    const me = this;\r\n    return me.type === 'radio' && me.values?.includes(',');\r\n  }\r\n\r\n  get isCheckable() {\r\n    const me = this;\r\n    return me.isCheck || me.isRadio || me.isSwitch;\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.field?.checked;\r\n  }\r\n\r\n  get isCheck() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get isRadio() {\r\n    return this.type === 'radio';\r\n  }\r\n\r\n  get isSwitch() {\r\n    return this.type === 'switch';\r\n  }\r\n\r\n  get isNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  get isRange() {\r\n    return this.type === 'range';\r\n  }\r\n\r\n  get isText() {\r\n    return this.type === 'text';\r\n  }\r\n\r\n  get isPassword() {\r\n    return this.type === 'passsword';\r\n  }\r\n\r\n  get isEmail() {\r\n    return this.type === 'email';\r\n  }\r\n\r\n  get isURL() {\r\n    return this.type === 'url';\r\n  }\r\n\r\n  get isFile() {\r\n    return this.type === 'file';\r\n  }\r\n\r\n  get isDate() {\r\n    return this.type === 'date';\r\n  }\r\n\r\n  get field() {\r\n    return this.#inputRef.value;\r\n  }\r\n\r\n  get value() {\r\n    const me = this;\r\n    return me.field ? me.field?.value : me.defaultValue;\r\n  }\r\n\r\n  set value(val) {\r\n    const me = this;\r\n    if (me.field) me.field.value = val;\r\n  }\r\n\r\n  get defaultValue() {\r\n    const me = this;\r\n    return me.field ? me.field.defaultValue : GSAttr.get(me, 'value', '');\r\n  }\r\n\r\n  set defaultValue(val) {\r\n    const me = this;\r\n    if (me.field) me.field.defaultValue = val;\r\n    GSAttr.set(me, 'value', val);\r\n\r\n  }\r\n\r\n  get validity() {\r\n    return this.#internals.validity;\r\n  }\r\n\r\n  get formComponent() {\r\n    return GSDOM.closest(this, 'gs-form');\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, render, ifDefined, ref, repeat } from '../lib.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSFormGroupElement } from './FormGroup.mjs';\r\n\r\n// TODO: Make generic JSON to template generator, \r\n// then create string template and apply it to the lit html function.\r\n// Use all properties exstractor from super components and use type definition for bool proeprties.\r\n// Use xtype(#tagName) to define component type and use it to create component instance.\r\n\r\n/**\r\n * Component is responsible for auto-building gs-form and gs-form-group elements\r\n * from either JSON data or GS-ITEM elements.\r\n */\r\nexport class GSFormPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.#proxify;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const data = me.data || {};\r\n    // const tpl = me.#renderContent(); \r\n    const tpl = me.#renderTemplate();\r\n    return html`<gs-form ${ref(me.#formRef)}\r\n\r\n      storage=\"${ifDefined(data.storage)}\" \r\n      disabled=${ifDefined(data.disabled)}.\r\n      data=\"${ifDefined(data.data)}\"\r\n      \r\n      name=\"${ifDefined(data.name)}\"\r\n      rel=\"${ifDefined(data.rel)}\"\r\n      acceptCharset=\"${ifDefined(data.acceptCharset)}\"\r\n      autocapitalize=\"${ifDefined(data.autocapitalize)}\"\r\n      autocomplete=\"${ifDefined(data.autocomplete)}\"\r\n\r\n      action=\"${ifDefined(data.action)}\"\r\n      enctype=\"${ifDefined(data.enctype)}\"\r\n      method=\"${ifDefined(data.method)}\"\r\n      novalidate=\"${ifDefined(data.novalidate)}\"\r\n      target=\"${ifDefined(data.target)}\"\r\n\r\n      block=\"${ifDefined(data.block)}\"\r\n      beep=\"${ifDefined(data.beep)}\"\r\n      timeout=\"${ifDefined(data.timeout)}\"\r\n\r\n      flat=\"${ifDefined(data.flat)}\"\r\n      rtl=\"${ifDefined(data.rtl)}\"\r\n      hide=\"${ifDefined(data.hide)}\"\r\n      padding=\"${ifDefined(data.padding)}\"\r\n      margin=\"${ifDefined(data.margin)}\"\r\n      rounded=\"${ifDefined(data.rounded)}\"\r\n      bordered=\"${ifDefined(data.bordered)}\"\r\n      shadow=\"${ifDefined(data.shadow)}\"\r\n      keep=\"${ifDefined(data.keep)}\"\r\n      css=\"${ifDefined(data.css)}\"\r\n      theme=\"${ifDefined(data.theme)}\"\r\n      os=\"${ifDefined(data.os)}\"\r\n      browser=\"${ifDefined(data.browser)}\"\r\n      language=\"${ifDefined(data.language)}\"\r\n      environment=\"${ifDefined(data.environment)}\"\r\n      orientation=\"${ifDefined(data.orientation)}\"\r\n      protocol=\"${ifDefined(data.protocol)}\"\r\n      template=\"${ifDefined(data.template)}\"      \r\n      >${tpl}</gs-form>`;\r\n    //${templateContent(tpl)}\r\n    //${unsafeHTML(tpl.outerHTML)}\r\n  }\r\n\r\n  #renderTemplate() {\r\n    const tpl = document.createElement('template');\r\n    const content = this.#renderContent();\r\n    render(content, tpl.content);\r\n    return tpl;\r\n  }\r\n\r\n  #renderContent() {\r\n    const me = this;\r\n    const items = me.data?.items || [];\r\n    return html`${repeat(items, (item) => me.#renderFormGroup(me.data, item))}`;\r\n  }\r\n\r\n  // to generate into a template, all properties must be attributes, \r\n  // as properties are not transferable outside of template\r\n  #renderFormGroup(definition, item) {\r\n    return html`<gs-form-group \r\n      icon=\"${ifDefined(item.icon)}\"\r\n      layout=\"${ifDefined(item.layout)}\"\r\n      placement=\"${ifDefined(item.placement)}\"\r\n\r\n      label=\"${ifDefined(item.label)}\"\r\n      description=\"${ifDefined(item.description)}\"\r\n      placeholder=\"${ifDefined(item.placeholder)}\"\r\n      \r\n      pattern=\"${ifDefined(item.pattern)}\"\r\n      mask=\"${ifDefined(item.mask)}\"\r\n\r\n      form=\"${ifDefined(item.form)}\"\r\n      formaction=\"${ifDefined(item.formaction)}\"\r\n      formenctype=\"${ifDefined(item.formenctype)}\"\r\n      formmethod=\"${ifDefined(item.formmethod)}\"\r\n      formnovalidate=\"${ifDefined(item.formnovalidate)}\"\r\n      formtarget=\"${ifDefined(item.formtarget)}\"\r\n      wrap=\"${ifDefined(item.wrap)}\"\r\n      spellcheck=\"${ifDefined(item.spellcheck)}\"\r\n\r\n      type=\"${ifDefined(item.type)}\"\r\n      name=\"${ifDefined(item.name)}\"\r\n      list=\"${ifDefined(item.list)}\"\r\n      accept=\"${ifDefined(item.accept)}\"\r\n      value=\"${ifDefined(item.value)}\"\r\n      \r\n      lang=\"${ifDefined(item.lang)}\"\r\n      title=\"${ifDefined(item.title)}\"\r\n      cols=\"${ifDefined(item.cols)}\"\r\n      rows=\"${ifDefined(item.rows)}\"\r\n      step=\"${ifDefined(item.step)}\"\r\n      min=\"${ifDefined(item.min)}\"\r\n      max=\"${ifDefined(item.max)}\"\r\n      maxlength=\"${ifDefined(item.maxlength)}\"\r\n      minlength=\"${ifDefined(item.minlength)}\"\r\n\r\n      reverse=\"${ifDefined(item.reverse)}\"\r\n      selectable=\"${ifDefined(item.selectable)}\"\r\n\r\n      autoid=\"${ifDefined(item.autoid)}\"\r\n      autocopy=\"${ifDefined(item.autocopy)}\"\r\n      autoselect=\"${ifDefined(item.autoselect)}\"\r\n\r\n      autocapitalize=\"${ifDefined(item.autocapitalize)}\"\r\n      autocorrect=\"${ifDefined(item.autocorrect)}\"\r\n      autocomplete=\"${ifDefined(item.autocomplete)}\"\r\n\r\n      autofocus=\"${ifDefined(item.autofocus)}\"\r\n      autoselect=\"${ifDefined(item.autoselect)}\"\r\n\r\n      disabled=\"${ifDefined(item.disabled)}\"\r\n      checked=\"${ifDefined(item.checked)}\"\r\n      multiple=\"${ifDefined(item.multiple)}\"\r\n      reveal=\"${ifDefined(item.reveal)}\"\r\n      readonly=\"${ifDefined(item.readonly)}\"\r\n      required=\"${ifDefined(item.required)}\"\r\n\r\n      invalidMessage=\"${ifDefined(item.invalidMessage)}\"  \r\n      \r\n      block=\"${ifDefined(item.block || definition.block)}\"\r\n      beep=\"${ifDefined(item.beep || definition.beep)}\"\r\n      timeout=\"${ifDefined(item.timeout || definition.timeout)}\"\r\n\r\n      flat=\"${ifDefined(item.flat)}\"\r\n      rtl=\"${ifDefined(item.rtl)}\"\r\n      hide=\"${ifDefined(item.hide)}\"\r\n      padding=\"${ifDefined(item.padding)}\"\r\n      margin=\"${ifDefined(item.margin)}\"\r\n      rounded=\"${ifDefined(item.rounded)}\"\r\n      bordered=\"${ifDefined(item.bordered)}\"\r\n      shadow=\"${ifDefined(item.shadow)}\"\r\n      keep=\"${ifDefined(item.keep)}\"\r\n      css=\"${ifDefined(item.css)}\"\r\n      theme=\"${ifDefined(item.theme)}\"\r\n      os=\"${ifDefined(item.os)}\"\r\n      browser=\"${ifDefined(item.browser)}\"\r\n      language=\"${ifDefined(item.language || definition.language)}\"\r\n      environment=\"${ifDefined(item.environment)}\"\r\n      orientation=\"${ifDefined(item.orientation)}\"\r\n      protocol=\"${ifDefined(item.protocol)}\"\r\n      template=\"${ifDefined(item.template)}\">\r\n      </gs-form-group>`;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  get #proxify() {\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, GSFormGroupElement.properties));\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGroupElement class\r\n * @module components/GSGroupElement\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSAttributeHandler } from '../base/GSAttributeHandler.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { ElementNavigationController } from '../controllers/ElementNavigationController.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { classMap, createRef, html, render, ifDefined, ref } from '../lib.mjs';\r\n\r\n/**\r\n * Renderer for grouped elements such as Buttons, Navs, Tabs and lists.\r\n * Components handles grouped elements navigation, selection and focus.\r\n * \r\n * @class\r\n * @extends { GSElement }\r\n */\r\nexport class GSGroupElement extends GSElement {\r\n\r\n  static properties = {\r\n    // multiple lists with single select across \r\n    group : {},\r\n    storage: {},    \r\n    circular: { type: Boolean },\r\n    multiple: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #elRef = createRef();\r\n  #controller;\r\n  #controllerGroup;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.data = me.initData();\r\n    me.#controller = new ElementNavigationController(me);\r\n    me.#controllerGroup = new GroupController(me);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    // allow single setting at the container component to apply to the child\r\n    Array.from(me.children).forEach(it => {\r\n      GSAttributeHandler.clone(me, it, false);\r\n    });\r\n  }  \r\n\r\n\r\n  #prerender() {\r\n    const me = this;\r\n    me.queryAll('[generated]').forEach(el => el.remove());\r\n    if (me.data.length > 0) {\r\n      const items = me.renderItems();\r\n      const tpl = document.createElement('template');\r\n      render(items, tpl);\r\n      Array.of(...tpl.children).forEach(el => GSDOM.appendChild(me, el));\r\n    }\r\n  }\r\n  \r\n  firstUpdated(changed) {\r\n    const me = this;\r\n    me.#controller.init();\r\n    me.#controller.attach(me.#elRef.value);\r\n    super.firstUpdated(changed);\r\n    //me.#prerender();\r\n  }  \r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.#prerender();\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      ${me.renderWrappedUI()}\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedUI(name) {\r\n    const me = this;\r\n    return html`<div \r\n      class=\"${classMap(me.renderWrappedClass())}\">\r\n      <slot name=\"${ifDefined(name)}\"></slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    return {};\r\n  }\r\n\r\n  renderItems() {\r\n    return '';\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSItem);\r\n  }\r\n\r\n  previous() {\r\n    this.#controller.previous();\r\n  }\r\n\r\n  next() {\r\n    this.#controller.next();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    this.#controller.reset();\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  isNavigable(el) {\r\n    return el?.tagName === this.childTagName;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onBusEvent(e) {\r\n    let owner, item;  \r\n    ({owner, item} = e.detail);\r\n    if (owner != this) {\r\n      if (!item?.disabled || owner?.selectable) {\r\n        this.reset();\r\n      }\r\n    }\r\n  }\r\n  \r\n  onSelected(el) {\r\n    this.#controllerGroup.notify(el);\r\n  }\r\n\r\n  get focused() {\r\n    return this.#controller.focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#controller.selected;\r\n  }\r\n\r\n  get childTagName() {\r\n    return '';\r\n  }\r\n    \r\n  get items() {\r\n    const me = this;\r\n    return me.queryAll(me.childTagName, true);\r\n  }\r\n\r\n  get generated() {\r\n    return this.items.filter(el => el.hasAttribute('generated'));\r\n  }\r\n\r\n  get active() {\r\n    const me = this;\r\n    const list = me.items.filter(el => el.hasAttribute('active'));\r\n    return me.multiple ? list : list.pop();\r\n  }\r\n\r\n  childByName(name = '', shadow = false) {\r\n    return this.query(`${this.childTagName}[name=\"${name}\"]`, shadow, true);\r\n  }\r\n\r\n  settings(el) {\r\n    const tagName = customElements.getName(el)?.toUpperCase() || 'GS-ITEM';\r\n    const cfg = GSElement.allProperties(el);\r\n    const items = Array.from(this.children).filter(e => e.tagName === tagName ).map(el => GSAttr.proxify(el, cfg));\r\n    const active = items.filter(el => el.active);\r\n    active.forEach((el, idx) => el.active = idx === 0);\r\n    return items;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-group');\r\n  }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGT0 } from '../properties/index.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSIconElement extends GSElement {\r\n\r\n  static styles = css`\r\n    :host {\r\n      --gs-icon-super-color : cornflowerblue;\r\n      --gs-icon-content : '';\r\n    }\r\n    i::after {\r\n      top: -8px;\r\n      font-size: 0.7em;\r\n      position: relative;\r\n      content: var(--gs-icon-content);\r\n      content: attr(data-super);\r\n      color: var(--gs-icon-super-color);\r\n    }`;\r\n\r\n  static properties = {\r\n    name: { reflect: true, hasChanged: notEmpty },\r\n    size: { reflect: true, type: Number, hasChanged: numGT0 },\r\n    color: { reflect: true, ...color },\r\n    superColor: { attribute : 'super-color'},\r\n    super: { reflect: true },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    _clicked: { attribute:false},\r\n    _hovered: { attribute:false},\r\n  }\r\n\r\n  #ref = createRef();\r\n  \r\n  constructor() {\r\n    super();\r\n    //this.flat = true;\r\n  }\r\n\r\n  /*\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    this.#embdeded = GSDOM.matches(this.parentComponent, '[icon]');\r\n  }\r\n  */\r\n\r\n  updated(changed) {\r\n    if (changed.has('_clicked')) {\r\n      if (this._clicked) this.#postAnimate();\r\n    } \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.setCSSProperty(':host', '--gs-icon-super-color', me.superColor);\r\n    return html`<i  ${ref(me.#ref)}\r\n       class=\"bi ${classMap(me.renderClass())}\"\r\n       data-super=\"${ifDefined(me.super)}\"\r\n       @click=\"${me.animate}\"\r\n       @mouseover=\"${me.#onMouseOver}\"\r\n       @mouseout=\"${me.#onMouseOut}\"></i>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      [`text-${me.color}`]: me.color,\r\n      [`bi-${me.name}`]: me.name,\r\n      'fs': me.size > 0,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.clickCss]: me._clicked,\r\n      [me.hoverCss]: me._hovered,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  async #postAnimate() {\r\n    const me = this;\r\n    const delay = GSUtil.asNum(me.dataset.delay, 1);\r\n    if (delay > 0) {\r\n      await GSUtil.timeout(delay * 1000);\r\n      me._clicked = false;\r\n    }    \r\n  }\r\n\r\n  #onMouseOver(e) {\r\n    this.hover(true);\r\n  }\r\n\r\n  #onMouseOut(e) {\r\n    this.hover(false);\r\n  }\r\n\r\n  animate() {\r\n    const me = this;\r\n    me._hovered = false;\r\n    me._clicked = true;\r\n  }\r\n\r\n  hover(sts = false) {\r\n    const me = this;\r\n    if (sts) {\r\n      me._clicked = false;\r\n    }\r\n    me._hovered = sts;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-icon');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/index.mjs';\r\n\r\nexport class GSIndentElement extends GSElement {\r\n\r\n  static styles = css`.indent {\r\n      --gs-indent : 10px;\r\n      margin-left: var(--gs-indent);\r\n      margin-right: var(--gs-indent);\r\n    }`;\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    size: { type: Number, hasChanged: numGT0 },\r\n    multiplier: { type: Number, hasChanged: numGT0 }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.size = 1;\r\n    me.multiplier = 10;\r\n  }\r\n\r\n  renderUI() {\r\n    const size = this.size * this.multiplier;\r\n    return html`<span class=\"indent\" style=\"--gs-indent: ${size}px;\"></span>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-indent');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nconst numdef = { reflect: true, type: Number, hasChanged: numGE0 };\r\n\r\nexport class GSImageElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { hasChanged: notEmpty },\r\n    width: numdef,\r\n    height: numdef,\r\n    opacity: numdef,\r\n    invert: numdef,\r\n    grayscale: numdef,\r\n    brightness: numdef,\r\n    blur: numdef,\r\n    contrast: numdef,\r\n    saturate: numdef,\r\n    hue: numdef,\r\n    sepia: numdef,\r\n\r\n    alt: {},\r\n    loading: {}\r\n\r\n  }\r\n\r\n  #imageRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    this.#update();\r\n    return this.src;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<img ${ref(me.#imageRef)} \r\n            @load=\"${me.#onLoad}\"\r\n            src=\"${me.src}\" \r\n            alt=\"${me.alt}\" \r\n            loading=\"${ifDefined(me.loading)}\" \r\n            class=\"${me.#styleID}\" \r\n            data-gs-class=\"${me.#styleID}\">\r\n          </img>`;\r\n  }\r\n\r\n  get complete() {\r\n    return this.#imageRef.value?.complete || false;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  #renderStyle() {\r\n    const me = this;\r\n    const filter = me.#buildFilter();\r\n    const css = {\r\n      width: me.width > 0 ? me.width : undefined,\r\n      height: me.height > 0 ? me.height : undefined,\r\n      filter: filter.length > 0 ? filter.join(' ') : ''\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #buildFilter() {\r\n    const me = this;\r\n    const o = [];\r\n\r\n    if (me.blur > 0) o.push(`blur(${me.blur}px)`);\r\n    if (me.invert > 0) o.push(`invert(${me.invert})`);\r\n    if (me.opacity > 0) o.push(`opacity(${me.opacity})`);\r\n    if (me.contrast > 0) o.push(`contrast(${me.contrast})`);\r\n    if (me.grayscale > 0) o.push(`grayscale(${me.grayscale})`);\r\n    if (me.brightness > 0) o.push(`brightness(${me.brightness})`);\r\n\r\n    if (me.hue > 0) o.push(`hue-rotate(${me.hue}deg)`);\r\n    if (me.sepia > 0) o.push(`sepia(${me.sepia}%)`);\r\n    if (me.saturate > 0) o.push(`saturate(${me.saturate}%)`);\r\n\r\n    return o;\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.filter = me.#buildFilter().join(' ').trim();\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const el = e.target;\r\n    const me = this;\r\n    if (el) {\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n      me.emit('loaded', { width: el.width, height: el.height, element: el }, true);\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-image');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayoutElement\r\n */\r\n\r\nimport { classMap, html, ifDefined, templateContent } from '../lib.mjs';\r\nimport { orientation, OrientationTypes } from '../properties/orientation.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSLayoutElement extends GSElement {\r\n\r\n    static properties = {\r\n        type: { ...orientation }\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        id : {},\r\n        type: {},\r\n        min: { type: Number },\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        resizable: { type: Boolean },\r\n        autofit: { type: Boolean },\r\n        vPos: { attribute: 'h-pos' },\r\n        hPos: { attribute: 'v-pos' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.autofit = true;  \r\n        me.#items(me).map((el, idx, els) => me.#dyncss(el, idx, els, 0));\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if ( this.autofit && GSDOM.root(this) === document.body) document.body.classList.add('vh-100');\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const list = me.#items(me).map((el, idx, els) => me.#build(el, idx, els));\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"d-flex flex-fill w-100 h-100 ${classMap(me.renderClass())}\">${list}</div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const horizontal = OrientationTypes.isHorizontal(me.type);\r\n        return {\r\n            ...super.renderClass(),\r\n            'flex-column': horizontal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #items(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSLayoutElement.options));\r\n    }\r\n\r\n    #resizable(el) {\r\n        return el.size > 0 || el.min > 0 || el.max > 0 || el.resizable;\r\n    }\r\n\r\n    #dyncss(el, idx, els, lev = 0) {\r\n        const me = this;\r\n        me.#items(el.self).map((it, idx, items) => me.#dyncss(it, idx, items, lev+1));\r\n        if(me.#resizable(el)) me.dynamicStyle(`gsd-${lev}-${idx}`);\r\n    }\r\n\r\n    #build(el, idx, els, lev = 0) {\r\n\r\n        const me = this;\r\n        const type = el.self.parentElement.type || 'vertical';\r\n\r\n        const list = me.#items(el.self).map((it, idx, items) => me.#build(it, idx, items, lev+1));\r\n        \r\n        const min = el.min;\r\n        const max = el.max;\r\n        const template = el.template;\r\n        const tplEl = me.#elementTemplate(el);\r\n\r\n        const tc = `#${tplEl?.id}` !== template;\r\n\r\n        const dir = el.type || type || 'vertical';\r\n        const horizontal = OrientationTypes.isHorizontal(dir);\r\n        \r\n        const col = list.length > 0 && horizontal ? 'flex-column' : '';\r\n\r\n        const did = `gsd-${lev}-${idx}`;\r\n        const css = me.#panelCSS(el, col, did);\r\n        const style = me.#panelStyle(el, horizontal);\r\n        me.dynamicStyle(did, style);\r\n\r\n        const slot = el.name ? html`<slot name=\"${el.name}\"></slot>` : '';\r\n        const src = html`<div id=\"${ifDefined(el.id)}\" class=\"d-flex ${classMap(css)}\">\r\n            ${list}\r\n            ${templateContent(tplEl)}\r\n            ${template && tc ? html`<gs-template flat src=\"${template}\"></gs-template>` : ''}\r\n            ${slot}\r\n            </div>`;\r\n            // ${tc ? me.renderTemplate() : ''}\r\n            \r\n\r\n        if (!el.resizable) return src;\r\n\r\n        const resize = (idx === els.length - 1) ? 'end' : 'start';\r\n        const splitter = me.#splitter(min, max, type, resize);\r\n\r\n        if (idx === els.length - 1) return [splitter , src];\r\n        return [src, splitter];\r\n    }\r\n    \r\n    #elementTemplate(el) {\r\n        const tplEl = el.self.firstElementChild;\r\n        return  GSDOM.isTemplateElement(tplEl) ? tplEl : undefined;\r\n    }\r\n\r\n    #panelCSS(el, col, did) {\r\n\r\n        const resizable = this.#resizable(el);\r\n        const grow = resizable ? '' : 'flex-grow-1';\r\n\r\n        let vpos = el.vPos;\r\n        let hpos = el.hPos;\r\n\r\n        hpos = hpos ? `align-items-${hpos}` : '';\r\n        vpos = vpos ? `justify-content-${vpos}` : '';\r\n\r\n        const css = this.mapCSS(el.css, {\r\n            [did] : resizable,\r\n            [col] : col,\r\n            [grow] : grow,\r\n            [hpos] : hpos,\r\n            [vpos] : vpos\r\n        });\r\n    \r\n        return css;        \r\n    }\r\n\r\n    #panelStyle(el, horizontal) {\r\n        const min = el.size || el.min;\r\n        const max = el.max || el.size;\r\n        const style = {};\r\n        if (horizontal) {\r\n            style['min-height'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-height'] = max > 0 ? `${max}px` : undefined;\r\n        } else {\r\n            style['min-width'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-width'] = max > 0 ? `${max}px` : undefined;\r\n        }\r\n        return style;        \r\n    }\r\n\r\n    #splitter(min, max, dir, resize) {\r\n        return html`<gs-splitter split=\"${dir}\" resize=\"${resize}\" min=\"${min}\" max=\"${max}\"></gs-splitter>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-layout');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSLinklement extends GSElement {\r\n\r\n  static properties = {\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    size: { type: Number },\r\n    text: { ...color },\r\n    color: { ...color },\r\n    url: {},\r\n    ping: {},\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    target: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.url = '#';\r\n    // this.text = 'primary'; // do not set as default -> gs-dropdown\r\n    // this.target = '_blank'; // not used \r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n      <a ${ref(me.#refEl)}  \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        title=\"${ifDefined(me.translate(me.tooltip))}\" \r\n        href=\"${ifDefined(me.url)}\" \r\n        ping=\"${ifDefined(me.ping)}\" \r\n        target=\"${ifDefined(me.target)}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        ?disabled=${me.disabled} \r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"        \r\n        @click=\"${me.#onClick}\">\r\n        ${me.#first}${me.#second}\r\n        </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,      \r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [`text-${me.text}`]: me.text,\r\n      [`bg-${me.color}`]: me.color\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.iconEl?.animate();\r\n    me.notify();\r\n    if (me.url === '#' || GSUtil.isStringEmpty(me.url)) {\r\n      GSEvents.prevent(e);\r\n      me.handle(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon css=\"mx-1\" ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    size=\"${this.size}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  /**\r\n   * Generate clickable link\r\n   * @param {*} options \r\n   * @param {*} css \r\n   * @param {*} before \r\n   * @param {*} after \r\n   * @returns \r\n   */\r\n  static generate(options, css, before, after) {\r\n    const opt = options;\r\n    return html`<a class=\"${classMap(css)}\"\r\n        tabindex=\"0\"    \r\n        ${dataset(opt, true)}\r\n        part=\"${ifDefined(opt.part)}\"\r\n        tooltip=\"${ifDefined(opt.tooltip)}\"\r\n        href=\"${ifDefined(opt.url)}\">        \r\n        ${before || ''}\r\n        ${ifDefined(opt.title)}\r\n        <slot></slot> \r\n        ${after || ''}\r\n    </a>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-link');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\n\r\nexport class GSListElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    selectable: { reflect: true, type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = false;\r\n    this.multiple = false;\r\n    this.selectable = false;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  renderClass() {\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group': true,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    return html`<slot></slot>`;\r\n  }\r\n\r\n  reset() {\r\n    this.items.forEach(el => el.reset());\r\n    this.notify();\r\n  }\r\n\r\n  renderItems() {    \r\n    return this.data.map(o => {\r\n      return html`<gs-list-item generated\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-list-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return super.isNavigable(el) && this.selectable;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-LIST-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSListItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    url: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    size: { type: Number },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true }\r\n  }\r\n\r\n  #initial;\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.binded();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.#initial = this.active;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-LIST';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n        // allow single setting at the gs-list to apply to the child\r\n        // GSAttributeHandler.clone(this.parentComponent, this, false);\r\n        const me = this;\r\n        if (me.isMatchHashBang) me.active = true;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<a  tabindex=\"0\" ${ref(me.#refEl)}\r\n       href=\"${ifDefined(me.href)}\" \r\n       target=\"${ifDefined(me.target)}\" \r\n       class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()} \r\n        ${me.#renderSecond()}\r\n        <slot>${me.renderTemplate()}</slot>\r\n      </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.#itemCSS] : true,\r\n      'active': me.isActive\r\n    }\r\n    return me.mapCSS(me.#itemStatusCSS, css);\r\n  }\r\n\r\n  get isActive() {\r\n    return this.active && this.isSelectable;\r\n  }\r\n\r\n  get isSelectable() {\r\n    return !GSUtil.asBool(this.disabled) || GSUtil.asBool(this.parentComponent.selectable);\r\n  }\r\n\r\n  get isMatchHashBang() {\r\n    return GSUtil.isStringNonEmpty(this.url) && this.url === location.hash;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.icon ? html`<gs-icon name=\"${me.icon}\" size=\"${me.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderText() {\r\n    return this.title ? html`<span>${this.translate(this.title)}</span>` : html`<slot name=\"title\"></slot>`;\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.rtl ? this.#renderText() : this.#renderIcon();\r\n  }\r\n\r\n  #renderSecond() {\r\n    return this.rtl ? this.#renderIcon() : this.#renderText();\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || this.#initial || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get href() {\r\n    return this.url ? this.url : '#';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #inactiveCSS() {\r\n    return this.parentComponent.dataset?.cssInactive || '';\r\n  }\r\n\r\n  get #itemCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #itemStatusCSS() {\r\n    return this.isActive ? this.#activeCSS : this.#inactiveCSS;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\n/**\r\n * For debugging purposes for floating element such as popup, popover, menus... \r\n * https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_view/Coordinate_systems\r\n */\r\nexport class GSMouseElement extends GSElement {\r\n\r\n  static properties = {\r\n    pageX: { type: Number },\r\n    pageY: { type: Number },\r\n    screenX: { type: Number },\r\n    screenY: { type: Number },\r\n    clientX: { type: Number },\r\n    clientY: { type: Number },       \r\n    offsetX: { type: Number },       \r\n    offsetY : { type: Number }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.attachEvent(window, 'mousemove', this.#onMouse.bind(this));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    Offset(${me.offsetX}, ${me.offsetY}) \r\n    Viewport(${me.clientX}, ${me.clientY}) \r\n    Page(${me.pageX}, ${me.pageY}) \r\n    Screen(${me.screenX}, ${me.screenY})`;\r\n  }\r\n\r\n  #onMouse(e) {\r\n    const me = this;\r\n    me.offsetX = e.offsetX;\r\n    me.offsetY = e.offsetY;\r\n    me.clientX = e.clientX;\r\n    me.clientY = e.clientY;\r\n    me.pageX = e.pageX;\r\n    me.pageY = e.pageY;\r\n    me.screenX = e.screenX;\r\n    me.screenY = e.screenY;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-mouse');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\n/**\r\n * This component allow moving contained elements acroos UI\r\n */\r\nexport class GSMovableElement extends GSElement {\r\n\r\n  static styles = css`\r\n  :host {\r\n      --gs-width : inherited;\r\n      --gs-height : inherited;\r\n      --gs-min-width: inherited;\r\n      --gs-max-width: inherited;\r\n      --gs-min-height: inherited;\r\n      --gs-max-height: inherited;\r\n  }\r\n  .gs-movable {\r\n    left: var(--mouse-x) !important;\r\n    top: var(--mouse-y) !important;\r\n   }`;\r\n\r\n  static properties = {\r\n    shadow: { type: Boolean},\r\n    border: { type: Boolean},\r\n    color: { reflect: true, ...color }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #refEl = createRef();\r\n  #enabled = false;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    const root = document.documentElement;\r\n    me.attachEvent(root, 'mousemove', me.#onMove.bind(me));\r\n    me.attachEvent(root, 'mousedown', me.#onMouseDown.bind(me));\r\n    me.attachEvent(root, 'mouseup', me.#onMouseUp.bind(me));\r\n  }\r\n\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    Object.assign(rule.style, {cursor: 'move'});\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#refEl)} \r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\"\r\n      @mousedown=\"${() => me.#enabled = true}\"\r\n      @mouseup=\"${() => me.#enabled = false}\">\r\n      <slot></slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'gs-movable' : true,\r\n      [me.#styleID]: true,\r\n      'position-absolute' : true,\r\n      'border' : me.border,\r\n      'shadow-sm' : me.shadow,\r\n      [`text-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #updateCursor(move) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    Object.assign(rule.style, {'user-select': move ? 'none' : ''});\r\n  }\r\n\r\n  #onMove(e) {\r\n    if (this.#enabled) {\r\n      const style = this.#refEl.value.style;\r\n      style?.setProperty('--mouse-x', e.clientX + \"px\");\r\n      style?.setProperty('--mouse-y', e.clientY + \"px\");\r\n    }\r\n  }\r\n\r\n  #onMouseDown(e) {\r\n    this.#updateCursor(true);\r\n  }\r\n\r\n  #onMouseUp(e) {\r\n    this.#updateCursor(false);\r\n  }\r\n\r\n\r\n  static {\r\n    this.define('gs-movable');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { PlacementTypes, nav, placement } from '../properties/index.mjs';\r\n\r\nexport class GSNavElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    type: nav,\r\n    placement: placement,\r\n    vertical: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = true;\r\n    this.multiple = false;\r\n    this.type = 'pills';\r\n    this.placement = 'start';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-nav-item', false, true);\r\n  }\r\n  \r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const isBefore = PlacementTypes.isBefore(me.placement);\r\n    const isTab = me.type === 'tabs';\r\n    const css = {\r\n      'nav': true,\r\n      [`nav-${me.type}`]: me.type,\r\n      'flex-column': me.vertical,\r\n      'border-bottom-0': me.vertical,\r\n      'border-end': isTab && isBefore && me.vertical,\r\n      'border-start': isTab && !isBefore && me.vertical,\r\n      [`justify-content-${me.placement}`]: !me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Render items based on data propprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-nav-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\">\r\n        </gs-nav-item>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  onFocused(el) {\r\n    // el?.click();\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-NAV-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { NavTypes, PlacementTypes, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSNavItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    disabled: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    active: { type: Boolean, reflect: true },\r\n    tooltip: {}, // Add tooltip property\r\n    badge: { type: Boolean },\r\n    badgeColor: {...color},\r\n    badgeValue: { }\r\n  }\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.badgeColor = 'danger';\r\n    this.badgeValue = '!';\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    delete this[Symbol.for('gs-element')];\r\n    super.disconnectedCallback();\r\n  }\r\n  \r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === this.parentType;\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div class=\"nav-item position-relative ${classMap(me.renderClass())}\">${me.#button}${me.#badgeUI}</div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    return this.mapCSS(this.#itemsCSS, super.renderClass());\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get parentType() {\r\n    return 'GS-NAV';\r\n  }\r\n\r\n  get isNav() {\r\n    return true;\r\n  }\r\n\r\n  get vertical() {\r\n    return this.parentComponent.vertical || false;\r\n  }\r\n\r\n  get placement() {\r\n    return this.parentComponent.placement;\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #title() {\r\n    return html`<slot>${this.translate(this.title)}</slot>`;\r\n  }\r\n\r\n  get #icon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  get #first() {\r\n    return this.rtl ? this.#title : this.#icon;\r\n  }\r\n\r\n  get #second() {\r\n    return this.rtl ? this.#icon : this.#title;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#buttonCSS, {});\r\n    if (me.active) obj = me.mapCSS(me.#buildCSS + ' ' + me.#activeCSS, obj);\r\n    return html`<a tabindex=\"0\" type=\"button\" role=\"nav\" \r\n     ${ref(me.#refEl)}\r\n     class=\"nav-link ${classMap(obj)}\"\r\n     href=\"${ifDefined(me.url)}\" \r\n     target=\"${ifDefined(me.target)}\"\r\n     title=\"${ifDefined(me.tooltip)}\"> \r\n        ${me.#first} \r\n        ${me.#second}\r\n      </a>`;\r\n  }\r\n\r\n  get #badgeUI() {\r\n    const me = this;\r\n    if (!me.badge) return '';\r\n    const css = {\r\n      'top-0' : true,\r\n      'end-0' : true,\r\n      'translate-middle-y' : true,\r\n      [`text-bg-${me.badgeColor}`]: me.badgeColor,\r\n    };\r\n    return html`<span class=\"badge rounded-pill position-absolute ${classMap(css)}\">${me.badgeValue}</span>`;\r\n  }\r\n\r\n  get #itemsCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #buttonCSS() {\r\n    return this.parentComponent.dataset?.cssButton || '';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #navType() {\r\n    return NavTypes.indexOf(this.parentComponent.type);\r\n  }\r\n\r\n  // fiix for shadowed DOM, parent class=\"nav nav-pills..\" \r\n  // do not cross shadow dom, so item elements does not see CSS\r\n  // we have to simulate\r\n  get #buildCSS() {\r\n    const isVertical = this.vertical;\r\n    const isBefore = PlacementTypes.isBefore(this.placement);\r\n    switch (this.#navType) {\r\n      // pills\r\n      case 1: return 'rounded text-bg-primary';\r\n      // tabs\r\n      case 2:\r\n        if (isVertical) {\r\n          if (isBefore) {\r\n            return 'shadow-none border border-end-0';\r\n          } else {\r\n            return 'shadow-none border border-start-0';\r\n          }\r\n        }\r\n        return 'shadow-none border border-bottom-0';\r\n      // underline\r\n      case 3: return 'shadow-none border-bottom border-3 fw-medium';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { svg, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSOverlayElement extends GSElement {\r\n\r\n    static properties = {\r\n        color: {},\r\n        target: {},\r\n        autoremove: { type: Boolean },\r\n        opened: { type: Boolean },\r\n        opacity: { type: Number },\r\n        padding: { type: Number },\r\n        radius: { type: Number },\r\n    }\r\n\r\n    #styleID = GSID.id;\r\n    #styleID2 = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        //this.color = 'rgb(0,0,0)';\r\n        this.color = '#000';\r\n        this.opacity = 0.7;\r\n        this.padding = 1;\r\n        this.radius = 6;\r\n        this.dynamicStyle(this.#styleID);\r\n        this.dynamicStyle(this.#styleID2);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', () => me.requestUpdate());\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        if (!me.opened) return '';\r\n        const path = me.#path;\r\n        return path ? html`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:space=\"preserve\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\" preserveAspectRatio=\"xMinYMin slice\"\r\n            viewBox=\"0 0 ${window.innerWidth} ${window.innerHeight}\"\r\n            class=\"gs-overlay gs-overlay-animated ${me.#styleID}\"\r\n            @click=\"${me.reset.bind(me)}\">\r\n            ${path}\r\n        </svg>` : '';\r\n    }\r\n\r\n    async firstUpdated(changed) {\r\n        const me = this;\r\n        const opt = {\r\n            fillRule: \"evenodd\",\r\n            clipRule: \"evenodd\",\r\n            strokeLinejoin: \"round\",\r\n            strokeMiterlimit: \"2\",\r\n            zIndex: \"10000\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    get #path() {\r\n        const me = this;\r\n        const el = GSDOM.query(me.target);\r\n        if (!me.target) return '';\r\n        const pathStr = me.#createSVGPathString(el);\r\n        const opt = { fill: me.color, opacity: me.opacity, pointerEvents: 'auto', cursor: 'auto' };\r\n        me.dynamicStyle(me.#styleID2, opt);\r\n        return svg`<path class=\"${me.#styleID2}\"  d=\"${pathStr}\"></path>`;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n\r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n\r\n        const rect = target.getBoundingClientRect();\r\n\r\n        const padding = me.padding;\r\n        const radius = me.radius;\r\n\r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n\r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n\r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n\r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n\r\n        const val = `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n            M${highlightBoxX},${highlightBoxY} \r\n            h${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n            v${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n            h-${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n            v-${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;\r\n        return val.replace(/[\\t\\n]/g, ' ');\r\n    }\r\n\r\n    static {\r\n        this.define('gs-overlay');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, map, range, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { size, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSPagerElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    size: { ...size },\r\n    first: { type: Boolean },\r\n    last: { type: Boolean },\r\n    next: { type: Boolean },\r\n    previous: { type: Boolean },\r\n    pages: { type: Number },\r\n\r\n    labelFirst: { attribute: 'label-first' },\r\n    labelLast: { attribute: 'label-last' },\r\n    labelNext: { attribute: 'label-next' },\r\n    labelPrevious: { attribute: 'label-previous' },\r\n\r\n    cssItem: { attribute: 'css-item' },\r\n\r\n  }\r\n\r\n  #ref = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.pages = 5;\r\n    me.labelFirst = '&laquo;';\r\n    me.labelLast = '&raquo;';\r\n    me.labelNext = '&rsaquo;';\r\n    me.labelPrevious = '&lsaquo;';\r\n    if (me.#isInTable) {\r\n      me.slot = \"extra\";\r\n    }\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const half = Math.floor((me.pages - 1) / 2);\r\n    const page = me.dataController?.page || 0;\r\n    const start = page - half < 1 ? 1 : page - half;\r\n    const end = page > 0 ? page + half : me.pages;\r\n\r\n    return html`<nav \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        @click=\"${me.#onClick}\"\r\n        @keyup=\"${me.#onKeyUp}\"\r\n        @keydown=\"${me.#onKeyDown}\">\r\n        <ul ${ref(me.#ref)} class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()}\r\n        ${me.#renderPrevious()}\r\n        ${map(range(start, end + 1), (i) => me.#renderItem(i, '', '', i  === page))}\r\n        ${me.#renderNext()}\r\n        ${me.#renderLast()}\r\n        </ul></nav>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = me.size ? SizeTypes[me.size] || me.size : '';\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'pagination': true,\r\n      [`pagination-${size}`]: size,\r\n\r\n    }\r\n    return css;\r\n  }\r\n\r\n  updated() {\r\n    const target = this.#ref.value;\r\n    if (target && this.isFocused) {\r\n      target.querySelector('.active > a')?.focus();\r\n    }\r\n  }\r\n\r\n  onDataRead() {\r\n    this.requestUpdate();\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.first ? this.#renderItem(this.labelFirst, 'first', 'First page') : '';\r\n  }\r\n\r\n  #renderLast() {\r\n    return this.last ? this.#renderItem(this.labelLast, 'last', 'Last page') : '';\r\n  }\r\n\r\n  #renderPrevious() {\r\n    return this.previous ? this.#renderItem(this.labelPrevious, 'previous', 'Previous page') : '';\r\n  }\r\n\r\n  #renderNext() {\r\n    return this.next ? this.#renderItem(this.labelNext, 'next', 'Next page') : '';\r\n  }\r\n\r\n  #renderItem(text = '', name = '', title = '', active = false) {\r\n    const me = this;\r\n    text = GSUtil.decodeHTMLEntities(text);\r\n    return html`<li class=\"page-item ${active ? 'active' : ''}\">\r\n              <a class=\"page-link ${this.cssItem}\" \r\n                 name=\"${name}\" \r\n                 title=\"${me.translate(title)}\" \r\n                 href=\"#\">${me.translate(text)}</a>\r\n            </li>`;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const el = this.#toTarget(e, 'a');\r\n    if (!el) return;\r\n\r\n    const ctrl = me.dataController;\r\n    if (!ctrl) return;\r\n\r\n    const val = el.name || el.text;\r\n    me.emit(val, el);\r\n    \r\n    switch (val) {\r\n      case 'first':\r\n        return ctrl.firstPage();\r\n      case 'last':\r\n        return ctrl.lastPage();\r\n      case 'next':\r\n        return ctrl.nextPage();\r\n      case 'previous':\r\n        return ctrl.prevPage();\r\n    }\r\n\r\n    ctrl.page = val;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const current = this.#toTarget(e, 'li');\r\n    let el = null;\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        el = current?.previousElementSibling;\r\n        break;\r\n      case 'ArrowRight':\r\n        el = current?.nextElementSibling;\r\n        break;\r\n    }\r\n    el = el?.querySelector('a');\r\n    el?.focus();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') {\r\n      this.#toTarget(e, 'a')?.click();\r\n    }\r\n  }\r\n\r\n  #toTarget(e, name) {\r\n    const el = e.target.closest(name) || e.target;\r\n    return el.tagName === name.toUpperCase() ? el : undefined;\r\n  }\r\n\r\n  get #isInTable() {\r\n    return this.parentComponent?.tagName === 'GS-TABLE';\r\n  }\r\n  \r\n  static {\r\n    this.define('gs-pagination');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, position } from '../properties/index.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSPopper } from \"../base/GSPopper.mjs\";\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopupElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    position: { ...position },\r\n    trigger: {},\r\n    target: {},\r\n    autoclose: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    opened: { type: Boolean },\r\n    hPos: { type: Number, attribute: 'h-pos' },\r\n    vPos: { type: Number, attribute: 'v-pos' },\r\n    wMin: { type: Number, attribute: 'w-min' },\r\n    wMax: { type: Number, attribute: 'w-max' },\r\n    hMin: { type: Number, attribute: 'h-min' },\r\n    hMax: { type: Number, attribute: 'h-max' },\r\n\r\n  }\r\n\r\n  #caller = null;\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.autofocus = true;\r\n    this.autoclose = true;\r\n    this.trigger = 'click';\r\n    this.position = 'absolute';\r\n    this.placement = 'bottom';\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachTarget(); // Fixed typo: #attachTaraget -> #attachTarget\r\n    me.attachEvent(window, 'resize', me.close.bind(me));\r\n    me.on('mouseleave', me.#onAuto.bind(me));\r\n  }\r\n\r\n  firstUpdated(changedProperties) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#resize();\r\n      me.#reposition();\r\n    });\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#reposition();\r\n    if (me.autofocus) me.focus();\r\n    me.notify();\r\n    me.#postPopup();\r\n  }\r\n\r\n  willUpdate(changedProperties) {\r\n    if (changedProperties.has('opened')) {\r\n      this.#postPopup();\r\n    }\r\n    return super.willUpdate(changedProperties); \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div \r\n      ${ref(me.#panelRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"fade ${classMap(me.renderClass())}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      @keydown=\"${me.#onKeyDown}\">\r\n      ${me.renderTemplate()}\r\n      <slot></slot>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': me.opened,\r\n      //'d-none' : !me.opened,\r\n      [me.#styleID]: true,\r\n      [`position-${me.position}`]: me.position,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  focus() {\r\n    this.query('[tabindex], input, select, textarea, button, a', true)?.focus();\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Show popup at x/y position on the screen\r\n   * @param {Number} x \r\n   * @param {Number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const obj = {\r\n      top: '0px',\r\n      left: '0px',\r\n      translate: `${x}px ${y}px`\r\n    };\r\n    me.#resize(obj);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      case 'Escape':\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    //if (!me.opened) return;\r\n    if (me.vPos || me.hPos) {\r\n      const opt = {\r\n        top: '0px',\r\n        left: '0px',\r\n        translate: `${me.hPos}px ${me.vPos}px`\r\n      };\r\n      const rule = me.dynamicStyle(me.#styleID);\r\n      Object.assign(rule.style, opt);\r\n    } else if (me.target) {\r\n      let target = GSDOM.query(document.documentElement, me.target);\r\n      target = target.renderRoot?.firstElementChild || target;\r\n      GSPopper.popupFixed(me.placement, me.#panel, target);\r\n    }\r\n\r\n  }\r\n\r\n  #resize(obj = {}) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n    if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n    if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n    if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n    Object.assign(rule.style, obj);\r\n  }\r\n\r\n  #onPopup(e) {\r\n    const me = this;\r\n    me.#caller = e;\r\n    if (e instanceof Event) {\r\n      GSEvents.prevent(e);\r\n      me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n    }\r\n\r\n    if (me.placement) {\r\n      GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n      me.opened = true;\r\n      return;\r\n    }\r\n\r\n    let x = e.clientX, y = e.clientY;\r\n    const rect = me.#panel.getBoundingClientRect();\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #postPopup() {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    Object.assign(rule.style, {display: me.opened ? '' : 'none'}); \r\n  }\r\n\r\n  #attachTarget() { // Fixed typo: #attachTaraget -> #attachTarget\r\n    const me = this;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    me.trigger.split(' ').forEach(evt => {\r\n      targets.forEach(target => me.attachEvent(target, evt, me.#onPopup.bind(me)));\r\n    });\r\n  }\r\n\r\n  #onAuto(e) {\r\n    if (this.autoclose) this.close();\r\n  }\r\n\r\n  get #panel() {\r\n    return this.#panelRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-popup');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopoverElement extends GSElement { // Fixed typo: GSPopoverlement -> GSPopoverElement\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    target: {},\r\n    trigger: {},\r\n    title: {},\r\n    content: {},\r\n    opened: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    // added to the GSCacheStyle\r\n    //me.style.position = 'fixed';\r\n    me.placement = 'top';\r\n    me.trigger = 'hover';\r\n    me.content = '';\r\n    me.dynamicStyle(me.#styleID);\r\n    me.dynamicStyle(me.#arrowID);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n  \r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const head = me.title ? html`<div class=\"popover-header ${me.cssHead}\">${me.translate(me.title)}</div>` : '';\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        data-popper-placement=\"${me.placement}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        data-gs-class=\"${me.#styleID}\" \r\n        role=\"tooltip\">\r\n        <div ${ref(me.#arrowRef)} \r\n          class=\"popover-arrow ${me.#arrowID}\" \r\n          data-gs-class=\"${me.#arrowID}\">\r\n        </div>\r\n        ${head}\r\n        <div class=\"popover-body\">\r\n          ${me.renderTemplate()}\r\n          ${me.content}\r\n          <slot></slot>\r\n        </div>\r\n    </div>            \r\n    `;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'popover': true,\r\n      'bs-popover-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  get isFocusTrigger() {\r\n    return this.trigger.includes('focus');\r\n  }\r\n\r\n  get isHoverTrigger() {\r\n    return this.trigger.includes('hover');\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return GSDOM.query(document.body, me.target);\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const source = me.#panel;\r\n    if (!source) return;\r\n    if (me.opened) {\r\n      GSPopper.popupAbsolute(me.placement, source, me.#ref, me.#arrow);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, {top:'-1000px', left:'-1000px'});\r\n    }\r\n  }\r\n\r\n  // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n  #attachEvents() {\r\n\r\n    const me = this;\r\n    const el = me.#ref;\r\n\r\n    if (me.isHoverTrigger) {\r\n      GSEvents.attach(me, el, 'mouseover', me.open.bind(me));\r\n      GSEvents.attach(me, el, 'mouseleave', me.close.bind(me));\r\n    }\r\n\r\n    if (me.isFocusTrigger) {\r\n      GSEvents.attach(me, el, 'click', me.#onFocus.bind(me));\r\n      GSEvents.attach(me, me.#panel, 'mouseleave', me.close.bind(me));\r\n      GSEvents.attach(me, window, 'click', me.close.bind(me));\r\n    }\r\n\r\n  }\r\n\r\n  #onFocus(e) {\r\n    GSEvents.prevent(e);\r\n    this.toggle();\r\n  }\r\n  \r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-popover');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, classMap, ifDefined } from '../lib.mjs';\r\nimport { literalTemplate } from '../directives/literal.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSProgressElement extends GSElement {\r\n\r\n  static properties = {\r\n    min: { reflect: true, type: Number },\r\n    max: { reflect: true, type: Number },\r\n    step: { reflect: true, type: Number },\r\n    value: { reflect: true, type: Number },\r\n    label: { reflect: true }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.min = 0;\r\n    this.step = 1;\r\n    this.max = 100;\r\n    this.value = 0;\r\n    this.styles = { width: '0%' };\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'progress-bar' : true,\r\n      [me.#styleID] : true\r\n    }\r\n    return css;\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#updateStyle();\r\n    const obj = {min :me.min, max:me.max, step:me.step, value:me.value, percentage:me.percentage};\r\n    return html`\r\n    <div class=\"progress\" @keydown=\"${me.#onKeySelect}\" dir=\"${ifDefined(me.direction)}\">\r\n        <div class=\"${classMap(me.renderClass())}\" \r\n             \r\n             role=\"progressbar\"\r\n             tabindex=\"0\">\r\n             ${literalTemplate(me.label, obj)}\r\n        </div>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    if (changed.has('value')) {\r\n      let val = me.step + changed.get('value');\r\n      val = me.#update(val, val);\r\n      changed.set('value', val);\r\n    }\r\n  }\r\n\r\n  updated(changed) {\r\n    if (changed.has('value')) {\r\n      this.notify();\r\n    }\r\n  }\r\n\r\n  increase(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value + val, me.value);\r\n    return true;\r\n  }\r\n\r\n  decrease(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value - val, me.value);\r\n    return true;\r\n  }\r\n\r\n  get percentage() {\r\n    const me = this;\r\n    return Math.trunc((me.value / me.max) * 100);\r\n  }\r\n\r\n  #updateStyle() {\r\n    const me = this;\r\n    me.styles.width = `${me.percentage}%`;\r\n    me.dynamicStyle(me.#styleID, me.styles);\r\n  }\r\n\r\n  #update(val, old = 0) {\r\n    val = GSUtil.asNum(val, GSUtil.asNum(old));\r\n    const me = this;\r\n    if (val > me.max) val = me.max;\r\n    if (val < me.min) val = me.min;\r\n    return val;\r\n  }\r\n\r\n  #onKeySelect(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp' :\r\n      case 'ArrowRight' :\r\n          return me.increase();\r\n      case 'ArrowLeft' :\r\n      case 'ArrowDown' :\r\n         return me.decrease();\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-progress');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\n\r\nexport class GSSpinnerElement extends GSElement {\r\n\r\n    static styles = css`.spinner-border { border: var(--bs-spinner-border-width) solid currentcolor; border-right-color: transparent; }`;\r\n\r\n    static properties = {\r\n        color: { ...color, reflect: true },\r\n        small: { type: Boolean, reflect: true },\r\n        pulsar: { type: Boolean }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\" role=\"status\"></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"spinner-border\": !me.pulsar,\r\n            \"spinner-grow\": me.pulsar,\r\n            [`text-${me.color}`]: me.color,\r\n            [`spinner-border-sm`]: !me.pulsar && me.small,\r\n            [`spinner-grow-sm`]: me.pulsar && me.small,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-spinner');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitterElement class\r\n * @module components/GSSplitterElement\r\n */\r\n\r\nimport { classMap, createRef, ref, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCSSMap } from '../base/GSCSSMap.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { notEmpty, numGT0, placement } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSSplitterElement extends GSElement {\r\n\r\n    static properties = {\r\n        // Check if splitter use vertical or horizontal splitting\r\n        split: { reflect: true },\r\n        // start|end|top|bottom\r\n        resize: { ...placement, hasChanged: notEmpty },\r\n        size: { type: Number, hasChanged: numGT0 }\r\n    }\r\n\r\n    #cursor = 0;\r\n    #styleID = GSID.id;\r\n    #styleTGT = GSID.id;\r\n    #elRef = createRef();\r\n    #mouseController;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.size = 8;\r\n        me.resize = 'start';\r\n        me.dynamicStyle(me.#styleID);\r\n        me.#load();\r\n        me.#mouseController = new ElementMoveController(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        //this.dynamicStyle(this.#styleTGT, null, true);\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        super.firstUpdated(changed);\r\n        const me = this;\r\n        me.#mouseController.attach(me.#splitter);\r\n        //const shadow = GSDOM.root(me.target) instanceof ShadowRoot;\r\n        //me.dynamicStyle(me.#styleTGT, {}, !shadow);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#elRef)} \r\n            @dblclick=\"${me.#onDoubleClick}\"\r\n            data-gs-class=\"${me.#styleID}\" \r\n            class=\"${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'splitter': true,\r\n            [me.#styleID]: true\r\n        }\r\n        return css;\r\n    }\r\n\r\n    updated(changedProperties) {\r\n        const me = this;\r\n        me.#cssUpdate();\r\n    }\r\n\r\n    /**\r\n    * Lock UI for mouse events to enable resizing over embedded iframes\r\n    * @param {MouseEvent} e \r\n    */\r\n    onStartMove(e) {\r\n        const me = this;\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', { start: true });\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    onMouseMove(e) {\r\n        const me = this;\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Save last position and unlock mouse UI events when resizing finished\r\n     * @param {*} e \r\n     */\r\n    onEndMove(e) {\r\n        const me = this;\r\n        me.#save();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', { stop: true });\r\n    }\r\n\r\n    /**\r\n    * Check if splitter use vertical or hotizontal splitting\r\n    * @returns {Boolean}\r\n    */\r\n    get isVertical() {\r\n        return this.split === 'vertical';\r\n    }\r\n\r\n    get isHorizontal() {\r\n        return !this.isVertical;\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display', 'none')).pop();\r\n        }\r\n        el.classList?.add(me.#styleTGT);\r\n        return el;\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.#elRef.value;\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        return this.target.style;\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n\r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n                .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, true);\r\n                    el.dataset.gsSplitter = true;\r\n                });\r\n        } else {\r\n            me.#lockable\r\n                .filter(el => el.dataset.gsSplitter)\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, false);\r\n                    delete el.dataset.gsSplitter;\r\n                });\r\n        }\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { width: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { height: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        const key = me.isVertical ? 'width' : 'height';\r\n        me.#styleDynamic[key] = val + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { [key]: val + \"px\" }, true);\r\n    }\r\n\r\n    #cssUpdate() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        const opt = {\r\n            [size]: `${me.size}px`,\r\n            [full]: '100%',\r\n            'border-width': '1px',\r\n            cursor: cursor,\r\n            'border-color': 'darkgray',\r\n            'border-style': 'solid',\r\n            'background-color': 'lightgray',\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-splitter');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNavItemElement } from '../NavItem.mjs';\r\n\r\n/**\r\n * Tab component (gs-tab-header), generate selectable/switchable tabs on a panel\r\n */\r\nexport class GSTabItemElement extends GSNavItemElement {\r\n\r\n  static properties = {\r\n    name: {}\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.#updateCSS + this.css;\r\n  }\r\n\r\n  get #updateCSS() {\r\n    const me = this;\r\n    return me.shouldUpdate() ? GSUtil.normalize(me.parentComponent?.tabCSS) : '';\r\n  }\r\n\r\n  get parentType() {\r\n    return 'GS-TAB-GROUP';\r\n  }\r\n\r\n  get panel() {\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    return me[key] || me.owner.panelByName(me.name);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-header');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\n\r\n/**\r\n * Container for individual tab; part of tabed panel\r\n */\r\nexport class GSTabPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    name: {},\r\n    template: {},\r\n    active: { type: Boolean, reflect : true }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.active = false;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    delete this[Symbol.for('gs-element')];\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === this.parentType;\r\n  }\r\n\r\n  /*\r\n  @invalid=\"${me.#onInvalid}\"\r\n  @change=\"${me.#onChange}\"\r\n  */\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  \r\n      dir=\"${ifDefined(me.direction)}\" \r\n      class=\"${classMap(this.renderClass())}\">\r\n      <slot>\r\n      ${me.renderTemplate()}\r\n      </slot></div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tab-pane': true,\r\n      'd-none' : !me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get parentType() {\r\n    return 'GS-TAB-GROUP';\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest(this.parentType.toLowerCase(), -1, true) || GSDOM.component(this);\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('form', -1, true);\r\n  }\r\n\r\n  get tab() {\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    return me[key] || me.owner.tabByName(me.name);\r\n  }\r\n\r\n  get tabs() {\r\n    return this.owner.tabs;\r\n  }\r\n\r\n  /*\r\n  #onChange(e) {\r\n    const me = this;\r\n    if (me.form) {\r\n      const isValid = me.form.isValid;\r\n      me.tabs?.forEach(el => el.badge = !isValid);\r\n    }\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    const me = this;\r\n    if (me.form) me.badge = false;\r\n  }\r\n  */\r\n\r\n  static {\r\n    this.define('gs-tab-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../../base/GSID.mjs';\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { PlacementTypes } from '../../properties/placement.mjs';\r\nimport { GSNavElement } from '../Nav.mjs';\r\n\r\n/**\r\n * Panel with tabs component (gs-tab-group), generate childrens gs-tab-header and gs-tab-panel \r\n */\r\nexport class GSTabGroupElement extends GSNavElement {\r\n\r\n  static properties = {\r\n    panelCSS: { attribute: 'css-panel' },\r\n    tabCSS: { attribute: 'css-tab' },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n   \r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    // link tabs and panels\r\n    me.items.forEach(el => me.#findPanel(el));\r\n    me.onSelected(me.active);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.items.forEach(el => me.#findPanel(el));\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'd-flex': me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    const me = this;\r\n    const reverse = PlacementTypes.isAfter(me.placement);\r\n    const list = [super.renderWrappedUI('tabs'),\r\n    html`<div class=\"tab-content flex-fill ${me.panelCSS}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <slot name=\"panels\"></slot>\r\n      </div>\r\n      <slot class=\"d-none\"></slot>`];\r\n    return reverse ? list.reverse() : list;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const css = super.renderWrappedClass();\r\n    return me.mapCSS(me.tabCSS, css);\r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    const me = this;\r\n    const tabs =  me.#renderTabs();\r\n    const panels = me.#renderPanels();\r\n    return tabs.concat(...panels);\r\n  }\r\n\r\n  #renderTabs() {    \r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-header generated slot=\"tabs\"\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\"\r\n        title=\"${ifDefined(o.title)}\"\r\n        name=\"${o.name}\"></gs-tab-header>`;\r\n    });    \r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  #renderPanels() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-panel generated  \r\n        slot=\"panels\" name=\"${o.name}\" \r\n        .active=\"${ifDefined(o.active)}\"\r\n        template=\"${ifDefined(o.template)}\"></gs-tab-panel>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when tab selected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onSelected(el) {\r\n    el?.click();\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = true;\r\n  }\r\n\r\n  /**\r\n   * Callback when tab deselected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onDeselected(el) {\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = false;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-TAB-HEADER';\r\n  }\r\n\r\n  get tabs() {\r\n    return this.items;\r\n  }\r\n\r\n  get panels() {\r\n    return this.queryAll('gs-tab-panel', false, true);\r\n  }\r\n\r\n  tabByName(name = '', shadow = false) {\r\n    return super.childByName(name, shadow);\r\n  }\r\n\r\n  panelByName(name = '', shadow = false) {\r\n    return this.query(`gs-tab-panel[name=\"${name}\"]`, shadow, true);\r\n  }\r\n\r\n  /**\r\n   * Selected Tab node name is used to find the panel.\r\n   * If panel found, auto-link it with node element\r\n   * @param {GSTabElement} el \r\n   */\r\n  #findPanel(el) {\r\n    if (!el) return null;\r\n    const me = this;\r\n    const generated = me.data?.length > 0;\r\n    const key = Symbol.for('gs-element');\r\n    let panel = el[key] || me.panelByName(el.name, generated);\r\n    if (panel && !el[key]) {\r\n      el[key] = panel;\r\n      panel[key] = el;\r\n    }\r\n    return panel;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { DataSelector } from '../data/DataSelector.mjs';\r\n\r\n/**\r\n * A HTML Table renderer for tabular data representation.\r\n * Either use \"storage\" property to point to data handler\r\n * or use simpler form by using \"data\" property.\r\n * \r\n * NOTE: Simpler form currently does not suport data filter.\r\n * Simpler form is only for read-ony static data representation.\r\n */\r\nexport class GSTableElement extends GSElement {\r\n\r\n  static #icons = ['sort-up', 'arrow-down-up', 'sort-down-alt'];\r\n\r\n  static styles = css`th:hover { opacity: 50% !important; }`;\r\n\r\n  static CELLS = {\r\n    align: {},\r\n    width: {},\r\n    width: {},\r\n    css: {},\r\n    title: {},\r\n    colspan: {},\r\n    storage: {},\r\n    ref: {}, // if set; use storage or gs-items to map ref value to virtual field\r\n    list : { type: Boolean }, // if set, use storage record column as a filter\r\n    filter: { type: Boolean },\r\n    hidden: { type: Boolean },\r\n    fixed: { type: Boolean },\r\n    filterType: { attribute: 'filter-type' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    color: { ...color},\r\n    ...GSData.PROPERTIES\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    color: { ...color },\r\n    colorFilter: { ...color, attribute: 'filter-color' },\r\n    colorHead: { ...color, attribute: 'head-color' },\r\n    colorSelect: { ...color, attribute: 'select-color' },\r\n    colorSort: { ...color, attribute: 'sort-color' },\r\n    stripedColumn: { type: Boolean, attribute: 'striped-column' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    divider: { type: Boolean },\r\n    striped: { type: Boolean },\r\n    hover: { type: Boolean },\r\n    small: { type: Boolean },\r\n    grid: { type: Boolean },\r\n    borderless: { type: Boolean },\r\n\r\n    sort: { type: Array, state: true },\r\n    columns: { type: Array, state: true },\r\n    key: { type: Number, state: true },\r\n    data: { type: Array },\r\n    \r\n    datacolumn: { type: Boolean },\r\n    multisort: { type: Boolean },\r\n    multiselect: { type: Boolean },\r\n    protected: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n    toggle: { type: Boolean },\r\n    sortable: { type: Boolean },\r\n  }\r\n\r\n  #config = [];\r\n  #sortOrder = [];\r\n  #auto = false;\r\n\r\n  constructor() {\r\n    super();\r\n    this.headColor = 'secondary';\r\n    this.colorSelect = 'info';\r\n    this.columns = [];    \r\n    this.data = [];\r\n    this.sort = [];\r\n    this.key = 0;\r\n  }\r\n\r\n  get selected() {\r\n    return this.dataController?.selected;\r\n  }\r\n\r\n  set search(val) {\r\n    const me = this;\r\n    if (me.storage && me.dataController) {\r\n      return me.dataController.search = val;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#config = GSItem.proxify(me, GSTableElement.CELLS);\r\n    if (me.columns.length === 0) me.columns = me.#config.map(v => v.name);\r\n    /* TODO - auto storage prevents using plain table with \r\n       columns, data properties programmatically\r\n    if (!me.storage) {      \r\n      me.storage = me.#auto = GSID.next('table-');\r\n    }\r\n    */\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.dataController?.clearSelected(this.data);\r\n    this.data = [];\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'user-select-none': me.protected,\r\n      'table': true,\r\n      'table-sm': me.small,\r\n      'table-hover': me.hover,\r\n      'table-striped': me.striped,\r\n      'table-bordered': me.grid,\r\n      'table-borderless': me.borderless,\r\n      'table-striped-columns': me.stripedColumns,\r\n      [`table-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.dataController?.read();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (me.columns.length != me.sort.length) me.sort = Array(me.columns.length).fill(0);\r\n    if (me.datacolumn && me.data.length > 0) {\r\n      me.columns = me.data[0];\r\n      me.data = me.data.slice(1);\r\n    }\r\n    if (changed.has('multiselect') && !me.multiselect) me.dataController?.clearSelected();\r\n    if (changed.has('selectable') && !me.selectable) me.dataController?.clearSelected();\r\n    if (changed.has('sortable') || changed.has('multisort')) {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [];\r\n    }\r\n\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const headColor = me.colorHead ? `table-${me.colorHead}` : '';\r\n    return html`\r\n      <table  \r\n       dir=\"${ifDefined(me.direction)}\"\r\n       @keyup=\"${me.#onKeyUp}\"\r\n       @keydown=\"${me.#onKeyDown}\"\r\n       class=\"${classMap(me.renderClass())}\">\r\n        <thead class=\"${ifDefined(headColor)}\">\r\n          ${me.#renderFilters()}\r\n          <tr @click=${me.#onSort}>\r\n            ${me.columns.map((entry, index) => me.#renderColumn(entry, index))}\r\n          </tr>\r\n        </thead>\r\n        <tbody @click=${me.#onSelect} @contextmenu=${me.#onSelect} class=\"${me.divider ? 'table-group-divider' : ''}\" role=\"button\">\r\n          ${me.data.map((entry, index) => me.#renderRecord(entry, index))}\r\n          ${me.#renderEmpty()}\r\n        </tbody>\r\n      </table>\r\n      <slot name=\"extra\">${me.#renderHandler()}</slot>\r\n    `;\r\n  }\r\n\r\n  #renderHandler() {\r\n    const me = this;\r\n    return me.#auto ? html`<gs-data-handler type=\"cached\" mode=\"\" id=${me.#auto} generated></gs-data-handler>` : '';\r\n  }\r\n\r\n  onDataRead(data) {\r\n    const me = this;\r\n    me.data = data;\r\n    //me.dataController?.clearSelected();\r\n\r\n    // update filtering\r\n    if (data.length > 0 && me.#hasFilters) {\r\n      me.#config.forEach((entry, index) => {\r\n        entry.columnType = me.#columType(index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear table filters\r\n   */\r\n  clear() {\r\n    this.#input.forEach(el => el.value = '');\r\n    this.dataController?.filter([]);\r\n  }\r\n\r\n  valueAt(row, cell) {\r\n    return this.data.length > row ? this.data[row][cell] : undefined;\r\n  }\r\n\r\n  get #input() {\r\n    return this.queryAll('th > input, th > select', true, true);\r\n  }\r\n\r\n  get #hasFilters() {\r\n    return this.#config.filter(o => o.filter).length > 0;\r\n  }\r\n\r\n  #columType(index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const cell = me.valueAt(0, me.columns[index]);\r\n    cfg.type = cfg.type || 'text';\r\n    const cfgType = { 'string': 'text', 'currency': 'number', 'timestamp': 'datetime-local' }[cfg.type]\r\n    const dataType = cell instanceof Date ? 'date' : typeof cell;\r\n    return cell ? dataType : cfgType || cfg.type;\r\n  }\r\n\r\n  #renderFilters() {\r\n    const me = this;\r\n    return me.#hasFilters ? html`<tr>${me.columns.map((entry, index) => me.#renderFilter(entry, index))}</tr>` : '';\r\n  }\r\n\r\n  #renderFilter(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (!cfg?.filter) return html`<th></th>`;\r\n\r\n    let mask = undefined;\r\n    const hasSub = cfg.childElementCount > 0;\r\n    const isDate = cfg.columnType === 'date';\r\n    if (isDate) mask = cfg.format || GSUtil.getDateFormat(cfg.language || GSUtil.language);\r\n    const css = `${GSUtil.normalize(me.cssFilter)} ${GSUtil.normalize(cell.cssFilter)}`; \r\n    const color = `text-bg-${GSUtil.normalize(cell.color || me.colorFilter)}`; \r\n    \r\n\r\n    if ((hasSub || cfg.list) && cfg.fixed) {\r\n      return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n          <select is=\"gs-ext-select\" .index=${index}\r\n              class=\"form-select ${css} ${color}\" \r\n              name=\"${cell}\"\r\n              storage=\"${ifDefined(cfg.list ? me.storage : null)}\"\r\n              key=\"${ifDefined(cfg.list ? cfg.name : null)}\"> \r\n              ${me.#renderOption(cfg)}\r\n              </select>\r\n          </th>`;\r\n    }\r\n\r\n    let listid = '';\r\n    let list = undefined;\r\n    if (hasSub || cfg.list) {\r\n      listid = `${me.id}-list-${index}`;\r\n      list = html`<datalist id=\"${listid}\" is=\"gs-ext-datalist\"\r\n              storage=\"${ifDefined(cfg.list ? me.storage : null)}\"\r\n              key=\"${ifDefined(cfg.list ? cfg.name : null)}\"> \r\n              ${me.#renderOption(cfg)}</datalist>`;\r\n    } \r\n\r\n    return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n    <input is=\"gs-ext-input\" .index=${index}\r\n      class=\"form-control ${css} ${color}\" \r\n      mask=\"${ifDefined(mask)}\"\r\n      list=\"${ifDefined(listid)}\"\r\n      name=\"${cell}\" \r\n      placeholder=\"${ifDefined(cfg.title)}\" \r\n      type=\"${cfg.filterType || cfg.columnType}\"\r\n      data-slots=\"${ifDefined(isDate ? 'DMY' : undefined)}\"/>\r\n    ${list}\r\n    </th>`;\r\n  }\r\n\r\n  #renderOption(cfg) {\r\n    if (cfg.childElementCount == 0) return '';\r\n    const sub = GSItem.proxify(cfg);\r\n    return sub.map(el => html`<option value=\"${el.value}\">${cfg.fixed ? el.map : ''}</option>`);\r\n  }\r\n\r\n  #renderColumn(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    const css = `${GSUtil.normalize(me.cssHeader)} ${GSUtil.normalize(cell.cssHeader)}`; \r\n    return html`\r\n      <th .index=${index} class=\"${css}\" \r\n        colspan=\"${ifDefined(cfg?.colspan)}\"\r\n        width=\"${ifDefined(cfg?.width)}\">\r\n        <div class=\"d-flex justify-content-between\"> \r\n          <span>${cfg?.title || cell}</span>\r\n          ${me.#renderIcon(index)}\r\n        </div>\r\n      </th>\r\n    `\r\n  }\r\n\r\n  #renderIcon(index) {\r\n    const me = this;\r\n    if (!me.sortable) return '';\r\n    const icons = GSTableElement.#icons;\r\n    const sortType = me.sort[index];\r\n    const order = me.multisort ? me.#sortOrder.indexOf(index) + 1 : '';\r\n    return html`<gs-icon name=\"${icons[sortType + 1]}\" super=\"${order > 0 ? order : ''}\" color=\"${ifDefined(me.colorSort)}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderRecord(entry, index) {\r\n    const me = this;\r\n    const controller = me.dataController || DataSelector;\r\n    const selected = controller?.isSelected(entry);\r\n    const color = me.colorSelect && selected ? `table-${me.colorSelect}` : '';\r\n    const cells = me.#remapRecord(entry);\r\n    return html`\r\n        <tr .index=${index} class=\"${color}\" tabindex=\"0\" ?selected=${selected}>\r\n          ${cells.map((cell, i) => me.#renderCell(cell, i))}\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  #renderCell(cell, index) {\r\n    const cfg = this.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    return html`<td class=\"text-${cfg?.align}\" colspan=\"${ifDefined(cfg?.colspan)}\" ><span>${cell}</span></td>`;\r\n  }\r\n\r\n  #remapRecord(record) {\r\n    const me = this;\r\n    if (!Array.isArray(record)) record = me.columns.map(v => record[v]);\r\n    return record.map((val, i) => me.#config[i] ? GSData.format(me.#config[i], val) : val);\r\n  }\r\n\r\n  #renderEmpty() {\r\n    const me = this;\r\n    return me.data.length > 0 ?  '' :\r\n    html`<tr data-ignore=\"true\"><td colspan=\"${me.columns.length}\" class=\"text-center fw-bold text-muted\">${me.translate('No Data')}</td></tr>`;\r\n  }\r\n\r\n  #elementTofilter(el) {\r\n    if (!el.value) return undefined;\r\n    const isDate = el.type === 'date';\r\n    const val = isDate ? el.valueAsDate : el.value;\r\n    const cfg = this.#config[el.index];\r\n    return { name: el.name, value: val, language : cfg?.language };\r\n  }\r\n\r\n  #onFilter(e) {\r\n    \r\n    const me = this;\r\n    \r\n    const filter = me.#input\r\n      .map(el => me.#elementTofilter(el))\r\n      .filter(el => el?.value);\r\n\r\n    if (me.storage) {\r\n      me.dataController?.filter(filter);\r\n    } else {\r\n      // TODO keep full data, use sorted\r\n      // GSData.filter(me.data, filter);\r\n    }\r\n  }  \r\n\r\n  #onSort(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.sortable) return;\r\n    \r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const column = e.target.closest('th');\r\n    if (!icon || !column) return;\r\n\r\n    const idx = column.index !== undefined ? column.index : GSDOM.getElementIndex(column);\r\n    const current = me.sort[idx];\r\n    const sortType = current === 1 ? -1 : current + 1;\r\n\r\n    if (me.multisort) {\r\n      if (sortType == 0) {\r\n        me.#sortOrder = me.#sortOrder.filter(v => v != idx);\r\n      } else if (!me.#sortOrder.includes(idx)) {\r\n        me.#sortOrder.push(idx);\r\n      }\r\n    } else {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [idx];\r\n    }\r\n\r\n    me.sort[idx] = sortType;\r\n\r\n    const sort = me.#prepareSorter(me.sort, me.#sortOrder);\r\n\r\n    if (me.storage) {\r\n      me.dataController?.sort(sort);\r\n    } else {\r\n      me.data = GSData.sortData(me.data, sort);\r\n    }\r\n\r\n    me.emit('sort');\r\n  }\r\n\r\n  #prepareSorter(sort, sortOrder) {\r\n    \r\n    const me = this;\r\n\r\n    if (sort.filter(v => v).length === 0) {\r\n      sort = Array(me.columns.length).fill(0);\r\n      sort[me.key] = 1;\r\n    }\r\n\r\n    // if data record is object (not simple array)\r\n    const isComplex = me.data[0] && !Array.isArray(me.data[0]);\r\n\r\n    // sort list \r\n    const list = sort.map((v, i) => v ? { name: isComplex ? me.columns[i] : undefined, col: i, ord: v, idx: sortOrder.indexOf(i) } : null).filter(v => v);\r\n\r\n    // order sort list by idx\r\n    sort = GSData.sortData(list, [{ name: 'idx', ord: 1 }]);\r\n\r\n    return sort;\r\n  }\r\n\r\n  #onSelect(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.selectable) return;\r\n    \r\n    const tr = e.target.tagName === 'TR' ? e.target : e.target.closest('tr');\r\n    if (!tr) return;\r\n    \r\n    // if context menu is attached and right click made\r\n    if (e.button === 2 && !me.query('gs-context', false, true)) return;\r\n    \r\n    const controller = me.dataController || DataSelector;\r\n    if (!controller) return;\r\n\r\n    const record = me.data[tr.index];\r\n    const isSelected = controller.isSelected(record);\r\n    if (me.multiselect) {\r\n      if (isSelected) {\r\n        controller.removeSelected(record);\r\n      } else {\r\n        controller.addSelected(record);\r\n      }\r\n    } else if (me.toggle) {\r\n      controller.clearSelected(me.data);\r\n      if (!isSelected) {\r\n        controller.addSelected(record);\r\n      }\r\n    } else {\r\n      controller.clearSelected(me.data);\r\n      controller.addSelected(record);\r\n    }\r\n    me.requestUpdate();\r\n    me.emit('select');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    if (!e.target.matches('tbody tr')) return;\r\n    let el = null;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        el = e.target.previousElementSibling;\r\n        break;\r\n      case 'ArrowDown':\r\n        el = e.target.nextElementSibling;\r\n        break;\r\n    }\r\n\r\n    if (el) {\r\n      el.focus();\r\n      this.emit('focus', el);\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') this.#onSelect(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-table');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport { createRef, ref, classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { stringArrayConverter, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSTagElement}\r\n */\r\nexport default class GSTagElement extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static styles = css`\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n\r\n    static properties = {\r\n        placeholder: {},\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        name: {},\r\n        data: { type: Array },\r\n        values: { type: Array, reflect: true, converter: stringArrayConverter },\r\n        appendable: { type: Boolean },\r\n        color: { ...color },\r\n        closeColor: { ...color, attribute: 'close-color' },\r\n        cssClose: { attribute: 'css-close' },\r\n        cssTag: { attribute: 'css-tag' },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {}\r\n    }\r\n\r\n    #dataListRef = createRef();\r\n    #inputRef = createRef();\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = '';\r\n        this.data = this.#items;\r\n        this.closeColor = 'light';\r\n        this.color = 'primary';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const tags = me.#renderTags();\r\n        return html`\r\n        <div  dir=\"${ifDefined(me.direction)}\" \r\n            class=\"${classMap(me.renderClass())}\"\r\n            @click=\"${me.#onClick.bind(me)}\">\r\n            ${tags}\r\n            <input type=\"text\" \r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            ${ref(me.#inputRef)}\r\n            name=\"${me.name}\" \r\n            list=\"${me.name}_list\"\r\n            class=\"form-control d-flex w-auto flex-grow-1\" \r\n            placeholder=\"${me.#info}\">\r\n            <datalist ${ref(me.#dataListRef)} id=\"${me.name}_list\">${me.#renderList()}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"d-flex\": true,\r\n            \"flex-wrap\": true,\r\n            \"align-items-center\": true,\r\n            \"gap-1 \": true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    get #info() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return me.placeholder ? me.placeholder : alt;\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTagElement.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.data.length >= me.max;\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax || (!optEl && me.appendable == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (!me.values.includes(fld.value)) {\r\n            me.values.push(fld.value);\r\n            fld.value = '';\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const value = tagEl.dataset.value;\r\n        me.values = me.values.filter(v => v != value);\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v));\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        const size = me.size > 0 ? `fs-${me.size}` : '';\r\n        return html`<div class=\"${classMap(me.#tagClass)}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"${classMap(me.#btnClass)}\"></button></div>`;\r\n    }\r\n\r\n    get #tagClass() {\r\n        const me = this;\r\n        const opt = {\r\n            badge: true,\r\n            tag: true,\r\n            [`fs-${me.size}`]: me.size > 0,\r\n            [`text-bg-${me.color}`]: me.color ? true : false\r\n        }\r\n        return me.mapCSS(me.cssTag, opt);\r\n    }\r\n\r\n    get #btnClass() {\r\n        const me = this;\r\n        const opt = {\r\n            'btn-close': true,\r\n            'ms-1': true,\r\n            [`text-bg-${me.closeColor}`]: me.closeColor ? true : false\r\n        }\r\n        return me.mapCSS(me.cssClose, opt);\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        return me.data.map(v => html`<option value=\"${v}\">`);\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el));\r\n    }\r\n\r\n    get #items() {\r\n        return this.#proxify(this).map(el => el.name).filter(v => v ? true : false);\r\n    }\r\n\r\n    get #input() {\r\n        return this.#inputRef.value;\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.#dataListRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-tag');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSTextElement extends GSElement {\r\n\r\n  #text = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.#text = this.innerText;\r\n    this.innerText = \"\";\r\n  }\r\n\r\n  renderUI() {\r\n    return this.translate(this.#text);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-text');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSTooltipElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    title: {},\r\n    target: {},\r\n    opened: { type: Boolean },\r\n    local: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowStyle = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.placement = 'top';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowStyle);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      role=\"tooltip\"\r\n      data-popper-placement=\"${me.placement}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      <div ${ref(me.#arrowRef)} \r\n          class=\"tooltip-arrow ${me.#arrowStyle}\" \r\n          data-gs-class=\"${me.#arrowStyle}\">\r\n      </div>\r\n      <div class=\"tooltip-inner\">${me.translate(me.title)}</div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tooltip': true,\r\n      'bs-tooltip-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  #attachEvents() {\r\n    const me = this;\r\n    me.attachEvent(me.#ref, 'mouseenter', me.open.bind(me));\r\n    me.attachEvent(me.#ref, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const arrowEl = me.#arrow;\r\n    const panelEl = me.#panel;\r\n    if (!panelEl) return;\r\n    if (me.opened) {\r\n      GSPopper.popupFixed(me.placement, panelEl, me.#ref, arrowEl);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, { top: '-1000px', left: '-1000px' });\r\n    }\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return me.local ? me.#refLocal : me.#refGlobal;\r\n    }\r\n  }\r\n\r\n  get #refLocal() {\r\n    const root = GSDOM.root(this);\r\n    return GSDOM.query(root, this.target);\r\n  }\r\n  \r\n  get #refGlobal() {\r\n    return GSDOM.query(document.body, this.target);\r\n  }\r\n\r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-tooltip');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty } from '../properties/index.mjs';\r\n\r\nexport class GSTemplateElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { reflect: true, hasChanged: notEmpty }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    const me = this;\r\n    if (me.flat) {\r\n      me.renderOptions.renderBefore = me;\r\n      return me.parentElement;\r\n    }\r\n    return super.createRenderRoot();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${this.renderTemplate()}`;\r\n  }\r\n\r\n\ttemplateInjected() {\r\n\t\tthis.emit('template-injected', null, true, true);\r\n\t}\r\n\r\n  static {\r\n    this.define('gs-template');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle automatic field value copy and select\r\n */\r\nexport class CopySelectController {\r\n\r\n  #host;\r\n\r\n  #clickCallback;\r\n  #copyCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#clickCallback = me.onClick.bind(me);\r\n    me.#copyCallback = me.onCopy.bind(me);\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on?.('click', me.#clickCallback);\r\n    me.#host.on?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host.off?.('click', me.#clickCallback);\r\n    me.#host.off?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  onCopy(e) {\r\n    GSUtil.writeToClipboard(this.#host.value);\r\n  }\r\n\r\n  onClick(e) {\r\n      const me = this;\r\n      if (me.#host.autocopy) me.onCopy(e);\r\n      if (me.#host.autoselect) me.#host.select();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Handle field mask \r\n */\r\nexport class MaskController {\r\n\r\n  static #special = '.^$*+?()[]{}\\|';\r\n\r\n  static #maskType = {\r\n    x: /[0-9a-fA-F]/g,\r\n    n: /[0-9]/g,\r\n    y: /[0-9]/g,\r\n    m: /[0-9]/g,\r\n    d: /[0-9]/g,\r\n    h: /[0-9]/g,\r\n    s: /[0-9]/g,\r\n    '.': /[0-9]/g,\r\n    '#': /[a-zA-Z]/g,\r\n    '*': /[0-9a-zA-Z]/g,\r\n    '_': /./g\r\n  };\r\n\r\n  #back = false;\r\n  #slots;\r\n  #prev;\r\n  #first;\r\n  #accept;\r\n  #pattern;\r\n\r\n  #host;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.initRules();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  initRules() {\r\n    const me = this;\r\n    if (!me.pattern) return;\r\n    me.#slots = me.#buildSlots();\r\n    me.#prev = (j => Array.from(me.pattern, (c, i) => me.#slots.has(c) ? j = i + 1 : j))(0);\r\n    me.#first = [...me.pattern].findIndex(c => me.#slots.has(c));\r\n    me.#accept = me.#buildAccept();\r\n    me.#toPattern();\r\n  }\r\n\r\n  validate() {  \r\n    const me = this;  \r\n    const isMatch = me.isEmpty ? true :me.isMatch;\r\n    me.setCustomValidity(isMatch ? '' : 'Mask not matched!');\r\n    return isMatch;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n    \r\n  setSelectionRange(i, j) {\r\n    this.#host.setSelectionRange(i, j);\r\n  }\r\n\r\n  select() {\r\n    this.#host.select();\r\n  }\r\n\r\n  get isEmpty() {\r\n    return GSUtil.isStringEmpty(this.raw);\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get disabled() {\r\n    return this.#host.disabled;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }    \r\n\r\n  get value() {\r\n    const [i, j] = this.#range();\r\n    return this.raw.substring(0, j);\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get pattern() {\r\n    return this.#host.mask;\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get selectionStart() {\r\n    return this.#host.selectionStart;\r\n  }\r\n\r\n  get selectionEnd() {\r\n    return this.#host.selectionEnd;\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.#host.autoselect;\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n\r\n    let isMatch = true;\r\n    if (me.#pattern) {\r\n      me.#pattern.lastIndex = 0;\r\n      isMatch = me.#pattern.test(me.raw);\r\n    }\r\n\r\n    return isMatch;\r\n  }\r\n\r\n  onInput(e) {\r\n    this.#format();\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    me.#back = e.key === \"Backspace\";\r\n    const isTab = e.key === \"Tab\";\r\n    if (isTab) {\r\n      me.#format();\r\n      me.validate();\r\n    }\r\n  }\r\n\r\n  onFocus(e) {\r\n    const me = this;\r\n    me.#format();\r\n    if (me.autoselect) me.select();\r\n  }\r\n\r\n  onChange(e) {\r\n    const me = this;\r\n    me.#format();\r\n  }\r\n\r\n  onBlur(e) {\r\n    this.validate();\r\n  }\r\n\r\n  /**\r\n   * If data-slots not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildSlots() {\r\n    const me = this;\r\n    let slots = me.dataset.slots;\r\n    if (!slots) {\r\n      const maskType = MaskController.#maskType;\r\n      slots = [...new Set(me.pattern)]\r\n        .filter(v => maskType[v.toLowerCase()])\r\n        .join('');\r\n    }\r\n    return new Set(slots || \"_\");\r\n  }\r\n\r\n  /**\r\n   * If data-accept not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildAccept() {\r\n    const me = this;\r\n    let accept = me.dataset.accept;\r\n    if (!accept) {\r\n      const maskType = MaskController.#maskType;\r\n      accept = [...new Set(me.pattern)]\r\n        .map(v => maskType[v.toLowerCase()])\r\n        .filter(v => v);\r\n      if (accept.length > 0) {\r\n        const tmp = {};\r\n        accept.forEach(v => tmp[v.src] = v);\r\n        accept = Object.values(tmp);\r\n        return accept.length === 1 ? accept.pop() : accept;\r\n      }\r\n\r\n    }\r\n    return new RegExp(accept || \"\\\\d\", \"g\");\r\n  }\r\n\r\n  #range() {\r\n    const me = this;\r\n    const value = me.raw;\r\n    return [me.selectionStart, me.selectionEnd].map(i => {\r\n      i = me.#clean(value.slice(0, i)).findIndex(c => me.#slots.has(c));\r\n      return i < 0 ? me.#prev[me.#prev.length - 1] : me.#back ? me.#prev[i - 1] || me.#first : i;\r\n    });\r\n  }\r\n\r\n  #format() {\r\n    const me = this;\r\n    const [i, j] = me.#range();\r\n    const val = me.#clean(me.#host.raw);\r\n    me.value = val.join``;\r\n    me.setSelectionRange(i, j);\r\n    me.#back = false;\r\n  }\r\n\r\n  #clean(input) {\r\n    const me = this;\r\n    input = input.match(me.#accept) || [];\r\n    return Array.from(me.pattern, (c, i) => input[i] === c || me.#slots.has(c) ? input.shift() || c : c);\r\n  }\r\n\r\n  #toPattern() {\r\n\r\n    const me = this;\r\n\r\n    if (me.pattern.length === 0) return;\r\n\r\n    const chars = me.pattern.split('');\r\n    const masks = ['^'];\r\n\r\n    const maskType = MaskController.#maskType;\r\n    const special = MaskController.#special;\r\n\r\n    let cnt = 0;\r\n    chars.forEach((v, i) => {\r\n      const m = me.#slots.has(v) ? maskType[v.toLowerCase()] : null;\r\n      if (!m) {\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        cnt = 0;\r\n        if (special.includes(v)) masks.push('\\\\');\r\n        return masks.push(v);\r\n      }\r\n\r\n      chars[i] = new RegExp(m, 'g');\r\n\r\n      if (masks.length === 0) return masks.push(m.source);\r\n\r\n      if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n      if (cnt > 0) masks.push(`{${++cnt}}`);\r\n      cnt = 0;\r\n      masks.push(m.source);\r\n    });\r\n\r\n    if (cnt > 0) masks.push(`{${++cnt}}`);\r\n    masks.push('$');\r\n\r\n    me.#pattern = new RegExp(masks.join(''), 'g');\r\n    // me.#max = me.pattern.length;\r\n    // me.#masks = chars;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle multiple patterns\r\n */\r\nexport class MultipatternController {\r\n\r\n  #host;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n  \r\n  validate() {    \r\n    const me = this;  \r\n    const isMatch = me.isEmpty ? true :me.isMatch;\r\n    me.setCustomValidity(isMatch ? '' : 'Pattern not matched!');\r\n    return isMatch;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  get isEmpty() {\r\n    return GSUtil.isStringEmpty(this.raw);\r\n  }\r\n    \r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get disabled() {\r\n    return this.#host.disabled;\r\n  }    \r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get patterns() {\r\n    const obj = this.#host.multipattern;\r\n    if (obj instanceof RegExp) return [obj];\r\n    if (Array.isArray(obj)) return obj.filter(o => o instanceof RegExp);\r\n    throw new Error('Invalid multipattern value. Expected RegExp object or array.');\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n    let isMatch = true;\r\n    for (const r of me.patterns) {\r\n      isMatch = r.test(me.value);\r\n      if (isMatch) break;\r\n    }\r\n   \r\n    return isMatch;\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const isTab = e.key === 'Tab';\r\n    if (isTab) {\r\n      this.validate();\r\n    } \r\n  }\r\n\r\n  onBlur(e) {\r\n    this.validate();\r\n  }\r\n\r\n  onChange(e) {\r\n    this.validate();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type number to support max length entry\r\n */\r\nexport class NumberController {\r\n\r\n  #host;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  get maxLength() {\r\n    return GSUtil.asNum(this.#host.maxLength, 0);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n    \r\n  onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'number') {\r\n      if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n          me.value = me.value.substring(0, me.maxLength);\r\n      }\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle for input tpye password to support keyboard shortcut for password reveal.\r\n */\r\nexport class PasswordController {\r\n\r\n  #host;\r\n\r\n  #revealing = false;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  get reveal() {\r\n    return this.#host.reveal;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  set type(val) {\r\n    if (this.#host) this.#host.type = val;\r\n  }\r\n\r\n  #isReveal(e) {\r\n    return this.reveal && e.key === 'Shift' && e.altKey && e.ctrlKey && e.shiftKey && this.type === 'password';\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    if (e.key === 'Shift' && me.#revealing) {\r\n      me.type = 'password';\r\n    }\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    if (me.#isReveal(e)) {\r\n      me.#revealing = true;\r\n      me.type = 'text';\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCSSMap } from \"../../../base/GSCSSMap.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type text to support text value changes based on CSS\r\n */\r\nexport class TextController {\r\n\r\n  #host;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  onInput(e) {\r\n    const input = e.target;\r\n    const start = input.selectionStart;\r\n    const end = input.selectionEnd;\r\n    input.value = this.#transform();\r\n    input.setSelectionRange(start, end);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.value = this.#transform();\r\n  }\r\n\r\n  onBlur(e) {\r\n    this.value = this.#transform();\r\n  }\r\n\r\n  #transform() {\r\n    const me = this;\r\n    if (me.type === 'text') {\r\n      const map = GSCSSMap.styleValue(this.#host, 'text-transform');\r\n      if (map) return GSUtil.textTransform(map.value, me.raw);\r\n    }\r\n    return me.value;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Handle data filtering for options atribute (combo and data lists)\r\n * Changes in one field list, updates available selections in another field selections.\r\n * \r\n * Options element data-* attributes matching other elements changes \r\n * \"disabled\" attribute for fields, and visibility for non field elements.\r\n * \r\n * NOTE: This applies only for \"gs-form\" or \"form\" child elements.\r\n */\r\nexport class InteractiveController {\r\n\r\n  #host;\r\n\r\n  #monitorCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#monitorCallback = me.#onMonitor.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (list) {\r\n      me.#host.attachEvent(me.filter, 'change', me.#monitorCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.removeEvent(me.filter, 'change', me.#monitorCallback);\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n      this.onChange();\r\n    }\r\n  }\r\n\r\n  get component() {\r\n    return this.#host\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get list() {\r\n    return this.#host;\r\n  }\r\n\r\n  get filter() {\r\n    const me = this;\r\n    const filter = GSAttr.get(me.#host, 'data-filter');\r\n    return GSDOM.getByID(me.owner, filter);\r\n  }\r\n\r\n  get owner() {\r\n    //return this.#host.owner;\r\n    return this.#host.form || GSDOM.closest(this.#host, 'form');\r\n  }\r\n\r\n  get formElements() {\r\n    return GSDOM.formElements(this.owner, true);\r\n  }\r\n\r\n  get strict() {\r\n    return GSAttr.get(this.#host, 'strict', '');\r\n  }\r\n\r\n  onBlur(e) {\r\n    if (!this.#isInList()) GSEvents.send(this.#host, 'strict', { ok: false, source: e });\r\n  }\r\n\r\n  onChange(e) {\r\n\r\n    const me = this;\r\n    const own = me.owner;\r\n    let clean = false;\r\n    let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n    if (!opt) {\r\n        opt = me.list?.querySelector('option');\r\n        clean = true;\r\n    }\r\n\r\n    const obj = opt?.dataset || {};\r\n    Object.entries(obj).forEach(p => {\r\n        const val = clean ? '' : p[1];\r\n        const key = p[0];\r\n        if (key === 'id' || key === 'group') {\r\n          GSAttr.set(me.#host, `data-${key}`, p[1]);\r\n          return;\r\n        } \r\n\r\n        const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n        const els = Array.from(GSDOM.queryAll(own, filter));\r\n        els.filter(el => el.tagName !== 'OPTION')\r\n            .filter(el => el.tagName !== 'GS-ITEM')\r\n            .filter(el => el !== me.#host)\r\n            .filter(el => el !== me.filter) \r\n            .filter(v => GSDOM.closest(v, 'gs-form-group') ? false: true ) \r\n            //.filter(el => GSAttr.get(el, 'list').length === 0)\r\n            .forEach(el => me.#togleEl(el, key, val))\r\n    });\r\n  }\r\n\r\n  #onMonitor(e) {\r\n    const me = this;\r\n    const list = me.list;\r\n    me.value = '';\r\n    me.#host.disabled = false;\r\n    const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n    const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n    GSDOM.queryAll(list, 'option').forEach(el => me.#togleOption(el, true));\r\n    GSDOM.queryAll(list, filter).forEach(el => me.#togleOption(el, false));\r\n\r\n  }\r\n\r\n  #togleOption(el, value) {\r\n      GSAttr.toggle(el, 'disabled', value);\r\n      GSDOM.toggleClass(el, 'd-none', value);\r\n  }\r\n\r\n  #togleEl(el, key = '', value = '') {\r\n\r\n    const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n    const isMatch = value.length > 0 && data.includes(value);\r\n    const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el) || el.tagName === \"GS-FORM-GROUP\";\r\n\r\n    if (frmel) {\r\n      GSAttr.toggle(el, 'disabled', !isMatch);\r\n    } else {\r\n      isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n    }\r\n\r\n    //this.formElements.forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    GSAttr.set(el, 'data-ignore', isMatch ? null : true);\r\n    GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n  }\r\n\r\n  #isInList() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (!list) return true;\r\n    if (!me.strict) return true;\r\n    if (!list.querySelector('option')) return true;\r\n    const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n    return opt != null;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { InteractiveController } from \"./InteractiveController.mjs\";\r\n\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update available selections in another field selections.\r\n */\r\nexport class ComboController extends InteractiveController {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n  }\r\n\r\n  get list() {\r\n    return this.component;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { InteractiveController } from \"./InteractiveController.mjs\";\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update available selections in another field selections.\r\n */\r\nexport class ListController extends InteractiveController {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n  }\r\n\r\n  get list() {\r\n    const me = this;\r\n    if (me.component.list) return me.component.list;\r\n    const list = GSAttr.get(me.component, 'list');\r\n    return GSDOM.getByID(me.owner, list);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSBeep } from \"../../../base/GSBeep.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Handle for input/textarea to support validity checkups\r\n */\r\nexport class ValidityController {\r\n\r\n  #host = undefined;\r\n  #processing = false;  \r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#processing = false;\r\n    me.#host = host;\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host = undefined;\r\n    me.#processing = false;\r\n  }\r\n  \r\n  get autoreport() {\r\n    return this.#host.autoreport;\r\n  }\r\n\r\n  get autovalidate() {\r\n    return this.#host.autovalidate;\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get disabled() {\r\n    return this.#host.disabled;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }  \r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  get beep() {\r\n    return this.#host.beep;\r\n  }\r\n\r\n  get block() {\r\n    return this.#host.block;\r\n  }\r\n\r\n  get timeout() {\r\n    return this.#host.timeout;\r\n  }\r\n\r\n  get isVisible() {\r\n    return GSDOM.isVisible(this.#host);\r\n  }\r\n\r\n  validate() {\r\n    const me = this;    \r\n    const sts = me.isValid || me.disabled;\r\n    me.#togglUI(sts);\r\n    return sts;\r\n  }  \r\n    \r\n  onFocus(e) {\r\n    this.validate();\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    const isTab = e.key === 'Tab';\r\n    if (isTab && !me.validate()) {\r\n        me.#onBlock(e);\r\n        me.#report();\r\n    }\r\n  }\r\n\r\n  onInvalid(e) {\r\n    this.validate();\r\n  }\r\n\r\n  onChange(e) {\r\n    this.#onAutoValidity(e);    \r\n  }\r\n\r\n  onBlur(e) {\r\n    const me = this;\r\n    me.#onBlock(e);\r\n    me.#onAutoValidity(e);\r\n  }\r\n\r\n  #onBlock(e) {    \r\n    const me = this;\r\n    if (me.isValid) return;\r\n    if (me.isVisible && me.block) {\r\n      GSEvents.prevent(e, false, true, false);\r\n      me.#focus();\r\n    }        \r\n  }\r\n\r\n  #onAutoValidity(e) {\r\n    return this.autoreport ? this.#reportValidity() : this.autovalidate ? this.#checkValidity() : this.validate();\r\n  }  \r\n\r\n  #focus() {\r\n    return this.#host.focus();\r\n  }\r\n\r\n  #checkValidity() {\r\n    const me = this;  \r\n    me.validate();\r\n    return me.#host.checkValidity();\r\n  }\r\n\r\n  #reportValidity() {\r\n    const me = this;  \r\n    me.validate();\r\n    return me.#host.reportValidity();\r\n  }  \r\n\r\n  async #report() {    \r\n    const me = this;\r\n    if (me.#processing || me.isValid || !me.isVisible) return;\r\n    me.#processing = true;\r\n    if (me.beep) {\r\n      try {\r\n        await me.#beep();\r\n        await GSUtil.timeout(me.timeout);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    me.#processing = false;\r\n  }\r\n\r\n  #togglUI(isValid) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      GSDOM.toggleClass(me.#host, 'is-invalid', !isValid);\r\n    });\r\n  }\r\n\r\n  #beep() {\r\n    return GSBeep.beep(100, 1200, 150, 'triangle');\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSElement } from \"../../GSElement.mjs\";\r\n\r\n/*\r\n* Shared event handling extensions\r\n*/\r\nconst EventsMixin = {\r\n\r\n  [Symbol.for('gs-owner')]() {\r\n    const own = GSDOM.root(this);\r\n    return GSDOM.unwrap(own);\r\n  },\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  [Symbol.for('gs-parent')]() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  },\r\n\r\n  ////////////////////////////////////////////////////////////////////////\r\n  // cross shadow query\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  },\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  },\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  },\r\n\r\n\r\n  ////////////////////////////////////////////////////////////////////////\r\n  // event handling helpers\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  },\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  },\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  },\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  },\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  },\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  },\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e, defaults = true, propagate = true, immediate = true) {\r\n    GSEvents.prevent(e, defaults, propagate, immediate);\r\n  },\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  },\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  },\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  },\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////\r\n\r\n}\r\n\r\n/**\r\n * Function to apply mixin into defiend class\r\n * @param {*} clazz \r\n * @returns \r\n */\r\nexport const mixin = (clazz) => {\r\n  return Object.assign(clazz.prototype || clazz, EventsMixin);\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class FormController {\r\n\r\n  #host = undefined;\r\n  #processing = false;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#processing = false;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = undefined;\r\n    me.#processing = false;\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Form reset event\r\n   * @param {*} e \r\n   */\r\n  onReset(Event) {\r\n    const me = this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Form submit event\r\n   * @param {*} e \r\n   */\r\n  onSubmit(Event) {\r\n    const me = this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Event triggered on new FormData(form)\r\n   * @param {Event} e \r\n   */\r\n  onFormData(e) {\r\n    const me = this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Field event propagated to the form\r\n   * @param {Event} e \r\n   */\r\n  onInvalid(e) {\r\n    const me = this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Field event propagated to the form\r\n   * @param {Event} e \r\n   */  \r\n  onChange(e) {\r\n    const me = this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Field event propagated to the form\r\n   * @param {Event} e \r\n   */  \r\n  onBlur(e) {\r\n\r\n  }  \r\n\r\n  get form() {\r\n    return this.#host.form;\r\n  }\r\n\r\n  get inputs() {\r\n    return this.form?.inputs;\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\nimport { ValidityController } from './controllers/ValidityController.mjs';\r\nimport { CopySelectController } from './controllers/CopySelectController.mjs';\r\nimport { PasswordController } from './controllers/PasswordController.mjs';\r\nimport { NumberController } from './controllers/NumberController.mjs';\r\nimport { TextController } from './controllers/TextController.mjs';\r\nimport { ComboController } from './controllers/ComboController.mjs';\r\nimport { FormController } from './controllers/FormController.mjs';\r\nimport { DataController } from \"../../controllers/DataController.mjs\";\r\n\r\n/**\r\n * Helper class wizh shared code for form elements to process controllers.\r\n */\r\nexport class ControllerHandler {\r\n\r\n\r\n  #host = undefined;\r\n  #handlers = undefined;\r\n  #controllers = undefined;\r\n\r\n  #copyselect = undefined;\r\n  #typeController = undefined;\r\n  #validityController = undefined;\r\n  #comboController = undefined;\r\n\r\n  #formController = undefined;\r\n  #dataController = undefined;\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    const host = me.#host;\r\n\r\n    if (me.isForm) {\r\n      host.on('reset', me.#onReset.bind(me));\r\n      host.on('submit', me.#onSubmit.bind(me));\r\n      host.on('formdata', me.#onFormData.bind(me));\r\n    } else {\r\n      host.on('keydown', me.#onKeyDown.bind(me));\r\n      host.on('keyup', me.#onKeyUp.bind(me));\r\n      host.on('input', me.#onInput.bind(me));\r\n      host.on('focus', me.#onFocus.bind(me));\r\n    }\r\n\r\n    // field events catched at the form level also \r\n    host.on('change', me.#onChange.bind(me));\r\n    host.on('blur', me.#onBlur.bind(me));\r\n    host.on('invalid', me.#onInvalid.bind(me));\r\n\r\n    me.#invoke((c) => c.hostConnected?.());\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.detachListeners(me.#host);\r\n    me.#invoke((c) => c.hostDisconnected?.());\r\n\r\n    me.#controllers?.clear();\r\n\r\n    me.#host = undefined;\r\n    me.#handlers = undefined;\r\n    me.#controllers = undefined;\r\n    me.#comboController = undefined;\r\n\r\n    me.#formController = undefined;\r\n    me.#dataController = undefined;\r\n\r\n    me.#copyselect = undefined;\r\n    me.#typeController = undefined;\r\n    me.#validityController = undefined;\r\n  }\r\n\r\n  hostUpdated(name) {\r\n    const me = this;\r\n    if (!me.#host.hostUpdated) {\r\n      me.#initControllers();\r\n      me.#host.checkValidity?.();\r\n    }\r\n    this.#invoke((c) => c.hostUpdated?.(name));\r\n  }\r\n\r\n  validate() {\r\n    this.#invoke((c) => c.validate?.());\r\n  }\r\n\r\n  addController(controller) {\r\n    if (!controller) return;\r\n    const me = this;\r\n    me.#controllers ??= new Set();\r\n    me.#controllers.add(controller);\r\n    me.#prepare();\r\n    if (me.#host.isConnected) {\r\n      controller.hostConnected?.();\r\n    }\r\n  }\r\n\r\n  removeController(controller) {\r\n    const me = this;\r\n    me.#controllers?.delete(controller);\r\n    me.#prepare();\r\n  }\r\n\r\n  #prepare() {\r\n    const me = this;\r\n    me.#handlers = me.#controllers ? Array.from(me.#controllers).reverse() : [];\r\n  }\r\n\r\n  #invoke(callback) {\r\n    if (typeof callback === 'function') {\r\n      this.#handlers?.forEach(callback);\r\n    }\r\n  }\r\n\r\n  validate(e) {\r\n    return this.#handlers ? this.#handlers.every(c => c.validate ? c.validate(e) : true) : true;\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    this.#invoke(c => c.onInvalid?.(e));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    this.#invoke(c => c.onKeyDown?.(e));\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    this.#invoke(c => c.onKeyUp?.(e));\r\n  }\r\n\r\n  #onInput(e) {\r\n    this.#invoke(c => c.onInput?.(e));\r\n  }\r\n\r\n  #onFocus(e) {\r\n    this.#invoke(c => c.onFocus?.(e));\r\n  }\r\n\r\n  #onChange(e) {\r\n    this.#invoke(c => c.onChange?.(e));\r\n  }\r\n\r\n  #onBlur(e) {\r\n    this.#invoke(c => c.onBlur?.(e));\r\n  }\r\n\r\n  #onReset(e) {\r\n    this.#invoke(c => c.onReset?.(e));\r\n  }\r\n  \r\n  #onSubmit(e) {\r\n    this.#invoke(c => c.onSubmit?.(e));\r\n  }\r\n  \r\n  #onFormData(e) {\r\n    this.#invoke(c => c.onFormData?.(e));\r\n  }\r\n\r\n  #initControllers() {\r\n    const me = this;\r\n    const host = me.#host;\r\n\r\n    if (me.isForm) {\r\n      me.#formController ??= new FormController(host);\r\n    } else {\r\n      me.#validityController ??= new ValidityController(host);\r\n      if (me.isInput) me.#initIinputControllers();\r\n      if (me.isTextArea) me.#initTextAreaControllers();\r\n      if (me.isSelect) me.#comboController ??= new ComboController(host);\r\n    }\r\n\r\n    if (host.storage) {\r\n      if (me.isSelect || me.isDataList ) {\r\n        me.#dataController ??= new DataController(host);\r\n      }\r\n    }\r\n  }\r\n\r\n  #initTextAreaControllers() {\r\n      const me = this;\r\n      const host = me.#host;\r\n      me.#typeController ??= new TextController(host);\r\n      me.#copyselect ??= new CopySelectController(host);\r\n  }\r\n\r\n  #initIinputControllers() {\r\n    const me = this;\r\n    const host = me.#host;\r\n    let ok = false;\r\n    switch (host.type) {\r\n      case 'text':\r\n        ok = true;\r\n        me.#typeController ??= new TextController(host);\r\n        break;\r\n      case 'password':\r\n        ok = true;\r\n        me.#typeController ??= new PasswordController(host);\r\n        break;\r\n      case 'number':\r\n        ok = true;\r\n        me.#typeController ??= new NumberController(host);\r\n        break;\r\n    }\r\n    if (ok) {\r\n      me.#copyselect ??= new CopySelectController(host);\r\n    }\r\n  }\r\n\r\n  get tagName() {\r\n    return this.#host?.tagName;\r\n  }\r\n\r\n  get isForm() {\r\n    return (this.tagName === 'FORM');\r\n  }\r\n\r\n  get isTextArea() {\r\n    return (this.tagName === 'TEXTAREA');\r\n  }\r\n\r\n  get isInput() {\r\n    return (this.tagName === 'INPUT');\r\n  }\r\n\r\n  get isSelect() {\r\n    return (this.tagName === 'SELECT');\r\n  }\r\n\r\n  get isDataList() {\r\n    return (this.tagName === 'DATALIST');\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { ButtonTypes } from '../../properties/index.mjs';\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { mixin } from \"./EventsMixin.mjs\";\r\nimport { GSAttr } from '../../base/GSAttr.mjs';\r\nimport { GSFunction } from '../../base/GSFunction.mjs';\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <textarea is=\"gs-ext-textarea\"></textarea>\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends { HTMLButtonElement }\r\n */\r\nexport class GSExtButtonElement extends HTMLButtonElement {\r\n\r\n    static {\r\n        mixin(GSExtButtonElement);\r\n        GSDOM.define('gs-ext-button', GSExtButtonElement, { extends: 'button' });\r\n        Object.seal(GSExtButtonElement);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['disabled'];\r\n    }\r\n\r\n    #hasUpdated = false;\r\n    #controllerHandler = undefined;\r\n    #formEl = undefined;\r\n\r\n    constructor() {\r\n        super();\r\n        //this.#controllerHandler = ???\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.connectedCallback();\r\n        me.#formEl = me.form;\r\n        me.#preupdate();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSEvents.detachListeners(me);\r\n        me.#controllerHandler?.disconnectedCallback();\r\n        me.#controllerHandler = undefined;\r\n        me.#formEl = undefined;\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        me.#preupdate(name);\r\n        me.willUpdate(name, oldValue, newValue);\r\n        me.#controllerHandler?.hostUpdated(name);\r\n    }\r\n\r\n    #preupdate(name) {\r\n        const me = this;\r\n        if (!me.#hasUpdated) {\r\n            me.firstUpdated(name);\r\n            me.#controllerHandler?.hostUpdated(name);\r\n            me.#hasUpdated = true;\r\n        }\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        const me = this;\r\n        const form = me.#formEl;\r\n        if (me.isSubmit && form) {\r\n            me.attachEvent(form, 'change', me.#onFormState.bind(me));\r\n            me.attachEvent(form, 'invalid', me.#onFormState.bind(me));\r\n            const callback = me.#onClick.bind(me);\r\n            const clickFn = me.rateLimit > 0 ? GSFunction.debounce(callback, me.rateLimit, true) : callback;\r\n            me.on('click', clickFn);\r\n        }\r\n    }\r\n\r\n    willUpdate(changed, oldValue, newValue) {\r\n        if (changed === 'disabled') {\r\n            this.emit('disabled', this.disabled, true, true, true);\r\n        }\r\n    }\r\n\r\n    addController(controller) {\r\n        this.#controllerHandler?.addController(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllerHandler?.removeController(controller);\r\n    }\r\n\r\n    get owner() {\r\n        return this[Symbol.for('gs-owner')]();\r\n    }\r\n\r\n    get parentComponent() {\r\n        return this[Symbol.for('gs-parent')]();\r\n    }\r\n\r\n    get hasUpdated() {\r\n        return this.#hasUpdated;\r\n    }\r\n\r\n    get form() {\r\n        const me = this;\r\n        return super.form || me.owner?.form || me.closest?.('form');\r\n    }\r\n\r\n    get isSubmit() {\r\n        return ButtonTypes.isSubmit(this.type);\r\n    }\r\n\r\n    get isReset() {\r\n        return ButtonTypes.isReset(this.type);\r\n    }\r\n\r\n    /**\r\n     * Limit button click rate ini milliseconds.\r\n     * If set to 0, no limit is applied.\r\n     */\r\n    get rateLimit() {\r\n        return GSAttr.getAsNum(this, 'rate-limit', 0);\r\n    }\r\n\r\n    /**\r\n     * If the button is part fo the form, check if form is valid\r\n     * ba iterating all field elements and checkin it's validity state.\r\n     * If not part of the form, always return true.\r\n     * We use basic functionality, to support native non-extended form also\r\n     */\r\n    get isValid() {\r\n        const elements = this.#formEl?.elements;\r\n        return elements ? Array.from(elements)\r\n            .filter(el => GSDOM.isFormElement(el))\r\n            .filter(el => el.validity?.valid === false)\r\n            .length === 0\r\n            : true;\r\n    }\r\n\r\n    /**\r\n     * If form is available, monitor elements change events\r\n     * and validate form for validity to update disabled state button[type=\"submit\"]\r\n     * \r\n     * @param {*} e \r\n     */\r\n    #onFormState(e) {\r\n        const me = this;\r\n        if (me.#formEl && me.isSubmit) {\r\n            me.disabled = me.isValid === false;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.#formEl && me.isSubmit) {\r\n            if (me.isValid) {\r\n                if (me.isSubmit) me.#formEl.requestSubmit();\r\n                if (me.isReset) me.#formEl.reset();\r\n            } else {\r\n                GSEvents.prevent(e);\r\n                me.disabled = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\nimport { MaskController } from './controllers/MaskController.mjs';\r\nimport { MultipatternController } from './controllers/MultipatternController.mjs';\r\nimport { ListController } from './controllers/ListController.mjs';\r\nimport { GSAttr } from '../../base/GSAttr.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { ControllerHandler } from './ControllerHandler.mjs';\r\nimport { mixin } from './EventsMixin.mjs';\r\n\r\n\r\n/**\r\n * Extended HTMLInputElement with controllers support\r\n * adding various features such as masked input support \r\n */\r\nexport class GSExtInputElement extends HTMLInputElement {\r\n\r\n  static {\r\n    mixin(GSExtInputElement);\r\n    GSDOM.define('gs-ext-input', GSExtInputElement, { extends: 'input' });\r\n    Object.seal(GSExtInputElement);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    // 'autocopy', 'autofocus', 'autoselect', 'autovalidate','autoreport', 'block', 'beep', 'timeout', \r\n    return ['multipattern', 'mask', 'required', 'disabled'];\r\n  }\r\n\r\n  #controllerHandler = undefined;\r\n  #maskController = undefined;\r\n  #patternController = undefined;\r\n  #listController = undefined;\r\n\r\n  #pattern = undefined;\r\n  #hasUpdated = false;\r\n\r\n  constructor() {\r\n    super();\r\n    this.#controllerHandler = new ControllerHandler(this);\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#controllerHandler?.connectedCallback();\r\n    me.#preupdate();\r\n    me.dataset.value = me.value;\r\n    me.on('change', e => me.dataset.value = me.value);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#controllerHandler?.disconnectedCallback();\r\n    me.#controllerHandler = undefined;\r\n\r\n    me.#maskController = undefined;\r\n    me.#patternController = undefined;\r\n    me.#listController = undefined;\r\n    me.#pattern = undefined;\r\n\r\n    GSEvents.detachListeners(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    const me = this;    \r\n    if (me.isCheckBox && name === 'required' && me.required) return me.required = false;\r\n    me.#preupdate(name);\r\n    me.willUpdate(name, oldValue, newValue);\r\n    me.#controllerHandler?.hostUpdated(name);\r\n  }\r\n\r\n  addController(controller) {\r\n    this.#controllerHandler?.addController(controller);\r\n  }\r\n\r\n  removeController(controller) {\r\n    this.#controllerHandler?.removeController(controller);\r\n  }\r\n\r\n  get owner() {\r\n    return this[Symbol.for('gs-owner')]();\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return this[Symbol.for('gs-parent')]();\r\n  }\r\n\r\n\r\n  get hasUpdated() {\r\n    return this.#hasUpdated;\r\n  }\r\n\r\n  get autocopy() {\r\n    return this.hasAttribute('autocopy');\r\n  }\r\n\r\n  get autofocus() {\r\n    return this.hasAttribute('autofocus');\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.hasAttribute('autoselect');\r\n  }\r\n\r\n  /**\r\n   * If set, autoamtically calls reportValidity\r\n   */\r\n  get autoreport() {\r\n    return this.hasAttribute('autoreport');\r\n  }\r\n\r\n  /**\r\n   * If set, autoamtically calls checkValidity\r\n   */\r\n  get autovalidate() {\r\n    return this.hasAttribute('autovalidate');\r\n  }\r\n\r\n  get beep() {\r\n    return this.hasAttribute('beep');\r\n  }\r\n\r\n  get block() {\r\n    return this.hasAttribute('block');\r\n  }\r\n\r\n  get mask() {\r\n    return GSAttr.get(this, 'mask');\r\n  }\r\n\r\n  get multipattern() {\r\n    return this.#pattern;\r\n    //return GSDOM.getValue(this, 'multipattern');\r\n  }\r\n\r\n  // enable password reveal\r\n  get reveal() {\r\n    return this.hasAttribute('reveal');\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 0);\r\n  }\r\n\r\n  set autocopy(value) {\r\n    GSAttr.toggle(this, 'autocopy', value);\r\n  }\r\n\r\n  set autofocus(value) {\r\n    GSAttr.toggle(this, 'autocopy', value);\r\n  }\r\n\r\n  set autoselect(value) {\r\n    GSAttr.toggle(this, 'autocopy', value);\r\n  }\r\n\r\n  set autoreport(value) {\r\n    GSAttr.toggle(this, 'autoreport', value);\r\n  }\r\n\r\n  set autovalidate(value) {\r\n    GSAttr.toggle(this, 'autovalidate', value);\r\n  }\r\n\r\n  set beep(value) {\r\n    GSAttr.toggle(this, 'beep', value);\r\n  }\r\n\r\n  set block(value) {\r\n    GSAttr.toggle(this, 'block', value);\r\n  }\r\n\r\n  set mask(value) {\r\n    GSAttr.set(this, 'mask', value);\r\n  }\r\n\r\n  set multipattern(value) {\r\n    let data = value;\r\n    // convert to array if not, and stringify if values are regex\r\n    if (GSUtil.isJsonType(value)) {\r\n      const tmp = (Array.isArray(value) ? value : [value]).map(v => v.source || v.toString?.() || v);\r\n      data = JSON.stringify(tmp);\r\n    }\r\n    GSAttr.set(this, 'multipattern', data);\r\n  }\r\n\r\n  /**\r\n   * Useds only on password type to reveal \r\n   * password with key shortcut ctrl-altt-shift\r\n   */\r\n  set reveal(value) {\r\n    if (this.type === 'password') GSAttr.toggle(this, 'reveal', value);\r\n  }\r\n\r\n  set timeout(value) {\r\n    GSAttr.setAsNum(this, 'timeout', value);\r\n  }\r\n\r\n  get required() {\r\n    return super.required;\r\n  }\r\n\r\n  set required(value) {\r\n    super.required = this.isCheckBox ? false : GSUtil.asBool(value);\r\n  }  \r\n\r\n  get raw() {\r\n    return super.value;\r\n  }\r\n\r\n  get value() {\r\n    return this.#maskController ? this.#maskController.value : super.value;\r\n  }\r\n\r\n  set value(val) {\r\n    super.value = this.mask === val ? '' : val;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  get isCheckBox() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get form() {\r\n    const me = this;\r\n    return super.form || me.owner?.form || me.closest?.('form');\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.setCustomValidity('');\r\n    GSDOM.reset(me);\r\n    return me.validate();\r\n  }\r\n\r\n  checkValidity() {\r\n    this.validate();\r\n    return super.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    this.validate();\r\n    return super.reportValidity();\r\n  }\r\n\r\n  validate(e) {\r\n    return this.#controllerHandler.validate(e);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n\r\n  firstUpdated(changed) {\r\n    const me = this;\r\n    if (me.autofocus) me.focus();\r\n    const data = me.formComponent?.data;\r\n    if (data) GSDOM.fromObject2Element(me, data);\r\n  }\r\n\r\n  willUpdate(changed, oldValue, newValue) {\r\n\r\n    const me = this;\r\n\r\n    if ('mask' === changed) {\r\n      me.#updateMask();\r\n    }\r\n\r\n    if ('multipattern' === changed) {\r\n      me.#updateMultipattern(newValue);\r\n    }\r\n\r\n    if ('list' === changed) {\r\n      me.#updateList();\r\n    }\r\n\r\n    if (changed === 'required' || changed === 'disabled') {\r\n      me.validate();\r\n    }\r\n  }\r\n\r\n  #preupdate(name) {\r\n    const me = this;\r\n    if (!me.#hasUpdated) {\r\n      me.#updateMask();\r\n      me.#updateMultipattern(me.pattern);\r\n      me.#updateList();\r\n      me.firstUpdated(name);\r\n      me.#controllerHandler?.hostUpdated(name);\r\n      me.#hasUpdated = true;\r\n      me.validate();\r\n    }\r\n  }\r\n\r\n  #updateMask() {\r\n    const me = this;\r\n    if (me.mask && me.type === 'text') {\r\n      me.placeholder = me.mask;\r\n      me.#maskController ??= new MaskController(me);\r\n    } else {\r\n      me.removeController(me.#maskController);\r\n      me.#maskController = null;\r\n    }\r\n  }\r\n\r\n  #updateMultipattern(newValue) {\r\n    const me = this;\r\n    if (GSUtil.isJsonString(newValue)) {\r\n      const tmp = GSUtil.toJson(newValue, []);\r\n      me.#pattern = (Array.isArray(tmp) ? tmp : []).map(v => new RegExp(v));\r\n    } else {\r\n      me.#pattern = undefined;\r\n    }\r\n\r\n    const isMulti = Array.isArray(me.#pattern) && me.#pattern.length > 0;\r\n    const isType = ['text', 'password'].includes(me.type);\r\n    if (isMulti && isType) {\r\n      me.#patternController ??= new MultipatternController(me);\r\n    } else {\r\n      me.removeController(me.#patternController);\r\n      me.#patternController = null;\r\n    }\r\n  }\r\n\r\n  #updateList() {\r\n    const me = this;\r\n    if (me.list) {\r\n      me.#listController ??= new ListController(me);\r\n    } else {\r\n      me.removeController(me.#listController);\r\n      me.#listController = null;\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { ControllerHandler } from \"./ControllerHandler.mjs\";\r\nimport { mixin } from \"./EventsMixin.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <textarea is=\"gs-ext-textarea\"></textarea>\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends { HTMLTextAreaElement }\r\n */\r\nexport class GSExtTextAreaElement extends HTMLTextAreaElement {\r\n\r\n    static {\r\n        mixin(GSExtTextAreaElement);\r\n        GSDOM.define('gs-ext-textarea', GSExtTextAreaElement, { extends: 'textarea' });\r\n        Object.seal(GSExtTextAreaElement);\r\n    }\r\n\r\n    #hasUpdated = false;\r\n    #controllerHandler = undefined;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#controllerHandler = new ControllerHandler(this);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.connectedCallback();\r\n        me.#preupdate();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.disconnectedCallback();\r\n        me.#controllerHandler = undefined;\r\n        GSEvents.detachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        me.#preupdate(name);\r\n        me.willUpdate(name, oldValue, newValue);\r\n        me.#controllerHandler?.hostUpdated(name);\r\n    }\r\n\r\n    #preupdate(name) {\r\n        const me = this;\r\n        if (!me.#hasUpdated) {\r\n            me.firstUpdated(name);\r\n            me.#controllerHandler?.hostUpdated(name);\r\n            me.#hasUpdated = true;\r\n        }\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        const me = this;\r\n        const data = me.formComponent?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        if (me.autofocus) me.focus();\r\n    }\r\n\r\n    willUpdate(changed, oldValue, newValue) {\r\n        if (changed === 'required' || changed === 'disabled') {\r\n            this.validate();\r\n        }\r\n    }\r\n\r\n    addController(controller) {\r\n        this.#controllerHandler?.addController(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllerHandler?.removeController(controller);\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.setCustomValidity('');\r\n        GSDOM.reset(me);\r\n        me.validate();\r\n    }\r\n\r\n    checkValidity() {\r\n        this.validate();\r\n        return super.checkValidity();\r\n    }\r\n\r\n    reportValidity() {\r\n        this.validate();\r\n        return super.reportValidity();\r\n    }\r\n\r\n    validate(e) {\r\n        return this.#controllerHandler.validate(e);\r\n    }\r\n\r\n    get owner() {\r\n        return this[Symbol.for('gs-onwner')]();\r\n    }\r\n\r\n    get parentComponent() {\r\n        return this[Symbol.for('gs-parent')]();\r\n    }\r\n\r\n    get hasUpdated() {\r\n        return this.#hasUpdated;\r\n    }\r\n\r\n    /**\r\n     * If set, autoamtically calls reportValidity\r\n     */\r\n    get autoreport() {\r\n        return this.hasAttribute('autoreport');\r\n    }\r\n\r\n    /**\r\n     * If set, automatically calls checkValidity\r\n     */\r\n    get autovalidate() {\r\n        return this.hasAttribute('autovalidate');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get block() {\r\n        return this.hasAttribute('block');\r\n    }\r\n\r\n    get beep() {\r\n        return this.hasAttribute('beep');\r\n    }\r\n\r\n    get timeout() {\r\n        return GSAttr.getAsNum(this, 'timeout', 0);\r\n    }\r\n\r\n    set autoreport(value) {\r\n        GSAttr.toggle(this, 'autoreport', value);\r\n    }\r\n\r\n    set autovalidate(value) {\r\n        GSAttr.toggle(this, 'autovalidate', value);\r\n    }\r\n\r\n    set autoselect(value) {\r\n        GSAttr.toggle(this, 'autoselect', value);\r\n    }\r\n\r\n    set autocopy(value) {\r\n        GSAttr.toggle(this, 'autocopy', value);\r\n    }\r\n\r\n    set block(val = false) {\r\n        GSAttr.toggle(this, 'block', val);\r\n    }\r\n\r\n    set beep(val = false) {\r\n        GSAttr.toggle(this, 'beep', val);\r\n    }\r\n\r\n    set timeout(val = 0) {\r\n        return GSAttr.setAsNum(this, 'timeout', val);\r\n    }\r\n\r\n    get form() {\r\n        const me = this;\r\n        return super.form || me.owner?.form || me.closest?.('form');\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        this.value = await GSLoader.loadSafe(url, 'GET', null, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { mixin } from \"./EventsMixin.mjs\";\r\nimport { GSLog } from \"../../base/GSLog.mjs\";\r\nimport { ControllerHandler } from \"./ControllerHandler.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport class GSExtSelectElement extends HTMLSelectElement {\r\n\r\n    static {\r\n        mixin(GSExtSelectElement);\r\n        GSDOM.define('gs-ext-select', GSExtSelectElement, { extends: 'select' });\r\n        Object.seal(GSExtSelectElement);\r\n    }\r\n\r\n    #data = [];\r\n\r\n    #controllerHandler = undefined;\r\n    #hasUpdated = false;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#controllerHandler = new ControllerHandler(this);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['url'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.connectedCallback();\r\n        me.#preupdate();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.disconnectedCallback();\r\n        me.#controllerHandler = undefined;\r\n        GSEvents.detachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        me.#preupdate(name);\r\n        me.willUpdate(name, oldValue, newValue);\r\n        me.#controllerHandler?.hostUpdated(name);\r\n    }\r\n\r\n    #preupdate(name) {\r\n        const me = this;\r\n        if (!me.#hasUpdated) {\r\n            me.firstUpdated(name);\r\n            me.#controllerHandler?.hostUpdated(name);\r\n            me.#hasUpdated = true;\r\n        }\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        const me = this;\r\n        const data = me.form?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        if (me.autofocus) me.focus();\r\n        me.on('reset', me.#onReset);\r\n    }\r\n\r\n    willUpdate(changed, oldValue, newValue) {\r\n\r\n        if (changed === 'url') this.load(newValue);\r\n        if (changed === 'required' || changed === 'disabled') {\r\n            this.validate();\r\n        }\r\n    }\r\n\r\n    addController(controller) {\r\n        this.#controllerHandler?.addController(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllerHandler?.removeController(controller);\r\n    }\r\n\r\n    get owner() {\r\n        return this[Symbol.for('gs-owner')]();\r\n    }\r\n\r\n    get parentComponent() {\r\n        return this[Symbol.for('gs-parent')]();\r\n    }    \r\n\r\n    get asJSON() {\r\n        return this.query('option').forEach(el => GSDOM.fromElement2Object(el, {}));\r\n    }\r\n\r\n    set asJSON(data) {\r\n        this.apply(data);\r\n    }\r\n\r\n    /**\r\n     * Storage records key to use to generate unique list\r\n     */\r\n    get key() {\r\n        return GSAttr.get(this, 'key', 0);\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage');\r\n    }\r\n\r\n    get form() {\r\n        const me = this;\r\n        return super.form || me.owner?.form || me.closest?.('form');\r\n    }\r\n\r\n    /**\r\n     * Support for multiple selections\r\n     */\r\n    get values() {\r\n        return Array.from(this.selectedOptions).map(el => el.value);\r\n    }\r\n\r\n    /**\r\n     * String array ov values to match for selection\r\n     */\r\n    set values(values) {\r\n        values ??= [];\r\n        if (GSUtil.isString(values)) values = values.split(',');\r\n        Array.from(el.options).forEach(el => el.selected = values.indexOf(el.value) > -1);\r\n    }\r\n\r\n    checkValidity() {\r\n        this.validate();\r\n        return super.checkValidity();\r\n    }\r\n\r\n    reportValidity() {\r\n        this.validate();\r\n        return super.reportValidity();\r\n    }\r\n\r\n    validate(e) {\r\n        return this.#controllerHandler.validate(e);\r\n    }\r\n\r\n    reset() {\r\n        GSDOM.resetSelect(this);\r\n    }\r\n        \r\n    /**\r\n     * For DataController read callback\r\n     * Convert record data to html JSON format \r\n     * @param {Array} data \r\n     */\r\n    onDataRead(data = []) {\r\n        const me = this;\r\n        const key = me.key;\r\n        data = Array.isArray(data) ? data : [data];\r\n        data = data.map(o => GSUtil.isString(o) ? o : o[key])\r\n            .filter(v => v)\r\n            .map(v => {return {text: v, value: v}});\r\n        me.apply(data);\r\n    }\r\n\r\n    /**\r\n     * Load html definition in JSON format\r\n     * @param {string} url \r\n     * @returns \r\n     */\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        try {\r\n            const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n            this.apply(data);\r\n        } catch (error) {\r\n            console.error('Failed to load data:', error);\r\n            GSLog.error(this, error);\r\n        }\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n    #onReset(e) {\r\n        this.reset();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListElement class\r\n * @module components/ext/GSDataListElement\r\n */\r\n\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSLog } from \"../../base/GSLog.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { mixin } from \"./EventsMixin.mjs\";\r\nimport { ControllerHandler } from \"./ControllerHandler.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport class GSExtDataListElement extends HTMLDataListElement {\r\n\r\n    static {\r\n        mixin(GSExtDataListElement);\r\n        GSDOM.define('gs-ext-datalist', GSExtDataListElement, { extends: 'datalist' });\r\n        Object.seal(GSExtDataListElement);\r\n    }\r\n\r\n    #data = [];\r\n\r\n    #controllerHandler = undefined;\r\n    #hasUpdated = false;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#controllerHandler = new ControllerHandler(this);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['url'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#controllerHandler?.connectedCallback();\r\n        me.#preupdate();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.disconnectedCallback();\r\n        me.#controllerHandler = undefined;\r\n        GSEvents.detachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        me.#preupdate(name);\r\n        me.willUpdate(name, oldValue, newValue);\r\n        me.#controllerHandler?.hostUpdated(name);\r\n    }\r\n\r\n    #preupdate(name) {\r\n        const me = this;\r\n        if (!me.#hasUpdated) {\r\n            me.firstUpdated(name);\r\n            me.#controllerHandler?.hostUpdated(name);\r\n            me.#hasUpdated = true;\r\n        }\r\n    }\r\n   \r\n    firstUpdated(changed) {\r\n        const me = this;\r\n        if (me.autofocus) me.focus();\r\n        const data = me.form?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n    }\r\n\r\n    willUpdate(changed, oldValue, newValue) {\r\n\r\n        if (changed === 'url') this.load(newValue);\r\n        if (changed === 'required' || changed === 'disabled') {\r\n            this.validate();\r\n        }\r\n    }\r\n\r\n    addController(controller) {\r\n        this.#controllerHandler?.addController(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllerHandler?.removeController(controller);\r\n    }\r\n    \r\n    get owner() {\r\n        return this[Symbol.for('gs-owner')]();\r\n    }\r\n\r\n    get parentComponent() {\r\n        return this[Symbol.for('gs-parent')]();\r\n    }    \r\n\r\n    get asJSON() {\r\n        return this.query('option').forEach(el => GSDOM.fromElement2Object(el, {}));\r\n    }\r\n\r\n    set asJSON(data) {\r\n        this.apply(data);\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage');\r\n    }\r\n\r\n    /**\r\n     * Storage records key to use to generate unique list\r\n     */\r\n    get key() {\r\n        return GSAttr.get(this, 'key', 0);\r\n    }   \r\n\r\n    /**\r\n     * For DataController read callback\r\n     * Convert record data to html JSON format \r\n     * \r\n     * @param {Array} data \r\n     */\r\n    onDataRead(data = []) {\r\n        const me = this;\r\n        const key = me.key;\r\n        data = Array.isArray(data) ? data : [data];\r\n        data = data.map(o => GSUtil.isString(o) ? o : o[key])\r\n            .filter(v => v)\r\n            .map(v => {return {value: v}});\r\n        me.apply(data);\r\n    }   \r\n\r\n    /**\r\n     * Load html definition in JSON format\r\n     * @param {string} url \r\n     * @returns \r\n     */\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        try {\r\n            const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n            this.apply(data);\r\n        } catch (error) {\r\n            console.error('Failed to load data:', error);\r\n            GSLog.error(this, error);\r\n        }\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = { value: o };\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        if (o.text) {\r\n            seg.push('>')\r\n            seg.push(o.text);\r\n            seg.push('</option>')\r\n        } else {\r\n            seg.push('>')\r\n        }\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { ControllerHandler } from \"./ControllerHandler.mjs\";\r\nimport { mixin } from './EventsMixin.mjs';\r\nimport { GSLog } from \"../../base/GSLog.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Extended native forn with additional functionality\r\n * \r\n * @class\r\n * @extends { HTMLFormElement }\r\n */\r\nexport class GSExtFormElement extends HTMLFormElement {\r\n\r\n    static {\r\n        mixin(GSExtFormElement);\r\n        GSDOM.define('gs-ext-form', GSExtFormElement, { extends: 'form' });\r\n        Object.seal(GSExtFormElement);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['disabled', 'url'];\r\n    }\r\n\r\n    #hasUpdated = false;\r\n    #controllerHandler = undefined;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#controllerHandler = new ControllerHandler(this);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.connectedCallback?.();\r\n        me.#preupdate();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.disconnectedCallback?.();\r\n        me.#controllerHandler = undefined;\r\n        GSEvents.detachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        me.#preupdate(name);\r\n        me.willUpdate(name, oldValue, newValue);\r\n        me.#controllerHandler?.hostUpdated?.(name);\r\n    }\r\n\r\n    #preupdate(name) {\r\n        const me = this;\r\n        if (!me.#hasUpdated) {\r\n            me.firstUpdated(name);\r\n            me.#controllerHandler?.hostUpdated?.(name);\r\n            me.#hasUpdated = true;\r\n        }\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        const me = this;\r\n        const data = me.formComponent?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        if (me.autofocus) me.focus();\r\n    }\r\n\r\n    willUpdate(changed, oldValue, newValue) {\r\n        const me = this;\r\n        if (changed === 'url') me.load(newValue);\r\n        if (changed === 'disabled') {\r\n            me.disable ? me.disable(true) : me.enable(true);\r\n        }\r\n    }\r\n\r\n    addController(controller) {\r\n        this.#controllerHandler?.addController(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllerHandler?.removeController(controller);\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        // reset non shadeowed\r\n        super.reset();\r\n        // reset shadowed\r\n        me.inputs\r\n            .filter(el => GSDOM.isShadowed(el))\r\n            .forEach(el => GSDOM.reset(el));\r\n        me.validate();\r\n    }\r\n\r\n    checkValidity() {\r\n        this.validate();\r\n        return super.checkValidity();\r\n    }\r\n\r\n    reportValidity() {\r\n        this.validate();\r\n        return super.reportValidity();\r\n    }\r\n\r\n    checkValidity() {\r\n        return super.checkValidity() &&\r\n            this.inputs\r\n                .filter(el => !el.disabled)\r\n                .every(el => el.checkValidity());\r\n    }\r\n\r\n    reportValidity() {\r\n        return super.reportValidity() &&\r\n            this.inputs\r\n                .filter(el => !el.disabled)\r\n                .every(el => el.reportValidity());\r\n    }\r\n    /**\r\n     * Validate each individual field, return true only if all fields are valid\r\n     * @returns \r\n     */\r\n    validate(e) {\r\n        return this.inputs\r\n            .filter(el => !el.disabled)\r\n            .every(c => c.validate ? c.validate(e) : true);\r\n    }\r\n\r\n    /**\r\n     * Find field by name\r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    field(name) {\r\n        return name && this.inputs.filter(f => f.name === name);\r\n    }\r\n\r\n    disable(all = false) {\r\n        GSDOM.disableInput(this, 'input, textarea, select', all, 'gs-ext-form');\r\n        const btn = this.submitButton;\r\n        if (btn) btn.disabled = true;\r\n    }\r\n\r\n    enable(all = false) {\r\n        GSDOM.enableInput(this, 'input, textarea, select', all, 'gs-ext-form');\r\n        const btn = this.submitButton;\r\n        if (btn) btn.disabled = false;\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        try {\r\n            const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n            this.onDataRead(data);\r\n        } catch (error) {\r\n            console.error('Failed to load data:', error);\r\n            GSLog.error(this, error);\r\n        }\r\n    }\r\n\r\n    #button(type) {\r\n        return this.queryAll(`button[type=\"${type}\"]`, true);\r\n    }\r\n\r\n    #childrens(shadow = false) {\r\n        return this.queryAll('input,select,output,textarea', shadow);\r\n    }\r\n\r\n    get owner() {\r\n        return this[Symbol.for('gs-owner')]();\r\n    }\r\n\r\n    get parentComponent() {\r\n        return this[Symbol.for('gs-parent')]();\r\n    }    \r\n\r\n    get hasUpdated() {\r\n        return this.#hasUpdated;\r\n    }\r\n\r\n    get asJSON() {\r\n        const data = {};\r\n        this.inputs.forEach(field => GSDOM.fromElement2Object(field, data));\r\n        return data;\r\n    }\r\n\r\n    set asJSON(data) {\r\n        const me = this;\r\n        me.inputs.forEach(field => GSDOM.fromObject2Element(field, data));\r\n        me.validate();\r\n    }\r\n        \r\n    /**\r\n     * If set, autoamtically calls reportValidity\r\n     */\r\n    get autoreport() {\r\n        return this.hasAttribute('autoreport');\r\n    }\r\n\r\n    /**\r\n     * If set, autoamtically calls checkValidity\r\n     */\r\n    get autovalidate() {\r\n        return this.hasAttribute('autovalidate');\r\n    }\r\n\r\n    get block() {\r\n        return this.hasAttribute('block');\r\n    }\r\n\r\n    get beep() {\r\n        return this.hasAttribute('beep');\r\n    }\r\n\r\n    get timeout() {\r\n        return GSAttr.getAsNum(this, 'timeout', 0);\r\n    }\r\n\r\n    set autoreport(value) {\r\n        GSAttr.toggle(this, 'autoreport', value);\r\n    }\r\n\r\n    set autovalidate(value) {\r\n        GSAttr.toggle(this, 'autovalidate', value);\r\n    }\r\n\r\n    set block(val = false) {\r\n        GSAttr.toggle(this, 'block', val);\r\n    }\r\n\r\n    set beep(val = false) {\r\n        GSAttr.toggle(this, 'beep', val);\r\n    }\r\n\r\n    set timeout(val = 0) {\r\n        return GSAttr.setAsNum(this, 'timeout', val);\r\n    }\r\n\r\n    get submitButton() {\r\n        return this.#button('submit');\r\n    }\r\n\r\n    get resetButton() {\r\n        return this.#button('reset');\r\n    }\r\n\r\n    /**\r\n     * Pickup all form elements, including custom ones\r\n     */\r\n    get elements() {\r\n        return super.elements;\r\n    }\r\n\r\n    /**\r\n     * Get all form attached native fields unwrapepd from GSWebComponents\r\n     */\r\n    get fields() {\r\n        return Array.from(this.elements).map(el => el.field || el);\r\n    }\r\n\r\n    /**\r\n     * Find all inputs by querying across inner shadow \r\n     */\r\n    get inputs() {\r\n        return this.#childrens(true);\r\n    }\r\n\r\n    get invalid() {\r\n        return this.inputs\r\n        .filter(el => !el.disabled)\r\n        .filter(el => !el.validity.valid);\r\n    }\r\n\r\n    get isValid() {\r\n        return this.invalid.length === 0;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined, repeat } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSBreadcrumbElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n    color: { ...color },\r\n    divider: { reflect: true },\r\n    spacing: { reflect: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.spacing = 1;\r\n    me.divider = 'chevron-right';\r\n    me.#updateChildren();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#updateChildren();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<nav part=\"base\" class=\"breadcrumb\" @click=\"${me.#onClick}\" dir=\"${ifDefined(me.direction)}\"><slot>\r\n      ${repeat(me.data || [], (item) => item, (item) => html`\r\n        <gs-breadcrumb-item  \r\n        href=\"${item.href}\"\r\n        color=\"${item.color}\"\r\n        .data=${item}     \r\n        .active=${item.active}\r\n        .divider=\"${item.divider || me.divider}\"\r\n        .spacing=\"${item.spacing || me.spacing}\">\r\n          ${item.$text}\r\n        </gs-breadcrumb-item>\r\n      `)}\r\n    </slot></nav>`;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #updateChildren() {\r\n    const me = this;\r\n    me.queryAll('gs-breadcrumb-item').forEach(el => {\r\n      el.divider = me.divider;\r\n      el.spacing = me.spacing;\r\n      el.color = me.color;\r\n    });\r\n  }\r\n\r\n  #onClick(e) {\r\n    const el = e.target.closest('gs-bradcrumb-item');\r\n    el?.handle(e);\r\n  } \r\n\r\n  static {\r\n    this.define('gs-breadcrumb');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSBreadcrumbItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    color: { ...color },\r\n    data: { state: true, type: Object },\r\n    active: { reflect: true, type: Boolean },\r\n    divider: { state: true, type: Boolean },\r\n    spacing: { state: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div part=\"base\" class=\"breadcrumb-item ${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <span part=\"prefix\"><slot name=\"prefix\"></slot></span>        \r\n        ${me.#label}\r\n        <span part=\"suffix\"><slot name=\"suffix\"></slot></span>\r\n        <span part=\"separator\"><slot name=\"separator\">${me.#separator}</slot></span>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #label() {\r\n    const me = this;\r\n    if (me.active) return html`<slot></slot>`;\r\n    me.data.url = me.data.url || me.href;\r\n    me.data.part = 'label';\r\n    return GSLinklement.generate(me.data, {})\r\n  }\r\n\r\n  get #separator() {\r\n    const me = this;\r\n    return me.nextElementSibling && me.divider ? html`<gs-icon size=\"7\" color=\"${me.color}\" css=\"mx-${me.spacing}\" name=\"${me.divider}\"></gs-icon>` : '';\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.query('a', true), e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-breadcrumb-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport { classMap, createRef, ref, css, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSAttachment } from './Attachment.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSFileBoxElement extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    static properties = {\r\n        cssList: { attribute: 'css-list' },\r\n        cssLabel: { attribute: 'css-label' },\r\n        cssInput: { attribute: 'css-input' },\r\n\r\n        multiple: { reflect: true, type: Boolean },\r\n        directory: { reflect: true, type: Boolean },\r\n        name: {},\r\n        title: {},\r\n        accept: {},\r\n        filter: {},\r\n        maxFileSize: { reflect: true, attribute: 'max-file-size', type: Number }, // New property\r\n    }\r\n\r\n    #listEl = createRef();\r\n    #fileEl = createRef();\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = GSFileBoxElement.CSS;\r\n        this.cssInput = 'd-none';\r\n        this.multiple = true;\r\n        this.title = GSFileBoxElement.TITLE;\r\n        this.filter = '^image\\/(gif|png|jpeg)$'\r\n        this.directory = false;\r\n        this.maxFileSize = 0; // Default to 0, meaning no limit\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div part=\"border\" class=\"${classMap(me.renderClass())}\"\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @click=\"${me.#onClick}\"\r\n            @dragenter=\"${me.#onDragenter}\"\r\n            @dragover=\"${me.#onDragenter}\"\r\n            @dragleave=\"${me.#onDragleave}\"\r\n            @drop=\"${me.#onDrop}\"\r\n            @paste=\"${me.#onPaste}\"\r\n            @change=\"${me.#onChange}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.translate(me.title)}</label>\r\n            <input ${ref(me.#fileEl)}  part=\"input\" \r\n                type=\"file\" accept=\"${me.accept}\" \r\n                class=\"${me.cssInput}\" \r\n                name=\"${me.name}\" \r\n                id=\"${me.name}\" \r\n                ${me.multiple ? \"multiple\" : \"\"} \r\n                ${me.directory ? \"directory webkitdirectory\" : \"\"}>\r\n            <pre ${ref(me.#listEl)} part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    get listEl() {\r\n        return this.#listEl.value;\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.#fileEl.value;\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        // Filter out files that exceed the maxFileSize\r\n        const validAttachments = me.maxFileSize > 0 \r\n            ? attachments.filter(a => a.file.size <= me.maxFileSize)\r\n            : attachments;\r\n\r\n        const accepted = me.emit('accept', { attachments: validAttachments }, true, false, true);\r\n        if (accepted && validAttachments.length) {\r\n            me.#accept(validAttachments);\r\n            me.emit('accepted', { attachments: validAttachments }, true);\r\n        }\r\n    }\r\n\r\n    static styles = css`\r\n        .dash {\r\n            border-style: var(--gs-fieldbox-border, dashed) !important;\r\n            border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n        }\r\n        input[type=file] {\r\n            color : var(--gs-fieldbox-color, transparent);\r\n        } \r\n        input[type=file]::file-selector-button {}             \r\n        input[type=file]::file-selector-button:hover {}`;\r\n\r\n    static {\r\n        this.define('gs-filebox');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/TimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSTimeFormat extends GSElement {\r\n\r\n    static properties = {\r\n        interval: {reflect:true, type:Number},\r\n        language: {reflect:true},\r\n    }\r\n\r\n    #id = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.interval = 1;\r\n        this.language = GSUtil.language;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const date = new Date();\r\n        return date.toLocaleTimeString(this.language);\r\n    }    \r\n\r\n    start() {\r\n        const me = this;\r\n        if (me.interval >0 && me.#id === 0) {\r\n            me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n        } else {\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n        this.#id = 0;\r\n    }\r\n    \r\n    #update() {\r\n       requestAnimationFrame(() => this.requestUpdate());\r\n    }\r\n\r\n    static {\r\n        this.define('gs-time-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/DateFormat\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDate } from '../../base/GSDate.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSDateFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        format: {},\r\n        language: {},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = navigator.language;\r\n        this.value = new Date();\r\n    }\r\n\r\n    renderUI() {\r\n        return this.result;\r\n    }    \r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.date;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.language, me.dataset).format(val);\r\n    }\r\n\r\n    get date() {\r\n        const me = this;\r\n        const o = Date.parse(me.value || new Date());\r\n        const date = new GSDate(o);\r\n        date.language = me.language;\r\n        return date;\r\n    }\r\n\r\n\r\n    static {\r\n        this.define('gs-date-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/YearFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSYearFormat extends GSElement {\r\n\r\n    static properties = {\r\n        offset: {type :Number},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n    }\r\n\r\n    renderUI() {\r\n        return this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        this.define('gs-year-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/CurrencyFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSCurrencyFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        currency: {},\r\n        language: {},\r\n    }\r\n\r\n    renderUI() {\r\n        return this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.language, me.#options).format(me.value);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-currency-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCacheStyles } from \"../../base/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepElement class\r\n * @module components/steps/GSStepElement\r\n */\r\n\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepElement extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-primary';\r\n    static COMPLETED = 'text-bg-secondary';\r\n\r\n    static ICON_CSS = 'border rounded-circle fs-1';\r\n    static TITLE_CSS = 'mb-0 fs-6 mt-3 fw-bold';\r\n\r\n    static properties = {\r\n        title: {},\r\n        icon: {},\r\n        color: {},\r\n        iconCSS: { attribute: 'icon-css' },\r\n        titleCSS: { attribute: 'title-css' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const clazz = GSStepElement;\r\n        this.icon = clazz.INACTIVE;\r\n        this.iconCSS = clazz.ICON_CSS;\r\n        this.titleCSS = clazz.TITLE_CSS;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"step d-block w-100 text-center mb-4\"  dir=\"${ifDefined(me.direction)}\">\r\n            <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color || GSStepElement.INACTIVE}\">\r\n                    ${me.#renderIcon()}\r\n                </div>\r\n            </div>\r\n            <div class=\"step-title ${me.titleCSS}\">${me.translate(me.title)}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    #renderIcon() {\r\n        return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-step');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepsElement class\r\n * @module components/steps/GSStepsElement\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSStepStyle } from \"./StepStyle.mjs\";\r\nimport GSStepElement from './Step.mjs';\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepsElement extends GSElement {\r\n\r\n    static CSS = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n\r\n    #index = -1;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldUpdate(changedProperties) { \r\n        return this.steps.length > 0;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\"><slot></slot></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        return this.mapCSS(GSStepsElement.CSS, super.renderClass());\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step', false, true);\r\n    }\r\n\r\n    get length() {\r\n        return this.steps.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length - 1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isLast) return false;\r\n        if (me.#index > - 1) me.current.color = GSStepElement.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStepElement.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStepElement.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStepElement.SELECTED;\r\n        });\r\n    }\r\n\r\n    static {\r\n        GSStepStyle.style;\r\n        this.define('gs-steps', GSStepsElement);\r\n    }\r\n\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSAttr } from '../../base/GSAttr.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\n\r\nexport class GSNotificationElement extends GSElement {\r\n\r\n    static TOP_START = \"position-fixed top-0 start-0\";\r\n    static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n    static TOP_END = \"position-fixed top-0 end-0\";\r\n\r\n    static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n    static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n    static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n    \r\n    static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n    static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n    static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n    static DEFAULT = GSNotificationElement.BOTTOM_END;\r\n\r\n    static properties = {\r\n        position: { reflect: true },\r\n        native: { reflect: true, type: Boolean }\r\n    };\r\n\r\n    #list = new Set();\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = 'p-3';\r\n        this.position = GSNotificationElement.DEFAULT;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n            class=\"toast-container z-10k ${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        return me.mapCSS(me.#positionCSS, super.renderClass());\r\n    }    \r\n\r\n    get #positionCSS() {\r\n        const clazz = GSNotificationElement;\r\n        const val = this.position || clazz.DEFAULT;\r\n        return val.indexOf('_') > 0 && clazz[val] ? clazz[val] : val;\r\n    }\r\n\r\n    clear() {\r\n        this.queryAll('gs-toast').forEach(el => el.dismiss());\r\n    }\r\n\r\n    info(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n    }\r\n\r\n    success(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n    }\r\n\r\n    warn(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n    }\r\n\r\n    danger(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n    }\r\n\r\n    primary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n    }\r\n\r\n    secondary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n    }\r\n\r\n    dark(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n    }\r\n\r\n    light(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n    }\r\n\r\n    /**\r\n     * Main function to show notification. \r\n     * It has support for Bootstrap based and web based notifications.\r\n     * \r\n     * @async\r\n     * @param {String} title Notification title\r\n     * @param {String} message Notification message\r\n     * @param {String} css CSS styling (web only)\r\n     * @param {Boolean} closable Can user close it (web only)\r\n     * @param {Number} timeout Timeout after which to close notification  (default 2 sec)\r\n     * @param {Number} delay Timeout after which to show notification (default 1 sec)\r\n     * @param {Object} options Options for native Notification\r\n     * @returns {Promise<Notification|GSToast>}\r\n     */\r\n    async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n        if (!message) return;\r\n        const me = this;\r\n        if (me.native) {\r\n            let sts = await GSNotificationElement.requestPermission();\r\n            if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n            if (sts) return sts;\r\n        }\r\n        return me.#showWeb(title, message, css, closable, timeout, delay);\r\n    }\r\n\r\n    #showWeb(title, message, css, closable, timeout, delay) {\r\n        const me = this;\r\n        const tpl = `<gs-toast css=\"${css}\"  opened ${closable ? 'closable' : ''} timeout=\"${timeout}\"  delay=\"${delay}\" message=\"${message}\" title=\"${title}\" language=\"${me.language}\" ></gs-toast>`;\r\n        const el = GSDOM.parse(tpl, true);\r\n        requestAnimationFrame(async () => {\r\n            await me.#delay(delay);\r\n            const toast = me.#dialogToast;\r\n            if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n            toast.appendChild(el);\r\n        });\r\n        return el;\r\n    }\r\n\r\n    async #showNative(title, message, timeout, delay, options = {}) {\r\n        const me = this;\r\n        await me.#delay(delay);\r\n        options.body = options.body || message;\r\n        const notification = new Notification(title, options);\r\n        me.#list.add(notification);\r\n        const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n        notification.addEventListener('close', callback);\r\n        if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n        return notification;\r\n    }\r\n\r\n    get #dialogToast() {\r\n        const dlg = customElements.get('gs-dialog')?.top;\r\n        return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n    }\r\n\r\n    async #delay(delay = 0) {\r\n        if (GSUtil.isNumber(delay) && delay > 0) await GSUtil.timeout(delay * 1000);\r\n    }\r\n\r\n    #clearNative() {\r\n        const me = this;\r\n        me.notification.close();\r\n        me.owner.#list.delete(me.notification);\r\n        if (me.notification.iid) clearTimeout(me.notification.iid);\r\n    }\r\n\r\n    /**\r\n     * Clear all triggered notifications\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n        me.#list.forEach(nn => nn.close());\r\n        me.#list.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is supported\r\n     * @returns {Boolean} \r\n     */\r\n    static get isNativeSupported() {\r\n        return \"Notification\" in self;\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is allowed\r\n     * @returns {Boolean} \r\n     */\r\n    static get isGranted() {\r\n        return Notification.permission === \"granted\";\r\n    }\r\n\r\n    /**\r\n     * Request useage for browser native notification\r\n     * \r\n     * @async\r\n     * @returns {Promise<boolean>} Return granted status\r\n     */\r\n    static async requestPermission() {\r\n        const clazz = GSNotificationElement;\r\n        if (!clazz.isNativeSupported) return false;\r\n        if (!clazz.isGranted) await Notification.requestPermission();\r\n        return clazz.isGranted;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-notification');\r\n    }\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNotificationElement } from './Notification.mjs';\r\n\r\nexport class GSToastElement extends GSElement {\r\n\r\n    static properties = {\r\n        closable: { reflect: true, type: Boolean },\r\n        opened: { reflect: true, type: Boolean },\r\n        message: { reflect: true },\r\n        title: { reflect: true },\r\n        delay: { reflect: true, type: Number },\r\n        timeout: { reflect: true, type: Number }\r\n    }\r\n\r\n    #pending = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.timeout = 2;\r\n        me.delay = 2;\r\n        me.auto = true; \r\n    }\r\n\r\n    shouldUpdate(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.delay > 0 && me.opened && visibilityChange) {\r\n            me.#pending = true;\r\n            me.#pendingUpdate();\r\n        }\r\n        return me.#validParent && (!me.#pending);\r\n    }\r\n\r\n    #isVisibilityChanged(changedProperties) {\r\n        return changedProperties.has('opened');\r\n    }\r\n\r\n    async #pendingUpdate() {\r\n        const me = this;\r\n        await GSUtil.timeout(me.delay * 1000);\r\n        me.#pending = false;\r\n        me.requestUpdate();\r\n    }\r\n\r\n    async updated(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.timeout > 0 && me.opened) {\r\n            await GSUtil.timeout(me.timeout * 1000);\r\n            me.opened = false;\r\n        } else if (visibilityChange && !me.opened) { \r\n            me.remove();\r\n        };\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return me.title ? me.#renderWithHeader() : me.#renderSimple();\r\n    }\r\n\r\n    #renderWithHeader() {\r\n        const me = this;\r\n        return html`\r\n        <div dir=\"${ifDefined(me.direction)}\"\r\n            class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n            <div class=\"toast-header\">\r\n                ${me.translate(me.title)}\r\n                <slot name=\"header\"></slot>\r\n                ${me.closable ? me.#button : ''}\r\n            </div>\r\n            <div class=\"toast-body\">\r\n                ${me.translate(me.message)}\r\n                <slot name=\"body\"></slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    #renderSimple() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.translate(me.message)}\r\n              <slot name=\"body\"></slot>\r\n              </div>\r\n              ${me.closable ? me.#button : ''}\r\n          </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': me.opened,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    dismiss() {\r\n        this.opened = false;\r\n    }\r\n\r\n    get #button() {\r\n        const me = this;\r\n        return html`<button type=\"button\" class=\"btn-close me-2 m-auto\" @click=\"${me.dismiss}\"></button>`;\r\n    }\r\n\r\n    get #validParent() {\r\n        const isToast = GSDOM.hasClass(this.parentElement, 'toast-container');\r\n        const isNotify = this.parentElement instanceof GSNotificationElement;\r\n        return isToast || isNotify;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-toast');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller managing data tree navigation.\r\n * Controller is added to every gs-tree-node and \r\n * reacts on Tree node changes to update UI\r\n */\r\nexport class AbstractTreeController {\r\n\r\n    #host;\r\n    #node;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        host.addController(me);\r\n    }\r\n    \r\n    hostConnected() {\r\n        const me = this;\r\n        me.#node = me.#host.node;\r\n        me.#addNodeController(me);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        const me = this;\r\n        me.#removeNodeController(me);\r\n        me.#host.removeController(me);\r\n    }\r\n\r\n    // before rendering\r\n    hostUpdate() {\r\n        const me = this;\r\n        const oldNode = me.#node;\r\n        me.#node = me.#host.node;\r\n        if (oldNode != me.#node) {\r\n            me.#removeNodeController(me);\r\n            me.#addNodeController(me);\r\n        }\r\n    }\r\n\r\n    // link Tree node callbacks with controller and component\r\n    #addNodeController(controller) {\r\n        this.#host.node?.addController?.(controller);\r\n    }\r\n\r\n    // unlink Tree node callbacks with controller and component\r\n    #removeNodeController(controller) {\r\n        this.#node?.removeController?.(controller);\r\n    }\r\n\r\n    host(node) {\r\n        return node[Symbol.for('gs-element')] || this.#host;\r\n    }\r\n\r\n    match(node) {\r\n        const host = this.host(node);\r\n        return host?.node === node;\r\n    }\r\n\r\n    get store() {\r\n        return this.#host.dataController?.store;\r\n    }\r\n\r\n    requestUpdate(node) {\r\n        if (this.match(node)) this.host(node).requestUpdate();\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { AbstractTreeController } from './AbstractTreeController.mjs';\r\n\r\n/**\r\n * Controller managing data TreeNode callbacks to reflect UI.\r\n */\r\nexport class TreeController extends AbstractTreeController {\r\n\r\n    constructor(host) {\r\n        super(host);\r\n    }\r\n\r\n    #toggleState(node, state = false) {\r\n        const el = this.host(node);\r\n        if (el) el.loading = state;\r\n    }\r\n\r\n    // Tree controller callbacks\r\n    onLoad(node) {\r\n        this.#toggleState(node, true);\r\n    }\r\n\r\n    onRefresh(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onAppend(node, addedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onInsert(node, insertedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onExpand(node) {\r\n        const store = this.store;\r\n        if (store) {\r\n            store.onExpand(node);\r\n        } else {\r\n            this.requestUpdate(node);\r\n        }\r\n    }\r\n\r\n    onCollapse(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onFocusChanged(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onSelectionChanged(node, selectedNode) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onRemove(node) {\r\n        if (this.match(node)) this.host(node).remove();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../../lib.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSTreeItemElement extends GSElement {\r\n\r\n  /*\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n    */\r\n\r\n  static properties = {\r\n    loading: { state: true },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('node')) this.node[Symbol.for('gs-element')] = this;\r\n  }\r\n\r\n  updated() {\r\n    if (this.focused) this.#link?.focus();\r\n    this.dataset.visible = this.visible;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const opt = me.value || {};\r\n    opt.tooltip = me.translate(opt.tooltip)\r\n    opt.title = me.translate(opt.title)\r\n    const before = me.loading ? me.#renderSpinner(node.level) : me.#renderIcon(node.level);\r\n    return GSLinklement.generate(opt, me.renderClass(), before);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const opt = {\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      'user-select-none  ': true,\r\n      'border-0': me.#border ? false : true,\r\n      'gs-hide': !me.visible\r\n    };\r\n    return me.mapCSS(me.#cssFocus, me.mapCSS(me.#cssSelected, opt, me.selected && !me.multiselect), me.focused);\r\n  }\r\n\r\n  /**\r\n   * Toggle folder\r\n   */\r\n  toggle() {\r\n    this.opened ? this.close() : this.open();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open() {\r\n    this.#status(true);\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   */\r\n  close() {\r\n    this.#status(false);\r\n  }\r\n\r\n  /**\r\n   * Toggle selection state\r\n   */\r\n  toggleSelection() {\r\n    this.select(!this.selected);\r\n  }\r\n\r\n  focus(val = true) {\r\n    if (val) super.focus();\r\n    this.focused = val == true;\r\n  }\r\n\r\n  select(val = true) {\r\n    this.selected = val == true;\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.#link, e);\r\n    /*\r\n    const me = this;\r\n    const isIcon = e.target.tagName === 'GS-ICON';\r\n    if (me.multiselect && isIcon) {\r\n      me.toggleSelection();\r\n    } else {\r\n      GSAttributeHandler.process(me.#link, e);\r\n    }\r\n    */\r\n  }\r\n\r\n  get #link() {\r\n    return this.query('a');\r\n  }\r\n\r\n  get isLeaf() {\r\n    return this.node?.isLeaf;\r\n  }\r\n\r\n  get isFolder() {\r\n    return !this.isLeaf;\r\n  }\r\n\r\n  get key() {\r\n    return this.node?.key;\r\n  }\r\n\r\n  get value() {\r\n    return this.node?.value || {};\r\n  }\r\n\r\n  get level() {\r\n    return this.node?.level || -1;\r\n  }\r\n\r\n  get focused() {\r\n    return this.node?.focused;\r\n  }\r\n\r\n  get visible() {\r\n    const parent = this.parent;\r\n    return parent?.opened || parent?.level === -1;\r\n  }\r\n\r\n  get parent() {\r\n    return this.node?.parent;\r\n  }\r\n\r\n  get parentItem() {\r\n    const item = this.parent?.[Symbol.for('gs-element')];\r\n    return item instanceof GSTreeItemElement ? item : undefined;\r\n  }\r\n\r\n  set focused(val) {\r\n    val = val === true;\r\n    this.node.focused = val;\r\n  }\r\n\r\n  get selected() {\r\n    return this.node?.selected;\r\n  }\r\n\r\n  set selected(val) {\r\n    val = val === true;\r\n    const me = this;\r\n    if (me.isFolder && me.owner.leaf) val = false;\r\n\r\n    if (me.multiselect) {\r\n      if (val) {\r\n        me.node.selectAll();\r\n      } else {\r\n        me.node.deselectAll();\r\n      }\r\n    } else {\r\n      me.node.selected = val;\r\n    }\r\n  }\r\n\r\n  get opened() {\r\n    return this.node?.opened;\r\n  }\r\n\r\n  set opened(val) {\r\n    this.#status(val === true);\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tree');\r\n  }\r\n\r\n  get multiselect() {\r\n    return this.owner.multiselect;\r\n  }\r\n\r\n  get #cssFocus() { return this.owner.cssFocus || 'focus-ring'; }\r\n  get #cssSelected() { return this.owner.cssSelected || 'active'; }\r\n  get #cssCheck() { return this.owner.cssCheck || ''; }\r\n  get #checkColor() { return this.owner.checkColor || 'secondary'; }\r\n  get #checkColorSelected() { return this.owner.checkColorSelected || 'primary'; }\r\n\r\n  get #border() {\r\n    return this.value?.border === true || this.owner.border === true;\r\n  }\r\n\r\n  get #icon() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const data = me.value;\r\n    const ui = me.owner;\r\n    let itemIco = data.icon || ui.itemIcon;\r\n    if (node.isFolder) itemIco = node.opened ? (data.openIcon || ui.openIcon) : (data.closeIcon || ui.closeIcon);\r\n    return itemIco;\r\n  }\r\n\r\n  #renderIndent(level) {\r\n    return html`<gs-indent size=\"${level}\"></gs-indent>`;\r\n  }\r\n\r\n  #renderSpinner(level) {\r\n    return html`${this.#renderIndent(level)}<gs-spinner small></gs-spinner>`;\r\n  }\r\n\r\n  #renderIcon(level) {\r\n    return html`${this.#renderIndent(level)}${this.#renderMulti()}<gs-icon size=\"5\" name=\"${this.#icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderMulti() {\r\n    const me = this;\r\n    if (!me.multiselect) return '';\r\n    const color = me.selected ? me.#checkColorSelected : me.#checkColor;\r\n    const icon = me.node.isPartialySelected ? 'dash-square-fill' : me.selected ? 'check-square-fill' : 'square';\r\n    return html`<gs-icon size=\"6\" data-type=\"state\" \r\n                css=\"me-1 text-${color} ${me.#cssCheck}\"\r\n                name=\"${icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #status(val = false) {\r\n    const me = this;\r\n    if (me.node?.isFolder) {\r\n      me.node.opened = val;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, css, createRef, ref, repeat, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { TreeController } from './controllers/TreeController.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSTreeElement extends GSElement {\r\n\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n\r\n  static shared = {\r\n    itemIcon: { attribute: 'icon-item' },\r\n    closeIcon: { attribute: 'icon-close' },\r\n    openIcon: { attribute: 'icon-open' },\r\n    cssCheck: { attribute: 'css-check' },\r\n    cssFocus: { attribute: 'css-focus' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    checkColor: { attribute: 'check-color', ...color },\r\n    checkColorSelected: { attribute: 'check-color-selected', ...color },\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode },\r\n    border: { type: Boolean, reflect: true },\r\n    guide: { type: Boolean, reflect: true },\r\n    leaf: { type: Boolean, reflect: true },\r\n    multiselect: { type: Boolean, reflect: true },\r\n    circular: { type: Boolean, reflect: true },\r\n    ...GSTreeElement.shared\r\n  }\r\n\r\n  // GS-ITEM attributes mapping\r\n  static options = {\r\n    ...GSTreeElement.shared,\r\n    css: {},\r\n    icon: {},\r\n    color: {},\r\n    title: {},\r\n    tooltip: {},\r\n    opened: { type: Boolean },\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  #queued = false;\r\n  #listRef = createRef();\r\n\r\n  #controller = null;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.leaf = false;\r\n    me.multiselect = false;\r\n    me.data = GSDOM.toJson(me, true, true).items;\r\n    me.node = new TreeNode(null, { '#tagName': this.tagName }, null, -1);\r\n    me.itemIcon = 'file-earmark';\r\n    me.closeIcon = 'folder'; // caret-right; chevron-right\r\n    me.openIcon = 'folder2-open'; // caret-down; chevron-down\r\n    me.cssSelected = 'active'; // fw-bold\r\n    me.cssFocus = 'focus-ring';\r\n    me.node[Symbol.for('gs-element')] = me;\r\n    me.#controller = new TreeController(me);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n          class=\"treeview ${classMap(me.renderClass())}\"          \r\n          @click=\"${me.#onClick}\"\r\n          @keydown=\"${me.#onKeyDown}\"\r\n          @keyup=\"${me.#onKeyUp}\">\r\n          <div class=\"list-group\" ${ref(me.#listRef)}>\r\n          ${repeat(me.node.walk(me.node, false, false), (node) => node.key, (node) => html`\r\n            <gs-tree-item .node=\"${node}\"></gs-tree-item>\r\n          `)}\r\n          </div>    \r\n        </div>`;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data') && me.data && !me.#queued) {\r\n      me.#queued = true;\r\n      queueMicrotask(() => {\r\n        me.node.clear();\r\n        me.node.fromJSON(me.data);\r\n        me.#queued = false;\r\n        me.requestUpdate();\r\n      });\r\n    }\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('multiselect') && !this.multiselect) this.node?.deselectAll();\r\n    this.node.multi = this.multiselect;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    if (data instanceof TreeNode) {\r\n      if (data.root !== this.node) this.node = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n\r\n  next(expand = false) {\r\n    const me = this;\r\n    let item = me.nextItem;\r\n    if (!item & me.circular) item = me.#first;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (expand && me.focused?.isFolder) me.focused.open();\r\n    }\r\n    return me.focused;\r\n  }\r\n\r\n  previous(collapse = false) {\r\n    const me = this;\r\n    let item = me.previousItem;\r\n    if (!item & me.circular) item = me.#last;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (item.isFolder && collapse) item.close();\r\n    }\r\n    return me.focused;\r\n\r\n  }\r\n\r\n  expandAll() {\r\n    this.node?.expandAll();\r\n  }\r\n\r\n  collapseAll() {\r\n    this.node?.collapseAll();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open(path) {\r\n    const me = this;\r\n    me.focused?.open();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   * TODO - path navigation\r\n   */\r\n  close(path) {\r\n    const me = this;\r\n    me.focused?.close();\r\n  }\r\n\r\n  clear() {\r\n    this.node?.clear();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  reload() {\r\n    this.clear();\r\n    this.dataController?.read();\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host(this.node.selectedNodes());\r\n  }\r\n\r\n  get focused() {\r\n    return this.#host(this.node.focusedNode());\r\n  }\r\n\r\n  /**\r\n   * Previous visible ge-node-item\r\n   */\r\n  get previousItem() {\r\n    return this.focused?.node.find(n => n?.visible, true, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  /**\r\n   * Next visible ge-node-item\r\n   */\r\n  get nextItem() {\r\n    return this.focused?.node.find(n => n?.visible, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  get #list() {\r\n    return this.#listRef.value;\r\n  }\r\n\r\n  get #first() {\r\n    return this.#list.firstElementChild;\r\n  }\r\n\r\n  get #last() {\r\n    return this.#list.lastElementChild;\r\n  }\r\n\r\n  #host(node) {\r\n    if (Array.isArray(node)) {\r\n      return node.map(n =>n[Symbol.for('gs-element')]).filter( n=> n);\r\n    }\r\n    return node?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  #onClick(e) {\r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const isIcon = icon?.dataset.type === 'state';\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!el.node) return;\r\n\r\n    const me = this;\r\n\r\n    if (me.multiselect) {\r\n      if (isIcon) el.toggleSelection();\r\n    } else {\r\n      el.select(true);\r\n    }\r\n\r\n    const expandable = (me.multiselect && !isIcon) || (!me.multiselect);\r\n    if (el.isFolder && expandable) el.toggle();\r\n\r\n    el.focus();\r\n    el.handle(e);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    const me = this;\r\n    const el = me.focused;\r\n    if (!el) return;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n        me.next();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (el.isFolder) {\r\n          if (el.opened) {\r\n            me.close();\r\n          } else {\r\n            (el.parentItem || el)?.focus();\r\n          }\r\n        } else {\r\n          me.previous();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if (el.isFolder && !el.opened) {\r\n          me.open();\r\n        } else {\r\n          me.next();\r\n        }\r\n        break;\r\n      case 'Enter':\r\n          if (el.isFolder) {\r\n            el.toggle();\r\n          }        \r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!(el?.node)) return;\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        el.handle(e);\r\n        break;\r\n      case 'Tab':\r\n        el.focus();\r\n        break;\r\n      case 'Space':\r\n        el.select(this.multiselect ? !el.selected : true);\r\n        el.focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading ServiceWorkkerElement class\r\n * @module components/ServiceWorkkerElement\r\n */\r\n\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\n/**\r\n * An easy way to register a service worker in the browser.\r\n * @class\r\n * @extends { GSlement }\r\n */\r\nexport class ServiceWorkkerElement extends GSElement {\r\n\r\n    static properties = {\r\n        src: {},\r\n        scope: {},\r\n        module: { type: Boolean, default: false },\r\n        trace: { type: Boolean, reflect: true, default: false },\r\n        disabled: { type: Boolean, reflect: true, default: false }\r\n    }\r\n\r\n    #registration = false\r\n    #workerMessage = null;\r\n    #messageChannel = null;\r\n\r\n    #nocache = false;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#workerMessage = me.#onWorkerMessage.bind(me);\r\n        me.#load();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#unload();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('trace')) {\r\n            me.#ServiceWorkerTraceUpdate();\r\n        }\r\n        if (changed.has('disabled')) {\r\n            me.disabled ? me.#unload() : me.#load();\r\n        }\r\n        super.willUpdate(changed);\r\n    }\r\n\r\n    /**\r\n     * Returns true if the service worker is available in the browser and the src is a valid URL.\r\n     */\r\n    get available() {\r\n        const me = this;\r\n        return 'serviceWorker' in navigator && me.src && GSUtil.isURL(me.src);\r\n    }\r\n\r\n    /**\r\n     * Returns the service worker registration object.\r\n     */\r\n    get registration() {\r\n        return this.#registration;\r\n    }\r\n\r\n    /**\r\n     * Request the service worker to clear its cache.\r\n     * @returns \r\n     */\r\n    clearCache() {\r\n        return this.postMessage(\"CLEAR_CACHE\");\r\n    }\r\n\r\n    /**\r\n     * Request the service worker to pupdate preloads\r\n     * @returns \r\n     */\r\n    refresh() {\r\n        return this.postMessage(\"REFRESH_CACHE\");\r\n    }\r\n\r\n    /**\r\n     * Send a message to the service worker.\r\n     * @param {*} message The message to send to the service worker.\r\n     * @returns {boolean} Returns true if the message was sent, false if the service worker is not active or not registered.\r\n     */\r\n    postMessage(message) {\r\n        const me = this;\r\n        const sts = GSUtil.nonNull(message) && me.isLoaded;\r\n        if (sts) {\r\n            if (me.#messageChannel) {\r\n                me.#messageChannel.port1.postMessage(message);\r\n            } else {\r\n                me.#registration?.active?.postMessage(message);\r\n            }\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Method to handle messages from the service worker.\r\n     * Override this method to handle messages from the service worker.\r\n     * The default implementation does nothing.\r\n     * @param {Event} event \r\n     * @returns {boolean} Return false to stop the event propagation, true to continue.\r\n     */\r\n    onMessage(event) {\r\n        me.#trace('ServiceWorker message received:', event);\r\n        return true;\r\n    }\r\n\r\n    #onWorkerMessage = (event) => {\r\n        const me = this;\r\n        if (event.data) {\r\n            if (me.onMessage(event)) {\r\n                me.emit('message', event.data, true, true, true);\r\n            }\r\n        } else {\r\n            me.#trace('ServiceWorker message is empty:', event);\r\n        }\r\n    }\r\n\r\n    #initChannel() {\r\n        const me = this;\r\n        if (me.#registration?.active) {\r\n            me.#messageChannel = new MessageChannel();\r\n            me.#messageChannel.port1.onmessage = me.#workerMessage;\r\n            me.#ServiceWorkerTraceUpdate();\r\n            me.#registration.active.postMessage('INIT_PORT', [me.#messageChannel.port2]);\r\n            //me.emit('activated', isActive, true, true, true);\r\n        }\r\n    }\r\n\r\n    #ServiceWorkerTraceUpdate() {\r\n        const me = this;\r\n        me.#registration?.active?.postMessage(me.trace ? 'TRACE_ON' : 'TRACE_OFF');\r\n    }\r\n\r\n    // Show a notification to the user that a new version of the app is available\r\n    async #invokeServiceWorkerUpdateFlow(registration) {\r\n        return registration?.waiting?.postMessage('NOTIFICATION_WAITING');\r\n    }\r\n\r\n    // detect Service Worker update available and wait for it to become installed\r\n    #monitorServiceWorkerUpdate(registration) {\r\n        const me = this;\r\n        registration.addEventListener('updatefound', () => {\r\n            // wait until the new Service worker is actually installed (ready to take over)\r\n            registration.installing?.addEventListener('statechange', () => {\r\n                if (registration.waiting) {\r\n                    // if there's an existing controller (previous Service Worker), show the prompt\r\n                    if (navigator.serviceWorker.controller) {\r\n                        me.#invokeServiceWorkerUpdateFlow(registration);\r\n                    } else {\r\n                        // otherwise it's the first install, nothing to do\r\n                        me.#trace('Service Worker initialized for the first time');\r\n                    }\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    // detect controller change and refresh the page\r\n    #monitorController() {\r\n        let refreshing = false;\r\n        navigator.serviceWorker.addEventListener('controllerchange', () => {\r\n            if (!refreshing) {\r\n                window.location.reload();\r\n                refreshing = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    async #unload() {\r\n        const me = this;\r\n        GSLoader.NO_CACHE = me.#nocache;\r\n        if (me.disabled) {\r\n            await me.#registration?.unregister();\r\n        }\r\n        me.#messageChannel?.port1.close();\r\n        me.#messageChannel?.port2.close();\r\n        me.#messageChannel = null;\r\n        me.#registration = null;\r\n    }\r\n\r\n    // Load the service worker\r\n    async #load() {\r\n        const me = this;\r\n        if (me.disabled) return;\r\n        me.#nocache = GSLoader.NO_CACHE;\r\n        GSLoader.NO_CACHE = false;\r\n\r\n        if (!me.available) {\r\n            console.warn('Service Worker is not available in this browser or src is not valid.');\r\n            return;\r\n        }        \r\n        try {\r\n            const opt = me.scope ? { scope: me.scope } : {};\r\n            if (me.module) opt.type = 'module';\r\n            me.#registration = await navigator.serviceWorker.register(me.src, opt);\r\n            me.#trace('ServiceWorker registration started:', me.#registration);\r\n\r\n            me.#monitorController();\r\n            me.#invokeServiceWorkerUpdateFlow(me.#registration);\r\n            me.#monitorServiceWorkerUpdate(me.#registration);\r\n            me.#initChannel(me.#registration);\r\n\r\n            me.#trace('ServiceWorker registration successful with scope: ', me.#registration.scope);\r\n\r\n        } catch (error) {\r\n            me.#registration = false;\r\n            console.error('Service Worker registration failed:', error);\r\n        }\r\n        me.emit('loaded', me.isLoaded, true, true, true);\r\n    }\r\n\r\n    #trace(message, data = '') {\r\n        if (this.trace) {\r\n            console.log(message, data);\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-service-worker');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\n\r\nexport class GSChartElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/bootstrap-lit';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        config: {},\r\n        storage: {},\r\n        height: { type: Number },\r\n        width: { type: Number },\r\n        data: { type: Array },\r\n        options: { type: Object },\r\n    }\r\n\r\n    #canvasRef = createRef();\r\n    #chart = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.height = 0;\r\n        this.width = 0;\r\n        GSChartElement.#init();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#waitInit();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    shouldUpdate(changed) {\r\n        return GSChartElement.#isChart;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#render();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        const me = this;\r\n        if (changed.has('url') || changed.has('config')) me.#render();\r\n        if (changed.has('data') || changed.has('options')) me.#renderData(me.data, me.options);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<canvas ${ref(me.#canvasRef)} \r\n                class=\"${classMap(me.renderClass())}\"\r\n                width=\"${ifDefined(me.width > 0 ? me.width : false)}\" \r\n                height=\"${ifDefined(me.height > 0 ? me.height : false)}\" >\r\n            </canvas>`;\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.#canvasRef.value;\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    refresh() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    updateChart(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n        const me = this;\r\n        try {\r\n            const options = await GSLoader.loadSafe(me.config, 'GET', null, true, {});\r\n            const data = await GSLoader.loadSafe(me.url, 'GET', null, true, []);\r\n            me.data = data;\r\n            me.options = options;\r\n        } catch (error) {\r\n            GSLog.error(null, error);\r\n        }\r\n    }\r\n\r\n    #renderData(data, options) {\r\n        const me = this;\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChartElement.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => o.data = sets.length === 1 ? data : data[i] || []);\r\n\r\n        if (me.#chart) return me.updateChart(opt);\r\n\r\n        const ctx = me.canvas?.getContext('2d');\r\n        if (ctx) {\r\n            me.#chart = new GSChartElement.#Chart(ctx, opt);\r\n        } else {\r\n            GSLog.error(null, 'Failed to get canvas context');\r\n        }\r\n    }\r\n\r\n    async #waitInit() {\r\n        if (!GSChartElement.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        this.requestUpdate();\r\n    }\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    static async #init() {\r\n        const me = GSChartElement;\r\n        if (me.URL_LIB === false) return;\r\n        if (me.#isChart || me.#initializing) return;\r\n        me.#initializing = true;\r\n        try {\r\n            const origin = GSChartElement.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);\r\n            me.#Chart = Chart;\r\n            me.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            me.#initializing = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert DOM tree into a JSON structure\r\n     * \r\n     * @param {HTMLElement} obj HTML element instance to convert\r\n     * @param {string} name DOM attribute name for object key\r\n     * @param {string} value DOM attribute name for object value\r\n     * @param {string} type DOM attribute name for object type\r\n     * @returns {object}\r\n     */\r\n    static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n        if (!(el instanceof HTMLElement)) return {};\r\n\r\n        const nameV = el.getAttribute(name);\r\n        const valV = el.getAttribute(value);\r\n        const typeV = el.getAttribute(type);\r\n\r\n        let obj = null;\r\n\r\n        switch (typeV) {\r\n            case 'array':\r\n                obj = [];\r\n                break;\r\n            case 'object':\r\n                obj = {};\r\n                break;\r\n            default:\r\n                return GSChartElement.#toType(valV, typeV);\r\n        }\r\n\r\n        const childs = Array.from(el.children);\r\n        const isArray = typeV === 'array';\r\n        const isObject = typeV === 'object';\r\n\r\n        childs.forEach(el => {\r\n            const _nam = el.getAttribute(name);\r\n            if (isArray) {\r\n                obj.push(GSChart.toJson(el, name, value, type));\r\n            } else if (isObject) {\r\n                const tmp = GSChartElement.toJson(el, name, value, type);\r\n                obj[_nam] = tmp;\r\n            } else {\r\n                const _val = el.getAttribute(value);\r\n                const _typ = el.getAttribute(type);\r\n                obj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    static #toType(val, type) {\r\n        switch (type) {\r\n            case 'boolean': return val === 'true';\r\n            case 'number': return parseFloat(val);\r\n            default: return val\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-chart');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        try {\r\n            const data = await GSLoader.load(me.url);\r\n            if (!data) throw new Error(`Code URL ${me.url} unreachable!`);\r\n            me.#data = data;\r\n            me.#onHighlight(data);\r\n        } catch (error) {\r\n            GSDOM.setHTML(me.#code, error.message);\r\n        }\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        try {\r\n            const response = me.#worker;\r\n            const blob = new Blob([response], { type: 'application/javascript' });\r\n            const blobURL = URL.createObjectURL(blob);\r\n            const worker = new Worker(blobURL);\r\n            worker.onmessage = me.#onMessage.bind(me);\r\n            worker.postMessage({ data: data, url: blobURL, append: append });\r\n        } catch (error) {\r\n            GSDOM.setHTML(me.#code, error.message);\r\n        }\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSMarkdownElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        history: { type: Number },\r\n        maxHeight: { type: Number, attribute: 'max-height' },\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        this.history = 10;\r\n        this.dynamicStyle(this.#styleID);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const me = this;\r\n        await me.#initLib();\r\n        if (globalThis.showdown) {\r\n            const opt = { tasklists: true, tables: true };\r\n            me.#converter = new globalThis.showdown.Converter(opt);\r\n            super.connectedCallback();\r\n        }\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('url')) {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url);\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const height = me.maxHeight > 0 ? `${me.maxHeight}px;` : false;\r\n        const opt = { 'max-height': height }\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        return html`<div ${ref(me.#containerRef)} class=\"overflow-auto ${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [me.#styleID] : true,\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        me.#onURL(url);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n\r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n\r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });\r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n            GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n\r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list = GSDOM.queryAll(me.#container, qry);\r\n        requestAnimationFrame(() => list.forEach(el => GSDOM.toggleClass(el, css)) );\r\n    }\r\n\r\n    #handleLinks() {\r\n        const me = this;\r\n        const links = GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n            .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')))\r\n            .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n            .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/'))\r\n            .forEach(el => GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me)));\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        if (me.#cache.length === 0 ) return me.#first;\r\n        const url = me.#cache.pop();\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if (me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdownElement.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-markdown');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSMonacoElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #editor = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = '';\r\n        this.theme = 'vs-dark';\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonacoElement.#init();\r\n        super.connectedCallback();\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.#onMonacoReady();\r\n        super.firstUpdated();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        if (changed.has('theme')) me.#onTheme(me.theme);\r\n        if (changed.has('target')) me.#onTarget(me.target);\r\n        if (changed.has('url')) me.#onURL(me.url);\r\n        if (changed.has('language')) me.#onLanguage(me.language);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#containerRef)} class=\"${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        return this.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    get owner() {\r\n        return this.parentElement;\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        try {\r\n            const data = url ? await GSLoader.load(url) : null;\r\n            if (!data) throw new Error(`Code URL ${url} unreachable!`);\r\n            me.code = '';\r\n            me.#onLanguage(me.language);\r\n            me.code = data;\r\n        } catch (error) {\r\n            me.code = error.message;\r\n        }\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n\r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner?.getBoundingClientRect();\r\n            if (rect) {\r\n                me.#editor.layout({ width: rect.width, height: rect.height });\r\n            }\r\n        });\r\n    }\r\n\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    static #initialized;\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonacoElement.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        const url = GSMonacoElement.URL_LIB;\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${url}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${url}'};\r\n                importScripts('${url}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({\r\n                paths: { 'vs': `${GSMonacoElement.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false }\r\n            });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static async #init() {\r\n        const me = GSMonacoElement;\r\n        if (me.#initialized) return;\r\n        me.#initEnv();\r\n        await me.#initLib();\r\n        await me.#initMonaco();\r\n        me.#initialized = true;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-monaco');\r\n    }\r\n\r\n}"],"names":["GSVersion","version","build","gsstyles","GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSUtil$1","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Date","Boolean","value","toString","val","normalize","toLowerCase","str","obj","replace","x","g","split","reverse","join","word","toUpperCase","slice","map","i","capitalize","constructor","o","Array","isArray","isBool","isDate","isNumber","isString","min","max","Math","match","isNull","dft","language","sep","numberSeparator","extractNumber","replaceAll","url","test","trim","startsWith","endsWith","pattern","charset","floor","random","length","navigator","languages","flags","RegExp","isStringEmpty","undefined","Intl","NumberFormat","format","DateTimeFormat","string","reg","keys","isJsonString","isJsonType","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","separator","filter","capitalizeAll","tpl","params","names","vals","values","Function","text","textArea","document","createElement","innerHTML","isStringNonEmpty","window","forEach","a","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","result","permissions","query","state","clipboard","writeText","readText","GSFunction$1","GSFunction","isFunction","includes","own","isFunctionDefined","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","from","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","func","leading","debounceLifo","debounceFifo","timer","GSID","prefx","next","s","l","h","charCodeAt","isProxy","GSAttr","isHTMLElement","asBool","setAttribute","removeAttribute","isInstance","getAttribute","attr","asNum","toJson","set","NaN","stringify","entries","kv","attributes","host","opt","recursive","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","children","proxify","safe","unsafe","dflt","default","multi","hasAttribute","toStringArray","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","num","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","first","getDay","mondayFirst","isMondayFirst","days","repeat","push","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","d","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","m","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","k","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Locale","weekInfo","firstDay","charAt","toLocaleString","size","isLowercase","hour","hour12","pop","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","getDateFormat","regex","getFormattedDateRegex","parseFormattedDate","groups","y","Y","valueOf","GSData","currency","extract","key","Set","b","every","index","toSorted","compareArrays","second","advanced","arr","indexOf","list","it","cfg","toType","rule","toRegex","childElementCount","querySelector","fmt","style","fields","limit","sts","rec","filterRecord","isPrimitive","filterSimple","filterComplex","filterValue","primitive","found","flt","toCheck","matchDate","matchNumber","op","toLocaleLowerCase","local","toLocaleDateString","iso","toISOString","operator","sort","sortPair","ord","idx","col","v1","v2","compare","order","compareNum","compareString","compareBool","s1","s2","localeCompare","ignoreNull","seg","writeSingleToObject","tree","hasOwnProperty","partial","r","readFromProperty","readFromObject","GSDOM","walk","isTemplateElement","cleanup","content","remove","nodeValue","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","wrap","appendChild","link","slot","isText","tagName","FORMEL","shadow","queryAll","HTMLButtonElement","hasClass","ownClazz","inheritance","pel","HTMLSelectElement","HTMLSlotElement","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","parentAll","ShadowRoot","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","childAll","child","parentElement","offsetParent","c","HTMLBodyElement","root","getByID","documentElement","qry","levels","proxy","res","receiver","sanitize","sanitizer","setHTML","Document","textContent","requestAnimationFrame","assign","toggleClass","contains","unwrap","querySelectorAll","defaults","valueAsNumber","selectedOptions","checked","defaultValue","getValue","styleValue","textTransform","ignore","checkValidity","fromElement2Object","fromObject2Element","objectPathExist","fromValue","noEmpty","writeToObject","toValue","plain","definitions","innerText","props","allProperties","getAsNum","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","for","sub","location","hash","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","CLEANUP1","whiteList","asState","isAllowed","toValidationError","allowElement","allowTag","fetch","ok","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","isFormElement","resetSelect","typed","dispatch","isSelect","options","selected","dispatchEvent","Event","bubbles","composed","properties","mergeObjects","template","CustomEvent","globalDispatch","detail","message","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","callFunction","sendSuspended","once","chained","suspended","removeEventListener","unlisten","toSignal","internal","evt","propagate","immediate","preventDefault","stopPropagation","stopImmediatePropagation","sender","cancelable","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","hasFunction","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","delete","removeListener","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","rid","waitAnimationFrame","onResize","attach","waitPageLoad","GSAbortController","AbortController","super","abort","clearInterval","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","isFunctions","getFilter","exec","create","GSDynamicStyle","toName","raw","deleteRule","getRule","setRule","sync","insertRule","updateRule","isImportant","setProperty","source","dynamicStyleSheetByID","dynamicStyleSheet","gsClass","dynamicRule","dynamicRuleByID","dynamicStyle","dynamicStyleByID","GSCacheStyles","store","dynamic","styles","adopt","adoptedId","GSAdoptedEngine","now","preload","timerID","setInterval","sheets","adoptable","adoptSheet","update","scheduled","sorted","ID","cssText","monitorAttributes","ownerNode","adoptStyle","disconnect","mutationList","onAttributeChange","attributeFilter","attributeOldValue","HTMLLinkElement","rel","as","HTMLStyleElement","then","adoptLink","registerFilter","onMonitorFilter","onMonitorConnect","onMonitorDisconnect","init","GSLoader","GS_TEMPLATE_URL","origin","GS_ROUTER_URL","rootURL","defaultURL","TEMPLATE_URL","ROUTER_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","UNIQUE","searchParams","append","level","isHTML","getRouterURL","loadSafe","routerURL","normalizeURL","routerPath","getTemplateURL","templateURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","isFunc","GSTemplateCache","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSAttributeHandler","anchor","call","inject","property","swap","trigger","hashed","calls","toggles","triggers","targetList","handle","targets","handleTarget","handleBinding","handleAction","handleSwap","handleInject","handleAttribute","handleProperty","handleToggle","handleTrigger","handleEvent","handleCall","handleExec","handleTemplate","field","form","isForm","HTMLFormElement","isField","toObject","isAttributeJSON","jsonToAttr","toggleAttribute","isPropertyJSON","toggleProperty","tout","symbol","handleContent","clean","useDef","definition","toHTML","gsHashed","applyContent","applyTemplate","clone","insertAdjacent","detach","off","parentComponent","DEFINITION","override","GSBeep","AudioContext","webkitAudioContext","audioContext","duration","frequency","volume","isAvailable","audioCtx","oscillatorNode","createOscillator","gainNode","createGain","connect","destination","gain","start","currentTime","stop","onended","isActive","hasBeenActive","userActivation","GSEnvironment","isMobile","userAgentData","mobile","userAgent","isDesktop","isWebkit","protocol","strVal","brands","brand","strAgt","isEdge","isDevice","platform","screen","otype","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","ps","p","GSEvent","EventTarget","listeners","listener","abortable","controller","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSItem","autofocus","validate","GSElement","tags","collect","GS_LOCALIZATION_LANGUAGE","lang","GSLocalization","GSLocalizationImpl","queue","queued","GS_LOCALIZATION_URL","translate","deft","getLanguage","texthash","reset","promises","loadWait","sequential","Pragma","isDefault","hk","details","GSPopper","asRect","sx","scrollX","sy","scrollY","top","bottom","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","arrow","pos","fromPlacement","isPlacementValid","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","aopt","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","applyDynamicStyle","GSQueryCSS","object","GSQuery","instance","GSRouter","enabled","hashCallback","onHashChange","getRouter","loadDefinition","enable","disable","route","unregister","deepClone","px","fromJson","GS_DEFINITION_URL","initialize","GS_ROUTER_WAIT","GSTheme","switch","theme","STORAGE","htmlEl","bsTheme","matchMedia","q","URLSearchParams","onTheme","settings","getSystemDefaultTheme","darkMode","lightMode","setup","BinaryTreeNode","isLeaf","hasChildren","isRoot","BinaryTree","inOrderTraversal","postOrderTraversal","preOrderTraversal","insert","parentNodeKey","canInsertLeft","canInsertRight","find","Node","previous","release","toJSON","DoublyLinkedList","tail","previousNode","insertAt","splice","insertFirst","insertLast","getAt","removeAt","full","acc","toArray","iterator","isInvalid","isInvalidIndex","isInteger","LinkedList","cb","asValues","asNodes","Stack","item","unshift","peek","isEmpty","Queue","enqueue","dequeue","Tree","folder","leaf","up","levelID","nodeID","isFolder","hasMore","firstChild","lastChild","down","previousSibling","inclusive","flat","iterate","filtered","Sr","newOne","findByKey","flatten","fromJSON","hasParent","DataSelector","SELECT","asArray","removeSelected","isSelected","GSReadWriteRegistryImpl","handlers","INTERNAL","addHandler","removeHandler","getHandler","newHandler","verify","rw","resetRegistry","GSReadWriteRegistry","GSAbstractReadWrite","processors","addProcessor","processor","removeProcessor","isRegistered","notify","onRead","postRead","onWrite","postWrite","addSelected","clearSelected","getSelected","GSReadWrite","reader","writer","mode","skip","TYPE","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCachedReadWrite","reformat","records","postFilter","sortData","filterData","search","read","TreeNode","opened","focused","focusedNode","selectedNode","controllers","select","focus","open","addController","removeController","visible","expand","collapse","changed","onFocusChanged","onSelectionChanged","isPartialySelected","selectAll","deselectAll","selectionFlag","onSelectAll","onDeselectAll","selectedNodes","refresh","onRefresh","loading","onLoad","expandAll","collapseAll","expanded","collapsed","onExpand","onCollapse","onAppend","onInsert","GSTreeReader","resetData","litUrl","GS_LIT_URL","litModule","ReactiveController","ReactiveElement","AsyncDirective","AsyncReplaceDirective","CSSResult","Directive","LitElement","PartType","TemplateResultType","UnsafeHTMLDirective","UntilDirective","_$LE","_$LH","adoptStyles","asyncAppend","asyncReplace","choose","classMap","clearPart","createRef","defaultConverter","directive","getCommittedValue","getCompatibleStyle","getDirectiveClass","guard","ifDefined","insertPart","isCompiledTemplateResult","isDirectiveResult","isServer","isSingleExpression","isTemplateResult","keyed","literal","live","noChange","notEqual","nothing","range","ref","removePart","render","setChildPartValue","setCommittedValue","staticHtml","staticSvg","styleMap","supportsAdoptingStyleSheets","svg","templateContent","unsafeCSS","unsafeHTML","unsafeSVG","unsafeStatic","until","when","withStatic","gsAction","gsAnchor","gsAttribute","gsCall","gsExec","gsInject","gsProperty","gsSwap","gsTarget","gsTemplate","gsToggle","gsTrigger","gsValue","gsTimeout","DatasetDirective","part","srcset","DOMStringMap","remap","hasOwn","descriptors","getOwnPropertyDescriptors","listProperties","listGetters","getPrototypeOf","literalTemplate","listGettable","cssMap","CssMapDirective","partInfo","ATTRIBUTE","strings","classInfo","_previousClasses","_staticClasses","notEmpty","newVal","oldVal","numGT0","numGE0","numLT0","numLE0","AutocapitalizeTypes","autocapitalize","hasChanged","AutocompleteTypes","autocomplete","AutocorrectTypes","autocorrect","ButtonTypes","isType","buttonType","is","ColorTypes","color","EnvironmentTypes","environment","InputTypes","inputType","NavTypes","nav","OrientationTypes","PlacementTypes","PositionTypes","ProtocolTypes","SizeTypes","normal","medium","small","large","big","extra","stringArrayConverter","fromAttribute","toAttribute","AdoptedController","hostConnected","hostDisconnected","isGlobal","rules","removeRule","renderRoot","onAdopted","AttributeController","eventName","onNotify","isFormEl","ContentController","refs","removeContent","hostUpdated","isSelf","contentRef","renderOptions","renderBefore","previousElementSibling","keep","DataController","readCallback","writeCallback","errorCallback","selectCallback","onSelect","write","storeID","firstPage","page","lastPage","nextPage","prevPage","storage","requestUpdate","onDataRead","onDataWrite","onDataError","ElementMoveController","attached","cursorX","cursorY","mouseUpCallback","mouseDownCallback","mouseMoveCallback","onMouseUp","onMouseDown","onMouseMove","attachEvent","removeEvent","onStartMove","onEndMove","onCursorRight","onCursorLeft","onCursorUp","onCursorDown","LocalizationController","hostUpdate","updateLanguage","updateLanguageExt","langauge","onLanguage","OrientationController","hosts","onOrientation","RENDER_SYMBOL","TemplateController","lastRef","isPrefetch","GS_TEMPLATE_PREFETCH","templateRef","toKey","schedule","hasUpdated","templateInjected","simple","slots","hasSlots","hasSimple","preprocessTemplate","templateSimple","templateSlots","templates","isTplEl","cacheable","err","gsCache","tasks","task","process","finally","ThemeController","updateTheme","updateThemeExt","SlotController","onSlotChanged","assignedElements","onSlotInjected","rtl","reflect","hide","rounded","bordered","onready","os","browser","adopted","uiHandler","localization","dataController","slotController","themes","refx","attributeChangedCallback","oldValue","newValue","connectedCallback","isBindable","binded","disconnectedCallback","detachListeners","ruleName","shouldUpdate","changedProperties","createRenderRoot","firstUpdated","willUpdate","updateHide","updateStorage","isAllowRender","renderUI","renderTemplate","renderClass","border","mapCSS","flag","waitEvent","direction","isFocused","isValidEnvironment","isValidBrowser","isValidOS","isValidProtocol","isValidOrientation","isGenerated","elementStyles","styleSheet","cssRule","setCSSProperty","ElementNavigationController","circular","multiple","onKeyUp","onClick","onFocusIn","onFocusOut","lastElementChild","blur","onSelected","onDeselected","onFocused","isNavigable","isNav","relatedTarget","composedPath","GroupController","busEvent","busCallback","onBusEvent","GSRouterElement","router","updated","GSAccordionElement","autoclose","cssItem","cssHeader","cssBody","renderItems","close","isItemCloser","GSAccordionItemElement","component","GSAlertElement","closed","closable","pause","interval","handleBillboard","show","isBillboard","button","billboard","GSButtonElement","clickCss","hoverCss","toggleColor","outline","toggling","icon","tooltip","refEl","refIco","onMouseOver","onMouseOut","onDisabled","iconEl","animate","onHref","isReset","isSubmit","submit","buttonEl","hover","iconHtml","renderIcon","GSCalendarElement","editable","minYear","maxYear","arrovPrev","arrowNext","cssDays","cssToday","cssWeeks","cssMonth","cssYear","cssNav","cssSelected","arrowPrev","previousMonth","nextMonth","previousYear","nextYear","formatted","updateTarget","week","dayList","months","monthsHTML","yearHTML","onKey","onDay","daysHTML","tgt","HTMLInputElement","valueAsDate","isToday","today","c1","c2","current","monthList","onMonth","optionsHTML","onYear","isList","listID","selectedIndex","yearEl","validity","valid","GSCardElement","imageStyle","overlay","align","image","subtitle","footer","header","colorText","colorBack","colorBorder","cssTitle","cssSubtitle","cssFooter","cssImage","styleID","isVertical","renderVertical","renderHorizontal","imageTop","imageBottom","isBefore","startClass","endClass","startHtml","images","endHtml","isHorizontal","imageSlot","GSCenterElement","GSMenuElement","auto","dark","menuRef","closeSubmenus","updatePosition","onMouseLeave","submenu","dropend","dropstart","popup","caller","isMouseOrPointerEvent","renderSubmenu","renderHeader","renderMenu","renderDivider","menu","toSubmenu","menuItem","isSubmenu","innerWidth","GSContextElement","isInTable","attachTarget","assignedSlot","onPopup","GSCompareElement","background","before","after","elRef","clipRef","slideRef","mouseController","elPosition","splitter","onDoubleClick","isAuto","pct","isFixed","slider","clip","GSControllerElement","module","changes","GSCopyrightElement","company","isCompany","isYear","GSDataHandler","autoload","autorefresh","config","handler","lifoReadRef","lifoWriteRef","itemHolder","PROPERTIES","initLIFO","updateHandler","formatSort","formatFilter","isDebug","gsDebug","isCached","formated","save","verifyHandler","callOnceLifo","lifoReadRefCallback","lifoWriteRefCallback","lifoCall","GSDialogElement","standard","escapable","cancelText","confirmText","minWidth","buttonAlign","iconCancel","iconConfirm","colorCancel","colorConfirm","cssCancel","cssConfirm","cssContent","pass","dialogRef","btnConfirmRef","btnCancelRef","CSS","TITLE_CSS","HEADER_CSS","ALIGN","CANCEL","CONFIRM","updateStack","_shouldUpdate","allowed","onOpenChanged","STACK","dialog","showModal","focusable","isHashed","renderConfirm","onConfirm","renderCancel","onCancel","renderFooter","renderContent","card","onForm","onSubmit","info","confirm","prompt","forms","f","tab","btnConfirm","btnCancel","QUERY_INPUT","isVisible","GSDrawerElement","backdrop","scroll","fingers","transition","cssHead","onLeave","onEnter","hasHeader","headSlot","GSDropdownElement","renderButton","buttonClass","btn","GSEmailElement","user","domain","dev","updateUser","updateDomain","GSFormElement","acceptCharset","autocopy","autoselect","autovalidate","autoreport","enctype","novalidate","block","beep","formRef","lastState","onBlur","onChange","onInvalid","elementTemplate","submitButton","resetButton","elements","inputs","reportValidity","onValidate","tplEl","GSFormGroupElement","layout","label","description","placeholder","mask","spellcheck","noAccessor","rows","cols","step","minLength","maxLength","selectable","autoid","reveal","readonly","required","invalidMessage","cellField","cellLabel","cssLabel","cssField","inputRef","ouptutRef","patterns","internals","attachInternals","validateAllowed","ICON","CSS_LABEL","CSS_LABEL_CELL","formComponent","SELECTOPT","renderFloating","cssCheck","renderInput","renderOutput","renderLabel","renderInfo","renderLabelWrap","renderField","isIcon","CSS_ICON","renderTooltip","isRange","idattr","isFieldset","radioLayout","fieldSet","inputHTML","selectHTML","isTextArea","fld","vertical","initStyle","renderOption","listHTML","outerHTML","isBlock","isBeep","onInput","isSwitch","isCheckable","isFloating","setFormValue","setValidity","validationMessage","tagList","isCheck","isRadio","isChecked","isPassword","isEmail","isURL","GSFormPanelElement","renderFormGroup","formaction","formenctype","formmethod","formnovalidate","formtarget","maxlength","minlength","GSGroupElement","controllerGroup","initData","prerender","of","renderWrappedUI","renderWrappedClass","childTagName","generated","childByName","getName","GSIconElement","superColor","_clicked","_hovered","postAnimate","fs","GSIndentElement","multiplier","numdef","GSImageElement","invert","grayscale","brightness","contrast","saturate","hue","sepia","alt","imageRef","complete","renderStyle","buildFilter","GSLayoutElement","resizable","autofit","vPos","hPos","els","dyncss","horizontal","lev","tc","dir","did","panelCSS","panelStyle","resize","grow","vpos","hpos","GSLinklement","ping","GSListElement","GSListItemElement","initial","isMatchHashBang","renderFirst","renderSecond","itemCSS","itemStatusCSS","isSelectable","renderText","activeCSS","cssActive","inactiveCSS","cssInactive","GSMouseElement","pageX","pageY","screenX","screenY","offsetX","offsetY","onMouse","GSMovableElement","onMove","cursor","updateCursor","GSNavElement","isTab","GSNavItemElement","badge","badgeColor","badgeValue","parentType","badgeUI","itemsCSS","buttonCSS","buildCSS","cssButton","navType","GSOverlayElement","autoremove","radius","styleID2","innerHeight","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathStr","createSVGPathString","fill","pointerEvents","windowX","windowY","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPagerElement","pages","labelFirst","labelLast","labelNext","labelPrevious","half","renderPrevious","renderItem","renderNext","renderLast","pagination","decodeHTMLEntities","toTarget","ctrl","GSPopupElement","wMin","wMax","hMin","hMax","panelRef","onAuto","reposition","postPopup","popupFixed","panel","overflowH","overflowV","GSPopoverElement","arrowRef","arrowID","attachEvents","popover","fade","isFocusTrigger","isHoverTrigger","popupAbsolute","onFocus","GSProgressElement","updateStyle","percentage","onKeySelect","increase","decrease","trunc","old","GSSpinnerElement","pulsar","GSSplitterElement","styleTGT","cssUpdate","lock","updateMouse","isPreceeding","isStyleValue","styleDynamic","lockable","csize","cls","gsSplitter","updateX","updateY","dx","GSTabItemElement","updateCSS","tabCSS","panelByName","GSTabPanelElement","tabByName","tabs","GSTabGroupElement","findPanel","isAfter","renderTabs","panels","renderPanels","GSTableElement","colspan","hidden","fixed","filterType","cssFilter","colorFilter","colorHead","colorSelect","colorSort","stripedColumn","divider","striped","grid","borderless","columns","datacolumn","multisort","multiselect","protected","sortable","sortOrder","headColor","CELLS","table","stripedColumns","renderFilters","onSort","entry","renderColumn","renderRecord","renderEmpty","renderHandler","columnType","columType","input","valueAt","row","cell","cfgType","timestamp","dataType","renderFilter","hasSub","onFilter","listid","icons","sortType","cells","remapRecord","renderCell","record","elementTofilter","column","getElementIndex","prepareSorter","isComplex","tr","GSTagElement","converter","appendable","closeColor","cssClose","cssTag","dataListRef","renderTags","renderList","updateTag","KEYS","srcElement","removeTag","addTag","isMax","datalist","optEl","tagEl","renderTag","tagClass","btnClass","GSTextElement","GSTooltipElement","arrowStyle","arrowEl","panelEl","refLocal","refGlobal","GSTemplateElement","CopySelectController","clickCallback","copyCallback","onCopy","writeToClipboard","MaskController","_","back","prev","initRules","j","buildSlots","findIndex","buildAccept","toPattern","isMatch","setCustomValidity","setSelectionRange","substring","selectionStart","selectionEnd","lastIndex","maskType","chars","masks","special","MultipatternController","multipattern","NumberController","PasswordController","revealing","isReveal","altKey","TextController","InteractiveController","monitorCallback","onMonitor","formElements","strict","isInList","togleEl","dataGroup","togleOption","isButtonElement","ComboController","ListController","ValidityController","processing","togglUI","onBlock","report","onAutoValidity","EventsMixin","mixin","prototype","FormController","onReset","onFormData","ControllerHandler","copyselect","typeController","validityController","comboController","formController","invoke","initControllers","prepare","isInput","initIinputControllers","initTextAreaControllers","isDataList","GSExtButtonElement","observedAttributes","controllerHandler","formEl","preupdate","onFormState","clickFn","rateLimit","debounce","requestSubmit","GSExtInputElement","maskController","patternController","listController","isCheckBox","updateMask","updateMultipattern","updateList","isMulti","GSExtTextAreaElement","HTMLTextAreaElement","GSExtSelectElement","objToHTML","GSExtDataListElement","HTMLDataListElement","setIf","GSExtFormElement","isShadowed","disableInput","enableInput","childrens","GSBreadcrumbElement","spacing","updateChildren","$text","GSBreadcrumbItemElement","generate","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBoxElement","cssList","cssInput","maxFileSize","listEl","fileEl","dragging","TITLE","onDragenter","onDragleave","onDrop","onPaste","dataTransfer","hasFile","dropEffect","clipboardData","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","validAttachments","GSTimeFormat","toLocaleTimeString","GSDateFormat","GSYearFormat","GSCurrencyFormat","GSStepStyle","GSStepElement","iconCSS","titleCSS","INACTIVE","ICON_CSS","GSStepsElement","steps","isFirst","isLast","COMPLETED","SELECTED","GSNotificationElement","BOTTOM_END","DEFAULT","positionCSS","dismiss","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","dlg","nn","isNativeSupported","isGranted","permission","GSToastElement","pending","visibilityChange","isVisibilityChanged","pendingUpdate","validParent","renderWithHeader","renderSimple","isToast","isNotify","AbstractTreeController","addNodeController","removeNodeController","oldNode","TreeController","toggleState","addedNode","insertedNode","onRemove","GSTreeItemElement","renderSpinner","cssFocus","status","toggleSelection","parentItem","checkColor","checkColorSelected","ui","itemIco","itemIcon","openIcon","closeIcon","renderIndent","renderMulti","GSTreeElement","guide","shared","listRef","nextItem","previousItem","reload","expandable","ServiceWorkkerElement","scope","trace","registration","workerMessage","messageChannel","nocache","onWorkerMessage","unload","ServiceWorkerTraceUpdate","available","clearCache","postMessage","nonNull","isLoaded","port1","onMessage","initChannel","MessageChannel","onmessage","port2","waiting","monitorServiceWorkerUpdate","installing","serviceWorker","invokeServiceWorkerUpdateFlow","monitorController","refreshing","GSChartElement","URL_LIB","GS_URL_CHART","canvasRef","chart","waitInit","destroy","isChart","renderData","canvas","updateChart","div","toBase64Image","quality","sets","datasets","ctx","getContext","Chart","initializing","registerables","nameV","valV","typeV","childs","isObject","_nam","GSChart","_val","_typ","GSHighlightElement","GS_URL_HLJS","codeRef","onTarget","onURL","onHighlight","hasLangauge","highlight","injectCSS","terminate","response","worker","blobURL","Worker","langs","GSMarkdownElement","GS_URL_MARKDOWN","history","maxHeight","containerRef","initLib","showdown","tasklists","tables","Converter","toCache","fromCache","container","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","script","GSMonacoElement","GS_URL_MONACO","editor","onMonacoReady","monaco","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","automaticLayout","minimap","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","paths","vs","initialized","initEnv","initMonaco"],"mappings":"AAaO,MAAMA,UAEEC,qBACP,MAAO,OACV,CAEUC,mBACP,OAAO,SACV,ECdO,MAACC,EAAW,wkCCMjB,MAAMC,MAKZC,gBAAiB,EACjBA,gBAAiB,EAOjBA,YAAYC,EAAIC,GACfC,MAAKC,EAAOH,EAAIC,GAAK,EAAM,OAC3B,CAODF,YAAYC,EAAIC,GACfC,MAAKC,EAAOH,EAAIC,GAAK,EAAM,OAC3B,CAODF,aAAaC,EAAIC,GAChBC,MAAKC,EAAOH,EAAIC,GAAK,EAAM,QAC3B,CAODF,aAAaC,EAAIC,GACZH,MAAMM,SAASF,MAAKC,EAAOH,EAAIC,GAAK,EAAO,QAC/C,CAQDF,WAAWC,EAAIC,EAAKI,GACnBH,MAAKC,EAAOH,EAAIC,EAAKI,EACrB,CAEDN,SAAcC,EAAIC,EAAKI,EAAQC,GAC9B,IAAMD,IAAUH,KAAKK,QAAU,OAC/B,MAAMC,EAAMR,EAAK,GAAGA,EAAGS,eAAeT,EAAGU,OAAOT,IAAQA,EACxD,IAAIU,EAAKC,QAAQN,GAAQ,OACzBK,EAAmB,mBAAPA,EAAoBA,EAAKC,QAAQC,IAC7CF,EAAGH,GACCP,aAAea,OAAOH,EAAGV,EAC7B,QAGAc,OAAOC,KAAKlB,MACZ,EC/DK,IAAAmB,EAAA,MAAMC,OAEZnB,YAAoC,GAAtBoB,WAAWC,QACzBrB,gBAAkB,mBAClBA,SAAyB,qCAEzBA,gBAAmBsB,IAAgBC,MAAMC,WAAWF,KAAOG,SAASH,GAEpEtB,cAAiB0B,GAAeA,aAAaC,KAE7C3B,cAAiB0B,GAA4B,kBAANA,GAAmBA,aAAaE,QAEvE5B,gBAAkB6B,GAA0B,iBAAVA,EAElC7B,cAAgB6B,GAASA,QAEzB7B,gBAAkB,CAAC6B,EAAQ,IAAMA,EAAMC,SAAS,GAEhD9B,cAAgB,CAAC+B,GAAM,KACtB,MAAML,EAAIP,OAAOa,UAAUD,GAAKE,cAChC,MAAa,SAANP,GAAsB,MAANA,CAAS,EAGjC1B,mBAAqB,CAACkC,EAAM,GAAIC,IAAQD,EAAIE,QAAQ,cAAc,CAACC,EAAGC,IAAMH,EAAIG,KAEhFtC,eAAkBkC,IAASA,GAAO,IAAIK,MAAM,IAAIC,UAAUC,KAAK,IAE/DzC,kBAAoB,CAAC0C,EAAO,KAAOA,EAAOA,EAAK,GAAGC,cAAgBD,EAAKE,MAAM,GAAGX,cAAgB,GAEhGjC,qBAAuB,CAAC0C,EAAO,GAAIH,EAAQ,MAAQG,EAAKH,MAAMA,GAAOM,KAAI,CAACnB,EAAGoB,IAAM3B,OAAO4B,WAAWrB,KAAIe,KAAKF,GAE9GvC,sBAAwB,CAAC0C,EAAO,KAAOA,EAAKH,MAAM,KAAKM,KAAI,CAACnB,EAAGoB,IAAMA,EAAI3B,OAAO4B,WAAWrB,GAAKA,IAAGe,KAAK,IAExGzC,iBAAmB,KAAQ,MAAM,IAAIe,MAAM,oCAAmC,EAE9Ef,kBAAqBC,GAAOA,aAAcA,EAAG+C,YAE7ChD,mBAAsBiD,IAAOC,MAAMC,QAAQF,KAAO9C,KAAKiD,OAAOH,IAAM9C,KAAKkD,OAAOJ,IAAM9C,KAAKmD,SAASL,IAAM9C,KAAKoD,SAASN,IAExHjD,aAAe,CAAC+B,EAAM,EAAGyB,EAAM,GAAIC,EAAM,MAASC,KAAKD,IAAIC,KAAKF,IAAIC,EAAK1B,GAAMyB,GAE/ExD,qBAAuB,CAAC+B,EAAM,KAAOA,EAAI4B,MAAM,gBAAgB,GAE/D3D,eAAiB6B,IAAUV,OAAOyC,OAAO/B,GAEzC7B,eAAe+B,GACd,OAAOmB,MAAMC,QAAQpB,GAAOA,EAAM,CAACA,EACnC,CAED/B,aAAa+B,EAAK8B,EAAM,EAAGC,GAE1B,GADAA,EAAWA,GAAY3C,OAAO2C,SAC1B3C,OAAOoC,SAASxB,GAAM,CACzB,MAAMgC,EAAM5C,OAAO6C,gBAAgBF,GACnC/B,EAAMZ,OAAO8C,cAAclC,IAAMmC,WAAWH,EAAK,KAAOhC,CACxD,CACD,OAAOZ,OAAOmC,SAASvB,GAAOP,WAAWO,GAAO8B,CAChD,CAQD7D,aAAe,CAACmE,EAAM,KAAO,8CAA8CC,KAAKD,EAAIE,QAEpFrE,cAAgB,CAAC+B,EAAM,KAAOA,EAAIsC,OAAOC,WAAW,MAAQvC,EAAIsC,OAAOE,SAAS,KAQhFvE,oBAAsB,CAACwE,EAAU,2BAA4BC,EAAU,qBAAuBD,EAAQpC,QAAQ,QAAQ,IAAMqC,EAAQf,KAAKgB,MAAMhB,KAAKiB,SAAWF,EAAQG,WAM5Jd,sBACV,OAAOe,UAAUf,SAAWe,UAAUf,SAAWe,UAAUC,UAAU,EACrE,CAQD9E,eAAe+B,EAAKgD,GACnB,OAAIhD,aAAeiD,OAAejD,EAC3BZ,OAAO8D,cAAclD,QAAOmD,EAAY,IAAIF,OAAOjD,EAAKgD,EAC/D,CAOD/E,wBAAwB8D,GACvB,OAAOqB,KAAKC,aAAatB,GAAUuB,OAAO,KAAK,EAC/C,CAODrF,uBAAuB8D,GACtB,OAAOqB,KAAKC,aAAatB,GAAUuB,OAAO,KAAM,EAChD,CASDrF,eAAeqC,EAAI,EAAGmB,EAAM,EAAGC,EAAM,GACpC,OAAOpB,GAAKmB,GAAOnB,GAAKoB,CACxB,CAODzD,qBAAqB8D,OAAWoB,GAE/B,OADkB,IAAIC,KAAKG,eAAexB,GAAUuB,OAAO,IAAI1D,KAAK,IAAM,EAAG,IAE3ES,QAAQ,OAAQ,QAChBA,QAAQ,KAAM,MACdA,QAAQ,IAAK,KACbA,QAAQ,KAAM,MACdA,QAAQ,IAAK,IACf,CAODpC,gBAAgBuF,EAAS,IACxB,MAAM1C,EAAM,CACX,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,KAAK,SACL,IAAK,SACL,KAAM,OACN,KAAM,OACN,KAAM,2BACN,IAAK,SACL,KAAM,SACN,IAAK,UAEA2C,EAAM,IAAIR,OAAO,IAAIhE,OAAOyE,KAAK5C,GAAKJ,KAAK,OAAQ,MACzD,OAAO8C,EAAOnD,QAAQoD,GAAM7B,GAAWd,EAAIc,IAC3C,CAED3D,oBAAoB+B,EAAM,IACzB,MAAqB,iBAAPA,IAAoBA,EAAIuC,WAAW,MAAQvC,EAAIuC,WAAW,KACxE,CAODtE,kBAAkB+B,EAAM,IACvB,OAAQZ,OAAOyC,OAAO7B,KAASmB,MAAMC,QAAQpB,IAAsB,iBAAPA,EAC5D,CAOD/B,cAAc+B,EAAM,IACnB,OAAOZ,OAAOuE,aAAa3D,IAAQZ,OAAOwE,WAAW5D,EACrD,CAOD/B,cAAc+B,EAAM,GAAI8B,EAAM,CAAE,EAAE7B,GAAY,GAC7C,OAAIb,OAAOuE,aAAa3D,GAAa6D,KAAKC,MAAM7D,EAAYb,OAAO2E,cAAc/D,GAAOA,GACpFZ,OAAOwE,WAAW5D,GAAaA,GAC/BA,GAAKhC,MAAMgG,KAAK,KAAM,sCAAsChE,KACzD8B,EACP,CAOD7D,qBAAqB+B,EAAM,IAC1B,OAAOA,GAAKK,QAAQjB,QAAO6E,EAAiB,SAC5C,CAODhG,iBAAiB+B,EAAKkE,EAAM,IAC3B,OAAQlE,GAAOkE,GAAKnE,WAAWuC,MAC/B,CAQDrE,qBAAqB+B,EAAM,GAAImE,EAAY,KAC1C,OAAOnE,EAAIQ,MAAM2D,GAAWrD,KAAInB,GAAKA,EAAE2C,SAAQ8B,QAAOzE,GAAKA,EAAEkD,OAAS,GACtE,CAQD5E,qBAAqBqF,EAAS,GAAIxD,EAAQ,IACzC,OAAQwD,GACP,IAAK,YACJxD,EAAQA,EAAMI,cACd,MACD,IAAK,YACJJ,EAAQA,EAAMc,cACd,MACD,IAAK,aACJd,EAAQV,OAAOiF,cAAcvE,GAG/B,OAAOA,CACP,CAYD7B,2BAA2BqG,EAAKC,GAC/B,MAAMC,EAAQvF,OAAOyE,KAAKa,GACpBE,EAAOxF,OAAOyF,OAAOH,GAC3B,OAAO,IAAII,YAAYH,EAAO,YAAYF,OAAnC,IAAgDG,EACvD,CAODxG,0BAA0B2G,GACzB,MAAMC,EAAWC,SAASC,cAAc,YAExC,OADAF,EAASG,UAAYJ,EACdC,EAAS/E,KAChB,CAOD7B,kBAAkB6B,GACjB,IAAKV,OAAOoC,SAAS1B,GAAQ,OAC7B,IAAKV,OAAO6F,iBAAiBnF,GAAQ,OACrC,IAAIoB,EAAIgE,OACJrG,EAAK,KAQT,OAPAiB,EAAMwC,OAAO9B,MAAM,KAAK2E,SAAQ,CAACxF,EAAGoB,EAAGqE,KACtC,GAAKlE,EACL,OAAIH,EAAIqE,EAAEvC,OAAS,EACX3B,EAAIA,EAAEvB,QAEdd,EAAKqC,EAAEvB,GAAE,IAEHd,CACP,CAQDZ,wBAAwB+B,EAAM,IAC7B,OAAQZ,OAAO8D,cAAclD,EAC7B,CAQD/B,qBAAqB+B,EAAM,IAC1B,OAA+C,IAAxCZ,OAAOa,UAAUD,GAAKsC,OAAOO,MACpC,CASD5E,qBAAqBoH,EAAMC,GAC1B,MAAMC,EAASnG,OAAO6F,iBAAiBI,GACjCG,EAASpG,OAAO6F,iBAAiBK,GACvC,OAAIC,GAAUC,EACNH,EAAK/C,OAAOpC,gBAAkBoF,EAAMhD,OAAOpC,cAE5CqF,IAAWC,CAClB,CAUDvH,qBAAqBwH,EAAO,EAAGC,GAC9B,KAAID,GAAQ,GAEZ,OADAC,EAAStG,OAAOmC,SAASmE,GAAUC,YAAYC,QAAQF,GAAUA,EAC1D,IAAIG,SAAQ,CAACC,EAASC,KAC5B,MAAMC,EAAMC,WAAWH,EAAQI,KAAK,MAAM,GAAOT,GAC7CC,aAAkBC,aACrBD,EAAOS,iBAAiB,SAAS,KAChCC,aAAaJ,GACbD,EAAO,IAAI/G,MAAM,mBAAmB,GAErC,GAEF,CAUDf,oBAAoBoI,EAAMC,EAAM9H,EAAO,gBAEtC,MAAM+H,EAAO,IAAIC,KAAKH,EAAM,CAAE7H,KAAMA,IAC9B4D,EAAMqE,IAAIC,gBAAgBH,GAChC,IACC,MAAMnB,EAAIN,SAASC,cAAc,KACjCK,EAAEuB,KAAOvE,EACTgD,EAAEwB,SAAWN,EACblB,EAAEyB,cAEIzH,OAAOwG,QAAQ,IAExB,CAAY,QACTa,IAAIK,gBAAgB1E,EACpB,CACD,CAiBDnE,gBAAgBqI,EAAMS,EAAOC,EAAK9H,GAAO,EAAM+H,GAAS,EAAOC,GAAS,GAClEC,YAAYC,cAAcL,KAC3BM,eAAeC,IAAIhB,KACvBe,eAAeE,OAAOjB,EAAMS,EAAO,CAAES,QAASR,GAAK9G,gBAC/ChB,IAASD,OAAOwI,SAASV,IAAQ9H,OAAOC,KAAK6H,GAC7CE,IAAWhI,OAAOyI,SAASX,IAAQ9H,OAAOgI,OAAOF,GACjDG,IAAQS,KAAKZ,EAAMT,MAAQS,IAC/B,CAQD9I,0BAA0B2J,GACzB,MAAMrB,EAAO,IAAIC,KAAK,CAACoB,GAAM,CAAEpJ,KAAM,oBAC/B4D,EAAMqE,IAAIC,gBAAgBH,GAChC,IACC,aAAasB,OAAOzF,EACvB,CAAY,QACTqE,IAAIK,gBAAgB1E,EACpB,CACD,CAMDnE,8BAA8B6B,EAAQ,IACrC,MAAMgI,QAAehF,UAAUiF,YAAYC,MAAM,CAAE1B,KAAM,oBACzD,MAAqB,YAAjBwB,EAAOG,OAAwC,WAAjBH,EAAOG,MAC/BnF,UAAUoF,UAAUC,UAAUrI,GAEjC,EACP,CAMD7B,iCACC,MAAM6J,QAAehF,UAAUiF,YAAYC,MAAM,CAAE1B,KAAM,mBACzD,MAAqB,YAAjBwB,EAAOG,OAAwC,WAAjBH,EAAOG,MAC/BnF,UAAUoF,UAAUE,WAEvB,EACP,QAGAnJ,OAAOC,KAAKE,QACZC,WAAWD,OAASA,MACpB,GC5bKiJ,EAAA,MAAMC,WAQTrK,kBAAqBY,GAAqB,mBAAPA,EAEnCZ,wBAAwBY,GACpB,OAAOyJ,WAAWC,WAAW1J,IAAOA,EAAGkB,WAAWyI,SAAS,cAC9D,CASDvK,mBAAmBiD,EAAGrC,GAClB,OAAOqC,GAAKoH,WAAWC,WAAWrH,EAAErC,GACvC,CAQDZ,iBAAiBwK,EAAKnC,GAClB,OAAOgC,WAAWI,kBAAkBD,EAAKnC,EAAM,MAClD,CAQDrI,iBAAiBwK,EAAKnC,GAClB,OAAOgC,WAAWI,kBAAkBD,EAAKnC,EAAM,MAClD,CASDrI,yBAAyBwK,EAAKnC,EAAMzH,GAChC,MAAM8J,IAAOF,GAAMG,QAAQC,yBAAyBJ,EAAIK,UAAWxC,GACnE,OAAOqC,GAA4B,mBAAbA,EAAK9J,EAC9B,CAQDZ,uBAAuBY,GACnB,IAAKyJ,WAAWC,WAAW1J,GAAK,OAAO,EAEvC,IAAIkK,EAAUlK,aADQyJ,WAAWU,kBAAkB/H,YAGnD,OADK8H,IAASA,EAAoC,iBAA1BlK,EAAGoK,OAAOC,cAC3BH,CACV,CAQD9K,2BAA2BY,GACvB,IAAKyJ,WAAWC,WAAW1J,GAAK,OAAO,EAEvC,OAAOA,aADmB,YAAiB,EAAEoC,WAEhD,CAWDhD,+BAA+BY,EAAIsK,GAC/B,MAAMC,EAAOC,UAAYlI,MAAMmI,KAAKD,WAAWxI,MAAM,GAAK,GAC1D,aAAahC,EAAG0K,MAAMJ,GAAS,KAAMC,EACxC,CAUDnL,wBAAwBY,EAAIsK,GACxB,MAAMC,EAAOC,UAAYlI,MAAMmI,KAAKD,WAAWxI,MAAM,GAAK,GAC1D,OAAOhC,EAAG0K,MAAMJ,GAAS,KAAMC,EAClC,CASDnL,0BAA0BY,EAAIsK,EAAOK,GAAS,GAE1C,GADA3K,EAAKO,EAAOoC,SAAS3C,GAAMyJ,WAAWmB,cAAc5K,GAAMA,GACrDyJ,WAAWC,WAAW1J,GAAK,OAChC,IAAK2K,GAAUlB,WAAWoB,iBAAiB7K,GAAK,OAChD,MAAMuK,EAAOC,UAAYlI,MAAMmI,KAAKD,WAAWxI,MAAM,GAAK,GAC1D,OAAIyH,WAAWqB,gBAAgB9K,SACdyJ,WAAWU,kBAAkBnK,EAAIsK,KAAUC,GAErDd,WAAWsB,iBAAiB/K,EAAIsK,KAAUC,EACpD,CAQDnL,qBAAqB6B,GACjB,MAAMjB,EAAKO,EAAOyK,WAAW/J,GAC7B,OAAOwI,WAAWC,WAAW1J,GAAMA,EAAK,IAC3C,CAEDZ,eAA4BY,EAAIiL,EAASV,GACrC,IAAKd,WAAWC,WAAW1J,GAAK,OAEhC,OADgByJ,WAAWqB,gBAAgB9K,SAE1BA,EAAG0K,MAAMO,EAASV,GAExBvK,EAAG0K,MAAMO,EAASV,EAEhC,CAQDnL,oBAAoBY,EAAIiL,GACpB,IAAIC,GAAM,EACV,OAAOC,SAAUZ,KACb,GAAIW,EAAK,OACTA,GAAM,EACN,MAAMtB,EAAMqB,GAAW1L,KACvB,aAAakK,YAAW2B,EAAepL,EAAI4J,EAAKW,EAAK,CAE5D,CAQDnL,oBAAoBY,EAAIiL,GACpB,IAAIC,EAAM,EACV,MAAO,IAAIX,KACP,GAAIW,EAAM,EAAG,OACbA,IACA,MAAMtB,EAAMqB,GAAW1L,KACvB,OAAO,IAAIyH,SAAQ,CAACqE,EAAQnE,KACxBoE,gBAAeH,UACX,KAAID,GAAO,KACXA,IACY,IAARA,GACJ,IACI,MAAM7I,QAAUoH,YAAW2B,EAAepL,EAAI4J,EAAKW,GACnDc,EAAOhJ,EACV,CAAC,MAAOkJ,GACLrE,EAAOqE,EAC/B,CAA8B,QACNL,GAAO,CACV,IACH,GACJ,CAET,CASD9L,gBAAgBoM,EAAMzE,EAAU,IAAK0E,GAAU,GAC3C,OAAOA,EAAUhC,YAAWiC,EAAcF,EAAMzE,GAAW0C,YAAWkC,EAAcH,EAAMzE,EAC7F,CAQD3H,SAAqBoM,EAAMzE,EAAU,KACjC,IAAI6E,EACJ,MAAO,IAAIrB,KACPhD,aAAaqE,GACbA,EAAQxE,YAAW,KAAQoE,EAAKd,MAAMnL,KAAMgL,EAAK,GAAKxD,EAAQ,CAErE,CAQD3H,SAAqBoM,EAAMzE,EAAU,KACjC,IAAI6E,EACJ,MAAO,IAAIrB,KACFqB,GACDJ,EAAKd,MAAMnL,KAAMgL,GAErBhD,aAAaqE,GACbA,EAAQxE,YAAW,KACfwE,OAAQtH,CAAS,GAClByC,EAAQ,CAElB,QAGG3G,OAAOC,KAAKoJ,YACZjJ,WAAWiJ,WAAaA,UAC3B,GCnPE,MAAMoC,KAEZzM,SAAa,EAKbA,eACCG,MAAKQ,EAAM,CACX,CAODX,YAAY0M,EAAQ,SACnB,MAAO,GAAGA,MAAUvM,MAAKQ,GACzB,CAMUA,gBACV,OAAOR,KAAKwM,MACZ,CAOD3M,gBAAgB4M,GACf,MAAMC,GAAKD,GAAK,IAAIhI,OACpB,IAAIkI,EAAI,EAAGhK,EAAI,EACf,GAAU,IAAN+J,EAAS,OAAOC,EACpB,KAAOhK,EAAI+J,GACVC,GAAKA,GAAK,GAAKA,EAAIF,EAAEG,WAAWjK,KAAO,EAExC,OAAOgK,CACP,CAMD9M,aAAaC,GACRA,IACHA,EAAGU,GAAsB,iBAAVV,EAAGU,GAAkB8L,KAAK9L,GAAKV,EAAGU,IAAM8L,KAAK9L,GAE7D,QAGAK,OAAOgI,OAAOyD,KACd,EC7DF,MAAMO,EAAUhC,OAAO,WAWhB,MAAMiC,OAOZjN,qBAAqBC,GACpB,OAAOA,aAAciJ,WACrB,CASDlJ,cAAcC,EAAIoI,EAAMtG,GAAM,GACxBkL,OAAOC,cAAcjN,KACtBkB,EAAOgM,OAAOpL,GACjB9B,EAAGmN,aAAa/E,EAAM,IAEtBpI,EAAGoN,gBAAgBhF,GAEpB,CASDrI,WAAWC,EAAIoI,EAAMtG,GACfkL,OAAOC,cAAcjN,KACtBkB,EAAOa,UAAUD,GACpB9B,EAAGmN,aAAa/E,EAAMtG,GAEtB9B,EAAGoN,gBAAgBhF,GAEpB,CAUDrI,WAAWC,EAAIoI,EAAO,GAAItG,EAAM,IAC/B,IAAKkL,OAAOC,cAAcjN,GAAK,OAAO8B,EACtC,IAAKZ,EAAOmM,WAAWrN,GAAK,OAAO8B,EACnC,MAAML,EAAIzB,EAAGsN,aAAalF,IAAStG,EACnC,OAAOZ,EAAOa,UAAUN,EACxB,CAUD1B,iBAAiBC,EAAIoI,EAAO,GAAItG,EAAM,SACrC,MAAMyL,EAAOP,OAAO5D,IAAIpJ,EAAIoI,EAAMtG,GAClC,OAAOZ,EAAOgM,OAAOK,EAAMzL,EAC3B,CAUD/B,gBAAgBC,EAAIoI,EAAO,GAAItG,EAAM,KACpC,MAAMyL,EAAOP,OAAO5D,IAAIpJ,EAAIoI,EAAMtG,GAClC,OAAOZ,EAAOsM,MAAMD,EAAMzL,EAC1B,CAUD/B,iBAAiBC,EAAIoI,EAAO,GAAItG,EAAM,MACrC,MAAMyL,EAAOP,OAAO5D,IAAIpJ,EAAIoI,EAAMtG,GAClC,OAAOZ,EAAOuM,OAAOF,EAAMzL,EAC3B,CAQD/B,iBAAiBC,EAAIoI,EAAO,GAAItG,EAAM,SAErCkL,OAAOU,IAAI1N,EAAIoI,EAAMlH,EAAOgM,OAAOpL,IAAM,EAKzC,CAQD/B,gBAAgBC,EAAIoI,EAAO,GAAItG,EAAM,KACpCkL,OAAOU,IAAI1N,EAAIoI,EAAMlH,EAAOsM,MAAM1L,GAAM6L,IACxC,CAQD5N,iBAAiBC,EAAIoI,EAAO,GAAItG,EAAM,MACrCkL,OAAOU,IAAI1N,EAAIoI,EAAMzC,KAAKiI,UAAU9L,GAAMA,EAC1C,CAOD/B,mBAAmBmC,GAClB,OAAOnB,OAAO8M,QAAQ3L,GAAO,CAAE,GAAEU,KAAIkL,GAAM,GAAGA,EAAG,MAAMA,EAAG,OAAMtL,KAAK,IACrE,CAMDzC,kBAAkBmC,EAAKlC,GACjBgN,OAAOC,cAAcjN,IAC1Be,OAAO8M,QAAQ3L,GAAO,IACrBgE,QAAO4H,GAAe,SAATA,EAAG,KAChB5H,QAAO4H,GAAkB,KAAZA,EAAG,GAAG,KACnB5H,QAAO4H,GAAkB,KAAZA,EAAG,GAAG,KACnBlL,KAAIkL,GAAMd,OAAOU,IAAI1N,EAAI8N,EAAG,GAAIA,EAAG,KACpC,CAOD/N,oBAAoBC,GACnB,OAAOiD,MAAMmI,KAAKpL,EAAG+N,YACnB7H,QAAOzE,GAAKA,EAAE2G,KAAK/D,WAAW,WAC9BzB,KAAInB,GAAK,GAAGA,EAAE2G,SAAS3G,EAAEG,WACzBY,KAAK,IACP,CAQDzC,eAAeC,EAAI8D,EAAM,KACxB,OAAOb,MAAMmI,KAAKpL,GAAI+N,YAAc,IAAInL,KAAIsE,GAAK,GAAGA,EAAEkB,SAASlB,EAAEtF,WAAUY,KAAKsB,EAChF,CAUD/D,eAAeiO,EAAMC,EAAM,CAAA,EAAIC,EAAY,SAmE1C,OAjEiB,IAAIC,MAAMH,EAAM,CAEhCN,IAAIU,EAAQC,EAAMzM,GAEjB,GAAa,SAATyM,EAAiB,OACrB,GAAa,YAATA,EAAoB,OAAOD,EAAOE,QAAU1M,EAChD,GAAoB,iBAATyM,EAAmB,OAAOD,EAAOC,GAAQzM,EAEpD,MAAMtB,EAAO2N,EAAII,IAAO/N,KAGxB,OAFA+N,EAAOJ,EAAII,IAAOE,WAAaF,EAExB/N,GACN,KAAKqB,QACJqL,OAAOwB,OAAOJ,EAAQC,EAAOnN,EAAOgM,OAAOtL,IAC3C,MACD,KAAK6M,OACJzB,OAAO0B,SAASN,EAAQC,EAAMzM,GAC9B,MACD,KAAKb,OACL,KAAKkC,MACJ+J,OAAOU,IAAIU,EAAQC,EAAM1I,KAAKiI,UAAUhM,IACzC,QACCoL,OAAOU,IAAIU,EAAQC,EAAMzM,GAI3B,OAAO,CACP,EAEDwH,IAAIgF,EAAQC,GAEX,GAAa,SAATA,EAAiB,OAAOD,EAC5B,GAAa,YAATC,EAAoB,OAAOD,EAAOE,QACtC,GAAoB,iBAATD,EAAmB,OAAOD,EAAOC,GAC5C,GAAa,YAATA,EAAoB,OAAOtB,EAC/B,GAAIsB,IAASH,EAAW,OAAOjL,MAAMmI,KAAKgD,EAAOO,UAAU/L,KAAI5C,GAAMgN,OAAO4B,QAAQ5O,EAAIiO,EAAKC,KAE7F,MAAM1N,EAAMyN,EAEN3N,EAAOE,EAAI6N,IAAO/N,KAClBuO,IAAOrO,EAAI6N,IAAOS,OAClBC,EAAOvO,EAAI6N,IAAOW,QAClBC,GAA6B,IAArBzO,EAAI6N,IAAOY,MAEzBZ,EAAO7N,EAAI6N,IAAOE,WAAaF,EAC/B,IAAIvM,EAAMsM,EAAOc,aAAab,GAAQrB,OAAO5D,IAAIgF,EAAQC,GAAQD,EAAOC,GAExE,GAAIjE,EAAWC,WAAWvI,GAAM,OAAOA,EAAIkG,KAAKoG,GAEhD,OAAO9N,GACN,KAAKqB,QACJ,OAAOyM,EAAOc,aAAab,GAC5B,KAAKI,OACJ,OAAOvN,EAAOsM,MAAM1L,EAAK,GAC1B,KAAKf,OACJ,OAAOG,EAAOuM,OAAO3L,EAAK,CAAE,GAC7B,KAAKmB,MACJ,OAAO/B,EAAOuM,OAAO3L,EAAK,IAC3B,QAEC,OADAA,EAAM+M,EAAQ/M,GAAOiN,GAAQ,GAAOjN,GAAOiN,QAAQ9J,EAC5CgK,EAAQ/N,EAAOiO,cAAcrN,GAAOA,EAE7C,GAIF,QAGAf,OAAOC,KAAKgM,QACZ7L,WAAW6L,OAASA,MACpB,ECnQK,MAAMoC,SAETrP,WAAiBoB,WAAWyF,UAAUyI,MAAMC,iBAE5C1M,GAEAG,YAAYwM,GACGrP,MACR0C,EAAOwM,UAASI,EAAQD,EAC9B,CAEDnG,IAAIhB,GACA,MAAMqH,EAAKvP,KACX,GAAKuP,GAAG7M,EACR,OAAOwM,UAASM,EAAUD,GAAG7M,EAAKwG,IAAIhB,GAAQqH,GAAG7M,EAAK1B,EAAOyO,eAAevH,GAC/E,CAEDwH,OAAOxH,GACH,OAAQlI,KAAKkJ,IAAIhB,IAAS,KAAKvG,UAClC,CAEDqL,OAAO9E,GACH,MAAMtG,EAAM5B,KAAKkJ,IAAIhB,GACrB,OAAOlH,EAAOgM,OAAOkC,UAASM,EAAU5N,GAAKF,MAAQE,EACxD,CAED0L,MAAMpF,GACF,IAAItG,EAAM5B,KAAKkJ,IAAIhB,GAInB,GAHIgH,UAASM,GAAWtF,EAAWC,WAAWvI,GAAK+N,KAC9B,WAAb/N,EAAIgO,OAAmBhO,EAAMA,EAAI+N,GAAG,OAExCT,UAASM,EAAS,OAAOxO,EAAOsM,MAAM1L,GAAKF,OAC/C,MAAMmO,EAAMjO,GAAK4B,MAAM,gBAAgBwC,QAAOzE,GAAKP,EAAOmC,SAAS5B,KAAIuO,QACvE,OAAO9O,EAAOsM,MAAMuC,EACvB,CAEDE,QAAQ7H,EAAMxG,GACV,OAAO1B,KAAK0P,OAAOxH,IAASxG,CAC/B,CAOD7B,SAAeC,GACX,OAAIoP,UAASM,EAAgB1P,EAAGsP,mBAC5BnO,WAAW6F,QAAQkJ,iBAAyB/O,WAAW6F,OAAOkJ,iBAAiBlQ,GAC5E,IACV,CAODD,kBAAkBC,EAAIoI,GAClB,OAAOgH,SAASe,qBAAqBnQ,GAAIoJ,IAAIhB,EAChD,CAODrI,4BAA4BwP,GACxB,OAAO,IAAIH,SAASG,EACvB,CAEDxP,SAAkBkC,GACd,OAAKA,GACLA,EAAMmO,OAAOnO,GAAKE,QAAQ,iBAAkB,SACjCA,QAAQ,SAAU,KAAKiC,OAFjB,EAGpB,CAEDrE,SAAckC,EAAKoO,GACf,OAAOpO,EAAIK,MAAM+N,GAAIzN,KAAIR,GAAKA,EAAEgC,SAAQ8B,QAAO9D,GAAKA,GACvD,CAEDrC,SAAoBuQ,EAASC,GACzB,QAAOD,GAAUC,EAAIC,MAAKpO,GAAKkO,EAAQhG,SAASlI,IACnD,CAODrC,gBAAgB0Q,GACZ,MAAMhB,EAAKL,SACLsB,EAAajB,GAAGnN,EAAOmN,GAAG1N,EAAW0O,GAAW,KAItD,OAHexN,MAAMmI,KAAKjK,WAAWyF,SAAS+J,aACpB/N,KAAIR,GAAKa,MAAMmI,KAAKhJ,EAAEwO,UAAY,MAChCC,QAAO,CAACC,EAAK1O,IAAM0O,EAAIC,OAAO3O,IAAI,IAC9C8D,QAAQ9D,GAAMqN,GAAGuB,EAAavB,GAAG1N,EAAWK,EAAE6O,cAAeP,IAChF,QAGG3P,OAAOC,KAAKoO,UACZjO,WAAWiO,SAAWA,QACzB,ECpGE,MAAM8B,eAAexP,KAExB3B,sBAAwB,uBACxBA,oBAAsB,sFAEtB8D,GAAYe,UAAUf,SAEtBuB,OAAOtD,EAAMoP,OAAOC,eAAgBtN,GAE5BA,IADO3D,KACM2D,SAAWA,GAC5B,MAAM3B,EAFKhC,KAEIkR,SACf,OAAOtP,EAAIK,QAAQ+O,OAAOG,cAAc,CAAC3N,EAAO5B,IAAQA,GAAOI,EAAIwB,IACtE,CAMD9D,QACI,MAAM6P,EAAKvP,KACLoR,EAAO7B,EAAG6B,KAAKC,UACfC,EAAQ/B,EAAG+B,MAAMC,SAEjBC,EAAcjC,GAAGkC,IAGjBC,EAAiB,IAAVJ,EAAc,GAAK,IAAIK,OAAOL,GADzBE,GAAe,GAAK,IACwBpP,MAAM,KAKpE,IAAIO,EAAI,EACR,KAAOA,GAAKyO,GACRM,EAAKE,KAAKjP,EAAEhB,YACZgB,IAGJ,KAAO+O,EAAKjN,OAAS,GAAK,GAAGiN,EAAKE,KAAK,IAEvC,OAAOF,CACV,CAEG/N,eACA,OAAO3D,MAAK2D,CACf,CAEGA,aAAS/B,GACT5B,MAAK2D,EAAY/B,GAAO8C,UAAUf,QACrC,CAEGkO,WACA,OAAO7R,KAAK8R,aACf,CAEGD,SAAKjQ,EAAM,GACX5B,KAAK+R,YAAYnQ,EACpB,CAEGoQ,YACA,OAAOhS,KAAKiS,UACf,CAEGD,UAAMpQ,EAAM,GACZ5B,KAAKkS,SAAStQ,EACjB,CAEGuQ,UACA,OAAOnS,KAAKqR,SACf,CAEGc,QAAIvQ,EAAM,GACV5B,KAAKoS,QAAQxQ,EAChB,CAMG0P,YACA,OAAO,IAAIN,OAAOhR,KAAK8R,cAAe9R,KAAKiS,WAAY,EAC1D,CAMGb,WACA,OAAO,IAAIJ,OAAOhR,KAAK8R,cAAe9R,KAAKiS,WAAa,EAAG,EAC9D,CAEGI,SACA,OAAOnC,OAAOlQ,KAAKsS,MAAM7P,OAAO,EACnC,CAEG6P,WACA,OAAOtS,KAAK8R,aACf,CAEGS,QACA,OAAOvS,KAAKiS,WAAa,CAC5B,CAEGO,SACA,OAAOxS,KAAKuS,EAAE5Q,WAAW8Q,SAAS,EAAG,IACxC,CAEGC,UACA,OAAO1S,MAAK2S,EAAU,CAAEX,MAAO,SAClC,CAEGY,WACA,OAAO5S,MAAK2S,EAAU,CAAEX,MAAO,QAClC,CAEGa,QACA,OAAO7S,KAAKqR,UAAU1P,UACzB,CAEGmR,SACA,OAAO9S,KAAK6S,EAAEJ,SAAS,EAAG,IAC7B,CAEGM,QACA,OAAO/S,KAAKuR,SAAS5P,UACxB,CAEGqR,SACA,OAAOhT,KAAKiT,IAAIxQ,MAAM,EAAG,EAC5B,CAEGwQ,UACA,OAAOjT,MAAK2S,EAAU,CAAEO,QAAS,SACpC,CAEGC,WACA,OAAOnT,MAAK2S,EAAU,CAAEO,QAAS,QACpC,CAEGE,QACA,OAAOpT,KAAKqT,WAAW1R,UAC1B,CAEG2R,SACA,OAAOtT,KAAKoT,EAAEX,SAAS,EAAG,IAC7B,CAEG9F,QACA,OAAO3M,MAAKuT,EAAY,EAC3B,CAEGC,SACA,OAAOxT,MAAKuT,EAAY,EAC3B,CAEGvM,QACA,OAAOhH,MAAKyT,GAAU,EACzB,CAEGC,QACA,OAAO1T,MAAKyT,GAAU,EACzB,CAEGE,QACA,OAAO3T,KAAK4T,aAAajS,UAC5B,CAEGkS,SACA,OAAO7T,KAAK2T,EAAElB,SAAS,EAAG,IAC7B,CAEGhG,QACA,OAAOzM,KAAK8T,aAAanS,UAC5B,CAEGoS,SACA,OAAO/T,KAAKyM,EAAEgG,SAAS,EAAG,IAC7B,CAEGuB,UACA,OAAOhU,KAAKiU,kBAAkBtS,WAAW8Q,SAAS,EAAG,IACxD,CAEGyB,QACA,OAAOlU,MAAKmU,GACf,CAEGC,SACA,OAAOpU,KAAKkU,EAAEjS,QAAQ,IAAK,GAC9B,CAEGoS,QACA,OAAO9Q,KAAK+Q,KAAKtU,KAAKuS,EAAI,EAC7B,CAEGgC,QACA,OAAQvU,KAAKqT,WAAa,GAAG1R,UAChC,CAEG6S,SACA,OAAOxU,KAAKuU,EAAE9B,SAAS,EAAG,IAC7B,CAEGgC,QACA,MAAMC,EAAO,IAAIlT,KAAKxB,KAAK2U,WAC3BD,EAAKE,SAAS,EAAG,EAAG,EAAG,GACvBF,EAAKtC,QAAQsC,EAAKrD,UAAY,GAAKqD,EAAKnD,SAAW,GAAK,GACxD,MAAMsD,EAAQ,IAAIrT,KAAKkT,EAAK5C,cAAe,EAAG,GAC9C,OAAO,EAAIvO,KAAKuR,QAAQJ,EAAKC,UAAYE,EAAMF,WAAa,MAAW,GAAKE,EAAMtD,SAAW,GAAK,GAAK,EAC1G,CAEGwD,SACA,OAAO/U,KAAKyU,EAAE9S,WAAW8Q,SAAS,EAAG,IACxC,CAEGvQ,QACA,OAAOlC,KAAK2U,SACf,CAEGK,QACA,OAAOzR,KAAKgB,MAAMvE,KAAKkC,EAAI,IAC9B,CAEDgP,SACI,MAAM3B,EAAKvP,KACX,MAAO,CACHqS,GAAI9C,EAAG8C,GACPC,KAAM/C,EAAG+C,KACTC,EAAGhD,EAAGgD,EACNC,GAAIjD,EAAGiD,GACPE,IAAKnD,EAAGmD,IACRE,KAAMrD,EAAGqD,KACTC,EAAGtD,EAAGsD,EACNC,GAAIvD,EAAGuD,GACPC,EAAGxD,EAAGwD,EACNC,GAAIzD,EAAGyD,GACPC,IAAK1D,EAAG0D,IACRE,KAAM5D,EAAG4D,KACTC,EAAG7D,EAAG6D,EACNE,GAAI/D,EAAG+D,GACP3G,EAAG4C,EAAG5C,EACN6G,GAAIjE,EAAGiE,GACPxM,EAAGuI,EAAGvI,EACN0M,EAAGnE,EAAGmE,EACNC,EAAGpE,EAAGoE,EACNE,GAAItE,EAAGsE,GACPpH,EAAG8C,EAAG9C,EACNsH,GAAIxE,EAAGwE,GACPC,IAAKzE,EAAGyE,IACRE,EAAG3E,EAAG2E,EACNE,GAAI7E,EAAG6E,GACPC,EAAG9E,EAAG8E,EACNE,EAAGhF,EAAGgF,EACNC,GAAIjF,EAAGiF,GACPC,EAAGlF,EAAGkF,EACNM,GAAIxF,EAAGwF,GACP7S,EAAGqN,EAAGrN,EACN8S,EAAGzF,EAAGyF,EAEb,CAEDnV,iBAAiBoV,GAAQ,EAAOtR,EAAWe,UAAUf,SAAUf,GAAa,GACxE,MAAMtC,EAAM,IAAI0Q,OAChB1Q,EAAIqD,SAAWA,EACfrD,EAAI8R,QAAQ,GACZ9R,EAAI4R,SAAS,GACb,MAAMR,EAAO,GACb,IAAI9P,EAAM,KACNmR,EAAI,GACR,KAAOA,KACHnR,EAAMqT,EAAQ3U,EAAIoS,IAAMpS,EAAIsS,KAC5BhR,EAAMgB,EAAatC,GAAIsC,EAAYhB,GAAOA,EAC1C8P,EAAKE,KAAKhQ,GACVtB,EAAI4R,SAAS5R,EAAI2R,WAAa,GAElC,OAAOP,CACV,CAED7R,eAAeoV,GAAQ,EAAOtR,EAAWe,UAAUf,SAAUf,GAAa,GACtE,MAAMtC,EAAM,IAAI0Q,OAChB1Q,EAAIqD,SAAWA,EACf,MACMuR,EADc5U,GAAImR,IACK,EAAI,EACjCnR,EAAI8R,QAAQ9R,EAAI+Q,UAAY/Q,EAAIiR,SAAW2D,GAC3C,MAAMxD,EAAO,GACb,IAAI9P,EAAM,KACNmR,EAAI,EACR,KAAOA,KACHnR,EAAMqT,EAAQ3U,EAAI2S,IAAM3S,EAAI6S,KAC5BvR,EAAMgB,EAAatC,GAAIsC,EAAYhB,GAAOA,EAC1C8P,EAAKE,KAAKhQ,GACVtB,EAAI8R,QAAQ9R,EAAI+Q,UAAY,GAEhC,OAAOK,CACV,CAEDD,KAEI,OAA+D,IAAxD,IAAIzM,KAAKmQ,OAAOnV,MAAK2D,IAAYyR,UAAUC,QACrD,CAEDzS,GAAYhB,EAAM,IACd,OAAOA,EAAI0T,OAAO,GAAG9S,cAAgBZ,EAAIa,MAAM,EAClD,CAEDkQ,GAAU5E,GACN,OAAO/N,KAAKuV,eAAevV,MAAK2D,EAAWoK,EAC9C,CAEDwF,GAAYiC,GACR,OAAQxV,KAAKqT,WAAa,IAAM,IAAI1R,WAAW8Q,SAAS+C,EAAM,IACjE,CAED/B,GAAUgC,GACN,MACM7T,EAAM5B,MAAK2S,EADL,CAAE+C,KAAM,UAAWC,QAAQ,IACPvT,MAAM,KAAKwT,KAAK,GAChD,OAAOH,EAAc7T,EAAIE,cAAgBF,CAC5C,CAEDuS,KACI,MACM0B,GAAc,EADT7V,KACgB8V,oBACrBC,EAAUxS,KAAKyS,IAAIH,GAEnBI,EAAeF,EAAU,GAM/B,MAAO,GAJMF,GAAc,EAAI,IAAM,MAHlBtS,KAAKgB,MAAMwR,EAAU,IAIhBpU,WAAW8Q,SAAS,EAAG,QAClCwD,EAAatU,WAAW8Q,SAAS,EAAG,MAGpD,CAED5S,aAAa6B,EAAOwD,EAAQvB,GACxBuB,EAASA,GAAUlE,EAAOkV,cAAcvS,GACxC,MAAMwS,EAAQnF,QAAOoF,EAAuBlR,GAC5C,OAAO8L,QAAOqF,EAAoB3U,EAAOyU,EAC5C,CAEDtW,SAA8BqF,GAC1B,OAAO,IAAIL,OACP,QAAUK,EAAO1C,cAAcuB,WAAW,cAAe,eAAiB,QAEjF,CAEDlE,SAA2B6B,EAAOyU,GAE9B,MAAMG,OAAEA,GAAW5U,EAAM8B,MAAM2S,IAAU,GAEzC,IAAKG,EAAQ,OAAO,KAEpB,MAAMC,EAAIhI,OAAO+H,EAAOE,GAClB7C,EAAIpF,OAAO+H,EAAO/D,GAClBQ,EAAIxE,OAAO+H,EAAOzD,GAGxB,GAAI0D,EAAI,KAAQA,EAAI,KAAM,OAAO,KACjC,GAAI5C,EAAI,GAAKA,EAAI,GAAI,OAAO,KAE5B,MAAMe,EAAO,IAAIlT,KAAK+U,EAAG5C,EAAI,EAAGZ,GAGhC,OAAIA,IAAM2B,EAAKrD,WAERjQ,MAAMsT,EAAK+B,WAFe,KAEK/B,CACzC,CAOD7U,kBAAkBgS,GACd,OAAQA,EAAO,GAAM,GAAKA,EAAO,KAAQ,GAAOA,EAAO,KAAQ,CAClE,QAGG5Q,WAAW+P,OAASA,MACvB,ECxXE,MAAM0F,OAET7W,kBAAoB,CAAEqI,KAAM,CAAE,EAAE9H,KAAM,GAAI8E,OAAQ,CAAA,EAAIyR,SAAU,CAAE,EAAEhT,SAAU,CAAA,EAAIiT,QAAS,CAAE,EAAEC,IAAK,CAAEzW,KAAMqB,UAO5G5B,cAAcoI,GACV,OAAOlF,MAAMmI,KAAK,IAAI4L,IAAI7O,GAC7B,CAEDpI,qBAAuB,CAACmH,EAAG+P,IAAM/P,EAAEvC,SAAWsS,EAAEtS,QAAUuC,EAAEgQ,OAAM,CAAC3H,EAAS4H,IAAU5H,IAAY0H,EAAEE,KASpGpX,mBAAmBmH,EAAG+P,GAElB,QAAKhU,MAAMC,QAAQgE,OACdjE,MAAMC,QAAQ+T,KACf/P,IAAM+P,IAEV/P,EAAIA,EAAEkQ,WACNH,EAAIA,EAAEG,WAECR,OAAOS,cAAcnQ,EAAG+P,KAClC,CAUDlX,mBAAmByR,EAAQ,GAAI8F,EAAS,GAAIC,GAAW,GACnD,OAAIA,EACO,IAAI,IAAIP,IAAI,IAAIxF,KAAU8F,GAAQ1U,IAAI+C,KAAKiI,aAAahL,IAAI+C,KAAKC,OAErE,IAAI4L,KAAU8F,GAAQpR,QAAO,CAACtE,EAAOuV,EAAOK,IAAQA,EAAIC,QAAQ7V,KAAWuV,GACrF,CAODpX,oBAAoB2X,EAAO,IACvB,IAAI1U,EAAI,CAAA,EAER,OADA0U,EAAKxR,QAAOlD,GAAKA,IAAGiE,SAAQ0Q,GAAM3U,EAAI,IAAKA,KAAM2U,KAC1C3U,CACV,CAQDjD,cAAc6X,EAAK9V,GAEf,MAAMxB,EAAOsW,QAAOiB,EAAQD,EAAK9V,GAC3B+B,EAAW+T,EAAI/T,UAAY3C,EAAO2C,SAClCiU,EAAO5W,EAAO6W,QAAQH,EAAId,QAAS,KAIzC,GAHAhV,EAAMgW,EAAOhW,EAAI4B,MAAMoU,GAAM,GAAKhW,EAG9B8V,EAAII,kBAAoB,EAAG,CAC3B,MAAMhY,EAAK4X,EAAIK,cAAc,kBAAkBnW,OAC/C,OAAOkL,OAAO5D,IAAIpJ,EAAI,MAAO8B,EAChC,CAED,OAAQxB,GACJ,IAAK,YACD,OAAIwB,aAAeJ,KAAaI,EAC5BZ,EAAOmC,SAASvB,GAAa,IAAIoP,OAAOpP,GAAKsD,OAAOwS,EAAIxS,OAAQvB,GAChE+T,EAAIxS,OAAe8L,OAAOtL,MAAM9D,EAAK8V,EAAIxS,OAAQvB,GAC9CnC,KAAKkE,MAAM9D,GACtB,IAAK,OACD,GAAIA,aAAeJ,KAAM,OAAOI,EAChC,MAAMoW,EAAMhX,EAAOgM,OAAO0K,EAAIxS,aAAUH,EAAY2S,EAAIxS,OACxD,OAAIlE,EAAOoC,SAASxB,GAAaoP,OAAOtL,MAAM9D,EAAKoW,EAAKrU,GACjD/B,GAAc,GAAPA,EAAW,IAAIoP,OAAOpP,GAAKsD,OAAO8S,EAAKrU,GAAY/B,EACrE,IAAK,SACL,IAAK,OACD,GAAIA,aAAeJ,KAAM,CACrB,MAAMwW,EAAMN,EAAIxS,QAAUlE,EAAOkV,cAAcvS,GAC/C,OAAO,IAAIqN,OAAOpP,GAAKsD,OAAO8S,EAAKrU,EACvD,CACgB,MACJ,IAAK,UACD,OAAO3C,EAAOgM,OAAOpL,GAAK,GAC9B,IAAK,SACD,OAAOZ,EAAOsM,MAAM1L,EAAKA,EAAK+B,GAClC,IAAK,WACG3C,EAAOoC,SAASxB,KAAMA,EAAMZ,EAAOsM,MAAM1L,IAC7C,MAAMmM,EAAM,CAAEkK,MAAO,WAAYtB,SAAUe,EAAIf,UAC/C,OAAO,IAAI3R,KAAKC,aAAatB,EAAUoK,GAAK7I,OAAOtD,GAG3D,OAAOA,CACV,CAED/B,SAAe6X,EAAK9V,GAChB,OAAI8V,EAAItX,KAAasX,EAAItX,KACrBwB,aAAeJ,KAAa,OAC5BI,aAAe2M,OAAe,SAC9B3M,aAAeH,QAAgB,iBACrBG,CACjB,CASD/B,cAAeoI,EAAO,GAAIjC,EAAS,GAAIkS,EAAQC,EAAQ,GACnD,IAAIxM,EAAM,EACNyM,GAAM,EACV,IAAK,IAAIC,KAAOpQ,EAMZ,GALAmQ,EAAM1B,OAAO4B,aAAaD,EAAKrS,EAAQkS,GACnCE,IACAzM,UACM0M,GAENF,EAAQ,GAAKxM,GAAOwM,EAAO,KAEtC,CASDtY,kBAAkBoI,EAAO,GAAIjC,EAAS,GAAIkS,EAAQC,EAAQ,GAGtD,OAFAlQ,EAAOlF,MAAMC,QAAQiF,GAAQA,EAAO,CAACA,GAEf,KADtBjC,EAASjD,MAAMC,QAAQgD,GAAUA,EAAS,CAACA,IAChCvB,OAAqBwD,EACzB,IAAIyO,OAAO1Q,OAAOiC,EAAMjC,EAAQkS,EAAQC,GAClD,CASDtY,oBAAoBwY,EAAKrS,EAAQkS,GAE7B,OADiBlX,EAAOuX,YAAYvS,GAClB0Q,OAAO8B,aAAaH,EAAKrS,EAAQkS,GAAUxB,OAAO+B,cAAcJ,EAAKrS,EAAQkS,EAClG,CASDrY,oBAAoBwY,EAAKrS,EAAS,GAAIkS,GAClClS,EAASA,EAAOlE,cAChBoW,EAASA,GAAUrX,OAAOyE,KAAK+S,GAC/B,IAAI3W,EAAQ,KACZ,IAAK,IAAImV,KAAOqB,EAEZ,GADAxW,EAAQ2W,EAAIxB,GACRH,OAAOgC,YAAYhX,EAAOsE,GAAS,OAAO,EAElD,OAAO,CACV,CAaDnG,qBAAqBwY,EAAKrS,EAAQkS,GAE9B,IAAIS,GAAY,EACZC,GAAQ,EACRlX,EAAQ,KAEZ,IAAK,IAAImX,KAAO7S,EAcZ,GAZA2S,EAAY3X,EAAOuX,YAAYM,GAC3BF,EACAC,EAAQA,GAASlC,OAAO8B,aAAaH,EAAKQ,EAAKX,IAE/CxW,EAAQ2W,EAAIQ,EAAI3Q,MAEZ0Q,EADAC,EAAI3Q,KACI0Q,GAASlC,OAAOgC,YAAYhX,EAAOmX,GAEnCD,GAASlC,OAAO8B,aAAaH,EAAKQ,EAAInX,MAAOwW,KAIxDU,EAAO,MAGhB,OAAOA,CACV,CAED/Y,mBAAmB6B,EAAOsE,GACtB,MAAM8S,EAAU9X,EAAOuX,YAAYvS,GAAUA,EAASA,EAAOtE,MAC7D,OAAIV,EAAOkC,OAAOxB,GACPgV,OAAOqC,UAAUrX,EAAOsE,GACxBhF,EAAOmC,SAASzB,GAChBgV,OAAOsC,YAAYtX,EAAOV,EAAOsM,MAAMwL,EAAS,MAAO9S,EAAOiT,IAE7DjY,EAAOa,UAAUH,GAAQwX,oBAAoB9O,SAASpJ,EAAOa,UAAUiX,GAASI,oBAE/F,CAEDrZ,iBAAiB+B,EAAKoE,EAAQrC,GAE1B,GAAsB,iBAAXqC,EAAqB,CAC5B,MAAMtE,EAAQ,GAAKsE,EACbmT,EAAQvX,EAAIwX,mBAAmBzV,GAC/B0V,EAAMzX,EAAI0X,cAChB,OAAOH,EAAM/O,SAAS1I,IAAU2X,EAAIjP,SAAS1I,EAChD,CAED,IAAKsE,EAAOtE,MAAO,OAAO,EAI1B,OAFYsE,EAAOtE,iBAAiBF,KAAO,cAAgBwE,EAAOtE,OAG9D,IAAK,SACD,OAAOgV,OAAOsC,YAAYpX,EAAI+S,UAAW3O,EAAOtE,MAAOsE,EAAOiT,IAClE,IAAK,OACD,OAAOvC,OAAOsC,YAAYpX,EAAI+S,UAAW3O,EAAOtE,MAAMiT,UAAW3O,EAAOiT,IAGhF,OAAOvC,OAAOqC,UAAUnX,EAAK,GAAKoE,EAAOtE,MAAOsE,EAAOrC,SAC1D,CAQD9D,mBAAmB6B,EAAQ,EAAGkI,EAAQ,EAAG2P,EAAW,MAChD,OAAQA,GACJ,IAAK,KAAM,OAAO3P,EAAQlI,EAC1B,IAAK,KAAM,OAAOkI,EAAQlI,EAC1B,IAAK,KAAM,OAAOkI,GAASlI,EAC3B,IAAK,KAAM,OAAOkI,GAASlI,EAE/B,OAAOA,IAAUkI,CACpB,CAQD/J,gBAAgBoI,EAAMuR,GAClB,OAAoB,IAAhBA,EAAK/U,OAAqBwD,EACvBA,EAAKiP,UAAS,CAAClQ,EAAG+P,IAAML,OAAO+C,SAASzS,EAAG+P,EAAGyC,IACxD,CASD3Z,gBAAgBmH,EAAG+P,EAAGyC,GAElB,MAAMxW,EAAUD,MAAMC,QAAQgE,GAC9B,IAAIoR,EAAM,EAaV,OAXAoB,EAAKzS,SAAQ,CAACjE,EAAGH,KACb,IAAKG,EAAG,OACR,MAAM4W,EAAM1Y,EAAOmC,SAASL,GAAKA,EAAIA,EAAE4W,IACjCC,EAAM3Y,EAAOmC,SAASL,EAAE8W,KAAO9W,EAAE8W,IAAMjX,EACvCkU,EAAM7T,EAAU2W,EAAM7W,EAAEoF,KACxB2R,EAAK7S,EAAE6P,GACPiD,EAAK/C,EAAEF,GAEbuB,EAAM1B,OAAOqD,QAAQF,EAAIC,EAAIJ,EAAKtB,EAAI,IAGnCA,CACV,CAUDvY,eAAega,EAAIC,EAAIE,EAAO5B,GAC1B,OAAIpX,EAAOmC,SAAS0W,IAAO7Y,EAAOmC,SAAS2W,GAChC1B,GAAO1B,OAAOuD,WAAWJ,EAAIC,EAAIE,GACjChZ,EAAOoC,SAASyW,IAAO7Y,EAAOoC,SAAS0W,GACvC1B,GAAO1B,OAAOwD,cAAcL,EAAIC,EAAIE,GACpChZ,EAAOiC,OAAO4W,IAAO7Y,EAAOiC,OAAO6W,GACnC1B,GAAO1B,OAAOyD,YAAYN,EAAIC,EAAIE,GAClChZ,EAAOkC,OAAO2W,IAAO7Y,EAAOkC,OAAO4W,GACnC1B,GAAO1B,OAAOuD,WAAW1L,OAAOsL,GAAKtL,OAAOuL,GAAKE,GAErD5B,CACV,CASDvY,mBAAmBga,EAAIC,EAAIJ,GAGvB,OAFAG,EAAKA,EAAK,EAAI,EACdC,EAAKA,EAAK,EAAI,EACPpD,OAAOuD,WAAWJ,EAAIC,EAAIJ,EACpC,CASD7Z,qBAAqBga,EAAIC,EAAIJ,GACzB,MAAMU,GAAMP,GAAM,IAAIlY,WAChB0Y,GAAMP,GAAM,IAAInY,WACtB,OAAO+X,EAAM,EAAIW,EAAGC,cAAcF,GAAMA,EAAGE,cAAcD,EAC5D,CASDxa,kBAAkBga,EAAIC,EAAIJ,GACtB,OAAOA,EAAM,EAAII,EAAKD,EAAKA,EAAKC,CACnC,CAUDja,qBAAqBmC,EAAKkG,EAAMxG,EAAO6Y,GAAa,GAChD,GAAIA,GAAcvZ,EAAOyC,OAAO/B,GAAQ,OAExC,MAAM8Y,EAAMtS,EAAK9F,MAAM,KACvB,GAAmB,IAAfoY,EAAI/V,OACJ,OAAOiS,QAAO+D,EAAqBzY,EAAKkG,EAAMxG,GAGlD,MAAMgZ,EAAOF,EAAI/X,MAAM,GAAI,GACrBoU,EAAM2D,EAAI/X,OAAO,GAAG,GAO1B,OALAiY,EAAK3T,SAAQxF,IACJS,EAAI2Y,eAAepZ,KAAIS,EAAIT,GAAK,IACrCS,EAAMA,EAAIT,EAAE,IAGTmV,QAAO+D,EAAqBzY,EAAK6U,EAAKnV,EAChD,CAED7B,SAA4BmC,EAAKkG,EAAMxG,GAanC,OAZIM,EAAI2Y,eAAezS,IACdnF,MAAMC,QAAQhB,EAAIkG,MACnBlG,EAAIkG,GAAQ,CAAClG,EAAIkG,KAEjBnF,MAAMC,QAAQtB,GACdM,EAAIkG,GAAQlG,EAAIkG,GAAM2I,OAAOnP,GAE7BM,EAAIkG,GAAM0J,KAAKlQ,IAGnBM,EAAIkG,GAAQxG,EAETM,CACV,CASDnC,wBAAwBmC,EAAKkG,EAAM0S,GAAU,GACzC,GAAI5Z,EAAOyC,OAAOzB,GAAM,OACxB,MAAM6Y,EAAI,YAEV,IAAI1Z,EAAI+G,EACJvF,EAAI,GAYR,OAdgBkY,EAAE5W,KAAKiE,IAKnB/G,EAAI+G,EAAKjG,QAAQ4Y,EAAG,IACpBlY,EAAIuF,EAAK1E,MAAMqX,GAAG/K,QAAQtM,MAAM,OAAOsM,QACvCnN,EAAI3B,EAAOsM,MAAM3K,GACjBX,EAAMA,EAAI2Y,eAAexZ,GAAKa,EAAIb,GAAGwB,GAAK,MAE1CX,EADOA,EAAI2Y,eAAexZ,GACpByZ,EAAU5Y,EAAIb,IAAMa,EAAMA,EAAIb,GAE9B,KAEHa,CACV,CASJnC,sBAAsBmC,EAAKkG,GACpB,OAAIlG,GAAK2Y,eAAezS,GAAcwO,OAAOoE,iBAAiB9Y,EAAKkG,GAClEA,EAAOA,EAAK9F,MAAM,KAAKuO,QAAO,CAAC3J,EAAGzF,IAAMmV,OAAOoE,iBAAiB9T,EAAGzF,IAAIS,QAAO+C,CACrF,CAQDlF,uBAAuBmC,EAAKkG,GACrB,YAA4CnD,IAArC2R,OAAOqE,eAAe/Y,EAAKkG,EACxC,CAOErI,iBAAiBmC,GACb,OAAOyD,KAAKC,MAAMD,KAAKiI,UAAU1L,GACpC,QAGGnB,OAAOC,KAAK4V,QACZzV,WAAWyV,OAASA,MACvB,ECldE,MAAMsE,MAEZnb,uBAAyB,0WACzBA,mBAAqB,iLACrBA,SAAiB,CAAC,QAAS,SAAU,WAAY,UAEjDA,SAAmB,eAGnBA,aAAe,IAMfA,eAAekL,GACdhI,MAAMmI,KAAK8P,MAAMC,KAAKlQ,GAAO,GAAO,GAAM,IACzChE,SAAQjH,IACJkb,MAAME,kBAAkBpb,IAAKkb,MAAMG,QAAQrb,EAAGsb,SAClDtb,EAAGub,WACHvb,EAAG8G,UAAY,GACf9G,EAAGwb,eAAYvW,CAAS,GAEzB,CAMUwW,2BACV,OAAOP,MAAMQ,OAAO9U,SAAS6U,cAC7B,CAOD1b,cAAcC,GACb,OAAOA,EAAG2b,YAAYF,cAAgBP,MAAMQ,OAAO1b,EAAG2b,YAAYF,eAAiBzb,CACnF,CAODD,iBAAiBC,GAChB,IAAKkb,MAAMjO,cAAcjN,GAAK,OAAO,EACrC,MAAM4b,EAAMxM,SAASe,qBAAqBnQ,GACpC6b,GAAcD,EAAI3L,QAAQ,aAAc,UACxC6L,GAAWF,EAAI3L,QAAQ,UAAW,QAClC8L,EAAUH,EAAIpO,MAAM,WAAa,EACjCwO,EAAOhc,EAAGic,wBAEhB,OADcD,EAAKE,MAAQ,GAAKF,EAAKG,OAAS,GAC/BJ,GAAWF,GAAcC,CACxC,CAUD/b,aAAaqc,EAAO,GAAIC,GAAS,EAAOC,EAAO,aAC9C,IACC,MACMC,GADS,IAAIC,WACAC,gBAAgBL,EAAME,GACzC,OAAOD,EAAUE,GAAKG,MAAMC,mBAAqBJ,GAAKlN,MAAMsN,kBAAqBJ,CACjF,CAAC,MAAOrQ,GAER,MADApM,MAAM8c,MAAM,KAAM1Q,GACZA,CACN,CACD,CAQDnM,oBAAoBwK,EAAKb,EAAM,GAAImT,GAAY,GAE9C,MAAMN,EAAMrB,MAAMtV,MAAM8D,GAIlBoT,EAAQ,IAHD5B,OAAM6B,EAAUR,EAAIG,KAAK/N,aACzBuM,OAAM6B,EAAUR,EAAIlN,KAAKV,WAIhCqO,EAAOH,GAA8B,IAAjBC,EAAMnY,OAE1ByB,EAAM8U,MAAM8B,KAAKzS,EAAKyS,EAAO,KAAOF,EAAM9M,SAEhD,KAAO8M,EAAMnY,OAAS,GAAGyB,EAAI6W,YAAYH,EAAM9M,SAE/C,OAAO5J,CACP,CASDrG,YAAYwK,EAAK6D,GAChB,OAAO8M,MAAMgC,KAAK3S,EAAK6D,GAAUxH,SAASC,cAAc,YACxD,CASD9G,YAAYwK,EAAK6D,GAGhB,OAFAA,EAAOjB,aAAa,QAAS,IAAI5C,EAAI7J,MACjC6J,EAAI4S,MAAM/O,EAAOjB,aAAa,OAAQ5C,EAAI4S,MACvC/O,CACP,CAEDrO,SAAiB+c,GAChB,OAAO7Z,MAAMmI,KAAK0R,GAAS,IAAI5W,QAAOlG,IAAOkb,MAAMkC,OAAOpd,IAC1D,CAODD,qBAAqBC,GACpB,MAAMoI,EAAOlH,EAAOoC,SAAStD,GAAMA,EAAKA,GAAIqd,QAC5C,OAAOnC,OAAMoC,EAAQhT,SAASlC,EAC9B,CAQDrI,oBAAoBC,EAAIud,GAAS,GAChC,OAAOrC,MAAMsC,SAASxd,EAAIkb,OAAMoC,EAAQ1a,KAAInB,GAAKA,EAAEO,gBAAgBub,EACnE,CAODxd,uBAAuBC,GACtB,OAAQA,aAAcyd,mBACF,cAAhBzd,GAAIqd,SACJnC,MAAMwC,SAAS1d,EAAI,MACvB,CASDD,iBAAiBC,EAAIM,GAGpB,KADeA,GAAQN,GACV,OAAO,EAIpB,IAFckB,EAAOoC,SAAShD,GAElB,OAAON,aAAcM,EAEjC,MAAMqd,EAAWxU,eAAeC,IAAI9I,EAAK0B,eACzC,GAAI2b,GAAY3d,aAAc2d,EAAU,OAAO3d,EAE/C,MAAM2X,EAAKuD,MAAM0C,YAAY5d,GAC7B,IAAK,IAAI6d,KAAOlG,EACf,GAAIkG,GAAK9a,aAAaqF,OAAS9H,EAAM,OAAON,EAG7C,OAAIM,EAAKoC,gBAAkB1C,EAAGqd,SAAgBrd,CAG9C,CAMDD,gBAAgBC,GACf,OAAOA,aAAc8d,iBACrB,CAMD/d,qBAAqBC,GACpB,OAAOA,aAAc+d,eACrB,CAMDhe,yBAAyBC,GACxB,OAAOA,aAAcge,mBACrB,CAMDje,qBAAqBC,GACpB,OAAOA,aAAciJ,WACrB,CAMDlJ,oBAAoBC,GACnB,OAAOA,aAAcie,UACrB,CAMDle,cAAcC,GACb,OAAOA,aAAcke,IACrB,CAMDne,iBAAiBC,GAChB,OAAOA,aAAcme,OACrB,CAMDpe,mBAAmBC,GAClB,IAAKA,GAAIoe,UAAW,OAAO,EAC3B,MAAMzG,EAAKuD,MAAM0C,YAAY5d,GAC7B,IAAK,IAAIyB,KAAKkW,EAAI,CACjB,IAAKlW,EAAG,MACR,GAAqB,cAAjBA,GAAG2c,UAA2B,OAAO,CACzC,CACD,OAAO,CACP,CAODre,iBAAiBC,GAChB,OAAkD,IAA3CA,GAAIsN,aAAa,OAAOmK,QAAQ,MACvC,CAMD1X,kBAAkBC,GACjB,OAAOkb,MAAMmD,UAAUre,GAAIkG,QAAOgG,GAAKA,aAAaoS,aAAY5R,QAAQ9K,KACxE,CAOD7B,iBAAiBC,GAChB,OAAOiD,MAAMmI,KAAKpL,GAAIue,YAAc,IAAIrY,QAAOgG,GAAKgP,MAAMsD,YAAYtS,IACtE,CAQDnM,YAAYC,EAAIye,GAAc,GAC7B,OAAOze,GAAI0e,WAAWC,IAAIF,EAAc,sBAAwB,UAChE,CAQD1e,YAAYC,EAAIye,GAAc,GAC7B,OAAOze,GAAI0e,WAAWnD,OAAOkD,EAAc,sBAAwB,UACnE,CAQD1e,kBAAkBqO,EAAQwQ,GACzB,MAAMC,EAAa3D,MAAMjO,cAAc2R,IAAU1D,MAAM4D,aAAaF,GAC9DG,EAAO7D,MAAMjO,cAAcmB,IAAWyQ,EACtCG,EAAU5Q,IAAWwQ,GAASxQ,EAAO6Q,aAAeL,GAASxQ,EAAO8Q,qBAAuBN,EACjG,SAAOG,GAASC,IAAU5Q,EAAO6Q,WAAWE,aAAaP,EAAOxQ,EAAO8Q,mBACvE,CAQDnf,mBAAmBqO,EAAQwQ,GAE1B,UADa1D,MAAMjO,cAAcmB,IAAW8M,MAAMjO,cAAc2R,KACjDxQ,IAAWwQ,IAAQxQ,EAAO6O,YAAY2B,EACrD,CASD7e,sBAAsBqO,EAAQwQ,EAAOQ,GACpC,MAAMC,EAAOnE,MAAMjO,cAAcmB,IAAW8M,MAAMjO,cAAc2R,GAC1DI,EAAU5Q,IAAWwQ,GAASxQ,EAAO6Q,aAAeL,EAC1D,SAAOS,GAASL,IAAU5Q,EAAOkR,sBAAsBF,EAAWR,EAClE,CAOD7e,qBAAqBC,GACpB,OAAOkb,MAAMqE,OAAOvf,IAAKwf,YAAYxf,EACrC,CAWDD,YAAY0f,EAAMC,GAAU,EAAO5O,GAAM,EAAOyM,GAAS,GACxD,OAAOmC,EAAUxE,MAAMmD,UAAUoB,GAAQvE,MAAMyE,SAASF,EAAM3O,EAAKyM,EACnE,CAWDxd,gBAAiB0f,EAAM3O,GAAM,EAAOyM,GAAS,EAAMqC,GAAQ,GAC1D,IAAKH,EAAM,OACPG,UAAaH,GACblC,UAAerC,MAAMyE,SAASF,EAAK9D,WAAY7K,EAAKyM,GAAQ,IAChE,MAAM7F,EAAO5G,EAAM2O,EAAKlB,WAAakB,EAAK9Q,SAC1C,GAAK+I,EACL,IAAK,IAAIkI,KAASlI,QACVwD,MAAMyE,SAASC,EAAO9O,EAAKyM,GAAQ,EAE3C,CAQDxd,cAAcC,GACb,OAAOA,EAAMA,EAAG6f,eAAiB7f,EAAGif,YAAcjf,EAAGgO,KAAQ,IAC7D,CAQDjO,iBAAkBC,GACjB,IAAIkM,EAAIgP,MAAMqE,OAAOvf,GACrB,KAAOkM,SACAA,EACNA,EAAIgP,MAAMqE,OAAOrT,GAElB,GAAIA,EAAG,aAAaA,CACpB,CAQDnM,mBAAoBC,GACnB,IAAIkM,EAAIlM,EAAG4K,UACX,KAAOsB,SACAA,EACNA,EAAIA,EAAEtB,UAEP,GAAIsB,EAAG,aAAaA,CACpB,CAODnM,oBAAoBC,GACnB,IAAIoV,EAASpV,GAAI8f,aACjB,GAAI1K,EAAQ,OAAOA,EACnB,MAAMuC,EAAKuD,MAAMmD,UAAUre,GAC3B,IAAK,MAAM+f,KAAKpI,EAEf,GADAvC,EAAS2K,EAAED,aACP1K,EAAQ,MAEb,OAAOA,CACP,CAODrV,YAAYC,GAEX,IAAKA,EAAI,OAAO,KAEhB,MAAM2X,EAAKuD,MAAMmD,UAAUre,GAC3B,IAAK,IAAIyB,KAAKkW,EAAI,CACjB,GAAIlW,aAAa6c,WAAY,OAAO7c,EACpC,GAAIA,aAAaue,gBAAiB,OAAOve,CACzC,CAED,OAAO,IACP,CAOD1B,iBAAiBC,GAChB,OAAOkb,MAAMqE,OAAOrE,MAAM+E,KAAKjgB,GAC/B,CAODD,uBAAuB0f,GACtB,OAAKvE,MAAMjO,cAAcwS,GAClB,IAAIA,EAAKI,cAAclR,UAAU8I,QAAQgI,GADT,CAEvC,CAQD1f,eAAeC,EAAIU,GAClB,GAAkB,iBAAPV,EAAiB,OAAOkb,MAAMgF,QAAQtZ,SAASuZ,gBAAiBngB,GAC3E,IAAMA,IAAMU,EAAK,OAAO,KACxB,MAAMiX,EAAKuD,MAAMC,KAAKnb,GAAI,GAC1B,IAAK,IAAIgD,KAAK2U,EACb,GAAI3U,EAAEtC,KAAOA,EAAI,OAAOsC,EAEzB,OAAO,IACP,CASDjD,eAAeC,EAAIogB,EAAKC,EAAS,GAChC,GAAkB,iBAAPrgB,EAAiB,OAAOkb,MAAMwE,QAAQ9Y,SAASuZ,gBAAiBC,GAC3E,IAAMpgB,IAAMogB,EAAM,OAAO,KAEzB,MAAM/H,GADNgI,EAASnf,EAAOsM,MAAM6S,EAAQ,IACP,EACjB1I,EAAKuD,MAAMC,KAAKnb,GAAI,GAC1B,IAAK,IAAIgD,KAAK2U,EAAI,CACjB,GAAIuD,MAAMjL,QAAQjN,EAAGod,GAAM,OAAOpd,EAClC,GAAIqV,GAAqB,KAAVgI,EAAa,OAAO,IACnC,CACD,OAAO,IACP,CASDtgB,aAAaC,EAAIogB,EAAKtP,GAAM,EAAOyM,GAAS,GAC3C,GAAkB,iBAAPvd,EAAiB,OAAOkb,MAAMpR,MAAMlD,SAASuZ,gBAAiBngB,EAAI8Q,EAAKyM,GAClF,IAAMvd,IAAMogB,EAAM,OAAO,KACzB,GAAIlF,MAAMjL,QAAQjQ,EAAIogB,GAAM,OAAOlF,OAAMoF,EAAOtgB,GAChD,MAAM2X,EAAKuD,MAAMC,KAAKnb,GAAI,EAAO8Q,EAAKyM,GACtC,IAAK,IAAIva,KAAK2U,EACb,GAAIuD,MAAMjL,QAAQjN,EAAGod,GAAM,OAAOlF,OAAMoF,EAAOtd,GAEhD,OAAO,IACP,CASDjD,gBAAgBC,EAAIogB,EAAKtP,GAAM,EAAOyM,GAAS,GAC9C,GAAkB,iBAAPvd,EAAiB,OAAOkb,MAAMsC,SAAS5W,SAASuZ,gBAAiBngB,EAAI8Q,EAAKyM,GACrF,MAAMgD,EAAM,GACZ,IAAMvgB,IAAMogB,EAAM,OAAOG,EACzB,MAAM5I,EAAKuD,MAAMC,KAAKnb,GAAI,EAAO8Q,EAAKyM,GACtC,IAAK,IAAIva,KAAK2U,EACTuD,MAAMjL,QAAQjN,EAAGod,IAAMG,EAAIzO,KAAKoJ,OAAMoF,EAAOtd,IAElD,OAAOud,CACP,CAMDxgB,SAAcC,GACb,MAAmB,SAAfA,EAAGqd,QAA2Brd,EAC7Bkb,MAAMjO,cAAcjN,EAAGU,IACrB,IAAIyN,MAAMnO,EAAI,CACpBoJ,IAAK,CAAUgF,EAAQC,EAAMmS,KAC5B,GAAa,YAATnS,EAAoB,OAAOD,EAC/B,GAAa,OAATC,EAAe,OAAOD,EAAOd,aAAa,MAC9C,MAAMiT,EAAM7V,QAAQtB,IAAIgF,EAAQC,GAChC,OAAOjE,WAAWC,WAAWkW,GAAOA,EAAIvY,KAAKoG,GAAUmS,CACvD,EACD7S,IAAK,CAAUU,EAAQC,EAAMzM,IACrBwM,EAAOC,GAAQzM,IATgB5B,CAYxC,CAQDD,eAAeC,EAAIogB,GAElB,OAAOpgB,GAA4B,mBAAfA,EAAGiQ,SAA0BjQ,EAAGiQ,QAAQmQ,EAC5D,CAaDrgB,eAAeC,EAAI8B,EAAM,GAAI2e,GAAW,EAAOC,IAC9B1gB,aAAcse,YAActe,aAAciJ,aAAejJ,aAAcge,uBAEnFyC,GAAYzgB,GAAI2gB,QACnBD,EAAY1gB,EAAG2gB,QAAQ7e,EAAK,CAAE4e,cAAe1gB,EAAG2gB,QAAQ7e,GAExD9B,EAAG8G,UAAYhF,aAAe8e,SAAW9e,EAAIuN,KAAKvI,UAAYhF,EAE/D,CAQD/B,eAAeC,EAAI8B,EAAM,IACpB9B,IAAIA,EAAG6gB,YAAc/e,EACzB,CAOD/B,WAAWC,EAAIkC,GAGd,GAFIhB,EAAOoC,SAAStD,KAAKA,EAAKkb,MAAMsC,SAASxd,IACzCkb,MAAMjO,cAAcjN,KAAKA,EAAK,CAACA,MAC7BiD,MAAMC,QAAQlD,IAAOA,EAAG2E,OAAS,GAAI,OAAO,EAClDmc,uBAAsB,KACrB9gB,EAAGiH,SAAQ0Q,GAAM5W,OAAOggB,OAAOpJ,EAAGQ,MAAOjW,IAAK,GAS/C,CASDnC,mBAAmBC,EAAI8B,EAAKwW,GAG3B,OAFIpX,EAAOoC,SAAStD,KAAKA,EAAKkb,MAAMsC,SAASxd,IACzCkb,MAAMjO,cAAcjN,KAAKA,EAAK,CAACA,OAC7BiD,MAAMC,QAAQlD,IAAOA,EAAG2E,OAAS,QAClC7C,GAA4B,GAArBA,EAAIsC,OAAOO,UACvB7C,EAAMA,EAAIQ,MAAM,KAAK4D,QAAOzE,GAAKA,GAAKA,EAAE2C,OAAOO,OAAS,IACpDzD,EAAOyC,OAAO2U,GAAaxW,EAAImF,SAAQxF,IAC1CzB,EAAGiH,SAAQ0Q,GAAMA,EAAG+G,UAAUlQ,OAAO/M,IAAG,KAEzCzB,EAAGiH,SAAQ0Q,IACVW,EAAMX,EAAG+G,UAAUC,IAAItT,MAAMsM,EAAG+G,UAAW5c,GAAO6V,EAAG+G,UAAUnD,OAAOlQ,MAAMsM,EAAG+G,UAAW5c,EAAI,KAExF,IACP,CAOD/B,cAAcC,EAAIsY,GACjB,OAAO4C,MAAM8F,YAAYhhB,EAAI,SAAUkB,EAAOyC,OAAO2U,GAAOA,GAAOA,EACnE,CAQDvY,gBAAgBC,EAAI8B,EAAM,IACzB,OAAO9B,GAAI0e,WAAWuC,SAASnf,EAC/B,CAOD/B,mBAAmBkL,EAAOmV,EAAM,2BAC/B,MAAMH,EAAO/E,MAAMgG,OAAOjW,GAC1B6V,uBAAsB,KACrBb,EAAKkB,iBAAiBf,GAAKnZ,SAASjH,GAAOA,EAAG4B,MAAQ,IAAG,GAE1D,CAQD7B,gBAAgBC,EAAIohB,GAAW,GAC9B,IAAItf,EAAM,KACV,OAAQ9B,EAAGM,MACV,IAAK,iBACJwB,EAAM9B,EAAG4B,MAAQ5B,EAAGqhB,cAAgBrhB,EAAG4B,MACvC,MACD,IAAK,SACJE,EAAM9B,EAAG4B,MAAQ5B,EAAGqhB,cAAgB,EACpC,MACD,IAAK,kBACJvf,EAAMmB,MAAMmI,KAAKpL,EAAGshB,iBAAiB1e,KAAII,GAAKA,EAAEpB,QAChD,MACD,IAAK,WAEHE,EADGZ,EAAO6F,iBAAiB/G,EAAG4B,OACxB5B,EAAGuhB,QAAUvhB,EAAG4B,MAAQ,KAExB5B,EAAGuhB,QAEV,MACD,QACCzf,EAAM9B,EAAG4B,MAMX,OAHIV,EAAOyC,OAAO7B,IAAQsf,IACzBtf,EAAM9B,EAAGwhB,cAEH1f,CACP,CAQD/B,eAAeC,EAAIohB,GAAW,GAC7B,IAAKlG,MAAMjO,cAAcjN,GAAK,OAC9B,IAAI4B,EAAQsZ,MAAMuG,SAASzhB,EAAIohB,GAC/B,GAAI,SAAWphB,EAAGM,KAAM,CACvB,MAAMsC,EAAMwM,SAASsS,WAAW1hB,EAAI,kBAChC4C,IAAKhB,EAAQV,EAAOygB,cAAc/e,EAAIhB,MAAOA,GACjD,CACD,OAAOA,CACP,CAQD7B,iBAAiBC,EAAI8B,EAAKsf,GAAW,GACpC,IAAKlG,MAAMjO,cAAcjN,GAAK,OAC9B,MAAMmI,EAAOlF,MAAMC,QAAQpB,GAAOA,EAAI,IAAM,GAAKA,EAEjD,GACM,aADE9B,EAAGM,KAELY,EAAO6F,iBAAiB/G,EAAG4B,OAC9B5B,EAAGuhB,QAAUpZ,IAASnI,EAAG4B,MAEzB5B,EAAGuhB,QAAkB,GAARpZ,EAEViZ,IAAUphB,EAAGwhB,aAAexhB,EAAGuhB,cAGnCvhB,EAAG4B,MAAQV,EAAOa,UAAUoG,GACxBiZ,IAAUphB,EAAGwhB,aAAexhB,EAAG4B,MAErC,CAUD7B,gBAAgBkL,EAAOmV,EAAM,kCAAmCpB,GAAU,EAAMoC,GAAW,GAC1F,MAAMnB,EAAO/E,MAAMgG,OAAOjW,GACpB5E,EAAS,CAAA,EAMf,OALA6U,MAAMsC,SAASyC,EAAMG,GACnBla,QAAOlG,GAAMA,EAAGoI,OAChBlC,QAAOlG,GAA4B,SAAtBA,EAAGsO,QAAQsT,SACxB1b,QAAOlG,KAAMgf,GAAiBhf,EAAG6hB,kBACjC5a,SAAQjH,GAAMkb,MAAM4G,mBAAmB9hB,EAAIqG,EAAQ+a,KAC9C/a,CACP,CAUDtG,kBAAkBkL,EAAO/I,EAAKke,EAAM,kCAAmCgB,GAAW,GACjFlf,EAAMhB,EAAOuM,OAAOvL,GAEpB,MAAM+d,EAAO/E,MAAMgG,OAAOjW,GACpByM,EAAOwD,MAAMsC,SAASyC,EAAMG,GAElC,OADAnd,MAAMmI,KAAKsM,GAAMzQ,SAAQjH,GAAMkb,MAAM6G,mBAAmB/hB,EAAIkC,EAAKkf,KAC1Dlf,CACP,CAQDnC,0BAA0BC,EAAIkC,EAAKkf,GAAW,GAC7C,IAAKxK,OAAOoL,gBAAgB9f,EAAKlC,GAAIoI,MAAO,OAC5C,MAAMtG,EAAM8U,OAAOqE,eAAe/Y,EAAKlC,EAAGoI,MAC1B,UAAZpI,EAAGM,KACN4a,MAAM+G,UAAUjiB,EAAI8B,EAAKsf,GACfphB,EAAG4B,QAAUE,IAAK9B,EAAGuhB,SAAU,EAC1C,CAQDxhB,0BAA0BC,EAAIkC,EAAKkf,GAAW,EAAOc,GAAU,GAC9D,GAAIliB,GAAIoI,KAAM,CACb,GAAI8Z,GAAWhhB,EAAO8D,cAAchF,EAAG4B,OAAQ,OAAOM,GACtC,UAAZlC,EAAGM,MAGIN,EAAGuhB,UADb3K,OAAOuL,cAAcjgB,EAAKlC,EAAGoI,KAAM8S,MAAMkH,QAAQpiB,EAAIohB,GAKzD,CAGE,OAAOlf,CACP,CAUDnC,cAAcwK,EAAK2D,GAAY,EAAMmU,GAAQ,EAAOC,GACnD,GAAIrf,MAAMC,QAAQqH,GAAM,OAAOA,EAAI3H,KAAII,GAAKkY,MAAMzN,OAAOzK,EAAGkL,EAAWmU,EAAOC,KAC9E,MAAMpgB,EAAM,CAAA,EACZ,IAAKgZ,MAAMjO,cAAc1C,GAAM,OAAOrI,EAEjCmgB,IAAOngB,EAAI,YAAcqI,EAAI8S,QAAQrb,eAC1CE,EAAW,MAAIqI,EAAIgY,UAInB,MAAMC,EAAQF,GAAepH,MAAMuH,cAAclY,GAgBjD,GAfAtH,MAAMmI,KAAKb,EAAIwD,YAAY9G,SAAQxF,IAClC,MAAMnB,EAAOkiB,EAAM/gB,EAAE2G,OAAO9H,KAC5B,OAAQA,GACP,KAAKqB,QACJO,EAAIT,EAAE2G,MAAQmC,EAAI2E,aAAazN,EAAE2G,MACjC,MACD,KAAKqG,OACJvM,EAAIT,EAAE2G,MAAQ4E,OAAO0V,SAASnY,EAAK9I,EAAE2G,MACrC,MACD,QACClG,EAAIT,EAAE2G,MAAQ3G,EAAEG,MAEjB,IAGEsM,EAAW,CACd,MAAMS,EAAW1L,MAAMmI,KAAKb,EAAIoE,UAAU/L,KAAI5C,GAAMkb,MAAMzN,OAAOzN,EAAIkO,EAAWmU,EAAOC,KACnF3T,EAAShK,OAAS,IAAGzC,EAAIygB,MAAQhU,EACrC,CAED,OAAOzM,CACP,CAQDnC,gBAAgBmC,EAAK0gB,EAAM,UAAWC,GAAW,GAChD,OAAOA,EAAW3H,MAAM4H,iBAAiB5gB,EAAK0gB,GAAO1H,MAAM6H,cAAc7gB,EAAK0gB,EAC9E,CAQD7iB,qBAAqBmC,EAAK0gB,EAAM,WAC/B,IAAK1gB,EAAK,OAAO,KAGjB,GADoBhB,EAAOmC,SAASnB,IAAQhB,EAAOoC,SAASpB,GAC3C,OAAOgZ,MAAM6H,cAAc,CAAEC,MAAO9gB,GAAO0gB,GAG5D,GADgB3f,MAAMC,QAAQhB,GACjB,OAAOA,EAAIU,KAAII,GAAKkY,MAAM6H,cAAc/f,EAAG4f,KAExD,MAAMxa,EAAOlG,EAAI,aAAe0gB,EAC1B5iB,EAAK4G,SAASC,cAAcuB,GAmBlC,OAjBArH,OAAOyE,KAAKtD,GACVgE,QAAOzE,GAAU,SAALA,IACZyE,QAAOzE,GAAa,KAARA,EAAE,KACdyE,QAAOzE,GAAa,KAARA,EAAE,KACdwF,SAAQxF,GAAKzB,EAAGmN,aAAa1L,EAAGS,EAAIT,MAElCS,EAAI,UACPlC,EAAG+K,OAAOkY,IAAI,SAAW/gB,EAAI,SAG1Be,MAAMC,QAAQhB,EAAIygB,QACrBzgB,EAAIygB,MAAM1b,SAAQjE,IACjB,MAAMkgB,EAAMhI,MAAM6H,cAAc/f,EAAG4f,GACnC5iB,EAAGid,YAAYiG,EAAI,IAIdljB,CACP,CAQDD,wBAAwBmC,EAAK0gB,EAAM,WAClC,IAAK1gB,EAAK,OAAO,KAEjB,GAAIe,MAAMC,QAAQhB,GAAM,OAAOA,EAAIU,KAAII,GAAKkY,MAAM4H,iBAAiB9f,KAAIR,KAAK,IAE5E,MAAM4F,EAAOlG,EAAI,aAAe0gB,EAC1BlZ,EAAM,GAoBZ,OAnBAA,EAAIoI,KAAK,IAAI1J,MAEbrH,OAAOyE,KAAKtD,GACVgE,QAAOzE,GAAU,SAALA,IACZyE,QAAOzE,GAAa,KAARA,EAAE,KACdyE,QAAOzE,GAAa,KAARA,EAAE,KACdwF,SAAQxF,GAAKiI,EAAIoI,KAAK,IAAIrQ,MAAMS,EAAIT,UAEtCiI,EAAIoI,KAAK,KAEL7O,MAAMC,QAAQhB,EAAIygB,QACrBzgB,EAAIygB,MAAM1b,SAAQjE,IACjB,MAAMkgB,EAAMhI,MAAM4H,iBAAiB9f,EAAG4f,GACtClZ,EAAIoI,KAAKoR,EAAI,IAIfxZ,EAAIoI,KAAK,KAAK1J,MAEPsB,EAAIlH,KAAK,GAChB,CAMDzC,yBAAyBkL,GACxBkY,SAASC,KAAKzgB,MAAM,GAAGL,MAAM,KAC3B4D,QAAOzE,GAAKA,EAAEkD,OAAS,IACvBsC,SAAQxF,IACR,MAAMwR,EAAIxR,EAAEa,MAAM,KAClB4Y,MAAMmI,SAAS,cAAcpQ,EAAE,MAAOA,EAAE,GAAIhI,EAAM,GAEpD,CAODlL,cAAckL,GACb,OAAOA,EAAQA,EAAMxB,MAAQwB,EAAQrE,QACrC,CAOD7G,mBAAmBwK,EAAK6V,EAAM,gCAAiCtP,GAAM,EAAMwS,EAAQ,IAClFA,EAAQpiB,EAAOyO,eAAe2T,GAC9B,IAAI5L,EAAOwD,MAAMsC,SAASjT,EAAK6V,IAC1BtP,GAAOwS,IAAO5L,EAAOA,EAAKxR,QAAOlG,GAAMkB,EAAOgM,OAAOlN,EAAGsO,QAAQgV,OACrE5L,EAAKzQ,SAAQjH,GAAMA,EAAGoN,gBAAgB,aACtC,CAODrN,oBAAoBwK,EAAK6V,EAAM,gCAAiCtP,GAAM,EAAMwS,EAAQ,IACnFA,EAAQpiB,EAAOyO,eAAe2T,GAC9BpI,MAAMsC,SAASjT,EAAK6V,GAClBla,QAAOlG,KAAM8Q,IAAc9Q,EAAGujB,WAC9Btc,SAAQjH,IACRA,EAAGmN,aAAa,WAAY,IACxBmW,IAAOtjB,EAAGsO,QAAQgV,IAAS,EAAI,GAErC,CASDvjB,gBAAgBqgB,EAAKte,EAAKyI,EAAK6W,GAAW,GAC9BlG,MAAMsC,SAASjT,EAAK6V,GAC5BnZ,SAAQ0Q,GAAMuD,MAAM+G,UAAUtK,EAAI7V,EAAKsf,IAC1C,CAODrhB,sBAAsBC,GACrB,MAAMmb,EAAOvU,SAAS4c,iBAAiBxjB,GAAM4G,SAAU6c,WAAWC,UAAW,MAAM,GAC7Exc,EAAI,GACV,IAAI7F,EACJ,KAAOA,EAAI8Z,EAAKwI,YAAYzc,EAAE4K,KAAKzQ,GACnC,OAAO6F,CACP,CAMDnH,iBAAiBkgB,GAChB,MAAM2D,EAAK1I,MAAM2I,eAAe5D,GAAQrZ,UAAUV,QAAO4d,GAAmC,IAA9BA,EAAEC,UAAU3f,OAAOO,SACjFif,EAAG1d,QAAOlG,GAAMA,EAAGgkB,uBAAuB9F,OAAMjX,SAAQjH,GAAMA,EAAGub,WACjEqI,EAAG3c,SAAQ6c,GAAKA,EAAEtI,UAAYsI,EAAEC,UAAU9f,WAAW,aAAc,MAAMA,WAAWiX,OAAM+I,EAAW,KACrG,CAYDlkB,gBAAgBwK,EAAK8S,EAAS6G,EAAWC,GAAU,GAClD,GAAI5Z,EAAI8S,UAAYA,EAAS,CAC5B,GAAI8G,EAAS,OAAO,EACpB,MAAM,IAAIrjB,MAAM,mBAAmByJ,EAAI8S,eAAe9S,EAAI7J,gCAAgC2c,IAC1F,CAED,GADWnC,MAAMkJ,UAAUnhB,MAAMmI,KAAKb,EAAIgU,YAAa2F,GAC/C,OAAO,EACf,GAAIC,EAAS,OAAO,EACpB,MAAMlkB,EAAMib,MAAMmJ,kBAAkB9Z,EAAK2Z,GACzC,MAAM,IAAIpjB,MAAMb,EAChB,CASDF,iBAAiBC,EAAIkkB,GACpB,GAAIjhB,MAAMC,QAAQlD,GAAK,OAAkE,IAA3DA,EAAGkG,QAAOlG,GAAMkb,MAAMkJ,UAAUpkB,EAAIkkB,KAAYvf,OAC9E,MAAM2f,IAAiBtkB,aAAcke,MAAQle,aAAcme,SACrDoG,GAAYL,EAAU5Z,SAAStK,EAAGqd,SACxC,OAAOiH,GAAgBC,CACvB,CAEDxkB,yBAAyBwK,EAAK2Z,GAC7B,MAAMxM,EAAO,IAAIwM,EAAU1hB,KAAK,WAChC,MAAO,GAAG+H,EAAI8S,eAAe9S,EAAI7J,qCAAqCgX,IACtE,CAUD3X,uBAAuBwK,EAAKrG,GAC3B,IAAKqG,GAAKoR,sBAAsB2C,WAAY,OAAO,EACnD,IAAIhG,GAAM,EACV,IACC,MAAMiI,QAAYiE,MAAMtgB,GACxB,IAAKqc,EAAIkE,GAAI,OACb,MAAM7I,QAAY2E,EAAI7Z,OAChBge,EAAQ,IAAIC,cAClBD,EAAME,YAAYhJ,GAClBrR,EAAIoR,WAAWkJ,mBAAqB,CAACH,EACrC,CAAC,MAAOxY,GACRpM,MAAM8c,MAAM,KAAM1Q,GAClBoM,GAAM,CACN,CACD,OAAOA,CACP,CAODvY,aAAawP,GACZ,GAAI2L,MAAM4J,cAAcvV,KAClB2L,MAAM6J,YAAYxV,GAItB,OAHAA,EAAQjB,QAAQ0W,OAAQ,EACxBzV,EAAQ3N,MAAQ2N,EAAQiS,aACxBtG,OAAM+J,EAAU1V,IACT,CAGT,CAMDxP,mBAAmBwP,GAClB,GAAI2L,MAAMgK,SAAS3V,GAGlB,OAFAtM,MAAMmI,KAAKmE,EAAQ4V,SAASle,SAAQjH,GAAMA,EAAGolB,SAAWplB,EAAGkP,aAAa,cACxEgM,OAAM+J,EAAU1V,IACT,CAER,CAEDxP,SAAiBwP,GAChBA,EAAQ8V,cAAc,IAAIC,MAAM,SAAU,CAAEC,SAAS,EAAMC,UAAU,IACrE,CAQDzlB,qBAAqBmC,GACpB,MAAMwV,EAAO,IAAIwD,MAAM0C,YAAY1b,IAAMU,KAAII,GAAKA,EAAEyiB,aAAYvf,QAAOlD,GAAKA,IAE5E,OADA0U,EAAK5F,KAAK5P,EAAIa,aAAa0iB,YAAcvjB,EAAIujB,YACtC7O,OAAO8O,aAAahO,EAC3B,CAOD3X,mBAAmBiO,GAClB,GAAKA,EACL,MAAqB,gBAAjBA,EAAKqP,QAAkCrP,EAAKtE,IACzCsE,EAAK2X,UAAY3X,EAAKlE,QAAQ,YAAY,EACjD,CAED/J,SAAuBqI,EAAM6F,GAC5BhC,gBAAe,KACd9K,WAAWkkB,gBAAgB,IAAIO,YAAYxd,EAAM6F,GAAK,GAEvD,CAQDlO,cAAcqI,EAAMS,EAAOoF,GACrB9E,eAAeC,IAAIhB,KACvBe,eAAeE,OAAOjB,EAAMS,EAAOoF,GACnCiN,OAAM2K,EAAgBzd,EAAM,CAAE0d,OAAQ,CAAE3c,gBAAgB,KAEzD,QAGApI,OAAOC,KAAKka,OACZ/Z,WAAW+Z,MAAQA,MACnBA,OAAM2K,EAAgB,gBAAiB,CACtCC,OAAQ,CACPC,QAAS,mBACTxe,KAAM,IAAI7F,OAGZ,ECtqCK,MAAMskB,SAEZjmB,SAAc,EACdA,UAAkB,EAClBA,SAAgB,IAAIkmB,IAEpBlmB,UAAiB,EACjBA,SAAoB,EAEhBmmB,iBACH,OAAOF,UAASG,CAChB,CAEGD,eAAWpkB,GACdkkB,UAASG,EAAWjlB,EAAOgM,OAAOpL,GAAK,EACvC,CAKD/B,iBACCimB,SAASI,OAAOjlB,WAAY,KAAM,cAAe6kB,UAASK,GAC1DL,SAASI,OAAOjlB,WAAWyF,SAAU,KAAM,UAAWof,UAASM,EAC/D,CAEDvmB,SAAkBwmB,IACbP,UAASG,GAAaI,EAAMC,UAAUR,SAASS,QAAQF,EAC3D,CAEDxmB,SAAkBwmB,GACjB,MAAMG,EAAOH,EAAMG,KACnB,MAAY,OAARA,MAEOH,EAAMI,UAAWJ,EAAMC,UAAoB,QAARE,SAAvC,EAGP,CAWD3mB,0BAA0BqO,EAAQhG,EAAO,SAAUwe,EAAUlf,EAAU,EAAG+e,GAAU,GACnF,IAAKT,UAASa,EACb,UACOb,SAASc,KAAK3lB,WAAW6F,OAAQ,OAAQU,EAAS+e,GACxDT,UAASa,GAAU,CACnB,CAAC,MAAO3a,GAER,CAEE8Z,UAASa,UACNzc,EAAW2c,aAAaH,GAC9BZ,SAASgB,cAAc5Y,EAAQhG,GAEhC,CAYDrI,YAAYwK,EAAKnC,EAAO,GAAIV,EAAU,EAAG+e,GAAU,GAClD,GAAIvlB,EAAO8D,cAAcoD,GAAO,MAAM,IAAItH,MAAM,oBAChD,IAAKI,EAAOmC,SAASqE,GAAU,MAAM,IAAI5G,MAAM,0BAC/C,OAAI4G,EAAU,EAAUse,SAASiB,KAAK1c,EAAK,KAAMnC,EAAM,KAAMV,GACtD,IAAIC,SAAQC,IAClBoe,SAASiB,KAAK1c,EAAK,KAAMnC,GAAM8D,IAC1Bua,GAAST,SAASS,QAAQva,GAC9BtE,EAAQsE,EAAE,GACRxE,EAAQ,GAEZ,CAUD3H,gCAAgC6mB,EAAUM,GAAU,GAEnD,GAAIA,EAAS,CACZ,GAAwB,mBAAbN,EAAyB,OACpC,GAAIZ,UAASmB,EAAa,EAAG,OAAO/c,EAAW2c,aAAaH,GAC5DZ,UAASmB,GACT,CAED,OAAO,IAAIxf,SAAQ,CAACqE,EAAQnE,KAC3BiZ,uBAAsBhV,UACrB,IACC,MAAM9I,QAAUoH,EAAW2c,aAAaH,GACxC5a,EAAOhJ,EACP,CAAC,MAAOkJ,GACRrE,EAAOqE,EACZ,CAAc,QACLgb,GAAWlB,UAASmB,EAAa,GAAGnB,UAASmB,GACjD,IACA,GAEH,CAWDpnB,cAAcwK,EAAK6V,EAAKmG,EAAOK,EAAU3Y,GAAM,GAC9C,OAAKmS,GAAO7V,EAAYA,EAAItC,iBAAiBse,EAAOK,EAAU3Y,GACvDiN,MAAMsC,SAASjT,EAAK6V,GAAKxd,KAAI5C,GAAMA,EAAGiI,iBAAiBse,EAAOK,EAAU3Y,IAC/E,CAUDlO,gBAAgBwK,EAAK6V,EAAKmG,EAAOK,GAChC,OAAKxG,GAAO7V,EAAYA,EAAI6c,oBAAoBb,EAAOK,GAChD1L,MAAMsC,SAASjT,EAAK6V,GAAKxd,KAAI5C,GAAMA,EAAGonB,oBAAoBb,EAAOK,IACxE,CAED7mB,UAAYimB,SAASI,OACrBrmB,WAAaimB,SAASqB,SAWtBtnB,YAAYwK,EAAK6V,EAAKmG,EAAOK,EAAUlf,EAAU,GAChD,MAAMF,EAASwe,UAASsB,EAAU5f,GAClC,OAAIF,GAAUA,EAAO+f,SACb,IAAI5f,SAAQ,CAACC,EAASC,KAC5Bme,SAASI,OAAO7b,EAAK6V,EAAKmG,GAAOiB,IAChChgB,EAAO4f,oBAAoB,QAASvf,GACpC+e,IAAWY,GACX5f,EAAQ4f,EAAI,GACV,CAAEP,MAAM,EAAMzf,OAAQA,IACzBA,EAAOS,iBAAiB,QAASJ,EAAO,IAGnCme,SAASI,OAAO7b,EAAK6V,EAAKmG,EAAOK,EAAU,CAAEK,MAAM,EAAMzf,OAAQA,GACxE,CAUDzH,eAAemM,EAAGkV,GAAW,EAAMqG,GAAY,EAAMC,GAAY,GAC5Dxb,IACCkV,GAAUlV,EAAEyb,mBACZF,GAAWvb,EAAE0b,oBACbF,GAAWxb,EAAE2b,6BAElB,CAcD9nB,YAAY+nB,EAASlhB,SAAUwB,EAAMlG,EAAM,GAAIqjB,GAAU,EAAOC,GAAW,EAAOuC,GAAa,GAC9F,IAAK7mB,EAAOoC,SAAS8E,IAAyB,IAAhBA,EAAKzD,OAAc,OAAO,EACxD,MACM4hB,EAAQ,IAAIX,YAAYxd,EADlB,CAAE0d,OAAQ5jB,EAAKqjB,QAASA,EAASC,SAAUA,EAAUuC,WAAYA,IAE7E,OAAOD,GAAQzC,cAAckB,EAC7B,CAQDxmB,eAAeO,EAAM2N,GACpB,IAAIuZ,EAAM,KACV,OAAQlnB,GACP,IAAK,OACL,IAAK,MACL,IAAK,QACJknB,EAAM,IAAIQ,eAAe1nB,EAAM2N,GAC/B,MACD,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACJuZ,EAAM,IAAIS,WAAW3nB,EAAM2N,GAC3B,MACD,IAAK,QACL,IAAK,cACJuZ,EAAM,IAAIU,WAAW5nB,EAAM2N,GAC3B,MACD,IAAK,UACL,IAAK,QACL,IAAK,WACJuZ,EAAM,IAAIW,cAAc7nB,EAAM2N,GAC9B,MACD,IAAK,WACL,IAAK,YACL,IAAK,aACL,IAAK,aACL,IAAK,YACL,IAAK,WACL,IAAK,YACL,IAAK,UACJuZ,EAAM,IAAIY,WAAW9nB,EAAM2N,GAC3B,MACD,IAAK,SACJuZ,EAAM,IAAIa,YAAY/nB,EAAM2N,GAC5B,MACD,IAAK,aACL,IAAK,WACL,IAAK,YACL,IAAK,cACJuZ,EAAM,IAAIc,WAAWhoB,EAAM2N,GAC3B,MACD,IAAK,QACJuZ,EAAM,IAAIe,WAAWjoB,EAAM2N,GAC3B,MACD,IAAK,cACL,IAAK,eACL,IAAK,cACL,IAAK,cACL,IAAK,YACL,IAAK,gBACL,IAAK,aACL,IAAK,eACL,IAAK,mBACL,IAAK,oBACL,IAAK,qBACJuZ,EAAM,IAAIgB,aAAaloB,EAAM2N,GAC7B,MACD,QACCuZ,EAAM,IAAI5B,YAAYtlB,EAAM2N,GAE9B,OAAOuZ,CACP,CAODznB,6BAA6BmM,GAC5B,OAAOA,aAAakc,YAAclc,aAAasc,YAC/C,CAaDzoB,qBAAqB+nB,EAASlhB,SAAUwB,EAAMlG,EAAM,GAAIqjB,GAAU,EAAOC,GAAW,EAAOuC,GAAa,GACvG,OAAOjH,uBAAsB,KAC5BkF,SAASyC,KAAKX,EAAQ1f,EAAMlG,EAAKqjB,EAASC,EAAUuC,EAAW,GAEhE,CAcDhoB,mBAAmB2H,EAAU,EAAGogB,EAASlhB,SAAUwB,EAAMlG,EAAM,GAAIqjB,GAAU,EAAOC,GAAW,EAAOuC,GAAa,GAClH,OAAOhgB,YAAW,IAAMie,SAASyC,KAAKX,EAAQ1f,EAAMlG,EAAKqjB,EAASC,EAAUuC,IAAargB,EACzF,CAYD3H,cAAcwK,EAAKvK,EAAIoI,EAAO,GAAIzH,EAAIsmB,GAAO,EAAOyB,GAAU,GAC7D,IAAK1oB,EAAI,OAAO,EAChB,KAAMgH,kBAAkB2hB,QAAU3oB,EAAG4oB,aAAc,OAAO,EAC1D,IAAKxe,EAAWC,WAAW1J,GAAK,OAAO,EACvC,IAAKyJ,EAAWye,YAAY7oB,EAAI,oBAAqB,OAAO,EAC5D,MAAMyP,EAAKvP,KACLgC,EAAMuN,GAAGqZ,EAAUve,EAAKvK,EAAIoI,EAAMzH,GAClCooB,EAAQtZ,GAAGuZ,EAAeze,GAehC,OAdYkF,GAAGwZ,EAAUF,EAAO7mB,EAAI6U,KAChCrJ,IAAIxL,EAAIgnB,MAAOhnB,GACnBA,EAAIwmB,QAAUA,EACVzB,IACH/kB,EAAI+kB,KAAQ/a,IACX,IACChK,EAAIvB,GAAGuL,EACZ,CAAc,QACTuD,EAAG8L,OAAOrZ,EAAIqI,IAAKrI,EAAIlC,GAAIkC,EAAIkG,KAAMlG,EAAI+kB,KACzC,GAEFlmB,OAAOooB,eAAejnB,EAAI+kB,KAAM,OAAQ,CAAErlB,MAAOjB,EAAGyoB,KAAMC,UAAU,KAErErpB,EAAGiI,iBAAiBG,EAAM6e,EAAO/kB,EAAI+kB,KAAO/kB,EAAIvB,GAAI,CAAEsmB,KAAMA,EAAMyB,QAASA,KACpE,CACP,CASD3oB,cAAcwK,EAAKvK,EAAIoI,EAAO,GAAIzH,GACjC,MAAM8O,EAAKvP,KACLgC,EAAMuN,GAAGqZ,EAAUve,EAAKvK,EAAIoI,EAAMzH,GAClCooB,EAAQtZ,GAAGuZ,EAAeze,GAC1B3H,EAAM6M,GAAGwZ,EAAUF,EAAO7mB,EAAI6U,KAC9Ba,EAAMhV,EAAIwG,IAAIlH,EAAIgnB,OACxB,GAAItR,EACHhV,EAAI0mB,OAAO1R,EAAIsR,OACfzZ,GAAG8Z,EAAgB3R,QACb,GAAI1V,EAAIgnB,QAAUhnB,EAAI6U,IAC5B,IAAK,IAAIlD,KAAKjR,EAAI4D,SACjB5D,EAAI0mB,OAAOzV,EAAEqV,OACbzZ,GAAG8Z,EAAgB1V,GAGJ,IAAbjR,EAAI8S,MAAYqT,EAAMO,OAAOpnB,EAAI6U,KAClB,IAAfgS,EAAMrT,MAAYjG,GAAG+Z,EAAOF,OAAO/e,EACvC,CAMDxK,uBAAuBwK,GACtB,MAAMkF,EAAKvP,KACL0C,EAAM6M,GAAGga,EAAkBlf,GACjC,IAAK3H,EAAK,OAEV,MAAM+U,EAAK/U,EAAI4D,SACf,IAAK,IAAIqN,KAAK8D,EAAI,CACjB,IAAK,IAAI3U,KAAK6Q,EAAErN,SACfiJ,GAAG8Z,EAAgBvmB,GAEpB6Q,EAAE6V,OACF,CACD9mB,EAAI8mB,OACJ,CASD3pB,SAAiBwK,EAAKvK,EAAIoI,EAAO,GAAIzH,EAAK,IACzC,IAAKX,EAAI,OAAO,EAChB,MACM2pB,EADKzpB,MACK0pB,EAAc5pB,GACxB6pB,EAFK3pB,MAEK4pB,EAAenpB,GAG/B,MAAO,CAAE4J,IAAKA,EAAK5J,GAAIA,EAAIX,GAAIA,EAAIoI,KAAMA,EAAM2O,IAFnCvK,KAAKud,SAAS,GAAGJ,IAAOvhB,KAEqB8gB,MAD3C1c,KAAKud,SAAS,GAAGJ,IAAOvhB,IAAOyhB,GAAQ,MAErD,CAQD9pB,SAAiBgpB,EAAOhS,GAEvB,IAAInU,EAAMmmB,EAAM3f,IAAI2N,GAKpB,OAJKnU,IACJA,EAAM,IAAIqjB,IACV8C,EAAMrb,IAAIqJ,EAAKnU,IAETA,CACP,CAED7C,SAAsBY,GACrB,OAAKyJ,EAAWC,WAAW1J,IACtBA,EAAGyoB,MAAMroB,OAAOooB,eAAexoB,EAAI,OAAQ,CAAEiB,MAAO4K,KAAKE,OAAQ2c,UAAU,IACzE1oB,EAAGyoB,MAF6B,IAGvC,CAEDrpB,SAAqBC,GACpB,IAAI2pB,EAAO3pB,EAAG+K,OAAOkY,IAAI,gBAKzB,OAJK0G,IACJA,EAAOnd,KAAK9L,GACZV,EAAG+K,OAAOkY,IAAI,gBAAkB0G,GAE1BA,CACP,CAOD5pB,SAAsBwK,GAErB,OADWrK,MACD+oB,EADC/oB,MACYspB,EAAQjf,EAC/B,CAEDxK,SAAyBwK,GACxB,MACM3H,EADK1C,MACIspB,EAAOpgB,IAAImB,GAC1B,GAAK3H,EAEL,OAJW1C,MAGRspB,EAAOF,OAAO/e,GACV3H,CACP,CAED7C,SAAuBiD,GACtBA,EAAEhD,GAAGonB,oBAAoBpkB,EAAEoF,KAAMpF,EAAEikB,KAAOjkB,EAAEikB,KAAOjkB,EAAErC,GAAI,CAAE+nB,QAAS1lB,EAAE0lB,UACtE1lB,EAAEhD,GAAK,KACPgD,EAAErC,GAAK,KACPqC,EAAEikB,KAAO,IACT,CAMDlnB,SAAiB2H,EAAU,GAC1B,OAAIxG,EAAOmC,SAASqE,IAAYA,EAAU,IACzCA,EAAUD,YAAYC,QAAQA,IACtB6f,UAAW,EACZ7f,GAEJA,aAAmBD,YAAoBC,OAA3C,CAEA,CAOD3H,qBAAqBkL,EAAO3K,GAC3B2K,EAAMoF,GAAG,UAAWnE,IACnB,MAAMuD,EAAKxE,EACL9C,EAAO+D,EAAE4Z,OACTkE,EAAS9oB,EAAOoC,SAAS6E,GAAQA,EAAOA,EAAK6hB,QAAU7hB,EAAKA,MAAM6hB,OACxEhE,SAASiE,SAASxa,EAAIua,EAAQ1pB,EAAM4L,EAAE,GAEvC,CAUDnM,sBAAsBkL,EAAO+e,EAAQE,EAAQ1C,GAE5C,MAAMZ,EAAWZ,SAASmE,WAAWlf,EAAO+e,EAAQE,GACpD,IAAKtD,EAAU,OAEfZ,SAASS,QAAQe,GACjB,IAAIlP,GAAM,EACV,IAEEA,EADGlO,EAAWqB,gBAAgBmb,SAClBA,EAASY,GAEfZ,EAASY,EAEhB,CAAC,MAAOtb,GAER,GADAoM,EAAMpM,GACD9B,EAAWC,WAAWY,EAAMmf,SAAU,MAAMle,EACjDjB,EAAMmf,QAAQle,EACd,CACD,OAAOoM,CACP,CASDvY,kBAAkBkL,EAAO+e,EAAS,GAAIE,EAAS,IAC9C,IAAI5R,GAAM,EACV,IAAK0R,EAAQ,OAAO1R,EACpB,MAAM7I,EAAKxE,EACX+e,EAAS9oB,EAAOyO,eAAezO,EAAO4B,WAAWknB,IAEjD,MAAM5hB,EAAO,KADb8hB,EAAShpB,EAAOyO,eAAezO,EAAO4B,WAAWonB,MACtBF,IACvB7oB,WAAWkpB,eAAevqB,MAAMgG,KAAKmF,EAAO,YAAY7C,KAC5D,MAAMzH,EAAK8O,EAAGrH,GAGd,OAFAkQ,EAAMlO,EAAWC,WAAW1J,GAC5B2X,EAAMA,IAAQlO,EAAWoB,iBAAiB7K,GACnC2X,EAAM7I,EAAGrH,GAAMJ,KAAKyH,GAAM,IACjC,CAED1P,WACCmI,aAAa8d,UAASsE,GACtBtE,UAASsE,EAAOviB,YAAW+D,gBACpBka,SAASuE,qBACfvE,SAASyC,KAAKzhB,OAAQ,UAAU,GAC9B,IACH,CAODjH,uBACC,MAAM0P,EAAKuW,SACLzb,EAAM3D,SAASuZ,gBACfje,EAAMuN,GAAGqZ,EAAUve,EAAKvD,OAAQ,SAAUyI,GAAG+a,GAC7CzB,EAAQtZ,GAAGuZ,EAAeze,GAC1BvE,EAAM+iB,EAAM3f,IAAIlH,EAAI6U,MAAM3N,IAAIlH,EAAIgnB,OACnCljB,GAAKyJ,EAAGgb,OAAOlgB,EAAKvD,OAAQ,SAAUyI,GAAG+a,EAC9C,QAIAzpB,OAAOgI,OAAOid,UACd7kB,WAAW6kB,SAAWA,SACtBA,SAAS0E,cACT,QChkBK,MAAMC,0BAA0BC,gBAEnC9iB,GAAO,EAEP/E,YAAY2E,EAAU,GAElB,GADAmjB,SACK3pB,EAAOmC,SAASqE,GAAU,MAAM,IAAI5G,MAAM,oCAC/C,MAAM2O,EAAKvP,KACPwH,IAAS+H,GAAG3H,EAAOC,WAAW0H,EAAGqb,MAAM9iB,KAAKyH,GAAK/H,IACrD+H,EAAGjI,OAAOS,iBAAiB,SAAS,IAAM8iB,cAActb,GAAG3H,IAC9D,CAEDgf,KAAKpf,EAAU,GACX,OAAOse,SAASc,KAAK5mB,KAAKsH,OAAQ,QAASE,EAC9C,GCVE,MAAMsjB,sBAAsBC,iBAE/BlrB,SAAqB,IAAIkmB,IACzBlmB,SAAqB,IAAIkmB,IAQzBiF,QAAQlrB,EAAIiO,GACR,MAAM2J,EAAM3J,GAAO,CAAEkd,WAAW,EAAMC,SAAS,GAC/C,OAAOP,MAAMK,QAAQlrB,EAAI4X,EAC5B,CAQD7X,cAAcC,EAAIiO,GACd,MAAMod,EAAW,IAAIL,cAAcA,eAAcM,GAEjD,OADAD,EAASH,QAAQlrB,EAAIiO,GACdod,CACV,CAODtrB,SAAkBwrB,GAAY,GAC1B,OAAOA,EAAYP,eAAcQ,EAAcR,eAAcS,CAChE,CAKUC,eACP,OAAOV,eAAcW,GAAkBX,eAAcY,CACxD,CAEUD,eACP,OAAOX,eAAcS,EAAY/V,KAAO,CAC3C,CAEUkW,eACP,OAAOZ,eAAcQ,EAAY9V,KAAO,CAC3C,CAMD3V,SAAkB8rB,GACTb,eAAcU,GACnBG,EAAU5kB,SAAS6kB,IACXd,eAAcW,GAAgBG,EAASC,WAAW9kB,SAAQjH,GAAMgrB,eAAc7P,EAAMnb,EAAIgrB,eAAcS,KACtGT,eAAcY,GAAgBE,EAASE,aAAa/kB,SAAQjH,GAAMgrB,eAAc7P,EAAMnb,EAAIgrB,eAAcQ,IAAa,GAEhI,CAQDzrB,SAAaksB,EAAQC,GACjB,OAAqB,IAAjBA,EAAQxW,OACZsV,eAAcplB,GAAOqmB,EAAQC,GAC7BD,EAAO1N,WAAWtX,SAAQjH,GAAMgrB,eAAc7P,EAAMnb,EAAIksB,MACjD,EACV,CAQDnsB,UAAcC,EAAIksB,GACdA,EAAQjlB,SAAQ,CAACxF,EAAGgT,KAChB,IACQA,EAAEzU,IAAKyB,EAAEzB,EAChB,CAAC,MAAOkM,GACLpM,MAAM8c,MAAM,KAAM1Q,EACrB,IAER,CAWDnM,UAAaC,EAAIkG,EAAQ0gB,GACrB,GAAI5mB,aAAciJ,aAAe,EAAO,OAAO,EAC/C,MAAMzI,EAAM,IAAIylB,IAEhB,OADAzlB,EAAIkN,IAAIxH,EAAQ0gB,GACToE,eAAc7P,EAAMnb,EAAIQ,EAClC,CAODT,UAAmBY,GACf,MAAqB,mBAAPA,CACjB,CAQDZ,UAAoBmG,EAAQ0gB,GACxB,OAAOoE,eAAc3gB,GAAYnE,IAAW8kB,eAAc3gB,GAAYuc,EACzE,CAWD7mB,sBAAsBmG,EAAQ0gB,EAAU2E,GAAY,EAAOnd,GAEvD,QAAK4c,eAAcmB,GAAajmB,EAAQ0gB,KAExCoE,eAAcoB,EAAWb,GAAW7d,IAAIxH,EAAQ0gB,GAG3C2E,GAAWP,eAAcqB,GAAMje,GAAUxH,SAASyI,KAAMnJ,EAAQ0gB,IAE9D,EACV,CAUD7mB,wBAAwBY,EAAI4qB,GAAY,GACpC,QAAOP,eAAc3gB,GAAY1J,IAAMqqB,eAAcoB,EAAWb,GAAWjC,OAAO3oB,EACrF,QAMGI,OAAOgI,OAAOiiB,eACd7pB,WAAW6pB,cAAgBA,cAC3BA,cAAcsB,OAAO1lB,SAASuZ,gBACjC,EChLE,MAAMoM,uBAAuB5H,cAMhC5hB,YAAYrC,EAAK,WACbmqB,QACA3qB,KAAKQ,GAAKA,GAAM8L,KAAK9L,EACxB,CAQD8rB,IAAQ9rB,EAAK,GAAI+rB,GAAM,GACnB,OAAOA,EAAM/rB,EAAK,IAAIA,GACzB,CAOJgsB,WAAWhsB,EAAK,GAAI+rB,GAAM,GACnB,MACMrkB,EADKlI,MACKssB,GAAQ9rB,EAAI+rB,GAClCxpB,MAAMmI,KAFWlL,KAEH0Q,UACZhO,KAAI,CAACnB,EAAGoB,IAAMpB,EAAEwP,eAAiB7I,EAAOvF,GAAK,IAC7CqD,QAAOzE,GAAKA,GAAK,IACjBwF,SAAQxF,GAAKopB,MAAM6B,WAAWjrB,IAChC,CAQEkrB,QAAQjsB,EAAK,GAAI+rB,GAAM,GACnB,MACMrkB,EADKlI,MACKssB,GAAQ9rB,EAAI+rB,GAC5B,OAAOxpB,MAAMmI,KAFFlL,KAEU0Q,UAAU1K,QAAOzE,GAAKA,EAAEwP,eAAiB7I,IAAM0N,KACvE,CASD8W,QAAQlsB,EAAIyX,EAAQ,GAAI0U,GAAO,EAAOJ,GAAM,GAExC,MAAMhd,EAAKvP,KAEX,IAAKQ,EAAI,OAEf,IAAIoX,EAAOrI,EAAGkd,QAAQjsB,EAAI+rB,GAC1B,IAAK3U,EAAM,CACD,MAAM1P,EAAOqH,GAAG+c,GAAQ9rB,EAAI+rB,GAErC,OADAhd,EAAGqd,WAAW,GAAG1kB,QACVqH,EAAGmd,QAAQlsB,EAAIyX,EAAO0U,EAAMJ,EACnC,CAEK,IAAKtU,EAAO,OAAOL,EAEnB,IAAI3P,EAAO,GAeX,OAbIA,EADiB,iBAAVgQ,EACAA,EAAMlU,WAAW,KAAM,IAAI3B,MAAM,KAAKM,KAAInB,GAAKA,EAAE2C,OAAO9B,MAAM,OAAM4D,QAAOzE,GAAkB,IAAbA,EAAEkD,SAElF5D,OAAO8M,QAAQsK,GAGtB0U,EACA1kB,EAAKlB,SAAQ6G,GAAM2B,GAAGsd,GAAYjV,EAAMhK,EAAG,GAAIA,EAAG,MAElDgT,uBAAsB,KAClB3Y,EAAKlB,SAAQ6G,GAAM2B,GAAGsd,GAAYjV,EAAMhK,EAAG,GAAIA,EAAG,KAAI,IAIvDgK,CACV,CAEDiV,IAAYjV,EAAMzJ,EAAO,GAAI8J,EAAQ,IAEjC,MAAM6U,GADN7U,GAASA,GAAS,IAAItW,YACIyI,SAAS,cACnC6N,EAAQA,EAAMhW,QAAQ,aAAc,IACpCkM,EAAOA,EAAKjK,OACZ0T,EAAKK,MAAM8U,YAAY5e,EAAM8J,EAAO6U,EAAc,YAAc,GACnE,CAQJjtB,yBAAyBmtB,GAExB,MAAMjN,EAAO/E,MAAM+E,KAAKiN,GACZxsB,EAAKwsB,EAAO5e,QAAQoW,OAAS,UAEzC,OAAO6H,eAAeY,sBAAsBlN,EAAMvf,EAClD,CAQEX,6BAA6BkgB,EAAMvf,GACrC,OAAOuf,GAAM4E,mBAAsB5hB,MAAMmI,KAAK6U,GAAM4E,oBAAoB3e,QAAOlG,GAAMA,EAAGU,KAAOA,IAAIoV,MAAQ,IACxG,CAQJ/V,mBAAmBmtB,EAAQT,GAAM,GAChC,MAAMtU,EAAQoU,eAAea,kBAAkBF,GAC/C,OAAO/U,GAAOwU,QAAQO,EAAO5e,QAAQ+e,QAASZ,EAC9C,CASE1sB,uBAAuBkgB,EAAMvf,EAAI+rB,GAAM,GACnC,MAAMtU,EAAQoU,eAAeY,sBAAsBlN,EAAM,WACzD,OAAO9H,GAAOwU,QAAQjsB,EAAI+rB,EAC7B,CAQJ1sB,oBAAoBmtB,EAAQT,GAAM,GACjC,MAAM3U,EAAOyU,eAAee,YAAYJ,EAAQT,GAChD,OAAO3U,GAAMK,KACb,CAQDpY,wBAAwBkgB,EAAMvf,EAAI+rB,GAAM,GACvC,MAAM3U,EAAOyU,eAAegB,gBAAgBtN,EAAMvf,EAAI+rB,GACtD,OAAO3U,GAAMK,KACb,CAUDpY,yBAAyBmtB,EAAQjf,EAAKwe,GAAM,GACrCxgB,gBAAe,KACX,MAAMkM,EAAQoU,eAAeiB,aAAaN,EAAQT,GAClD,OAAO1rB,OAAOggB,OAAO5I,EAAOlK,EAAI,GAE1C,CAUDlO,6BAA6BkgB,EAAMvf,EAAIuN,EAAKwe,GAAM,GAC3CxgB,gBAAe,KACX,MAAMkM,EAAQoU,eAAekB,iBAAiBxN,EAAMvf,EAAI+rB,GACxD,OAAO1rB,OAAOggB,OAAO5I,EAAOlK,EAAI,GAE1C,ECxLK,MAAMyf,cAEZ3tB,UAAgB,IAAIkmB,IAOpBlmB,cAAcW,GACb,MAAMgkB,EAAQ,IAAI6H,eAAe7rB,GAEjC,OADAR,MAAKytB,GAAOjgB,IAAIhN,EAAIgkB,GACbA,CACP,CAQD3kB,WAAWW,EAAIyX,GAEd,MAAM1I,EAAKvP,KAMX,GAJIiY,aAAiBwM,eACpBlV,GAAGke,GAAOjgB,IAAIhN,EAAIyX,GAGfA,GAA0B,iBAAVA,EAAoB,CACzBuV,cAAcpB,OAAO5rB,GAC7BkkB,YAAYzM,EAClB,CAED,OAAO1I,EAAGrG,IAAI1I,EAEd,CAODX,cAAcW,GACb,OAAOR,MAAKytB,GAAOrE,OAAO5oB,EAC1B,CAODX,WAAWW,GACV,OAAOR,MAAKytB,GAAOvkB,IAAI1I,EACvB,CAMUktB,qBAEV,MACMltB,EAAK,aAEX,IAAIgkB,EAHOgJ,cAGItkB,IAAI1I,GAMnB,OALKgkB,IACJA,EAAQgJ,cAAcpB,OAAO5rB,GAC7BkG,SAASie,mBAAqB6I,cAAcG,QAGtCnJ,CACP,CAOD3kB,eAAeW,EAAK,GAAI+rB,GAAM,GAC7B,OAAOiB,cAAcE,QAAQjB,QAAQjsB,EAAI+rB,EACzC,CAOD1sB,eAAeW,EAAK,GAAIyX,EAAQ,GAAI0U,GAAO,EAAOJ,GAAM,GACvD,OAAOiB,cAAcE,QAAQhB,QAAQlsB,EAAIyX,EAAO0U,EAAMJ,EACtD,CAMD1sB,kBAAkBW,EAAK,GAAI+rB,GAAM,GAChCiB,cAAcE,QAAQlB,WAAWhsB,EAAI+rB,EACrC,CAMUoB,oBACV,OAAO5qB,MAAMmI,KAAK,IAAI6a,IAAI,IAAIyH,eAAcC,IAAQjU,MAAK,CAACxS,EAAG+P,IAAM7G,OAAOlJ,EAAE,IAAIsT,cAAcvD,EAAE,OAAMzQ,SACtG,CAODzG,aAAa6b,EAAM,GAAIwH,EAAO,GAC7B,GAAKxH,EACL,IACCwH,EAAOA,GAAQ5W,KAAKud,SAASnO,GAC7B8R,cAAchgB,IAAI0V,EAAMxH,GACxBhV,SAASie,mBAAqB6I,cAAcG,MAC5C,CAAC,MAAO3hB,GACRpM,MAAM8c,MAAM,KAAM1Q,EAClB,CACD,QAGAnL,OAAOgI,OAAO2kB,eACdvsB,WAAWusB,cAAgBA,cAC3BA,cAAcI,MAAMjuB,EACpB,EC5IF,MAAMkuB,EAAYhjB,SACZsgB,EAAWtgB,SAOV,MAAMijB,gBAEXjuB,eAAiB,IACjBA,UAAkB,EAClBA,UAAa2B,KAAKusB,MAClBluB,WAAoB,EAEpBA,YACE,MAAM0P,EAAKue,gBACXve,EAAGyb,QAAQtkB,SAAS8V,MACpBjN,GAAGye,KACHze,GAAG0e,GAAWC,aAAY,IAAM3e,GAAGqe,MAAUre,EAAG/H,QACjD,CAED3H,YACE,MAAM0P,EAAKue,gBACXjD,cAActb,GAAG0e,IACjB1e,GAAG0e,QAAWlpB,CACf,CAEDlF,YACE,MAAM0P,EAAKue,gBACLK,EAAS5e,GAAG6e,GAClB,GAAqB,GAAjBD,EAAO1pB,OAAa,OAAO8K,GAAGia,KAClC2E,EAAOzrB,KAAI+J,GAAK8C,GAAG8e,GAAY5hB,KAC/B8C,EAAG+e,QACJ,CAEDzuB,gBACE,MAAM0P,EAAKue,gBACPve,GAAGgf,KACPhf,GAAGgf,IAAa,EAChBxiB,gBAAe,KACb6U,uBAAsB,KACpB,IACEla,SAASie,mBAAqBpV,GAAGif,GACjC9nB,SAASie,mBAAmBnkB,KAAO+O,GAAGkf,EAChD,CAAkB,QACRlf,GAAGgf,IAAa,EAChBttB,WAAWkkB,cAAc,IAAIO,YAAY,cAC1C,IACD,IAEL,CAED7lB,UAAe2kB,GACb,OAAO3jB,OAAOyF,OAAOke,EAAM9T,UAAUhO,KAAII,GAAKA,EAAE4rB,UAASpsB,KAAK,GAC/D,CAEDzC,UAAkBC,GAChB,MAAMyP,EAAKue,gBACXA,iBAAgBa,GAAmB7uB,GACnCiD,MAAMmI,KAAKxE,SAAS+J,aAAazK,QAAOyG,GAAKA,EAAEmiB,YAAc9uB,IAAI4C,KAAI+J,GAAK8C,GAAG8e,GAAY5hB,IAC1F,CAED5M,UAAmB2kB,GACjB,MAAMjV,EAAKue,gBACL7V,EAAQ1I,GAAGG,GAAQ8U,GACzB,OAAOjV,GAAGsf,GAAYrK,EAAMoK,UAAW3W,EACxC,CAEDpY,UAAmB+uB,EAAW3W,GAC5B,MAAM1I,EAAKue,gBACLtJ,EAAQ,IAAIC,cAKlB,OAJAD,EAAME,YAAYzM,GAClBuM,EAAMhkB,KAAO+O,GAAGkf,GAChBG,EAAUf,GAAarJ,EAAMhkB,GAC7B+O,GAAGke,GAAOmB,EAAWpK,GACdA,CACR,CAED3kB,UAAc+uB,EAAWpK,GACvBgJ,cAAchgB,IAAIgX,EAAMhkB,GAAIgkB,EAC7B,CAED3kB,UAAe+uB,EAAWpK,GACxBgJ,cAAcnS,OAAOmJ,EAAMhkB,IAC3BouB,EAAUzD,IAAW2D,eACrBF,EAAUzD,QAAYpmB,CACvB,CAEUypB,gBACT,OAAOhB,cAAcG,MACtB,CAMUS,gBACT,OAAOvtB,OAAOyF,OAAOI,SAAS+J,aAC3BzK,QAAOlD,GAAKA,EAAE8rB,YACd5oB,QAAOlD,GAAKA,EAAE8rB,UAAUxgB,QAAQggB,YAChCpoB,QAAOlD,IAAMA,EAAE8rB,UAAUf,IAC7B,CAEDhuB,YACEmb,MAAMsC,SAAS5W,SAAS8V,KAAM,mCAC7BzV,SAAQjH,IACPA,EAAGub,SACH3U,SAAS8V,KAAKO,YAAYjd,EAAG,GAEhC,CAEDD,UAA0BkvB,GACxBA,EAAahoB,SAAS6kB,IACnB,MAAMprB,EAAKorB,EAAS1d,OAAO2f,GACrB5V,EAAQuV,cAActkB,IAAI1I,GAC7ByX,IAAOA,EAAMoL,SAAWuI,EAAS1d,OAAOc,aAAa,YAAW,IAEtE8e,gBAAgBQ,QACjB,CAEDzuB,UAA0BwP,GACxB,MAAME,EAAKue,gBACLpH,EAAWnX,GAAGyf,GAAmBlnB,KAAKyH,GACtC4b,EAAW,IAAIJ,iBAAiBrE,GAMtC,OALAyE,EAASH,QAAQ3b,EAAS,CACxB4f,gBAAiB,CAAC,YAClBC,mBAAmB,EACnBhE,SAAS,IAEJC,CACR,CAQDtrB,UAAwBC,GACtB,OAAQ2B,QAAQ3B,EAAGsO,SAASggB,aAEvBtuB,aAAcqvB,kBAA+B,eAAXrvB,EAAGsvB,KAAkC,UAAVtvB,EAAGuvB,KAC9DvvB,aAAcwvB,iBAEtB,CAMDzvB,UAAyBC,GACvB,MAAMyP,EAAKue,gBACPhuB,aAAcwvB,kBAChB/f,GAAGsf,GAAY/uB,EAAIA,EAAGuiB,WACtB9S,EAAG+e,UACMxuB,aAAcqvB,iBACvBrJ,SAASc,KAAK9mB,EAAI,OAAQ,GAAG,GAAOyvB,MAAKvjB,IACvC,GAAe,YAAXlM,EAAGsvB,IAAmB,OAAOtvB,EAAGsvB,IAAM,aAC1C7f,GAAGigB,GAAWxjB,EAAEkC,QAChBqB,EAAG+e,QAAQ,GAGhB,CAMDzuB,UAA4BC,GAC1B,MAAMyP,EAAKue,gBACXve,GAAGif,GAAQxoB,QAAOlD,GAAKA,EAAEtC,KAAOV,EAAG+tB,KAC5B9mB,SAAQjE,GAAKyM,GAAG8L,GAAQvb,EAAIgD,KACnCyM,EAAG+e,QACJ,CAMDzuB,eAAekL,GACb,MAAMwE,EAAKue,gBACXhD,cAAc2E,eAAelgB,GAAGmgB,GAAkBngB,GAAGogB,IAAmB,EAAO5kB,GAC/E+f,cAAc2E,eAAelgB,GAAGmgB,GAAkBngB,GAAGqgB,IAAsB,EAAM7kB,EAClF,QAGC/K,MAAK6vB,IACN,ECjLI,MAAMC,SAETjwB,oBAAsBoB,WAAW8uB,iBAAmB9M,SAAS+M,OAC7DnwB,kBAAoBoB,WAAWgvB,eAAiBhN,SAAS+M,OAEzDnwB,iBAAkB,EAClBA,cAAgBL,UAAUE,aAGtB,MAAMwwB,EAAUJ,UAASK,GACpBlvB,WAAW8uB,kBACZD,SAASM,aAAeF,EACxBjvB,WAAW8uB,gBAAkBG,GAG5BjvB,WAAWgvB,gBACZH,SAASO,WAAaH,EACtBjvB,WAAWgvB,cAAgBC,GAI/B,MAAMI,EAAS,gBAAiB/mB,KAC5B+mB,IACAR,SAASS,UAAsC,IAA3BtvB,WAAWuvB,YAC3BC,cAAcA,aAAaC,QAAQ,cAAeZ,SAASS,WAEnET,SAASS,WAAWE,cAAsD,QAAvCA,aAAaE,QAAQ,cAE3D,CAEUR,gBACP,MAAMnsB,EAAMif,SAAS1a,KAAKnG,MAAM,KAAKwT,MAC/B4E,EAAMxW,EAAI5B,MAAM,KACtB,OAAO4B,EAAII,SAAS,KAAOJ,EAAMwW,EAAI/X,MAAM,GAAI,GAAGH,KAAK,IAC1D,CAODzC,oBAAoBmE,EAAM,GAAI4sB,GAAO,GAEjC5sB,EAAMA,GAAO,GACb,IAAI6sB,EAAO,KACX,MAAMC,EAAS7N,SAAS8N,SAAS3uB,MAAM,KAAKwT,KAAK,GAAGxL,SAAS,KACvD4mB,EAAQhtB,EAAIoG,SAAS,eAIvBymB,EAHU7sB,EAAIG,WAAW,SAEhB6sB,EACFhtB,EACAA,EAAIG,WAAW,KACf,GAAG8e,SAAS+M,UAAUhsB,IACtB8sB,EACA,GAAG7N,SAAS+M,SAAS/M,SAAS8N,eAAe/sB,IAE7C,GAAGif,SAAS+M,SAAS/M,SAAS8N,YAAY/sB,IAGrD6sB,EAAOA,EAAKzuB,MAAM,OAAOM,KAAInB,GAAKA,EAAEwC,WAAW,UAAW,OAAMzB,KAAK,OACrE,MAAM2uB,EAAM,IAAI5oB,IAAIwoB,GAIpB,IAAKD,EAAM,CACP,MAAMhvB,EAAMkuB,SAASS,SAAW/uB,KAAKusB,MAAQ+B,SAASoB,OACtDD,EAAIE,aAAaC,OAAO,MAAOxvB,EAClC,CAED,OAAOqvB,EAAI1oB,IACd,CAQD1I,kBAAkBmE,EAAM,GAAIqtB,EAAQ,GAChC,OAAQrtB,GAAO,IAAI5B,MAAM,KAAKK,MAAM,GAAI,EAAI4uB,GAAO/uB,KAAK,KAAO,GAClE,CASDzC,uBAAuBiG,EAAM,IAEzB,IAAKA,EAAK,OAAOA,EAGjB,GADcA,EAAI3B,WAAW,KAClB,CACP,MAAMrE,EAAKkb,MAAMpR,MAAMlD,SAASuZ,gBAAiBna,GACjD,OAAOhG,EAAKkB,EAAOuM,OAAOzN,EAAG8G,WAAa,EAC7C,CAGD,OADe5F,EAAOswB,OAAOxrB,GACVA,GAEnBA,EAAMgqB,UAASyB,GAAczrB,GACtBgqB,SAAS0B,SAAS1rB,EAAK,MAAO,MAAM,GAC9C,CAODjG,UAAqBmE,EAAM,IAEvB,OADAA,EAAMA,EAAIG,WAAW,MAAQ2rB,UAAS2B,GAAa,IAAMztB,EAAMA,EACxD8rB,SAAS4B,aAAa1tB,EAChC,CAMUytB,gBACP,OAAO3B,SAAS4B,aAAa5B,UAAS6B,IAAa,EACtD,CAMUA,gBACP,OAAO7B,SAASO,WAAaP,SAASO,WAAWpuB,QAAQ,KAAM,KAAO,EACzE,CAUDpC,yBAAyBiG,EAAM,IAE3B,IAAKA,EAAK,OAAOA,EAGjB,GADcA,EAAI3B,WAAW,KAClB,CACP,MAAMrE,EAAKkb,MAAMpR,MAAMlD,SAASuZ,gBAAiBna,GACjD,OAAOhG,EAAKA,EAAG8G,UAAYd,CAC9B,CAGD,OADe9E,EAAOswB,OAAOxrB,GACVA,GAEnBA,EAAMgqB,UAAS8B,GAAgB9rB,GACxBgqB,SAAS0B,SAAS1rB,GAC5B,CAODjG,UAAuBmE,EAAM,IAMzB,OADAA,EAAMA,EAAIG,WAAW,MAAQ2rB,UAAS+B,GAAe,IAAM7tB,EAAMA,EAC1D8rB,SAAS4B,aAAa1tB,EAChC,CAMU6tB,gBACP,OAAO/B,SAAS4B,aAAa5B,UAASgC,IAAe,EACxD,CAMUA,gBACP,OAAOhC,SAASM,aAAeN,SAASM,aAAanuB,QAAQ,KAAM,KAAO,EAC7E,CAWDpC,0BAA0B+B,EAAM,GAAImwB,EAAS,OACzC,MAAM/tB,EAAM8rB,UAAS8B,GAAgBhwB,GACrC,aAAakuB,SAASkC,KAAKhuB,EAAK+tB,EACnC,CAaDlyB,kBAAkB+B,EAAM,GAAImwB,EAAS,MAAOE,EAASC,GAAS,EAAO/iB,GACjE,IAAIlH,EAAO,KACX,MAAMkqB,EAAK,gBACXF,EAAU,IAAKA,IACPE,GAAMD,EAAS,0BAA4BD,EAAQE,IAAO,aAClEF,EAAQG,OAAS,mBACjB,MAAMpuB,EAAM8rB,SAAS4B,aAAa9vB,GAAK,GACjCmM,EAAM,CAAEgkB,OAAQA,EAAQE,QAASA,IACxB,SAAXF,GAAgC,QAAXA,GAAoB5iB,KAEzCpB,EAAIoB,KAAO1J,KAAKiI,UAAUyB,IAE9B,MAAMkR,QAAYiE,MAAMtgB,EAAK+J,GAE7B,OADIsS,EAAIkE,KAAItc,EAAOiqB,QAAe7R,EAAIgS,aAAehS,EAAI7Z,QAClDyB,CACV,CAaDpI,sBAAsBmE,EAAM,GAAI+tB,EAAS,MAAOE,EAASC,GAAS,EAAOxuB,EAAKyL,GAC1E,IACI,GAAInL,EAAK,OAAO8rB,SAASkC,KAAKhuB,EAAK+tB,EAAQE,EAASC,EAAQ/iB,EAC/D,CAAC,MAAOnD,GACLpM,MAAM8c,MAAM,KAAM1Q,EACrB,CACD,OAAItI,IACGwuB,EAAS,CAAE,EAAG,GACxB,CAUDryB,sBAAsB+B,EAAM,IAExB,MAAM0wB,EAAStxB,EAAOsxB,OAAO1wB,GACvBqK,GAAQqmB,GAAUpoB,EAAWmB,cAAczJ,GAC3C2wB,EAAStmB,GAAQ/B,EAAWC,WAAW8B,GAO7C,KANgBsmB,GAAUvxB,EAAOyK,WAAW7J,IAE9B0wB,KAAQ1wB,EAAMZ,EAAOuM,OAAO3L,IAEtC2wB,IAAQ3wB,QAAYsI,EAAW2c,aAAa5a,IAE3CjL,EAAOwE,WAAW5D,GAEvB,OAAOA,CACV,QAGGf,OAAOC,KAAKgvB,UACZ7uB,WAAW6uB,SAAWA,QACzB,ECtRE,MAAM0C,gBAEZ3yB,UAAgB,IAAIkmB,IAEnBlmB,eACA2yB,iBAAgB/E,GAAOjE,OACvB,CAQD3pB,aAAaqI,EAAMud,GAClBzlB,MAAKytB,GAAOjgB,IAAItF,EAAMud,EACtB,CAOD5lB,cAAcqI,GACb,OAAOlI,MAAKytB,GAAOrE,OAAOlhB,EAC1B,CAODrI,YAAYqI,GACX,OAAOlI,MAAKytB,GAAOvkB,IAAIhB,EACvB,CASDrI,mBAAmBqI,EAAMud,GACxB,MAAMlW,EAAKijB,gBACX,IAAI1yB,EAAKyP,EAAGyiB,KAAK9pB,GACjB,OAAIpI,IACJA,EAAKyP,EAAG6c,OAAO3G,GACflW,EAAGke,MAAMvlB,EAAMpI,GACRA,EACP,CAQDD,cAAc4lB,GACb,MAAM3lB,EAAK4G,SAASC,cAAc,YAElC,OADAqU,MAAMyF,QAAQ3gB,EAAI2lB,GACX3lB,CACP,CAQDD,aAAa4lB,GACZ,OAAOzK,MAAME,kBAAkBuK,GAAYA,EAASrK,QAAQqX,WAAU,GAAQ,IAC9E,CAQD5yB,0BAA0BqG,GACzB,MAAMzF,EAAKyJ,EAAWmB,cAAcnF,GACpC,QAAOgE,EAAWC,WAAW1J,IAAMA,CACnC,CAQDZ,sBAAsBqG,GACrB,MAAMtE,EAAMsE,EAAMA,EAAIhC,OAAS,GAE/B,QAAO,YAAYD,KAAKrC,IAAOsE,CAC/B,CAQDrG,qBAAqBqG,GACpB,MAAMtE,EAAMsE,EAAMA,EAAIhC,OAAS,GAC/B,QAAO,gCAAgCD,KAAKrC,IAAOsE,CACnD,CAUDrG,oBAAoB6yB,GAAS,EAAOxqB,EAAO,GAAIud,GAC9C,MAAMlW,EAAKijB,gBACX,OAAIE,EAAenjB,EAAGojB,YAAYzqB,EAAMud,GACjClW,EAAG6c,OAAO3G,EACjB,CAUD5lB,wBAAwB6yB,GAAS,EAAOxqB,EAAO,GAAIhC,GAClD,MAAMqJ,EAAKijB,gBACL1vB,EAAIyM,EAAGqjB,eAAe1sB,GAC5B,OAAKpD,EACEyM,EAAGsjB,aAAaH,EAAQxqB,EAAMpF,GADtBA,CAEf,CAWDjD,6BAA6B6yB,GAAS,EAAOxqB,EAAO,GAAIhC,GACvD,MAAMqJ,EAAKijB,gBACX,IACC,IAAI/M,EAAW,KAEf,OADIiN,IAAQjN,EAAWlW,EAAGyiB,KAAK9rB,IAC3Buf,EAAiBA,GACrBA,QAAiBqK,SAASgD,aAAa5sB,GAChCqJ,EAAGsjB,aAAaH,EAAQxqB,EAAMud,GACrC,CAAC,MAAOzZ,GACRpM,MAAM8c,MAAMnN,EAAIvD,EAChB,CACD,OAAO,CACP,CAWDnM,kCAAkC6yB,GAAS,EAAOxqB,EAAO,GAAIhC,GAC5D,MAAMqJ,EAAKijB,gBACL/xB,EAAK8O,EAAGwjB,mBAAmB7sB,GACjC,IAAKzF,EAAI,OAAOA,EAChB,IACC,IAAIglB,EAAW,KAEf,OADIlW,EAAGmjB,SAAQjN,EAAWlW,EAAGyiB,KAAKlvB,IAC9B2iB,EAAiBA,GACrBA,EAAWvb,EAAWqB,gBAAgB9K,SAAYA,IAAOA,IAClD8O,EAAGsjB,aAAaH,EAAQxqB,EAAMud,GACrC,CAAC,MAAOzZ,GACRpM,MAAM8c,MAAM,KAAM1Q,EAClB,CACD,OAAOvL,CACP,CAWDZ,0BAA0B6yB,GAAS,EAAOxqB,EAAO,GAAIhC,GAEpD,IAAKgC,EAAM,OAAO,EAClB,IAAKhC,EAAK,OAAO,EAEjB,MAAMqJ,EAAKijB,gBAGX,IAAI/M,GAAW,EAEf,OAAwB,GAApBvf,EAAIqR,QAAQ,KAERyD,MAAMpR,MAAM,gBAAgB1D,EAAIzD,MAAM,QAAQ,IAGjDgjB,IACJA,EAAWlW,EAAGyjB,iBAAiBN,EAAQxqB,EAAMhC,IAGzCuf,IACJA,QAAiBlW,EAAG0jB,qBAAqBP,EAAQxqB,EAAMhC,IAGnDuf,IACJA,QAAiBlW,EAAG2jB,gBAAgBR,EAAQxqB,EAAMhC,IAG5Cuf,EACP,ECjMK,MAAM0N,mBAETtzB,UAAkBgL,SAClBhL,UAAegL,SAEfhL,kBAAoB,CAChBiqB,OAAQ,CAAEzb,UAAW,kBACrB+kB,OAAQ,CAAE/kB,UAAW,kBACrBA,UAAW,CAAEA,UAAW,qBACxBglB,KAAM,CAAEhlB,UAAW,gBAEnBgY,MAAO,CAAEhY,UAAW,iBACpBgX,QAAS,CAAEhX,UAAW,kBAAmBjO,KAAMqB,SAC/C6jB,SAAU,CAAEjX,UAAW,mBAAoBjO,KAAMqB,SAEjD0qB,KAAM,CAAE9d,UAAW,gBACnBilB,OAAQ,CAAEjlB,UAAW,kBACrBklB,SAAU,CAAEllB,UAAW,oBACvBmlB,KAAM,CAAEnlB,UAAW,gBACnBH,OAAQ,CAAEG,UAAW,kBACrBoX,SAAU,CAAEpX,UAAW,oBACvBC,OAAQ,CAAED,UAAW,kBACrBolB,QAAS,CAAEplB,UAAW,mBACtB3M,MAAO,CAAE2M,UAAW,iBAEpBqlB,OAAQ,CAAErlB,UAAW,iBAAkBjO,KAAMqB,SAE7CkyB,MAAO,CAAEtlB,UAAW,eAAgBU,OAAO,GAC3C6kB,QAAS,CAAEvlB,UAAW,iBAAkBU,OAAO,GAC/CvH,QAAS,CAAE6G,UAAW,kBAAmBjO,KAAMmO,QAC/CslB,SAAU,CAAExlB,UAAW,kBAAmBU,OAAO,IAGrDjB,IACAsS,GACA0T,IAAc,KACdtY,KAAU,EACVkL,IAEA7jB,YAAY/C,EAAIoO,GACZ,MAAMqB,EAAKvP,KACXuP,GAAGzB,GAAQhO,EAAG+M,QAAU/M,EAAGyJ,KAAOzJ,EAClCyP,GAAGmX,GAAYnX,EAAGwkB,OAAOjsB,KAAKyH,GAC9BA,GAAG6Q,EAAStgB,EAAG+M,QAAU/M,EAAKqzB,mBAAmBzkB,QAAQa,GAAGzB,IACxDI,IAAQqB,GAAGukB,GAAc/wB,MAAMC,QAAQkL,GAAUA,EAAS,CAACA,GAClE,CAMD6lB,OAAO/nB,GACH,MAAMuD,EAAKvP,KACXuP,EAAGykB,QAAQjtB,SAAQjH,GAAMyP,GAAG0kB,GAAc1kB,GAAGzB,GAAOhO,EAAIkM,IAC3D,CAQDioB,IAAcnmB,EAAMI,EAAQoZ,GACxB,MAAM/X,EAAKvP,KACXuP,GAAG2kB,GAAehmB,EAAQoZ,GAC1B/X,GAAG4kB,GAAcjmB,GACjBqB,GAAG6kB,GAAYtmB,EAAMI,GACrBqB,GAAG8kB,GAAcvmB,EAAMI,GACvBqB,GAAG+kB,GAAiBpmB,GACpBqB,GAAGglB,GAAgBrmB,GACnBqB,GAAGilB,GAActmB,GACjBqB,GAAGklB,GAAevmB,EAAQoZ,GAC1B/X,GAAGmlB,GAAa5mB,EAAMwZ,GACtB/X,GAAGolB,GAAY7mB,EAAMI,EAAQoZ,GAC7B/X,GAAGqlB,GAAY9mB,EAAMI,EAAQoZ,GAC7B/X,GAAGslB,GAAgB/mB,EAAMI,EAC5B,CAQDgmB,IAAehmB,EAAQoZ,GACnB,MAAM0F,EAAS1F,GAAKpZ,QAAQ4mB,OAASxN,GAAKpZ,QAAQ6mB,MAAQzN,GAAKpZ,OACzD8mB,EAAShI,aAAkBiI,gBAC3BC,EAAUla,MAAM4J,cAAcoI,IAC9BkI,GAAWF,KACbE,EACAhnB,EAAO8e,EAAO9kB,MAAQ8S,MAAMuG,SAASyL,GAErCnsB,OAAOggB,OAAO3S,EAAQ8M,MAAMma,SAASnI,IAE5C,CAMDmH,IAAcjmB,GACNlO,KAAK8pB,QAAQhE,SAASyC,KAAKra,EAAQ,SAAUlO,KAAK8pB,QAAQ,GAAM,EACvE,CAODwK,IAAiBpmB,GACb,MAAMqB,EAAKvP,KAKX,GAHIuP,EAAG+jB,SAAQplB,EAAS8M,MAAMpR,MAAMsE,EAAQqB,EAAG+jB,SAC3C/jB,EAAGikB,OAAMtlB,EAAS8M,MAAMpR,MAAMsE,EAAQqB,EAAGikB,OAEzCjkB,EAAG6lB,gBAAiB,CACpB,MAAMpzB,EAAMhB,EAAOuM,OAAOgC,EAAGlB,WAC7B,OAAOvB,OAAOuoB,WAAWnnB,EAAQlM,EACpC,CACauN,EAAG1B,WACX9G,SAAQxF,GAAKgO,GAAG+lB,GAAiBpnB,EAAQ3M,EAAE,GAAIgO,EAAG7N,OAASH,EAAE,KACtE,CAODgzB,IAAgBrmB,GACZ,MAAMqB,EAAKvP,KAGX,GAFIuP,EAAG+jB,SAAQplB,EAAS8M,MAAMpR,MAAMsE,EAAQqB,EAAG+jB,SAC3C/jB,EAAGikB,OAAMtlB,EAAS8M,MAAMpR,MAAMsE,EAAQqB,EAAGikB,OACzCjkB,EAAGgmB,eAAgB,CACnB,MAAMvzB,EAAMhB,EAAOuM,OAAOgC,EAAGgkB,UAC7B,OAAO1yB,OAAOggB,OAAO3S,EAAQlM,EAChC,CACauN,EAAGgW,WACXxe,SAAQxF,GAAKgO,GAAGimB,GAAgBtnB,EAAQ3M,EAAE,GAAIgO,EAAG7N,OAASH,EAAE,KACrE,CAED+zB,IAAiBpnB,EAAQhG,EAAMxG,GAE3B,GAAIV,EAAOiC,OAAOiL,EAAOhG,IACrB,OAAO4E,OAAOwB,OAAOJ,EAAQhG,GAAOgG,EAAOhG,IACpClH,EAAOmC,SAAS+K,EAAOhG,MAC9BxG,EAAQV,EAAOsM,MAAM5L,IAEzBoL,OAAOU,IAAIU,EAAQhG,EAAMxG,EAC5B,CAED8zB,IAAgBtnB,EAAQhG,EAAMxG,GACtBV,EAAOiC,OAAOiL,EAAOhG,IACjBlH,EAAO8D,cAAcpD,GACrBwM,EAAOhG,IAASgG,EAAOhG,GAEvBgG,EAAOhG,GAAQlH,EAAOgM,OAAOtL,GAE1BV,EAAOmC,SAAS+K,EAAOhG,IAC9BgG,EAAOhG,GAAQlH,EAAOsM,MAAM5L,GAE5BwM,EAAOhG,GAAQxG,CAEtB,CAMDkK,SAAoBsC,GAChB,MAAMqB,EAAKvP,KACLy1B,EAAoB,IAAblmB,EAAG/H,QAChB,IAAIosB,EAAUrkB,EAAGqkB,QACjB,GAAa,IAAT6B,EACA7B,EAAQ7sB,SAAQxF,GAAKyZ,MAAM8F,YAAY5S,EAAQ3M,SAC5C,CACC2M,EAAOqB,GAAGmmB,MAAU9B,EAAUA,EAAQnxB,QAAQJ,WAClD,IAAK,MAAMd,KAAKqyB,QACN5yB,EAAOwG,QAAQiuB,GACrBza,MAAM8F,YAAY5S,EAAQ3M,GAE9B2M,EAAOqB,GAAGmmB,KAAYxnB,EAAOqB,GAAGmmB,GACnC,CACJ,CAQDf,IAAY7mB,EAAMI,EAAQoZ,GACtB,MAAM1lB,EAAMZ,EAAOuE,aAAauI,EAAKpM,OAASV,EAAOuM,OAAOO,EAAKpM,OAASoM,EAAKpM,MAC/E1B,KAAK2zB,MAAM5sB,SAAQxF,GAAK2I,EAAW2c,aAAa3Y,EAAO3M,GAAI2M,GAAQ,EAAMtM,GAAO0lB,IACnF,CASDsN,IAAY9mB,EAAMI,EAAQoZ,GACtB,GAAKtnB,KAAKmsB,KACV,IACI,IAAI5lB,SAASvG,KAAKmsB,MAAMrkB,KAAKoG,EAA7B,CAAqCoZ,EACxC,CAAC,MAAOtb,GACLpM,MAAM8c,MAAMxO,EAAQlC,EACvB,CACJ,CAODyoB,IAAevmB,EAAQoZ,GACnBtnB,KAAK6zB,SAAS9sB,SAAQxF,GAAKukB,SAASyC,KAAKra,EAAQ3M,EAAG+lB,IACvD,CAEDoN,IAAa5mB,EAAMwZ,GAEfxB,SAASyC,KAAKza,EAAM9N,KAAKqmB,MAAOiB,EAAKtnB,KAAKqlB,QAASrlB,KAAKslB,UAAU,EACrE,CAEDqQ,IAAe7nB,EAAMI,EAAQxM,EAAOk0B,GAAQ,GACxC,MAAMrmB,EAAKvP,KACX,GAAI0B,EAAO,CACP,IAAI8H,EAAM,GACV,MAAMqsB,EAAS70B,EAAOgM,OAAOtL,GAEzB8H,EADAqsB,EACM7a,MAAM4H,iBAAiBrT,EAAGumB,YAE1BvmB,GAAGwmB,GAAQr0B,GAGrB,MAAM0Z,EAAUJ,MAAMtV,MAAM8D,GAAK,GAE5BqsB,GACD/oB,OAAOuoB,WAAW9lB,EAAGumB,WAAY1a,GAGjCwa,GAEA5a,MAAMG,QAAQjN,GAGlBkN,EAAQhN,QAAQ4nB,SAAWzmB,EAAGmkB,OAC9BnkB,GAAG0mB,GAAcnoB,EAAMI,EAAQkN,EAClC,CACJ,CAQDiZ,IAAcvmB,EAAMI,GAChBlO,MAAK21B,GAAe7nB,EAAMI,EAAQlO,KAAKszB,QAAQ,EAClD,CAMDc,IAAYtmB,EAAMI,GACdlO,MAAK21B,GAAe7nB,EAAMI,EAAQlO,KAAKwzB,MAAM,EAChD,CAODuC,IAAQr0B,EAAQ,IACZ,OAAOA,EAAM6V,QAAQ,KAAO,EAAI,IAAI7V,OAAWA,KAAW,0BAA0BA,mBACvF,CAODkK,SAAsBkC,EAAMI,GACxB,MAAMhI,QAAYssB,gBAAgBM,cAAa,EAAM9yB,KAAKylB,SAAUzlB,KAAKylB,UACzEzlB,MAAKk2B,GAAepoB,EAAMI,EAAQhI,EACrC,CAQDgwB,IAAepoB,EAAMI,EAAQuX,GACzB,MAAMrK,EAAUoX,gBAAgB2D,MAAM1Q,GACtCzlB,MAAKi2B,GAAcnoB,EAAMI,EAAQkN,EACpC,CAQD6a,IAAcnoB,EAAMI,EAAQkN,GACpBtN,GAAMslB,OACNpY,MAAMob,eAAeloB,EAAQkN,EAAStN,EAAKslB,QAE3CpY,MAAM+B,YAAY7O,EAAQkN,EAEjC,CAEDmP,OAAOriB,EAAO,SACV,MAAMqH,EAAKvP,KACNuP,GAAGiM,KACJsK,SAAS3V,GAAGZ,GAAGzB,GAAO,KAAM5F,EAAMqH,GAAGmX,IACrCnX,GAAGiM,IAAU,EAEpB,CAED6a,OAAOnuB,EAAO,SAEV,MAAMqH,EAAKvP,KACX8lB,SAASwQ,IAAI/mB,GAAGzB,GAAO,KAAM5F,EAAMqH,GAAGmX,IACtCnX,GAAGiM,IAAU,CAChB,CAEGka,SACA,OAAOvC,oBAAmB9wB,EAC7B,CAEG2xB,cAEA,MAAMzkB,EAAKvP,KAGX,IAAKuP,EAAGrB,QAAUqB,GAAGukB,GACjB,OAAOvkB,GAAGukB,GAGd,OAAQvkB,EAAGrB,QACP,IAAK,OACL,IAAK,OACD,MAAO,CAACqB,GAAGzB,IACf,IAAK,QAED,MAAO,CAACyB,GAAGzB,GAAMyoB,iBACrB,IAAK,SACD,MAAO,CAAChnB,GAAGzB,GAAM6R,eAGzB,MAAMnI,EAAOwD,MAAMsC,SAAS5W,SAASyI,KAAMI,EAAGrB,QAAQ,GAAO,GAAMlI,QAAOlG,GAAqB,YAAfA,EAAGqd,UAEnF,OADoB,IAAhB3F,EAAK/S,QAAc+S,EAAK5F,KAAKrC,GAAGzB,IAC7B0J,CACV,CAEG1J,WAAS,OAAO9N,MAAK8N,EAAQ,CAE7BgoB,iBAAe,OAAO91B,MAAKogB,EAAOvV,OAAOkY,IAAI,QAAW,CAExD+G,aAAW,OAAO9pB,MAAKogB,EAAO0J,MAAS,CACvCsJ,aAAW,OAAOpzB,MAAKogB,EAAOgT,MAAS,CACvC/kB,gBAAc,OAAOrO,MAAKogB,EAAO/R,SAAY,CAC7C8d,WAAS,OAAOnsB,MAAKogB,EAAO+L,IAAO,CACnC9F,YAAU,OAAOrmB,MAAKogB,EAAOiG,KAAQ,CACrChB,cAAY,OAAOrlB,MAAKogB,EAAOiF,OAAU,CACzCC,eAAa,OAAOtlB,MAAKogB,EAAOkF,QAAW,CAC3C+N,WAAS,OAAOrzB,MAAKogB,EAAOiT,IAAO,CACnCC,aAAW,OAAOtzB,MAAKogB,EAAOkT,MAAS,CACvCC,eAAa,OAAOvzB,MAAKogB,EAAOmT,QAAW,CAC3CC,WAAS,OAAOxzB,MAAKogB,EAAOoT,IAAO,CACnCtlB,aAAW,OAAOlO,MAAKogB,EAAOlS,MAAS,CACvCI,aAAW,OAAOtO,MAAKogB,EAAO9R,MAAS,CACvCmlB,cAAY,OAAOzzB,MAAKogB,EAAOqT,OAAU,CACzCjsB,cAAY,OAAOxH,MAAKogB,EAAO5Y,OAAU,CACzCie,eAAa,OAAOzlB,MAAKogB,EAAOqF,QAAW,CAC3C/jB,YAAU,OAAO1B,MAAKogB,EAAO1e,KAAQ,CACrCgyB,aAAW,OAAO1zB,MAAKogB,EAAOsT,MAAS,CAEvCC,YAAU,OAAO3zB,MAAKogB,EAAOuT,KAAQ,CACrCC,cAAY,OAAO5zB,MAAKogB,EAAOwT,OAAU,CACzCC,eAAa,OAAO7zB,MAAKogB,EAAOyT,QAAW,CAE3ChmB,iBAEA,OADY7N,MAAKogB,EAAO/R,WAAa,IAC1BjM,MAAM,SAASM,KAAInB,GAAKA,EAAEa,MAAM,OAAM4D,QAAOzE,GAAKP,EAAO6F,iBAAiBtF,EAAE,KAC1F,CAEGgkB,iBAEA,OADYvlB,MAAKogB,EAAOmT,UAAY,IACzBnxB,MAAM,SAASM,KAAInB,GAAKA,EAAEa,MAAM,OAAM4D,QAAOzE,GAAKP,EAAO6F,iBAAiBtF,EAAE,KAC1F,CAKGg0B,qBACA,OAAOv0B,EAAOsxB,OAAOtyB,KAAKuzB,SAC7B,CAKG6B,sBACA,OAAOp0B,EAAOsxB,OAAOtyB,KAAKqO,UAC7B,CAODxO,eAAeC,GACX,OAAOgN,OAAO4B,QAAQ5O,EAAIqzB,mBAAmBqD,WAChD,CAQD32B,eAAeC,EAAIkM,GACf,IAAKlM,GAAIkP,aAAa,kBAAmB,OACzC,IAAIO,EAAKzP,EAAGqzB,oBAAmBnW,IACzBzN,aAAc4jB,qBAChB5jB,EAAK,IAAI4jB,mBAAmBrzB,GAC5BA,EAAGqzB,oBAAmBnW,IAASzN,GAEnCA,EAAGwkB,OAAO/nB,EACb,CAODnM,cAAcC,GACV,MAAMyP,EAAK,IAAI4jB,mBAAmBrzB,GAElC,OADAyP,EAAGgb,SACIhb,CACV,CAQD1P,aAAaqL,EAAMyE,EAAI8mB,GAAW,GAC9B,MAAM3wB,EAAMqtB,mBAAmBqD,WAC/B31B,OAAOyF,OAAOR,GACTE,QAAOlD,GAAKoI,EAAK8D,aAAalM,EAAEuL,aAChCrI,QAAOlD,GAAK2zB,IAAa9mB,EAAGX,aAAalM,EAAEuL,aAC3CtH,SAAQjE,GAAK6M,EAAG1C,aAAanK,EAAEuL,UAAWnD,EAAKkC,aAAatK,EAAEuL,aACtE,CAODxO,kBAAkBC,GACd,MAAMgG,EAAMqtB,mBAAmBqD,WAC/B,OAAO31B,OAAOyF,OAAOR,GAChBE,QAAOlD,GAAKhD,EAAGkP,aAAalM,EAAEuL,aAC9B5J,OAAS,CAEjB,QAGG,MAAMqB,EAAMqtB,mBAAmBqD,WAC/B31B,OAAOyF,OAAOR,GAAKiB,SAAQjE,GAAKjC,OAAOgI,OAAO/F,KAC9CjC,OAAOgI,OAAO/C,EACjB,EC7fE,MAAM4wB,OAET72B,gBAAkBoB,WAAW01B,cAAgB11B,WAAW21B,oBAAsB31B,WAAW41B,aAYzFh3B,YAAYi3B,EAAW,IAAKC,EAAY,IAAKC,EAAS,EAAG52B,EAAO,QAC5D,OAAO,IAAIqH,SAAQ,CAACC,EAASC,KACzB,IACI,IAAK+uB,OAAOO,YAAa,OAAOvvB,IAChC,MAAMgE,EAAU,IAAIgrB,OAAOQ,SACrBC,EAAiBzrB,EAAQ0rB,mBACzBC,EAAW3rB,EAAQ4rB,aACzBH,EAAeI,QAAQF,GAGvBF,EAAeJ,UAAUr1B,MAAQq1B,EAGjCI,EAAe/2B,KAAOA,EACtBi3B,EAASE,QAAQ7rB,EAAQ8rB,aAGzBH,EAASI,KAAK/1B,MAAiB,IAATs1B,EAGtBG,EAAeO,MAAMhsB,EAAQisB,aAC7BR,EAAeS,KAAKlsB,EAAQisB,YAAyB,KAAXb,GAG1CK,EAAeU,QAAU,IAAMnwB,GAClC,CAAA,MAAMgV,GACH/U,EAAO+U,EACV,IAER,CAEUua,yBACP,MAAMa,SAACA,EAAQC,cAAEA,GAAmBrzB,UAAUszB,eAC9C,OAAOF,GAAYC,CACtB,EChDE,MAAME,cAMEC,sBACP,OAAIxzB,UAAUyzB,cAAsBzzB,UAAUyzB,cAAcC,OACrD,iEAAiEn0B,KAAKS,UAAU2zB,UAC1F,CAMUC,uBACP,OAAQL,cAAcC,QACzB,CAEUK,sBACP,MAAO,SAASt0B,KAAKS,UAAU2zB,UAAUv2B,cAC5C,CAMDjC,uBAAuB+B,EAAM,IACzB,OAAKA,GACEqhB,SAASuV,SAAS/1B,MAAM,GAAI,KAAOb,CAChD,CAOE/B,sBAAsB+B,EAAM,IACxB,IAAKA,EAAK,OAAO,EACjB,MAAM62B,EAAS72B,EAAIE,cACnB,GAAI4C,UAAUyzB,cAAe,CACzB,IAAI/f,GAAM,EAMV,OALA1T,UAAUyzB,cAAcO,OAAO3xB,SAASxF,IAChCA,EAAEo3B,MAAM72B,cAAcsI,SAASquB,KAC/BrgB,GAAM,EACT,IAEEA,CACV,CACD,MAAMwgB,EAASl0B,UAAU2zB,UAAUnf,qBAAuB,GACpD2f,EAASD,EAAOxuB,SAAS,OAC/B,SAAIyuB,IAAUJ,EAAOt0B,WAAW,UACxB00B,GAAUD,EAAOxuB,SAASquB,EACrC,CAOD54B,0BAA0B+B,EAAM,IAE5B,OAAKA,IAEO,YAARA,EACOq2B,cAAcK,UAGb,WAAR12B,EACOq2B,cAAcC,SAGlBD,cAAca,SAASl3B,GACjC,CAOD/B,gBAAgB+B,EAAM,IAClB,IAAKA,EAAK,OAAO,EACjB,MAAM62B,EAAS72B,EAAIE,cAEnB,GAAI4C,UAAUyzB,eAAiBzzB,UAAUyzB,cAAcY,SAAU,CAE7D,OADiBr0B,UAAUyzB,cAAcY,SAASj3B,gBAC9B22B,CACvB,CAGD,OADe/zB,UAAU2zB,UAAUnf,oBACrB3B,QAAQkhB,GAAU,CACnC,CAUD54B,0BAA0B+B,EAAM,IAE5B,IAAKA,EAAK,OAAO,EAEjB,IAAKo3B,OAAOza,YAAa,OAAO,EAEhC,MAAM0a,EAAQD,OAAOza,YAAYne,KAEjC,OAAI64B,EAAM7uB,SAAS,YACA,aAARxI,GAA8B,aAARA,GAG7Bq3B,EAAM7uB,SAAS,eACA,cAARxI,GAA+B,eAARA,EAIrC,QAGGf,OAAOC,KAAKm3B,cACf,ECzHE,MAAMiB,UAET5xB,IACAof,IACAyS,IACAzxB,IACAC,IACAyxB,IAOAv2B,YAAY6jB,EAAUpf,GAClB,MAAMiI,EAAKvP,KACXuP,GAAGmX,GAAYA,EACfnX,GAAGjI,GAAUA,aAAkBC,YAAcD,EAAS,KACtDiI,GAAGjI,GAAUtG,EAAOmC,SAASmE,GAAUC,YAAYC,QAAQF,GAAUiI,GAAGjI,GACxEiI,GAAG4pB,GAAa,CACZvO,MAAOrb,GAAG8pB,GAASvxB,KAAKyH,GAE/B,CAED+pB,QACI,MAAM/pB,EAAKvP,KACX,OAAIuP,GAAG6pB,KACP7pB,GAAGjI,IAASS,iBAAiB,QAASwH,GAAG4pB,GAAWvO,OACpDrb,GAAG6pB,GAAW,IAAI3xB,QAAQ8H,GAAGuN,GAAMhV,KAAKyH,KAFhBA,GAAG6pB,EAI9B,CAEGG,cACA,OAAiC,IAA1Bv5B,MAAKsH,IAASiyB,OACxB,CAEDzc,IAAMpV,EAASC,GACX,MAAM4H,EAAKvP,KACXuP,GAAG7H,GAAWA,EACd6H,GAAG5H,GAAUA,EACb,IACI4H,GAAGmX,GAAUnX,GAAGiqB,GAAW1xB,KAAKyH,GAAKA,GAAGkqB,GAAU3xB,KAAKyH,GAC1D,CAAC,MAAOvD,GACLuD,GAAGia,KACH7hB,EAAOqE,EACV,CACJ,CAEDqtB,MACer5B,MACRwpB,KADQxpB,MAER2H,GAAQ,IAAI/G,MAAM,oBACxB,CAED44B,IAAW12B,GACP,MAAMyM,EAAKvP,KAEX,OADAuP,GAAGia,KACIja,EAAGgqB,QAAU,KAAOhqB,GAAG7H,GAAS5E,EAC1C,CAED22B,IAAUztB,GACN,MAAMuD,EAAKvP,KAEX,OADAuP,GAAGia,KACIja,EAAGgqB,QAAU,KAAOhqB,GAAG5H,GAAQqE,EACzC,CAEDwd,MACexpB,MACRsH,IAAS4f,oBAAoB,QADrBlnB,MACiCm5B,GAAWvO,MAC1D,CAOJ/qB,kBAAkB65B,GAEjB,OADK32B,MAAMC,QAAQ02B,KAAKA,EAAK,IACtBA,EAAG/oB,QAAO,CAACgpB,EAAGntB,IAASmtB,EAAEpK,KAAK/iB,IAAO/E,QAAQC,UACpD,QAGMzG,WAAWi4B,UAAYA,SAC1B,EClFE,MAAMU,gBAAgBC,YAEzBC,IAAa,IAAIhjB,IAEjBU,IAAMpX,EAAO,GAAI25B,GACb,MACMviB,EAAOzU,MAAMmI,KADRlL,MACgB85B,IAC3B,OAFW95B,MAEDmK,GAAY4vB,GAClBviB,EAAKxR,QAAOlD,GAAKA,EAAE1C,OAASA,GAAQ0C,EAAEi3B,WAAaA,IAEnDviB,EAAKxR,QAAOlD,GAAKA,EAAE1C,OAASA,GACnC,CAED+J,IAAY1J,GACR,MAAqB,mBAAPA,CACjB,CAUD0P,GAAG/P,EAAO,GAAI25B,EAAUvyB,EAAU,EAAGwyB,GAAY,GAC7C,IAAK55B,EAAM,OAAOuH,OAAO,oBACzB,MAAMsyB,EAAaD,aAAqBtP,gBAAkBsP,EAAaA,EAAY,IAAIvP,kBAAkBjjB,GAAW,KAC9GF,EAAS2yB,GAAyB,GAAXzyB,EAAeyyB,GAAY3yB,OAASC,YAAYC,QAAQA,GAErF,OADAxH,KAAK+H,iBAAiB3H,EAAM25B,EAAU,CAAEzyB,OAAQA,IACzC2yB,GAAc3yB,CACxB,CAUDyf,KAAK3mB,EAAM25B,EAAUvyB,EAAU,EAAGwyB,GAAY,GAC1C,IAAK55B,EAAM,OAAOuH,OAAO,oBACzB,MAAM4H,EAAKvP,KACL8c,KAAQ9Q,IACV+tB,EAAS/tB,GACTuD,GAAGuqB,GAAW1Q,OAAOtM,KAAK,EAQ9B,OANAA,KAAK1c,KAAOA,EACZ0c,KAAKid,SAAWA,EAChBjd,KAAKtV,QAAUA,EACfsV,KAAKmd,WAAaD,aAAqBtP,gBAAkBsP,EAAaA,EAAY,IAAIvP,kBAAkBjjB,GAAW,KACnHsV,KAAKxV,OAASwV,KAAKmd,YAAyB,GAAXzyB,EAAesV,KAAKmd,YAAY3yB,OAASC,YAAYC,QAAQA,GAC9F+H,EAAGxH,iBAAiB3H,EAAM0c,KAAM,CAAEiK,MAAM,EAAMzf,OAAQwV,KAAKxV,SACpDwV,KAAKmd,YAAcnd,KAAKxV,MAClC,CAQDgvB,IAAIl2B,EAAO,GAAI25B,GACX/5B,KAAKknB,oBAAoB9mB,EAAM25B,EAClC,CASDG,KAAK95B,EAAO,GAAI6H,EAAMkyB,EAAU,GAC5B,MAAM5qB,EAAKvP,KACX,OAAgB,IAAZm6B,EACOpuB,gBAAe,IAAMwD,GAAGgZ,GAAMnoB,EAAM6H,MAE/CkyB,EAAUn5B,EAAOsM,MAAM6sB,EAAS,KACjB,EAAU5qB,GAAGgZ,GAAMnoB,EAAM6H,GACjCJ,YAAW,IAAM0H,GAAGgZ,GAAMnoB,EAAM6H,IAAOkyB,EACjD,CAED5R,IAAMnoB,EAAO,GAAI6H,GACb,MAAMqf,EAAM,IAAI5B,YAAYtlB,EAAM,CAAEwlB,OAAQ3d,IAC5C,OAAOjI,KAAKmlB,cAAcmC,EAC7B,CAQDV,KAAKxmB,EAAO,GAAIkH,GACZ,MAAMiI,EAAKvP,KAIX,OAAO,IAAIk5B,WAHM,CAACxxB,EAASC,KACvB4H,EAAGwX,KAAK3mB,EAAMsH,EAAQ,GAEKJ,GAAQgyB,OAC1C,CAEDpT,OAAO9lB,EAAM25B,GAAY/5B,KAAKmQ,GAAG/P,EAAM25B,EAAY,CACnD5S,SAAS/mB,EAAM25B,GAAY/5B,KAAKs2B,IAAIl2B,EAAM25B,EAAY,CAKtDK,SAEIr3B,MAAMmI,KADKlL,MACG85B,IAAY/yB,SAAQjE,IAC9B6nB,MAAMzD,oBAAoBpkB,EAAE1C,KAAM0C,EAAEi3B,SAAS,IAFtC/5B,MAIR85B,GAAWtQ,OACjB,CAEDzhB,iBAAiB3H,EAAM25B,EAAUhsB,GAE7B,QADW/N,MACHmK,GAAY4vB,KADT/5B,MAER85B,GAAWrb,IAAI,CAAEre,KAAMA,EAAM25B,SAAUA,IACnCpP,MAAM5iB,iBAAiB3H,EAAM25B,EAAUhsB,GACjD,CAEDmZ,oBAAoB9mB,EAAM25B,GACtB,MAAMxqB,EAAKvP,KACEuP,GAAGiI,GAAMpX,EAAM25B,GACvBhzB,SAAQjE,IACT6nB,MAAMzD,oBAAoBpkB,EAAE1C,KAAM0C,EAAEi3B,UACpCxqB,GAAGuqB,GAAW1Q,OAAOtmB,EAAE,GAE9B,QAGGjC,OAAOgI,OAAO+wB,SACd34B,WAAW24B,QAAUA,OACxB,ECtIE,MAAMS,WAETx6B,UAAmB,IAAIkmB,IAWvBlmB,YAAYqI,EAAO,GAAI9H,EAAO,GAAI6H,GAC9B,OAAOoyB,WAAWC,SAASpyB,GAAMgyB,KAAK95B,EAAM6H,EAC/C,CAQDpI,aAAaqI,EAAO,IAChB,OAAOA,GAAQmyB,YAAWE,GAAUC,IAAItyB,EAC3C,CAODrI,gBAAgBqI,EAAO,IAInB,OAHKmyB,WAAWI,MAAMvyB,IAClBmyB,YAAWE,GAAU/sB,IAAItF,EAAM,IAAI0xB,SAEhCS,YAAWE,GAAUrxB,IAAIhB,EACnC,CAODrI,kBAAkBqI,EAAO,IACrB,MAAMwyB,EAAML,YAAWE,GAAUrxB,IAAIhB,GAErC,OADIwyB,GAAKN,QAAQM,EAAIN,SACdC,YAAWE,GAAUnR,OAAOlhB,EACtC,QAGGrH,OAAOgI,OAAOwxB,YACdp5B,WAAWo5B,WAAaA,UAC3B,ECzDE,MAAMM,UAETC,IAAS,EACTC,IAAS,EACTC,IAAS,KACTC,IAAS,KACT1rB,IAAW,KACX2rB,IAAY,KAEZC,KAAS,EACTC,KAAO,EACPC,KAAa,EAGbC,IAAS,EAGTv7B,eAAiB,KASjBgD,YAAYwM,EAAS4rB,EAAOC,EAAKC,GAC7B,MAAM5rB,EAAKvP,KACXuP,GAAG0rB,GAASA,EACZ1rB,GAAG2rB,GAAOA,EACV3rB,GAAG4rB,GAAaA,EAChB5rB,GAAGurB,GAAS,KACZvrB,GAAGwrB,GAAS,KACZxrB,GAAGF,GAAgC,iBAAb,EAAwB3I,SAASqR,cAAc1I,GAAWA,EAEhFE,GAAGyrB,GAAY,CACXK,KAAM9rB,GAAG+rB,GAAiBxzB,KAAKyH,GAC/BmoB,MAAOnoB,GAAGgsB,GAAkBzzB,KAAKyH,GACjCisB,IAAKjsB,GAAGksB,GAAgB3zB,KAAKyH,IAEjCuW,SAASyE,OAAOhb,GAAGF,GAAUE,GAAGF,GAAU,YAAaE,GAAGyrB,GAAUK,MAAM,GAC1EvV,SAASyE,OAAOhb,GAAGF,GAAUE,GAAGF,GAAU,aAAcE,GAAGyrB,GAAUtD,OAAO,GAC5E5R,SAASyE,OAAOhb,GAAGF,GAAUE,GAAGF,GAAU,WAAYE,GAAGyrB,GAAUQ,KAAK,EAC3E,CAKDpB,SACI,MAAM7qB,EAAKvP,KACX8lB,SAASzK,OAAO9L,GAAGF,GAAUE,GAAGF,GAAU,YAAaE,GAAGyrB,GAAUK,MACpEvV,SAASzK,OAAO9L,GAAGF,GAAUE,GAAGF,GAAU,aAAcE,GAAGyrB,GAAUtD,OACrE5R,SAASzK,OAAO9L,GAAGF,GAAUE,GAAGF,GAAU,WAAYE,GAAGyrB,GAAUQ,IACtE,CAEDD,IAAkBjU,GACd,MAAM/X,EAAKvP,KACXuP,GAAGurB,GAASxT,EAAIoU,QAAQ,GAAGC,QAC3BpsB,GAAGwrB,GAASzT,EAAIoU,QAAQ,GAAGE,QACvBrsB,GAAG4rB,IAAYtzB,WAAW0H,GAAGssB,GAAa/zB,KAAKyH,GAAKorB,UAAUnzB,QACrE,CAEDi0B,IAAgBnU,GACZtf,aAAahI,MAAKo7B,GACrB,CAEDE,IAAiBhU,GAEb,MAAM/X,EAAKvP,KAEX,IAAKuP,GAAGurB,KAAWvrB,GAAGwrB,GAClB,OAGJ,IAAKxrB,GAAG0rB,GAAQ,OAEhB,MAAMa,EAAMxU,EAAIoU,QAAQ,GAAGC,QACrBI,EAAMzU,EAAIoU,QAAQ,GAAGE,QAE3B,GAAIrsB,GAAG4rB,GAAY,CACE53B,KAAKyS,IAAIzG,GAAGqrB,IAAU,IAAMr3B,KAAKyS,IAAIzG,GAAGsrB,IAAU,IACrD7yB,aAAauH,GAAG6rB,GACjC,CAED7rB,GAAGqrB,GAASrrB,GAAGurB,GAASgB,EACxBvsB,GAAGsrB,GAAStrB,GAAGwrB,GAASgB,EAKxB,IAAI7zB,EAAO,GAEPA,EAJiB3E,KAAKyS,IAAIzG,GAAGqrB,IAAUr3B,KAAKyS,IAAIzG,GAAGsrB,IAI5CtrB,GAAGqrB,GAAS,EAAI,aAAe,cAE/BrrB,GAAGsrB,GAAS,EAAI,WAAa,aAGxC/U,SAASyC,KAAKhZ,GAAGF,GAAUnH,EAAMof,GAGjC/X,GAAGurB,GAAS,KACZvrB,GAAGwrB,GAAS,IACf,CAEDc,MACI/V,SAASyC,KAAKhZ,IAAGF,GAAU,aAC9B,CAODxP,eAAemM,GACX,OAAOA,EAAE4Z,OAAO8V,SAASj3B,MAC5B,CAOD5E,cAAcwP,EAAS4rB,GAAQ,EAAMC,GAAM,EAAOC,GAAY,GAC1D,OAAO,IAAIR,UAAUtrB,EAAS4rB,EAAOC,EAAKC,EAC7C,EC3HE,MAAMa,eAAejzB,YAE3BlJ,UAAe,CAAC,UAAW,YAE3BA,kBAAoB,CACnB2b,OAAQ,CAAEpb,KAAMqB,SAChB4hB,SAAU,CAAEjjB,KAAMqB,SAClByjB,SAAU,CAAE9kB,KAAMqB,SAClBw6B,UAAW,CAAE77B,KAAMqB,UAGpBoB,cACC8nB,QACAqR,OAAOE,SAASl8B,KAChB,CAQGmP,WACH,IAAIjJ,EAAM4G,OAAO5D,IAAIlJ,KAAM,YAC3B,OAAIkG,EAAY,0BAA0BA,qBAC1CA,EAAMlG,KAAK+X,cAAc,YAClB7R,GAAKU,WAAa,GACzB,CAOG6b,YACH,OAAO1f,MAAMmI,KAAKlL,KAAKyO,UAAUzI,QAAOlG,GAAoB,WAAdA,EAAGqd,SACjD,CAEGjV,WACH,OAAO4E,OAAO5D,IAAIlJ,KAAM,OAAQ,GAChC,CAKGu2B,sBACH,OAAOvb,MAAMmD,UAAUne,MAAMgG,QAAO9D,GAAKA,aAAai6B,YAAW3vB,QAAQ9K,KACzE,CAEDwP,OAAOlD,GAAY,GAClB,OAAOgN,MAAMzN,OAAOvN,KAAMgO,EAC1B,CAQDnO,gBAAgBwK,EAAK8S,EAAU,WAC9B,OAAOnC,MAAMkhB,SAAS7xB,EAAK8S,EAAS6e,QAAOI,GAC3C,CAODv8B,eAAekgB,GACd,OAAK/E,MAAMjO,cAAcgT,GAClBhd,MAAMmI,KAAK6U,EAAKtR,UAAUzI,QAAOlG,GAAoB,WAAdA,EAAGqd,UADV,EAEvC,CAODtd,cAAckgB,GACb,OAAOic,OAAOK,QAAQtc,GAAMrd,KAAI5C,GAAMA,EAAGoR,QAAO,IAChD,CAQErR,eAAekgB,EAAM+V,GACjB,OAAOkG,OAAOK,QAAQtc,GAAMrd,KAAI5C,GAAMgN,OAAO4B,QAAQ5O,EAAIg2B,IAC5D,QAGH7sB,eAAeE,OAAO,UAAW6yB,QACjCn7B,OAAOC,KAAKk7B,OACZ,EChGF,MAAMM,EAA2Br7B,WAAWq7B,0BAA4B51B,SAASuZ,gBAAgBsc,MAAQ73B,UAAUf,SAgJvG,MAAC64B,EAAiB,IAvI9B,MAAMC,mBAEF93B,IAAa,IAAIohB,IACjB2W,IAAS,IAAI5lB,IACb6lB,KAAU,EAEV34B,IAAO/C,WAAW27B,oBAClB9tB,IAAWwtB,EACX34B,GAEAd,cACI7C,KAAKgyB,MACR,CAKGljB,cACA,OAAO9O,MAAK8O,EACf,CAEGA,YAAQlN,EAAM,IACd5B,MAAK8O,GAAWlN,GAAO06B,CAC1B,CAKGC,WACA,OAAOv8B,MAAK2D,GAAa3D,KAAK8O,OACjC,CAEGytB,SAAK36B,EAAM,IACX5B,MAAK2D,EAAY/B,CACpB,CAKGoC,UACA,OAAOhE,MAAKgE,EACf,CAEGA,QAAIpC,EAAM,IACV5B,MAAKgE,GAAOpC,GAAOX,WAAW27B,mBACjC,CAEDC,UAAUl5B,EAAW,GAAIjC,EAAQ,IAC7B,MAAM6N,EAAKvP,KACX,GAAIgB,EAAO8D,cAAcnB,GAAW,OAAOjC,EAC3C,IAAK6N,GAAG5K,GAAW61B,IAAI72B,GAEnB,OADA4L,EAAGyiB,KAAKruB,GACDjC,EAEX,MAAMo7B,EAAOvtB,GAAGwtB,GAAa,WACvBR,EAAOhtB,GAAGwtB,GAAap5B,GACvBq5B,EAAWF,EAAK5zB,IAAIoD,KAAKud,SAASnoB,IACxC,OAAOs7B,GAAWT,EAAKrzB,IAAI8zB,IAAqBt7B,CACnD,CAEDu7B,QACI,MAAM1tB,EAAKvP,KACXuP,GAAGT,GAAWwtB,EACd/sB,GAAG5L,OAAYoB,EACfwK,EAAGyiB,MACN,CAEDA,KAAKruB,EAAW,WACZ,MAAM4L,EAAKvP,KACPgB,EAAO8D,cAAcnB,IACrB3C,EAAO8D,cAAcyK,EAAGvL,MACxBuL,GAAG5K,GAAW61B,IAAI72B,KACtB4L,GAAGmtB,GAAOje,IAAI9a,GACV4L,GAAGotB,KACPptB,GAAGotB,IAAU,EACb5wB,gBAAeH,UACX,MAAMsxB,EAAWn6B,MAAMmI,KAAKqE,GAAGmtB,GAAOp2B,UAAU5D,KAAIgK,GAAK6C,EAAG4tB,SAASzwB,WAC/DwsB,UAAUkE,WAAWF,GAC3B3tB,GAAGotB,IAAU,CAAK,KAGzB,CAED/wB,eAAejI,GACX,MAAM4L,EAAKvP,KACX,GAAIgB,EAAO8D,cAAcnB,GAAW,OACpC,GAAI3C,EAAO8D,cAAcyK,EAAGvL,KAAM,OAClC,MAIMA,EAAM8rB,SAAS4B,aAAa,GAAGniB,EAAGvL,OAAOL,UAC/C,IAAI0c,QAAYyP,SAAS0B,SAASxtB,EAAK,MALvB,CACZ,gBAAiB,WACjBq5B,OAAU,aAGyC,GAEvD,IADKhd,GAAO1c,EAAS4T,QAAQ,KAAO,IAAG8I,QAAY9Q,EAAG4tB,SAASx5B,EAASvB,MAAM,KAAK,MAC9Eie,EAAK,OAAO,EACjB9Q,GAAGmtB,GAAOtT,OAAOzlB,GACjB4L,GAAGke,GAAO9pB,EAAU0c,EACvB,CAWDoN,IAAO8O,EAAMv6B,GACT,IAAMA,IAAOu6B,EAAO,OAAO,EAC3B,MAAMe,EAAqB,YAATf,EACZ75B,EAAM1C,MAAK+8B,GAAaR,GAM9B,OALA17B,OAAO8M,QAAQ3L,GAAK+E,SAAS6G,IACzB,MAAM2vB,EAAKjxB,KAAKud,SAASjc,EAAG,GAAG1J,QAC/BxB,EAAI8K,IAAI+vB,EAAID,EAAYhxB,KAAKud,SAASjc,EAAG,IAAMA,EAAG,GAAG,IAEzDkY,SAASyC,KAAKzhB,OAAQ,cAAe,CAAE02B,QAASjB,KACzC,CACV,CAODQ,IAAan7B,EAAM,IACf,MAAM2N,EAAKvP,KAIX,OAHKuP,GAAG5K,GAAW61B,IAAI54B,IACnB2N,GAAG5K,GAAW6I,IAAI5L,EAAK,IAAImkB,KAExBxW,GAAG5K,GAAWuE,IAAItH,EAC5B,GCvIE,MAAM67B,SAOZ59B,cAAcC,GACb,OAAOA,EAAGic,uBACV,CAQDlc,iBAAiBC,GAChB,MAAMgc,EAAO2hB,SAASC,OAAO59B,GACvB69B,EAAK72B,OAAO82B,QACZC,EAAK/2B,OAAOg3B,QACZ97B,EAAM,CACXiF,KAAM6U,EAAK7U,KAAO02B,EAClBz2B,MAAO4U,EAAK5U,MAAQy2B,EACpBI,IAAKjiB,EAAKiiB,IAAMF,EAChBG,OAAQliB,EAAKkiB,OAASH,EACtB5hB,OAAQH,EAAKG,OACbD,MAAOF,EAAKE,MACZ9Z,EAAG4Z,EAAK5Z,EAAIy7B,EACZpnB,EAAGuF,EAAKvF,EAAIsnB,GAIb,OAFA77B,EAAIi8B,QAAUj8B,EAAIiF,KAAQjF,EAAIga,MAAQ,EACtCha,EAAIk8B,QAAUl8B,EAAI+7B,IAAO/7B,EAAIia,OAAS,EAC/Bja,CACP,CAQDnC,oBAAoBwP,EAAS8uB,GAE5B,MAAMriB,EAAO2hB,SAASC,OAAOruB,GACvB+uB,EAAUX,SAASY,eAAeF,EAAc9uB,EAAU,MAE1DivB,EAAWF,EAAQl8B,EACnBq8B,EAAWH,EAAQ7nB,EAEnBioB,EAAenvB,EAAQovB,YAAcH,EACrCI,EAAgBrvB,EAAQsvB,aAAeJ,EAEvCK,EAAW9iB,EAAK7U,KAAOm3B,EAAQn3B,KAC/B43B,EAAW/iB,EAAKiiB,IAAMK,EAAQL,IAKpC,MAAO,CACN/hB,MAAOwiB,EACPviB,OAAQyiB,EACRX,IAAKc,EACL53B,KAAM23B,EACN18B,EAAG08B,EACHroB,EAAGsoB,EACHZ,QAVgBO,EAAe,EAAKI,EAWpCV,QAVeW,EAAYH,EAAgB,EAY5C,CAOD7+B,sBAAsBwP,GAErB,MAAMrN,EAAM,CACXiF,KAAM,EACNC,MAAO,EACP62B,IAAK,EACLC,OAAQ,EACR97B,EAAG,EACHqU,EAAG,GAIJ,KADalH,aAAmBtG,aACrB,OAAO/G,EAClB,MAAM0Z,EAAMxM,SAASe,qBAAqBZ,GAS1C,OAPArN,EAAIiF,KAAOyU,EAAIpO,MAAM,gBACrBtL,EAAIkF,MAAQwU,EAAIpO,MAAM,iBACtBtL,EAAI+7B,IAAMriB,EAAIpO,MAAM,eACpBtL,EAAIg8B,OAAStiB,EAAIpO,MAAM,kBACvBtL,EAAIE,EAAIF,EAAIiF,KAAOjF,EAAIkF,MACvBlF,EAAIuU,EAAIvU,EAAI+7B,IAAM/7B,EAAIg8B,OAEfh8B,CACP,CAUDnC,kBAAkBqf,EAAY,MAAO8N,EAAQ9e,EAAQ4wB,GAEpD,IAAM9R,IAAU9e,EAAS,OAAO,EAEhC,MAAM6wB,EAAMtB,UAASuB,GAAe9f,GAEpC,IAAKue,UAASwB,GAAkBF,GAE/B,YADAn/B,MAAMgG,KAAKonB,EAAQ,6BAA6B9N,MAIjD,MAAMjH,EAAQoU,eAAeiB,aAAaN,GAC1C,IAAK/U,EAAO,OAYZpX,OAAOggB,OAAO5I,EAVF,CACXinB,SAAU,QACVnB,IAAK,MACL92B,KAAM,MACNk4B,OAAQ,MACRf,QAAS,MACTgB,UAAW,GACXvC,UAAW,KAKZ,MAAMwC,EAAOrS,EAAO2R,aAAe,EAC7BW,EAAOtS,EAAOyR,YAAc,EAE5B3iB,EAAO2hB,SAAS8B,aAAarxB,EAAQ4wB,aAAiB/1B,aACtDy2B,EAAQ/B,UAASgC,GAAazS,EAAQ8R,EAAOC,GAE7C/8B,EAAM,CACXE,EAAG4Z,EAAKmiB,QACR1nB,EAAGuF,EAAKoiB,QACRwB,KAAML,EACNM,KAAML,EACNM,KAAM5S,EAAO2R,aACbkB,KAAM7S,EAAOyR,aAGdhB,UAASqC,GAAWf,EAAK/8B,EAAK8Z,EAAM0jB,GACpCvnB,EAAM4kB,UAAY,GAAG76B,EAAIE,OAAOF,EAAIuU,KAEpC,CAUD1W,qBAAqBqf,EAAY,MAAO8N,EAAQ9e,EAAQ4wB,GAEvD,IAAM9R,IAAU9e,EAAS,OAAO,EAEhC,MAAM6wB,EAAMtB,UAASuB,GAAe9f,GAEpC,IAAKue,UAASwB,GAAkBF,GAE/B,YADAn/B,MAAMgG,KAAKonB,EAAQ,6BAA6B9N,MAIjD,MAAMjH,EAAQoU,eAAeiB,aAAaN,GACpC+S,EAAS1T,eAAeiB,aAAawR,GAC3C,IAAK7mB,EAAO,OAEZ,MAAMyD,EAAM,CACXskB,MAAOvC,UAASuC,GAAOjB,GACvBG,SAAU,WACVC,OAAQ,MACRpB,IAAK,MACL92B,KAAM,MACN+U,MAAO,cACPC,OAAQ,cACRmjB,UAAW,GACXvC,UAAW,IAGZh8B,OAAOggB,OAAO5I,EAAOyD,GACrBqkB,EAAOb,SAAW,WAElB,MAAMe,EAAQxC,SAASC,OAAO1Q,GACxBwS,EAAQ/B,SAASC,OAAOoB,GACxB5pB,EAASuoB,SAASyC,UAAUhyB,GAE5BlM,EAAM,CACXE,EAAGgT,EAAO+oB,QACV1nB,EAAGrB,EAAOgpB,SAGL5mB,EAAM,CACXpV,EAAI+9B,EAAMjkB,MAAQ,EAAMwjB,EAAMxjB,MAAQ,EACtCzF,EAAI0pB,EAAMhkB,OAAS,EAAMujB,EAAMvjB,OAAS,GAGzCwhB,UAAS0C,GAAcpB,EAAK/8B,EAAKsV,EAAK2oB,EAAOT,EAAOtqB,GAEpD,MAAMkrB,EAAO,CACZvD,UAAW,GAAGvlB,EAAIpV,OAAOoV,EAAIf,MAC7BwnB,IAAKzmB,EAAIymB,IAAMzmB,EAAIymB,IAAM,GACzB92B,KAAMqQ,EAAIrQ,KAAOqQ,EAAIrQ,KAAO,IAGvB8G,EAAM,CACX8uB,UAAY,GAAG76B,EAAIE,OAAOF,EAAIuU,OAG/B1V,OAAOggB,OAAO5I,EAAOlK,GACrBlN,OAAOggB,OAAOkf,EAAQK,EACtB,CAEDvgC,UAAqBk/B,EAAK/8B,EAAKsV,EAAK2oB,EAAOT,EAAOtqB,GAC7C6pB,EAAIsB,OACP/oB,EAAIf,EAAI,EACRe,EAAIrQ,KAAO,MACXjF,EAAIE,EAAIF,EAAIE,EAAK+9B,EAAMjkB,MAAQ,EAC/Bha,EAAIuU,GAAK,GAAK0pB,EAAMjC,OAAS9oB,EAAO6oB,IAAMyB,EAAMvjB,SACtC8iB,EAAIuB,UACdhpB,EAAIf,EAAI,EACRe,EAAIrQ,KAAO,MACXjF,EAAIE,EAAIF,EAAIE,EAAK+9B,EAAMjkB,MAAQ,EAC/Bha,EAAIuU,EAAIrB,EAAO8oB,OAASwB,EAAMvjB,QACpB8iB,EAAIwB,SACdjpB,EAAIpV,EAAI,EACRoV,EAAIymB,IAAM,MACV/7B,EAAIE,GAAK,GAAK+9B,EAAM/4B,MAAQgO,EAAOjO,KAAOu4B,EAAMxjB,OAChDha,EAAIuU,EAAIvU,EAAIuU,EAAK0pB,EAAMhkB,OAAS,GACtB8iB,EAAIyB,QACdlpB,EAAIpV,EAAI,EACRoV,EAAIymB,IAAM,MACV/7B,EAAIE,EAAIgT,EAAOhO,MAAQs4B,EAAMxjB,MAC7Bha,EAAIuU,EAAIvU,EAAIuU,EAAK0pB,EAAMhkB,OAAS,EAEjC,CAEDpc,UAAkBk/B,EAAK/8B,EAAKy+B,EAAOjB,GAC9BT,EAAIsB,OACPr+B,EAAIuU,EAAIkqB,EAAM1C,IAAM/7B,EAAI49B,KAAOJ,EAAMhqB,KACrCxT,EAAIE,EAAIF,EAAIE,EAAIF,EAAI29B,MACVZ,EAAIuB,UACdt+B,EAAIuU,EAAIkqB,EAAM1C,IAAM0C,EAAMxkB,OAASujB,EAAMhqB,KACzCxT,EAAIE,EAAIF,EAAIE,EAAIF,EAAI29B,MACVZ,EAAIwB,SACdv+B,EAAIE,EAAIu+B,EAAMx5B,KAAOjF,EAAI69B,KAAOL,EAAMhqB,KACtCxT,EAAIuU,EAAIvU,EAAIuU,EAAIvU,EAAI09B,KAAOF,EAAMhqB,MACvBupB,EAAIyB,QACdx+B,EAAIE,EAAIu+B,EAAMx5B,KAAOw5B,EAAMzkB,MAAQwjB,EAAMhqB,KACzCxT,EAAIuU,EAAIvU,EAAIuU,EAAIvU,EAAI09B,KAAOF,EAAMhqB,KAElC,CAED3V,UAAcmC,GACb,OAAIA,EAAIq+B,MACA,oBACGr+B,EAAIs+B,SACP,oBACGt+B,EAAIu+B,QACP,oBACGv+B,EAAIw+B,MACP,yBADD,CAGP,CAED3gC,UAAyBmC,GACxB,OAAOA,EAAIu+B,SAAWv+B,EAAIw+B,OAASx+B,EAAIq+B,OAASr+B,EAAIs+B,QACpD,CAEDzgC,UAAsBqf,GACrB,MAAO,CACNqhB,QAAsB,SAAbrhB,GAAqC,QAAbA,EACjCshB,MAAoB,OAAbthB,GAAmC,SAAbA,EAC7BmhB,MAAoB,OAAbnhB,EACPohB,SAAuB,UAAbphB,EAEX,CAEDrf,UAAoBwP,EAASyvB,EAAOC,GAEnC,IAAKD,EAAO,MAAO,CAAE58B,EAAG,EAAGqU,EAAG,EAAGf,KAAM,EAAGwG,MAAO,EAAGC,OAAQ,GAE5D,IAAInM,EAAQ,EACZ,MAAM4wB,EAAQjD,SAAS8B,aAAalwB,GAC9BmwB,EAAQ/B,SAAS8B,aAAaT,GAE9BtpB,EAAOupB,EAAIwB,SAAWxB,EAAIyB,MAAQhB,EAAMxjB,MAAQwjB,EAAMvjB,OAEtD0kB,EAAaD,EAAM1kB,MAAQ,EAAMxG,EAAO,EACxCorB,EAAaF,EAAMzkB,OAAS,EAAMzG,EAAO,EAE/CgqB,EAAMhqB,KAAOA,EAEb,MAAMzH,EAAM,CAEZA,SAAe,YAgBf,OAdIgxB,EAAIwB,SAAWxB,EAAIyB,OACtBzyB,EAAI9G,KAAO,GACX8G,EAAIgwB,IAAM,MACVjuB,EAAQ,EACR/B,EAAI8uB,UAAY,GAAG/sB,OAAW8wB,EAAY,QAE1C7yB,EAAIgwB,IAAM,GACVhwB,EAAI9G,KAAO,MACX6I,EAAQ,EACR/B,EAAI8uB,UAAY,GAAG8D,OAAe7wB,OAGnCuc,eAAewU,kBAAkB/B,EAAO/wB,GAEjCyxB,CACP,QAGA3+B,OAAOC,KAAK28B,UACZx8B,WAAWw8B,SAAWA,QACtB,EC7UK,MAAMqD,WAETp+B,GAAO,KAEPG,YAAYwM,GACR,IAAK2L,MAAMjO,cAAcsC,GAAU,MAAM,IAAIzO,MAAM,kCACnDZ,MAAK0C,EAAO,IAAIwM,SAASG,EAC5B,CAEDkjB,IAAQgB,GACJ,OAAOrpB,EAAWye,YAAY3oB,MAAK0C,EAAM6wB,EAC5C,CAEDrqB,IAAI63B,EAAQxN,EAAUjT,GAClB,MAAO,CAAC5e,EAAOgC,KACX,MAAM6L,EAAKvP,KACX,OAAIgB,EAAOyC,OAAO/B,GAAe6N,GAAG7M,EAAKwG,IAAIqqB,GACzChkB,GAAGgjB,GAAQgB,GAAkBhkB,GAAG7M,EAAK6wB,GAAU7xB,EAAOgC,IAC1Dq9B,EAAOxN,GAAY7xB,EACZ4e,EAAQ,CAEtB,CAEDzgB,YAAYwP,GACR,OAAO,IAAIpB,MAAMoB,EAAQ4I,MAAO,IAAI6oB,WAAWzxB,GAClD,EChBE,MAAM2xB,QAETtlB,IAAO,KAEP7Y,YAAYwM,GACHtM,MAAMC,QAAQqM,KAAUrP,MAAK0b,GAAOolB,WAAWhkB,KAAKzN,GAC5D,CAEDnG,IAAI63B,EAAQxN,GACR,MAAiB,QAAbA,EAA2BvzB,MAAK0b,GACnB,UAAb6X,EACO,CAAC7xB,EAAOkP,EAAKyM,KAChB,MAAMvd,EAAKkb,MAAMpR,MAAMm3B,EAAQr/B,EAAOkP,EAAKyM,GAC3C,OAAO2jB,QAAQlkB,KAAKhd,EAAG,EAGd,aAAbyzB,EACO,CAAC7xB,EAAOkP,EAAKyM,KAChB,MAAMvd,EAAKkb,MAAMsC,SAASyjB,EAAQr/B,EAAOkP,EAAKyM,GAC9C,OAAO2jB,QAAQlkB,KAAKhd,EAAG,EAGxBihC,EAAOxN,EACjB,CAED/lB,IAAIuzB,EAAQxN,EAAU7xB,GAClB,GACS,QADD6xB,EAEIxwB,MAAMC,QAAQ+9B,GACdA,EAAOh6B,SAAQsI,GAAWA,EAAQkkB,GAAY7xB,IAE9CsZ,MAAMU,IAAIqlB,EAAQr/B,QAItBq/B,EAAOxN,GAAY7xB,EAE3B,OAAO,CACV,CAED7B,gBAAgB0f,GACZ,OAAO,IAAItR,MAAMsR,EAAM,IAAIyhB,QAAQzhB,GACtC,CAED1f,YAAY0f,GACR,OAAIvE,MAAMjO,cAAcwS,GAAcyhB,QAAQC,SAAS1hB,GAClDxc,MAAMC,QAAQuc,IACnBA,EAAOA,EAAK7c,KAAI2M,GAAW2xB,QAAQlkB,KAAKzN,KACjC2xB,QAAQC,SAAS1hB,IAFSA,CAGpC,CAED1f,WAAWwK,EAAK6V,EAAKtP,EAAKyM,GACtB,OAAO2jB,QAAQlkB,KAAK9B,MAAMsC,SAASjT,EAAK6V,EAAKtP,EAAKyM,GACrD,CAEDxd,aAAawK,EAAK6V,EAAKtP,EAAKyM,GACxB,OAAO2jB,QAAQlkB,KAAK9B,MAAMpR,MAAMS,EAAK6V,EAAKtP,EAAKyM,GAClD,QAGGxc,OAAOgI,OAAOm4B,SACd//B,WAAW+/B,QAAUA,OACxB,EC5DE,MAAME,SAETn2B,IAAS,KACT1K,KAAW,EACX8gC,KAAW,EACXC,IAAgB,KAChB9X,GAAS,KACTwM,IAAc,CAAA,EAEdjzB,YAAYkI,GACR,MAAMwE,EAAKvP,KACXuP,GAAGxE,GAASA,EACZwE,GAAG+Z,IAAW,IAAIvD,IAClBxW,GAAG6xB,GAAgB7xB,GAAG8xB,GAAcv5B,KAAKyH,EAC5C,CAOD3D,qBAAqB5H,GACjB,OAAO8rB,SAASwR,UAAUt9B,EAC7B,CAOD4H,iBAAiB5H,EAAK4iB,EAAO,GACzB,MAAMrX,EAAKvP,KACXuP,GAAG+Z,EAAOE,QACNxoB,EAAO6F,iBAAiB7C,KACxBuL,GAAGumB,SAAoBvmB,EAAGgyB,eAAev9B,IAEzC4iB,EAAO,SACDd,SAAS0E,aAAa,KAAM,KAAM,KAAM5D,GAElDrX,EAAGiyB,SACHjyB,GAAG8xB,IACN,CAKDG,SACQxhC,MAAKmhC,KACTrb,SAAS3V,GAAGlP,WAAY,KAAM,aAAcjB,MAAKohC,IACjDphC,MAAKmhC,IAAW,EACnB,CAKDM,UACI3b,SAASwQ,IAAIr1B,WAAY,KAAM,aAAcjB,MAAKohC,IAClDphC,MAAKmhC,IAAW,CACnB,CAOD7G,SAASoH,EAAOzc,GACZjlB,MAAK81B,GAAY4L,GAASzc,CAC7B,CAMD0c,WAAWD,UACA1hC,MAAK81B,GAAY4L,EAC3B,CAKGxe,WACA,OAAOD,SAASC,KAAKzgB,MAAM,EAC9B,CAKGqzB,iBACA,OAAOpf,OAAOkrB,UAAU5hC,MAAK81B,GAChC,CAEGn1B,UACA,OAAOX,MAAKK,EACf,CAEGM,QAAIiB,GACJ5B,MAAKK,GAAWW,EAAOgM,OAAOpL,EACjC,CAEDy/B,IAAcr1B,GACV,MAAMuD,EAAKvP,KACLkjB,EAAO3T,EAAG2T,KAChB,IAAI2e,EAAKtyB,GAAG+Z,EAAOpgB,IAAIga,GAClB2e,IACDA,EAAKtyB,GAAGb,KACJmzB,GAAItyB,GAAG+Z,EAAO9b,IAAI0V,EAAM2e,IAIhCA,GAAI9N,OAAO/nB,EACd,CAED0C,MACI,IAAImzB,EACJ,MAAMtyB,EAAKvP,KACLkjB,EAAO3T,EAAG2T,KACVpd,EAAMyJ,GAAGumB,GAAY,SAAW,CAAA,EAChC5U,EAAW3R,GAAGumB,GAAY,cAAgB,CAAA,EAC1C4L,EAAQnyB,GAAGumB,GAAY5S,GAC7B,GAAIwe,EAAO,CACP,MAAM5hC,EAAKkb,MAAM8mB,SAASjhC,OAAOggB,OAAO,CAAE,EAAE6gB,EAAO57B,EAAKob,IACxDphB,EAAGsO,QAAQ4nB,UAAW,EAGtB6L,EAAK,IAAI1O,mBAAmBrzB,EAAIyP,GAAGxE,GAC/C,MAAmBwE,GAAGlP,IACVT,MAAMgG,KAAK,KAAM,oCAAoCsd,KAEzD,OAAO2e,CACV,QAGO5gC,WAAW8gC,oBACX,IAAIb,UAAWc,WAAW/gC,WAAW8gC,kBAAmB9gC,WAAWghC,eAE1E,EClJE,MAAMC,QAETriC,UAAkB,gBAOlBA,gBAAgBC,GACZoiC,SAAQC,GAAQriC,EAAI,QAAS,OAChC,CAMDD,iBAAiBC,GACboiC,SAAQC,GAAQriC,EAAI,OAAQ,QAC/B,CAEDD,UAAeC,EAAIoL,EAAO,QAASyE,EAAK,QAOpCuyB,QAAQE,MAAQzyB,CACnB,CAEUyyB,mBACP,OAAO3R,aAAaE,QAAQuR,SAAQG,GACvC,CAEUD,iBAAMxgC,GACb6uB,aAAaC,QAAQwR,SAAQG,GAAUzgC,GACvCkF,OAAOqe,cAAc,IAAIO,YAAY,WAAY,CAAEE,OAAQhkB,KAC3D,MAAM0gC,EAAS57B,SAAS8V,KAAKmD,cACzB/d,EACA0gC,EAAOl0B,QAAQm0B,QAAU3gC,SAElB0gC,EAAOl0B,QAAQm0B,OAE7B,CAMD1iC,+BAEI,OADoBiH,OAAO07B,WAAW,gCACnBzyB,QAAU,OAAS,OACzC,CAEDlQ,UAAgBmM,GACZ,MAAMy2B,EAAI,IAAIC,gBAAgBzf,SAASC,KAAKzgB,MAAM,IAClDy/B,QAAQE,MAAQK,EAAEv5B,IAAI,QACzB,CAEDrJ,YACIiH,OAAOiB,iBAAiB,aAAcm6B,SAAQS,IAC9C,IAAIC,EAAWnS,aAAaE,QAAQuR,SAAQG,IAM5C,OALgB,MAAZO,IACAA,EAAWV,QAAQW,yBAIP,QAAZD,EAA2BV,QAAQY,WACvB,SAAZF,EAA4BV,QAAQa,iBAAxC,CAGH,QAGGb,SAAQc,KACR/hC,WAAWihC,QAAUA,OACxB,ECvDE,MAAMe,eAETpgC,YAAYgU,EAAKnV,EAAQmV,EAAKwI,EAAS,MACnCrf,KAAK6W,IAAMA,EACX7W,KAAK0B,MAAQA,EACb1B,KAAKqf,OAASA,EACdrf,KAAKiH,KAAO,KACZjH,KAAKkH,MAAQ,IAChB,CAKGg8B,aACA,OAAqB,OAAdljC,KAAKiH,MAAgC,OAAfjH,KAAKkH,KACrC,CAKGi8B,kBACA,OAAQnjC,KAAKkjC,MAChB,CAKGE,aACA,OAAOpjC,KAAKqf,MACf,CAKGU,WACA,OAAO/f,KAAKqf,QAAQU,MAAQ/f,IAC/B,EAOE,MAAMqjC,mBAAmBJ,eAE5BpgC,YAAYgU,EAAKnV,EAAQmV,GACrB8T,MAAM9T,EAAKnV,EACd,CAOD4hC,kBAAkB/jB,EAAOvf,MACjBuf,EAAKtY,aAAajH,KAAKsjC,iBAAiB/jB,EAAKtY,aAC3CsY,EACFA,EAAKrY,cAAclH,KAAKsjC,iBAAiB/jB,EAAKrY,OACrD,CAODq8B,oBAAoBhkB,EAAOvf,MACnBuf,EAAKtY,aAAajH,KAAKujC,mBAAmBhkB,EAAKtY,OAC/CsY,EAAKrY,cAAclH,KAAKujC,mBAAmBhkB,EAAKrY,cAC9CqY,CACT,CAODikB,mBAAmBjkB,EAAOvf,YAChBuf,EACFA,EAAKtY,aAAajH,KAAKwjC,kBAAkBjkB,EAAKtY,OAC9CsY,EAAKrY,cAAclH,KAAKwjC,kBAAkBjkB,EAAKrY,OACtD,CAYDu8B,OACIC,EACA7sB,EACAnV,EAAQmV,GACR5P,KAAEA,EAAIC,MAAEA,GAAU,CAAED,MAAM,EAAMC,OAAO,IAEvC,IAAK,IAAIqY,KAAQvf,KAAKwjC,oBAClB,GAAIjkB,EAAK1I,MAAQ6sB,EAAe,CAC5B,MAAMC,EAAgB18B,GAAsB,OAAdsY,EAAKtY,KAC7B28B,EAAiB18B,GAAwB,OAAfqY,EAAKrY,MACrC,IAAKy8B,IAAkBC,EAAgB,OAAO,EAC9C,GAAID,EAEA,OADApkB,EAAKtY,KAAO,IAAIg8B,eAAepsB,EAAKnV,EAAO6d,IACpC,EAEX,GAAIqkB,EAEA,OADArkB,EAAKrY,MAAQ,IAAI+7B,eAAepsB,EAAKnV,EAAO6d,IACrC,CAEd,CAEL,OAAO,CACV,CAODlE,OAAOxE,GACH,IAAK,IAAI0I,KAAQvf,KAAKwjC,oBAAqB,CACvC,GAAIjkB,EAAKtY,KAAK4P,MAAQA,EAElB,OADA0I,EAAKtY,KAAO,MACL,EAEX,GAAIsY,EAAKrY,MAAM2P,MAAQA,EAEnB,OADA0I,EAAKrY,MAAQ,MACN,CAEd,CACD,OAAO,CACV,CAOD28B,KAAKhtB,GACD,IAAK,IAAI0I,KAAQvf,KAAKwjC,oBAClB,GAAIjkB,EAAK1I,MAAQA,EAAK,OAAO0I,CAGpC,ECjJE,MAAMukB,KAETpiC,MAAQ,KACR8K,KAAO,KACPu3B,SAAW,KAEXlhC,YAAYnB,EAAO8K,EAAO,KAAMu3B,EAAW,MACvC/jC,KAAK0B,MAAQA,EACb1B,KAAKwM,KAAOA,EACZxM,KAAK+jC,SAAWA,CACnB,CAKDC,UACIhkC,KAAK0B,WAAQqD,EACb/E,KAAKwM,UAAOzH,EACZ/E,KAAK+jC,cAAWh/B,CACnB,CAEDk/B,SACI,OAAOjkC,KAAK0B,KACf,EAGE,MAAMwiC,iBAETtnB,IAAS,GAKLpH,WACA,OAAOxV,MAAK4c,GAAOnY,MACtB,CAKG+X,WACA,OAAOxc,KAAKwV,KAAOxV,MAAK4c,GAAO,GAAK,IACvC,CAKGunB,WACA,OAAOnkC,KAAKwV,KAAOxV,MAAK4c,GAAO5c,KAAKwV,KAAO,GAAK,IACnD,CASD4W,OAAO1qB,EAAO+hB,EAAU2gB,GACpB,OAAO,IAAIN,KAAKpiC,EAAO+hB,EAAU2gB,EACpC,CASDC,SAASptB,EAAOvV,EAAOiN,GACnB,IAAK3O,MAAKk8B,GAAUjlB,EAAOtI,GAAO,OAAO,EAEzC,MAAMy1B,EAAepkC,MAAK4c,GAAO3F,EAAQ,IAAM,KACzCwM,EAAWzjB,MAAK4c,GAAO3F,IAAU,KACjCsI,EAAOvf,KAAKosB,OAAO1qB,EAAO+hB,EAAU2gB,GAEtCA,IAAcA,EAAa53B,KAAO+S,GAClCkE,IAAUA,EAASsgB,SAAWxkB,GAClCvf,MAAK4c,GAAO0nB,OAAOrtB,EAAO,EAAGsI,EAChC,CAMDglB,YAAY7iC,GACR1B,KAAKqkC,SAAS,EAAG3iC,EACpB,CAMD8iC,WAAW9iC,GACP1B,KAAKqkC,SAASrkC,KAAKwV,KAAM9T,EAC5B,CAOD+iC,MAAMxtB,GACF,OAAOjX,MAAK4c,GAAO3F,EACtB,CAEDM,QAAQ3V,GACJ,OAAO5B,MAAK4c,GAAOrF,QAAQ3V,EAC9B,CAQD8iC,SAASztB,EAAOtI,GAEZ,IAAK3O,MAAKk8B,GAAUjlB,EAAOtI,GAAO,OAAO,EAEzC,MAAMy1B,EAAepkC,MAAK4c,GAAO3F,EAAQ,IAAM,KACzCwM,EAAWzjB,MAAK4c,GAAO3F,EAAQ,IAAM,KAK3C,OAHImtB,IAAcA,EAAa53B,KAAOiX,GAClCA,IAAUA,EAASsgB,SAAWK,GAE3BpkC,MAAK4c,GAAO0nB,OAAOrtB,EAAO,EACpC,CAKDuS,MAAMmb,GAAO,GACLA,GAAM3kC,MAAK4c,GAAO7V,SAAQjE,GAAKA,EAAEkhC,YACrChkC,MAAK4c,GAAS,EACjB,CAKDva,UACIrC,MAAK4c,GAAS5c,MAAK4c,GAAOjM,QAAO,CAACi0B,GAAOljC,YACrC,MAAM+hB,EAAWmhB,EAAI,IAAM,KACrBrlB,EAAO,IAAIukB,KAAKpiC,EAAO+hB,EAAU,MAEvC,OADIA,IAAUA,EAASsgB,SAAWxkB,GAC3B,CAACA,KAASqlB,EAAI,GACtB,GACN,CAEDC,UACI,OAAO7kC,MAAK4c,GAAOla,KAAIsJ,GAAKA,EAAEtK,OACjC,CAEDuiC,SACI,OAAOjkC,MAAK4c,EACf,CAED,EAAE/R,OAAOi6B,kBACE9kC,MAAK4c,EACf,CAEDsf,IAAUjlB,EAAOtI,GAAO,GACpB,MAAMo2B,EAAY/kC,MAAKglC,GAAgB/tB,GACvC,GAAI8tB,IACIp2B,EAGA,MAAM,IAAI/N,MAAMZ,MAAK0c,MAG7B,OAAQqoB,CACX,CAEDC,IAAgB/tB,GACZ,OAAQ1I,OAAO02B,UAAUhuB,IAAUA,EAAQ,GAAKA,EAAQjX,KAAKwV,IAChE,CAEDkH,MACI,MAAO,oCAAoC1c,KAAKwV,OACnD,CAOD3V,YAAYoI,GACR,MAAMuP,EAAO,IAAI0sB,iBAEjB,OADInhC,MAAMC,QAAQiF,IAAOA,EAAKlB,SAAQxF,GAAKiW,EAAKgtB,WAAWjjC,KACpDiW,CACV,ECnNE,MAAM0tB,WAETxjC,IAAS,KACT8K,IAAQ,KACRu3B,IAAY,KAEZlhC,YAAYnB,GACR1B,MAAK0B,GAASA,CACjB,CAED,CAACmJ,OAAOkY,IAAI,YAAYnhB,GACpB5B,MAAKwM,GAAQ5K,CAChB,CAED,CAACiJ,OAAOkY,IAAI,YAAYnhB,GACpB5B,MAAK+jC,GAAYniC,CACpB,CAEDyZ,SACI,MAAM9L,EAAKvP,KAGX,OAFAuP,GAAGw0B,KAAYl5B,OAAOkY,IAAI,YAAYxT,GAAG/C,IACzC+C,GAAG/C,KAAQ3B,OAAOkY,IAAI,YAAYxT,GAAGw0B,IAC9Bx0B,GAAGy0B,IACb,CAED5a,SACI,OAAOppB,KAAKqb,QACf,CAMD+V,OAAO7R,GAMH,OAJAA,EAAO2lB,WAAWpoB,KAAKyC,KAClB/S,GAAQxM,MAAKwM,GAClB+S,GAAKwkB,GAAY/jC,KACjBA,MAAKwM,GAAQ+S,EACNA,CACV,CAEDd,IAAIc,GACA,OAAOvf,KAAKoxB,OAAO7R,EACtB,CAMDkkB,OAAOlkB,GAKH,OAJAA,EAAO2lB,WAAWpoB,KAAKyC,KAClBwkB,GAAY/jC,MAAK+jC,GACtBxkB,GAAK/S,GAAQxM,KACbA,MAAK+jC,GAAYxkB,EACVA,CACV,CAED+O,OAAO1sB,GAEH,OADA5B,MAAK0B,GAASE,EACP5B,IACV,CAED6jC,KAAKsB,GACD,OAAOnlC,KAAK8kC,SAASjB,KAAKsB,EAC7B,CAEDn/B,OAAOm/B,GACH,OAAOnlC,KAAK8kC,SAAS9+B,OAAOm/B,EAC/B,CAEDziC,IAAIyiC,GACA,OAAOnlC,KAAK8kC,SAASpiC,IAAIyiC,EAC5B,CAEDp+B,QAAQo+B,GACJ,IAAK,IAAIhkC,KAAKnB,KAAK8kC,SACfK,EAAGhkC,GAAI,EAAGnB,KAEjB,CAEDgX,MAAMmuB,GACF,IAAIz7B,EACJ,IAAK,IAAIvI,KAAKnB,KAAK8kC,SAEf,GADAp7B,EAASy7B,EAAGhkC,GAAI,EAAGnB,MACf0J,EAAQ,MAEhB,OAAOA,CACV,CAEDm7B,QAAQv+B,GAAS,GACb,OAAOA,EAAStG,KAAKolC,SAAWplC,KAAKqlC,OACxC,CAEDpB,SACI,OAAOjkC,KAAK0B,KACf,CAKDsiC,MAII,OAHAhkC,MAAK0B,QAASqD,EACd/E,MAAKwM,QAAQzH,EACb/E,MAAK+jC,QAAYh/B,EACV/E,IACV,CAEGwc,WACA,OAAOxc,KAAK+jC,UAAUvnB,MAAQxc,IACjC,CAEGmkC,WACA,OAAOnkC,KAAKwM,MAAM23B,MAAQnkC,IAC7B,CAEGwM,WACA,OAAOxM,MAAKwM,EACf,CAEGu3B,eACA,OAAO/jC,MAAK+jC,EACf,CAEGriC,YACA,OAAO1B,MAAK0B,EACf,CAEGA,UAAME,GACN5B,MAAK0B,GAASE,CACjB,CAEGwjC,eACA,MAAO,IAAIplC,MAAM0C,KAAInB,GAAKA,EAAEG,OAC/B,CAEG2jC,cACA,MAAO,IAAIrlC,KACd,CAEG8kC,eACA,OAAO9kC,KAAK6K,OAAOi6B,WACtB,CAED,EAAEj6B,OAAOi6B,kBACC9kC,KACFA,MAAKwM,WAAcxM,MAAKwM,GAAMs4B,SACrC,CAEDjlC,YAAY0f,GACR,OAAOA,aAAgB2lB,WAAa3lB,EAAO,IAAI2lB,WAAW3lB,EAC7D,EC9JE,MAAM+lB,cAAcviC,MAEvB6O,KAAK2zB,GACDvlC,KAAKwlC,QAAQD,EAChB,CAED3vB,MACI,OAAO5V,KAAK8P,OACf,CAED21B,OACI,OAAOzlC,KAAK,EACf,CAED0lC,UACI,OAAuB,IAAhB1lC,KAAKyE,MACf,EChBE,MAAMkhC,cAAc5iC,MAEvB6iC,QAAQL,GACJvlC,KAAK4R,KAAK2zB,EACb,CAEDM,UACI,OAAO7lC,KAAK8P,OACf,CAED21B,OACI,OAAOzlC,KAAK,EACf,CAED0lC,UACI,OAAuB,IAAhB1lC,KAAKyE,MACf,EChBE,MAAMqhC,KAETpkC,MAEAmV,IAAO,KACPwI,IAAU,KACV5Q,IAEAs3B,KAAU,EACV1U,IAAS,EAETxuB,YAAYgU,EAAKnV,EAAQmV,EAAKwI,EAAS,KAAMgS,EAAQ,GACjDrxB,MAAK6W,GAAOA,EACZ7W,MAAKqf,GAAUA,EACfrf,MAAK+lC,IAA0B,IAAhBrkC,GAAOskC,KACtBhmC,MAAKqxB,GAAShS,EAASA,EAAOgS,MAAQ,EAAIA,EAC1CrxB,MAAKyO,GAAYzO,MAAK+lC,GAAU,QAAKhhC,EACrC/E,KAAK0B,MAAQA,CAChB,CAKGwpB,cACA,OAAOnoB,MAAMmI,KAAKlL,KAAKimC,QAAGlhC,GAAW,GAAO,GAAM,GACrD,CAEGmhC,cACA,OAAOlmC,KAAKkrB,QAAQxoB,KAAII,GAAKA,EAAEuuB,QAAO/uB,KAAK,IAC9C,CAKG6jC,aAEA,OAAOnmC,KAAKkrB,QAAQxoB,KAAII,GAAKA,EAAEmU,QAAO3U,KAAK,IAC9C,CAEGuuB,WACA,OAAO7wB,KAAKkrB,QAAQxoB,KAAII,GAAKA,EAAE+T,MAAKvU,KAAK,IAC5C,CAEG2U,YACA,OAAOjX,KAAKqf,QAAQzC,MAAMrF,QAAQvX,OAAS,CAC9C,CAEGwV,WACA,OAAOxV,MAAKyO,IAAWhK,SAAW,CACrC,CAEG4sB,YACA,OAAOrxB,MAAKqxB,EACf,CAKG+R,aACA,OAAOpjC,KAAKqf,MACf,CAKG6jB,aACA,OAAQljC,MAAK+lC,EAChB,CAEGK,eACA,OAAOpmC,MAAK+lC,EACf,CAKG5C,kBACA,OAAOnjC,MAAK+lC,IAAW/lC,KAAKwV,KAAO,CACtC,CAKGqB,UAEA,OADA7W,MAAK6W,KAAS7W,KAAKmmC,OACZnmC,MAAK6W,EACf,CAEG+F,YACA,OAAO5c,MAAKyO,EACf,CAKG4Q,aACA,OAAOrf,MAAKqf,EACf,CAKGU,WACA,OAAO/f,KAAKqf,QAAQU,MAAQ/f,IAC/B,CAKGqmC,cACA,OAAOrmC,MAAKqf,IAAS7J,KAAOxV,KAAKiX,MAAQ,CAC5C,CAEGqvB,iBACA,OAAOtmC,KAAKqmC,QAAUrmC,MAAKyO,GAAU,QAAK1J,CAC7C,CAEGwhC,gBACA,OAAOvmC,KAAKqmC,QAAUrmC,MAAKyO,GAAUzO,MAAKyO,GAAUhK,OAAS,QAAKM,CACrE,CAEGyH,WACA,OAAOxM,KAAKwmC,KAAKxmC,MAAM,GAAO,GAAOwM,OAAO9K,OAAS1B,KAAK8jB,aAAe9jB,KAAKqf,QAAQyE,WACzF,CAEGigB,eACA,MAAMxkB,EAAOvf,KAAKymC,gBAClB,OAAQlnB,GAAM4jB,YAAe5jB,EAAKgnB,UAAYhnB,GAAQvf,KAAKimC,GAAGjmC,MAAM,GAAO,GAAOwM,OAAO9K,KAC5F,CAEGoiB,kBACA,OAAO9jB,KAAKqmC,QAAUrmC,MAAKqf,IAAQ5Q,GAAUzO,KAAKiX,MAAQ,QAAKlS,CAClE,CAEG0hC,sBACA,OAAOzmC,KAAKiX,MAAQ,EAAIjX,MAAKqf,IAAQ5Q,GAAUzO,KAAKiX,MAAQ,QAAKlS,CACpE,CAKDykB,QACQxpB,MAAKyO,KACLzO,MAAKyO,GAAU1H,SAAQjE,GAAKA,EAAEkhC,cAC9BhkC,MAAKyO,GAAY,GAExB,CAMDu1B,UACIhkC,KAAKwpB,QACLxpB,MAAK6W,GAAO,KACZ7W,KAAK0B,MAAQ,KACb1B,MAAKqf,GAAU,IAClB,CAUDmnB,MAAMjnB,EAAOvf,KAAMsG,GAAS,EAAOogC,GAAY,EAAMrkC,GAAU,EAAOskC,GAAO,GACzE,MAAM7jC,EAAIwD,EAASiZ,EAAK7d,MAAQ6d,EAEhC,GADImnB,IAAcrkC,GAAWkd,EAAK8R,OAAS,UAASvuB,GAChDyc,GAAK9Q,IAAWhK,OAChB,IAAK,IAAIib,KAASH,GAAK9Q,SACZzO,KAAKwmC,KAAK9mB,EAAOpZ,GAAQ,EAAMjE,EAASskC,GAGvD,GAAIA,EAAM,CACN,MAAMpB,EAAOhmB,EAAKuE,aAAevE,EAAKF,OAAOyE,YACzCyhB,UAAavlC,KAAKwmC,KAAKjB,EAAMj/B,GAAQ,EAAMjE,EAASskC,GAC3D,CAGGD,GAAarkC,GAAWkd,EAAK8R,OAAS,UAASvuB,EACtD,CASDmjC,IAAI1mB,EAAOvf,KAAMsG,GAAS,EAAOogC,GAAY,EAAMrkC,GAAU,EAAOskC,GAAO,GACvE,MAAM7jC,EAAIwD,EAASiZ,EAAK7d,MAAQ6d,EAEhC,GADImnB,IAAcrkC,GAAWkd,EAAK8R,OAAS,UAASvuB,GAChD6jC,EAAM,CACN,IAAIpB,EAAOhmB,EAAKknB,gBAChBlB,EAAOA,GAAMa,SAAWb,EAAKgB,UAAYhB,EACrCA,UAAavlC,KAAKimC,GAAGV,EAAMj/B,GAAQ,EAAMjE,EAASskC,GACzD,CACGpnB,EAAKF,eACErf,KAAKimC,GAAG1mB,EAAKF,OAAQ/Y,GAAQ,EAAMjE,EAASskC,IAEnDD,GAAarkC,GAAWkd,EAAK8R,OAAS,UAASvuB,EACtD,CAMDmY,KAAOjb,KAAKwmC,KASZz/B,QAAQ2f,EAAUigB,GAAO,EAAOtkC,GAAU,GACtCrC,KAAKgX,OAAM,CAACuI,EAAMtI,KACdyP,EAASnH,EAAMtI,IACR,IACR0vB,EAAMtkC,EACZ,CASD2U,MAAM0P,EAAUigB,GAAO,EAAOtkC,GAAU,GACpC,MAAMoV,EAAKzX,KAAK4mC,QAAQD,EAAMtkC,GAC9B,IAAI+V,GAAM,EACNzV,EAAI,EACR,IAAK,IAAI4c,KAAQ9H,EAEb,GADAW,EAAMsO,EAASnH,EAAM5c,MAChByV,EAAK,MAEd,OAAOA,CACV,CASDyrB,KAAKnd,EAAUigB,GAAO,EAAOtkC,GAAU,GACnC,MAAMoV,EAAKzX,KAAK4mC,QAAQD,EAAMtkC,GAC9B,IAAIM,EAAI,EACR,IAAK,IAAI4c,KAAQ9H,EACb,GAAIiP,EAASnH,EAAM5c,KAAM,OAAO4c,CAGvC,CASDvZ,OAAO0gB,EAAUigB,EAAMtkC,GACnB,MAAO,IAAIrC,MAAK6mC,GAAUngB,EAAUigB,EAAMtkC,GAC7C,CAEDykC,KAAWpgB,EAAUigB,EAAMtkC,GACvB,MAAMoV,EAAKzX,KAAK4mC,QAAQD,EAAMtkC,GAC9B,IAAK,IAAIkd,KAAQ9H,EAAI,CACPiP,EAASnH,WACJA,EAClB,CACJ,CAODqnB,SAASD,EAAMtkC,GACXA,QAAiBrC,KAAKimC,GAAGjmC,MAAM,GAAO,GAAO,EAAO2mC,SAAe3mC,KAAKwmC,KAAKxmC,MAAM,GAAO,GAAQ,EAAO2mC,EAC5G,CAQDvV,OAAOva,EAAKnV,EAAQmV,GAChB,IAAIkwB,EAWJ,OAVIlwB,aAAeivB,MACfjvB,GAAIwI,GAAUrf,KACd6W,GAAIwa,GAASrxB,MAAKqxB,GAAS,EAC3B0V,EAASlwB,GAETkwB,EAAS,IAAIjB,KAAKjvB,EAAKnV,EAAO1B,MAElCA,MAAK+lC,IAAU,EACf/lC,MAAKyO,KAAc,GACnBzO,MAAKyO,GAAUmD,KAAKm1B,GACbA,CACV,CAUDtD,OAAOC,EAAe7sB,EAAKnV,EAAQmV,GAC/B,IAAK,IAAI0I,KAAQvf,KAAKib,OAClB,GAAIsE,EAAK1I,MAAQ6sB,EAAe,CAC5B,MAAMqD,EAAS,IAAIjB,KAAKjvB,EAAKnV,EAAO6d,GAIpC,OAHAvf,MAAK+lC,IAAU,EACf/lC,MAAKyO,KAAc,GACnB8Q,GAAK9Q,GAAUmD,KAAKm1B,GACbA,CACV,CAEL,OAAO,CACV,CAOD1rB,OAAOxE,GAEH,MAAMtH,EAAKvP,KAEX,GAAI6W,EAAK,CACL,MAAM0I,EAAOhQ,EAAGy3B,UAAUnwB,GAE1B,OADA0I,GAAMlE,SACCkE,CACV,CAED,GAAIhQ,EAAG6zB,OAAQ,MAAM,IAAIxiC,MAAM,gCAC/B,MAAM2e,EAAOhQ,EAAG8P,OACVwnB,EAAWtnB,GAAK9Q,GAAUzI,QAAO6Z,GAAKA,IAAMtQ,IAClD,OAAIs3B,EAASpiC,SAAW8a,GAAK9Q,GAAUhK,SACnC8a,GAAK9Q,GAAYo4B,EACVt3B,EAId,CAODy3B,UAAUnwB,GACN,IAAK,IAAI0I,KAAQvf,KAAKib,OAClB,GAAIsE,EAAK1I,MAAQA,EAAK,OAAO0I,CAGpC,CAMD0nB,QAAQ3gC,EAAQogC,EAAWrkC,GACvB,MAAO,IAAIrC,KAAKwmC,KAAKxmC,KAAMsG,EAAQogC,EAAWrkC,GACjD,CAMD6kC,SAASj/B,GAEL,OADIA,GAAM69B,KAAK56B,KAAKlL,KAAMiI,GACnBjI,IACV,CAMDikC,SACI,OAAIjkC,KAAKqxB,MAAQ,EAAUrxB,MAAKyO,IAAW/L,KAAII,GAAKA,EAAEmhC,YAAa,CAAA,EAC5DjkC,KAAKkjC,OAAS,CAAErsB,IAAK7W,KAAK6W,IAAKnV,MAAO1B,KAAK0B,OAC9C,CACImV,IAAK7W,KAAK6W,IACVnV,MAAO1B,KAAK0B,MACZ+gB,MAAOziB,MAAKyO,GAAU/L,KAAII,GAAKA,EAAEmhC,WAE5C,CAKD,EAAEp5B,OAAOi6B,kBACE9kC,KAAKwmC,MACf,CAOD3mC,YAAYwf,EAAQpX,GAChB,MAAMskB,EAAMtkB,GAAQoX,EACd8nB,EAAY9nB,aAAkBymB,KACpC,GAAI/iC,MAAMC,QAAQupB,GAAM,CACpB,IAAK4a,EAAW,MAAM,IAAIvmC,MAAM,sCAEhC,OADA2rB,EAAIxlB,SAAQjE,GAAKgjC,KAAK56B,KAAKmU,EAAQvc,KAC5Buc,CACV,CACD,MAAMoD,MAAEA,KAAUzgB,GAAQuqB,EACpB7R,EAAO,IAAIorB,KAAK9jC,EAAI6U,IAAK7U,EAAKiG,EAAOoX,OAASta,GAGpD,OAFIoiC,GAAW9nB,EAAO+R,OAAO1W,GACzB+H,GAAOqjB,KAAK56B,KAAKwP,EAAM+H,GACpB/H,CACV,EC/ZE,MAAM0sB,aAETvnC,UAAiBgL,OAAO,UAOxBhL,mBAAmB+B,GACf,QAAKA,IAEDmB,MAAMC,QAAQpB,GACdA,EAAIwlC,cAAaC,KAAW,EAE5BrmC,EAAOsmC,QAAQ1lC,GAAKmF,SAAQjE,GAAKA,EAAEskC,cAAaC,KAAW,IAExDzlC,EACV,CAMD/B,sBAAsB+B,GAClB,QAAKA,WACEA,EAAIwlC,cAAaC,IACjBzlC,EACV,CAKD/B,qBAAqBoI,GACjB,MAAMsH,EAAKvP,KACXgB,EAAOsmC,QAAQr/B,GAAMlB,SAAQjE,GAAKyM,EAAGg4B,eAAezkC,IACvD,CAKDjD,mBAAmBoI,EAAO,IACtB,MAAMsH,EAAKvP,KACX,OAAOuP,EAAGi4B,WAAWv/B,IAASjH,EAAOsmC,QAAQr/B,GAAMjC,QAAOlD,GAAKyM,EAAGi4B,WAAW1kC,IAChF,CAODjD,kBAAkB+B,GACd,QAAOA,IAAoC,IAA9BA,EAAIwlC,cAAaC,GACjC,ECpDL,MAAMI,gCAAgC7N,QAElC/5B,UAAmB,KACnBA,UAAmBgL,SAEnB68B,IAAY,IAAI3hB,IAEhBrjB,GAAO,IAAIqjB,IAEXljB,YAAYgU,GACR,GAAIA,GAAO4wB,yBAAwBE,GAAW,MAAM,IAAI/mC,MAAM,sCAC9D+pB,OACH,CAODid,WAAWxnC,EAAMuI,GACb3I,MAAK0nC,GAAUl6B,IAAIpN,EAAMuI,EAC5B,CAMDk/B,cAAcznC,GACVJ,MAAK0nC,GAAUte,OAAOhpB,EACzB,CAMD0nC,WAAW1nC,GACP,OAAOJ,MAAK0nC,GAAUx+B,IAAI9I,EAC7B,CAQD2nC,WAAW3nC,EAAM8H,EAAMi5B,GACnB,MAAMx4B,EAAQ3I,KAAK8nC,WAAW1nC,GAC9B,OAAOuI,EAAQ,IAAIA,EAAMT,EAAMi5B,QAAWp8B,CAC7C,CAMDu1B,SAASt4B,GACL,MAAMuN,EAAKvP,KACXuP,GAAGy4B,GAAQhmC,GACX,MAAMsnB,EAAQ/Z,EAAGs0B,KAAK7hC,EAAIxB,IAC1B,GAAI8oB,GAAStnB,EAAb,CACA,GAAIsnB,EAAO,MAAM,IAAI1oB,MAAM,QAAQoB,EAAIxB,6CACvC+O,GAAG7M,EAAK8K,IAAIxL,EAAIxB,GAAIwB,GACpBuN,EAAG2qB,KAAK,YAAYl4B,EAAIxB,KAAMwB,GAC9BuN,EAAG2qB,KAAK,WAAYl4B,EAJK,CAK5B,CAOD2/B,WAAW3/B,GACP,MAAMuN,EAAKvP,KACPgB,EAAOoC,SAASpB,KAAMA,EAAMuN,EAAGs0B,KAAK7hC,IACxCuN,GAAGy4B,GAAQhmC,GACX,MAAMoW,EAAM7I,GAAG7M,EAAK0mB,OAAOpnB,EAAIxB,IAK/B,OAJI4X,IACA7I,EAAG2qB,KAAK,cAAcl4B,EAAIxB,KAAMwB,GAChCuN,EAAG2qB,KAAK,aAAcl4B,IAEnBoW,CACV,CAODyrB,KAAKjiC,GACD,OAAO5B,MAAK0C,EAAKwG,IAAItH,EACxB,CASDgK,WAAWpL,EAAK,GAAI8G,EAAQgzB,GAAW,GACnC,IAAK95B,EAAI,MAAM,IAAII,MAAM,6BACzB,MAAM2O,EAAKvP,KACX,GAAIs6B,EAAU,CACV,MAAM2N,EAAK14B,EAAGs0B,KAAKrjC,GACnB,GAAIynC,EAAI,OAAOA,CAClB,CACD,MAAM7nC,EAAOk6B,EAAW,WAAa,aAErC,aADM3P,MAAM/D,KAAK,GAAGxmB,KAAQI,IAAM8G,GAC3BiI,EAAGs0B,KAAKrjC,EAClB,CAKD0nC,gBACIloC,MAAK0nC,GAAUle,QACfxpB,MAAK0C,EAAK8mB,OACb,CAEDwe,IAAQhmC,GAEP,CAEUuH,gBAEP,OADKk+B,yBAAwBxG,KAAWwG,yBAAwBxG,GAAY,IAAIwG,wBAAwBA,yBAAwBE,KACzHF,yBAAwBxG,EAClC,QAGGpgC,OAAOC,KAAK2mC,yBACZxmC,WAAWknC,oBAAsBV,yBAAwBl+B,EAC5D,EAIO,MAAC4+B,EAAsBlnC,WAAWknC,oBCpIvC,MAAMC,4BAA4BxO,QAErC/5B,UAAiBgL,OAAO,UAExBrK,GAAM,KACN6nC,IAAc,KAEdxlC,YAAYqF,EAAMi5B,GAAU,GACxBxW,QACW3qB,MACRQ,EAAM0H,GAAQoE,KAAKE,OAClB20B,GAFOnhC,KAEKwhC,QACnB,CAMD8G,aAAaC,GACJA,IACLvoC,MAAKqoC,KAAgB,IAAIvxB,IACzB9W,MAAKqoC,GAAY5pB,IAAI8pB,GACxB,CAMDC,gBAAgBD,GACRA,GAAWvoC,MAAKqoC,IAAajf,OAAOmf,EAC3C,CAMG/nC,SACA,OAAOR,MAAKQ,CACf,CAKDghC,SAEI2G,EAAoB7N,SADTt6B,WAERk6B,KAAK,UACX,CAKDuH,UAEI0G,EAAoBxG,WADT3hC,WAERk6B,KAAK,WACX,CAMGuO,mBACA,QAAON,EAAoBtE,KAAK7jC,KAAKQ,GACxC,CASDkoC,OAAO39B,EAAO3K,EAAM6H,EAAMyU,GACtB1c,KAAKk6B,KAAKxd,EAAQ,QAAUtc,EAAM,CAAEA,KAAMA,EAAMsc,MAAOA,EAAO3R,MAAOA,EAAO9C,KAAMA,IAAQ,EAC7F,CAOD2D,WAAWb,GACP,MAAMwE,EAAKvP,KACX,IAAIiI,EAAO,KACX,IACIA,QAAasH,EAAGo5B,OAAO59B,GACvBwE,GAAG84B,IAAathC,SAAQ8Y,GAAKA,EAAE+oB,WAAW3gC,KACtCA,GAAMsH,EAAGm5B,OAAO39B,EAAO,OAAQ9C,EACtC,CAAC,MAAO+D,GAEL,MADAuD,EAAGm5B,OAAO39B,EAAO,OAAQ9C,EAAM+D,GACzBA,CACT,CACD,OAAO/D,CACV,CAOD2D,YAAYb,EAAO9C,GACf,MAAMsH,EAAKvP,KACX,IAAI0J,EAAS,KACb,IACIA,QAAe6F,EAAGs5B,QAAQ99B,EAAO9C,GACjCsH,GAAG84B,IAAathC,SAAQ8Y,GAAKA,EAAEipB,YAAY7gC,KACvCyB,GAAQ6F,EAAGm5B,OAAO39B,EAAO,QAAS9C,EACzC,CAAC,MAAO+D,GAEL,MADAuD,EAAGm5B,OAAO39B,EAAO,QAAS9C,EAAM+D,GAC1BA,CACT,CACD,OAAOtC,CACV,CAODkC,aAAab,GACT,MAAM,IAAInK,MAAM,8DACnB,CAODmoC,YAAYnnC,GACR,IAAKA,EAAK,OAAO,EACjBwlC,aAAa2B,YAAYnnC,GAIzB,OAHW5B,KACRk6B,KAAK,gBAAiBt4B,GADd5B,KAERk6B,KAAK,UACDt4B,CACV,CAMD2lC,eAAe3lC,GACX,IAAKA,EAAK,OAAO,EACjBwlC,aAAaG,eAAe3lC,GAI5B,OAHW5B,KACRk6B,KAAK,mBAAoBt4B,GADjB5B,KAERk6B,KAAK,UACDt4B,CACV,CAKDonC,cAAc/gC,GACVm/B,aAAa4B,cAAc/gC,GAChBjI,KACRk6B,KAAK,mBADGl6B,KAERk6B,KAAK,SACX,CAKD+O,YAAYhhC,EAAO,IACf,OAAOm/B,aAAa6B,YAAYhhC,EACnC,CAODu/B,WAAW5lC,GACP,OAAOwlC,aAAaI,WAAW5lC,EAClC,CAMGsjB,eACA,MAAO,EACV,CAQDtZ,cAAcb,EAAO9C,GACjB,MAAM,IAAIrH,MAAM,+DACnB,CAKDq8B,QACIj9B,MAAKqoC,GAAc,IACtB,ECpME,MAAMa,oBAAoBd,oBAE7BvoC,UAAe,SAEfA,UAAgB,CAAC,GAAI,OAAQ,QAAS,SACtCA,UAAiB,CAAC,MAAO,MAAO,OAAQ,UAExC2J,IAAO,GACPyoB,IAAW,CAAA,EACXkX,IAAU,MACVC,IAAU,OACVtf,IAAU,GACVuf,IAAQ,GAERxyB,IAAO,KAEPyyB,IAAQ,EACRnxB,IAAS,EAETqB,IAAQ,GACRxT,IAAU,GAOVnD,YAAYqF,EAAMi5B,GACdxW,MAAMziB,EAAMi5B,EACf,CAKG/gC,WACA,OAAO8oC,aAAYK,EACtB,CAOGF,WACA,OAAOroC,EAAOa,UAAU7B,MAAKqpC,GAChC,CAOGA,SAAKznC,GACL,MAAM2N,EAAKvP,KACX4B,EAAMZ,EAAOa,UAAUD,GAEvB,IADasnC,aAAYM,GAAOp/B,SAASxI,GAC9B,MAAM,IAAIhB,MAAM,KAAM,0BAA0BsoC,aAAYM,MAKvE,MAJiB,UAAbj6B,GAAG85B,IAAqB95B,GAAG85B,IAASznC,IACpC2N,GAAG45B,GAAU,MACb55B,GAAG65B,GAAU,QAEVppC,MAAKqpC,GAAQznC,CACvB,CAMGunC,aACA,OAAOnpC,MAAKmpC,EACf,CAOGA,WAAOvnC,GAGP,OAFW5B,KACKypC,SAAiBP,aAAYQ,GAAQt/B,SAASxI,IACnD,MAAM,IAAIhB,MAAM,KAAM,4BAA4BsoC,aAAYQ,MACzE,OAHW1pC,MAGDmpC,GAAUvnC,CACvB,CAMGwnC,aACA,OAAOppC,MAAKopC,EACf,CAOGA,WAAOxnC,GAGP,OAFW5B,KACKypC,SAAiBP,aAAYQ,GAAQt/B,SAASxI,IACnD,MAAM,IAAIhB,MAAM,KAAM,4BAA4BsoC,aAAYQ,MACzE,OAAO1pC,MAAKopC,GAAUxnC,CACzB,CAMGqwB,cACA,MAAO,IAAKjyB,MAAKiyB,GACpB,CAMGA,YAAQrwB,EAAM,IACdA,EAAMZ,EAAOuM,OAAO3L,GACT5B,MACRiyB,GAAW,IAAKrwB,EACtB,CAKGiV,UACA,OAAO7W,MAAK6W,EACf,CAMGA,QAAIjV,GACJ5B,MAAK6W,GAAOjV,CACf,CAMG4H,UACA,OAAOxJ,MAAKwJ,EACf,CAMGA,QAAI5H,EAAM,IACC5B,MACRwJ,GAAO5H,CACb,CAMGuW,YACA,OAAOnY,MAAKmY,EACf,CAMGA,UAAMvW,EAAM,IACZ5B,MAAKmY,GAASnX,EAAOsM,MAAM1L,EAAK,GACnC,CAMG0nC,WACA,OAAOtpC,MAAKspC,EACf,CAMGA,SAAK1nC,EAAM,GACX5B,MAAKspC,GAAQtoC,EAAOsM,MAAM1L,EAAK,EAClC,CAOGoE,aACA,OAAOhG,MAAKgG,EACf,CAEGA,WAAOpE,GAEPA,EAAMA,GAAO,GACbA,EAAMZ,EAAOsxB,OAAO1wB,GAAOZ,EAAOuM,OAAO3L,GAAOA,EAFrC5B,MAGRgG,GAAUjD,MAAMC,QAAQpB,GAAOA,EAAM,CAACA,EAC5C,CAOG4X,WACA,OAAOxZ,MAAKwZ,EACf,CAEGA,SAAK5X,GAELA,EAAMA,GAAO,GACbA,EAAMZ,EAAOsxB,OAAO1wB,GAAOZ,EAAOuM,OAAO3L,GAAOA,EAFrC5B,MAGRwZ,GAAQzW,MAAMC,QAAQpB,GAAOA,EAAM,CAACA,EAC1C,CASGkoB,aAEA,IAAIhkB,EAAM,GACV,OAFW9F,KAEAqpC,MACP,IAAK,QACDvjC,EAAM,6DACN,MACJ,IAAK,OACDA,EAAM,kDAGd,OAVW9F,MAUD8pB,IAAWhkB,CACxB,CAOGgkB,WAAOloB,EAAM,IACF5B,MACR8pB,GAAUloB,CAChB,CAKGoC,UACA,MAAMuL,EAAKvP,KACX,OAAOuP,GAAGo6B,GAAOp6B,GAAG/F,GAAM+F,GAAG+5B,GAAO/5B,GAAG4I,GAAQ5I,GAAGvJ,GAASuJ,GAAGiK,GACjE,CAEDmwB,IAAOngC,EAAK8/B,EAAMnxB,EAAOnS,EAAQwT,GAE7B,GAAIxY,EAAO8D,cAAc0E,GAAM,MAAM,IAAI5I,MAAM,4BAC/C4Y,EAAOA,EAAO/T,KAAKiI,UAAU8L,GAAQ,GACrCxT,EAASA,EAASP,KAAKiI,UAAU1H,GAAU,GAC3C,MAAM+H,EAAM,CAAEoK,MAAOA,EAAOmxB,KAAMA,EAAM9vB,KAAMowB,mBAAmBpwB,GAAOxT,OAAQ4jC,mBAAmB5jC,IACnG,OAAOwD,EAAMxI,EAAO6oC,YALT7pC,KAKwB8pB,OAAQ/b,EAC9C,CAMG+7B,gBACA,MAAqB,KAAd9pC,KAAKqpC,IACf,CAMGI,cACA,MAAqB,UAAdzpC,KAAKqpC,IACf,CAMGU,eACA,MAAO,CAAC,OAAQ,SAAS3/B,SAASpK,KAAKqpC,KAC1C,CAODz9B,aAAab,GACT,MAAMwE,EAAKvP,KACX,GAAIuP,EAAGu6B,UAAW,OAClB,IAAKv6B,GAAG45B,GAAS,OAAOxe,MAAMge,OAAO59B,GACrC,GAAIwE,EAAGw6B,SAAU,aAAaja,SAASkC,KAAKziB,EAAGvL,IAAKuL,GAAG45B,GAAS55B,GAAG0iB,IAAU,GAC7E,IAAK1iB,EAAGk6B,QAAS,OACjB,MAAMhpC,EAAKyJ,EAAWmB,cAAckE,GAAG45B,IACvC,IAAK1oC,EAAI,MAAM,IAAIG,MAAM,oCACzB,OAAOH,EAAG8O,EAAG+5B,KAAM/5B,EAAG4I,MAAO5I,EAAGvJ,OAAQuJ,EAAGiK,KAC9C,CAQD5N,cAAcb,EAAO9C,GACjB,MAAMsH,EAAKvP,KACX,GAAIuP,EAAGu6B,UAAW,OAClB,IAAKv6B,GAAG65B,GAAS,OAAOze,MAAMke,QAAQ99B,GACtC,IAAKwE,EAAGw6B,SAAU,aAAaja,SAASkC,KAAKziB,EAAGvL,IAAKuL,GAAG65B,GAAS75B,GAAG0iB,IAAU,EAAMhqB,GACpF,IAAKsH,EAAGk6B,QAAS,OACjB,MAAMhpC,EAAKyJ,EAAWmB,cAAckE,GAAG65B,IACvC,IAAK3oC,EAAI,MAAM,IAAIG,MAAM,oCACzB,OAAOH,EAAGwH,EACb,CAKDg1B,QACIj9B,MAAKwJ,GAAO,GACZxJ,MAAKiyB,GAAW,GAChBjyB,MAAKmpC,GAAU,MACfnpC,MAAKopC,GAAU,OACfppC,MAAK8pB,GAAU,GACf9pB,MAAKqpC,GAAQ,GACbrpC,MAAK6W,GAAO,KACZ7W,MAAKspC,GAAQ,EACbtpC,MAAKmY,GAAS,EACdnY,MAAKwZ,GAAQ,GACbxZ,MAAKgG,GAAU,EAClB,CAODnG,gBAAgBqI,GACZ,OAAO,IAAIghC,YAAYhhC,GAAM,EAChC,QAGGigC,EAAoBP,WAAWsB,aAAYK,GAAOL,YACrD,ECpWE,MAAMc,0BAA0Bd,YAEnCrpC,UAAe,SAEfoI,IAAQ,GAERgiC,IAAUhiC,EAAO,IAEb,IAAIiiC,EAAU,GASd,OAPIA,EADAnnC,MAAMC,QAAQiF,GACJA,EACHlF,MAAMC,QAAQiF,EAAKA,MAChBA,EAAKA,KAEL,CAACA,GAGRiiC,CACV,CAEDC,IAAYliC,GACR,MAAMsH,EAAKvP,KACXiI,EAAOyO,OAAO0zB,SAASniC,EAAMsH,EAAGiK,MAChC,IAAIrB,EAAqB,IAAb5I,EAAG4I,MAAclQ,EAAKxD,OAAS8K,EAAG4I,MAE9C,OADAlQ,EAAOA,EAAKxF,MAAM8M,EAAG+5B,KAAM/5B,EAAG+5B,KAAOnxB,EAExC,CAEDqR,QACIxpB,KAAKgpC,cAAchpC,MAAKiI,IACxBjI,MAAKiI,GAAQ,EAChB,CAEDmpB,OAAOnpB,GACH,IAAIA,EAAM,OAAO,EACjB,MAAMsH,EAAKvP,KAGX,OAFAiI,EAAOsH,GAAG06B,GAAUhiC,GACpBsH,GAAGtH,GAAQsH,GAAGtH,GAAM4I,OAAO5I,GACpBsH,GAAGtH,EACb,CAEDoT,OAAOpT,GACH,MAAMsH,EAAKvP,KAGX,OAFAuP,EAAGg4B,eAAet/B,GAClBsH,GAAGtH,GAAQsH,GAAGtH,GAAMjC,QAAOlD,IAAUmF,IAC9BsH,GAAGtH,EACb,CAOD2D,aAAab,GACT,MAAMwE,EAAKvP,KAEX,GAAwB,IAApBuP,GAAGtH,GAAMxD,OAAc,CACvB,MAAMwD,QAAa0iB,MAAMge,SACzBp5B,GAAGtH,GAAQsH,GAAG06B,GAAUhiC,EAC3B,CAED,IAAIA,EAAOyO,OAAO2zB,WAAW96B,GAAGtH,GAAOsH,EAAGvJ,OAAQuJ,EAAG2I,OAAQ3I,EAAG4I,OAEhE,OADAlQ,EAAOsH,GAAG46B,GAAYliC,GACfA,CACV,CAED2D,cAAcb,EAAO9C,GACjB,OAAOjI,KAAKoxB,OAAOnpB,EACtB,CAEDw5B,UACIzhC,MAAKiI,GAAQ,GACb0iB,MAAM8W,SACT,CAEG6I,WAAO1oC,GACI5B,KACRgG,OAASpE,EAAM,CAAC,CAACF,MAAQE,IAAQ,GADzB5B,KAERuqC,MAMN,CAEDvB,gBACI,OAAOre,MAAMqe,cAAchpC,MAAKiI,GACnC,CAKGid,eACA,OAAOyF,MAAMse,YAAYjpC,MAAKiI,GACjC,CAKG7H,WACA,OAAO4pC,mBAAkBT,EAC5B,CAKDtM,QACIj9B,KAAKwpB,QACLmB,MAAMsS,OACT,CAODp9B,gBAAgBqI,GACZ,OAAO,IAAI8hC,kBAAkB9hC,GAAM,EACtC,QAGGigC,EAAoBP,WAAWoC,mBAAkBT,GAAOS,kBAC3D,EC7HE,MAAMQ,iBAAiB1E,KAE1B/2B,KAAS,EACT07B,KAAU,EACVC,KAAW,EACXxlB,KAAY,EAEZylB,SAAe5lC,EACf6lC,SAAgB7lC,EAChB8lC,SAAe9lC,EAEflC,YAAYgU,EAAKnV,EAAQmV,EAAKwI,EAAS,KAAMgS,EAAQ,GACjD1G,MAAM9T,EAAKnV,EAAO2d,EAAQgS,KAEJ,IAAlB3vB,GAAOopC,QAAoB9qC,KAAK+O,OAASsQ,GAAQ6F,YAAWllB,KAAKklB,UAAW,IAC3D,IAAjBxjB,GAAOqpC,QAAgB/qC,KAAK0qC,SAAU,IACtB,IAAhBhpC,GAAOspC,OAAehrC,KAAKyqC,QAAS,EAC3C,CAEDQ,cAAchR,GACV,MAAMla,EAAO/f,KAAK+f,MACjBA,GAAK8qB,KAAiB,IAAI/zB,KAAO2H,IAAIwb,EACzC,CAEDiR,iBAAiBjR,GACbj6B,KAAK+f,MAAK8qB,IAAczhB,OAAO6Q,EAClC,CAKGlrB,YACA,OAA4B,IAArB/O,KAAK+f,MAAKhR,EACpB,CAEGA,UAAMnN,GACN5B,KAAK+f,MAAKhR,IAAiB,IAARnN,CACtB,CAEGupC,cACA,OAAInrC,KAAKqxB,MAAQ,GACVrxB,KAAKqf,QAAQorB,MACvB,CAKGA,aACA,OAAIzqC,KAAKqxB,MAAQ,IACVrxB,KAAKkjC,OAASljC,KAAKqf,QAAQorB,OAASzqC,MAAKyqC,GACnD,CAEGA,WAAO7oC,IACPA,GAAc,IAARA,GAEF5B,KAAKorC,SAELprC,KAAKqrC,UAEZ,CAKGX,cACA,OAAO1qC,MAAK0qC,EACf,CAEGA,YAAQ9oC,GACRA,GAAc,IAARA,EACN,MAAMme,EAAO/f,KAAK+f,KACZurB,EAAUtrC,MAAK0qC,IAAY9oC,EAC3B+oC,EAAc5qB,EAAK4qB,cAEzB5qB,GAAK4qB,QAAe5lC,EACpB/E,MAAK0qC,GAAW9oC,EACZ+oC,GAAeA,IAAgB3qC,OAC/B2qC,EAAYD,SAAU,GAGtB9oC,IAAKme,GAAK4qB,GAAe3qC,MACzBsrC,GAASvrB,GAAK8qB,IAAc9jC,SAAS8Y,GAAMA,EAAE0rB,iBAAiBvrC,OACrE,CAMGklB,eACA,OAAOllB,MAAKklB,EACf,CAEGA,aAAStjB,GACTA,GAAc,IAARA,EACN,MAAMme,EAAO/f,KAAK+f,KACZ6qB,EAAe7qB,EAAK6qB,eACpBU,EAAUtrC,MAAKklB,IAAatjB,EAClC5B,MAAKklB,GAAYtjB,EACbA,IACIgpC,GAAgBA,IAAiB5qC,OAAS+f,EAAKhR,QAC/C67B,EAAa1lB,UAAW,GAE5BnF,GAAK6qB,GAAgB5qC,MAErBsrC,IACAvrB,GAAK8qB,IAAc9jC,SAAS8Y,GAAMA,EAAE2rB,qBAAqBxrC,KAAM4qC,KAC3D7qB,EAAKhR,OAAOgR,GAAK8qB,IAAc9jC,SAAS8Y,GAAMA,EAAE2rB,qBAAqBxrC,KAAKqf,OAAQurB,KAE7F,CAEGa,yBACA,OAAOzrC,KAAKklB,UAAYllB,KAAKmjC,aAAenjC,KAAK4c,MAAMnY,OAASzE,KAAK4c,MAAM5W,QAAO7E,GAAKA,EAAE+jB,WAAUzgB,MACtG,CAYDinC,YACI,MAAM3rB,EAAO/f,KAAK+f,KAClB,IAAKA,EAAKhR,MAGN,OAFA/O,KAAK2rC,mBACL3rC,KAAKklB,UAAW,GAGpBllB,MAAK4rC,IAAe,GACpB7rB,GAAK6qB,GAAgB5qC,KACrB+f,GAAK8qB,IAAc9jC,SAAS8Y,GAAMA,EAAEgsB,cAAc9rB,IACrD,CAED4rB,cACI,MAAM5rB,EAAO/f,KAAK+f,KAClB/f,MAAK4rC,IAAe,GACpB7rB,GAAK6qB,QAAgB7lC,EACrBgb,GAAK8qB,IAAc9jC,SAAS8Y,GAAMA,EAAEisB,gBAAgB/rB,IACvD,CAMD4qB,cACI,MAAMprB,EAAOvf,KAAK+f,MAAK4qB,GACvB,OAAOprB,GAAMmrB,QAAUnrB,OAAOxa,CACjC,CAMD6lC,eACI,MAAMrrB,EAAOvf,KAAK+f,MAAK6qB,GACvB,OAAOrrB,GAAM2F,SAAW3F,OAAOxa,CAClC,CAMDgnC,gBACI,MAAMhsB,EAAO/f,KAAK+f,KAClB,IAAKA,EAAKhR,MAAO,CACb,MAAMwQ,EAAOQ,EAAK6qB,eAClB,OAAOrrB,GAAM2F,SAAW,CAAC3F,GAAQ,EACpC,CACD,OAAOxc,MAAMmI,KAAK6U,EAAK9E,OAAOjV,QAAOlD,GAAKA,EAAEoiB,WAC/C,CAMD8mB,QAAQjsB,GACJA,EAAOA,GAAQ/f,KAAK+f,KACpBA,GAAK8qB,IAAc9jC,SAAS8Y,GAAMA,EAAEosB,YAAYjsC,OACnD,CAMDksC,QAAQnsB,GACJA,EAAOA,GAAQ/f,KAAK+f,KACpBA,GAAK8qB,IAAc9jC,SAAS8Y,GAAMA,EAAEssB,SAASnsC,OAChD,CAEDosC,UAAUrsB,GAENA,EAAOA,GADI/f,KACO+f,KAClB,IAAK,IAAIR,KAAQvf,KAAKib,OACbsE,EAAK2jB,QAAQ3jB,EAAK6rB,OAAOrrB,EAErC,CAEDssB,YAAYtsB,GAERA,EAAOA,GADI/f,KACO+f,KAClB,IAAK,IAAIR,KAAQvf,KAAKib,OACbsE,EAAK2jB,QAAQ3jB,EAAK8rB,SAAStrB,EAEvC,CAEDqrB,OAAOrrB,GACH,MAAMxQ,EAAKvP,KACX+f,EAAOA,GAAQxQ,EAAGwQ,KACbxQ,EAAG8P,QAAQorB,QACZl7B,EAAG8P,QAAQ+rB,OAAOrrB,GAEtB,MAAMuO,GAAU/e,EAAGk7B,OACnBl7B,GAAGk7B,IAAU,EACTnc,GAAQ/e,GAAG+8B,GAAUvsB,GAEzBxQ,EAAGqN,OAAO7V,SAAQ8Y,GAAKA,EAAEmsB,QAAQjsB,IACpC,CAEDsrB,SAAStrB,GACL,MAAMxQ,EAAKvP,KACX+f,EAAOA,GAAQxQ,EAAGwQ,KAClB,MAAMuO,EAAS/e,GAAGk7B,IAAWl7B,EAAG8P,QAAOorB,GACvCl7B,EAAGqN,OAAO5W,QAAO7E,GAAKA,EAAEspC,QAAUtpC,EAAEke,OAAOorB,SAAQ1jC,SAAQjE,GAAKA,EAAEuoC,SAAStrB,KAE3ExQ,GAAGk7B,IAAU,EACTnc,GAAQ/e,GAAGg9B,GAAWxsB,EAC7B,CAED+qB,OAAOlpC,GAAM,GACT5B,KAAKklB,UAAmB,IAARtjB,CACnB,CAED0qC,IAAUvsB,GACNA,GAAK8qB,IAAc9jC,SAAS8Y,GAAMA,EAAE2sB,WAAWxsC,OAClD,CAEDusC,IAAWxsB,GACPA,GAAK8qB,IAAc9jC,SAAS8Y,GAAMA,EAAE4sB,aAAazsC,OACpD,CAEDgkC,UACQhkC,MAAKklB,KAAWllB,KAAKklB,UAAW,GACpCyF,MAAMqZ,SACT,CAED5S,OAAOva,EAAKnV,EAAQmV,GAChB,MAAMtH,EAAKvP,KACLuf,EAAOoL,MAAMyG,OAAOva,EAAKnV,GAE/B,OADI6d,GAAMhQ,EAAGwQ,MAAK8qB,IAAc9jC,SAAS8Y,GAAMA,EAAE6sB,WAAWn9B,EAAIgQ,KACzDA,CACV,CAEDkkB,OAAOC,EAAe7sB,EAAKnV,EAAQmV,GAC/B,MAAMtH,EAAKvP,KACLuf,EAAOoL,MAAM8Y,OAAOC,EAAe7sB,EAAKnV,GAE9C,OADI6d,GAAMhQ,EAAGwQ,MAAK8qB,IAAc9jC,SAAS8Y,GAAMA,EAAE8sB,WAAWp9B,EAAIgQ,KACzDA,CACV,CAEDlE,SACI,MAAMkE,EAAOoL,MAAMtP,SAEnB,OADIkE,GAAMvf,KAAK+f,MAAK8qB,IAAc9jC,SAAS8Y,GAAMA,EAAE8sB,WAAWptB,KACvDA,CACV,CAEDqsB,IAAehqC,GAAM,GACjBA,GAAc,IAARA,EACN,IAAK,IAAI2d,KAAQvf,KAAKib,OAClBsE,EAAK2F,SAAWtjB,CAEvB,CAMDslC,SAASj/B,GAEL,OADIA,GAAMuiC,SAASt/B,KAAKlL,KAAMiI,GACvBjI,IACV,CAMDikC,SACI,GAAIjkC,KAAKqxB,MAAQ,EAAG,OAAOrxB,KAAK4c,OAAOla,KAAII,GAAKA,EAAEmhC,YAAa,CAAA,EAC/D,MAAMjiC,EAAMnB,OAAOggB,OAAO,CACtBhK,IAAK7W,KAAK6W,IACV4zB,OAAQzqC,MAAKyqC,GACbC,QAAS1qC,MAAK0qC,GACdxlB,SAAUllB,MAAKklB,GACfzC,WAAO1d,GACR/E,KAAK0B,OAER,OADAM,EAAIygB,MAAQziB,KAAK4c,OAAOla,KAAII,GAAKA,EAAEmhC,WAC5BjiC,CACV,CAKDi7B,QACIj9B,MAAK+O,IAAS,EACd/O,MAAKyqC,IAAU,EACfzqC,MAAK0qC,IAAW,EAChB1qC,MAAKklB,IAAY,EACjBllB,MAAK2qC,QAAe5lC,EACpB/E,MAAK4qC,QAAgB7lC,EACrB/E,MAAK6qC,QAAe9lC,CACvB,CAEUgb,kBACP,OAAO,IAAIyqB,SAAS,KAAM,KAAM,MAAO,EAC1C,CAOD3qC,YAAYwf,EAAQpX,GAChB,MAAMskB,EAAMtkB,GAAQoX,EACd8nB,EAAY9nB,aAAkBmrB,SACpC,GAAIznC,MAAMC,QAAQupB,GACd,OAAK4a,GACL5a,EAAIxlB,SAAQjE,GAAK0nC,SAASt/B,KAAKmU,EAAQvc,KAChCuc,GAFgBmrB,SAASt/B,KAAKs/B,SAASzqB,KAAMwM,GAIxD,MAAM9J,MAAEA,KAAUzgB,GAAQuqB,EAC1BvqB,EAAIgkC,MAAQjjC,MAAMC,QAAQyf,GAC1B,MAAM/H,EAAO,IAAI8vB,SAASxoC,EAAI6U,IAAK7U,EAAKiG,EAAOoX,OAASta,GAGxD,OAFI0d,GAAO+nB,SAASt/B,KAAKwP,EAAM+H,GAC3B0kB,GAAW9nB,EAAO+R,OAAO1W,GACtBA,CACV,EC/UE,MAAMkyB,qBAAqB1D,YAE9BjhC,IAAQuiC,SAASzqB,KAOjBld,YAAYqF,EAAMi5B,GACdxW,MAAMziB,EAAMi5B,EACf,CAEDv1B,YAAYhK,GACR,MAAM,IAAIhB,MAAM,sCACnB,CAEDgL,WAAWb,GACP,MAAMwE,EAAKvP,KACX,IAAIuf,EACJ,MAAMtX,QAAa0iB,MAAM4f,KAAKx/B,GAC9B,GAAK/K,MAAKiI,GAGH,CACH,MAAMoX,EAAS9P,EAAGvJ,QAAQvB,OAAS,EAAI8K,GAAGtH,GAAM++B,UAAUz3B,EAAGvJ,OAAO,IAAMuJ,GAAGtH,GAC7EoX,EAAOmK,QACPjK,EAAOF,EAAO6nB,SAASj/B,EAC1B,MANGsX,EAAOirB,SAASt/B,KAAKjD,GACrBjI,MAAKiI,GAAQsX,EAQjB,OAFAhQ,EAAGvJ,YAASjB,EACZwK,EAAGm5B,OAAO39B,EAAO,OAAQwU,GAClBA,CACV,CAEDkiB,UACI9W,MAAM8W,UACNzhC,MAAKiI,IAAO+7B,SACf,CAED0E,OAAO39B,EAAO3K,EAAM6H,EAAMyU,IAEjBA,GADUzU,aAAgBuiC,UACG,SAATpqC,IACzBuqB,MAAM+d,OAAO39B,EAAO3K,EAAM6H,EAAMyU,EACnC,CAMD9Q,eAAe2T,GACX,IAAIA,EAAK4jB,YAGT,OAFA5jB,EAAK2sB,UACLlsC,KAAKgG,OAASuZ,EAAK1I,UACN7W,KAAKuqC,MACrB,CAEGtiC,WACA,OAAOjI,MAAKiI,EACf,CAKD4kC,YACI7sC,MAAKiI,GAAQuiC,SAASzqB,IACzB,CAODlgB,gBAAgBqI,GACZ,OAAO,IAAI0kC,aAAa1kC,GAAM,EACjC,QAGGigC,EAAoBP,WAAW,OAAQgF,aAC1C,EC9FL,MAAME,EAAS7rC,WAAW8rC,YAAc,2CAClCC,QAAkBvjC,OAAOqjC,GAKGE,EAAUC,mBACbD,EAAUE,gBACXF,EAAUG,eACHH,EAAUI,sBACtBJ,EAAUK,UAC5B,MAAMC,EAAYN,EAAUM,UACtBC,EAAaP,EAAUO,WACvBC,EAAWR,EAAUQ,SACAR,EAAUS,mBACTT,EAAUU,oBACfV,EAAUW,eACpBX,EAAUY,KACVZ,EAAUa,KACHb,EAAUc,YACVd,EAAUe,YACTf,EAAUgB,aACjBhB,EAAU1jB,MACT0jB,EAAUiB,OACzB,MAAMC,EAAWlB,EAAUkB,SACTlB,EAAUmB,UAC5B,MAAMC,EAAYpB,EAAUoB,UACtB1yB,EAAMsxB,EAAUtxB,IACGsxB,EAAUqB,iBACnC,MAAMC,EAAYtB,EAAUsB,UACFtB,EAAUuB,kBACTvB,EAAUwB,mBACXxB,EAAUyB,kBACtBzB,EAAU0B,MACxB,MAAMxyB,EAAO8wB,EAAU9wB,KACjByyB,EAAY3B,EAAU2B,UACT3B,EAAU4B,WACI5B,EAAU6B,yBACjB7B,EAAU8B,kBAChB9B,EAAUz0B,YACby0B,EAAU+B,SACA/B,EAAUgC,mBACZhC,EAAUiC,iBACtBjC,EAAU1qC,KACT0qC,EAAUkC,MACRlC,EAAUmC,QACbnC,EAAUoC,KACvB,MAAM1sC,EAAMsqC,EAAUtqC,IAChB2sC,EAAWrC,EAAUqC,SACVrC,EAAUsC,SAC3B,MAAMC,EAAUvC,EAAUuC,QACpBC,EAAQxC,EAAUwC,MAClBC,EAAMzC,EAAUyC,IACHzC,EAAU0C,WAC7B,MAAMC,EAAS3C,EAAU2C,OACnBh+B,EAASq7B,EAAUr7B,OACCq7B,EAAU4C,kBACV5C,EAAU6C,kBACjB7C,EAAU8C,WACX9C,EAAU+C,UACX/C,EAAUgD,SACShD,EAAUiD,4BAC9C,MAAMC,EAAMlD,EAAUkD,IAChBC,EAAkBnD,EAAUmD,gBAChBnD,EAAUoD,UAC5B,MAAMC,EAAarD,EAAUqD,WACXrD,EAAUsD,UACPtD,EAAUuD,aACjBvD,EAAUwD,MACXxD,EAAUyD,KACJzD,EAAU0D,WCrEpC,MAAM5a,EAAa,CACfhM,OAAU,WACVsJ,OAAU,WACV/kB,UAAa,cACbglB,KAAQ,SACRlH,KAAQ,SACRmH,OAAU,WACVC,SAAY,aACZC,KAAQ,SACRtlB,OAAU,WACVuX,SAAY,aACZnX,OAAU,WACVmlB,QAAW,YACX/xB,MAAS,UACTiyB,MAAQ,SACRC,QAAU,WACVpsB,QAAU,YACVqsB,SAAW,aAGTpO,EAAW,CACbkrB,cAAY5rC,EACZ6rC,cAAY7rC,EACZ8rC,iBAAe9rC,EACf+rC,YAAU/rC,EACVgsC,YAAUhsC,EACVisC,cAAYjsC,EACZksC,gBAAclsC,EACdmsC,YAAUnsC,EACVosC,cAAYpsC,EACZqsC,gBAAcrsC,EACdssC,cAAYtsC,EACZusC,eAAavsC,EACbwsC,aAAWxsC,EACX+rC,YAAU/rC,EACVssC,cAAYtsC,EACZysC,eAAazsC,EACbusC,eAAavsC,GAsCL,MAACqJ,EAAUkgC,EAnCvB,MAAMmD,yBAAyBnE,EAE3BqC,OAAO3tC,GAEH,OAAOutC,CACV,CAEDjhB,OAAOojB,GAAO1vC,EAAK2kC,GAAO,IAEtB,IAAK3kC,EAAK,OAAOutC,EACjB,MAAMnhC,EAAUsjC,EAAKriC,QAAQjB,QACvBujC,EAAS3vC,EAAIoM,SAAWpM,EAS9B,OARkB2vC,aAAkBC,cAGhC/wC,OAAOggB,OAAOzS,EAASujC,GAGvBhL,GAAM3mC,MAAK6xC,GAAOzjC,EAASpM,GAExButC,CACV,CAEDsC,IAAOzjC,EAASpM,GACZ,MAAM+L,EAAMlN,OAAOggB,OAAO,CAAE,EAAE4E,GACxBjO,EAAO3W,OAAO8M,QAAQ3L,GAAKgE,QAAOzE,GAAKV,OAAOixC,OAAOhc,EAAYv0B,EAAE,MACrEiW,EAAK/S,OAAS,IACd+S,EAAKzQ,SAAQ6G,GAAMG,EAAI+nB,EAAWloB,EAAG,KAAOA,EAAG,KAC/C/M,OAAOyE,KAAKyI,GACX/H,QAAOuO,QAAgBxP,IAAXgJ,EAAIwG,KAChBxN,SAAQwN,GAAKnG,EAAQmG,GAAKxG,EAAIwG,KAEtC,IC/DL,SAASw9B,YAAY9Q,GACnB,OAAOpgC,OAAO8M,QAAQ9M,OAAOmxC,0BAA0B/Q,GACzD,CAOA,SAASgR,eAAehR,GACtB,OAAO8Q,YAAY9Q,GAChBj7B,QAAOgG,GAA2B,mBAAfA,EAAE,GAAGtK,QACxBgB,KAAIsJ,GAAKA,EAAE,IAChB,CAOA,SAASkmC,YAAYjR,GACnB,OAAO8Q,YAAYvnC,QAAQ2nC,eAAelR,IACvCj7B,QAAOgG,GAAyB,mBAAbA,EAAE,GAAG9C,KAA+B,cAAT8C,EAAE,KAChDtJ,KAAIsJ,GAAKA,EAAE,IAChB,CAiBO,SAASomC,gBAAgBlsC,EAAKC,GACnC,MAAMC,EAAQrD,MAAMmI,KAXtB,SAASmnC,aAAapR,GACpB,OAAO,IAAInqB,IAAI,IAAIo7B,YAAYjR,MAAcgR,eAAehR,IAC9D,CAS2BoR,CAAalsC,IAChCE,EAAOD,EAAM1D,KAAInB,GAAK4E,EAAO5E,KAGnC,OAFA6E,EAAMwL,KAAK,QACXvL,EAAKuL,KAAKsK,GACH,IAAI3V,YAAYH,EAAO,gBAAgBF,OAAvC,IAAoDG,EAC7D,CCkCY,MAACisC,EAAShE,EArFtB,MAAMiE,wBAAwBjF,EAE1BzqC,YAAY2vC,GAER,GADA7nB,MAAM6nB,GACFA,EAASpyC,OAASotC,EAASiF,WACT,QAAlBD,EAAStqC,MACTsqC,EAASE,SAASjuC,OAAS,EAC3B,MAAM,IAAI7D,MAAM,mGAGvB,CAED+uC,OAAOgD,GAEH,MAAQ,IACJ9xC,OAAOyE,KAAKqtC,GACP3sC,QAAQ6Q,GAAQ87B,EAAU97B,KAC1BvU,KAAK,KACV,GACP,CAEDgsB,OAAOojB,GAAOiB,IAGV,QAA8B5tC,IAA1B/E,KAAK4yC,iBAAgC,CACrC5yC,KAAK4yC,iBAAmB,IAAI97B,SACP/R,IAAjB2sC,EAAKgB,UACL1yC,KAAK6yC,eAAiB,IAAI/7B,IAAI46B,EAAKgB,QAC9BpwC,KAAK,KACLF,MAAM,MACN4D,QAAQyG,GAAY,KAANA,MAGvB,IAAK,MAAMvE,KAAQyqC,EACXA,EAAUzqC,KAAUlI,KAAK6yC,gBAAgBrY,IAAItyB,IAC7ClI,KAAK4yC,iBAAiBn0B,IAAIvW,GAGlC,OAAOlI,KAAK2vC,OAAOgD,EACtB,CAED,MAAMn0B,EAAYkzB,EAAKriC,QAAQmP,UAG/B,IAAK,MAAMtW,KAAQlI,KAAK4yC,iBACd1qC,KAAQyqC,IACVn0B,EAAUnD,OAAOnT,GACjBlI,KAAK4yC,iBAAiBxpB,OAAOlhB,IAKrC,IAAK,MAAMA,KAAQyqC,EAAW,CAG1B,MAAMjxC,IAAUixC,EAAUzqC,GACtBxG,IAAU1B,KAAK4yC,iBAAiBpY,IAAItyB,IACnClI,KAAK6yC,gBAAgBrY,IAAItyB,KACtBxG,GACA8c,EAAUC,IAAIvW,GACdlI,KAAK4yC,iBAAiBn0B,IAAIvW,KAE1BsW,EAAUnD,OAAOnT,GACjBlI,KAAK4yC,iBAAiBxpB,OAAOlhB,IAGxC,CACD,OAAOmnC,CACV,ICvEQyD,SAAW,CAACC,EAAQC,IAAWD,IAAWC,GAAUD,EACpDE,OAAS,CAACF,EAAQC,IAAWD,IAAWC,GAAUzkC,OAAOwkC,GAAU,EACnEG,OAAS,CAACH,EAAQC,IAAWD,IAAWC,GAAUzkC,OAAOwkC,IAAW,EACpEI,OAAS,CAACJ,EAAQC,IAAWD,IAAWC,GAAUzkC,OAAOwkC,GAAU,EACnEK,OAAS,CAACL,EAAQC,IAAWD,IAAWC,GAAUzkC,OAAOwkC,IAAW,ECJpEM,EAAsB,CAAC,GAAI,OAAQ,MAAO,KAAM,YAAa,QAAS,cAEtEC,EAAiB,CAC1BC,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUK,EAAoBjpC,SAAS2oC,ICJpDS,EAAoB,CAAC,GAAI,MAAO,MAEhCC,EAAe,CACxBF,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUQ,EAAkBppC,SAAS2oC,ICJlDW,EAAmB,CAAC,GAAI,KAAM,OAE9BC,EAAc,CACvBJ,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUU,EAAiBtpC,SAAS2oC,ICFvD,MAAMa,YAET/zC,cAAgB,CAAC,SAAU,QAAS,UAEpCA,UAAU+B,GACN,OAAOgyC,YAAYttC,OAAO8D,SAASxI,EACtC,CAED/B,eAAe+B,GACX,OAAQgyC,YAAYC,OAAOjyC,EAAK,QACnC,CAED/B,gBAAgB+B,GACZ,OAAQgyC,YAAYC,OAAOjyC,EAAK,SACnC,CAQD/B,cAAcO,EAAMsB,GAChB,OAAOkyC,aAAY/xC,EAAWzB,KAAUsB,CAC3C,CAED7B,SAAkBO,GACd,OAAOY,EAAOa,UAAUzB,EAAM,UAAU0B,aAC3C,EAGO,MAACgyC,EAAa,CACtBP,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUY,YAAYG,GAAGhB,ICnCtCiB,EAAa,CAAC,GAAI,UAAW,YAAa,OAAQ,QAAS,OAAQ,UAAW,SAAU,QAAS,OAAQ,WAEzGC,EAAQ,CACjBV,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUgB,EAAW5pC,SAAS2oC,ICJ3CmB,EAAmB,CAAC,GAAI,UAAW,SAAU,SAAU,UAAW,QAAS,UAAW,QAAS,OAE/FC,EAAc,CACvBZ,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUkB,EAAiB9pC,SAAS2oC,ICJjDqB,EAAa,CACvB,CAAEh0C,KAAM,WAAYshB,QAAQ,GAC5B,CAAEthB,KAAM,QAASshB,QAAQ,GACzB,CAAEthB,KAAM,SAAUshB,QAAQ,GAC1B,CAAEthB,KAAM,QAASshB,QAAQ,GACzB,CAAEthB,KAAM,SAAUgL,QAAQ,GAC1B,CAAEhL,KAAM,QAASgL,QAAQ,GACzB,CAAEhL,KAAM,MAAQgL,QAAQ,GACxB,CAAEhL,KAAM,OAAQgL,QAAQ,GACxB,CAAEhL,KAAM,QACR,CAAEA,KAAM,aAGEi0C,EAAY,CACrBd,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAA+D,IAArDoB,EAAWpuC,QAAOlD,GAAKA,EAAE1C,OAAS2yC,IAAQtuC,QCfjE6vC,EAAW,CAAC,GAAI,QAAS,OAAQ,aAEjCC,EAAM,CACfhB,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUsB,EAASlqC,SAAS2oC,ICJ/C,MAAMyB,iBAET30C,cAAiB,CAAC,GAAI,aAAc,WAAY,WAAY,aAE5DA,gBAAgB+B,GACZ,OAAO4yC,iBAAiBluC,OAAO8D,SAASxI,EAC3C,CAED/B,kBAAkB+B,GACd,MAAM+X,EAAM66B,iBAAiBluC,OAAOiR,QAAQ3V,GAC5C,OAAe,IAAR+X,GAAqB,IAARA,CACvB,CAED9Z,oBAAoB+B,GAChB,MAAM+X,EAAM66B,iBAAiBluC,OAAOiR,QAAQ3V,GAC5C,OAAe,IAAR+X,GAAqB,IAARA,CACvB,EAIO,MAAC4E,EAAc,CACvBg1B,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUwB,iBAAiBpqC,SAAS2oC,ICtBvD,MAAM0B,eAET50C,cAAgB,CAAC,SAAU,OAAQ,QAAS,QAAS,MAAO,MAAO,UAEnEA,gBAAgB+B,GACZ,OAAO6yC,eAAenuC,OAAO8D,SAASxI,EACzC,CAED/B,kBAAkB+B,GACd,OAAO6yC,eAAenuC,OAAOiR,QAAQ3V,GAAO,CAC/C,CAED/B,oBAAoB+B,GAChB,MAAM+X,EAAM86B,eAAenuC,OAAOiR,QAAQ3V,GAC1C,OAAO+X,EAAM,GAAKA,EAAM,CAC3B,CAED9Z,gBAAgB+B,GACZ,OAA8C,IAAvC6yC,eAAenuC,OAAOiR,QAAQ3V,EACxC,CAED/B,gBAAgB+B,GACZ,MAAO,CAAC,OAAQ,QAAS,OAAOwI,SAASxI,EAC5C,CAED/B,eAAe+B,GACX,MAAO,CAAC,QAAS,MAAO,UAAUwI,SAASxI,EAC9C,EAIO,MAACsd,EAAY,CACrBq0B,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUyB,eAAerqC,SAAS2oC,ICjCrD,MAAM2B,cAET70C,cAAgB,CAAC,WAAY,QAAS,WAAY,SAAU,UAE5DA,gBAAgB+B,GACZ,OAAO8yC,cAAcpuC,OAAO8D,SAASxI,EACxC,EAIO,MAACs9B,EAAW,CACpBqU,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAU0B,cAActqC,SAAS2oC,ICZ9C4B,GAAgB,CAAC,GAAI,OAAQ,SAE7Bnc,GAAW,CACpB+a,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAU2B,GAAcvqC,SAAS2oC,ICJ9C6B,GAAY,CAAE9lC,QAAY,GAAI+lC,OAAU,GAAKC,OAAU,GAAIC,MAAS,KAAMC,MAAS,KAAMC,IAAQ,KAAMC,MAAU,MAEjH1/B,GAAO,CAChB+9B,WAAU,CAACR,EAAQC,IACRD,IAAWC,GAAUnyC,OAAOixC,OAAO8C,GAAW7B,ICRhDoC,GAAuB,CAChCC,cAAe,CAAC1zC,EAAOtB,KACXsB,GAAS,IAAIU,MAAM,KAE/BizC,YAAa,CAAC3zC,EAAOtB,KACTsB,GAAS,IAAIY,KAAK,MCa3B,MAAMgzC,kBAEXxnC,IACA4f,IAEA7qB,YAAYiL,GACC9N,MACR8N,GAAQA,EACXA,EAAKm9B,cAFMjrC,KAGZ,CAEDu1C,gBAEED,mBAAkBzK,GAAapsB,IADpBze,YAER4tB,IACJ,CAED4nB,mBACE,MAAMjmC,EAAKvP,KACXs1C,mBAAkBzK,GAAazhB,OAAO7Z,GACtCA,GAAGzB,GAAMo9B,iBAAiB37B,GAC1BA,GAAGzB,GAAQ,KACXyB,GAAGme,GAAW,IACf,CASDzV,MAAM/P,EAAM5B,EAAQmvC,GAAW,GAC7B,MAAMlmC,EAAKvP,KACX,IAAIiY,EAAQ,KAOZ,OANIw9B,EACFx9B,EAAQuV,cAAcE,SAEtBne,GAAGme,GAAWne,GAAGme,IAAY,IAAIrB,eAAe,WAChDpU,EAAQ1I,GAAGme,IAEE,OAAXpnB,GAAmB2R,EAAMy9B,MAAMjxC,OAAS,EAAWwT,EAAM09B,WAAWztC,GACjE+P,EAAMyU,QAAQxkB,EAAM5B,GAAQ,EACpC,CAEDsnB,IAAOztB,GAAS,GACd,MAAMoP,EAAKvP,KACX,GAAKuP,GAAG4e,KACJhuB,GAAUoP,GAAG+7B,IAAU,CACzB,MAAMnd,EAAS,IAAIznB,SAASie,oBAEtB0C,EAAWtkB,MAAMmI,KAAKqE,GAAG4e,IAC3B5e,GAAGme,IAAUrG,EAASzV,KAAKrC,GAAGme,IAClCne,GAAGwQ,GAAM4E,mBAAqB,IAAIwJ,KAAW9G,EAC9C,CACF,CAEGikB,SACF,OAAO5kC,SAASie,mBAAmBnkB,KAAOR,MAAKmuB,IAAS3tB,EACzD,CAEGuf,SACF,OAAO/f,MAAK8N,IAAO8nC,UACpB,CAEGznB,SACF,OAAOnuB,MAAK+f,IAAO4E,kBACpB,CAKD9kB,UAAsB,IAAIiX,IAE1BjX,UAAkBmM,GAChB4U,uBAAsB,KACpB00B,mBAAkBzK,GAAa9jC,SAAQ8Y,GAAKA,GAAE+N,MAAS,GAE1D,CAED/tB,YACE,MAAM0P,EAAK+lC,kBACXxvB,SAAS3V,GAAGrJ,OAAQ,KAAM,aAAcyI,GAAGsmC,GAC5C,QAGC71C,MAAK6vB,IACN,EC9FI,MAAMimB,4BAA4B3iB,mBAEvCtwB,YAAYiL,GACV6c,MAAM7c,GAENA,EAAKm9B,cADMjrC,KAEZ,CAEDu1C,gBACav1C,KACRuqB,OADQvqB,MACE+1C,GAEd,CAEDP,mBACE,MAAMjmC,EAAKvP,KACXuP,EAAGzB,KAAKo9B,iBAAiB37B,GACzBA,EAAG8mB,OAAO9mB,GAAGwmC,GACd,CAEDC,SAAS1uB,GACItnB,KACR+zB,OAAOzM,EACX,CAEGyuB,SACF,MAAMrzB,EAAM1iB,KAAK8N,MAAMqP,QAAQrb,cACzB6G,EAAQ3I,KAAK8N,MAAMoQ,UACnB+3B,EAAWj7B,MAAM4J,cAAc5kB,KAAK8N,MACpC+L,EAAK,CAAC,UAAW,iBAAiBzP,SAASsY,GAC3C5I,EAAK,CAAC,sBAAsB1P,SAASzB,GAC3C,OAAOkR,GAAMC,GAAMm8B,EAAW,SAAW,OAC1C,ECjCI,MAAMC,kBAEXpoC,IACA2hC,IACA0G,IAAQ,IAAIr/B,IAEZjU,YAAYiL,GACV9N,MAAK8N,GAAQA,EACbA,EAAKm9B,cAAcjrC,KACpB,CAEDw1C,mBACE,MAAMjmC,EAAKvP,KACXuP,GAAGzB,GAAMo9B,iBAAiB37B,GAC1BA,GAAG6mC,KACH7mC,GAAGzB,GAAQ,KACXyB,GAAG4mC,GAAQ,KACX5mC,GAAGkgC,GAAO,IACX,CAGD4G,cACE,MAAM9mC,EAAKvP,MACNuP,GAAG+mC,MAAa/mC,GAAGrB,IAASqB,GAAG4mC,GAAM13B,IAAIlP,GAAGrB,GAClD,CAEGqoC,iBACF,OAAOv2C,MAAKyvC,EACb,CAEGxqB,SACF,OAAOjlB,MAAK8N,IAAO0oC,aACpB,CAEGtoC,SACF,OAAOlO,MAAKilB,IAAUwxB,cAAcC,sBACrC,CAEDJ,MACE,MAAM/mC,EAAKvP,KACLkO,EAASqB,GAAGrB,GACZ6R,EAAOxQ,GAAGzB,IAAO8nC,WACjBv4B,EAAS9N,GAAGzB,IAAO2N,WACzB,OAAQvN,IAAWmP,GAAUnP,GAAU6R,CACxC,CAEDq2B,MACE,MAAM7mC,EAAKvP,KACNuP,GAAGzB,IAAO6oC,MACb5zC,MAAMmI,KAAKqE,GAAG4mC,IACXnwC,QAAOlG,KAAMA,IACbiH,SAAQjH,GAAMkb,MAAMG,QAAQrb,KAEjCyP,GAAG4mC,IAAO3sB,OACX,ECpDI,MAAMotB,eAEX9oC,IAEA+oC,IACAC,IACAC,IACAC,IAEAn0C,YAAYiL,GACV,MAAMyB,EAAKvP,KACXuP,GAAGzB,GAAQA,EACXyB,GAAGsnC,GAAgBtnC,GAAGo5B,GAAQ7gC,KAAKyH,GACnCA,GAAGunC,GAAiBvnC,GAAGs5B,GAAS/gC,KAAKyH,GACrCA,GAAGwnC,GAAiBxnC,GAAG2a,GAASpiB,KAAKyH,GACrCA,GAAGynC,GAAkBznC,GAAG0nC,GAAUnvC,KAAKyH,GACvCA,GAAGzB,GAAMm9B,cAAc17B,EACxB,CAEDgmC,gBACav1C,MACRkmB,IAAQ,EACZ,CAEDsvB,mBACE,MAAMjmC,EAAKvP,KACXuP,GAAG4X,KACH5X,GAAGzB,GAAMo9B,iBAAiB37B,EAC3B,CAED3D,WAAW5J,GACT,OAAOhC,KAAKytB,OAAO8c,KAAKvqC,MAAK8N,GAC9B,CAEDlC,YAAY5J,GACV,OAAOhC,KAAKytB,OAAOypB,MAAMl3C,MAAK8N,GAAO9L,EACtC,CAED4J,gBACE,OAAOu8B,EAAoBvhB,KAAK5mB,KAAKm3C,QACtC,CAED39B,KAAK5X,GACH,GAAK5B,KAAKytB,MAEV,OADAztB,KAAKytB,MAAMjU,KAAO5X,EACX5B,KAAKytB,MAAM8c,MACnB,CAEDvkC,OAAOpE,GACL,GAAK5B,KAAKytB,MAEV,OADAztB,KAAKytB,MAAMznB,OAASpE,EACb5B,KAAKytB,MAAM8c,MACnB,CAEDD,OAAO1oC,GACA5B,KAAKytB,QACVztB,KAAKytB,MAAM6c,OAAS1oC,EACrB,CAEDw1C,YACEp3C,KAAKq3C,KAAO,CACb,CAEDC,WACEt3C,KAAKu3C,UACN,CAEDA,WACEv3C,KAAKq3C,KAAOr3C,KAAKq3C,KAAO,CACzB,CAEDG,WACEx3C,KAAKq3C,KAAOr3C,KAAKq3C,KAAO,CACzB,CAEGnyB,eACF,OAAOllB,KAAKytB,OAAOvI,QACpB,CAEDsiB,WAAW5lC,GACT,OAAO5B,MAAKuQ,GAAUi3B,WAAW5lC,EAClC,CAEDmnC,YAAYnnC,GACV,OAAO5B,MAAKuQ,GAAUw4B,YAAYnnC,EACnC,CAED2lC,eAAe3lC,GACb,OAAO5B,MAAKuQ,GAAUg3B,eAAe3lC,EACtC,CAEDonC,cAAc/gC,GACZ,OAAOjI,MAAKuQ,GAAUy4B,cAAc/gC,EACrC,CAEDghC,YAAYhhC,GACV,OAAOjH,EAAOsmC,QAAQr/B,GAAMjC,QAAOlD,GAAKskC,aAAaI,WAAW1kC,IACjE,CAEGyN,SACF,OAAOvQ,KAAKytB,OAAS2Z,YACtB,CAEG3Z,YACF,OAAO0a,EAAoBtE,KAAK7jC,KAAKm3C,QACtC,CAEGA,cACF,OAAOn3C,MAAK8N,IAAO2pC,OACpB,CAEGJ,WACF,MAAM5pB,EAAQztB,KAAKytB,MACnB,OAAOA,EAAQlqB,KAAKgB,MAAMkpB,EAAM6b,KAAO/lC,KAAKD,IAAImqB,EAAMtV,MAAO,IAAM,EAAI,CACxE,CAEGk/B,SAAKz1C,GACPA,EAAM2B,KAAKD,IAAI,EAAGtC,EAAOsM,MAAM1L,EAAK,IACpC,MAAM6rB,EAAQztB,KAAKytB,MACfA,IACFA,EAAM6b,KAAO1nC,EAAM,EAAK6rB,EAAMtV,MAAQvW,EAAO6rB,EAAMtV,MAAQ,EAC3DsV,EAAM8c,KAAKvqC,MAAK8N,IAEnB,CAEDlC,SAAc2+B,GAAO,GACnB,MAAMh7B,EAAKvP,KACLy3C,QAAgBloC,EAAGkoC,UACrBA,IACFA,EAAQtnC,GAAG,OAAQZ,GAAGsnC,IACtBY,EAAQtnC,GAAG,QAASZ,GAAGunC,IACvBW,EAAQtnC,GAAG,QAASZ,GAAGwnC,IACvBU,EAAQtnC,GAAG,SAAUZ,GAAGynC,IACpBzM,GAAMkN,EAAQlN,KAAKh7B,GAAGzB,IAE7B,CAEDqZ,MACE,MAAM5X,EAAKvP,KACLy3C,EAAUloC,EAAGke,MACfgqB,IACFA,EAAQnhB,IAAI,OAAQ/mB,GAAGsnC,IACvBY,EAAQnhB,IAAI,QAAS/mB,GAAGunC,IACxBW,EAAQnhB,IAAI,QAAS/mB,GAAGwnC,IACxBU,EAAQnhB,IAAI,SAAU/mB,GAAGynC,IAE5B,CAEDC,IAAUjrC,GACRhM,MAAK8N,GAAM4pC,iBACZ,CAED/O,IAAQ38B,GACKhM,MACR8N,GAAM6pC,aAAa3rC,EAAE4Z,OAAO3d,MADpBjI,MAER0oC,GAAQ,YAAa18B,EAAE4Z,OAAO3d,KAClC,CAED4gC,IAAS78B,GACIhM,MACR8N,GAAM8pC,cAAc5rC,EAAE4Z,OAAO3d,MADrBjI,MAER0oC,GAAQ,aAAc18B,EAAE4Z,OAAO3d,KACnC,CAEDiiB,IAASle,GACP,MAAMuD,EAAKvP,KACXJ,MAAM8c,MAAMnN,GAAGzB,GAAO9B,GACtBuD,GAAGzB,GAAM+pC,cAAc7rC,GACvBuD,GAAGm5B,GAAQ,aAAc18B,EAAE4Z,OAAO3d,KACnC,CAEDygC,IAAQxgC,EAAMD,GACZjI,MAAK8N,GAAMosB,KAAKhyB,EAAMD,GAAM,GAAM,GAAO,EAC1C,EClLI,MAAM6vC,sBAEXhqC,IACAuB,IACA0oC,KAAY,EAEZC,IAAW,EACXC,IAAW,EAEXC,IACAC,IACAC,IAEAv1C,YAAYiL,GACV,MAAMyB,EAAKvP,KACXuP,GAAGzB,GAAQA,EACXA,EAAKm9B,cAAc17B,GACnBA,GAAG2oC,GAAmB3oC,GAAG8oC,GAAWvwC,KAAKyH,GACzCA,GAAG4oC,GAAqB5oC,GAAG+oC,GAAaxwC,KAAKyH,GAC7CA,GAAG6oC,GAAqB7oC,GAAGgpC,GAAazwC,KAAKyH,EAC9C,CAEDimC,mBACE,MAAMjmC,EAAKvP,KACXuP,GAAGzB,GAAMo9B,iBAAiB37B,GAC1BA,GAAGzB,GAAQ,IACZ,CAEDyc,OAAOlb,GACL,MAAME,EAAKvP,KACNuP,GAAGwoC,KACNxoC,GAAGF,GAAWA,EACdE,GAAGwoC,IAAY,EACfxoC,GAAGzB,GAAM0qC,YAAYjpC,GAAGF,GAAU,YAAaE,GAAG4oC,IAErD,CAEDlb,QACE,MAAM1tB,EAAKvP,KACXuP,GAAGyoC,GAAW,EACdzoC,GAAG0oC,GAAW,EACd1oC,GAAGzB,GAAM2qC,YAAY/xC,SAAU,UAAW6I,GAAG2oC,IAC7C3oC,GAAGzB,GAAM2qC,YAAY/xC,SAAU,YAAa6I,GAAG6oC,GAChD,CAMDE,IAAatsC,GACX,MAAMuD,EAAKvP,KACXuP,GAAGzB,GAAMyY,QAAQva,GACjBuD,GAAGyoC,GAAWhsC,EAAE2vB,QAChBpsB,GAAG0oC,GAAWjsC,EAAE4vB,QAChBrsB,GAAGzB,GAAM4qC,cAAc1sC,EAAGuD,GAAGyoC,GAAUzoC,GAAG0oC,IAC1C1oC,GAAGzB,GAAM0qC,YAAY9xC,SAAU,UAAW6I,GAAG2oC,IAAkB,GAC/D3oC,GAAGzB,GAAM0qC,YAAY9xC,SAAU,YAAa6I,GAAG6oC,GAChD,CAMDC,IAAWrsC,GACT,MAAMuD,EAAKvP,KAGX,OAFAuP,GAAGzB,GAAMyY,QAAQva,GACjBuD,GAAGzB,GAAM2qC,YAAY/xC,SAAU,YAAa6I,GAAG6oC,IACxC7oC,GAAGzB,GAAM6qC,YAAY3sC,EAAGuD,GAAGyoC,GAAUzoC,GAAG0oC,GAChD,CAMDM,IAAavsC,GACX,MAAMuD,EAAKvP,KACXuP,GAAGzB,GAAMyY,QAAQva,GAEjBuD,GAAGzB,GAAMyqC,cAAcvsC,EAAGuD,GAAGyoC,GAAUzoC,GAAG0oC,IAEtC1oC,GAAGyoC,GAAWhsC,EAAE2vB,QAClBpsB,GAAGzB,GAAM8qC,gBAAgB5sC,EAAGuD,GAAGyoC,GAAUzoC,GAAG0oC,IACnC1oC,GAAGyoC,GAAWhsC,EAAE2vB,SACzBpsB,GAAGzB,GAAM+qC,eAAe7sC,EAAGuD,GAAGyoC,GAAUzoC,GAAG0oC,IAGzC1oC,GAAG0oC,GAAWjsC,EAAE4vB,QAClBrsB,GAAGzB,GAAMgrC,aAAa9sC,EAAGuD,GAAGyoC,GAAUzoC,GAAG0oC,IAChC1oC,GAAG0oC,GAAWjsC,EAAE4vB,SACzBrsB,GAAGzB,GAAMirC,eAAe/sC,EAAGuD,GAAGyoC,GAAUzoC,GAAG0oC,IAG7C1oC,GAAGyoC,GAAWhsC,EAAE2vB,QAChBpsB,GAAG0oC,GAAWjsC,EAAE4vB,OAEjB,EC3FI,MAAMod,uBAEXlrC,IACAnK,GAEAd,YAAYiL,GACV,MAAMyB,EAAKvP,KACXuP,GAAGzB,GAAQA,EACXyB,GAAG5L,EAAYmK,EAAKnK,SACpBmK,EAAKm9B,cAAc17B,EACpB,CAEDgmC,gBACEyD,wBAAuBnO,GAAapsB,IAAIze,KACzC,CAEDw1C,mBACE,MAAMjmC,EAAKvP,KACXg5C,wBAAuBnO,GAAazhB,OAAO7Z,GAC3CA,GAAGzB,GAAMo9B,iBAAiB37B,GAC1BA,GAAGzB,GAAQ,KACXyB,GAAG5L,EAAY,IAChB,CAGDs1C,aACE,MAAM1pC,EAAKvP,KACPuP,GAAG5L,IAAc4L,GAAGzB,IAAOnK,WAC7B4L,GAAG5L,EAAc4L,GAAGzB,IAAOnK,SAC3B4L,EAAG2pC,eAAe3pC,GAAG5L,GAExB,CAEDw1C,kBAAkBC,GACXp5C,MAAK2D,GAAW3D,KAAKk5C,eAAeE,EAC1C,CAEDF,eAAe3c,GACRA,GACLv8B,MAAK8N,GAAM4pC,eACZ,CAED73C,UAAsB,IAAIiX,IAE1BjX,UAAmBmM,GACNgtC,wBACRnO,GAAa9jC,SAAQ8Y,GAAKA,EAAEs5B,kBAAkBntC,EAAE4Z,SACpD,CAED/lB,YACEimB,SAAS3V,GAAGrJ,OAAQ,KAAM,cAAekyC,wBAAuBK,GACjE,QAGCL,wBAAuBnpB,IACxB,ECzDI,MAAMypB,sBAETz5C,UAAgB,IAAIiX,IACpBhJ,IAEAjL,YAAYiL,GACV9N,MAAK8N,GAAQA,EACbA,EAAKm9B,cAAcjrC,KACpB,CAEDu1C,gBACE+D,uBAAsBC,GAAO96B,IAAIze,MACjCA,KAAKsuB,QACN,CAEDknB,mBACE,MAAMjmC,EAAKvP,KACXs5C,uBAAsBC,GAAOnwB,OAAO7Z,GACpCA,GAAGzB,GAAMo9B,iBAAiB37B,GAC1BA,GAAGzB,GAAQ,IACZ,CAEDwgB,SACEtuB,MAAK8N,GAAM4pC,eACZ,CAED73C,UAAsBmM,GACpBjJ,MAAMmI,KAAKouC,uBAAsBC,IAAQxyC,SAAQ4F,GAAKA,EAAE2hB,UACzD,QAGC0K,OAAOza,YAAYxW,iBAAiB,SAAUuxC,uBAAsBE,GACrE,EChCL,MAAMC,GAAgB5uC,OAAOkY,IAAI,sBAM1B,MAAM22B,mBAEX5rC,IACA2X,IACAk0B,IACA5yB,IAEAlnB,WAAoB,EACpBA,UAAgB,IAAIiX,IACpBjX,SAAgB,IAAIkmB,IACpBlmB,UAAe,IAAIiX,IAER8iC,wBACT,OAAO34C,WAAW44C,uBAAwB,CAC3C,CAEDh3C,YAAYiL,GACC9N,MACR8N,GAAQA,EADA9N,MAER+mB,IAAQ,EACXjZ,EAAK2rC,KAAiB,EACtB3rC,EAAKm9B,cAAcjrC,KACpB,CAGDu1C,gBAOC,CAGDC,mBACE,MAAMjmC,EAAKvP,KACXuP,GAAGzB,GAAMo9B,iBAAiB37B,UACnBA,GAAGzB,GAAM2rC,IAChBlqC,GAAGzB,GAAQ,KACXyB,GAAGoqC,GAAW,KACdpqC,GAAGkW,GAAY,IAChB,CAGDwzB,aACE,MAAM1pC,EAAKvP,KACX,GAAIuP,GAAGkW,GAAW,OAClB,MAAMgqB,EAAMlgC,EAAGuqC,YACf,GAAIvqC,GAAGoqC,KAAalK,EAAK,CACvB,MAAMhqB,EAAWi0B,oBAAmBpwB,EAAOpgB,IAAIqG,GAAGwqC,GAAOtK,IACrDzuC,EAAOwE,WAAWigB,IAAWlW,GAAG2mB,GAAezQ,GACnDlW,GAAGoqC,GAAWlK,EACVA,IAAQlgC,GAAGkW,IACbi0B,oBAAmBM,GAAUzqC,EAEhC,CACF,CAGD8mC,cACE,MAAM9mC,EAAKvP,KACL8N,EAAOyB,GAAGzB,GAGZyB,GAAGkW,IAAa3X,EAAKmsC,aACvBnsC,EAAKo9B,iBAAiB37B,GACtBzB,EAAKosC,qBACLnuC,gBAAe,IAAKwD,EAAGimC,qBAU1B,CAEDuE,IAAOtK,GAEL,OAAOzuC,EAAOoC,SAASqsC,GAAO,GAAGA,KADtBzvC,MACgC8N,IAAOqP,SAAW,KAAOsyB,CACrE,CAEDnf,IAAQzZ,GACN,OAAO6iC,oBAAmBvD,GAAM3b,IAAI3jB,IAAQ6iC,oBAAmBpwB,EAAOkR,IAAI3jB,EAC3E,CAGDqf,KAAeikB,OAAEA,EAAMC,MAAEA,IAGvB,MAAM7qC,EAAKvP,KACX,IAAKuP,GAAGzB,GAAO,OAEf,MAAMusC,EAAWr/B,MAAME,kBAAkBk/B,GACnCE,EAAYt/B,MAAME,kBAAkBi/B,GAE1C,IAAI7yC,GAAS,EAEb,GAAI+yC,IAE8B,IAA5B9qC,GAAGzB,GAAM2rC,IAA0B,CACrClqC,GAAGzB,GAAM2rC,KAAiB,EAC1B,MAAMtjB,EAAQikB,EAAM3nB,WAAU,GAC9B1vB,MAAMmI,KAAKirB,EAAM/a,QAAQ3M,UAAU1H,SAAQjH,GAAMyP,GAAGzB,GAAMiP,YAAYjd,IACvE,CAGCw6C,GACEH,EAAO/+B,QAAQtD,kBAAoB,IACrCxQ,GAAS,EACTiI,GAAGkW,GAAY00B,EAAO1nB,WAAU,GAChCljB,GAAGzB,GAAM4pC,iBAITpwC,GAAQiI,GAAGzB,GAAMosC,oBAEtB,CAGDK,IAAoB90B,GAClB,IAAI+0B,EAAiB,KACjBC,EAAgB,KACpB,MAAML,EAAQr3C,MAAMmI,KAAKua,EAASrK,QAAQ3M,UAAUzI,QAAOlG,GAAMA,EAAGkP,aAAa,UAC3EqrC,EAAWD,EAAM31C,OAAS,EAC1B61C,EAAY70B,EAASrK,QAAQtD,kBAAoBsiC,EAAM31C,OAa7D,OAZI41C,IACEC,GACFG,EAAgB/zC,SAASC,cAAc,YACvCyzC,EAAMrzC,SAAQjH,GAAM26C,EAAcr/B,QAAQ2B,YAAYjd,MAEtD26C,EAAgBh1B,GAGpB+0B,EAAiBF,GAAa70B,GAAUrK,QAAQtD,kBAAoB,EAAI2N,EAAW,KACnFg1B,EAAgBJ,GAAYI,GAAer/B,QAAQtD,kBAAoB,EAAI2iC,EAAgB,KAE3FD,EAAiBA,GAAgB9xB,YAAc8xB,EAAe/nB,WAAU,GAAQ+nB,EACzE,CAAEL,OAAQK,EAAgBJ,MAAOK,EACzC,CAED7uC,WAEE,MAAM2D,EAAKvP,KACLyvC,EAAMlgC,EAAGuqC,YAEf,IAAKrK,EAAK,OACV,MAAM54B,EAAMtH,GAAGwqC,GAAOtK,GAGtB,GAAIlgC,GAAG+gB,GAAQzZ,GAEb,OAEF6iC,oBAAmBvD,GAAM13B,IAAI5H,GAE7B,IAAI6jC,EAAY,KAEhB,MAAMC,EAAU3/B,MAAME,kBAAkBu0B,GAClCmL,EAAY55C,EAAOoC,SAASqsC,GAKlC,GAJImL,IACFF,EAAYhB,oBAAmBpwB,EAAOpgB,IAAI2N,KAGvC6jC,EAAW,CAEd,IACE,MAAMj1B,EAAWk1B,EAAUlL,QAAYjd,gBAAgBM,cAAa,EAAM2c,EAAKA,GAC/EiL,EAAYnrC,GAAGgrC,GAAoB90B,EACpC,CAAC,MAAOo1B,GAEP,MADAnB,oBAAmBvD,GAAM/sB,OAAOvS,GAC1BgkC,CACP,CAEGD,IACEF,EAAUP,SAAQO,EAAUP,OAAO/rC,QAAQ0sC,SAAU,GACzDpB,oBAAmBpwB,EAAO9b,IAAIqJ,EAAK6jC,GAEtC,CAEDhB,oBAAmBvD,GAAM/sB,OAAOvS,GAChCtH,GAAG2mB,GAAewkB,EACnB,CAEGx/B,wBACF,MAA+B,gBAAxBlb,MAAK8N,IAAOqP,OACpB,CAEGsI,eACF,OAAOzlB,MAAKylB,EACb,CAEGq0B,kBACF,OAAO9+B,MAAM8+B,YAAY95C,MAAK8N,GAC/B,CAEDjO,gBAAsBk7C,GACpB,MAAMvjC,EAAOzU,MAAMmI,KAAK6vC,GACxB,IAAK,IAAIxV,KAAQ/tB,QACT+tB,GAAKvT,KACX+oB,EAAM3xB,OAAOmc,EAEhB,CAED1lC,UAAiBm7C,GACf,MAAMzrC,EAAKmqC,mBACXnqC,GAAGwrC,GAAOt8B,IAAIu8B,GACTzrC,GAAGgf,KACNhf,GAAGgf,IAAa,EAChBxiB,gBAAe,IAAMwD,GAAG0rC,GAAS1rC,GAAGwrC,IAAQG,QAAQ3rC,GAAGgf,IAAa,KAEvE,CAED1uB,eACE2yB,gBAAgBhJ,QAChBkwB,oBAAmBqB,GAAOvxB,QAC1BkwB,oBAAmBpwB,EAAOE,QAC1BkwB,oBAAmBvD,GAAM3sB,OAC1B,EChOI,MAAM2xB,gBAEXrtC,IACAs0B,IAEAv/B,YAAYiL,GACV,MAAMyB,EAAKvP,KACXuP,GAAGzB,GAAQA,EACXyB,GAAG6yB,GAASt0B,EAAKs0B,MACjBt0B,EAAKm9B,cAAc17B,EACpB,CAEDgmC,gBACE4F,iBAAgBtQ,GAAapsB,IAAIze,KAClC,CAEDw1C,mBACE,MAAMjmC,EAAKvP,KACXm7C,iBAAgBtQ,GAAazhB,OAAO7Z,GACpCA,GAAGzB,GAAMo9B,iBAAiB37B,GAC1BA,GAAGzB,GAAQ,KACXyB,GAAG6yB,GAAS,IACb,CAED6W,aACE,MAAM1pC,EAAKvP,KACPuP,GAAG6yB,KAAW7yB,GAAGzB,IAAOs0B,QAC1B7yB,GAAG6yB,GAAW7yB,GAAGzB,IAAOs0B,MACxB7yB,EAAG6rC,YAAY7rC,GAAG6yB,IAErB,CAEDiZ,eAAejZ,GACRpiC,MAAKoiC,IAAQpiC,KAAKo7C,YAAYhZ,EACpC,CAEDgZ,YAAYhZ,GACV,IAAKA,EAAO,OAEZt1B,OAAOU,IADIxN,MACG8N,GAAO,gBAAiBs0B,GACtC,MAAM3zB,EAFKzO,MAES8N,IAAO8nC,YAAYnnC,UAAY,GACnD1L,MAAMmI,KAAKuD,GAAU1H,SAAQjH,GAAMgN,OAAOU,IAAI1N,EAAI,gBAAiBsiC,IACpE,CAEDviC,UAAsB,IAAIiX,IAE1BjX,UAAgBmM,GACHmvC,iBACRtQ,GAAa9jC,SAAQ8Y,GAAKA,EAAEw7B,eAAervC,EAAE4Z,SACjD,CAED/lB,YACEimB,SAAS3V,GAAGrJ,OAAQ,KAAM,WAAYq0C,iBAAgBxY,GACvD,QAGCwY,iBAAgBtrB,IACjB,EC9DI,MAAMyrB,eAETxtC,IAEAjL,YAAYiL,GACV9N,MAAK8N,GAAQA,EACbA,EAAKm9B,cAAcjrC,KACpB,CAEDu1C,gBACE,MAAMhmC,EAAKvP,KACLkO,EAASqB,GAAGzB,GAAM8nC,YAAcrmC,GAAGzB,GACzCyB,GAAGzB,GAAM0qC,YAAYtqC,EAAQ,aAAcqB,GAAGgsC,GAAezzC,KAAKyH,GACnE,CAEDimC,mBACE,MAAMjmC,EAAKvP,KACXuP,GAAGzB,GAAMo9B,iBAAiB37B,GAC1BA,GAAGzB,GAAQ,IACZ,CAEDytC,IAAevvC,GAC4B,mBAA9BA,EAAEkC,OAAOstC,kBAClBxvC,EAAEkC,OAAOstC,mBAAmBz0C,SAAQjH,IAClCA,EAAG27C,iBAAiBzvC,EAAEkC,OAAO,GAGlC,SCAE,MAAMiuB,kBAAkBoR,EAE7B1tC,kBAAoB,CAClB8mC,KAAM,CAAEvmC,KAAMqB,SACdi6C,IAAK,CAAEt7C,KAAMqB,QAASk6C,SAAS,GAC/BC,KAAM,CAAEx7C,KAAMqB,QAASk6C,SAAS,GAChCvd,QAAS,CAAEh+B,KAAMmO,QACjB4wB,OAAQ,CAAE/+B,KAAMmO,QAChBstC,QAAS,CAAEz7C,KAAMqB,SACjBq6C,SAAU,CAAE17C,KAAMqB,SAClB4b,OAAQ,CAAEjd,KAAMqB,SAChBk1C,KAAM,CAAEv2C,KAAMqB,SAEds6C,QAAS,CAAE,EACXrgC,IAAK,CAAE,EACP0mB,MAAO,CAAE,EAET4Z,GAAI,CAAE,EACNC,QAAS,CAAE,EACXt4C,SAAU,CAAEg4C,SAAS,EAAMpI,WAAYT,UACvCqB,YAAaA,EACb51B,YAAaA,EACbia,SAAUA,GAEV/S,SAAU,CAAE,GAGdy2B,SAAWn3C,EACXo3C,SAAap3C,EACbwZ,SAAexZ,EACfq3C,SAAgBr3C,EAChBs3C,SAAkBt3C,EAClBu3C,SAAkBv3C,EAClBw3C,SAAUx3C,EACV0gB,SAAY1gB,EACZqW,SAAWrW,EAEX0qC,SAAO1qC,EACPoxC,SAAQpxC,EACRy3C,SAAQz3C,EAERlC,cACE8nB,QACA,MAAMpb,EAAKvP,KACXuP,EAAGmM,IAAM,GACTnM,EAAG5L,SAAW,GACd4L,GAAG2sC,GAAW,IAAI5G,kBAAkB/lC,GACpCA,GAAG6L,GAAW,IAAI86B,kBAAkB3mC,GACpCA,GAAG6sC,GAAgB,IAAIpD,uBAAuBzpC,GAC9CA,GAAGgP,GAAe,IAAI+6B,sBAAsB/pC,GAE5CA,GAAGgtC,GAAU,IAAIpB,gBAAgB5rC,GACjCA,GAAG+sC,GAAkB,IAAIhB,eAAe/rC,EACzC,CAEDktC,yBAAyBv0C,EAAMw0C,EAAUC,GACvChyB,MAAM8xB,yBAAyBv0C,EAAMw0C,EAAUC,EAChD,CAEDC,oBACEjyB,MAAMiyB,oBACN,MAAMrtC,EAAKvP,KACCgb,MAAM8+B,YAAYvqC,KACrBA,GAAGkW,GAAY,IAAIi0B,mBAAmBnqC,IAC3CA,EAAGstC,YAAYttC,EAAGutC,QACvB,CAEDC,uBACE,MAAMxtC,EAAKvP,KACX8lB,SAASk3B,gBAAgBh9C,MACzB2qB,MAAMoyB,uBACNxtC,GAAGkgC,IAAMjmB,QACTja,GAAG4mC,IAAO3sB,QACVja,GAAGitC,IAAOhzB,QACVja,GAAGkgC,GAAO,KACVlgC,GAAG4mC,GAAQ,KACX5mC,GAAGitC,GAAQ,KACXjtC,GAAG2sC,GAAW,KACd3sC,GAAG4sC,GAAa,KAChB5sC,GAAGgP,GAAe,KAClBhP,GAAG6sC,GAAgB,KACnB7sC,GAAG8sC,GAAkB,KACrB9sC,GAAG+sC,GAAkB,KACrB/sC,GAAGgtC,GAAU,KACbhtC,GAAGkW,GAAY,KACflW,GAAG6L,GAAW,KAEd7L,EAAGoV,mBAAqB,GACxB6I,cAAchB,WAAWjd,GAAG0tC,IAAW,GACvC,MAAM5/B,EAASrd,KAAKyb,WAChB4B,IAEFA,EAAOsH,mBAAqB,GAG5B5Y,gBAAe,IAAMiP,MAAMG,QAAQkC,MAErCtR,gBAAe,IAAMiP,MAAMG,QAAQ5L,IAGpC,CAED2tC,aAAaC,GACX,OAAOn9C,KAAK0oB,WACb,CAOD00B,mBACE,OAAOp9C,KAAK2mC,KAAO3mC,KAAO2qB,MAAMyyB,kBACjC,CAODC,eACE1yB,MAAM0yB,eACN,MAAM9tC,EAAKvP,KACX,GAAIuP,EAAGwsC,QAAS,CACd,MAAMhxC,EAAQwE,EAAGwsC,QAAQ53C,WAAW,QAAUnE,KAAO8G,OACrDoD,EAAW2c,aAAatX,EAAGwsC,QAAShxC,EACrC,CACF,CAODuyC,WAAWhS,GACT,MAAM/7B,EAAKvP,KACPsrC,EAAQ9Q,IAAI,SACdjrB,GAAGguC,KAEDjS,EAAQ9Q,IAAI,YACdjrB,GAAGiuC,IAEN,CAEGP,SACF,MAAM1tC,EAAKvP,KAEX,OADAuP,EAAG/O,GAAK+O,EAAG/O,GAAK+O,EAAG/O,GAAK8L,KAAK9L,GACtB,GAAG+O,EAAG4N,QAAQrb,iBAAiByN,EAAG/O,IAC1C,CAED+8C,MACE,MACM77C,EADK1B,KACM47C,KAAO,OAAS,GACjCpuB,cAAcd,QAFH1sB,MAEci9C,GAAW,CAACrhC,QAAQla,IAAQ,GAAO,EAC7D,CAED87C,MACE,MAAMjuC,EAAKvP,KACXuP,GAAG8sC,IAAiB7G,mBACpBjmC,GAAG8sC,QAAkBt3C,EACjBwK,EAAGkoC,UACLloC,GAAG8sC,GAAkB,IAAIzF,eAAernC,GAE3C,CAMDksC,eAAex+B,GAEd,CAMD0yB,SAGE,OAAO3vC,KAAKy9C,cAAgBz9C,KAAK09C,WAAa,EAC/C,CAMDA,WACE,OAAO19C,KAAK29C,gBACb,CAMDA,iBACE,OAAO39C,KAAK85C,YAAc3J,EAAgBnwC,KAAK85C,aAAezK,CAC/D,CAMDuO,cACE,MAAMruC,EAAKvP,KACLgC,EAAM,CACV67C,OAAUtuC,EAAGusC,SACb,YAAavsC,EAAG8N,OAChBw+B,QAAWtsC,EAAGssC,QACd,CAAC,KAAKtsC,EAAG6uB,WAAY7uB,EAAG6uB,SAAW,EACnC,CAAC,KAAK7uB,EAAG4vB,UAAW5vB,EAAG4vB,QAAU,GAEnC,OAAO5vB,EAAGuuC,OAAOvuC,EAAGmM,IAAK1Z,EAC1B,CAKDk4C,mBAEC,CAKD4C,SACE98C,MAAKm8C,KAAe,IAAIrG,oBAAoB91C,KAC7C,CAMD+zB,OAAO/nB,GACLhM,MAAKm8C,IAAYpoB,OAAO/nB,EACzB,CASD8xC,OAAOpiC,EAAK1Z,EAAK+7C,GAAO,GAMtB,OALA/7C,EAAMA,GAAO,IACZ0Z,GAAO,IAAItZ,MAAM,KACfM,KAAInB,GAAKA,EAAE2C,SACX8B,QAAOzE,GAAKA,EAAEkD,OAAS,IACvBsC,SAAQxF,GAAKS,EAAIT,EAAE2C,QAAU65C,IACzB/7C,CACR,CAWDsrB,aAAa9sB,EAAIkB,EAAO+zC,GAAW,GACjC,OAAOz1C,MAAKk8C,IAAUjkC,MAAMzX,EAAIkB,EAAO+zC,EACxC,CAODz1B,QAAQpW,EAAQ,IACd,OAAOoR,MAAMgF,QAAQhgB,KAAM4J,EAC5B,CAQD4V,QAAQ5V,EAAQ,GAAIuW,GAAS,EAAIuS,GAAS,GACxC,MAAMnjB,EAAKvP,KAEX,IAAI0J,EAAS6F,GAAGitC,IAAOtzC,IAAIU,GAW3B,OAVIF,IAAWA,EAAOgf,cACpBhf,OAAS3E,EACTwK,GAAGitC,IAAOpzB,OAAOxf,IAEnBF,IAAWsR,MAAMwE,QAAQxf,KAAM4J,EAAOuW,GAElCzW,GAAUgpB,IAAWnjB,GAAGkgC,IAAMjV,IAAI5wB,KACpC2F,GAAGitC,KAAU,IAAIz2B,IACjBxW,GAAGitC,GAAMhvC,IAAI5D,EAAOF,IAEfA,CACR,CAODE,MAAMA,EAAQ,GAAIyT,GAAS,EAAOqV,GAAS,GACzC,MAAMnjB,EAAKvP,KAEX,IAAI0J,EAAS6F,GAAG4mC,IAAOjtC,IAAIU,GAW3B,OAVIF,IAAWA,EAAOgf,cACpBhf,OAAS3E,EACTwK,GAAG4mC,IAAO/sB,OAAOxf,IAEnBF,IAAWsR,MAAMpR,MAAM5J,KAAM4J,GAAO,EAAOyT,GAEvC3T,GAAUgpB,IAAWnjB,GAAGkgC,IAAMjV,IAAI5wB,KACpC2F,GAAGkgC,KAAS,IAAI1pB,IAChBxW,GAAGkgC,GAAKjiC,IAAI5D,EAAOF,IAEdA,CACR,CAOD4T,SAAS1T,EAAQ,GAAIyT,GAAS,EAAOqV,GAAS,GAC5C,MAAMnjB,EAAKvP,KACX,IAAI0J,EAAS6F,GAAG4mC,IAAOjtC,IAAIU,GAU3B,OATIF,IAAWA,EAAOgf,cACpBhf,OAAS3E,EACTwK,GAAG4mC,IAAO/sB,OAAOxf,IAEnBF,IAAWsR,MAAMsC,SAAStd,KAAM4J,GAAO,EAAOyT,GAC1C3T,GAAUgpB,IAAWnjB,GAAG4mC,IAAO3b,IAAI5wB,KACrC2F,GAAG4mC,KAAU,IAAIpwB,IACjBxW,GAAG4mC,GAAM3oC,IAAI5D,EAAOF,IAEfA,CACR,CAODg/B,OAAOrjB,GAAU,EAAMC,GAAW,EAAOrd,GACvCjI,KAAKk6B,KAAK,SAAUjyB,EAAMod,EAASC,GAAU,EAC9C,CAUD4U,KAAKhyB,EAAMlG,EAAM,GAAIqjB,GAAU,EAAOC,GAAW,EAAOuC,GAAa,GACnE,OAAO/B,SAASyC,KAAKvoB,KAAMkI,EAAMlG,EAAKqjB,EAASC,EAAUuC,EAC1D,CAQDm2B,UAAU91C,EAAO,GAAIV,EAAU,GAC7B,OAAOse,SAASc,KAAK5mB,KAAMkI,EAAMV,EAClC,CAQDuf,KAAK7e,EAAM+D,GACT,OAAOjM,KAAKkmB,OAAOhe,EAAM+D,GAAM,EAChC,CAQDkE,GAAGjI,EAAM+D,EAAM8a,GAAO,GACpB,OAAO/mB,KAAKkmB,OAAOhe,EAAM+D,EAAM8a,EAChC,CAQDuP,IAAIpuB,EAAM+D,GACR,OAAOjM,KAAKmnB,SAASjf,EAAM+D,EAC5B,CAMDsa,QAAQva,EAAGkV,EAAUqG,EAAWC,GAC9B,OAAO1B,SAASS,QAAQva,EAAGkV,EAAUqG,EAAWC,EACjD,CAQDtB,OAAOhe,EAAM+D,EAAM8a,GAAO,GACxB,OAAO/mB,KAAKw4C,YAAYx4C,KAAMkI,EAAM+D,EAAM8a,EAC3C,CAQDI,SAASjf,EAAM+D,GACb,OAAOjM,KAAKy4C,YAAYz4C,KAAMkI,EAAM+D,EACrC,CAWDusC,YAAY14C,EAAIoI,EAAO,GAAIzH,EAAIsmB,GAAO,GACpC,OAAOjB,SAASyE,OAAOvqB,KAAMF,EAAIoI,EAAMzH,EAAIsmB,EAC5C,CASD0xB,YAAY34C,EAAIoI,EAAO,GAAIzH,GACzB,OAAOqlB,SAASzK,OAAOrb,KAAMF,EAAIoI,EAAMzH,EACxC,CAKD6N,SACEtO,KAAK47C,MAAQ57C,KAAK47C,IACnB,CAED/e,UAAUn7B,GACR,OAAO86B,EAAeK,UAAU78B,KAAK2D,SAAUjC,EAChD,CAEGu8C,gBACF,IAAIj9C,EAAOyC,OAAOzD,KAAK07C,KACvB,OAAO17C,KAAK07C,IAAM,MAAQ,KAC3B,CAKGmB,iBAEF,OAAO1pB,mBAAmB0pB,WAAW78C,KACtC,CAKGk+C,gBACF,OAAOl+C,OAAS0G,SAAS6U,aAC1B,CAKGmH,UACF,OAAO1iB,KAAKmd,QAAQrb,aACrB,CAKGg4C,kBACF,OAAO95C,MAAKylB,IAAWA,QACxB,CAKG8wB,iBACF,OAAOv2C,MAAKob,IAAUm7B,UACvB,CAKG8F,qBACF,OAAOr8C,MAAKq8C,EACb,CAMGoB,oBAEF,OAAOz9C,KAAKm+C,oBACPn+C,KAAKo+C,gBACLp+C,KAAKq+C,WACLr+C,KAAKs+C,iBACLt+C,KAAKu+C,kBACX,CAOGJ,yBACF,OAAOlmB,cAAckmB,mBAAmBn+C,KAAKm0C,aAAe,GAC7D,CAOGkK,gBACF,OAAOpmB,cAAca,SAAS94B,KAAKg8C,IAAM,GAC1C,CAOGuC,yBACF,OAAOtmB,cAAcsmB,mBAAmBv+C,KAAKue,aAAe,GAC7D,CAMG6/B,qBACF,OAAOnmB,cAAcmmB,eAAep+C,KAAKi8C,SAAW,GACrD,CAMGqC,sBACF,OAAOrmB,cAAcqmB,gBAAgBt+C,KAAKw4B,UAAY,GACvD,CAKGgmB,kBACF,OAAOx+C,KAAKgP,aAAa,YAC1B,CAKGunB,sBACF,OAAOvb,MAAMmD,UAAUne,MAAMgG,QAAO9D,GAAKA,aAAai6B,YAAW3vB,QAAQ9K,KAC1E,CAKGwc,gBACF,OAAOle,KAAK6C,YAAYqF,IACzB,CAEGka,kBACF,MAAM5K,EAAO,IAAIwD,MAAM0C,YAAY1d,OAAO0C,KAAII,GAAKA,EAAED,aAAa0iB,aAAYvf,QAAOlD,GAAKA,IAE1F,OADA0U,EAAK5F,KAAK5R,KAAK6C,aAAa0iB,YACrB7O,OAAO8O,aAAahO,EAC5B,CAKGinC,oBACF,OAAOz+C,KAAK6C,YAAY47C,cACnBz4C,QAAOlD,GAAKA,aAAa2hB,eAAiB3hB,EAAE47C,sBAAsBj6B,gBAClE/hB,KAAII,GAAKA,EAAE47C,YAAc57C,IACzB8S,KASN,CAOD+oC,QAAQz2C,GACN,OAAOnF,MAAMmI,KAAKlL,KAAKy+C,eAAe/I,OAAS,IAAI1vC,QAAO6U,GAAKA,EAAE9J,eAAiB7I,IAAM0N,KACzF,CASDgpC,eAAehnC,EAAM1P,EAAMxG,GACzB1B,KAAK2+C,QAAQ/mC,IAAOK,OAAO8U,YAAY7kB,EAAMxG,EAC9C,CAOD7B,qBAAqBmC,GACnB,OAAOgZ,MAAMuH,cAAcvgB,EAC5B,CAQDnC,cAAcqI,EAAMS,EAAOoF,GACzB,OAAOiN,MAAM7R,OAAOjB,EAAMS,GAAS3I,KAAM+N,EAC1C,QAGCouB,UAAUhzB,OAAO,aAAcgzB,WAE/BrR,cAAc2E,gBAAe3vB,IAAM,IAAMA,IAAQkb,MAAMG,QAAQrb,EAAE,IAAK,EAAM4G,SAASyI,KACtF,GCzqBI,MAAM0vC,4BAEX/wC,IACAiqC,IACArN,IAEA7nC,YAAYiL,GACC9N,MACR8N,GAAQA,EACXA,EAAKm9B,cAFMjrC,KAGZ,CAEDw1C,mBACE,MAAMjmC,EAAKvP,KACXuP,GAAGzB,GAAMo9B,iBAAiB37B,GAC1BA,GAAGzB,GAAQ,KACXyB,GAAGwoC,IAAY,CAChB,CAEG+G,eACF,OAAgC,IAAzB9+C,MAAK8N,IAAOgxC,QACpB,CAEGC,eACF,OAAgC,IAAzB/+C,MAAK8N,IAAOixC,QACpB,CAEGrU,cACF,OAAO1qC,MAAK0qC,EACb,CAEGxlB,eACF,OAAOllB,MAAK8N,GAAM0N,MACnB,CAKDqU,OAEC,CAKDtF,OAAOzqB,GACL,MAAMyP,EAAKvP,KACPuP,GAAGwoC,KACPxoC,GAAGwoC,IAAY,EACXxoC,GAAGzB,KACLyB,GAAGzB,GAAM0qC,YAAY14C,EAAI,WAAWkM,GAAKuD,EAAG6W,UAAUpa,KACtDuD,GAAGzB,GAAM0qC,YAAY14C,EAAI,SAASkM,GAAKuD,EAAGyvC,QAAQhzC,KAClDuD,GAAGzB,GAAM0qC,YAAY14C,EAAI,SAASkM,GAAKuD,EAAG0vC,QAAQjzC,KAClDuD,GAAGzB,GAAM0qC,YAAY14C,EAAI,WAAWkM,GAAKuD,EAAG2vC,UAAUlzC,KACtDuD,GAAGzB,GAAM0qC,YAAY14C,EAAI,YAAYkM,GAAKuD,EAAG4vC,WAAWnzC,MAE3D,CAED+3B,WACE,MAAMx0B,EAAKvP,KACX,IAAIF,EAAKyP,GAAGm7B,IAAUgM,uBACtB,KAAO52C,GAAIujB,UAAUvjB,EAAKA,EAAG42C,uBACzBnnC,EAAGuvC,WAAah/C,IAAIA,EAAKyP,EAAG6vC,kBAChCt/C,GAAIirC,OACL,CAEDv+B,OACE,MAAM+C,EAAKvP,KACX,IAAIF,EAAKyP,GAAGm7B,IAAU1rB,mBACtB,KAAOlf,GAAIujB,UAAUvjB,EAAKA,EAAGkf,mBACzBzP,EAAGuvC,WAAah/C,IAAIA,EAAKyP,EAAGkN,mBAChC3c,GAAIirC,OACL,CAKD9N,QACE,MAAM1tB,EAAKvP,KACLwb,EAASjM,EAAG2V,SACd3V,EAAGwvC,SACLvjC,EAAOzU,SAAQjH,IACbA,EAAG0b,QAAS,EACZ1b,EAAGu/C,MAAM,IAEF7jC,IACTA,EAAOA,QAAS,EAChBA,EAAO6jC,QAET9vC,GAAGm7B,QAAW3lC,EACdwK,GAAGzB,IAAOosB,KAAK,mBAAen1B,GAAW,EAC1C,CAMDu6C,IAAYx/C,GACCE,MACR8N,IAAOwxC,aAAax/C,GADZE,MAER8N,IAAOosB,KAAK,iBAAkBp6B,GAAI,EACtC,CAMDy/C,IAAcz/C,GACZE,MAAK8N,IAAOyxC,eAAez/C,GAC3BE,MAAK8N,IAAOosB,KAAK,mBAAoBp6B,GAAI,EAC1C,CAMD0/C,IAAW1/C,GACTE,MAAK8N,IAAO0xC,YAAY1/C,GACxBE,MAAK8N,IAAOosB,KAAK,gBAAiBp6B,GAAI,EACvC,CAOD2/C,IAAa3/C,GACX,OAAOE,MAAK8N,IAAO2xC,aAAcz/C,MAAK8N,IAAO2xC,YAAY3/C,EAC1D,CAEDirC,IAAOjrC,GACL,MAAMyP,EAAKvP,KACNuP,GAAGkwC,GAAa3/C,KACrByP,GAAGm7B,GAAW5qC,EACVA,GACFyP,GAAGiwC,GAAWjwC,GAAGm7B,IAEpB,CAEDp8B,IAAQxO,GACN,IAAKA,EAAI,OACT,MAAMyP,EAAKvP,KACNuP,GAAGkwC,GAAa3/C,KACjBA,EAAG0b,OACLjM,GAAG+vC,GAAYx/C,GAEfyP,GAAGgwC,GAAcz/C,GAEpB,CAEDgrC,IAAQhrC,GACN,MAAMyP,EAAKvP,KACX,IAAKuP,GAAGkwC,GAAa3/C,GAAK,OAE1B,MAAM0b,EAASjM,EAAG2V,SACd1J,IAAWjM,EAAGwvC,WAChBvjC,EAAOA,QAAS,EAChBjM,GAAGjB,GAAQkN,IAGTjM,EAAGwvC,SACLj/C,EAAG0b,QAAU1b,EAAG0b,OAEhB1b,EAAG0b,QAAS,EAEdjM,GAAGjB,GAAQxO,EACZ,CAEDq/C,WAAWnzC,GAGV,CAEDkzC,UAAUlzC,GACR,IAAKA,EAAEkC,OAAOwxC,MAAO,OACrB,MAAMnwC,EAAKvP,KACRgM,EAAE2zC,eAAeD,MAClBnwC,GAAGw7B,GAAO/+B,EAAEkC,QAEZqB,EAAG2V,UAAU6lB,OAGhB,CAEDkU,QAAQjzC,GACN,MAAMuD,EAAKvP,KACLF,EAAKkM,EAAE4zC,eACZ55C,QAAOlG,GAAMA,aAAcq8B,KAC3Bn2B,QAAOlG,GAAMA,EAAGy2B,kBAAoBhnB,GAAGzB,KAAO8H,MAC1CrG,GAAGkwC,GAAa3/C,KACjBkM,EAAEya,SAASlX,EAAG0tB,QAClB1tB,GAAGgwC,GAAchwC,EAAG2V,UACpB3V,GAAGu7B,GAAQhrC,GACZ,CAEDsmB,UAAUpa,GACR,MAAMuD,EAAKvP,KACX,GAAKgM,EAAEkC,OAAOwxC,MACd,OAAQ1zC,EAAEwa,MACR,IAAK,UACL,IAAK,YACHjX,EAAGw0B,WACH,MACF,IAAK,YACL,IAAK,aACHx0B,EAAG/C,OAIR,CAEDwyC,QAAQhzC,GACN,MAAMuD,EAAKvP,KACX,GAAKgM,EAAEkC,OAAOwxC,MACd,OAAQ1zC,EAAEwa,MACR,IAAK,QACL,IAAK,QACHjX,GAAGm7B,IAAUjiC,QAGlB,EC5NI,MAAMo3C,gBAEX/xC,IAEAgyC,IACAC,IAEAl9C,YAAYiL,GACC9N,MACR8N,GAAQA,EACXA,EAAKm9B,cAFMjrC,KAGZ,CAEDu1C,gBACE,MAAMhmC,EAAKvP,KACPuP,GAAGzB,GAAMsV,QACX7T,GAAGwwC,GAAexwC,GAAGywC,GAAYl4C,KAAKyH,GACtCA,GAAGuwC,GAAYzlB,WAAWC,SAAS/qB,GAAGzB,GAAMoQ,WAC5C3O,GAAGuwC,GAAU3vC,GAAGZ,GAAGzB,GAAMsV,MAAO7T,GAAGwwC,IAEtC,CAEDvK,mBACE,MAAMjmC,EAAKvP,KACXuP,GAAGuwC,IAAWxpB,IAAI/mB,GAAGzB,GAAMsV,MAAO7T,GAAGwwC,IACrCxwC,GAAGzB,GAAMo9B,iBAAiB37B,GAC1BA,GAAGzB,GAAQ,IACZ,CAEDkyC,IAAYh0C,GACVhM,MAAK8N,GAAMkyC,aAAah0C,EACzB,CAED08B,OAAOzgC,GACL,MAAMsH,EAAKvP,KACXuP,GAAGuwC,IAAW5lB,KAAK3qB,GAAGzB,GAAMsV,MAAO,CAACrY,MAAOwE,GAAGzB,GAAOy3B,KAAKt9B,GAC3D,ECpCI,MAAMg4C,wBAAwB9jB,GAEnC+jB,IAAU,KAEVrgD,kBAAoB,CAClBmE,IAAK,CAAE,EACPqf,SAAU,CAAEjjB,KAAMqB,SAClBpB,QAAS,CAAED,KAAMqB,UAGnBoB,cACE8nB,QACA,MAAMpb,EAAKvP,KACXuP,EAAG/O,GAAK8L,KAAKE,OACb+C,EAAGlP,SAAU,EACbkP,GAAG2wC,GAAU,IAAIhf,SAAS3xB,GAC1BA,GAAG2wC,GAAQv/C,KAAM,CAClB,CAED+8C,WAEE,OAAOxhC,CAAI,eACZ,CAEDikC,QAAQ7U,GACN,MAAM/7B,EAAKvP,KACXuP,GAAG2wC,GAAQv/C,IAAM4O,EAAGlP,QAChBirC,EAAQ9Q,IAAI,QACdjrB,GAAG2wC,GAAQle,WAAWzyB,EAAGvL,IAE5B,CAED+4C,uBACa/8C,MACRkgD,IAASze,UADDzhC,MAERkgD,GAAU,IACd,QAGClgD,KAAKmJ,OAAO,YACb,ECxCI,MAAMi3C,2BAA2BjkB,GAEtCt8B,kBAAoB,CAClB43C,QAAS,CAAE,EACX4I,UAAW,CAAEjgD,KAAMqB,SACnB6+C,QAAS,CAAE3E,SAAS,EAAMttC,UAAW,YACrCkyC,UAAW,CAAE5E,SAAS,EAAMttC,UAAW,cACvCmyC,QAAS,CAAE7E,SAAS,EAAMttC,UAAW,YACrCpG,KAAM,CAAE7H,KAAM2C,QAGhBF,cACE8nB,QACA3qB,KAAKiI,KAAOjI,KAAK4iC,QAClB,CAED8a,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI,cAAcyyB,EAAUp/B,EAAG0uC;kBACxB1uC,GAAGymC,GAAUluC,KAAKyH;iBACnBA,GAAG0vC;iBACH1vC,GAAGyvC;0BACM9Q,EAAS3+B,EAAGquC;SAC7B59C,MAAKygD;2BAEX,CAEGh+B,YACF,OAAOziB,KAAKsd,SAAS,qBAAqB,GAAO,EAClD,CAEGslB,eACF,MAAMlrB,EAAM1X,KAAK6C,YAAY0iB,WAC7B,OAAOyW,OAAOK,QAAQr8B,MAAM0C,KAAI5C,GAAMgN,OAAO4B,QAAQ5O,EAAI4X,IAC1D,CAEDgpC,QACE1gD,MAAK6J,IAAO,EACb,CAEDmhC,OACEhrC,MAAK6J,IAAO,EACb,CAED8tC,WAAW1vC,GACTjI,KAAKiI,KAAOA,CACb,CAEDw4C,MACE,OAAOzgD,KAAKiI,KAAKvF,KAAII,GACZoZ,CAAI;mBACEyyB,GAAyB,IAAf7rC,EAAEugB;mBACZsrB,EAAU7rC,EAAE+iB;oBACX8oB,EAAU7rC,EAAE2iB;iBACfkpB,EAAU7rC,EAAEggB,gCAE1B,CAEDjZ,IAAOjI,GAAM,GACX5B,KAAKyiB,MAAM1b,SAAQjH,GAAMA,EAAG2qC,OAAS7oC,IACrC5B,KAAK0oC,QACN,CAEDsN,IAAUhqC,GACR,MAAMuD,EAAKvP,KACPuP,EAAG8wC,WAAar0C,EAAEkC,OAAOu8B,QAC3Bl7B,EAAGkT,MAAMzc,QAAOlG,GAAMA,GAAMkM,EAAEkC,SAAQnH,SAAQjH,GAAMA,EAAG2qC,QAAS,GAEnE,CAEDwU,IAASjzC,GACP,MAAM20C,EAAe30C,GAAG4zC,eAAe,IAAI7vC,QAAQ,qBAChD4wC,GAAc30C,EAAEkC,OAAOI,UAC3B,CAED0wC,IAAShzC,GACP,OAAQA,EAAEwa,MACR,IAAK,YACHxa,EAAEkC,OAAOwyC,UACT,MACF,IAAK,aACH10C,EAAEkC,OAAO88B,SAGd,QAGChrC,KAAKmJ,OAAO,eACb,ECzFI,MAAMy3C,+BAA+BzkB,GAE1Ct8B,kBAAoB,CAClB0gD,UAAW,CAAE5E,SAAS,EAAMttC,UAAW,cACvCmyC,QAAS,CAAE7E,SAAS,EAAMttC,UAAW,YACrCwX,QAAS,CAAE81B,SAAS,GACpB74B,MAAO,CAAE64B,SAAS,GAClBlR,OAAQ,CAAErqC,KAAMqB,QAASk6C,SAAS,IAGpC94C,cACE8nB,OACD,CAEDuyB,aAAaC,GACX,MAA+B,iBAAxBn9C,KAAK+K,OAAOoS,OACpB,CAEDugC,WACE,MAAMnuC,EAAKvP,KACL+K,EAAQwE,EAAGxE,MACXw1C,EAAYhxC,EAAGgxC,WAAax1C,GAAOw1C,UACnCC,EAAUjxC,EAAGixC,SAAWz1C,GAAOy1C,QACrC,OAAOtkC,CAAI,8BAA8B3M,EAAGmM;;;2CAGL6kC,KAAahxC,EAAGk7B,OAAS,GAAK;mBACtDl7B,EAAGstB,UAAUttB,EAAGuT;;;wDAGqB09B,KAAWjxC,EAAGk7B,OAAS,OAAS;;qBAEnEl7B,EAAGstB,UAAUttB,EAAGsW;qBAChBtW,EAAGouC;;;;YAKrB,CAED3S,OACEhrC,KAAK0oC,QAAO,EACb,CAEDgY,QACE1gD,KAAK0oC,QAAO,EACb,CAEDp6B,SACEtO,KAAK0oC,QAAQ1oC,KAAKyqC,OACnB,CAED/B,OAAO9mC,GAAM,GACA5B,KACRyqC,OAAS7oC,EACZ+oB,MAAM+d,QACP,CAEG39B,YACF,OAAO/K,KAAKwf,QAAQ,iBAAmBxE,MAAM6lC,UAAU7gD,KACxD,QAGCA,KAAKmJ,OAAO,oBACb,EC9DI,MAAM23C,uBAAuB3kB,GAEhCt8B,kBAAoB,CAChBgmB,QAAS,CAAE81B,SAAS,GACpB1H,MAAO,IAAKA,GACZ8M,OAAQ,CAAEpF,SAAS,EAAMv7C,KAAMqB,SAC/Bu/C,SAAU,CAAErF,SAAS,EAAMv7C,KAAMqB,SACjC25B,MAAO,CAAEugB,SAAS,EAAMv7C,KAAMmO,SAGlCkhC,IACAwR,KAAS,EACTC,IAAY,EACZ9vC,IAAQ,EACRnJ,IAEApF,cACI8nB,QACA3qB,KAAKo7B,MAAQ,EACbp7B,MAAKyvC,GAAOrB,IACZpuC,MAAKiI,GAAQjI,MAAK0O,GAAS1O,KAC9B,CAED+8C,uBACIlyB,cAAc7qB,MAAKkhD,IACnBv2B,MAAMoyB,sBACT,CAEDW,WACI,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI,0BAA0ByyB,EAAUp/B,EAAG0uC,eAAexO,EAAIlgC,GAAGkgC;0BACtD,IAAMlgC,GAAG0xC,IAAS;yBACnB,IAAM1xC,GAAG0xC,IAAS;gCACX/S,EAAS3+B,EAAGquC;cAC9BruC,GAAG+B;cACH/B,EAAGouC;;cAEHpuC,GAAG6H;eAEZ,CAEDimC,aAAa/R,GACTtrC,MAAKmhD,KACLx2B,MAAM0yB,aAAa/R,EACtB,CAED6U,QAAQ7U,GACCA,EAAQ9Q,IAAI,WACjBx6B,MAAKmhD,IACR,CAEDvD,cACI,MAAMruC,EAAKvP,KAQX,MAPY,IACL2qB,MAAMizB,cACTwD,MAAS7xC,EAAGwxC,OACZ,oBAAqBxxC,EAAGyxC,SACxB,CAAC,SAASzxC,EAAG0kC,SAAU1kC,EAAG0kC,MAIjC,CAEDjJ,OACIhrC,KAAK0oC,QAAO,EACf,CAEDgY,QACI1gD,KAAK0oC,QAAO,EACf,CAEDp6B,SACItO,KAAK0oC,QAAQ1oC,KAAK+gD,OACrB,CAEDrY,OAAO9mC,GAAM,GACT,MAAM2N,EAAKvP,KACXuP,EAAGwxC,OAASn/C,EACR2N,EAAGwxC,QAAQl5C,YAAW,KAAQ0H,GAAGkgC,GAAK/tC,MAAM8c,UAAUlQ,OAAO,UAAU,EAAI,GAAK,KACpFqc,MAAM+d,QACT,CAEG2Y,kBACA,OAAOrhD,MAAKiI,IAAOxD,OAAS,CAC/B,CAEGohB,SACA,OAAO7lB,KAAK68B,UAAU78B,KAAK6lB,QAC9B,CAEGvU,SAAW,OAAOtR,KAAK07C,IAAM17C,MAAKshD,GAAUthD,MAAK6lB,EAAW,CAE5DzO,SAAY,OAAOpX,KAAK07C,IAAM17C,MAAK6lB,GAAW7lB,MAAKshD,EAAU,CAE7DA,SACA,OAAOthD,KAAKghD,SAAW9kC,CAAI,sEAAsElc,KAAK0gD,mBAAqB,EAC9H,CAKDhyC,IAASqR,GACL,OAAOic,OAAOK,QAAQtc,GAAMrd,KAAI5C,GAAMgN,OAAO4B,QAAQ5O,EAAI,CAAC+lB,QAAQ,CAAE,KACvE,CAEDs7B,MACI,MAAM5xC,EAAKvP,KACPuP,EAAGwxC,QACHl2B,cAActb,GAAG2xC,IACjB3xC,GAAG2xC,GAAY,GAEf3xC,GAAGgyC,IAEV,CAEDA,MACI,MAAMhyC,EAAKvP,KACX,IAAKuP,EAAG8xC,YAAa,OACrB,MAAM5+B,EAAQlT,GAAGtH,GACbsH,EAAGsW,QACHtW,GAAG6B,IAAS,EAEZ7B,EAAGsW,QAAUpD,EAAM,GAAGoD,QAE1BtW,GAAG2xC,GAAYhzB,aAAY,KACnB3e,GAAG0xC,KACP1xC,GAAG6B,KACC7B,GAAG6B,IAASqR,EAAMhe,SAAS8K,GAAG6B,GAAQ,GAC1C7B,EAAGsW,QAAUpD,EAAMlT,GAAG6B,IAAOyU,QAAO,GAC1B,IAAXtW,EAAG6rB,MACT,QAGGp7B,KAAKmJ,OAAO,WACf,ECxIE,MAAMq4C,wBAAwBrlB,GAEnCt8B,kBAAoB,CAClBO,KAAM,IAAK0zC,GACXt+B,KAAM,IAAKA,IACXy+B,MAAO,IAAKA,GACZwN,SAAU,CAAEpzC,UAAY,aACxBqzC,SAAU,CAAErzC,UAAY,aACxBszC,YAAa,IAAK1N,EAAO5lC,UAAY,gBACrC4tB,UAAW,CAAE77B,KAAMqB,SACnB4hB,SAAU,CAAEjjB,KAAMqB,QAASk6C,SAAS,GACpCiG,QAAS,CAAExhD,KAAMqB,QAASk6C,SAAS,GACnCngC,OAAQ,CAAEpb,KAAMqB,QAASk6C,SAAS,GAClCkG,SAAU,CAAEzhD,KAAMqB,SAClBqgD,KAAM,CAAE,EACRh/B,MAAO,CAAE,EACTi/B,QAAS,CAAE,EACXv7C,KAAM,CAAE,EACRxC,IAAK,CAAE,GAGTg+C,IAAS5T,IACT6T,IAAU7T,IAEVvrC,cACE8nB,QACA3qB,KAAKI,KAAO,QACb,CAEDi9C,aAAa/R,GACX3gB,MAAM0yB,aAAa/R,GACftrC,KAAKi8B,YAAcj8B,KAAKqjB,UAAUrjB,KAAK+qC,OAC5C,CAED2S,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI;UACLuzB,EAAIlgC,GAAGyyC;eACFrT,EAAUp/B,EAAG0uC;gBACZtP,EAAUp/B,EAAGnP;qBACR8tC,EAAS3+B,EAAGquC;iBAChBjP,EAAUp/B,GAAGwyC;oBACVxyC,EAAG8T;sBACD9T,GAAG2yC;qBACJ3yC,GAAG4yC;qBACH5yC,GAAG6yC;kBACN7yC,GAAG0vC;YACT1vC,GAAG+B,MAAU/B,GAAG6H,aACzB,CAEDwmC,cACE,MAAMruC,EAAKvP,KACLwV,EAAOo/B,GAAUrlC,EAAGiG,MAW1B,MAVY,IACPmV,MAAMizB,cACTpiC,OAAUjM,EAAGiM,OACb,aAAc9U,SAAS6U,gBAAkBhM,EACzC,CAAC,QAAQA,EAAG/I,QAAS+I,EAAG/I,KACxB,CAAC,OAAOgP,KAASA,EACjB,CAAC,eAAejG,EAAG0kC,SAAU1kC,EAAGqyC,QAChC,CAAC,OAAOryC,EAAG0kC,UAAW1kC,EAAGqyC,SAAWryC,EAAG0kC,MACvC,CAAC,OAAO1kC,EAAGoyC,eAAgBpyC,EAAGiM,QAAUjM,EAAGoyC,YAG9C,CAEDl5C,QACEzI,MAAKgiD,GAAOtgD,OAAO+G,OACpB,CAEDsiC,QACEnqB,uBAAsB,IAAM5gB,MAAKgiD,GAAOtgD,OAAOqpC,SAChD,CAEDz8B,SACEtO,KAAKwb,QAAUxb,KAAKwb,MACrB,CAEDyjC,IAASjzC,GACP,MAAMuD,EAAKvP,KAIX,OAHGuP,EAAGsyC,UAAUtyC,EAAGjB,SACnBiB,EAAG8yC,QAAQC,YACX/yC,GAAGgzC,GAAQv2C,GACPuD,EAAGnB,QAAQiY,MAAc9W,EAAG2qB,KAAK3qB,EAAGnB,QAAQiY,MAAO,KAAM9W,EAAGnB,QAAQiX,QAAS9V,EAAGnB,QAAQkX,UAAU,GAClG/V,EAAGizC,QAAgBjzC,EAAGwlB,MAAMkI,QAC5B1tB,EAAGkzC,SAAiBlzC,EAAGwlB,MAAM2tB,cACjCnzC,EAAGm5B,QACJ,CAED0Z,IAAYp2C,GACVhM,KAAKqjB,SAAWrjB,KAAK2iD,SAASt/B,QAC/B,CAEDk/B,IAAQv2C,GACN,MAAMuD,EAAKvP,KACNuP,EAAGvL,MACJuL,EAAGvL,IAAIG,WAAW,KACpB8e,SAASC,KAAO3T,EAAGvL,IAEnBif,SAAS1a,KAAOgH,EAAGvL,IAEtB,CAEDk+C,MACEliD,KAAKqiD,QAAQO,SAAQ,EACtB,CAEDT,MACEniD,KAAKqiD,QAAQO,SAAQ,EACtB,CAEGJ,cACF,OAAO5O,YAAY4O,QAAQxiD,KAAKI,KACjC,CAEGqiD,eACF,OAAO7O,YAAY6O,SAASziD,KAAKI,KAClC,CAEGiiD,aACF,OAAOriD,MAAKiiD,GAAQvgD,KACrB,CAEGihD,eACF,OAAO3iD,MAAKgiD,GAAOtgD,KACpB,CAGGqzB,WACF,OAAO/0B,KAAKwf,QAAQ,gBACrB,CAEGsD,SACF,OAAO9iB,KAAK68B,UAAU78B,KAAK8iB,MAC5B,CAEGi/B,SACF,OAAO/hD,KAAK68B,UAAU78B,KAAK+hD,QAC5B,CAEGzwC,SAAW,OAAOtR,KAAK07C,IAAM17C,MAAK8iB,GAAS9iB,MAAK6iD,EAAY,CAE5DzrC,SAAY,OAAOpX,KAAK07C,IAAM17C,MAAK6iD,GAAY7iD,MAAK8iB,EAAS,CAE7D+/B,SAAc,OAAO7iD,KAAK8hD,KAAO9hD,MAAK8iD,GAAc5mC,CAAI,2BAA8B,CAEtF4mC,SACF,OAAQ5mC,CAAI;eACDuzB,EAAIzvC,MAAKiiD;YACZjiD,KAAK8hD;iBACAnT,EAAU3uC,KAAKyhD;iBACf9S,EAAU3uC,KAAK0hD;8BAE7B,QAGC1hD,KAAKmJ,OAAO,YACb,ECxJI,MAAM45C,0BAA0B5mB,GAErCt8B,cAAgB6b,CAAG,6KAEnB7b,kBAAoB,CAClB6U,KAAM,CAAE,EACRxG,OAAQ,CAAE,EACVhJ,OAAQ,CAAEquC,WAAYT,UACtBkQ,SAAU,CAAE5iD,KAAMqB,SAClB+tC,MAAO,CAAEpvC,KAAMmO,QACfsD,KAAM,CAAEzR,KAAMmO,QACdyD,MAAO,CAAE5R,KAAMmO,OAAQglC,WAAYL,QACnC/gC,IAAK,CAAE/R,KAAMmO,OAAQglC,WAAYL,QACjC+P,QAAS,CAAE50C,UAAW,WAAYjO,KAAMmO,QACxC20C,QAAS,CAAE70C,UAAW,WAAYjO,KAAMmO,QACxC40C,UAAW,CAAE90C,UAAW,cACxB+0C,UAAW,CAAE/0C,UAAW,cACxBg1C,QAAS,CAAEh1C,UAAW,YACtBi1C,SAAU,CAAEj1C,UAAW,aACvBk1C,SAAU,CAAEl1C,UAAW,aACvBm1C,SAAU,CAAEn1C,UAAW,aACvBo1C,QAAS,CAAEp1C,UAAW,YACtBq1C,OAAQ,CAAEr1C,UAAW,WACrBkyC,UAAW,CAAElyC,UAAW,cACxBs1C,YAAa,CAAEt1C,UAAW,iBAG5BqG,IACAwQ,IAEAriB,cACE8nB,QACA,MAAMpb,EAAKvP,KACXuP,GAAGmF,GAAQ,IAAI1D,OACfzB,GAAGmF,GAAMvC,IAAM,EACf5C,GAAG2V,GAAY,IAAIlU,OACnBzB,GAAGmF,GAAM/Q,SAAW3C,EAAO2C,SAC3B4L,GAAG2V,GAAUvhB,SAAW3C,EAAO2C,SAE/B4L,EAAG5L,SAAW3C,EAAO2C,SACrB4L,EAAG4C,IAAM5C,GAAG2V,GAAU/S,IACtB5C,EAAGyC,MAAQzC,GAAG2V,GAAUlT,MACxBzC,EAAGsC,KAAOtC,GAAG2V,GAAUrT,KAEvBtC,EAAGyzC,UAAW,EACdzzC,EAAGigC,MAAQ,EACXjgC,EAAG0zC,QAAU,KACb1zC,EAAG2zC,QAAU,KACb3zC,EAAGq0C,UAAY,WACfr0C,EAAG6zC,UAAY,WACf7zC,EAAGm0C,OAAS,YACZn0C,EAAG+zC,SAAW,gBACd/zC,EAAGo0C,YAAc,cACjBp0C,EAAGg0C,SAAW,uBACdh0C,EAAGk0C,QAAU,yDACbl0C,EAAGi0C,SAAW,wDACf,CAEG9uC,WACF,MAAMnF,EAAKvP,KAEX,OAAO,IAAIiO,MAAMjO,MAAK0U,GAAO,CAC3BlH,IAAG,CAACU,EAAQC,EAAMzM,KACW,mBAAhBwM,EAAOC,KAChBD,EAAOC,GAAQzM,EACf6N,GAAG+e,OAEE,GAETplB,IAAIgF,EAAQC,EAAMmS,GAChB,MAAM5e,EAAQwM,EAAOC,GACrB,OAAIzM,aAAiB6E,SACZ,YAAayE,GAClB,IACE,OAAOtJ,EAAMyJ,MAAMnL,OAASsgB,EAAWpS,EAASlO,KAAMgL,EACpE,CAAsB,QACRuE,GAAG+e,IACJ,CACb,EAEe5sB,CACR,GAEJ,CAEDmiD,gBACE,MAAMt0C,EAAKvP,KACK,GAAZuP,EAAGyC,OACLzC,EAAGyC,MAAQ,GACXzC,EAAGsC,QAEHtC,EAAGyC,OAEN,CAED8xC,YACE,MAAMv0C,EAAKvP,KACK,IAAZuP,EAAGyC,OACLzC,EAAGyC,MAAQ,EACXzC,EAAGsC,QAEHtC,EAAGyC,OAEN,CAED+xC,eACE/jD,KAAK6R,MACN,CAEDmyC,WACEhkD,KAAK6R,MACN,CAEDoyC,UAAUvvC,GACR,MAAMnF,EAAKvP,KACX,OAAQ0U,GAAQnF,GAAGmF,IAAOxP,OAAOqK,EAAGrK,OAAQqK,EAAG5L,SAChD,CAEDw8C,UACE,MAAM5wC,EAAKvP,KACL0U,EAAO,IAAI1D,OAAOzB,GAAGmF,IAC3BnF,GAAG20C,GAAcxvC,GACjBnF,EAAG2qB,KAAK,OAAQ,CAAE95B,KAAM,WAAYsU,KAAMA,EAAM9S,IAAK2N,EAAG00C,UAAUvvC,KAAS,GAAM,EAClF,CAEDgpC,WACE,MAAMnuC,EAAKvP,KACXuP,GAAGmF,GAAMvC,IAAM,EACf5C,GAAGmF,GAAM1C,MAAQzC,EAAGyC,MACpBzC,GAAGmF,GAAM7C,KAAOtC,EAAGsC,KACnBtC,GAAGmF,GAAMvC,IAAM5C,EAAG4C,IAClB5C,GAAGmF,GAAM/Q,SAAW4L,EAAG5L,SAEvB,MAAMwgD,EAAOnzC,OAAOozC,SAAQ,EAAM70C,EAAG5L,UAAUjB,KAAInB,GAAK2a,CAAI,oBAAoB3a,YAC1E8iD,EAAS90C,GAAG+0C,KACZzyC,EAAOtC,GAAGg1C,KAEhB,OAAOroC,CAAI;oDACqCgyB,EAAS3+B,EAAGquC;iBAC/CjP,EAAUp/B,EAAG0uC;sBACR1uC,GAAGi1C;oBACLj1C,GAAGk1C;+CACwBl1C,EAAGgxC;;wCAEVhxC,EAAGs0C,6BAA6Bt0C,EAAGm0C,sBAAsBrT,EAAW9gC,EAAGq0C;;;;oBAI3FS;oBACAxyC;;;;wCAIoBtC,EAAGu0C,yBAAyBv0C,EAAGm0C,sBAAsBrT,EAAW9gC,EAAG6zC;;;kCAGzE7zC,EAAGg0C,aAAaY;YACtC9T,EAAW9gC,GAAGm1C;aAEvB,CAEDR,IAAcxvC,GACZ,MAAMnF,EAAKvP,KACX,IAAKuP,EAAGrB,OAAQ,OAChB,MAAMy2C,EAAM3pC,MAAMpR,MAAMlD,SAASuZ,gBAAiB1Q,EAAGrB,QACrD,OAAKy2C,EAEDA,aAAeC,iBACA,SAAbD,EAAIvkD,KAAwBukD,EAAIE,YAAcnwC,EAC3CiwC,EAAIjjD,MAAQ6N,EAAG00C,UAAUvvC,QAElCsG,MAAMyF,QAAQkkC,EAAKp1C,EAAG00C,UAAUvvC,SANhC,CAOD,CAED4Z,MACE,MAAM/e,EAAKvP,KACXuP,GAAG2V,GAAU/S,IAAM,EACnB5C,GAAG2V,GAAUlT,MAAQzC,GAAGmF,GAAM1C,MAC9BzC,GAAG2V,GAAUrT,KAAOtC,GAAGmF,GAAM7C,KAC7BtC,GAAG2V,GAAU/S,IAAM5C,GAAGmF,GAAMvC,IAC5B5C,GAAG2V,GAAUvhB,SAAW4L,GAAGmF,GAAM/Q,SAEjC4L,EAAG4C,IAAM5C,GAAGmF,GAAMvC,IAClB5C,EAAGyC,MAAQzC,GAAGmF,GAAM1C,MACpBzC,EAAGsC,KAAOtC,GAAGmF,GAAM7C,KACnBtC,EAAG5L,SAAW4L,GAAGmF,GAAM/Q,QACxB,CAEDmhD,IAASvjD,EAAGmT,GAEV,OAAOnT,GAAKP,EAAOsM,MAAM/L,KAAOmT,EAAKvC,KAAOuC,EAAK1C,QADtChS,MACmD0U,GAAM1C,OADzDhS,MACqE0U,GAAM7C,OAAS6C,EAAK7C,IACrG,CAED6yC,MACE,MAAMn1C,EAAKvP,KACL+kD,EAAQ,IAAI/zC,OAClB+zC,EAAMphD,SAAW4L,EAAG5L,SACpB,MACM+F,EADO6F,GAAGmF,GAAMhV,MAAM6P,EAAG5L,UAE5BjB,KAAInB,IACH,MAAMyjD,EAAKz1C,GAAGu1C,GAASvjD,EAAGwjD,GAASx1C,EAAG+zC,SAAW,GAC3C2B,EAAK11C,GAAGu1C,GAASvjD,EAAGgO,GAAG2V,IAAa3V,EAAGo0C,YAAc,GAG3D,MAAO,wBADGpiD,EAAI,mDAAmD0jD,KAAMD,oBAAqBzjD,MAAMA,QAAU,UACpE,IAEzCmB,KAAI,CAACnB,EAAGoB,KACP,GAAU,IAANA,EAAS,MAAO,yBAAyBpB,IAE7C,OADgBoB,EAAI,GAAK,EACR,+BAA+BpB,IAAMA,CAAC,IAG3D,OADAmI,EAAOkI,KAAK,UACLlI,EAAOpH,KAAK,GACpB,CAEDgiD,MACE,MAAM/0C,EAAKvP,KACLklD,EAAU31C,GAAGmF,GAAM9B,KACnByxC,EAASrzC,OAAOm0C,WAAU,EAAO51C,EAAG5L,UACpC6T,EAAO6sC,EAAO3hD,KAAI,CAACnB,EAAGoB,IAAMuZ,CAAI,kBAAkBvZ,eAAegsC,EAAUuW,GAAW3jD,QAAWwD,MAAcxD,eACrH,OAAO2a,CAAI,oBAAoB3M,GAAG61C,iCAAuC71C,EAAGi0C,oBAAoBa,EAAO9sC,QAAQ2tC,OAAa1tC,YAC7H,CAED+sC,MAEE,MAAMh1C,EAAKvP,KAELilB,EAAU,GAChB,IAAIg+B,EAAU1zC,EAAG0zC,QACbC,EAAU3zC,EAAG2zC,QAEjB,GAAI3zC,EAAGigC,MAAQ,EAAG,CAChB,MAAM39B,GAAO,IAAIb,QAASa,KAC1BoxC,EAAUpxC,EAAOtC,EAAGigC,MACpB0T,EAAUrxC,EAAOtC,EAAGigC,MACpBjgC,GAAG81C,GAAapgC,EAASg+B,EAASC,EACnC,CAED,IAAK3zC,EAAGyzC,SACN,OAAO9mC,CAAI,oBAAoB3M,GAAG+1C,+BAAoC/1C,EAAGk0C,yBAAyBR,mBAAyBC,MAAYj+B,aAGzI,MAAMsgC,EAASh2C,EAAGyzC,UAAYzzC,EAAGigC,OAASvqB,EAAQxgB,OAAS,EACrD+gD,EAASD,EAASj5C,KAAKE,KAAO,KAC9BgL,EAAO+tC,EAASrpC,CAAI,iBAAiBspC,MAAWvgC,eAAuB,GAE7E,OAAO/I,CAAI;;cAEDyyB,EAAU6W;oBACJj2C,EAAGk0C;iBACNl0C,GAAG+1C;aACPrC;aACAC;eACE3zC,GAAGmF,GAAM5C;QAChB0F,GACL,CAED6tC,IAAapgC,EAASg+B,EAAU,EAAGC,EAAU,GAC3C,MAAM3zC,EAAKvP,KACX,IAAI4B,EAAMqhD,EACV,KAAOrhD,GAAOshD,GACR3zC,EAAGyzC,SACL/9B,EAAQrT,KAAKsK,CAAI,kBAAkBta,eAAiB+sC,EAAU/sC,GAAO2N,EAAGsC,WAAc9M,OAEtFkgB,EAAQrT,KAAKsK,CAAI,kBAAkBta,eAAiB+sC,EAAU/sC,GAAO2N,EAAGsC,WAAc9M,MAAcnD,cAEtGA,IAGF,OAAOqjB,CACR,CAEDw/B,IAAOz4C,GAEL,GADA8Z,SAASS,QAAQva,IACZA,EAAEkC,OAAOsQ,UAAUuC,SAAS,OAAQ,OACzC,MAAMxR,EAAKvP,KACLmS,EAAMnR,EAAOsM,MAAMtB,EAAEkC,OAAOE,QAAQ+D,IAAK5C,EAAG4C,KAElD5C,GAAG2V,GAAU/S,IAAM,EACnB5C,GAAG2V,GAAUlT,MAAQzC,EAAGyC,MACxBzC,GAAG2V,GAAUrT,KAAOtC,EAAGsC,KACvBtC,GAAG2V,GAAU/S,IAAMA,EAEnB5C,EAAG4C,IAAMA,CACV,CAEDizC,IAASp5C,GACPhM,KAAKgS,MAAQhG,EAAEkC,OAAOu3C,aACvB,CAEDH,IAAQt5C,GACN,MAAM05C,EAAS15C,GAAGkC,OACdw3C,GAAQC,SAASC,QACnB5lD,KAAK6R,KAAO6zC,EAAOhkD,MAEtB,CAED8iD,IAAOx4C,GAEN,QAGChM,KAAKmJ,OAAO,cACb,ECnTI,MAAM08C,sBAAsB1pB,GAEjCt8B,cAAgB6b,CAAG,0EAEnB7b,kBAAoB,CAElBimD,WAAY,CAAE1lD,KAAMS,OAAQwN,UAAW,cAAestC,SAAU,GAEhEoK,QAAS,CAAE3lD,KAAMqB,SACjByd,UAAW,IAAKA,GAChB8mC,MAAO,IAAK9mC,GAEZ+mC,MAAO,CAAE,EACTnjC,MAAO,CAAE,EACTojC,SAAU,CAAE,EACZ1/C,KAAM,CAAE,EACR2/C,OAAQ,CAAE,EACVC,OAAQ,CAAE,EAEVC,UAAW,CAAEh4C,UAAW,cACxBi4C,UAAW,CAAEj4C,UAAW,cACxBk4C,YAAa,CAAEl4C,UAAW,gBAE1Bm4C,SAAU,CAAEn4C,UAAW,aACvBo4C,YAAa,CAAEp4C,UAAW,gBAC1BqgB,QAAS,CAAErgB,UAAW,YACtBq4C,UAAW,CAAEr4C,UAAW,cACxBkyC,UAAW,CAAElyC,UAAW,cACxBmyC,QAAS,CAAEnyC,UAAW,YACtBs4C,SAAU,CAAEt4C,UAAW,cAIzBu4C,IAAWt6C,KAAK9L,GAEhBqC,cACE8nB,QACA3qB,KAAK69C,QAAS,EACd79C,KAAKqd,QAAS,EACdrd,KAAKgmD,MAAQ,QACbhmD,KAAKkf,UAAY,MACjBlf,KAAK8lD,WAAa9lD,KAAK8lD,YAAc,CAAA,EACrC9lD,KAAKstB,aAAattB,MAAK4mD,GACxB,CAEDlJ,WACE,MAAMnuC,EAAKvP,KACLob,EAAW7L,EAAGs3C,WAAat3C,GAAGu3C,KAAoBv3C,GAAGw3C,KAC3D,OAAO7qC,CAAI,cAAcyyB,EAAUp/B,EAAG0uC,2BAA2B/P,EAAS3+B,EAAGquC,mBAAmBxiC,SACjG,CAED0rC,MACE,MAAMv3C,EAAKvP,KACX,MAAO,CAACuP,GAAGy3C,GAAWz3C,GAAG62C,GAAS72C,GAAGJ,GAAOI,GAAG42C,GAAS52C,GAAG03C,GAC5D,CAEDF,MACE,MAAMx3C,EAAKvP,KACL03B,EAAQ+c,eAAeyS,SAAS33C,EAAG2P,WACnCioC,EAAazvB,EAAQ,QAAU,QAC/B0vB,EAAW1vB,EAAQ,QAAU,QAC7B2vB,EAAY3vB,EAAQnoB,GAAG+3C,GAAU/3C,GAAGJ,GACpCo4C,EAAW7vB,EAAQnoB,GAAGJ,GAAQI,GAAG+3C,GACvC,OAAOprC,CAAI;sBACOirC;cACRE;;sBAEQD;YACVG;;aAGT,CAED3J,cACE,MAAMruC,EAAKvP,KASX,MARY,IACP2qB,MAAMizB,cACTC,OAAQtuC,EAAGsuC,QAAUtuC,EAAGg3C,YACxB,CAAC,QAAQh3C,EAAGy2C,SAAUz2C,EAAGy2C,MACzB,CAAC,QAAQz2C,EAAG82C,aAAc92C,EAAG82C,UAC7B,CAAC,MAAM92C,EAAG+2C,aAAc/2C,EAAG+2C,UAC3B,CAAC,UAAU/2C,EAAGg3C,eAAgBh3C,EAAGg3C,YAGpC,CAEGM,iBACF,OAAOpS,eAAeoS,WAAW7mD,KAAKkf,UACvC,CAEGsoC,mBACF,OAAO/S,eAAe+S,aAAaxnD,KAAKkf,UACzC,CAEG/P,SACF,MAAMI,EAAKvP,KACX,OAAOkc,CAAI,eAAe3M,EAAGw2C,QAAU,mBAAqB,eAAex2C,EAAGixC;+BACnDjxC,EAAGi3C,gCAAgCj3C,EAAGstB,UAAUttB,EAAGuT;kCAChDvT,EAAGk3C,sCAAsCl3C,EAAGstB,UAAUttB,EAAG22C;4BAC/D32C,EAAGmf,8BAA8Bnf,EAAGstB,UAAUttB,EAAG/I;;;KAI1E,CAEG4/C,SACF,OAAOpmD,KAAK+lD,QAAU,GAAK7pC,CAAI,4BAA4Blc,KAAKugD,kCAAkCvgD,KAAKomD,qBACxG,CAEGD,SACF,OAAOnmD,KAAK+lD,QAAU,GAAK7pC,CAAI,2BAA2Blc,KAAK0mD,kCAAkC1mD,KAAKmmD,qBACvG,CAEGsB,SACF,OAAOvrC,CAAI,4BACZ,CAEG+pC,SACF,MAAM12C,EAAKvP,KACL0b,EAAMnM,EAAGi4C,aAAe,YAAc,WAE5C,OADAj4C,EAAG+d,aAAa/d,GAAGq3C,GAAUr3C,EAAGu2C,YACzB5pC,CAAI,aAAa3M,EAAG02C,yBAAyB12C,EAAG2P,aAAaxD,KAAOnM,EAAGo3C,YAAYp3C,GAAGq3C,gBAC9F,CAEGU,SACF,OAAOtnD,KAAKimD,MAAQjmD,MAAKimD,GAASjmD,MAAKynD,EACxC,CAEGT,SACF,MAA0B,QAAnBhnD,KAAKkf,UAAsBlf,MAAKsnD,GAAU,EAClD,CAEGL,SACF,MAA0B,WAAnBjnD,KAAKkf,UAAyBlf,MAAKsnD,GAAU,EACrD,QAGCtnD,KAAKmJ,OAAO,UACb,EC5II,MAAMu+C,wBAAwBvrB,GAEnCt5B,cACE8nB,OACD,CAED+yB,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI,cAAcyyB,EAAUp/B,EAAG0uC;kEACwB/P,EAAS3+B,EAAGquC;MACxEruC,EAAGouC,qCACN,QAGC39C,KAAKmJ,OAAO,YACb,ECGI,MAAMw+C,sBAAsBxrB,GAE/Bt8B,kBAAoB,CAChB43C,QAAS,CAAE,EACXmQ,KAAM,CAAExnD,KAAMqB,QAASk6C,SAAS,GAChClR,OAAQ,CAAErqC,KAAMqB,QAASk6C,SAAS,GAClCkM,KAAM,CAAEznD,KAAMqB,SACdY,QAAS,CAAEjC,KAAMqB,SACjByT,OAAQ,CAAE9U,KAAMmO,QAChBtG,KAAM,CAAE7H,KAAM2C,QAIlBlD,eAAiB,CACbqI,KAAM,CAAE,EACR4a,MAAO,CAAE,EACTsjC,OAAQ,CAAE,EACVnS,MAAO,CAAE,EACT6N,KAAM,CAAE,EACR99C,IAAK,CAAE8K,QAAS,MAGpBg5C,IAAW1Z,IACXwY,IAAWt6C,KAAK9L,GAChBy5B,IAAc,KAEdp3B,cACI8nB,QACA,MAAMpb,EAAKvP,KACXuP,EAAG2F,OAAS,EACZ3F,EAAG+d,aAAa/d,GAAGq3C,IACnBr3C,EAAGtH,KAAOsH,GAAGb,GAASa,GACtBA,GAAG0qB,GAAc,IAAI4lB,gBAAgB7/C,KACxC,CAEDggD,WAAWh0C,GACJA,EAAE4Z,OAAO7a,OAAS/K,OACjBA,KAAKyqC,QAAS,EAEpB,CAEF6S,WAAWhS,GACP3gB,MAAM2yB,WAAWhS,GACbA,EAAQ9Q,IAAI,YAAcx6B,KAAKyqC,QAC/BzqC,MAAK+nD,IAEZ,CAED5H,UACIngD,MAAKgoD,KACDhoD,KAAKyqC,QACLzqC,MAAKi6B,GAAYyO,QAExB,CAEDgV,WACI,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI;cACLuzB,EAAIlgC,GAAGu4C;mBACFnZ,EAAUp/B,EAAG0uC;mCACG/P,EAAS3+B,EAAGquC;6BAClBruC,GAAGq3C;;0BAENr3C,GAAG2yC;2BACF3yC,GAAG04C;wBACN14C,GAAG6W;sBACL7W,GAAG0vC;cACX1vC,GAAGkT,GAAOlT,EAAGtH;cAEtB,CAED21C,cACI,MAAMruC,EAAKvP,KAUX,MATY,IACL2qB,MAAMizB,cACTsK,QAAW34C,EAAGnB,QAAQ85C,QACtB,qBAAsB34C,EAAGs4C,KACzB,CAACt4C,GAAGq3C,KAAW,EACfxF,KAAQ7xC,EAAGk7B,OACX0d,SAAY54C,EAAGlN,QACf+lD,UAAa74C,EAAGlN,QAGvB,CAEDq+C,QACI1gD,KAAKyqC,QAAS,CACjB,CAEDO,OACIhrC,KAAKyqC,QAAS,CACjB,CAEDn8B,SACItO,KAAKyqC,QAAUzqC,KAAKyqC,MACvB,CASD4d,MAAMnmD,EAAI,EAAGqU,EAAI,EAAG+xC,GAEhB,MAAM/4C,EAAKvP,KAGLkV,EAASlU,EAAOsM,MAAMiC,EAAG2F,OAAQ,GACvC,IAAIhH,EAASo6C,EAEb,GAAIxiC,SAASyiC,sBAAsBrmD,GAAI,CACnC,MAAM8J,EAAI9J,EACVgM,EAASlC,EAAEkC,OACXqI,EAAIvK,EAAE4vB,QACN15B,EAAI8J,EAAE2vB,QACN,IAAIzmB,EAAS8F,MAAM4E,aAAarQ,GAChC2F,EAASA,EAASA,EAAO6G,wBAA0B,KACnD7Z,GAASgT,GAAQjO,MAAQ,EACzBsP,GAASrB,GAAQ6oB,KAAO,CAC3B,CAED,MAAMrmB,EAAiBxV,EAAIgT,EAArBwC,EAAsCnB,EAAIrB,EAEhD0L,uBAAsB,KAClB,MAAM3I,EAAQ,CACVinB,SAAU,QACVnB,IAAK,MACL92B,KAAM,MACN41B,UAAW,GAAGnlB,OAAiBA,OAE7BE,EAAOrI,EAAG+d,aAAa/d,GAAGq3C,IAChC/lD,OAAOggB,OAAOjJ,EAAKK,MAAOA,EAAM,IAEpC1I,EAAGy7B,MAEN,CAED2M,WAAW1vC,GACPjI,KAAKiI,KAAOA,CACf,CAEDwa,IAAO1C,GACH,MAAMxQ,EAAKvP,KACX,OAAO+f,EAAKrd,KAAI5C,GAAMyP,GAAGg2B,GAAMzlC,IAClC,CAEDylC,IAAMzlC,GACF,MAAMyP,EAAKvP,KAEX,OADcF,EAAG2iB,OAAOhe,OAAS,EACf8K,GAAGi5C,GAAe1oD,GAC9BA,EAAGsmD,QAAUtmD,EAAGoI,KACfpI,EAAGsmD,OAAS72C,GAAGk5C,GAAc3oD,GAAMyP,GAAGm5C,GAAY5oD,GADrByP,GAAGo5C,IAE1C,CAEDF,IAAc3oD,GACV,OAAOoc,CAAI,qDAAqDlc,MAAK8iD,GAAYhjD,KAAMA,EAAGsmD,kBAC7F,CAEDuC,MACI,OAAOzsC,CAAI,0DACd,CAEDssC,IAAe1oD,GACX,MAAMyP,EAAKvP,KACX,OAAOkc,CAAI;;oDAEiC3M,GAAGuzC,GAAYhjD,KAAMA,EAAGoI;;;wBAGpDpI,EAAG2iB;wBACHlT,EAAGs4C;4BACCt4C,EAAGlN;4BACHssC,EAAUp/B,EAAG5L;;;cAIpC,CAEDm/C,IAAYhjD,GACR,OAAOA,EAAGgiD,KAAO5lC,CAAI,6BAA6Bpc,EAAGgiD,mBAAqB,EAC7E,CAED4G,IAAY5oD,GACR,OAAOoc,CAAI;;sBAEG9N,EAAQtO,GAAI;2BACPA,EAAGkE;6BACDlE,EAAGoI;gCACAymC,EAAU3uC,KAAK2D;4BACnBgrC,EAAU7uC,EAAGgiD;4BACbnT,EAAU7uC,EAAGm0C;sCACHtF,EAAU7uC,EAAGoO,QAAU;sCACvBygC,EAAU7uC,EAAGgqB;kCAE9C,CAKDpb,IAASqR,GACL,OAAOic,OAAOK,QAAQtc,GAAMrd,KAAI5C,GAAMgN,OAAO4B,QAAQ5O,EAAI6nD,cAAc1iC,UAC1E,CAED8iC,IAAea,GACX5tC,MAAMsC,SAAStd,KAAK41C,WAAY,WAAW,GAAO,GAC7C5vC,QAAOlG,GAAMA,GAAM8oD,IACnB7hD,SAAQjH,GAAMA,EAAG4gD,SACzB,CAEDt6B,GAAWpa,GACP,MAAMuD,EAAKvP,KACX,GACS,WADDgM,EAAE6K,IAEFtH,EAAGmxC,OAGd,CAEDzB,IAASjzC,GACL8Z,SAASS,QAAQva,GACjB,MAAMuD,EAAKvP,KACLkoD,EAAU34C,GAAGs5C,GAAW78C,GAC9Bk8C,GAASxH,QACLnxC,EAAGq4C,MAAMr4C,EAAGmxC,OACnB,CAEDuH,IAAcj8C,GACV8Z,SAASS,QAAQva,GACbhM,KAAK4nD,MAAM5nD,KAAK0gD,OACvB,CAEDwB,IAAal2C,GACT8Z,SAASS,QAAQva,GACjB,MACMk8C,EADKloD,MACQ6oD,GAAW78C,GADnBhM,MAER+nD,GAAeG,GAClBA,GAASld,MACZ,CAED6d,IAAW78C,GACP,MAAM88C,EAAW98C,EAAEkC,OAAOsR,QAAQ,MAClC,OAAOspC,GAAU/wC,cAAc,UAClC,CAEDiwC,MACI,MAAMz4C,EAAKvP,KACX,IAAKuP,EAAGk7B,OAAQ,OAChB,MAAM7yB,EAAOrI,EAAG+d,aAAa/d,GAAGq3C,IAChC,GAAIr3C,EAAGw5C,UAAW,CACd,MAAMh7C,EAAM,CAAE8uB,UAAW,aACrBttB,EAAGlN,SACH0L,EAAI9G,KAAO,YACX8G,EAAI7G,MAAQ,SAEZ6G,EAAI7G,MAAQ,YACZ6G,EAAI9G,KAAO,QAEfpG,OAAOggB,OAAOjJ,EAAKK,MAAOlK,EACtC,KAAe,CACH6J,EAAKK,MAAM4kB,UAAY,KACvB,MAAM/gB,EAAOvM,GAAGq5C,GAAM7sC,wBAChB7G,EAASpO,OAAOkiD,WAAaltC,EAAK5U,MACxCqI,EAAGlN,QAAU6S,EAAS,EAAI,EACtB3F,EAAGlN,UAASuV,EAAKK,MAAM4kB,UAAe3nB,EAAS,EAAZ,KAC1C,CACJ,CAEG6zC,gBACA,OAAO/oD,KAAKoO,QAAQ85C,OACvB,CAEGU,SACA,OAAO5oD,MAAK8nD,GAASpmD,KACxB,QAGG1B,KAAKmJ,OAAO,UACf,EC9RE,MAAM8/C,yBAAyBtB,cAElC9nD,kBAAoB,CAChBqO,OAAQ,CAAE,EACVlI,OAAQ,CAAE,EACVggB,WAAY,CAAE5lB,KAAMqB,QAAS4M,UAAW,cACxCgV,SAAU,CAAEjjB,KAAMqB,UAGtBoB,cACI8nB,QACA,MAAMpb,EAAKvP,KACXuP,EAAGq4C,MAAO,EACNr4C,GAAG25C,KACH35C,EAAG0N,KAAO,QACV1N,EAAGrB,OAAS,QACZqB,EAAGvJ,OAAS,aACZuJ,EAAG2F,OAAQ,IAElB,CAED0nC,oBACIjyB,MAAMiyB,oBACN,MAAMrtC,EAAKvP,KACXuP,EAAGipC,YAAY1xC,OAAQ,SAAUyI,EAAGmxC,MAAM54C,KAAKyH,IAC1CA,EAAG0N,MAAM1N,GAAG45C,IACpB,CAED1N,eAAex+B,GACXjd,MAAKmpD,IACR,CAEDA,MACI,MAAM55C,EAAKvP,KACL+K,EAAQiQ,MAAMqE,OAAO9P,EAAG65C,cAAgB75C,GAC9C,IAAIykB,EAAUzkB,EAAGrB,OAAS8M,MAAMsC,SAASvS,EAAOwE,EAAGrB,QAAU,CAACnD,GACzDipB,EAAQvvB,SAAQuvB,EAAUhZ,MAAMsC,SAAS5W,SAASuZ,gBAAiB1Q,EAAGrB,SAC3E8lB,EAAQjtB,SAAQmH,GAAUqB,EAAGipC,YAAYtqC,EAAQ,cAAeqB,GAAG85C,GAASvhD,KAAKyH,KACpF,CAED/L,IAAOwI,GACH,MAAMuD,EAAKvP,KACX,OAAOgM,EAAE4zC,eAAe55C,QAAOlG,GAAMA,EAAGiQ,UACnC/J,QAAOlG,GAAMA,EAAGiQ,QAAQR,EAAGvJ,OAASuJ,EAAGvJ,OAASuJ,EAAGrB,SAC3D,CAEDm7C,IAASr9C,GACL,MAAMuD,EAAKvP,KACX,GAAIgM,EAAEsa,UAAY/W,EAAGyW,WAAY,OAEjC,OAAoB,IADPzW,GAAG/L,GAAOwI,GACdvH,QACTqhB,SAASS,QAAQva,GACjBuD,EAAG84C,MAAMr8C,IACF,QAHP,CAIH,CAEGk9C,SACA,MAAyC,aAAlClpD,KAAKu2B,iBAAiBpZ,OAChC,CAQDkrC,MAAMnmD,EAAI,EAAGqU,EAAI,EAAG+xC,GAChB,OAAOtoD,KAAKqjB,UAAmBsH,MAAM09B,MAAMnmD,EAAGqU,EAAG+xC,EACpD,QAGGtoD,KAAKmJ,OAAO,aACf,EC/EE,MAAMmgD,yBAAyBntB,GAEpCt8B,cAAgB6b,CAAG;;;;;;;;;;;;;;;MAiBnB7b,kBAAoB,CAClB0pD,WAAY,IAAKtV,GACjBj4B,MAAO,CAAE5b,KAAMmO,QACf0N,OAAQ,CAAE7b,KAAMmO,QAChBi7C,OAAQ,CAAEjW,WAAYT,UACtB2W,MAAO,CAAElW,WAAYT,WAGvB8T,IAAWt6C,KAAK9L,GAEhBkpD,IAAStb,IACTub,IAAWvb,IACXwb,IAAYxb,IAEZyb,IACAC,IAEAjnD,cACE8nB,QACA,MAAMpb,EAAKvP,KACXuP,EAAGyM,MAAQ,EACXzM,EAAG0M,OAAS,EACZ1M,EAAG+d,aAAa/d,GAAGq3C,IACnBr3C,GAAGs6C,GAAmB,IAAI/R,sBAAsBvoC,EACjD,CAED8tC,aAAa/R,GACXtrC,MAAK6pD,GAAiBt/B,OAAOvqB,MAAK+pD,IAClCp/B,MAAM0yB,aAAa/R,EACpB,CAEDgS,WAAWhS,GACT3gB,MAAM2yB,WAAWhS,GACjB,MAAM/7B,EAAKvP,KACL0tB,EAAUne,GAAGme,GACnBA,EAAQ1R,MAAQzM,EAAGyM,MAAQ,EAAI,GAAGzM,EAAGyM,UAAY,GACjD0R,EAAQzR,OAAS1M,EAAG0M,OAAS,EAAI,GAAG1M,EAAG0M,WAAa,EACrD,CAEDyhC,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI,QAAQuzB,EAAIlgC,GAAGm6C;gBACd/a,EAAUp/B,EAAG0uC;oBACT1uC,GAAG48B;sBACD58B,GAAGy6C;0BACCz6C,GAAGq3C;kBACX1Y,EAAS3+B,EAAGquC;yGAC2EruC,GAAGi6C;aAC/F/Z,EAAIlgC,GAAGo6C,0GAAgHp6C,GAAGk6C;aAC1Hha,EAAIlgC,GAAGq6C;WAEjB,CAEDhM,cACE,MAAMruC,EAAKvP,KAYX,MAXY,IACP2qB,MAAMizB,cACT,qBAAqB,EACrB,oBAAoB,EACpB,aAAcruC,EAAG06C,OACjB,QAAS16C,EAAG06C,OACZ,QAAS16C,EAAG06C,OACZ,mBAAmB,EACnB,CAAC,MAAM16C,EAAGg6C,cAAeh6C,EAAGg6C,WAC5B,CAAC,GAAGh6C,GAAGq3C,OAAa,EAGvB,CAMDlO,YAAY1sC,GACVhM,MAAK8pD,GAAc9pD,MAAK+pD,GAAUhuC,uBACnC,CAEDw8B,YAAYvsC,GACV,MAAMuD,EAAKvP,KACLkV,EAAS3F,GAAGu6C,GAAY7iD,KACxB+U,EAAQzM,GAAGu6C,GAAY9tC,MAEvBkuC,EADMlpD,EAAOwuC,MAAMxjC,EAAE2vB,QAAUzmB,EAAQ,EAAG8G,GAC7BA,EAAS,IAC5BzM,GAAG+e,GAAQ47B,EACZ,CAEGD,aACF,OAAqB,GAAdjqD,KAAKgc,OAA6B,GAAfhc,KAAKic,MAChC,CAEGkuC,cACF,OAAQnqD,KAAKiqD,MACd,CAEGv8B,SACF,OAAO1tB,KAAKstB,aAAattB,MAAK4mD,IAAU3uC,KACzC,CAEGuxC,SACF,OAAOxpD,KAAKwpD,OAASttC,CAAI,eAAelc,MAAKmsC,YAAiB58B,GAAGi6C,iBAAmB,EACrF,CAEGC,SACF,OAAOzpD,KAAKypD,MAAQvtC,CAAI,eAAelc,MAAKmsC,YAAiB58B,GAAGk6C,gBAAkB,EACnF,CAEGQ,SACF,OAAsB,IAAfjqD,KAAKgc,OAA+B,IAAhBhc,KAAKic,MACjC,CAEG8tC,SACF,OAAO/pD,MAAK0pD,GAAOhoD,KACpB,CAEG0oD,SACF,OAAOpqD,MAAK4pD,GAAUloD,KACvB,CAEG2oD,SACF,OAAOrqD,MAAK2pD,GAASjoD,KACtB,CAEDyqC,IAAQngC,GACN,MAAMuD,EAAKvP,KACX,GAAIuP,GAAG06C,GAAS,CACd,MAAMnqD,EAAKkM,EAAEkC,OACbqB,EAAG0M,OAAS1M,EAAG0M,QAAUnc,EAAGmc,OAC5B1M,EAAGyM,MAAQzM,EAAGyM,OAASlc,EAAGkc,KAC3B,CACF,CAEDguC,IAAeh+C,GACb,MAAMuD,EAAKvP,KACXuP,EAAGgX,QAAQva,GACXuD,GAAG+e,KACH/e,GAAGs6C,GAAiB5sB,OACrB,CAED3O,IAAQ47B,EAAM,IACDlqD,MACRqqD,GAAMpyC,MAAM8U,YAAY,gBAAoB,IAAMm9B,EAAT,KADjClqD,MAERoqD,GAAQnyC,MAAM8U,YAAY,gBAAiB,GAAGm9B,KAClD,QAGClqD,KAAKmJ,OAAO,aACb,ECrKI,MAAMmhD,4BAA4BnuB,GAEvCt8B,kBAAoB,CAClB0qD,OAAQ,CAAE,EACVtwB,WAAY,CAAE,GAGhBtxB,KAAS,EAET9F,cACE8nB,OACD,CAEDw1B,QAAQqK,GACN7/B,MAAMw1B,QAAQqK,GACd,MAAMj7C,EAAKvP,KACPuP,EAAGmZ,aAAenZ,EAAG5E,SACvB4E,GAAGyyB,IAEN,CAEGr3B,cACF,OAAO3K,KAAK2f,yBAAyBwc,EACtC,CAEDvwB,WAEE,MAAM2D,EAAKvP,KACL8N,EAAOyB,EAAGoQ,cAEhB,GAAIpQ,GAAG5G,GAAQ,OAEf,IAAIA,EAAQ1H,WAAWsO,EAAG0qB,YAC1B,IAAKtxB,GAAS4G,EAAGg7C,OAAQ,CACvB,MAAMvmD,EAAM8rB,SAAS4B,aAAaniB,EAAGg7C,QAErC5hD,SADqBc,OAAOzF,IACbuL,EAAG0qB,WACnB,CAEGtxB,IACF,IAAIA,EAAMmF,GACVyB,GAAG5G,GAASA,EACZ1H,WAAWsO,EAAG0qB,YAActxB,EAG/B,QAGC3I,KAAKmJ,OAAO,gBACb,ECpDI,MAAMshD,2BAA2BtuB,GAEtCt8B,kBAAoB,CAClBgS,KAAM,CAAE8pC,SAAS,EAAMv7C,KAAMmO,QAC7Bm8C,QAAS,CAAE/O,SAAS,GACpB33C,IAAK,CAAE23C,SAAS,IAGlB94C,cACE8nB,QACA3qB,KAAK2mC,MAAO,EACZ3mC,KAAK0b,IAAM,mFACZ,CAEDgiC,WACE,MAAMnuC,EAAKvP,KACX,IAAMuP,EAAGo7C,YAAap7C,EAAGq7C,OAAS,MAAO,GACzC,MAAM/4C,GAAO,IAAIrQ,MAAOsQ,cACxB,OAAOoK,CAAI,cAAcyyB,EAAUp/B,EAAG0uC,sBAAsB/P,EAAS3+B,EAAGquC,4CAA4CruC,EAAGvL,IAAMuL,EAAGvL,IAAM,sBAAsBuL,EAAGm7C,WAAWn7C,EAAGsC,WAAWA,sBACzL,CAEG84C,gBACF,OAAO3pD,EAAO6F,iBAAiB7G,KAAK0qD,QACrC,CAEGE,aACF,OAAO5pD,EAAO6F,iBAAiB7G,KAAK6R,KACrC,QAGC7R,KAAKmJ,OAAO,eACb,EChBI,MAAM0hD,sBAAsB1uB,GAE/Bt8B,kBAAoB,CAChB43C,QAAS,CAAE5tC,OAAO,GAClBL,IAAK,CAAEmyC,SAAS,GAChB7xB,OAAQ,CAAE6xB,SAAS,GACnBtS,KAAM,CAAEsS,SAAS,GACjBxS,OAAQ,CAAEwS,SAAS,GACnBvS,OAAQ,CAAEuS,SAAS,GACnBxjC,MAAO,CAAE/X,KAAMmO,OAAQotC,SAAS,GAChCrS,KAAM,CAAElpC,KAAMmO,OAAQotC,SAAS,GAC/B31C,OAAQ,CAAE5F,KAAM2C,MAAO44C,SAAS,GAChCniC,KAAM,CAAEpZ,KAAM2C,MAAO44C,SAAS,GAC9Bv7C,KAAM,CAAE,EACR0qD,SAAU,CAAE1qD,KAAMqB,SAClBspD,YAAa,CAAE3qD,KAAMmO,OAAQotC,SAAS,EAAMpI,WAAYN,SAG5DrrC,GAAO,EACPojD,IAAU,KACVC,IAAW,KACXC,IAAe,KACfC,IAAgB,KAEhBtoD,cACI8nB,QACA,MAAMpb,EAAKvP,KAiBX,GAhBAuP,EAAGkoC,QAAUloC,EAAGkoC,SAAWloC,EAAG/O,GAC9B+O,EAAGw7C,YAAc,EACjBx7C,EAAGu7C,UAAW,EACdv7C,EAAGo3B,MAAO,EACVp3B,EAAGvJ,OAAS,GACZuJ,EAAGiK,KAAO,GACVjK,EAAG4I,MAAQ,EACX5I,EAAG+5B,KAAO,EACV/5B,EAAG/F,IAAM,GACT+F,EAAGnP,KAAO,SACVmP,EAAG85B,KAAO,QACV95B,EAAG45B,OAAS,MACZ55B,EAAG65B,OAAS,OACR75B,GAAG25C,KACH35C,EAAG0N,KAAO,UAET1N,EAAGivC,cAAgBjvC,EAAG/O,GAAI,MAAM,IAAII,MAAM,qCAC/Co7B,OAAOE,SAAS3sB,EAAIA,EAAG4N,QAC1B,CAEDy/B,oBACIjyB,MAAMiyB,oBACN,MAAMrtC,EAAKvP,KACXuP,EAAGkoC,QAAUloC,EAAGkoC,SAAWloC,EAAG/O,GAC9B,MAAM4qD,EAAa77C,EAAGivC,aAAwC,IAAzBjvC,EAAGuI,kBAA0BvI,EAAGgnB,gBAAkBhnB,EACvFA,GAAGy7C,GAAUhvB,OAAOttB,QAAQ08C,EAAY10C,OAAO20C,YAC/C97C,GAAG+7C,IAAU,GACb/7C,GAAG+7C,IAAU,EAChB,CAEDvO,uBACIpyB,MAAMoyB,uBACN,MAAMxtC,EAAKvP,KACXuP,GAAG07C,IAAUxpB,UACblyB,GAAG07C,IAAUziB,gBAAgBj5B,GAC7BA,GAAG27C,GAAe,KAClB37C,GAAG47C,GAAgB,KACnBnjD,aAAauH,GAAG3H,EACnB,CAEDy1C,eACI,MAAM9tC,EAAKvP,KACXuP,GAAG07C,GAAW9iB,EAAoBJ,WAAWx4B,EAAGnP,KAAMmP,EAAGkoC,SAAS,GAC9DloC,GAAGy7C,IAASvmD,OAAS,GAAG8K,GAAG07C,IAAU3iB,aAAa/4B,GACtDA,GAAGg8C,IAAe,EACrB,CAEDjO,WAAWhS,GACP3gB,MAAM2yB,WAAWhS,GACjB,MAAM/7B,EAAKvP,KACXuP,GAAGg8C,KACCjgB,EAAQ9Q,IAAI,gBAAgBjrB,EAAGyqC,SAASzqC,EAAGw7C,YAClD,CAEDQ,IAAej6C,GAAQ,GACnB,MAAM/B,EAAKvP,KACNuP,GAAG07C,KAER17C,GAAG07C,GAASzhD,IAAM+F,EAAG/F,IACrB+F,GAAG07C,GAASp0C,IAAMtH,EAAGsH,IACrBtH,GAAG07C,GAAS5hB,KAAO95B,EAAG85B,KACtB95B,GAAG07C,GAASnhC,OAASva,EAAGua,OACxBva,GAAG07C,GAAS9hB,OAAS55B,EAAG45B,OACxB55B,GAAG07C,GAAS7hB,OAAS75B,EAAG65B,OAExB75B,GAAG07C,GAAS9yC,MAAQ5I,EAAG4I,MACvB5I,GAAG07C,GAAS3hB,KAAO/5B,EAAG+5B,KACtB/5B,GAAG07C,GAASzxC,KAAOjK,EAAGi8C,WAAWj8C,EAAGiK,MACpCjK,GAAG07C,GAASjlD,OAASuJ,EAAGk8C,aAAal8C,EAAGvJ,QACpCuJ,EAAGu7C,UAAUv7C,EAAGg7B,OAChBj5B,IACA/B,GAAG07C,GAASzpB,SAERjyB,EAAGu7C,UACHv7C,EAAG8sC,gBAAgB9R,QAG9B,CAEGmhB,cACA,OAAO1rD,KAAKoO,QAAQu9C,OACvB,CAEGV,cACA,OAAOjrD,MAAKirD,EACf,CAEGxiB,mBACA,OAAuC,IAAhCzoC,MAAKirD,IAAUxiB,YACzB,CAEGqB,gBACA,OAAO9pC,MAAKirD,IAAUnhB,SACzB,CAEG8hB,eACA,MAA8B,UAAvB5rD,MAAKirD,IAAU7qD,IACzB,CAEGkqC,WAAO1oC,GACH5B,MAAKirD,KAAUjrD,MAAKirD,GAAS3gB,OAAS1oC,EAC7C,CAEGiV,UACA,OAAO7W,MAAKgrD,GAAQhlD,QAAOlD,GAAKA,EAAE+T,MAAKnU,KAAII,GAAKA,EAAEoF,OAAM0N,OAAS,IACpE,CAMD61C,aAAa7pD,GAET,OADAA,EAAM5B,MAAK6rD,GAAUjqD,GACdmB,MAAMC,QAAQpB,GAAOA,EAAM,EACrC,CAMD4pD,WAAW5pD,GAEP,IAAI4X,EACJ,GAAmB,iBAFnB5X,EAAM5B,MAAK6rD,GAAUjqD,IAGjB4X,EAAO,CAAC,CAAEI,IAAKhY,SACZ,GAAImB,MAAMC,QAAQpB,GACrB4X,EAAO5X,OACJ,GAAIZ,EAAOmC,SAASvB,GAAM,CAC7B,MAAM+X,EAAMpW,KAAKyS,IAAIpU,GACrB4X,EAAO,IAAIzW,MAAM4W,GACjBH,EAAKG,EAAM,GAAK,CAAED,IAAK9X,EAC1B,CACD,OAAO4X,GAAQ,EAClB,CAEDwgC,SAAS3yC,EAAO,GACZ,MAAMkI,EAAKvP,KACXqH,EAA4B,IAArBrG,EAAOsM,MAAMjG,GACpBwjB,cAActb,GAAG3H,GACbP,EAAO,IAAGkI,GAAG3H,EAAOsmB,aAAY,KAChC3e,EAAGg7B,KAAKh7B,EAAG,GACZlI,GACN,CAEDkjC,OACI,OAAOvqC,MAAKkrD,IACf,CAEDhU,MAAMjvC,EAAMmpB,GAAS,GACjB,OAAOpxB,MAAKmrD,GAAcljD,EAAMmpB,EACnC,CAEDY,OACI,OAAOhyB,KAAKuqC,MACf,CAEDuhB,KAAK7jD,GACD,OAAOjI,KAAKk3C,MAAMjvC,EACrB,CAKGid,eACA,OAAOllB,MAAKirD,IAAU/lC,QACzB,CAOD6jB,YAAYnnC,GACR,OAAO5B,MAAKirD,IAAUliB,YAAYnnC,EACrC,CAMD2lC,eAAe3lC,GACX,OAAO5B,MAAKirD,IAAU1jB,eAAe3lC,EACxC,CAKDonC,cAAc/gC,GACV,OAAOjI,MAAKirD,IAAUjiB,eACzB,CAKD2O,WAAW31C,GACHhC,KAAK0rD,SAAS9rD,MAAMe,IAAIX,KAAM,cAAgByF,KAAKiI,UAAU1L,GACpE,CAMD41C,YAAY51C,GACJhC,KAAK0rD,SAAS9rD,MAAMe,IAAIX,KAAM,eAAiByF,KAAKiI,UAAU1L,GACrE,CAMD4mC,SAAS3gC,GACL,MAAMsH,EAAKvP,KACN+C,MAAMC,QAAQiF,KAAOA,EAAO,CAACA,IAClCA,EAAKlB,SAAQ8T,IACTtL,GAAGy7C,GAAQjkD,SAAQ8Y,IACf,IAAIje,EAAMiZ,EAAEgF,EAAE3X,MACTlH,EAAOyC,OAAO7B,KACfA,EAAM8U,OAAOxR,OAAO2a,EAAGje,GACvBiZ,EAAEgF,EAAE3X,MAAQtG,EACf,GACH,GAET,CAMDi2C,YAAY71C,GACJhC,KAAK0rD,SAAS9rD,MAAMe,IAAIX,KAAM,eAAiByF,KAAKiI,UAAU1L,GACrE,CAED+pD,MAEI,IADW/rD,KACJ8pC,YADI9pC,KACYyoC,aACvB,MAAM,IAAI7nC,MAAM,gCACnB,CAED0qD,IAAU/gB,GAAO,GACb,MAAMh7B,EAAKvP,KACPuqC,EACAh7B,GAAG27C,GAAehhD,EAAW8hD,aAAaz8C,GAAG08C,GAAsB18C,GAEnEA,GAAG47C,GAAgBjhD,EAAW8hD,aAAaz8C,GAAG28C,GAAuB38C,EAE5E,CAED08C,MAGI,OAFWjsD,MACRsrD,IAAU,GADFtrD,MAEDmsD,IAAU,EACvB,CAEDD,IAAsBjkD,EAAMmpB,GAGxB,OAFWpxB,MACRsrD,IAAU,GADFtrD,MAEDmsD,IAAU,EAAOlkD,EAAMmpB,EACpC,CAED+6B,IAAU5hB,GAAO,EAAMtiC,EAAMmpB,GACzB,MAAM7hB,EAAKvP,KAEX,OADAuP,GAAGw8C,KACCxhB,EAAah7B,GAAG07C,IAAU1gB,KAAKh7B,IAC9B6hB,GAAQ7hB,GAAG07C,GAASzhC,QAClBja,GAAG07C,IAAU/T,MAAM3nC,EAAItH,GACjC,CAED4jD,IAAUjqD,GACN,OAAOZ,EAAOuE,aAAa3D,GAAO6D,KAAKC,MAAM9D,GAAOA,CACvD,CAEGsnD,SACA,MAAyC,aAAlClpD,KAAKu2B,iBAAiBpZ,OAChC,QAGGnd,KAAKmJ,OAAO,kBACf,EC3TE,MAAMijD,wBAAwBjwB,GAEnCt8B,WAAa,oBACbA,kBAAoB,MACpBA,iBAAmB,0BACnBA,aAAe,MACfA,cAAgB,SAChBA,eAAiB,KAEjBA,UAAgB,GAEhBA,cAAgB6b,CAAG;;;;;;;;;;OAYnB7b,kBAAoB,CAElBwsD,SAAU,CAAE1Q,SAAS,EAAMv7C,KAAMqB,SACjCgpC,OAAQ,CAAEkR,SAAS,EAAMv7C,KAAMqB,SAC/BomB,WAAY,CAAE8zB,SAAS,EAAMv7C,KAAMqB,SACnCu/C,SAAU,CAAErF,SAAS,EAAMv7C,KAAMqB,SACjC6qD,UAAW,CAAE3Q,SAAS,EAAMv7C,KAAMqB,SAClC4hB,SAAU,CAAEs4B,SAAS,EAAMv7C,KAAMqB,SAEjC+T,KAAMA,GAENsN,MAAO,CAAE64B,SAAS,GAClB91B,QAAS,CAAE81B,SAAS,GACpB4Q,WAAY,CAAE5Q,SAAS,EAAMttC,UAAW,eACxCm+C,YAAa,CAAE7Q,SAAS,EAAMttC,UAAW,gBAEzCo+C,SAAU,CAAE9Q,SAAS,EAAMv7C,KAAMmO,OAAQF,UAAW,aACpDq+C,YAAa,CAAE/Q,SAAS,EAAMttC,UAAW,gBAEzCs+C,WAAY,CAAEhR,SAAS,EAAMttC,UAAW,eACxCu+C,YAAa,CAAEjR,SAAS,EAAMttC,UAAW,gBAEzCw+C,YAAa,CAAEx+C,UAAW,gBAC1By+C,aAAc,CAAEz+C,UAAW,iBAE3B0+C,UAAW,CAAE1+C,UAAW,cACxB2+C,WAAY,CAAE3+C,UAAW,eAEzBm4C,SAAU,CAAEn4C,UAAW,aACvBkyC,UAAW,CAAElyC,UAAW,cACxBq4C,UAAW,CAAEr4C,UAAW,cACxBmyC,QAAS,CAAEnyC,UAAW,YACtB4+C,WAAY,CAAE5+C,UAAW,gBAI3B6+C,KAAQ,EACRtG,IAAWt6C,KAAK9L,GAChB2sD,IAAa/e,IACbgf,IAAiBhf,IACjBif,IAAgBjf,IAEhBvrC,cACE8nB,QACA,MAAMpb,EAAKvP,KACL2I,EAAQyjD,gBACd78C,EAAGk7B,QAAS,EACZl7B,EAAG88C,UAAW,EACd98C,EAAGsY,YAAa,EAChBtY,EAAGyxC,UAAW,EACdzxC,EAAG+8C,WAAY,EACf/8C,EAAG8T,UAAW,EACd9T,EAAG8N,QAAS,EACZ9N,EAAGssC,SAAU,EAEbtsC,EAAGk9C,SAAW,EACdl9C,EAAGmM,IAAM/S,EAAM2kD,IACf/9C,EAAGi3C,SAAW79C,EAAM4kD,UACpBh+C,EAAGgxC,UAAY53C,EAAM6kD,WACrBj+C,EAAGm9C,YAAc/jD,EAAM8kD,MACvBl+C,EAAGg9C,WAAa5jD,EAAM+kD,OACtBn+C,EAAGi9C,YAAc7jD,EAAMglD,QACvBp+C,EAAGs9C,YAAc,YACjBt9C,EAAGu9C,aAAe,UAClBv9C,EAAG+d,aAAa/d,GAAGq3C,GACpB,CAED7J,uBACEpyB,MAAMoyB,uBACNqP,iBAAgBwB,IACjB,CAEDvQ,eACE1yB,MAAM0yB,eACNr9C,MAAKktD,IAAQ,CACd,CAEDW,cAAcviB,GAEZ,OAAqB,IADVtrC,KACDyqC,QADCzqC,MACqBktD,EACjC,CAEDhQ,aAAa5R,GACX,MAAM/7B,EAAKvP,KACL8tD,GAAwB,IAAdv+C,EAAGk7B,QAAmBl7B,GAAG29C,GAazC,OAXKY,GACH9sD,EAAOwG,QAAQ,KAAM+nB,MAAK,KACxBxjB,gBAAe,MACiB,IAAdwD,EAAGk7B,QAAmBl7B,GAAG29C,KAEvC39C,GAAG29C,IAAQ,EACP39C,EAAGmZ,aAAanZ,EAAGmoC,gBACxB,GACD,IAGCoW,CACR,CAED3N,QAAQ7U,GACN3gB,MAAMw1B,QAAQ7U,GACVA,EAAQ9Q,IAAI,WACdx6B,MAAK+tD,IAER,CAEDA,MACE,MAAMx+C,EAAKvP,KACX,IAAI6J,EAAQ,KACR0F,EAAGk7B,QACL2hB,iBAAgB4B,GAAOp8C,KAAKrC,GAC5B1F,EAAQ,UACJ0F,EAAG88C,SACL98C,GAAG0+C,IAASjjB,OAEZz7B,GAAG0+C,IAASC,YAEd3+C,GAAG4+C,MAAcpjB,UAEjBlhC,EAAQ,UACJ0F,EAAG6+C,WAAUnrC,SAASC,KAAO,IACjCkpC,iBAAgB4B,GAAOp4C,MACvBrG,GAAG0+C,IAASvN,SAEdnxC,EAAGm5B,QAAO,GAAM,EAAO7+B,EACxB,CAEDwkD,MACE,MAAM9+C,EAAKvP,KACX,OAAKuP,EAAGyxC,SACD9kC,CAAI,eAAeuzB,EAAIlgC,GAAG69C;gBACrB79C,GAAG++C,GAAWxmD,KAAKyH;cACrBo/B,EAAUp/B,EAAGq9C;kBACTje,EAAUp/B,EAAG5L;mBACZ4L,EAAG8T;aACTsrB,EAAUp/B,EAAGy9C;eACXre,EAAUp/B,EAAGu9C;eACbv9C,EAAGi9C;oBARW,EAU1B,CAED+B,MACE,MAAMh/C,EAAKvP,KACX,OAAKuP,EAAGsY,WACD3L,CAAI,cAAcuzB,EAAIlgC,GAAG89C;gBACpB99C,GAAGi/C,GAAU1mD,KAAKyH;cACpBo/B,EAAUp/B,EAAGo9C;kBACThe,EAAUp/B,EAAG5L;aAClBgrC,EAAUp/B,EAAGw9C;eACXpe,EAAUp/B,EAAGs9C;eACbt9C,EAAGg9C;oBAPa,EAS5B,CAEDkC,MACE,MAAMl/C,EAAKvP,KAEX,OADiBuP,EAAGsY,YAActY,EAAGyxC,SAE9B9kC,CAAI,mEAAmE3M,EAAGm9C,eAAen9C,EAAGm3C;;QAE/Fn3C,GAAGg/C,cAAyBh/C,GAAG8+C;cAHb,EAKvB,CAEDK,MACE,MAAMn/C,EAAKvP,KACL0b,EAAM,CACVizC,MAAO,EACP,CAAC,KAAKp/C,EAAG6uB,WAAY7uB,EAAG6uB,SAAW,EACnC,CAAC,KAAK7uB,EAAG4vB,UAAW5vB,EAAG4vB,QAAU,GAGnC,OADA5vB,EAAG09C,YAAYzpD,MAAM,UAAUuD,SAAQxF,GAAKma,EAAIna,IAAG,IAC5Cma,CACR,CAEDkiC,cACE,MAAMruC,EAAKvP,KACLwV,EAAOo/B,GAAUrlC,EAAGiG,MAY1B,MAVY,CACVy4C,QAAU,EACV,OAAO,EACPpQ,OAAUtuC,EAAGusC,SACb,YAAavsC,EAAGusC,SAChB,YAAavsC,EAAG8N,OAChBw+B,QAAWtsC,EAAGssC,QACd,CAACtsC,GAAGq3C,KAAW,EACf,CAAC,SAASpxC,OAASA,EAGtB,CAEDkoC,WACE,MAAMnuC,EAAKvP,KACL2tB,EAAS,CACb,YAAape,EAAGk9C,SAAW,EAAI,GAAGl9C,EAAGk9C,kBAAe1nD,GAGtD,OADAwK,EAAG+d,aAAa/d,GAAGq3C,GAAUj5B,GACtBzR,CAAI;gCACiBuzB,EAAIlgC,GAAG49C;mBACpBxe,EAAUp/B,EAAG0uC;sBACV1uC,GAAGi/C,GAAU1mD,KAAKyH;uBACjBA,GAAGi/C,GAAU1mD,KAAKyH;wBACjBA,GAAG6W,EAAWte,KAAKyH;qBACtBA,GAAGq/C,GAAQ9mD,KAAKyH;wBACbA,GAAG++C,GAAWxmD,KAAKyH;uBACpBA,GAAGs/C,GAAU/mD,KAAKyH;qBACpB2+B,EAAS3+B,EAAGquC;0BACP1P,EAAS3+B,GAAGm/C;2DACqBn/C,EAAGgxC;2CACnBhxC,EAAGi3C;yCACLj3C,EAAGstB,UAAUttB,EAAGuT;;;wCAGjBvT,EAAGixC;;oBAEvBjxC,EAAGstB,UAAUttB,EAAGsW;oBAChBtW,EAAGouC;;;oBAGHpuC,GAAGk/C;;;;;mBAMpB,CAUDK,KAAKhsC,EAAQ,GAAI+C,EAAU,GAAIm7B,GAAW,EAAOn5B,GAAa,GAC5D,MAAMtY,EAAKvP,KAOX,GANAuP,EAAGuT,MAAQA,EACXvT,EAAGsW,QAAUA,EACbtW,EAAGyxC,SAAWA,EACdzxC,EAAGsY,WAAaA,EAChBtY,EAAG+8C,UAAYzkC,EACftY,EAAGy7B,OACCgW,GAAYn5B,EAAY,OAAOtY,EAAGyuC,UAAU,eACjD,CAED+Q,QAAQjsC,EAAQ,GAAI+C,EAAU,IAC5B,OAAO7lB,KAAK8uD,KAAKhsC,EAAO+C,GAAS,GAAM,EACxC,CAEDmpC,OAAOlsC,EAAQ,GAAI+C,EAAU,IAC3B,OAAO7lB,KAAK8uD,KAAKhsC,EAAO+C,GAAS,GAAM,EACxC,CAEDoX,MAAMh1B,EAAMgP,EAAQ,GAClBA,EAAQjW,EAAOsM,MAAM2J,EAAO,GACjBjX,KACRivD,OAAOloD,WAAUmoD,IAAOA,EAAEjyB,QAASiyB,EAAEjnD,KAAOA,CAAI,IACnD,MAAMknD,EAFKnvD,KAEImvD,IACXA,GAAOl4C,GAAS,IAAGk4C,EAAIl4C,MAAQA,EACpC,CAED+zB,OACEhrC,KAAKyqC,QAAS,CACf,CAEDiW,QACE1gD,KAAKyqC,QAAS,CACf,CAEDn8B,SACEtO,KAAKyqC,QAAUzqC,KAAKyqC,MACrB,CAMG2jB,eACF,OAAOptD,EAAOgM,OAAOhN,KAAKoO,QAAQ4nB,SACnC,CAEGjB,WACF,OAAO/0B,KAAK4J,MAAM,WAAW,GAAM,EACpC,CAEGqlD,YACF,OAAOjvD,KAAKsd,SAAS,WAAW,GAAM,EACvC,CAEG6xC,UACF,OAAOnvD,KAAK4J,MAAM,UAAU,GAAM,EACnC,CAEGqkD,SACF,OAAOjuD,MAAKmtD,GAAWzrD,KACxB,CAEG0tD,SACF,OAAOpvD,MAAKotD,GAAe1rD,KAC5B,CAEG2tD,SACF,OAAOrvD,MAAKqtD,GAAc3rD,KAC3B,CAMDysD,MACE,MAAM5+C,EAAKvP,KACL+0B,EAAOxlB,EAAG+N,SAAStC,MAAMs0C,aAAa,GAAMtpD,QAAOlG,GAAMkb,MAAMu0C,UAAUzvD,KAAKgQ,QACpF,OAAIilB,IACAxlB,EAAGsY,WAAmBtY,GAAG8/C,GACzB9/C,EAAGyxC,SAAiBzxC,GAAG6/C,GACpB7/C,EACR,CAED3D,SAAiBI,GACf,MAAMuD,EAAKvP,KACX,GAAIuP,EAAG8T,SAAU,cACC5b,QAAQmJ,IAAIrB,EAAG0/C,OAAOvsD,OAAMqyB,GAAQA,EAAK2tB,aACnDnrC,SAAQ,GAAS,GAAGhI,EAAGmxC,OAChC,CAED8N,IAAUxiD,GACGhM,KACR0gD,OACJ,CAEDt6B,GAAWpa,GACT,MAAMuD,EAAKvP,KACG,WAAVgM,EAAE6K,MACJiP,SAASS,QAAQva,IACbuD,EAAGsY,YAActY,EAAG+8C,YACtB/8C,EAAGmxC,QAGR,CAMDkO,IAAQ5iD,GACN,IAAIoM,GAAM,EACV,MAAM7I,EAAKvP,KACLiI,EAAO+D,EAAE4Z,OACf,OAAQ3d,EAAK7H,MACX,IAAK,SACHgY,EAAM7I,EAAG2qB,KAAK,OAAQjyB,EAAKA,MAAM,GAAO,GAAO,GAC1CmQ,GAAK0N,SAASS,QAAQva,GAE3B,MACF,IAAK,QACHuD,EAAG8T,UAAyB,IAAdpb,EAAKA,KAGvB,OAAOmQ,CACR,CAEDy2C,IAAU7iD,GAET,CAEDnM,YACEusD,iBAAgB4B,GAAS5B,iBAAgB4B,GAAOhoD,QAAOzE,GAAKA,EAAEmnB,aAC/D,CAKUlT,kBACT,OAAO42C,iBAAgB4B,GAAOvpD,MAC/B,CAEUs5B,iBACTquB,iBAAgBwB,KAChB,MAAMp4C,EAAO42C,gBAAgB52C,KAC7B,OAAgB,IAATA,EAAa,KAAO42C,iBAAgB4B,GAAOx4C,EAAO,EAC1D,CAEUi1B,oBAET,OADA2hB,iBAAgBwB,KACT7qD,MAAMmI,KAAKkhD,iBAAgB4B,GACnC,QAGChuD,KAAKmJ,OAAO,YACb,EClaI,MAAMqmD,wBAAwBrzB,GAEnCt8B,kBAAoB,CAClBwgD,UAAW,CAAE1E,SAAS,EAAMv7C,KAAMqB,SAClCu/C,SAAU,CAAErF,SAAS,EAAMv7C,KAAMqB,SACjCguD,SAAU,CAAE9T,SAAS,EAAMv7C,KAAMqB,SACjC6qC,SAAU,CAAEqP,SAAS,EAAMv7C,KAAMqB,SACjCiuD,OAAQ,CAAE/T,SAAS,EAAMv7C,KAAMqB,SAE/B4B,IAAK,CAAEs4C,SAAS,EAAMv7C,KAAMmO,QAC5BjL,IAAK,CAAEq4C,SAAS,GAChBgU,QAAS,CAAEhU,SAAS,EAAMv7C,KAAMmO,QAChC2Q,UAAW,IAAIA,GAEf0wC,WAAY,CAAEjU,SAAS,GACvB7kB,SAAU,CAAE6kB,SAAS,EAAMv7C,KAAMmO,QAEjCuU,MAAO,CAAE64B,SAAS,GAElB6K,SAAU,CAAE7K,SAAS,EAAMttC,UAAW,aACtCwhD,QAAS,CAAElU,SAAS,EAAMttC,UAAW,YACrCmyC,QAAS,CAAE7E,SAAS,EAAMttC,UAAW,aAGvCxL,cACE8nB,QACA,MAAMpb,EAAKvP,KACXuP,EAAG2P,UAAY,QACf3P,EAAGi3C,SAAW,OACdj3C,EAAGqgD,WAAa,SAChBrgD,EAAGunB,SAAW,GACdvnB,EAAGlM,IAAM,EACTkM,EAAGjM,IAAM,OACTiM,EAAGogD,QAAU,EACbpgD,EAAGY,GAAG,aAAcZ,GAAGugD,GAAShoD,KAAKyH,IACrCA,EAAGY,GAAG,aAAcZ,GAAGwgD,GAASjoD,KAAKyH,GACtC,CAEDmuC,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI,GAAGm0B,EAAW9gC,GAAG0I;8BACF02B,EAAUp/B,EAAG0uC;8CACG/P,EAAS3+B,EAAGquC;QAClDruC,GAAG62C;oCACyB72C,EAAGixC;UAC7BjxC,EAAGouC;;;YAGDpuC,GAAGkgD,IACZ,CAED7R,cACE,MAAMruC,EAAKvP,KAQX,MAPY,IACP2qB,MAAMizB,cACTwD,MAAQ,EACR,aAAe7xC,EAAG+8B,SAClB,eAAiB/8B,EAAG+8B,SACpB,CAAC,aAAa/8B,EAAG2P,aAAc3P,EAAG2P,UAGrC,CAEGjH,SACF,MAAM1I,EAAKvP,KACL++B,EAAMxvB,EAAGi4C,aAAe,QAAU,SACxC,MAAO,qDAEkBzoB,6CACAxvB,EAAGunB,6DACIvnB,EAAGqgD,6DAG7B7wB,OAASxvB,EAAGjM,MAAMtC,EAAOmC,SAASoM,EAAGjM,KAAO,KAAK,oDAGnDy7B,OAASxvB,EAAGlM,MAAMrC,EAAOmC,SAASoM,EAAGlM,KAAO,KAAK,yCAGtD,CAEGosD,SACF,MAAMlgD,EAAKvP,KACX,OAAKuP,EAAGkgD,SACDvzC,CAAI,uCAAuC3M,EAAG+8B,SAAW,OAAS,wBAAwB/8B,EAAGmxC,gBAD3E,EAE1B,CAEGY,SAEF,OADWthD,KACDghD,SAAW9kC,CAAI,8DADdlc,KAC+E0gD,mBAAqB,EAChH,CAEG59B,SACF,MAAMvT,EAAKvP,KACX,OAAOuP,EAAGuT,MAAQ5G,CAAI,+BAA+B3M,EAAGi3C,aAAaj3C,EAAGstB,UAAUttB,EAAGuT,eAAiB,EACvG,CAEGsjC,SACF,MAAM72C,EAAKvP,KACX,OAAOuP,GAAGygD,GAAa9zC,CAAI,gCAAgC3M,EAAGsgD,gCAAgCtgD,GAAGuT,KAASvT,GAAG+xC,kBAAyB,EACvI,CAEG2O,SACF,OAAOjwD,KAAK+X,cAAc,mBAAmB,GAAO,EACrD,CAEGi4C,SACF,OAAOhwD,KAAK8iB,OAAS9iB,KAAKghD,UAAYhhD,MAAKiwD,EAC5C,CAEDvnB,IAAQ9mC,GACK5B,KACRssC,SAAkB,GAAP1qC,EADH5B,KAER0oC,QACJ,CAEDonB,MACa9vD,KACJqgD,WADIrgD,KACU0gD,OACtB,CAEDqP,MACa/vD,KACJqD,IAAM,GADFrD,KACQgrC,MACpB,CAEDA,OACEhrC,MAAK0oC,IAAQ,EACd,CAEDgY,QACE1gD,MAAK0oC,IAAQ,EACd,CAEDp6B,SACEtO,MAAK0oC,IAAS1oC,KAAKssC,SACpB,CAEGkb,mBACF,OAAQxnD,KAAK6mD,UACd,CAEGA,iBACF,OAAOpS,eAAeoS,WAAW7mD,KAAKkf,UACvC,QAGClf,KAAKmJ,OAAO,YACb,EC1II,MAAM+mD,0BAA0BvI,cAEnC9nD,kBAAoB,CAChBiiD,KAAM,CAAE,EACRt7C,KAAM,IAAIytC,GACVA,MAAO,IAAIA,GACXz+B,KAAM,CAAE,EACRsN,MAAO,CAAE,EACTi/B,QAAS,CAAE,EACX3+B,MAAO,CAAE,EACT+2B,OAAQ,CAAC/5C,KAAKqB,UAGlBoB,cACI8nB,QACA3qB,KAAK4nD,MAAO,CACf,CAEDlK,WAEI,OAAOxhC,CAAI,+BAA+ByyB,EAD/B3uC,KAC4Ci+C;kBAD5Cj+C,MAEEmwD;kBACHxlC,MAAM+yB;mBAEnB,CAED0S,MACI,MAAM7gD,EAAKvP,KAQX,MAPY,IACL2qB,MAAMizB,cACTyS,KAAO,EACP,CAAC,OAAO9gD,EAAG0kC,WAAW1kC,EAAG0kC,MACzB,mBAAoB1kC,EAAG4qC,OACvB,eAAgB,EAGvB,CAEDgW,MACI,MAAM5gD,EAAKvP,KACX,OAAOkc,CAAI,iBAAiBo2B,EAAO/iC,GAAG6gD;;oBAE1BzhB,EAAUp/B,EAAGuyC;oBACbnT,EAAUp/B,EAAG/I;oBACbmoC,EAAUp/B,EAAGiG;qBACZm5B,EAAUp/B,EAAGuT;uBACX6rB,EAAUp/B,EAAGwyC;uBACbxyC,EAAGjB;uBAErB,QAGGtO,KAAKmJ,OAAO,cACf,EC7DE,MAAMmnD,uBAAuBn0B,GAElCt8B,yBAA2B,CAAEwpC,KAAM,UAEnCxpC,aAAe6b,CAAG;;;;OAMlB7b,kBAAoB,CAClB0wD,KAAM,CAAE5U,SAAS,GACjB6U,OAAQ,CAAE7U,SAAS,GACnB8U,IAAK,CAAErwD,KAAMqB,UAGf8uD,IACAC,IAEA3tD,cACE8nB,OACD,CAED2yB,WAAWkN,GACT7/B,MAAM2yB,WAAWkN,GACjBxqD,MAAK0wD,KACL1wD,MAAK2wD,IACN,CAEDjT,WACE,OAAOxhC,CAAI,GAAGm0B,EAAWrwC,MAAKiY,iBAAqBjY,MAAKi/C,iCAAuCj/C,MAAKuwD,qBAAwBvwD,MAAKwwD,4BAClI,CAEGv4C,SACF,MAAO,iIACR,CAEGjU,SACF,MAAO,YAAYhD,EAAOqB,QAAQrC,KAAKoO,QAAQmiD,SAASvvD,EAAOqB,QAAQrC,KAAKoO,QAAQoiD,SACrF,CAEDE,MACE,MAAMnhD,EAAKvP,KACLoO,EAAUmB,EAAGnB,QACfmB,EAAGghD,OACLhhD,GAAGghD,GAAQniD,EAAQmiD,MAAQvvD,EAAOqB,QAAQkN,EAAGghD,MACzChhD,EAAGkhD,MAAKriD,EAAQmiD,KAAOhhD,GAAGghD,IAC9BhhD,EAAGghD,KAAO,GAEb,CAEDI,MACE,MAAMphD,EAAKvP,KACLoO,EAAUmB,EAAGnB,QACfmB,EAAGihD,SACLjhD,GAAGihD,GAAUpiD,EAAQoiD,QAAUxvD,EAAOqB,QAAQkN,EAAGihD,QAC7CjhD,EAAGkhD,MAAKriD,EAAQoiD,OAASjhD,GAAGihD,IAChCjhD,EAAGihD,OAAS,GAEf,CAEDvR,IAASjzC,GACIhM,KACRumB,QAAQva,GACXlF,OAAOmc,SAAS1a,KAFLvI,MAEegE,EAE3B,QAGChE,KAAKmJ,OAAO,WACb,ECtEI,MAAMynD,sBAAsBz0B,GAEjCt8B,kBAAoB,CAClB43C,QAAS,CAAE,EACXxvC,KAAM,CAAE7H,KAAMS,QACdwiB,SAAU,CAAEs4B,SAAS,EAAMv7C,KAAMqB,SAEjCuC,IAAK,CAAE23C,SAAS,GAChBzzC,KAAM,CAAEyzC,SAAS,GACjBvsB,IAAK,CAAEusB,SAAS,GAChBkV,cAAe,CAAElV,SAAS,EAAMttC,UAAW,kBAC3CilC,eAAgB,CAAEqI,SAAS,GAC3BlI,aAAc,CAAEkI,SAAS,GAGzBmV,SAAU,CAAEnV,SAAS,EAAMv7C,KAAMqB,SACjCw6B,UAAW,CAAE0f,SAAS,EAAMv7C,KAAMqB,SAClCsvD,WAAY,CAAEpV,SAAS,EAAMv7C,KAAMqB,SACnCuvD,aAAc,CAAErV,SAAS,EAAMv7C,KAAMqB,SACrCwvD,WAAY,CAAEtV,SAAS,EAAMv7C,KAAMqB,SAEnCqoB,OAAQ,CAAE6xB,SAAS,GACnBuV,QAAS,CAAEvV,SAAS,GACpB5pB,OAAQ,CAAE4pB,SAAS,GACnBwV,WAAY,CAAExV,SAAS,EAAMv7C,KAAMqB,SACnCyM,OAAQ,CAAEytC,SAAS,GAEnByV,MAAO,CAAEzV,SAAS,EAAMv7C,KAAMqB,SAC9B4vD,KAAM,CAAE1V,SAAS,EAAMv7C,KAAMqB,SAC7B+F,QAAS,CAAEm0C,SAAS,EAAMv7C,KAAMmO,SAGlC+iD,IAAWljB,IACXmjB,SAAaxsD,EAEblC,cACE8nB,QACA3qB,KAAKiI,KAAO,GACZjI,KAAKqjB,UAAW,EAChBrjB,KAAK+xB,OAAS,QACf,CAED2rB,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI;QACPuzB,EAAIlgC,GAAG+hD;YACH3iB,EAAUp/B,EAAGrH;cACXymC,EAAUp/B,EAAGrH;aACdymC,EAAUp/B,EAAG0uC;eACX/P,EAAS3+B,EAAGquC;;eAEZruC,GAAGiiD;iBACDjiD,GAAGkiD;kBACFliD,GAAGmiD;iBACJniD,EAAGmzC;gBACJnzC,EAAG0tB;;gBAEH1tB,EAAGwiB;aACN4c,EAAUp/B,EAAGvL;;aAEb2qC,EAAUp/B,EAAG6f;uBACHuf,EAAUp/B,EAAGshD;wBACZliB,EAAUp/B,EAAG+jC;sBACf3E,EAAUp/B,EAAGkkC;gBACnB9E,EAAUp/B,EAAGua;iBACZ6kB,EAAUp/B,EAAG2hD;gBACdviB,EAAUp/B,EAAGrB;;qBAERqB,EAAG4hD;QAChBhhB,EAAgB5gC,GAAGoiD;;YAGxB,CAEDtU,aAAa/R,GACX3gB,MAAM0yB,aAAa/R,GACRtrC,KACRq8C,gBAAgB9R,MACpB,CAED4V,QAAQ7U,GACN,MAAM/7B,EAAKvP,KACPsrC,EAAQ9Q,IAAI,UACVx5B,EAAOyC,OAAO8L,EAAGtH,MACnBsH,EAAG0tB,QAEH1tB,EAAG2B,OAASrQ,OAAOggB,OAAOtR,EAAG2B,OAAQ3B,EAAGtH,MAG7C,CAEDiyC,mBAEC,CAEDtuC,YAAYI,GACV,MAAMuD,EAAKvP,KACXuP,EAAGwlB,MAAMkI,QACT1tB,EAAGtH,KAAO,SACJsH,EAAG8sC,gBAAgB9R,KAAKh7B,EAAG2B,QAClC,CAEDtF,aAAaI,GACX8Z,SAASS,QAAQva,GAAG,GAAM,GAAO,GACjC,MAAMuD,EAAKvP,KACX,GAAIuP,EAAG8T,SAAU,OACjB,IAAK9T,EAAG2sB,WAAY,OACpB,MAAM7J,EAAO9iB,EAAG2B,aACV3B,EAAG8sC,gBAAgBnF,MAAM7kB,IAC/B,MAAMpqB,EAAO,CAAE7H,KAAM,SAAU6H,KAAMoqB,EAAMrF,OAAQhhB,EAAGjB,MAAOwE,GAC7D,OAAOA,EAAG2qB,KAAK,OAAQjyB,GAAM,GAAM,GAAM,EAC1C,CAEG2pD,mBACF,OAAO5xD,KAAK+0B,MAAM68B,YACnB,CAEGC,kBACF,OAAO7xD,KAAK+0B,MAAM88B,WACnB,CAEG98B,WACF,OAAO/0B,MAAKsxD,GAAS5vD,KACtB,CAKGowD,eACF,OAAO9xD,KAAK+0B,MAAM+8B,UAAY,EAC/B,CAKG55C,aACF,OAAOlY,KAAK+0B,MAAM7c,QAAU,EAC7B,CAKG65C,aACF,OAAO/xD,KAAK+0B,MAAMg9B,QAAU,EAC7B,CAEGjzC,cACF,OAAO9e,KAAK+0B,MAAMjW,OACnB,CAEGnU,cACF,OAAO3K,KAAK+0B,MAAMpqB,OACnB,CAEGuG,aACF,OAAOlR,KAAK+0B,MAAM7jB,MACnB,CAEGA,WAAOjJ,GACT,MAAMsH,EAAKvP,KACPuP,EAAGwlB,OACLxlB,EAAGwlB,KAAK7jB,OAASjJ,EACjBsH,EAAG2sB,WAEN,CAODpH,MAAM5sB,GACJ,OAAOlI,KAAK+0B,MAAMD,MAAM5sB,EACzB,CAEDyZ,gBACE,OAAO3hB,KAAK+0B,MAAMpT,eACnB,CAEDqwC,iBACE,OAAOhyD,KAAK+0B,MAAMi9B,gBACnB,CAED91B,SAASlwB,GACP,MAAMuD,EAAKvP,KACX,IAAI2K,EAAU4E,EAAGwlB,MAAMmH,WAIvB,OAHAvxB,EAAU4E,EAAG0iD,WAAWtnD,GACxB4E,GAAGm5B,GAAQ/9B,EAASqB,GACpBuD,EAAGuP,QAAQ,IAAIisB,QACRpgC,CACR,CAED82B,QAAQ7wB,GAAM,GACZ5Q,KAAK+0B,MAAM0M,QAAQ7wB,EACpB,CAED4wB,OAAO5wB,GAAM,GACX5Q,KAAK+0B,MAAMyM,OAAO5wB,EACnB,CAOD+mC,WAAW1vC,GACT,MAAMsH,EAAKvP,KACP+C,MAAMC,QAAQiF,GAChBA,EAAKlB,SAAQjE,GAAKyM,EAAG2B,OAASpO,IAE9ByM,EAAG2B,OAASjJ,CAEf,CAED2vC,YAAY3vC,GAEX,CAED4vC,YAAY7rC,GACVpM,MAAM8c,MAAM1c,KAAMgM,EACnB,CAEDimD,WAAW75C,GAET,OAAOA,CACR,CAEDs5C,IAAW1lD,GACEhM,KACRumB,QAAQva,GAAG,GAAO,GAAM,GADhBhM,MAER0oC,IAAQ,EAAO18B,EACnB,CAEDwlD,IAAQxlD,GACN,MAAMuD,EAAKvP,KACXuP,EAAGgX,QAAQva,GAAG,GAAO,GAAM,GAC3BuD,GAAGm5B,GAAQn5B,EAAG5E,QAASqB,EACxB,CAEDylD,IAAUzlD,GACGhM,MAER0oC,GAFQ1oC,KAEG2K,QAASqB,EACxB,CAED08B,IAAQ/9B,GAAU,EAAOqB,GACvB,MAAMuD,EAAKvP,KACX,GAAIuP,GAAGgiD,KAAe5mD,EAAS,OAC/B4E,GAAGgiD,GAAa5mD,EAChB,MAAM1C,EAAO,CAAE7H,KAAM,QAAS6H,KAAM0C,EAASI,MAAOwE,EAAI8W,MAAOra,GAC/DuD,EAAG2qB,KAAK,OAAQjyB,GAAM,GAAM,EAC7B,CAEG0pD,SACF,MAAMO,EAAQlyD,KAAKyc,kBACnB,OAAOzB,MAAME,kBAAkBg3C,GAASA,OAAQntD,CACjD,QAGC/E,KAAKmJ,OAAO,UACb,ECjQI,MAAMgpD,2BAA2Bh2B,GAEtCt8B,sBAAwB,6BACxBA,iBAAmB,oDACnBA,gBAAkB,yBAClBA,YAAc,mBAEdA,uBAAwB,EAExBA,UAAoB,CAClBqI,KAAM,CAAE,EACRxG,MAAO,CAAE,EACTwjB,SAAU,CAAE9kB,KAAMqB,UAGpB5B,kBAAoB,CAClBiiD,KAAM,CAAEnG,SAAS,GACjByW,OAAQ,CAAEzW,SAAS,GACnBz8B,UAAW,CAAEy8B,SAAS,GAEtB0W,MAAO,CAAE1W,SAAS,GAClB2W,YAAa,CAAE3W,SAAS,GACxB4W,YAAa,CAAE5W,SAAS,GAExBt3C,QAAS,CAAEs3C,SAAS,GACpB6W,KAAM,CAAE7W,SAAS,GAEjB5mB,KAAM,CAAE4mB,SAAS,GACjB7+B,KAAM,CAAE6+B,SAAS,GACjB8W,WAAY,CAAE9W,SAAS,GAEvBv7C,KAAM,CAAEu7C,SAAS,KAAStH,GAC1BnsC,KAAM,CAAEyzC,SAAS,GACjBnkC,KAAM,CAAEmkC,SAAS,GACjB7vC,OAAQ,CAAE6vC,SAAS,GACnBj6C,MAAO,CAAEgxD,YAAY,GAErBpsD,OAAQ,CAAE,EAEVi2B,KAAM,CAAEof,SAAS,GACjB74B,MAAO,CAAE64B,SAAS,GAClBgX,KAAM,CAAEvyD,KAAMmO,OAAQotC,SAAS,EAAMpI,WAAYN,QACjD2f,KAAM,CAAExyD,KAAMmO,OAAQotC,SAAS,EAAMpI,WAAYN,QACjD4f,KAAM,CAAEzyD,KAAMmO,OAAQotC,SAAS,EAAMpI,WAAYN,QACjD5vC,IAAK,CAAEjD,KAAMmO,OAAQotC,SAAS,EAAMpI,WAAYL,QAChD5vC,IAAK,CAAElD,KAAMmO,OAAQotC,SAAS,EAAMpI,WAAYN,QAChD6f,UAAW,CAAE1yD,KAAMmO,OAAQotC,SAAS,EAAMpI,WAAYL,QACtD6f,UAAW,CAAE3yD,KAAMmO,OAAQotC,SAAS,EAAMpI,WAAYN,QAEtD5wC,QAAS,CAAEs5C,SAAS,EAAMv7C,KAAMqB,SAChCuxD,WAAY,CAAErX,SAAS,EAAMv7C,KAAMqB,SAEnCwxD,OAAQ,CAAE7yD,KAAMqB,QAASk6C,SAAS,GAClCmV,SAAU,CAAE1wD,KAAMqB,QAASk6C,SAAS,GACpCoV,WAAY,CAAE3wD,KAAMqB,QAASk6C,SAAS,GAEtCrI,eAAgB,IAAKA,EAAgBqI,SAAS,GAC9ChI,YAAa,IAAKA,EAAagI,SAAS,GACxClI,aAAc,CAAEkI,SAAS,GACzB1f,UAAW,CAAE77B,KAAMqB,QAASk6C,SAAS,GACrCoV,WAAY,CAAE3wD,KAAMqB,QAASk6C,SAAS,GACtCqV,aAAc,CAAE5wD,KAAMqB,QAASk6C,SAAS,GACxCsV,WAAY,CAAE7wD,KAAMqB,QAASk6C,SAAS,GAEtCt4B,SAAU,CAAEjjB,KAAMqB,QAASk6C,SAAS,GACpCt6B,QAAS,CAAEjhB,KAAMqB,QAASk6C,SAAS,GACnCoD,SAAU,CAAE3+C,KAAMqB,QAASk6C,SAAS,GACpCuX,OAAQ,CAAE9yD,KAAMqB,QAASk6C,SAAS,GAClCwX,SAAU,CAAE/yD,KAAMqB,QAASk6C,SAAS,GACpCyX,SAAU,CAAEhzD,KAAMqB,QAASk6C,SAAS,GAEpC0X,eAAgB,CAAE1X,SAAS,EAAMttC,UAAW,mBAE5CilD,UAAW,CAAE3X,SAAS,EAAMttC,UAAW,cACvCklD,UAAW,CAAE5X,SAAS,EAAMttC,UAAW,cACvCmlD,SAAU,CAAE7X,SAAS,EAAMttC,UAAW,aACtColD,SAAU,CAAE9X,SAAS,EAAMttC,UAAW,aAEtC+iD,MAAO,CAAEzV,SAAS,EAAMv7C,KAAMqB,SAC9B4vD,KAAM,CAAE1V,SAAS,EAAMv7C,KAAMqB,SAC7B+F,QAAS,CAAEm0C,SAAS,EAAMv7C,KAAMmO,SAGlCq4C,IAAWt6C,KAAK9L,GAChBkzD,IAAYtlB,IACZulB,IAAavlB,IACbwlB,IAAY,GACZ3uC,IAAW,GACX4uC,IAAa,KAEbhxD,cACE8nB,QACA3qB,MAAK6zD,GAAa7zD,KAAK8zD,kBACvB9zD,MAAK+zD,KACL/zD,KAAKstB,aAAattB,MAAK4mD,IACvB5mD,KAAK2yD,KAAO,EACZ3yD,KAAK4yD,KAAO,EACZ5yD,KAAKI,KAAO,OACZJ,KAAKkf,UAAY,MACjBlf,KAAKoyD,OAAS,aACdpyD,KAAKqzD,eAAiB,gBACpBrzD,KAAK8hD,KAAOqQ,mBAAmB6B,KACjCh0D,KAAKwzD,SAAWrB,mBAAmB8B,UACnCj0D,KAAKuzD,UAAYpB,mBAAmB+B,cACrC,CAEDtX,oBACE,MAAMrtC,EAAKvP,KACL+0B,EAAOxlB,EAAG4kD,cAChB5kD,EAAG6iD,OAAStlD,OAAO5D,IAAI6rB,EAAM,SAAUxlB,EAAG6iD,SAErC7iD,EAAGwlB,MAAQA,IAAMxlB,EAAGwlB,KAAOA,EAAK7sB,MAEjCqH,EAAGyjD,WACLzjD,GAAG0V,GAAW+W,OAAOttB,QAAQa,EAAI4iD,oBAAmBiC,IAEpD7kD,GAAGqkD,GAAY53B,OAAOK,QAAQ9sB,GAC3BvJ,QAAOlG,GAAMA,EAAGsO,QAAQ/J,UACxB3B,KAAI5C,GAAM,IAAI+E,OAAO/E,EAAGsO,QAAQ/J,WAErCsmB,MAAMiyB,mBACP,CAEDuD,QAAQ7U,GACKtrC,KAERk6B,KAAK,QACT,CAEDwjB,WACE,MAAMnuC,EAAKvP,KACX,OAAQuP,EAAG6iD,QACT,IAAK,WAAY,OAAO7iD,GAAG8kD,KAC3B,IAAK,WAAY,OAAO9kD,GAAGu3C,KAC3B,QAAS,OAAOv3C,GAAGw3C,KAEtB,CAGDsN,MACE,MAAM9kD,EAAKvP,KACX,OAAOkc,CAAI;iBACEyyB,EAAUp/B,EAAG0uC,0BAA0B/P,EAAS3+B,EAAGquC;mCACjCruC,GAAG+kD,MAAa/kD,GAAG+jD;YAC1C/jD,GAAGglD;YACHhlD,GAAGilD;YACHjlD,GAAGklD;;SAENllD,GAAGmlD;;kBAGT,CAED5N,MACE,MAAMv3C,EAAKvP,KACX,OAAOkc,CAAI;iBACEyyB,EAAUp/B,EAAG0uC,0BAA0B/P,EAAS3+B,EAAGquC;yCAC3BruC,EAAGgkD;YAChChkD,GAAGklD;;qBAEMllD,GAAG+kD,MAAa/kD,GAAG+jD;YAC5B/jD,GAAGglD;YACHhlD,GAAGilD;;SAENjlD,GAAGmlD;;kBAGT,CAED3N,MACE,MAAMx3C,EAAKvP,KACX,OAAOkc,CAAI;iBACEyyB,EAAUp/B,EAAG0uC,qCAAqC/P,EAAS3+B,EAAGquC;;SAEtEruC,GAAGolD;SACHplD,GAAGqlD;SACHrlD,GAAGmlD;;;kBAIT,CAEDD,MACE,MAAMllD,EAAKvP,KACX,OAAOkc,CAAI,iBAAiB3M,GAAGikD,MAAajkD,EAAGikD,mCAAmCjkD,EAAGrH,SAASqH,EAAGstB,UAAUttB,EAAG8iD,gBAC/G,CAEDsC,MAEE,OAAOz4C,CAAI,4BADAlc,KAC+BuzD,cAD/BvzD,MACgDy0D,YAC5D,CAED3R,MAEE,OADW9iD,MACD60D,GAAU34C,CAAI,0BAA0Bi2C,mBAAmB2C,oBAD1D90D,KACiF8hD,mBAAqB5lC,CAAI,2BACtH,CAED64C,MACE,MAAMxlD,EAAKvP,KACL2kD,EAAMp1C,GAAGslD,GAAU,UAAY,UAAUtlD,EAAGrH,SAClD,OAAOqH,EAAG+iD,YAAcp2C,CAAI,+BAA+ByyB,EAAUp/B,EAAG5L,yBAAyB4L,EAAG2P,qBAAqB3P,EAAG+iD,uBAAuB3jB,EAAUgW,mBAAuB,EACrL,CAED+P,MACE,MAAMnlD,EAAKvP,KACL+hD,EAAUxyC,GAAGwlD,KACnB,OAAIhT,GAAWxyC,GAAGslD,GAAgB34C,CAAI;;SAEjC6lC;SACAxyC,GAAGuzC;YAEDf,CACR,CAED6S,MACE,MAAMrlD,EAAKvP,KACX,OAAOkc,CAAI;kBACG3M,GAAG+kD,MAAa/kD,GAAG+jD;2BACV/jD,GAAGglD,OAAiBhlD,GAAGilD;WAE/C,CAEDA,MACE,MAAMjlD,EAAKvP,KACX,OAAKuP,EAAGylD,QACD94C,CAAI,SAASuzB,EAAIlgC,GAAGokD,sCAA8CpkD,EAAG7N,eADpD,EAEzB,CAED6yD,MAEE,MAAMhlD,EAAKvP,KAELi1D,EAAS1lD,EAAG0jD,OAAS1jD,EAAGrH,UAAOnD,EAC/BnD,EAAM2N,EAAG2lD,WAAa3lD,EAAGjJ,OAAOlE,MAAM,KAAOmN,EAAG7N,MAEtD,GAAIqB,MAAMC,QAAQpB,GAAM,CACtB,MAAMkb,EAAkC,aAA3BvN,EAAGnB,QAAQ+mD,YACxB,OAAOvzD,EAAIc,KAAI,CAAC+U,EAAI9U,KAAe,CAAEpB,EAAGkW,EAAIjX,GAAI,GAAG+O,EAAGrH,QAAQvF,QAC3DD,KAAI,CAACI,EAAGH,IAAM4M,GAAG6lD,GAAU7lD,EAAGrH,KAAOvF,EAAGG,EAAEvB,EAAGgO,GAAG8lD,GAAWvyD,EAAEtC,GAAI+O,EAAGrH,KAAMpF,EAAEvB,GAAIub,IACpF,CAED,OAAIvN,EAAGyjD,WAAmBzjD,GAAG+lD,GAAYL,EAAQ1lD,EAAGrH,KAAMqH,EAAG7N,OAEzD6N,GAAGgmD,GAAoBhmD,GAAG9I,GAAUwuD,EAAQ1lD,EAAGrH,KAAMqH,EAAG7N,OAErD6N,GAAG8lD,GAAWJ,EAAQ1lD,EAAGrH,KAAMqH,EAAG7N,MAC1C,CAED0zD,IAAU50D,EAAIoB,EAAK4zD,EAAKC,GAAW,GAEjC,OAAOA,EACLv5C,CAAI,qBAAqBs5C,gBAAkBh1D,mBAFlCR,KAEyD68B,UAAUj7B,mBAE5Esa,CAAI,sBAAsBs5C,gBAAkBh1D,mBAJnCR,KAI0D68B,UAAUj7B,mBAChF,CAED8zD,MACE,MAAMnmD,EAAKvP,KACLiY,EAAQ,CACZmnB,UAAW7vB,EAAGlN,SAAWkN,EAAGylD,QAAU,kBAAoB,IAE5DzlD,EAAG+d,aAAa/d,GAAGq3C,GAAU3uC,EAC9B,CAED09C,IAAc71D,GACZ,MAAMgjB,EAAQhjB,EAAGoI,MAAQpI,EAAGuiB,WAAaviB,EAAG4B,MAC5C,OAAOwa,CAAI,WAAW9N,EAAQtO,GAAI,aAAiBA,EAAG4B,qBAAqB5B,EAAGolB,aAAapC,YAC5F,CAED0zB,MACE,MAAMjnC,EAAKvP,KACX,OAAOuP,GAAG0V,GAASviB,KAAI5C,GAAMyP,GAAGomD,GAAc71D,IAM/C,CAEDw1D,IAAY90D,EAAI0H,EAAMxG,GACpB,MAAM6N,EAAKvP,KAKX,OAJAuP,GAAGmmD,KAIIx5C,CAAI;cACDuzB,EAAIlgC,GAAGmkD;cACPtlD,EAAQmB,GAAI;;uBAEHA,GAAGkiD,GAAU3pD,KAAKyH;qBACpBA,GAAGiiD,GAAQ1pD,KAAKyH;;oBAEjBrH;oBACAymC,EAAUp/B,EAAGwlB;qBACZxlB,GAAGkkD,MAAalkD,EAAGkkD,YAAYlkD,GAAGq3C;;0BAE7Br3C,EAAG0sB,WAAa1sB,EAAGwlB,MAAMkH;yBAC1B1sB,EAAGuhD,UAAYvhD,EAAGwlB,MAAM+7B;2BACtBvhD,EAAGwhD,YAAcxhD,EAAGwlB,MAAMg8B;6BACxBxhD,EAAGyhD,cAAgBzhD,EAAGwlB,MAAMi8B;2BAC9BzhD,EAAG0hD,YAAc1hD,EAAGwlB,MAAMk8B;;yBAE5B1hD,EAAG4jD;yBACH5jD,EAAG6jD;yBACH7jD,EAAG8T;gBACZ9T,GAAGinC;sBAEhB,CAEG+e,SACF,MAAMhmD,EAAKvP,KACX,OAAQuP,EAAGojD,KAAO,GAAKpjD,EAAGqjD,KAAO,IAAkB,SAAZrjD,EAAGnP,IAC3C,CAEGw1D,SACF,MAAMrmD,EAAKvP,KACX,IAAIwX,EAAO,GACX,GAAIjI,EAAGiI,KAAM,CACX,MAAMuI,EAAOxQ,EAAGgnB,iBAAmBhnB,EAAGoQ,cAChC7f,EAAKkb,MAAMpR,MAAMmW,EAAM,gBAAgBxQ,EAAGiI,UAAU,GAAM,GAC5D1X,IAAI0X,EAAO0E,CAAI,GAAGm0B,EAAWvwC,EAAG+1D,aACrC,CACD,OAAOr+C,CACR,CAEGs+C,SACF,OAAO91D,KAAKoxD,OAASpxD,KAAKm0D,eAAe/C,QAAS,CACnD,CAEG2E,SACF,OAAO/1D,KAAKqxD,MAAQrxD,KAAKm0D,eAAe9C,OAAQ,CACjD,CAED7pD,MACE,OAAOxH,KAAKwH,SAAWxH,KAAKm0D,eAAe3sD,SAAW,CACvD,CAEDf,IAAUjG,EAAI0H,EAAMxG,GAClB,MAAM6N,EAAKvP,KACXuP,GAAGmmD,KACH,MAAMnD,EAAchjD,EAAGgjD,YAAchjD,EAAGstB,UAAUttB,EAAGgjD,aAAa,GAAS,KACrEzvC,EAAQvT,EAAGuT,MAAQvT,EAAGstB,UAAUttB,EAAGuT,OAAO,GAAS,KAKzD,OAAO5G,CAAI;cACDuzB,EAAIlgC,GAAGmkD;cACPtlD,EAAQmB,GAAI;sBACJA,GAAGymD,GAASluD,KAAKyH;uBAChBA,GAAGkiD,GAAU3pD,KAAKyH;qBACpBA,GAAGiiD,GAAQ1pD,KAAKyH;wBACbA,GAAGmiD,GAAW5pD,KAAKyH;oBACvBo/B,EAAUp/B,EAAGgtB;yBACRoS,EAAUp/B,EAAGujD;yBACbnkB,EAAUp/B,EAAGwjD;oBAClBxjD,EAAGqjD;oBACHrjD,EAAGojD;;sBAEDpjD,GAAGumD;qBACJvmD,GAAGwmD;uBACDxmD,GAAG/H;;0BAEAmnC,EAAUp/B,EAAGkjD;oBACnB9jB,EAAUp/B,EAAGuN;oBACb6xB,EAAUp/B,EAAGwlB;oBACb7sB;qBACCymC,EAAUjtC;2BACJitC,EAAU4jB;qBAChB5jB,EAAU7rB;;qBAEVvT,GAAGkkD,MAAalkD,EAAGkkD,YAAYlkD,GAAGq3C;;4BAE3BjY,EAAUp/B,EAAGkkC;2BACd9E,EAAUp/B,EAAGokC;8BACVhF,EAAUp/B,EAAG+jC;;0BAEjB/jC,EAAG0sB,WAAa1sB,EAAGwlB,MAAMkH;yBAC1B1sB,EAAGuhD,UAAYvhD,EAAGwlB,MAAM+7B;2BACtBvhD,EAAGwhD,YAAcxhD,EAAGwlB,MAAMg8B;6BACxBxhD,EAAGyhD,cAAgBzhD,EAAGwlB,MAAMi8B;2BAC9BzhD,EAAG0hD,YAAc1hD,EAAGwlB,MAAMk8B;;yBAE5B1hD,EAAG4jD;yBACH5jD,EAAG6jD;yBACH7jD,EAAG8T;mBAEzB,CAEDgyC,IAAW70D,EAAI0H,EAAMxG,GACnB,MAAM6N,EAAKvP,KACLI,EAAOmP,EAAG0mD,SAAW,WAAa1mD,EAAGnP,KAC3C,IAAI0iB,EAAQvT,EAAGylD,QAAUzlD,EAAG+R,aAAe/R,EAAGuT,MAC9CA,EAAQA,EAAQvT,EAAGstB,UAAUttB,EAAGuT,OAAO,GAASA,EAEhD,MAAMyvC,EAAchjD,EAAGgjD,YAAchjD,EAAGstB,UAAUttB,EAAGgjD,aAAa,GAAS,KACrED,EAAc/iD,EAAG+iD,YAAc/iD,EAAGstB,UAAUttB,EAAG+iD,aAAa,GAAS,KAU3E,OARA/iD,GAAGmmD,KAQIx5C,CAAI;cACDuzB,EAAIlgC,GAAGmkD;cACPtlD,EAAQmB,GAAI;;sBAEJA,GAAGymD,GAASluD,KAAKyH;uBAChBA,GAAGkiD,GAAU3pD,KAAKyH;qBACpBA,GAAGiiD,GAAQ1pD,KAAKyH;wBACbA,GAAGmiD,GAAW5pD,KAAKyH;;oBAEvBrH;oBACA9H;oBACAuuC,EAAUp/B,EAAGwlB;qBACZ4Z,EAAUjtC;qBACVitC,EAAU7rB;;;sBAGTvT,GAAGumD;qBACJvmD,GAAGwmD;uBACDxmD,GAAG/H;;qBAEL+H,GAAGkkD,MAAalkD,EAAGkkD,YAAYlkD,EAAGijD,KAAO,iBAAmB,MAAMjjD,GAAGq3C;;2BAE/DjY,EAAU4jB;2BACV5jB,EAAU2jB;;6BAER3jB,EAAUp/B,GAAGqkD;oBACtBjlB,EAAUp/B,EAAGijD;uBACV7jB,EAAUp/B,EAAGlL;oBAChBsqC,EAAUp/B,EAAGiI;sBACXm3B,EAAUp/B,EAAGzD;;oBAEf6iC,EAAUp/B,EAAGsjD;mBACdlkB,EAAUp/B,EAAGlM;mBACbsrC,EAAUp/B,EAAGjM;oBACZqrC,EAAUp/B,EAAGgtB;;yBAERoS,EAAUp/B,EAAGujD;yBACbnkB,EAAUp/B,EAAGwjD;;4BAEVpkB,EAAUp/B,EAAGkkC;2BACd9E,EAAUp/B,EAAGokC;8BACVhF,EAAUp/B,EAAG+jC;;0BAEjB/jC,EAAG0sB,WAAa1sB,EAAGwlB,MAAMkH;yBAC1B1sB,EAAGuhD,UAAYvhD,EAAGwlB,MAAM+7B;2BACtBvhD,EAAGwhD,YAAcxhD,EAAGwlB,MAAMg8B;6BACxBxhD,EAAGyhD,cAAgBzhD,EAAGwlB,MAAMi8B;2BAC9BzhD,EAAG0hD,YAAc1hD,EAAGwlB,MAAMk8B;;yBAE5B1hD,EAAGwvC;wBACJxvC,EAAG8R;yBACF9R,EAAG4jD;yBACH5jD,EAAG6jD;yBACH7jD,EAAG8T;uBACL9T,EAAG2jD;eACX3jD,GAAGqmD,IACf,CAEGnC,SACF,MAAMlkD,EAAKvP,KACX,OAAIuP,EAAGyjD,WAAmB,mBACtBzjD,EAAG2mD,YAAoB,wBACvB3mD,EAAGylD,QAAgB,aAChB,cACR,CAEGxB,SACF,MAAMjkD,EAAKvP,KACX,OAAIuP,EAAG2mD,YAAoB,mBACvB3mD,EAAG4mD,WAAmB,OACnB5mD,EAAGs3C,WAAa,aAAe,EACvC,CAEGyN,SACF,MAAM/kD,EAAKvP,KACX,OAAIuP,EAAG2mD,YAED3mD,EAAG0mD,SAAiB,mCACjB1mD,EAAG2lD,WAAa,GAAK,aAEvB,EACR,CAEG5B,SACF,MACM1xD,EADK5B,KACiB,aAAI,IAAM,KACtC,OAFWA,KAEDszD,WAAa,UAAU1xD,YAAcA,aAChD,CAEGizD,SACF,OAAO7zD,EAAO6F,iBAAiB7G,KAAK8hD,KACrC,CAEDkU,IAAShqD,GACFA,EAAEsZ,UAAUtlB,KAAKk6B,KAAKluB,EAAE5L,KAAM4L,EACpC,CAEDwlD,IAAQxlD,GACDA,EAAEsZ,UAAUtlB,KAAKk6B,KAAKluB,EAAE5L,KAAM4L,GAAG,GAAM,EAC7C,CAEDylD,IAAUzlD,GACR,MAAMuD,EAAKvP,KACL80B,EAAQvlB,EAAGulB,MACjBvlB,GAAGskD,IAAYuC,aAAathC,EAAMpzB,OAClC6N,GAAGskD,IAAYwC,YAAYvhC,EAAM6wB,SAAU7wB,EAAMwhC,kBAAmBxhC,GAC/D9oB,EAAEsZ,UAAU/V,EAAG2qB,KAAKluB,EAAE5L,KAAM4L,GAAG,GAAM,GAC1CuD,EAAGmoC,eACJ,CAEDga,IAAW1lD,GACJA,EAAEsZ,UAAUtlB,KAAKk6B,KAAK,UAAWluB,GAAG,GAAM,EAChD,CAED+nD,MACE,MAAMxkD,EAAKvP,KACLo6C,EAAQ,CAAC,SAAU,OAAQ,UACjC,IAAI5iC,EAAOzU,MAAMmI,KAAKqE,EAAGd,UAAUzI,QAAOlG,GAAMA,EAAGmd,OAASm9B,EAAMhwC,SAAStK,EAAGmd,QAC9E,GAAIzF,EAAK/S,OAAS,EAAG,MAAM,IAAI7D,MAAM,uFAAuF2O,EAAG4N,gBAAgB5N,EAAG/O,MAClJgX,EAAOzU,MAAMmI,KAAKqE,EAAGd,UAAUzI,QAAOlG,IAAOA,EAAGmd,OAChD,MAAMs5C,EAAU,CAAC,UAAW,YAE5B,IADgBv7C,MAAMkJ,UAAU1M,EAAM++C,GACxB,MAAM,IAAI31D,MAAMoa,MAAMmJ,kBAAkB5U,EAAIgnD,GAC3D,CAED15B,UAAUn7B,EAAQ,GAAI6e,GAEpB,OADA7e,EAAQipB,MAAMkS,UAAUn7B,GACjB6e,EAAWvf,EAAOuf,SAAS7e,GAASA,CAC5C,CAEDu7B,QACEj9B,KAAK80B,OAAOmI,SACb,CAEGk5B,iBACF,MAAuB,aAAhBn2D,KAAKoyD,MACb,CAEG5K,mBACF,MAAuB,eAAhBxnD,KAAKoyD,MACb,CAEGvL,iBACF,MAAuB,aAAhB7mD,KAAKoyD,MACb,CAEG8C,iBAEF,MAAmB,UADRl1D,KACDI,MADCJ,KACsBsG,QAAQ8D,SAAS,IACnD,CAEG8rD,kBACF,MAAM3mD,EAAKvP,KACX,OAAOuP,EAAGinD,SAAWjnD,EAAGknD,SAAWlnD,EAAG0mD,QACvC,CAEGS,gBACF,OAAO12D,KAAK80B,OAAOzT,OACpB,CAEGm1C,cACF,MAAqB,aAAdx2D,KAAKI,IACb,CAEGq2D,cACF,MAAqB,UAAdz2D,KAAKI,IACb,CAEG61D,eACF,MAAqB,WAAdj2D,KAAKI,IACb,CAEG+C,eACF,MAAqB,WAAdnD,KAAKI,IACb,CAEG40D,cACF,MAAqB,UAAdh1D,KAAKI,IACb,CAEG8c,aACF,MAAqB,SAAdld,KAAKI,IACb,CAEGu2D,iBACF,MAAqB,cAAd32D,KAAKI,IACb,CAEGw2D,cACF,MAAqB,UAAd52D,KAAKI,IACb,CAEGy2D,YACF,MAAqB,QAAd72D,KAAKI,IACb,CAEG0wB,aACF,MAAqB,SAAd9wB,KAAKI,IACb,CAEG8C,aACF,MAAqB,SAAdlD,KAAKI,IACb,CAEG00B,YACF,OAAO90B,MAAK0zD,GAAUhyD,KACvB,CAEGA,YACF,MAAM6N,EAAKvP,KACX,OAAOuP,EAAGulB,MAAQvlB,EAAGulB,OAAOpzB,MAAQ6N,EAAG+R,YACxC,CAEG5f,UAAME,GACG5B,KACJ80B,QADI90B,KACM80B,MAAMpzB,MAAQE,EAChC,CAEG0f,mBACF,MAAM/R,EAAKvP,KACX,OAAOuP,EAAGulB,MAAQvlB,EAAGulB,MAAMxT,aAAexU,OAAO5D,IAAIqG,EAAI,QAAS,GACnE,CAEG+R,iBAAa1f,GACf,MAAM2N,EAAKvP,KACPuP,EAAGulB,QAAOvlB,EAAGulB,MAAMxT,aAAe1f,GACtCkL,OAAOU,IAAI+B,EAAI,QAAS3N,EAEzB,CAEG+jD,eACF,OAAO3lD,MAAK6zD,GAAWlO,QACxB,CAEGwO,oBACF,OAAOn5C,MAAMwE,QAAQxf,KAAM,UAC5B,QAGCA,KAAKmJ,OAAO,gBACb,EChoBI,MAAM2tD,2BAA2B36B,GAEtCt8B,kBAAoB,CAClB43C,QAAS,CAAE,EACXxvC,KAAM,CAAE7H,KAAM2C,QAGhBuuD,IAAWljB,IAEXvrC,cACE8nB,QACA3qB,KAAKiI,KAAOjI,MAAK0O,EAClB,CAEDgvC,WACE,MAAMnuC,EAAKvP,KACLiI,EAAOsH,EAAGtH,MAAQ,GAElB/B,EAAMqJ,GAAGouC,KACf,OAAOzhC,CAAI,YAAYuzB,EAAIlgC,GAAG+hD;;iBAEjB3iB,EAAU1mC,EAAKwvC;iBACf9I,EAAU1mC,EAAKob;cAClBsrB,EAAU1mC,EAAKA;;cAEf0mC,EAAU1mC,EAAKC;aAChBymC,EAAU1mC,EAAKmnB;uBACLuf,EAAU1mC,EAAK4oD;wBACdliB,EAAU1mC,EAAKqrC;sBACjB3E,EAAU1mC,EAAKwrC;;gBAErB9E,EAAU1mC,EAAK6hB;iBACd6kB,EAAU1mC,EAAKipD;gBAChBviB,EAAU1mC,EAAK8pB;oBACX4c,EAAU1mC,EAAKkpD;gBACnBxiB,EAAU1mC,EAAKiG;;eAEhBygC,EAAU1mC,EAAKmpD;cAChBziB,EAAU1mC,EAAKopD;iBACZ1iB,EAAU1mC,EAAKT;;cAElBmnC,EAAU1mC,EAAK0+B;aAChBgI,EAAU1mC,EAAKyzC;cACd/M,EAAU1mC,EAAK2zC;iBACZjN,EAAU1mC,EAAKm2B;gBAChBuQ,EAAU1mC,EAAKk3B;iBACdwP,EAAU1mC,EAAK4zC;kBACdlN,EAAU1mC,EAAK6zC;gBACjBnN,EAAU1mC,EAAKoV;cACjBsxB,EAAU1mC,EAAK0uC;aAChBhI,EAAU1mC,EAAKyT;eACbizB,EAAU1mC,EAAKm6B;YAClBuM,EAAU1mC,EAAK+zC;iBACVrN,EAAU1mC,EAAKg0C;kBACdtN,EAAU1mC,EAAKtE;qBACZgrC,EAAU1mC,EAAKksC;qBACfxF,EAAU1mC,EAAKsW;kBAClBowB,EAAU1mC,EAAKuwB;kBACfmW,EAAU1mC,EAAKwd;SACxBvf,aAGN,CAEDy3C,MACE,MAAMz3C,EAAMQ,SAASC,cAAc,YAC7ByU,EAAUpb,MAAK0uD,KAErB,OADA/e,EAAOv0B,EAASlV,EAAIkV,SACblV,CACR,CAEDwoD,MACE,MAAMn/C,EAAKvP,KACLyiB,EAAQlT,EAAGtH,MAAMwa,OAAS,GAChC,OAAOvG,CAAI,GAAGvK,EAAO8Q,GAAQ8iB,GAASh2B,GAAGwnD,GAAiBxnD,EAAGtH,KAAMs9B,MACpE,CAIDwxB,IAAiBjhC,EAAYyP,GAC3B,OAAOrpB,CAAI;cACDyyB,EAAUpJ,EAAKuc;gBACbnT,EAAUpJ,EAAK6sB;mBACZzjB,EAAUpJ,EAAKrmB;;eAEnByvB,EAAUpJ,EAAK8sB;qBACT1jB,EAAUpJ,EAAK+sB;qBACf3jB,EAAUpJ,EAAKgtB;;iBAEnB5jB,EAAUpJ,EAAKlhC;cAClBsqC,EAAUpJ,EAAKitB;;cAEf7jB,EAAUpJ,EAAKxQ;oBACT4Z,EAAUpJ,EAAKyxB;qBACdroB,EAAUpJ,EAAK0xB;oBAChBtoB,EAAUpJ,EAAK2xB;wBACXvoB,EAAUpJ,EAAK4xB;oBACnBxoB,EAAUpJ,EAAK6xB;cACrBzoB,EAAUpJ,EAAKzoB;oBACT6xB,EAAUpJ,EAAKktB;;cAErB9jB,EAAUpJ,EAAKnlC;cACfuuC,EAAUpJ,EAAKr9B;cACfymC,EAAUpJ,EAAK/tB;gBACbm3B,EAAUpJ,EAAKz5B;eAChB6iC,EAAUpJ,EAAK7jC;;cAEhBitC,EAAUpJ,EAAKhJ;eACdoS,EAAUpJ,EAAKziB;cAChB6rB,EAAUpJ,EAAKqtB;cACfjkB,EAAUpJ,EAAKotB;cACfhkB,EAAUpJ,EAAKstB;aAChBlkB,EAAUpJ,EAAKliC;aACfsrC,EAAUpJ,EAAKjiC;mBACTqrC,EAAUpJ,EAAK8xB;mBACf1oB,EAAUpJ,EAAK+xB;;iBAEjB3oB,EAAUpJ,EAAKljC;oBACZssC,EAAUpJ,EAAKytB;;gBAEnBrkB,EAAUpJ,EAAK0tB;kBACbtkB,EAAUpJ,EAAKurB;oBACbniB,EAAUpJ,EAAKwrB;;wBAEXpiB,EAAUpJ,EAAK+N;qBAClB3E,EAAUpJ,EAAKoO;sBACdhF,EAAUpJ,EAAKkO;;mBAElB9E,EAAUpJ,EAAKtJ;oBACd0S,EAAUpJ,EAAKwrB;;kBAEjBpiB,EAAUpJ,EAAKliB;iBAChBsrB,EAAUpJ,EAAKlkB;kBACdstB,EAAUpJ,EAAKwZ;gBACjBpQ,EAAUpJ,EAAK2tB;kBACbvkB,EAAUpJ,EAAK4tB;kBACfxkB,EAAUpJ,EAAK6tB;;wBAETzkB,EAAUpJ,EAAK8tB;;eAExB1kB,EAAUpJ,EAAK6rB,OAASt7B,EAAWs7B;cACpCziB,EAAUpJ,EAAK8rB,MAAQv7B,EAAWu7B;iBAC/B1iB,EAAUpJ,EAAK/9B,SAAWsuB,EAAWtuB;;cAExCmnC,EAAUpJ,EAAKoB;aAChBgI,EAAUpJ,EAAKmW;cACd/M,EAAUpJ,EAAKqW;iBACZjN,EAAUpJ,EAAKnH;gBAChBuQ,EAAUpJ,EAAKpG;iBACdwP,EAAUpJ,EAAKsW;kBACdlN,EAAUpJ,EAAKuW;gBACjBnN,EAAUpJ,EAAKloB;cACjBsxB,EAAUpJ,EAAKoR;aAChBhI,EAAUpJ,EAAK7pB;eACbizB,EAAUpJ,EAAKnD;YAClBuM,EAAUpJ,EAAKyW;iBACVrN,EAAUpJ,EAAK0W;kBACdtN,EAAUpJ,EAAK5hC,UAAYmyB,EAAWnyB;qBACnCgrC,EAAUpJ,EAAK4O;qBACfxF,EAAUpJ,EAAKhnB;kBAClBowB,EAAUpJ,EAAK/M;kBACfmW,EAAUpJ,EAAK9f;uBAE9B,CAEGsP,WACF,OAAO/0B,MAAKsxD,GAAS5vD,KACtB,CAEDi2C,WAAW1vC,GACTjI,KAAKiI,KAAOA,CACb,CAED4vC,YAAY7rC,GACVpM,MAAM8c,MAAM1c,KAAMgM,EACnB,CAEG0C,SACF,OAAOstB,OAAOK,QAAQr8B,MAAM0C,KAAI5C,GAAMgN,OAAO4B,QAAQ5O,EAAIqyD,mBAAmB5sC,aAC7E,QAGCvlB,KAAKmJ,OAAO,gBACb,EClLI,MAAMouD,uBAAuBp7B,GAElCt8B,kBAAoB,CAElBujB,MAAQ,CAAE,EACVq0B,QAAS,CAAE,EACXqH,SAAU,CAAE1+C,KAAMqB,SAClBs9C,SAAU,CAAE3+C,KAAMqB,SAClBwG,KAAM,CAAE7H,KAAM2C,QAGhB2mD,IAAStb,IACTnU,IACAu9B,IAEA30D,cACE8nB,QACA,MAAMpb,EAAKvP,KACXuP,EAAGtH,KAAOsH,EAAGkoD,WACbloD,GAAG0qB,GAAc,IAAI4kB,4BAA4BtvC,GACjDA,GAAGioD,GAAmB,IAAI3X,gBAAgBtwC,EAC3C,CAEDqtC,oBACEjyB,MAAMiyB,oBACN,MAAMrtC,EAAKvP,KAEX+C,MAAMmI,KAAKqE,EAAGd,UAAU1H,SAAQ0Q,IAC9B0b,mBAAmBgD,MAAM5mB,EAAIkI,GAAI,EAAM,GAE1C,CAGDigD,MACE,MAAMnoD,EAAKvP,KAEX,GADAuP,EAAG+N,SAAS,eAAevW,SAAQjH,GAAMA,EAAGub,WACxC9L,EAAGtH,KAAKxD,OAAS,EAAG,CACtB,MAAMge,EAAQlT,EAAGkxC,cACXv6C,EAAMQ,SAASC,cAAc,YACnCgpC,EAAOltB,EAAOvc,GACdnD,MAAM40D,MAAMzxD,EAAIuI,UAAU1H,SAAQjH,GAAMkb,MAAM+B,YAAYxN,EAAIzP,IAC/D,CACF,CAEDu9C,aAAa/R,GACX,MAAM/7B,EAAKvP,KACXuP,GAAG0qB,GAAYpK,OACftgB,GAAG0qB,GAAY1P,OAAOhb,GAAGm6C,GAAOhoD,OAChCipB,MAAM0yB,aAAa/R,EAEpB,CAEDgS,WAAWhS,GACT,MAAM/7B,EAAKvP,KACPsrC,EAAQ9Q,IAAI,SACdjrB,GAAGmoD,KAEL/sC,MAAM2yB,WAAWhS,EAClB,CAEDoS,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI,QAAQuzB,EAAIlgC,GAAGm6C;aACjB/a,EAAUp/B,EAAG0uC;eACX/P,EAAS3+B,EAAGquC;QACnBruC,EAAGqoD;aAER,CAEDA,gBAAgB1vD,GAEd,OAAOgU,CAAI;eACAgyB,EAFAluC,KAEY63D;oBACPlpB,EAAUzmC;aAE3B,CAED2vD,qBACE,MAAO,EACR,CAEDpX,cACE,MAAO,EACR,CAEDgX,WACE,OAAOz3D,KAAK4iC,SAAS5G,OACtB,CAED+H,WACE/jC,MAAKi6B,GAAY8J,UAClB,CAEDv3B,OACExM,MAAKi6B,GAAYztB,MAClB,CAKDywB,QACEj9B,MAAKi6B,GAAYgD,OAClB,CAODwiB,YAAY3/C,GACV,OAAOA,GAAIqd,UAAYnd,KAAK83D,YAC7B,CAEDngB,WAAW1vC,GACTjI,KAAKiI,KAAOA,CACb,CAED+3C,WAAWh0C,GACT,IAAIjB,EAAOw6B,IACTx6B,QAAOw6B,QAAQv5B,EAAE4Z,QACf7a,GAAS/K,OACNulC,GAAMliB,WAAYtY,GAAOioD,YAC5BhzD,KAAKi9B,QAGV,CAEDqiB,WAAWx/C,GACTE,MAAKw3D,GAAiB9uB,OAAO5oC,EAC9B,CAEG4qC,cACF,OAAO1qC,MAAKi6B,GAAYyQ,OACzB,CAEGxlB,eACF,OAAOllB,MAAKi6B,GAAY/U,QACzB,CAEG4yC,mBACF,MAAO,EACR,CAEGr1C,YAEF,OADWziB,KACDsd,SADCtd,KACW83D,cAAc,EACrC,CAEGC,gBACF,OAAO/3D,KAAKyiB,MAAMzc,QAAOlG,GAAMA,EAAGkP,aAAa,cAChD,CAEGwM,aACF,MACMhE,EADKxX,KACKyiB,MAAMzc,QAAOlG,GAAMA,EAAGkP,aAAa,YACnD,OAFWhP,KAED++C,SAAWvnC,EAAOA,EAAK5B,KAClC,CAEDoiD,YAAY9vD,EAAO,GAAImV,GAAS,GAC9B,OAAOrd,KAAK4J,MAAM,GAAG5J,KAAK83D,sBAAsB5vD,MAAUmV,GAAQ,EACnE,CAEDulB,SAAS9iC,GACP,MAAMqd,EAAUlU,eAAegvD,QAAQn4D,IAAK0C,eAAiB,UACvDkV,EAAMykB,GAAU5Z,cAAcziB,GAC9B2iB,EAAQ1f,MAAMmI,KAAKlL,KAAKyO,UAAUzI,QAAOgG,GAAKA,EAAEmR,UAAYA,IAAUza,KAAI5C,GAAMgN,OAAO4B,QAAQ5O,EAAI4X,KACnG8D,EAASiH,EAAMzc,QAAOlG,GAAMA,EAAG0b,SAErC,OADAA,EAAOzU,SAAQ,CAACjH,EAAI6Z,IAAQ7Z,EAAG0b,OAAiB,IAAR7B,IACjC8I,CACR,QAGCziB,KAAKmJ,OAAO,WACb,EC5LI,MAAM+uD,sBAAsB/7B,GAEjCt8B,cAAgB6b,CAAG;;;;;;;;;;;;OAcnB7b,kBAAoB,CAClBqI,KAAM,CAAEyzC,SAAS,EAAMpI,WAAYT,UACnCt9B,KAAM,CAAEmmC,SAAS,EAAMv7C,KAAMmO,OAAQglC,WAAYN,QACjDgB,MAAO,CAAE0H,SAAS,KAAS1H,GAC3BkkB,WAAY,CAAE9pD,UAAY,eAC1Bsc,MAAO,CAAEgxB,SAAS,GAClB8F,SAAU,CAAEpzC,UAAY,aACxBqzC,SAAU,CAAErzC,UAAY,aACxB+pD,SAAU,CAAE/pD,WAAU,GACtBgqD,SAAU,CAAEhqD,WAAU,IAGxBohC,IAAOrB,IAEPvrC,cACE8nB,OAED,CASDw1B,QAAQ7U,GACFA,EAAQ9Q,IAAI,aACVx6B,KAAKo4D,UAAUp4D,MAAKs4D,IAE3B,CAED5a,WACE,MAAMnuC,EAAKvP,KAEX,OADAuP,EAAGqvC,eAAe,QAAS,wBAAyBrvC,EAAG4oD,YAChDj8C,CAAI,OAAOuzB,EAAIlgC,GAAGkgC;mBACVvB,EAAS3+B,EAAGquC;qBACVjP,EAAUp/B,EAAGob;iBACjBpb,EAAG+yC;qBACC/yC,GAAG2yC;oBACJ3yC,GAAG4yC,UACpB,CAEDvE,cACE,MAAMruC,EAAKvP,KAUX,MATY,IACP2qB,MAAMizB,cACT,CAAC,QAAQruC,EAAG0kC,SAAU1kC,EAAG0kC,MACzB,CAAC,MAAM1kC,EAAGrH,QAASqH,EAAGrH,KACtBqwD,GAAMhpD,EAAGiG,KAAO,EAChB,CAAC,MAAMjG,EAAGiG,QAASjG,EAAGiG,KAAO,EAC7B,CAACjG,EAAGkyC,UAAWlyC,EAAG6oD,SAClB,CAAC7oD,EAAGmyC,UAAWnyC,EAAG8oD,SAGrB,CAEDzsD,WACE,MAAM2D,EAAKvP,KACLo7B,EAAQp6B,EAAOsM,MAAMiC,EAAGnB,QAAQgtB,MAAO,GACzCA,EAAQ,UACJp6B,EAAOwG,QAAgB,IAAR4zB,GACrB7rB,EAAG6oD,UAAW,EAEjB,CAEDlW,IAAal2C,GACXhM,KAAK4iD,OAAM,EACZ,CAEDT,IAAYn2C,GACVhM,KAAK4iD,OAAM,EACZ,CAEDN,UACatiD,KACRq4D,UAAW,EADHr4D,KAERo4D,UAAW,CACf,CAEDxV,MAAMxqC,GAAM,GACV,MAAM7I,EAAKvP,KACPoY,IACF7I,EAAG6oD,UAAW,GAEhB7oD,EAAG8oD,SAAWjgD,CACf,QAGCpY,KAAKmJ,OAAO,UACb,EC5GI,MAAMqvD,wBAAwBr8B,GAEnCt8B,cAAgB6b,CAAG;;;;OAMnB7b,kBAAoB,CAClB8mC,KAAM,CAAEvmC,KAAMqB,SACd+T,KAAM,CAAEpV,KAAMmO,OAAQglC,WAAYN,QAClCwlB,WAAY,CAAEr4D,KAAMmO,OAAQglC,WAAYN,SAG1CpwC,cACE8nB,QACW3qB,KACRwV,KAAO,EADCxV,KAERy4D,WAAa,EACjB,CAED/a,WACE,MAAMloC,EAAOxV,KAAKwV,KAAOxV,KAAKy4D,WAC9B,OAAOv8C,CAAI,4CAA4C1G,eACxD,QAGCxV,KAAKmJ,OAAO,YACb,EC3BH,MAAMuvD,GAAS,CAAE/c,SAAS,EAAMv7C,KAAMmO,OAAQglC,WAAYL,QAEnD,MAAMylB,uBAAuBx8B,GAElCt8B,kBAAoB,CAClB2J,IAAK,CAAE+pC,WAAYT,UACnB92B,MAAO08C,GACPz8C,OAAQy8C,GACR78C,QAAS68C,GACTE,OAAQF,GACRG,UAAWH,GACXI,WAAYJ,GACZrZ,KAAMqZ,GACNK,SAAUL,GACVM,SAAUN,GACVO,IAAKP,GACLQ,MAAOR,GAEPS,IAAK,CAAE,EACPjtB,QAAS,CAAE,GAIbktB,IAAYhrB,IACZwY,IAAWt6C,KAAK9L,GAEhBqC,cACE8nB,QACA3qB,KAAKstB,aAAattB,MAAK4mD,GACxB,CAED1J,aAAa5R,GAEX,OADAtrC,MAAKsuB,KACEtuB,KAAKwJ,GACb,CAEDk0C,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI,QAAQuzB,EAAIlgC,GAAG6pD;qBACT7pD,GAAG48B;mBACL58B,EAAG/F;mBACH+F,EAAG4pD;uBACCxqB,EAAUp/B,EAAG28B;qBACf38B,GAAGq3C;6BACKr3C,GAAGq3C;iBAE7B,CAEGyS,eACF,OAAOr5D,MAAKo5D,GAAU13D,OAAO23D,WAAY,CAC1C,CAEG3rC,SACF,OAAO1tB,KAAKstB,aAAattB,MAAK4mD,IAAU3uC,KACzC,CAEDqhD,MACE,MAAM/pD,EAAKvP,KACLgG,EAASuJ,GAAGgqD,KAMlB,MALY,CACVv9C,MAAOzM,EAAGyM,MAAQ,EAAIzM,EAAGyM,WAAQjX,EACjCkX,OAAQ1M,EAAG0M,OAAS,EAAI1M,EAAG0M,YAASlX,EACpCiB,OAAQA,EAAOvB,OAAS,EAAIuB,EAAO1D,KAAK,KAAO,GAGlD,CAEDi3D,MACE,MAAMhqD,EAAKvP,KACL8C,EAAI,GAaV,OAXIyM,EAAG8vC,KAAO,GAAGv8C,EAAE8O,KAAK,QAAQrC,EAAG8vC,WAC/B9vC,EAAGqpD,OAAS,GAAG91D,EAAE8O,KAAK,UAAUrC,EAAGqpD,WACnCrpD,EAAGsM,QAAU,GAAG/Y,EAAE8O,KAAK,WAAWrC,EAAGsM,YACrCtM,EAAGwpD,SAAW,GAAGj2D,EAAE8O,KAAK,YAAYrC,EAAGwpD,aACvCxpD,EAAGspD,UAAY,GAAG/1D,EAAE8O,KAAK,aAAarC,EAAGspD,cACzCtpD,EAAGupD,WAAa,GAAGh2D,EAAE8O,KAAK,cAAcrC,EAAGupD,eAE3CvpD,EAAG0pD,IAAM,GAAGn2D,EAAE8O,KAAK,cAAcrC,EAAG0pD,WACpC1pD,EAAG2pD,MAAQ,GAAGp2D,EAAE8O,KAAK,SAASrC,EAAG2pD,WACjC3pD,EAAGypD,SAAW,GAAGl2D,EAAE8O,KAAK,YAAYrC,EAAGypD,cAEpCl2D,CACR,CAEDwrB,MACE,MAAM/e,EAAKvP,KACL0tB,EAAUne,GAAGme,GACnBA,EAAQ1nB,OAASuJ,GAAGgqD,KAAej3D,KAAK,KAAK4B,OAC7CwpB,EAAQ1R,MAAQzM,EAAGyM,MAAQ,EAAI,GAAGzM,EAAGyM,UAAY,GACjD0R,EAAQzR,OAAS1M,EAAG0M,OAAS,EAAI,GAAG1M,EAAG0M,WAAa,EACrD,CAEDkwB,IAAQngC,GACN,MAAMlM,EAAKkM,EAAEkC,OACPqB,EAAKvP,KACPF,IACFyP,EAAG0M,OAAS1M,EAAG0M,QAAUnc,EAAGmc,OAC5B1M,EAAGyM,MAAQzM,EAAGyM,OAASlc,EAAGkc,MAC1BzM,EAAG2qB,KAAK,SAAU,CAAEle,MAAOlc,EAAGkc,MAAOC,OAAQnc,EAAGmc,OAAQ5M,QAASvP,IAAM,GAE1E,QAGCE,KAAKmJ,OAAO,WACb,EC7FI,MAAMqwD,wBAAwBr9B,GAEjCt8B,kBAAoB,CAChBO,KAAM,IAAKme,IAIf1e,eAAiB,CACbW,GAAK,CAAE,EACPJ,KAAM,CAAE,EACRiD,IAAK,CAAEjD,KAAMmO,QACbjL,IAAK,CAAElD,KAAMmO,QACbiH,KAAM,CAAEpV,KAAMmO,QACdkrD,UAAW,CAAEr5D,KAAMqB,SACnBi4D,QAAS,CAAEt5D,KAAMqB,SACjBk4D,KAAM,CAAEtrD,UAAW,SACnBurD,KAAM,CAAEvrD,UAAW,UAGvBxL,cACI8nB,QACA,MAAMpb,EAAKvP,KACXuP,EAAGmqD,SAAU,EACbnqD,GAAGkT,GAAOlT,GAAI7M,KAAI,CAAC5C,EAAI6Z,EAAKkgD,IAAQtqD,GAAGuqD,GAAQh6D,EAAI6Z,EAAKkgD,EAAK,IAChE,CAEDjd,oBACIjyB,MAAMiyB,oBACD58C,KAAK05D,SAAW1+C,MAAM+E,KAAK/f,QAAU0G,SAASyI,MAAMzI,SAASyI,KAAKqP,UAAUC,IAAI,SACxF,CAEDi/B,WACI,MAAMnuC,EAAKvP,KACLwX,EAAOjI,GAAGkT,GAAOlT,GAAI7M,KAAI,CAAC5C,EAAI6Z,EAAKkgD,IAAQtqD,GAAG7P,GAAOI,EAAI6Z,EAAKkgD,KACpE,OAAO39C,CAAI,cAAcyyB,EAAUp/B,EAAG0uC,mDAAmD/P,EAAS3+B,EAAGquC,mBAAmBpmC,SAC3H,CAEDomC,cACI,MACMmc,EAAavlB,iBAAiBgT,aADzBxnD,KACyCI,MACpD,MAAO,IACAuqB,MAAMizB,cACT,cAAemc,EAEtB,CAKDt3C,IAAO1C,GACH,OAAOic,OAAOK,QAAQtc,GAAMrd,KAAI5C,GAAMgN,OAAO4B,QAAQ5O,EAAI05D,gBAAgBv0C,UAC5E,CAEDw0C,IAAW35D,GACP,OAAOA,EAAG0V,KAAO,GAAK1V,EAAGuD,IAAM,GAAKvD,EAAGwD,IAAM,GAAKxD,EAAG25D,SACxD,CAEDK,IAAQh6D,EAAI6Z,EAAKkgD,EAAKG,EAAM,GACxB,MAAMzqD,EAAKvP,KACXuP,GAAGkT,GAAO3iB,EAAGyJ,MAAM7G,KAAI,CAAC+U,EAAIkC,EAAK8I,IAAUlT,GAAGuqD,GAAQriD,EAAIkC,EAAK8I,EAAOu3C,EAAI,KACvEzqD,GAAGkqD,GAAW35D,IAAKyP,EAAG+d,aAAa,OAAO0sC,KAAOrgD,IACvD,CAEDja,IAAOI,EAAI6Z,EAAKkgD,EAAKG,EAAM,GAEvB,MAAMzqD,EAAKvP,KACLI,EAAON,EAAGyJ,KAAKoW,cAAcvf,MAAQ,WAErCoX,EAAOjI,GAAGkT,GAAO3iB,EAAGyJ,MAAM7G,KAAI,CAAC+U,EAAIkC,EAAK8I,IAAUlT,GAAG7P,GAAO+X,EAAIkC,EAAK8I,EAAOu3C,EAAI,KAEhF32D,EAAMvD,EAAGuD,IACTC,EAAMxD,EAAGwD,IACTmiB,EAAW3lB,EAAG2lB,SACdysC,EAAQ3iD,GAAGoiD,GAAiB7xD,GAE5Bm6D,EAAK,IAAI/H,GAAO1xD,OAASilB,EAEzBy0C,EAAMp6D,EAAGM,MAAQA,GAAQ,WACzB25D,EAAavlB,iBAAiBgT,aAAa0S,GAE3CtgD,EAAMpC,EAAK/S,OAAS,GAAKs1D,EAAa,cAAgB,GAEtDI,EAAM,OAAOH,KAAOrgD,IACpB+B,EAAMnM,GAAG6qD,GAAUt6D,EAAI8Z,EAAKugD,GAC5BliD,EAAQ1I,GAAG8qD,GAAYv6D,EAAIi6D,GACjCxqD,EAAG+d,aAAa6sC,EAAKliD,GAErB,MAAMgF,EAAOnd,EAAGoI,KAAOgU,CAAI,eAAepc,EAAGoI,gBAAkB,GACzDsB,EAAM0S,CAAI,YAAYyyB,EAAU7uC,EAAGU,sBAAsB0tC,EAASxyB;cAClElE;cACA24B,EAAgB+hB;cAChBzsC,GAAYw0C,EAAK/9C,CAAI,0BAA0BuJ,oBAA6B;cAC5ExI;oBAKN,IAAKnd,EAAG25D,UAAW,OAAOjwD,EAE1B,MAAM8wD,EAAU3gD,IAAQkgD,EAAIp1D,OAAS,EAAK,MAAQ,QAC5CslD,EAAWx6C,GAAGw6C,GAAU1mD,EAAKC,EAAKlD,EAAMk6D,GAE9C,OAAI3gD,IAAQkgD,EAAIp1D,OAAS,EAAU,CAACslD,EAAWvgD,GACxC,CAACA,EAAKugD,EAChB,CAED4H,IAAiB7xD,GACb,MAAMoyD,EAAQpyD,EAAGyJ,KAAKkT,kBACtB,OAAQzB,MAAME,kBAAkBg3C,GAASA,OAAQntD,CACpD,CAEDq1D,IAAUt6D,EAAI8Z,EAAKugD,GAEf,MAAMV,EAAYz5D,MAAKy5D,GAAW35D,GAC5By6D,EAAOd,EAAY,GAAK,cAE9B,IAAIe,EAAO16D,EAAG65D,KACVc,EAAO36D,EAAG85D,KAEda,EAAOA,EAAO,eAAeA,IAAS,GACtCD,EAAOA,EAAO,mBAAmBA,IAAS,GAU1C,OARYx6D,KAAK89C,OAAOh+C,EAAG4b,IAAK,CAC5By+C,CAACA,GAAOV,EACR7/C,CAACA,GAAOA,EACR2gD,CAACA,GAAQA,EACTE,CAACA,GAAQA,EACTD,CAACA,GAAQA,GAIhB,CAEDH,IAAYv6D,EAAIi6D,GACZ,MAAM12D,EAAMvD,EAAG0V,MAAQ1V,EAAGuD,IACpBC,EAAMxD,EAAGwD,KAAOxD,EAAG0V,KACnByC,EAAQ,CAAA,EAQd,OAPI8hD,GACA9hD,EAAM,cAAgB5U,EAAM,EAAI,GAAGA,WAAU0B,EAC7CkT,EAAM,cAAgB3U,EAAM,EAAI,GAAGA,WAAUyB,IAE7CkT,EAAM,aAAe5U,EAAM,EAAI,GAAGA,WAAU0B,EAC5CkT,EAAM,aAAe3U,EAAM,EAAI,GAAGA,WAAUyB,GAEzCkT,CACV,CAED8xC,IAAU1mD,EAAKC,EAAK42D,EAAKI,GACrB,OAAOp+C,CAAI,uBAAuBg+C,cAAgBI,WAAgBj3D,WAAaC,mBAClF,QAGGtD,KAAKmJ,OAAO,YACf,ECnKE,MAAMuxD,qBAAqBv+B,GAEhCt8B,kBAAoB,CAClB4hD,SAAU,CAAEpzC,UAAY,aACxBqzC,SAAU,CAAErzC,UAAY,aACxB4tB,UAAW,CAAE77B,KAAMqB,SACnB4hB,SAAU,CAAEjjB,KAAMqB,QAASk6C,SAAS,GACpCnmC,KAAM,CAAEpV,KAAMmO,QACd/H,KAAM,IAAKytC,GACXA,MAAO,IAAKA,GACZjwC,IAAK,CAAE,EACP22D,KAAM,CAAE,EACR7Y,KAAM,CAAE,EACRh/B,MAAO,CAAE,EACTi/B,QAAS,CAAE,EACX7zC,OAAQ,CAAE,GAGZ8zC,IAAS5T,IACT6T,IAAU7T,IAEVvrC,cACE8nB,QACA3qB,KAAKgE,IAAM,GAGZ,CAEDq5C,aAAa/R,GACX3gB,MAAM0yB,aAAa/R,GACftrC,KAAKi8B,YAAcj8B,KAAKqjB,UAAUrjB,KAAK+qC,OAC5C,CAED2S,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI;WACJuzB,EAAIlgC,GAAGyyC;eACHrT,EAAUp/B,EAAG0uC;iBACXtP,EAAUp/B,EAAGstB,UAAUttB,EAAGwyC;gBAC3BpT,EAAUp/B,EAAGvL;gBACb2qC,EAAUp/B,EAAGorD;kBACXhsB,EAAUp/B,EAAGrB;iBACdggC,EAAS3+B,EAAGquC;oBACTruC,EAAG8T;sBACD9T,GAAG2yC;qBACJ3yC,GAAG4yC;kBACN5yC,GAAG0vC;UACX1vC,GAAG+B,KAAS/B,GAAG6H;aAEtB,CAEDwmC,cACE,MAAMruC,EAAKvP,KAQX,MAPY,IACP2qB,MAAMizB,cACTpiC,OAAUjM,EAAGiM,OACb,CAAC,MAAMjM,EAAGiG,QAASjG,EAAGiG,KAAO,EAC7B,CAAC,QAAQjG,EAAG/I,QAAS+I,EAAG/I,KACxB,CAAC,MAAM+I,EAAG0kC,SAAU1kC,EAAG0kC,MAG1B,CAEDxrC,QACEzI,MAAKgiD,GAAOtgD,OAAO+G,OACpB,CAEDsiC,QACEnqB,uBAAsB,IAAM5gB,MAAKgiD,GAAOtgD,OAAOqpC,SAChD,CAEGsX,aACF,OAAOriD,MAAKiiD,GAAQvgD,KACrB,CAEDu9C,IAASjzC,GACP,MAAMuD,EAAKvP,KAGX,GAFAuP,EAAG8yC,QAAQC,UACX/yC,EAAGm5B,SACY,MAAXn5B,EAAGvL,KAAehD,EAAO8D,cAAcyK,EAAGvL,KAG5C,OAFA8hB,SAASS,QAAQva,GACjBuD,EAAGwkB,OAAO/nB,IACH,CAEV,CAEDk2C,MACEliD,KAAKqiD,QAAQO,OAAM,EACpB,CAEDT,MACEniD,KAAKqiD,QAAQO,OAAM,EACpB,CAEG9/B,SACF,OAAO9iB,KAAK68B,UAAU78B,KAAK8iB,MAC5B,CAEGxR,SAAW,OAAOtR,KAAK07C,IAAM17C,MAAK8iB,GAAS9iB,MAAK6iD,EAAY,CAE5DzrC,SAAY,OAAOpX,KAAK07C,IAAM17C,MAAK6iD,GAAY7iD,MAAK8iB,EAAS,CAE7D+/B,SAAc,OAAO7iD,KAAK8hD,KAAO9hD,MAAK8iD,GAAc5mC,CAAI,2BAA8B,CAEtF4mC,SACF,OAAQ5mC,CAAI;0BACUuzB,EAAIzvC,MAAKiiD;YACvBjiD,KAAK8hD;YACL9hD,KAAKwV;iBACAm5B,EAAU3uC,KAAKyhD;iBACf9S,EAAU3uC,KAAK0hD;8BAE7B,CAUD7hD,gBAAgBolB,EAASvJ,EAAK8tC,EAAQC,GACpC,MAAM17C,EAAMkX,EACZ,OAAO/I,CAAI,aAAagyB,EAASxyB;;UAE3BtN,EAAQL,GAAK;gBACP4gC,EAAU5gC,EAAI2jC;mBACX/C,EAAU5gC,EAAIg0C;gBACjBpT,EAAU5gC,EAAI/J;UACpBwlD,GAAU;UACV7a,EAAU5gC,EAAI+U;;UAEd2mC,GAAS;SAEhB,QAGCzpD,KAAKmJ,OAAO,UACb,EC/II,MAAMyxD,sBAAsBrD,eAEjC13D,kBAAoB,CAClBmzD,WAAY,CAAErX,SAAS,EAAMv7C,KAAMqB,UAGrCoB,cACE8nB,QACA3qB,KAAK8+C,UAAW,EAChB9+C,KAAK++C,UAAW,EAChB/+C,KAAKgzD,YAAa,CACnB,CAED9V,aAAa5R,GACX,OAAOtrC,KAAKiI,KAAKxD,OAAS,GAAKzE,KAAKyiB,MAAMhe,OAAS,CACpD,CAEDm5C,cAKE,MAJY,IACPjzB,MAAMizB,cACT,cAAc,EAGjB,CAEDga,kBACE,OAAO17C,CAAI,eACZ,CAED+gB,QACEj9B,KAAKyiB,MAAM1b,SAAQjH,GAAMA,EAAGm9B,UAC5Bj9B,KAAK0oC,QACN,CAED+X,cACE,OAAOzgD,KAAKiI,KAAKvF,KAAII,GACZoZ,CAAI;mBACEyyB,GAAuB,IAAb7rC,EAAE0Y;sBACTmzB,GAA0B,IAAhB7rC,EAAEm5B;qBACb0S,GAAyB,IAAf7rC,EAAEugB;gBACjBsrB,EAAU7rC,EAAEg/C;gBACZnT,EAAU7rC,EAAEyF;kBACVomC,EAAU7rC,EAAEoL;iBACbygC,EAAU7rC,EAAEggB,2BAE1B,CAED28B,YAAY3/C,GACV,OAAO6qB,MAAM80B,YAAY3/C,IAAOE,KAAKgzD,UACtC,CAEG8E,mBACF,MAAO,cACR,QAGC93D,KAAKmJ,OAAO,UACb,ECxDI,MAAM0xD,0BAA0B1+B,GAErCt8B,kBAAoB,CAClBmE,IAAK,CAAE,EACPkK,OAAQ,CAAE,EACV4U,MAAO,CAAE,EACTg/B,KAAM,CAAE,EACRtsC,KAAM,CAAEpV,KAAMmO,QACd0tB,UAAW,CAAE77B,KAAMqB,QAASk6C,SAAS,GACrCt4B,SAAU,CAAEjjB,KAAMqB,QAASk6C,SAAS,GACpCngC,OAAQ,CAAEpb,KAAMqB,QAASk6C,SAAS,IAGpCmf,IACA9Y,IAAS5T,IAETvrC,cACE8nB,QACA3qB,KAAK88C,QACN,CAEDF,oBACEjyB,MAAMiyB,oBACN58C,MAAK86D,GAAW96D,KAAKwb,MACtB,CAED0hC,aAAaC,GACX,MAAyC,YAAlCn9C,KAAKu2B,iBAAiBpZ,OAC9B,CAEDkgC,aAAa/R,GAGItrC,KACJ+6D,kBADI/6D,KACgBwb,QAAS,EACzC,CAEDkiC,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI,oBAAoBuzB,EAAIlgC,GAAGyyC;eAC3BrT,EAAUp/B,EAAGhH;iBACXomC,EAAUp/B,EAAGrB;gBACdggC,EAAS3+B,EAAGquC;UAClBruC,GAAGyrD;UACHzrD,GAAG0rD;gBACG1rD,EAAGouC;WAEhB,CAEDC,cACE,MAAMruC,EAAKvP,KACL0b,EAAM,IACPiP,MAAMizB,cACT,mBAAmB,EACnB,0BAA0B,EAC1B,CAAC,MAAMruC,EAAGiG,QAASjG,EAAGiG,KAAO,EAC7B,CAACjG,GAAG2rD,KAAY,EAChB1/C,OAAUjM,EAAGuoB,UAEf,OAAOvoB,EAAGuuC,OAAOvuC,GAAG4rD,GAAgBz/C,EACrC,CAEGoc,eACF,OAAO93B,KAAKwb,QAAUxb,KAAKo7D,YAC5B,CAEGA,mBACF,OAAQp6D,EAAOgM,OAAOhN,KAAKqjB,WAAariB,EAAOgM,OAAOhN,KAAKu2B,gBAAgBy8B,WAC5E,CAEG+H,sBACF,OAAO/5D,EAAO6F,iBAAiB7G,KAAKgE,MAAQhE,KAAKgE,MAAQif,SAASC,IACnE,CAED4/B,MACE,MAAMvzC,EAAKvP,KACX,OAAOuP,EAAGuyC,KAAO5lC,CAAI,kBAAkB3M,EAAGuyC,eAAevyC,EAAGiG,mBAAqB0G,CAAI,2BACtF,CAEDm/C,MACE,OAAOr7D,KAAK8iB,MAAQ5G,CAAI,SAASlc,KAAK68B,UAAU78B,KAAK8iB,gBAAkB5G,CAAI,4BAC5E,CAED8+C,MACE,OAAOh7D,KAAK07C,IAAM17C,MAAKq7D,KAAgBr7D,MAAK8iD,IAC7C,CAEDmY,MACE,OAAOj7D,KAAK07C,IAAM17C,MAAK8iD,KAAgB9iD,MAAKq7D,IAC7C,CAED/sD,SACEtO,KAAKwb,QAAUxb,KAAKwb,MACrB,CAEDyhB,QACEj9B,KAAKwb,OAASxb,KAAKi8B,WAAaj8B,MAAK86D,KAAY,CAClD,CAEDryD,QACEzI,MAAKgiD,GAAOtgD,OAAO+G,OACpB,CAEDsiC,QACEnqB,uBAAsB,IAAM5gB,MAAKgiD,GAAOtgD,OAAOqpC,SAChD,CAEGxiC,WACF,OAAOvI,KAAKgE,IAAMhE,KAAKgE,IAAM,GAC9B,CAEGs3D,SACF,OAAOt7D,KAAKu2B,gBAAgBnoB,SAASmtD,WAAa,EACnD,CAEGC,SACF,OAAOx7D,KAAKu2B,gBAAgBnoB,SAASqtD,aAAe,EACrD,CAEGP,SACF,OAAOl7D,KAAKu2B,gBAAgBnoB,SAASkyC,SAAW,EACjD,CAEG6a,SACF,OAAOn7D,KAAK83B,SAAW93B,MAAKs7D,GAAat7D,MAAKw7D,EAC/C,QAGCx7D,KAAKmJ,OAAO,eACb,EC9HI,MAAMuyD,uBAAuBv/B,GAElCt8B,kBAAoB,CAClB87D,MAAO,CAAEv7D,KAAMmO,QACfqtD,MAAO,CAAEx7D,KAAMmO,QACfstD,QAAS,CAAEz7D,KAAMmO,QACjButD,QAAS,CAAE17D,KAAMmO,QACjBotB,QAAS,CAAEv7B,KAAMmO,QACjBqtB,QAAS,CAAEx7B,KAAMmO,QACjBwtD,QAAS,CAAE37D,KAAMmO,QACjBytD,QAAU,CAAE57D,KAAMmO,SAGpB1L,cACE8nB,OACD,CAEDiyB,oBACEjyB,MAAMiyB,oBACN58C,KAAKw4C,YAAY1xC,OAAQ,YAAa9G,MAAKi8D,GAASn0D,KAAK9H,MAC1D,CAED09C,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI;aACF3M,EAAGwsD,YAAYxsD,EAAGysD;eAChBzsD,EAAGosB,YAAYpsB,EAAGqsB;WACtBrsB,EAAGosD,UAAUpsD,EAAGqsD;aACdrsD,EAAGssD,YAAYtsD,EAAGusD,UAC5B,CAEDG,IAASjwD,GACP,MAAMuD,EAAKvP,KACXuP,EAAGwsD,QAAU/vD,EAAE+vD,QACfxsD,EAAGysD,QAAUhwD,EAAEgwD,QACfzsD,EAAGosB,QAAU3vB,EAAE2vB,QACfpsB,EAAGqsB,QAAU5vB,EAAE4vB,QACfrsB,EAAGosD,MAAQ3vD,EAAE2vD,MACbpsD,EAAGqsD,MAAQ5vD,EAAE4vD,MACbrsD,EAAGssD,QAAU7vD,EAAE6vD,QACftsD,EAAGusD,QAAU9vD,EAAE8vD,OAChB,QAGC97D,KAAKmJ,OAAO,WACb,EC5CI,MAAM+yD,yBAAyB//B,GAEpCt8B,cAAgB6b,CAAG;;;;;;;;;;;;MAcnB7b,kBAAoB,CAClBwd,OAAQ,CAAEjd,KAAMqB,SAChBo8C,OAAQ,CAAEz9C,KAAMqB,SAChBwyC,MAAO,CAAE0H,SAAS,KAAS1H,IAG7B2S,IAAWt6C,KAAK9L,GAChBwhD,IAAS5T,IACTjN,KAAW,EAEXt+B,cACE8nB,QACW3qB,KACRstB,aADQttB,MACQ4mD,GACpB,CAEDhK,oBACEjyB,MAAMiyB,oBACN,MAAMrtC,EAAKvP,KACL+f,EAAOrZ,SAASuZ,gBACtB1Q,EAAGipC,YAAYz4B,EAAM,YAAaxQ,GAAG4sD,GAAQr0D,KAAKyH,IAClDA,EAAGipC,YAAYz4B,EAAM,YAAaxQ,GAAG+oC,GAAaxwC,KAAKyH,IACvDA,EAAGipC,YAAYz4B,EAAM,UAAWxQ,GAAG8oC,GAAWvwC,KAAKyH,GACpD,CAED8tC,eACE1yB,MAAM0yB,eACN,MACMzlC,EADK5X,KACKstB,aADLttB,MACqB4mD,IAChC/lD,OAAOggB,OAAOjJ,EAAKK,MAAO,CAACmkD,OAAQ,QACpC,CAED1e,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI,QAAQuzB,EAAIlgC,GAAGyyC;uBACPzyC,GAAGq3C;eACX1Y,EAAS3+B,EAAGquC;oBACP,IAAMruC,GAAG4xB,IAAW;kBACtB,IAAM5xB,GAAG4xB,IAAW;;aAGnC,CAEDyc,cACE,MAAMruC,EAAKvP,KAUX,MATY,IACP2qB,MAAMizB,cACT,cAAe,EACf,CAACruC,GAAGq3C,KAAW,EACf,qBAAsB,EACtB/I,OAAWtuC,EAAGsuC,OACd,YAActuC,EAAG8N,OACjB,CAAC,QAAQ9N,EAAG0kC,SAAU1kC,EAAG0kC,MAG5B,CAEDooB,IAAchhC,GACZ,MACMzjB,EADK5X,KACKstB,aADLttB,MACqB4mD,IAChC/lD,OAAOggB,OAAOjJ,EAAKK,MAAO,CAAC,cAAeojB,EAAO,OAAS,IAC3D,CAED8gC,IAAQnwD,GACN,GAAIhM,MAAKmhC,GAAU,CACjB,MAAMlpB,EAAQjY,MAAKgiD,GAAOtgD,MAAMuW,MAChCA,GAAO8U,YAAY,YAAa/gB,EAAE2vB,QAAU,MAC5C1jB,GAAO8U,YAAY,YAAa/gB,EAAE4vB,QAAU,KAC7C,CACF,CAED0c,IAAatsC,GACXhM,MAAKq8D,IAAc,EACpB,CAEDhkB,IAAWrsC,GACThM,MAAKq8D,IAAc,EACpB,QAICr8D,KAAKmJ,OAAO,aACb,ECtGI,MAAMmzD,qBAAqB/E,eAEhC13D,kBAAoB,CAClBO,KAAMm0C,EACNr1B,UAAWA,EACXu2C,SAAU,CAAEr1D,KAAMqB,UAGpBoB,cACE8nB,QACA3qB,KAAK8+C,UAAW,EAChB9+C,KAAK++C,UAAW,EAChB/+C,KAAKI,KAAO,QACZJ,KAAKkf,UAAY,OAClB,CAEDg+B,aAAa5R,GACX,OAAOtrC,KAAKiI,KAAKxD,OAAS,GAAKzE,KAAK4J,MAAM,eAAe,GAAO,EACjE,CAEDiuD,qBACE,MAAMtoD,EAAKvP,KACLknD,EAAWzS,eAAeyS,SAAS33C,EAAG2P,WACtCq9C,EAAoB,SAAZhtD,EAAGnP,KAUjB,MATY,CACVm0C,KAAO,EACP,CAAC,OAAOhlC,EAAGnP,QAASmP,EAAGnP,KACvB,cAAemP,EAAGkmD,SAClB,kBAAmBlmD,EAAGkmD,SACtB,aAAc8G,GAASrV,GAAY33C,EAAGkmD,SACtC,eAAgB8G,IAAUrV,GAAY33C,EAAGkmD,SACzC,CAAC,mBAAmBlmD,EAAG2P,cAAe3P,EAAGkmD,SAG5C,CAMDhV,cACE,OAAOzgD,KAAKiI,KAAKvF,KAAII,GACZoZ,CAAI;oBACe,IAAbpZ,EAAE0Y;uBACiB,IAAhB1Y,EAAEm5B;qBACH0S,GAAyB,IAAf7rC,EAAEugB;gBACjBsrB,EAAU7rC,EAAEg/C;gBACZnT,EAAU7rC,EAAEyF;kBACVomC,EAAU7rC,EAAEoL;iBACbygC,EAAU7rC,EAAEggB;yBAG1B,CAMD08B,UAAU1/C,GAET,CAEGg4D,mBACF,MAAO,aACR,QAGC93D,KAAKmJ,OAAO,SACb,ECpEI,MAAMqzD,yBAAyBrgC,GAEpCt8B,kBAAoB,CAClB0I,KAAM,CAAE,EACR2F,OAAQ,CAAE,EACV4U,MAAO,CAAE,EACTg/B,KAAM,CAAE,EACRz+B,SAAU,CAAEjjB,KAAMqB,SAClBw6B,UAAW,CAAE77B,KAAMqB,SACnB+Z,OAAQ,CAAEpb,KAAMqB,QAASk6C,SAAS,GAClCoG,QAAS,CAAE,EACX0a,MAAO,CAAEr8D,KAAMqB,SACfi7D,WAAY,IAAIzoB,GAChB0oB,WAAY,CAAG,GAGjB3a,IAAS5T,IAETvrC,cACE8nB,QACA3qB,KAAK08D,WAAa,SAClB18D,KAAK28D,WAAa,GACnB,CAED5f,8BACS/8C,KAAK6K,OAAOkY,IAAI,eACvB4H,MAAMoyB,sBACP,CAEDG,aAAaC,GACX,OAAOn9C,KAAKu2B,iBAAiBpZ,UAAYnd,KAAK48D,UAC/C,CAEDvf,aAAa/R,GACX3gB,MAAM0yB,aAAa/R,GACftrC,KAAKi8B,YAAcj8B,KAAKqjB,UAAUrjB,KAAK+qC,OAC5C,CAED2S,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI,0CAA0CgyB,EAAS3+B,EAAGquC,mBAAmBruC,GAAG+xC,KAAU/xC,GAAGstD,UACrG,CAEDjf,cACE,OAAO59C,KAAK89C,OAAO99C,MAAK88D,GAAWnyC,MAAMizB,cAC1C,CAED3gB,QACEj9B,KAAKwb,OAASxb,KAAKi8B,YAAa,CACjC,CAEDxzB,QACEzI,MAAKgiD,GAAOtgD,OAAO+G,OACpB,CAEDsiC,QACEnqB,uBAAsB,IAAM5gB,MAAKgiD,GAAOtgD,OAAOqpC,SAChD,CAEG6xB,iBACF,MAAO,QACR,CAEGld,YACF,OAAO,CACR,CAEG+V,eACF,OAAOz1D,KAAKu2B,gBAAgBk/B,WAAY,CACzC,CAEGv2C,gBACF,OAAOlf,KAAKu2B,gBAAgBrX,SAC7B,CAEGlb,UACF,OAAOhE,KAAKuI,MAAQvI,KAAKkO,OAASlO,KAAKuI,KAAO,GAC/C,CAEGua,SACF,OAAO5G,CAAI,SAASlc,KAAK68B,UAAU78B,KAAK8iB,eACzC,CAEGg/B,SACF,OAAO9hD,KAAK8hD,KAAO5lC,CAAI,kBAAkBlc,KAAK8hD,mBAAqB5lC,CAAI,2BACxE,CAEG5K,SACF,OAAOtR,KAAK07C,IAAM17C,MAAK8iB,GAAS9iB,MAAK8hD,EACtC,CAEG1qC,SACF,OAAOpX,KAAK07C,IAAM17C,MAAK8hD,GAAQ9hD,MAAK8iB,EACrC,CAEGw+B,SACF,MAAM/xC,EAAKvP,KACX,IAAIgC,EAAMuN,EAAGuuC,OAAOvuC,GAAGwtD,GAAY,CAAA,GAEnC,OADIxtD,EAAGiM,SAAQxZ,EAAMuN,EAAGuuC,OAAOvuC,GAAGytD,GAAY,IAAMztD,GAAG+rD,GAAYt5D,IAC5Dka,CAAI;OACRuzB,EAAIlgC,GAAGyyC;uBACS9T,EAASlsC;aACnB2sC,EAAUp/B,EAAGvL;eACX2qC,EAAUp/B,EAAGrB;cACdygC,EAAUp/B,EAAGwyC;UACjBxyC,GAAG+B;UACH/B,GAAG6H;WAEV,CAEGylD,SACF,MAAMttD,EAAKvP,KACX,IAAKuP,EAAGktD,MAAO,MAAO,GACtB,MAAM/gD,EAAM,CACV,SAAU,EACV,SAAU,EACV,sBAAuB,EACvB,CAAC,WAAWnM,EAAGmtD,cAAentD,EAAGmtD,YAEnC,OAAOxgD,CAAI,qDAAqDgyB,EAASxyB,OAASnM,EAAGotD,mBACtF,CAEGG,SACF,OAAO98D,KAAKu2B,gBAAgBnoB,SAASkyC,SAAW,EACjD,CAEGyc,SACF,OAAO/8D,KAAKu2B,gBAAgBnoB,SAAS6uD,WAAa,EACnD,CAEG3B,SACF,OAAOt7D,KAAKu2B,gBAAgBnoB,SAASmtD,WAAa,EACnD,CAEG2B,SACF,OAAO5oB,EAAS/8B,QAAQvX,KAAKu2B,gBAAgBn2B,KAC9C,CAKG48D,SACF,MAAMnW,EAAa7mD,KAAKy1D,SAClBvO,EAAWzS,eAAeyS,SAASlnD,KAAKkf,WAC9C,OAAQlf,MAAKk9D,IAEX,KAAK,EAAG,MAAO,0BAEf,KAAK,EACH,OAAIrW,EACEK,EACK,kCAEA,oCAGJ,qCAET,KAAK,EAAG,MAAO,+CACf,QACE,MAAO,GAEZ,QAGClnD,KAAKmJ,OAAO,cACb,ECrKI,MAAMg0D,yBAAyBhhC,GAElCt8B,kBAAoB,CAChBo0C,MAAO,CAAE,EACT/lC,OAAQ,CAAE,EACVkvD,WAAY,CAAEh9D,KAAMqB,SACpBgpC,OAAQ,CAAErqC,KAAMqB,SAChBoa,QAAS,CAAEzb,KAAMmO,QACjB6vB,QAAS,CAAEh+B,KAAMmO,QACjB8uD,OAAQ,CAAEj9D,KAAMmO,SAGpBq4C,IAAWt6C,KAAK9L,GAChB88D,IAAYhxD,KAAK9L,GAEjBqC,cACI8nB,QAEA3qB,KAAKi0C,MAAQ,OACbj0C,KAAK6b,QAAU,GACf7b,KAAKo+B,QAAU,EACfp+B,KAAKq9D,OAAS,EACdr9D,KAAKstB,aAAattB,MAAK4mD,IACvB5mD,KAAKstB,aAAattB,MAAKs9D,GAC1B,CAED1gB,oBACIjyB,MAAMiyB,oBACN,MAAMrtC,EAAKvP,KACXuP,EAAGipC,YAAY1xC,OAAQ,UAAU,IAAMyI,EAAGmoC,iBAC7C,CAEDgG,WACI,MAAMnuC,EAAKvP,KACX,IAAKuP,EAAGk7B,OAAQ,MAAO,GACvB,MAAM5Z,EAAOthB,GAAGshB,GAChB,OAAOA,EAAO3U,CAAI;;;2BAGCpV,OAAOkiD,cAAcliD,OAAOy2D;oDACHhuD,GAAGq3C;sBACjCr3C,EAAG0tB,MAAMn1B,KAAKyH;cACtBshB;gBACI,EACb,CAEDjlB,mBAAmB0/B,GACJtrC,KAaRstB,aAbQttB,MAaQ4mD,GAZP,CACR4W,SAAU,UACVC,SAAU,UACVC,eAAgB,QAChBC,iBAAkB,IAClBC,OAAQ,QACR1+B,SAAU,QACVnB,IAAK,IACL92B,KAAM,IACN+U,MAAO,OACPC,OAAQ,SAGZ0O,MAAM0yB,aAAa/R,EACtB,CAEDN,OACIhrC,KAAKyqC,QAAS,CACjB,CAEDiW,QACI1gD,KAAKyqC,QAAS,CACjB,CAEDn8B,SACItO,KAAKyqC,QAAUzqC,KAAKyqC,MACvB,CAEDxN,QACej9B,KACJo9D,YADIp9D,KACW0gD,OACzB,CAEG7vB,SACA,MAAMthB,EAAKvP,KACLF,EAAKkb,MAAMpR,MAAM2F,EAAGrB,QAC1B,IAAKqB,EAAGrB,OAAQ,MAAO,GACvB,MAAM2vD,EAAUtuD,GAAGuuD,GAAqBh+D,GAClCiO,EAAM,CAAEgwD,KAAMxuD,EAAG0kC,MAAOp4B,QAAStM,EAAGsM,QAASmiD,cAAe,OAAQ5B,OAAQ,QAElF,OADA7sD,EAAG+d,aAAa/d,GAAG+tD,GAAWvvD,GACvBmiC,CAAG,gBAAgB3gC,GAAG+tD,WAAkBO,YAClD,CAEDC,IAAqB5vD,GAEjB,MACM+vD,EAAUn3D,OAAOkiD,WACjBkV,EAAUp3D,OAAOy2D,YAEjBzhD,EAAO5N,EAAO6N,wBAEdqiB,EANKp+B,KAMQo+B,QACbi/B,EAPKr9D,KAOOq9D,OAEZrhD,EAAQF,EAAKE,MAAkB,EAAVoiB,EACrBniB,EAASH,EAAKG,OAAmB,EAAVmiB,EAGvB+/B,EAAgB56D,KAAKF,IAAIg6D,EAAQrhD,EAAQ,EAAGC,EAAS,GAGrDmiD,EAAmB76D,KAAKgB,MAAMhB,KAAKD,IAAI66D,EAAe,IAItDE,EAAoBriD,EAA2B,EAAnBoiD,EAC5BE,EAAqBriD,EAA4B,EAAnBmiD,EAYpC,MAVY,IAAIH,aAAmBC,KAAWD,KAAWC,KAAWD,sBAL9CniD,EAAK5Z,EAAIk8B,EAAUggC,KACnBtiD,EAAKvF,EAAI6nB,oBAMxBigC,oBACAD,KAAoBA,WAA0BA,KAAoBA,oBAClEE,oBACAF,KAAoBA,YAA2BA,KAAoBA,qBAClEC,oBACDD,KAAoBA,YAA2BA,MAAqBA,qBACnEE,oBACDF,KAAoBA,WAA0BA,MAAqBA,MAC/Dn8D,QAAQ,UAAW,IACjC,QAGGjC,KAAKmJ,OAAO,aACf,ECnIE,MAAMo1D,uBAAuBpiC,GAElCt8B,kBAAoB,CAClB43C,QAAS,CAAE,EACXjiC,KAAM,IAAKA,IACXlE,MAAO,CAAElR,KAAMqB,SACf2P,KAAM,CAAEhR,KAAMqB,SACd+K,KAAM,CAAEpM,KAAMqB,SACdsiC,SAAU,CAAE3jC,KAAMqB,SAClB+8D,MAAO,CAAEp+D,KAAMmO,QAEfkwD,WAAY,CAAEpwD,UAAW,eACzBqwD,UAAW,CAAErwD,UAAW,cACxBswD,UAAW,CAAEtwD,UAAW,cACxBuwD,cAAe,CAAEvwD,UAAW,kBAE5BiyC,QAAS,CAAEjyC,UAAW,aAIxBohC,IAAOrB,IAEPvrC,cACE8nB,QACA,MAAMpb,EAAKvP,KACXuP,EAAGivD,MAAQ,EACXjvD,EAAGkvD,WAAa,UAChBlvD,EAAGmvD,UAAY,UACfnvD,EAAGovD,UAAY,WACfpvD,EAAGqvD,cAAgB,WACfrvD,GAAG25C,KACL35C,EAAG0N,KAAO,QAEb,CAEDygC,WACE,MAAMnuC,EAAKvP,KACL6+D,EAAOt7D,KAAKgB,OAAOgL,EAAGivD,MAAQ,GAAK,GACnCnnB,EAAO9nC,EAAG8sC,gBAAgBhF,MAAQ,EAClC3f,EAAQ2f,EAAOwnB,EAAO,EAAI,EAAIxnB,EAAOwnB,EACrCrjC,EAAM6b,EAAO,EAAIA,EAAOwnB,EAAOtvD,EAAGivD,MAExC,OAAOtiD,CAAI;eACAyyB,EAAUp/B,EAAG0uC;kBACV1uC,GAAG0vC;kBACH1vC,GAAGyvC;oBACDzvC,GAAG6W;cACTqpB,EAAIlgC,GAAGkgC,cAAgBvB,EAAS3+B,EAAGquC;UACvCruC,GAAGyrD;UACHzrD,GAAGuvD;UACHp8D,EAAI8sC,EAAM9X,EAAO8D,EAAM,IAAK74B,GAAM4M,GAAGwvD,GAAYp8D,EAAG,GAAI,GAAIA,IAAO00C;UACnE9nC,GAAGyvD;UACHzvD,GAAG0vD;oBAEV,CAEDrhB,cACE,MAAMruC,EAAKvP,KACLwV,EAAOjG,EAAGiG,KAAOo/B,GAAUrlC,EAAGiG,OAASjG,EAAGiG,KAAO,GAOvD,MANY,IACPmV,MAAMizB,cACTshB,YAAc,EACd,CAAC,cAAc1pD,KAASA,EAI3B,CAED2qC,UACE,MAAMjyC,EAASlO,MAAKyvC,GAAK/tC,MACrBwM,GAAUlO,KAAKk+C,WACjBhwC,EAAO6J,cAAc,gBAAgBgzB,OAExC,CAED4M,aACE33C,KAAK03C,eACN,CAEDsjB,MACE,OAAOh7D,KAAKsR,MAAQtR,MAAK++D,GAAY/+D,KAAKy+D,WAAY,QAAS,cAAgB,EAChF,CAEDQ,MACE,OAAOj/D,KAAKoR,KAAOpR,MAAK++D,GAAY/+D,KAAK0+D,UAAW,OAAQ,aAAe,EAC5E,CAEDI,MACE,OAAO9+D,KAAK+jC,SAAW/jC,MAAK++D,GAAY/+D,KAAK4+D,cAAe,WAAY,iBAAmB,EAC5F,CAEDI,MACE,OAAOh/D,KAAKwM,KAAOxM,MAAK++D,GAAY/+D,KAAK2+D,UAAW,OAAQ,aAAe,EAC5E,CAEDI,IAAYv4D,EAAO,GAAI0B,EAAO,GAAI4a,EAAQ,GAAItH,GAAS,GAGrD,OADAhV,EAAOxF,EAAOm+D,mBAAmB34D,GAC1B0V,CAAI,wBAAwBV,EAAS,SAAW;oCACvBxb,KAAKsgD;yBAChBp4C;0BAJVlI,KAKc68B,UAAU/Z;4BALxB9iB,KAMgB68B,UAAUr2B;kBAEtC,CAEDy4C,IAASjzC,GAEP,MACMlM,EAAKE,MAAKo/D,GAAUpzD,EAAG,KAC7B,IAAKlM,EAAI,OAET,MAAMu/D,EAJKr/D,KAIKq8C,eAChB,IAAKgjB,EAAM,OAEX,MAAMz9D,EAAM9B,EAAGoI,MAAQpI,EAAG0G,KAG1B,OAVWxG,KAQRk6B,KAAKt4B,EAAK9B,GAEL8B,GACN,IAAK,QACH,OAAOy9D,EAAKjoB,YACd,IAAK,OACH,OAAOioB,EAAK/nB,WACd,IAAK,OACH,OAAO+nB,EAAK9nB,WACd,IAAK,WACH,OAAO8nB,EAAK7nB,WAGhB6nB,EAAKhoB,KAAOz1C,CACb,CAEDwkB,GAAWpa,GACT,MAAMk5C,EAAUllD,MAAKo/D,GAAUpzD,EAAG,MAClC,IAAIlM,EAAK,KACT,OAAQkM,EAAEwa,MACR,IAAK,YACH1mB,EAAKolD,GAASxO,uBACd,MACF,IAAK,aACH52C,EAAKolD,GAASlmC,mBAGlBlf,EAAKA,GAAIiY,cAAc,KACvBjY,GAAIirC,OACL,CAEDiU,IAAShzC,GACQ,UAAXA,EAAEwa,MACJxmB,MAAKo/D,GAAUpzD,EAAG,MAAMvD,OAE3B,CAED22D,IAAUpzD,EAAG9D,GACX,MAAMpI,EAAKkM,EAAEkC,OAAOsR,QAAQtX,IAAS8D,EAAEkC,OACvC,OAAOpO,EAAGqd,UAAYjV,EAAK1F,cAAgB1C,OAAKiF,CACjD,CAEGmkD,SACF,MAAyC,aAAlClpD,KAAKu2B,iBAAiBpZ,OAC9B,QAGCnd,KAAKmJ,OAAO,gBACb,ECjKI,MAAMm2D,uBAAuBnjC,GAElCt8B,kBAAoB,CAClBqf,UAAW,IAAKA,GAChBggB,SAAU,IAAKA,GACfzL,QAAS,CAAE,EACXvlB,OAAQ,CAAE,EACVmyC,UAAW,CAAEjgD,KAAMqB,SACnBw6B,UAAW,CAAE77B,KAAMqB,SACnBgpC,OAAQ,CAAErqC,KAAMqB,SAChBm4D,KAAM,CAAEx5D,KAAMmO,OAAQF,UAAW,SACjCsrD,KAAM,CAAEv5D,KAAMmO,OAAQF,UAAW,SACjCkxD,KAAM,CAAEn/D,KAAMmO,OAAQF,UAAW,SACjCmxD,KAAM,CAAEp/D,KAAMmO,OAAQF,UAAW,SACjCoxD,KAAM,CAAEr/D,KAAMmO,OAAQF,UAAW,SACjCqxD,KAAM,CAAEt/D,KAAMmO,OAAQF,UAAW,UAInCi6C,IAAU,KACVqX,IAAYvxB,IACZwY,IAAWt6C,KAAK9L,GAEhBqC,cACE8nB,QACA3qB,KAAKi8B,WAAY,EACjBj8B,KAAKqgD,WAAY,EACjBrgD,KAAKyzB,QAAU,QACfzzB,KAAKk/B,SAAW,WAChBl/B,KAAKkf,UAAY,SACjBlf,KAAKstB,aAAattB,MAAK4mD,GACxB,CAEDhK,oBACEjyB,MAAMiyB,oBACN,MAAMrtC,EAAKvP,KACXuP,GAAG45C,KACH55C,EAAGipC,YAAY1xC,OAAQ,SAAUyI,EAAGmxC,MAAM54C,KAAKyH,IAC/CA,EAAGY,GAAG,aAAcZ,GAAGqwD,GAAQ93D,KAAKyH,GACrC,CAED8tC,aAAaF,GACX,MAAM5tC,EAAKvP,KACX4gB,uBAAsB,KACpBrR,GAAG+qD,KACH/qD,GAAGswD,IAAa,IAElBl1C,MAAM0yB,cACP,CAED8C,UACE,MAAM5wC,EAAKvP,KACXuP,GAAGswD,KACCtwD,EAAG0sB,WAAW1sB,EAAGw7B,QACrBx7B,EAAGm5B,SACHn5B,GAAGuwD,IACJ,CAEDxiB,WAAWH,GAIT,OAHIA,EAAkB3iB,IAAI,WACxBx6B,MAAK8/D,KAEAn1C,MAAM2yB,WAAWH,EACzB,CAEDO,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI;QACPuzB,EAAIlgC,GAAGowD;aACFhxB,EAAUp/B,EAAG0uC;oBACN/P,EAAS3+B,EAAGquC;uBACTruC,GAAGq3C;kBACRr3C,GAAG6W;QACb7W,EAAGouC;;WAGR,CAEDC,cACE,MAAMruC,EAAKvP,KAQX,MAPY,IACP2qB,MAAMizB,cACTwD,KAAQ7xC,EAAGk7B,OAEX,CAACl7B,GAAGq3C,KAAW,EACf,CAAC,YAAYr3C,EAAG2vB,YAAa3vB,EAAG2vB,SAGnC,CAED6L,QACE/qC,KAAK4J,MAAM,kDAAkD,IAAOmhC,OACrE,CAEDC,OACEhrC,KAAKyqC,QAAS,CACf,CAEDiW,QACE1gD,KAAKyqC,QAAS,CACf,CAEDn8B,SACEtO,KAAKyqC,QAAUzqC,KAAKyqC,MACrB,CAQD4d,MAAMnmD,EAAI,EAAGqU,EAAI,GACf,MACMvU,EAAM,CACV+7B,IAAK,MACL92B,KAAM,MACN41B,UAAW,GAAG36B,OAAOqU,OAJZvW,MAMRs6D,GAAQt4D,EACZ,CAEDokB,GAAWpa,GACT,MAAMuD,EAAKvP,KACX,GACO,WADCgM,EAAE6K,IAENtH,EAAGmxC,OAGR,CAEDmf,MACE,MAAMtwD,EAAKvP,KAEX,GAAIuP,EAAGoqD,MAAQpqD,EAAGqqD,KAAM,CACtB,MAAM7rD,EAAM,CACVgwB,IAAK,MACL92B,KAAM,MACN41B,UAAW,GAAGttB,EAAGqqD,UAAUrqD,EAAGoqD,UAE1B/hD,EAAOrI,EAAG+d,aAAa/d,GAAGq3C,IAChC/lD,OAAOggB,OAAOjJ,EAAKK,MAAOlK,EAChC,MAAW,GAAIwB,EAAGrB,OAAQ,CACpB,IAAIA,EAAS8M,MAAMpR,MAAMlD,SAASuZ,gBAAiB1Q,EAAGrB,QACtDA,EAASA,EAAO0nC,YAAYn5B,mBAAqBvO,EACjDuvB,SAASsiC,WAAWxwD,EAAG2P,UAAW3P,GAAGywD,GAAQ9xD,EAC9C,CAEF,CAEDosD,IAAQt4D,EAAM,IACZ,MAAMuN,EAAKvP,KACL4X,EAAOrI,EAAG+d,aAAa/d,GAAGq3C,IAC5Br3C,EAAGiwD,OAAMx9D,EAAI,aAAe,GAAGuN,EAAGiwD,UAClCjwD,EAAGgwD,OAAMv9D,EAAI,aAAe,GAAGuN,EAAGgwD,UAClChwD,EAAGmwD,OAAM19D,EAAI,cAAgB,GAAGuN,EAAGmwD,UACnCnwD,EAAGkwD,OAAMz9D,EAAI,cAAgB,GAAGuN,EAAGkwD,UACvC5+D,OAAOggB,OAAOjJ,EAAKK,MAAOjW,EAC3B,CAEDqnD,IAASr9C,GACP,MAAMuD,EAAKvP,KAOX,GANAuP,GAAG+4C,GAAUt8C,EACTA,aAAaoZ,QACfU,SAASS,QAAQva,GACjBuD,GAAG+4C,GAAUt8C,EAAE4zC,eAAe55C,QAAOgG,KAAQA,aAAa6R,mBAAmB/N,SAG3EP,EAAG2P,UAGL,OAFAue,SAASsiC,WAAWxwD,EAAG2P,UAAW3P,GAAGywD,GAAQzwD,GAAG+4C,SAChD/4C,EAAGk7B,QAAS,GAId,IAAIvoC,EAAI8J,EAAE2vB,QAASplB,EAAIvK,EAAE4vB,QACzB,MAAM9f,EAAOvM,GAAGywD,GAAOjkD,wBACjBkkD,EAAY/9D,EAAI4Z,EAAKE,MAAQlV,OAAOkiD,WACpCkX,EAAY3pD,EAAIuF,EAAKG,OAASnV,OAAOy2D,YAM3C,OAJI0C,IAAW/9D,EAAI4E,OAAOkiD,WAAaltC,EAAKE,OACxCkkD,IAAW3pD,EAAIzP,OAAOy2D,YAAczhD,EAAKG,QAE7C1M,EAAG84C,MAAMnmD,EAAGqU,IACL,CACR,CAEDupD,MACE,MAAMvwD,EAAKvP,KACL4X,EAAOrI,EAAG+d,aAAa/d,GAAGq3C,IAChC/lD,OAAOggB,OAAOjJ,EAAKK,MAAO,CAAC2D,QAASrM,EAAGk7B,OAAS,GAAK,QACtD,CAED0e,MACE,MAAM55C,EAAKvP,KACLg0B,EAAUhZ,MAAMsC,SAAS5W,SAASuZ,gBAAiB1Q,EAAGrB,QAC5DqB,EAAGkkB,QAAQrxB,MAAM,KAAK2E,SAAQugB,IAC5B0M,EAAQjtB,SAAQmH,GAAUqB,EAAGipC,YAAYtqC,EAAQoZ,EAAK/X,GAAG85C,GAASvhD,KAAKyH,KAAK,GAE/E,CAEDqwD,IAAQ5zD,GACFhM,KAAKqgD,WAAWrgD,KAAK0gD,OAC1B,CAEGsf,SACF,OAAOhgE,MAAK2/D,GAAUj+D,KACvB,QAGC1B,KAAKmJ,OAAO,WACb,EClNI,MAAMg3D,yBAAyBhkC,GAEpCt8B,kBAAoB,CAClBqf,UAAW,IAAKA,GAChBhR,OAAQ,CAAE,EACVulB,QAAS,CAAE,EACX3Q,MAAO,CAAE,EACT1H,QAAS,CAAE,EACXqvB,OAAQ,CAAErqC,KAAMqB,UAGlB2+D,IAAYhyB,IACZuxB,IAAYvxB,IACZwY,IAAWt6C,KAAK9L,GAChB6/D,IAAW/zD,KAAK9L,GAEhBqC,cACE8nB,QACA,MAAMpb,EAAKvP,KAGXuP,EAAG2P,UAAY,MACf3P,EAAGkkB,QAAU,QACblkB,EAAG6L,QAAU,GACb7L,EAAG+d,aAAa/d,GAAGq3C,IACnBr3C,EAAG+d,aAAa/d,GAAG8wD,GACpB,CAEDhjB,aAAa/R,GACX3gB,MAAMiyB,oBACK58C,MACRsgE,KADQtgE,MAER6/D,KACHl1C,MAAM0yB,aAAa/R,EACpB,CAEDgS,WAAWhS,GACT3gB,MAAM2yB,WAAWhS,GACjBtrC,MAAK6/D,IACN,CAEDniB,WACE,MAAMnuC,EAAKvP,KACLwc,EAAOjN,EAAGuT,MAAQ5G,CAAI,8BAA8B3M,EAAGsgD,YAAYtgD,EAAGstB,UAAUttB,EAAGuT,eAAiB,GAC1G,OAAO5G,CAAI;WACJuzB,EAAIlgC,GAAGowD;eACHhxB,EAAUp/B,EAAG0uC;iCACK1uC,EAAG2P;iBACnBgvB,EAAS3+B,EAAGquC;yBACJruC,GAAGq3C;;eAEbnX,EAAIlgC,GAAG6wD;iCACW7wD,GAAG8wD;2BACT9wD,GAAG8wD;;UAEpB7jD;;YAEEjN,EAAGouC;YACHpuC,EAAG6L;;;;KAKZ,CAEDwiC,cAUE,MARY,IACPjzB,MAAMizB,cACT2iB,SAAW,EACX,mBAAmB,EACnBC,MAAQ,EACRpf,KANSphD,KAMEyqC,OACX,CAPSzqC,MAOL4mD,KAAW,EAGlB,CAED5b,OACEhrC,KAAKyqC,QAAS,CACf,CAEDiW,QACE1gD,KAAKyqC,QAAS,CACf,CAEDn8B,SACEtO,KAAKyqC,QAAUzqC,KAAKyqC,MACrB,CAEGg2B,qBACF,OAAOzgE,KAAKyzB,QAAQrpB,SAAS,QAC9B,CAEGs2D,qBACF,OAAO1gE,KAAKyzB,QAAQrpB,SAAS,QAC9B,CAEGqlC,SACF,MAAMlgC,EAAKvP,KACX,OAAQuP,EAAGrB,QACT,IAAK,UACH,OAAOlO,KAAK2f,cACd,IAAK,YACH,OAAO3f,KAAK02C,uBACd,IAAK,QACH,OAAO12C,KAAKgf,mBACd,QACE,OAAOhE,MAAMpR,MAAMlD,SAASyI,KAAMI,EAAGrB,QAE1C,CAED2xD,MACE,MAAMtwD,EAAKvP,KACLgtB,EAASzd,GAAGywD,GACbhzC,IACDzd,EAAGk7B,OACLhN,SAASkjC,cAAcpxD,EAAG2P,UAAW8N,EAAQzd,GAAGkgC,GAAMlgC,GAAGuvB,IAEzDvvB,EAAG+d,aAAa/d,GAAGq3C,GAAU,CAAC7oB,IAAI,UAAW92B,KAAK,YAErD,CAGDq5D,MAEE,MAAM/wD,EAAKvP,KACLF,EAAKyP,GAAGkgC,GAEVlgC,EAAGmxD,iBACL56C,SAASyE,OAAOhb,EAAIzP,EAAI,YAAayP,EAAGy7B,KAAKljC,KAAKyH,IAClDuW,SAASyE,OAAOhb,EAAIzP,EAAI,aAAcyP,EAAGmxC,MAAM54C,KAAKyH,KAGlDA,EAAGkxD,iBACL36C,SAASyE,OAAOhb,EAAIzP,EAAI,QAASyP,GAAGqxD,GAAS94D,KAAKyH,IAClDuW,SAASyE,OAAOhb,EAAIA,GAAGywD,GAAQ,aAAczwD,EAAGmxC,MAAM54C,KAAKyH,IAC3DuW,SAASyE,OAAOhb,EAAIzI,OAAQ,QAASyI,EAAGmxC,MAAM54C,KAAKyH,IAGtD,CAEDqxD,IAAS50D,GACP8Z,SAASS,QAAQva,GACjBhM,KAAKsO,QACN,CAEGwwB,SAAW,OAAO9+B,MAAKogE,GAAU1+D,KAAQ,CACzCs+D,SAAW,OAAOhgE,MAAK2/D,GAAUj+D,KAAQ,QAG3C1B,KAAKmJ,OAAO,aACb,EC1JI,MAAM03D,0BAA0B1kC,GAErCt8B,kBAAoB,CAClBwD,IAAK,CAAEs4C,SAAS,EAAMv7C,KAAMmO,QAC5BjL,IAAK,CAAEq4C,SAAS,EAAMv7C,KAAMmO,QAC5BskD,KAAM,CAAElX,SAAS,EAAMv7C,KAAMmO,QAC7B7M,MAAO,CAAEi6C,SAAS,EAAMv7C,KAAMmO,QAC9B8jD,MAAO,CAAE1W,SAAS,IAGpBiL,IAAWt6C,KAAK9L,GAEhBqC,cACE8nB,QACA3qB,KAAKqD,IAAM,EACXrD,KAAK6yD,KAAO,EACZ7yD,KAAKsD,IAAM,IACXtD,KAAK0B,MAAQ,EACb1B,KAAK2tB,OAAS,CAAE3R,MAAO,MACvBhc,KAAKstB,aAAattB,MAAK4mD,GACxB,CAEDhJ,cAOE,MALY,IACPjzB,MAAMizB,cACT,gBAAiB,EACjB,CAJS59C,MAIL4mD,KAAY,EAGnB,CAEDlJ,WACE,MAAMnuC,EAAKvP,KACXuP,GAAGuxD,KACH,MAAM9+D,EAAM,CAACqB,IAAKkM,EAAGlM,IAAKC,IAAIiM,EAAGjM,IAAKuvD,KAAKtjD,EAAGsjD,KAAMnxD,MAAM6N,EAAG7N,MAAOq/D,WAAWxxD,EAAGwxD,YAClF,OAAO7kD,CAAI;sCACuB3M,GAAGyxD,YAAsBryB,EAAUp/B,EAAG0uC;sBACtD/P,EAAS3+B,EAAGquC;;;;eAInBxL,gBAAgB7iC,EAAG8iD,MAAOrwD;;;KAItC,CAEDs7C,WAAWhS,GACT3gB,MAAM2yB,WAAWhS,GACjB,MAAM/7B,EAAKvP,KACX,GAAIsrC,EAAQ9Q,IAAI,SAAU,CACxB,IAAI54B,EAAM2N,EAAGsjD,KAAOvnB,EAAQpiC,IAAI,SAChCtH,EAAM2N,GAAG+e,GAAQ1sB,EAAKA,GACtB0pC,EAAQ99B,IAAI,QAAS5L,EACtB,CACF,CAEDu+C,QAAQ7U,GACFA,EAAQ9Q,IAAI,UACdx6B,KAAK0oC,QAER,CAEDu4B,SAASr/D,GACP,MAAM2N,EAAKvP,KAGX,OAFA4B,EAAMZ,EAAOmC,SAASvB,GAAOA,EAAM2N,EAAGsjD,KACtCtjD,EAAG7N,MAAQ6N,GAAG+e,GAAQ/e,EAAG7N,MAAQE,EAAK2N,EAAG7N,QAClC,CACR,CAEDw/D,SAASt/D,GACP,MAAM2N,EAAKvP,KAGX,OAFA4B,EAAMZ,EAAOmC,SAASvB,GAAOA,EAAM2N,EAAGsjD,KACtCtjD,EAAG7N,MAAQ6N,GAAG+e,GAAQ/e,EAAG7N,MAAQE,EAAK2N,EAAG7N,QAClC,CACR,CAEGq/D,iBAEF,OAAOx9D,KAAK49D,MADDnhE,KACW0B,MADX1B,KACsBsD,IAAO,IACzC,CAEDw9D,MACE,MAAMvxD,EAAKvP,KACXuP,EAAGoe,OAAO3R,MAAQ,GAAGzM,EAAGwxD,cACxBxxD,EAAG+d,aAAa/d,GAAGq3C,GAAUr3C,EAAGoe,OACjC,CAEDW,IAAQ1sB,EAAKw/D,EAAM,GAEjB,MAAM7xD,EAAKvP,KAGX,OAJA4B,EAAMZ,EAAOsM,MAAM1L,EAAKZ,EAAOsM,MAAM8zD,KAE3B7xD,EAAGjM,MAAK1B,EAAM2N,EAAGjM,KACvB1B,EAAM2N,EAAGlM,MAAKzB,EAAM2N,EAAGlM,KACpBzB,CACR,CAEDo/D,IAAah1D,GACX,MAAMuD,EAAKvP,KACX,OAAQgM,EAAEwa,MACR,IAAK,UACL,IAAK,aACD,OAAOjX,EAAG0xD,WACd,IAAK,YACL,IAAK,YACF,OAAO1xD,EAAG2xD,WAEhB,QAGClhE,KAAKmJ,OAAO,cACb,ECjHI,MAAMk4D,yBAAyBllC,GAElCt8B,cAAgB6b,CAAG,kHAEnB7b,kBAAoB,CAChBo0C,MAAO,IAAKA,EAAO0H,SAAS,GAC5B5G,MAAO,CAAE30C,KAAMqB,QAASk6C,SAAS,GACjC2lB,OAAQ,CAAElhE,KAAMqB,UAGpBoB,cACI8nB,OACH,CAED+yB,WAEI,OAAOxhC,CAAI,eAAegyB,EADfluC,KAC2B49C,sCACzC,CAEDA,cACI,MAAMruC,EAAKvP,KASX,MARY,IACL2qB,MAAMizB,cACT,kBAAmBruC,EAAG+xD,OACtB,eAAgB/xD,EAAG+xD,OACnB,CAAC,QAAQ/xD,EAAG0kC,SAAU1kC,EAAG0kC,MACzB,qBAAwB1kC,EAAG+xD,QAAU/xD,EAAGwlC,MACxC,kBAAqBxlC,EAAG+xD,QAAU/xD,EAAGwlC,MAG5C,QAGG/0C,KAAKmJ,OAAO,aACf,EClBE,MAAMo4D,0BAA0BplC,GAEnCt8B,kBAAoB,CAEhBuC,MAAO,CAAEu5C,SAAS,GAElB2e,OAAQ,IAAKp7C,EAAWq0B,WAAYT,UACpCt9B,KAAM,CAAEpV,KAAMmO,OAAQglC,WAAYN,SAGtCmpB,IAAU,EACVxV,IAAWt6C,KAAK9L,GAChBghE,IAAYl1D,KAAK9L,GACjBkpD,IAAStb,IACTyb,IAEAhnD,cACI8nB,QACA,MAAMpb,EAAKvP,KACXuP,EAAGiG,KAAO,EACVjG,EAAG+qD,OAAS,QACZ/qD,EAAG+d,aAAa/d,GAAGq3C,IACnBr3C,GAAGyiB,KACHziB,GAAGs6C,GAAmB,IAAI/R,sBAAsBvoC,EACnD,CAEDwtC,uBACIpyB,MAAMoyB,sBAET,CAEDM,aAAa/R,GACT3gB,MAAM0yB,aAAa/R,GACRtrC,MACR6pD,GAAiBt/B,OADTvqB,MACmB+pD,GAGjC,CAEDrM,WACI,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI,QAAQuzB,EAAIlgC,GAAGm6C;yBACTn6C,GAAGy6C;6BACCz6C,GAAGq3C;qBACX1Y,EAAS3+B,EAAGquC;;eAG5B,CAEDA,cAOI,MALY,IACLjzB,MAAMizB,cACTmM,UAAY,EACZ,CAJO/pD,MAIH4mD,KAAW,EAGtB,CAEDzG,QAAQhD,GACOn9C,MACRyhE,IACN,CAMD/oB,YAAY1sC,GACR,MAAMuD,EAAKvP,KACXuP,GAAG6sD,GAAU7sD,EAAGs3C,WAAa76C,EAAE2vB,QAAU3vB,EAAE4vB,QAC3CrsB,GAAGmyD,IAAM,GACT57C,SAASyC,KAAKtnB,WAAY,WAAY,CAAEy2B,OAAO,GAClD,CAMD6gB,YAAYvsC,GACR,MACM+yB,EADK/+B,KACI6mD,WAAa76C,EAAE2vB,QAAU3vB,EAAE4vB,QAD/B57B,MAER2hE,GAAa5iC,EACnB,CAMD4Z,UAAU3sC,GACKhM,MACR8rD,KADQ9rD,MAER0hE,IAAM,GACT57C,SAASyC,KAAKtnB,WAAY,WAAY,CAAE22B,MAAM,GACjD,CAMGivB,iBACA,MAAsB,aAAf7mD,KAAKoC,KACf,CAEGolD,mBACA,OAAQxnD,KAAK6mD,UAChB,CAMGnvB,YACA,OAAO13B,KAAK02C,sBACf,CAMGlb,UACA,OAAOx7B,KAAKgf,kBACf,CAMG9Q,aACA,MAAMqB,EAAKvP,KACX,IAAIF,EAAKyP,GAAGqyD,GAAgBryD,EAAGmoB,MAAQnoB,EAAGisB,IAQ1C,OAPA17B,EAAKA,GAAMyP,EAAGoQ,cACd7f,EAAKkb,MAAMsD,YAAYxe,GAAMA,EAAGyJ,KAAOzJ,EACnCA,aAAcse,aAEdte,EAAKiD,MAAMmI,KAAKpL,EAAG2O,UAAUzI,QAAOlD,IAAMkY,MAAM6mD,aAAa/+D,EAAG,UAAW,UAAS8S,OAExF9V,EAAG0e,WAAWC,IAAIlP,GAAGiyD,IACd1hE,CACV,CAEG8hE,SACA,MACMtH,EADKt6D,KACOs6D,OAClB,MAAkB,UAAXA,GAAiC,QAAXA,CAChC,CAEGvQ,SACA,OAAO/pD,MAAK0pD,GAAOhoD,KACtB,CAEGogE,SACA,OAAO9hE,KAAKkO,OAAO+J,KACtB,CAKG8pD,SACA,MACM7hD,EAAM,sBAGZ,MAAO,IAFGlF,MAAMsC,SAFLtd,KAEiB02C,uBAAwBx2B,MAC1ClF,MAAMsC,SAHLtd,KAGiBgf,mBAAoBkB,GAEnD,CAED8R,MACI,MAAMziB,EAAKvP,KACX,IAAKuP,EAAG/O,GAAI,OACZ,MAAMqW,EAAMvK,KAAKud,SAAS5G,SAAS+M,OAAS/M,SAAS8N,UACrD,IAAInvB,EAAM6uB,aAAaE,QAAQ,eAAe9Z,KAAOtH,EAAG/O,MACxDoB,EAAMZ,EAAOsM,MAAM1L,GACnB2N,GAAG+e,GAAQ1sB,EACd,CAEDkqD,MACI,MAAMv8C,EAAKvP,KACX,IAAKuP,EAAG/O,GAAI,OACZ,MAAMkb,EAAMxM,SAASe,qBAAqBV,EAAGrB,QACvCtM,EAAM2N,EAAGs3C,WAAanrC,EAAIxS,IAAI,SAAWwS,EAAIxS,IAAI,UACvD,IAAKtH,EAAK,OACV,MAAMiV,EAAMvK,KAAKud,SAAS5G,SAAS+M,OAAS/M,SAAS8N,UACrDN,aAAaC,QAAQ,eAAe7Z,KAAOtH,EAAG/O,KAAMoB,EACvD,CAEDooD,IAAeh+C,GAEX,MAAMuD,EAAKvP,KACX,IAAIgiE,EAAQ,EACRnrD,EAAM,GAENtH,EAAGs3C,YACHhwC,EAAM,QACNmrD,EAAQzyD,EAAGrB,OAAOuwB,cAElB5nB,EAAM,SACNmrD,EAAQzyD,EAAGrB,OAAOywB,cAGtB,IAAIt7B,EAAM6L,SAASsS,WAAWjS,EAAGrB,OAAQ,OAAO2I,KAC5CvT,EAAM4L,SAASsS,WAAWjS,EAAGrB,OAAQ,OAAO2I,KAEhDxT,EAAMrC,EAAOsM,MAAMjK,EAAI3B,OACvB4B,EAAMtC,EAAOsM,MAAMhK,EAAI5B,OAGnBsgE,GADC1+D,EAAMD,GAAO,EAAI2+D,EACV1+D,EAEAD,EAEZkM,GAAG+e,GAAQ0zC,EAEd,CAMDN,IAAMA,GAAO,GACT,MAAMnyD,EAAKvP,KACLiiE,EAAM,UACRP,EACAnyD,GAAGwyD,GACE/7D,QAAOlG,IAAOkb,MAAMwC,SAAS1d,EAAI,aACjCiH,SAAQjH,IACLkb,MAAM8F,YAAYhhB,EAAImiE,GAAK,GAC3BniE,EAAGsO,QAAQ8zD,YAAa,CAAI,IAGpC3yD,GAAGwyD,GACE/7D,QAAOlG,GAAMA,EAAGsO,QAAQ8zD,aACxBn7D,SAAQjH,IACLkb,MAAM8F,YAAYhhB,EAAImiE,GAAK,UACpBniE,EAAGsO,QAAQ8zD,UAAU,GAG3C,CAEDP,IAAa5iC,GACT,MAAMxvB,EAAKvP,KACX4gB,uBAAsB,KACdrR,EAAGs3C,WACHt3C,GAAG4yD,GAASpjC,GAEZxvB,GAAG6yD,GAASrjC,EACf,GAER,CAMDojC,IAASpjC,GACL,MAAMxvB,EAAKvP,KACLkO,EAASqB,EAAGrB,OACZgsD,EAAM3qD,GAAGqyD,GAAgB,GAAK,EACpC,IAAIS,GAAMtjC,EAAMxvB,GAAG6sD,IAAWlC,EAC9BmI,GAAUn0D,EAAOuwB,YACjB4jC,EAAKA,EAAK,EAAI,EAAIA,EAClB9yD,GAAGuyD,GAAc9lD,MAAQqmD,EAAK,KAE9B9yD,GAAG6sD,GAAUr9B,CAChB,CAMDqjC,IAASrjC,GACL,MAAMxvB,EAAKvP,KACLkO,EAASqB,EAAGrB,OACZgsD,EAAM3qD,GAAGqyD,GAAgB,GAAK,EACpC,IAAIS,GAAMtjC,EAAMxvB,GAAG6sD,IAAWlC,EAC9BmI,GAAUn0D,EAAOywB,aACjB0jC,EAAKA,EAAK,EAAI,EAAIA,EAClB9yD,GAAGuyD,GAAc7lD,OAASomD,EAAK,KAE/B9yD,GAAG6sD,GAAUr9B,CAChB,CAEDzQ,IAAQ1sB,EAAM,GACV,GAAIA,GAAO,EAAG,OACd,MAAM2N,EAAKvP,KACXuP,GAAG6sD,GAAUx6D,EACb,MAAMiV,EAAMtH,EAAGs3C,WAAa,QAAU,SACtCt3C,GAAGuyD,GAAcjrD,GAAOjV,EAAM,IAEjC,CAED6/D,MACI,MAAMlyD,EAAKvP,KACLwV,EAAOjG,EAAGs3C,WAAa,QAAU,SACjCliB,EAAOp1B,EAAGs3C,WAAa,SAAW,QAClCuV,EAAS7sD,EAAGs3C,WAAa,WAAa,WACtC94C,EAAM,CACRyH,CAACA,GAAO,GAAGjG,EAAGiG,SACdmvB,CAACA,GAAO,OACR,eAAgB,MAChBy3B,OAAQA,EACR,eAAgB,WAChB,eAAgB,QAChB,mBAAoB,aAExB7sD,EAAG+d,aAAa/d,GAAGq3C,GAAU74C,EAChC,QAGG/N,KAAKmJ,OAAO,cACf,ECnUE,MAAMm5D,yBAAyB9F,iBAEpC38D,kBAAoB,CAClBqI,KAAM,CAAE,GAGVrF,cACE8nB,QACA3qB,KAAK0b,IAAM1b,MAAKuiE,GAAaviE,KAAK0b,GACnC,CAEG6mD,SAEF,OADWviE,KACDk9C,eAAiBl8C,EAAOa,UADvB7B,KACoCu2B,iBAAiBisC,QAAU,EAC3E,CAEG5F,iBACF,MAAO,cACR,CAEGoD,YACF,MAAMzwD,EAAKvP,KAEX,OAAOuP,EADK1E,OAAOkY,IAAI,gBACLxT,EAAGxE,MAAM03D,YAAYlzD,EAAGrH,KAC3C,QAGClI,KAAKmJ,OAAO,gBACb,EC3BI,MAAMu5D,0BAA0BvmC,GAErCt8B,kBAAoB,CAClBqI,KAAM,CAAE,EACRud,SAAU,CAAE,EACZjK,OAAQ,CAAEpb,KAAMqB,QAASk6C,SAAU,IAGrC94C,cACE8nB,QACA3qB,KAAKwb,QAAS,CACf,CAEDuhC,8BACS/8C,KAAK6K,OAAOkY,IAAI,eACvB4H,MAAMoyB,sBACP,CAEDG,aAAaC,GACX,OAAOn9C,KAAKu2B,iBAAiBpZ,UAAYnd,KAAK48D,UAC/C,CAMDlf,WAEE,OAAOxhC,CAAI;aACFyyB,EAFE3uC,KAEWi+C;eACX/P,EAASluC,KAAK49C;;QAHd59C,KAKJ29C;oBAER,CAEDC,cAOE,MALY,IACPjzB,MAAMizB,cACT,YAAY,EACZ,UAJS59C,KAIMwb,OAGlB,CAEGohD,iBACF,MAAO,cACR,CAEG7xD,YACF,OAAO/K,KAAKwf,QAAQxf,KAAK48D,WAAW96D,eAAgB,GAAG,IAASkZ,MAAM6lC,UAAU7gD,KACjF,CAEG+0B,WACF,OAAO/0B,KAAKwf,QAAQ,QAAS,GAAG,EACjC,CAEG2vC,UACF,MAAM5/C,EAAKvP,KAEX,OAAOuP,EADK1E,OAAOkY,IAAI,gBACLxT,EAAGxE,MAAM43D,UAAUpzD,EAAGrH,KACzC,CAEG06D,WACF,OAAO5iE,KAAK+K,MAAM63D,IACnB,QAkBC5iE,KAAKmJ,OAAO,eACb,ECpFI,MAAM05D,0BAA0BvG,aAErCz8D,kBAAoB,CAClBu6D,SAAU,CAAE/rD,UAAW,aACvBm0D,OAAQ,CAAEn0D,UAAW,YAGvBxL,cACE8nB,OACD,CAED0yB,aAAa/R,GACX3gB,MAAM0yB,aAAa/R,GACnB,MAAM/7B,EAAKvP,KAEXuP,EAAGkT,MAAM1b,SAAQjH,GAAMyP,GAAGuzD,GAAWhjE,KACrCyP,EAAG+vC,WAAW/vC,EAAGiM,OAClB,CAED0hC,aAAa5R,GACX,OAAOtrC,KAAKiI,KAAKxD,OAAS,GAAKzE,KAAKyiB,MAAMhe,OAAS,CACpD,CAED64C,WAAWhS,GACT,MAAM/7B,EAAKvP,KACPsrC,EAAQ9Q,IAAI,SACdjrB,EAAGkT,MAAM1b,SAAQjH,GAAMyP,GAAGuzD,GAAWhjE,KAEvC6qB,MAAM2yB,WAAWhS,EAClB,CAEDsS,cAME,MAJY,IACPjzB,MAAMizB,cACT,SAHS59C,KAGIy1D,SAGhB,CAEDmC,kBACE,MAAMroD,EAAKvP,KACLqC,EAAUoyC,eAAesuB,QAAQxzD,EAAG2P,WACpC1H,EAAO,CAACmT,MAAMitC,gBAAgB,QACpC17C,CAAI,qCAAqC3M,EAAG6qD,mBAAmBzrB,EAAUp/B,EAAG0uC;;;qCAI5E,OAAO57C,EAAUmV,EAAKnV,UAAYmV,CACnC,CAEDqgD,qBACE,MACMn8C,EAAMiP,MAAMktC,qBAClB,OAFW73D,KAED89C,OAFC99C,KAESwiE,OAAQ9mD,EAC7B,CAMD+kC,cACE,MACMmiB,EADK5iE,MACMgjE,KACXC,EAFKjjE,MAEOkjE,KAClB,OAAON,EAAK/xD,UAAUoyD,EACvB,CAEDD,MACE,OAAOhjE,KAAKiI,KAAKvF,KAAII,IACdA,EAAEoF,OAAMpF,EAAEoF,KAAOoE,KAAK9L,IACpB0b,CAAI;mBACEyyB,GAAuB,IAAb7rC,EAAE0Y;sBACTmzB,GAA0B,IAAhB7rC,EAAEm5B;qBACb0S,GAAyB,IAAf7rC,EAAEugB;gBACjBsrB,EAAU7rC,EAAEg/C;iBACXnT,EAAU7rC,EAAEggB;gBACbhgB,EAAEoF,2BAEf,CAMDg7D,MACE,OAAOljE,KAAKiI,KAAKvF,KAAII,IACdA,EAAEoF,OAAMpF,EAAEoF,KAAOoE,KAAK9L,IACpB0b,CAAI;8BACapZ,EAAEoF;mBACbymC,EAAU7rC,EAAE0Y;oBACXmzB,EAAU7rC,EAAE2iB,+BAE7B,CAMD65B,WAAWx/C,GACTA,GAAI2I,QACJ,MAAMu3D,EAAQhgE,MAAK8iE,GAAWhjE,GAC1BkgE,IAAOA,EAAMxkD,QAAS,EAC3B,CAMD+jC,aAAaz/C,GACX,MAAMkgE,EAAQhgE,MAAK8iE,GAAWhjE,GAC1BkgE,IAAOA,EAAMxkD,QAAS,EAC3B,CAEGs8C,mBACF,MAAO,eACR,CAEG8K,WACF,OAAO5iE,KAAKyiB,KACb,CAEGwgD,aACF,OAAOjjE,KAAKsd,SAAS,gBAAgB,GAAO,EAC7C,CAEDqlD,UAAUz6D,EAAO,GAAImV,GAAS,GAC5B,OAAOsN,MAAMqtC,YAAY9vD,EAAMmV,EAChC,CAEDolD,YAAYv6D,EAAO,GAAImV,GAAS,GAC9B,OAAOrd,KAAK4J,MAAM,sBAAsB1B,MAAUmV,GAAQ,EAC3D,CAODylD,IAAWhjE,GACT,IAAKA,EAAI,OAAO,KAChB,MACMi4D,EADK/3D,KACUiI,MAAMxD,OAAS,EAC9BoS,EAAMhM,OAAOkY,IAAI,cACvB,IAAIi9C,EAAQlgE,EAAG+W,IAHJ7W,KAGeyiE,YAAY3iE,EAAGoI,KAAM6vD,GAK/C,OAJIiI,IAAUlgE,EAAG+W,KACf/W,EAAG+W,GAAOmpD,EACVA,EAAMnpD,GAAO/W,GAERkgE,CACR,QAGChgE,KAAKmJ,OAAO,eACb,ECjJI,MAAMg6D,uBAAuBhnC,GAElCt8B,UAAgB,CAAC,UAAW,gBAAiB,iBAE7CA,cAAgB6b,CAAG,wCAEnB7b,aAAe,CACbmmD,MAAO,CAAE,EACThqC,MAAO,CAAE,EACTA,MAAO,CAAE,EACTN,IAAK,CAAE,EACPoH,MAAO,CAAE,EACTsgD,QAAS,CAAE,EACX3rB,QAAS,CAAE,EACXhI,IAAK,CAAE,EACPj4B,KAAO,CAAEpX,KAAMqB,SACfuE,OAAQ,CAAE5F,KAAMqB,SAChB4hE,OAAQ,CAAEjjE,KAAMqB,SAChB6hE,MAAO,CAAEljE,KAAMqB,SACf8hE,WAAY,CAAEl1D,UAAW,eACzBm1D,UAAW,CAAEn1D,UAAW,cACxBkyC,UAAW,CAAElyC,UAAW,cACxB4lC,MAAO,IAAKA,MACTv9B,OAAO20C,YAGZxrD,kBAAoB,CAClB43C,QAAS,CAAE,EACXxD,MAAO,IAAKA,GACZwvB,YAAa,IAAKxvB,EAAO5lC,UAAW,gBACpCq1D,UAAW,IAAKzvB,EAAO5lC,UAAW,cAClCs1D,YAAa,IAAK1vB,EAAO5lC,UAAW,gBACpCu1D,UAAW,IAAK3vB,EAAO5lC,UAAW,cAClCw1D,cAAe,CAAEzjE,KAAMqB,QAAS4M,UAAW,kBAC3Cm1D,UAAW,CAAEn1D,UAAW,cACxBkyC,UAAW,CAAElyC,UAAW,cACxBy1D,QAAS,CAAE1jE,KAAMqB,SACjBsiE,QAAS,CAAE3jE,KAAMqB,SACjBmhD,MAAO,CAAExiD,KAAMqB,SACfszC,MAAO,CAAE30C,KAAMqB,SACfuiE,KAAM,CAAE5jE,KAAMqB,SACdwiE,WAAY,CAAE7jE,KAAMqB,SAEpB+X,KAAM,CAAEpZ,KAAM2C,MAAO8G,OAAO,GAC5Bq6D,QAAS,CAAE9jE,KAAM2C,MAAO8G,OAAO,GAC/BgN,IAAK,CAAEzW,KAAMmO,OAAQ1E,OAAO,GAC5B5B,KAAM,CAAE7H,KAAM2C,OAEdohE,WAAY,CAAE/jE,KAAMqB,SACpB2iE,UAAW,CAAEhkE,KAAMqB,SACnB4iE,YAAa,CAAEjkE,KAAMqB,SACrB6iE,UAAW,CAAElkE,KAAMqB,SACnBuxD,WAAY,CAAE5yD,KAAMqB,SACpB6M,OAAQ,CAAElO,KAAMqB,SAChB8iE,SAAU,CAAEnkE,KAAMqB,UAGpBupD,IAAU,GACVwZ,IAAa,GACb5c,KAAQ,EAER/kD,cACE8nB,QACA3qB,KAAKykE,UAAY,YACjBzkE,KAAK2jE,YAAc,OACnB3jE,KAAKkkE,QAAU,GACflkE,KAAKiI,KAAO,GACZjI,KAAKwZ,KAAO,GACZxZ,KAAK6W,IAAM,CACZ,CAEGqO,eACF,OAAOllB,KAAKq8C,gBAAgBn3B,QAC7B,CAEGolB,WAAO1oC,GACT,MAAM2N,EAAKvP,KACX,GAAIuP,EAAGkoC,SAAWloC,EAAG8sC,eACnB,OAAO9sC,EAAG8sC,eAAe/R,OAAS1oC,CAErC,CAEDg7C,oBACE,MAAMrtC,EAAKvP,KACXuP,GAAGy7C,GAAUhvB,OAAOttB,QAAQa,EAAI4zD,eAAeuB,OACrB,IAAtBn1D,EAAG20D,QAAQz/D,SAAc8K,EAAG20D,QAAU30D,GAAGy7C,GAAQtoD,KAAInB,GAAKA,EAAE2G,QAOhEyiB,MAAMiyB,mBACP,CAEDG,uBACEpyB,MAAMoyB,uBACN/8C,KAAKq8C,gBAAgBrT,cAAchpC,KAAKiI,MACxCjI,KAAKiI,KAAO,EACb,CAED21C,cACE,MAAMruC,EAAKvP,KAaX,MAZY,IACP2qB,MAAMizB,cACT,mBAAoBruC,EAAG+0D,UACvBK,OAAS,EACT,WAAYp1D,EAAGwlC,MACf,cAAexlC,EAAGqzC,MAClB,gBAAiBrzC,EAAGw0D,QACpB,iBAAkBx0D,EAAGy0D,KACrB,mBAAoBz0D,EAAG00D,WACvB,wBAAyB10D,EAAGq1D,eAC5B,CAAC,SAASr1D,EAAG0kC,SAAU1kC,EAAG0kC,MAG7B,CAEDoJ,eACEr9C,KAAKq8C,gBAAgB9R,MACtB,CAED+S,WAAWhS,GACT,MAAM/7B,EAAKvP,KACPuP,EAAG20D,QAAQz/D,QAAU8K,EAAGiK,KAAK/U,SAAQ8K,EAAGiK,KAAOzW,MAAMwM,EAAG20D,QAAQz/D,QAAQs5D,KAAK,IAC7ExuD,EAAG40D,YAAc50D,EAAGtH,KAAKxD,OAAS,IACpC8K,EAAG20D,QAAU30D,EAAGtH,KAAK,GACrBsH,EAAGtH,KAAOsH,EAAGtH,KAAKxF,MAAM,IAEtB6oC,EAAQ9Q,IAAI,iBAAmBjrB,EAAG80D,aAAa90D,EAAG8sC,gBAAgBrT,gBAClEsC,EAAQ9Q,IAAI,gBAAkBjrB,EAAGyjD,YAAYzjD,EAAG8sC,gBAAgBrT,iBAChEsC,EAAQ9Q,IAAI,aAAe8Q,EAAQ9Q,IAAI,gBACzCjrB,EAAGiK,KAAOzW,MAAMwM,EAAG20D,QAAQz/D,QAAQs5D,KAAK,GACxCxuD,GAAGi1D,GAAa,IAGlB75C,MAAM2yB,WAAWhS,EAClB,CAEDoS,WACE,MAAMnuC,EAAKvP,KACLykE,EAAYl1D,EAAGm0D,UAAY,SAASn0D,EAAGm0D,YAAc,GAC3D,OAAOxnD,CAAI;;cAEDyyB,EAAUp/B,EAAG0uC;iBACV1uC,GAAGyvC;mBACDzvC,GAAG6W;gBACN8nB,EAAS3+B,EAAGquC;wBACJjP,EAAU81B;YACtBl1D,GAAGs1D;uBACQt1D,GAAGu1D;cACZv1D,EAAG20D,QAAQxhE,KAAI,CAACqiE,EAAO9tD,IAAU1H,GAAGy1D,GAAcD,EAAO9tD;;;wBAG/C1H,GAAG0nC,mBAA0B1nC,GAAG0nC,aAAoB1nC,EAAGu0D,QAAU,sBAAwB;YACrGv0D,EAAGtH,KAAKvF,KAAI,CAACqiE,EAAO9tD,IAAU1H,GAAG01D,GAAcF,EAAO9tD;YACtD1H,GAAG21D;;;2BAGY31D,GAAG41D;KAE3B,CAEDA,MAEE,OADWnlE,MACD4nD,GAAQ1rC,CAAI,6CADXlc,MAC2D4nD,kCAAuC,EAC9G,CAEDjQ,WAAW1vC,GACT,MAAMsH,EAAKvP,KACXuP,EAAGtH,KAAOA,EAINA,EAAKxD,OAAS,GAAK8K,GAAGic,GACxBjc,GAAGy7C,GAAQjkD,SAAQ,CAACg+D,EAAO9tD,KACzB8tD,EAAMK,WAAa71D,GAAG81D,GAAWpuD,EAAM,GAG5C,CAKDuS,QACExpB,MAAKslE,GAAOv+D,SAAQjH,GAAMA,EAAG4B,MAAQ,KACrC1B,KAAKq8C,gBAAgBr2C,OAAO,GAC7B,CAEDu/D,QAAQC,EAAKC,GACX,OAAOzlE,KAAKiI,KAAKxD,OAAS+gE,EAAMxlE,KAAKiI,KAAKu9D,GAAKC,QAAQ1gE,CACxD,CAEGugE,SACF,OAAOtlE,KAAKsd,SAAS,2BAA2B,GAAM,EACvD,CAEGkO,QACF,OAAOxrB,MAAKgrD,GAAQhlD,QAAOlD,GAAKA,EAAEkD,SAAQvB,OAAS,CACpD,CAED4gE,IAAWpuD,GACT,MAAM1H,EAAKvP,KACL0X,EAAMnI,GAAGy7C,GAAQ/zC,GACjBwuD,EAAOl2D,EAAGg2D,QAAQ,EAAGh2D,EAAG20D,QAAQjtD,IACtCS,EAAItX,KAAOsX,EAAItX,MAAQ,OACvB,MAAMslE,EAAU,CAAEtgE,OAAU,OAAQuR,SAAY,SAAUgvD,UAAa,kBAAmBjuD,EAAItX,MACxFwlE,EAAWH,aAAgBjkE,KAAO,cAAgBikE,EACxD,OAAOA,EAAOG,EAAWF,GAAWhuD,EAAItX,IACzC,CAEDykE,MACE,MAAMt1D,EAAKvP,KACX,OAAOuP,GAAGic,EAActP,CAAI,OAAO3M,EAAG20D,QAAQxhE,KAAI,CAACqiE,EAAO9tD,IAAU1H,GAAGs2D,GAAcd,EAAO9tD,YAAiB,EAC9G,CAED4uD,IAAcJ,EAAMxuD,GAClB,MAAM1H,EAAKvP,KACL0X,EAAMnI,GAAGy7C,GAAQ/zC,GACvB,IAAKS,GAAK1R,OAAQ,OAAOkW,CAAI,YAE7B,IAAIs2C,EACJ,MAAMsT,EAASpuD,EAAII,kBAAoB,EACjC5U,EAA4B,SAAnBwU,EAAI0tD,WACfliE,IAAQsvD,EAAO96C,EAAIxS,QAAUlE,EAAOkV,cAAcwB,EAAI/T,UAAY3C,EAAO2C,WAC7E,MAAM+X,EAAM,GAAG1a,EAAOa,UAAU0N,EAAGi0D,cAAcxiE,EAAOa,UAAU4jE,EAAKjC,aACjEvvB,EAAQ,WAAWjzC,EAAOa,UAAU4jE,EAAKxxB,OAAS1kC,EAAGk0D,eAG3D,IAAKqC,GAAUpuD,EAAIF,OAASE,EAAI4rD,MAC9B,OAAOpnD,CAAI,cAAcjF,cAAkB1H,GAAGw2D;8CACN9uD;mCACXyE,KAAOu4B;sBACpBwxB;yBACG92B,EAAUj3B,EAAIF,KAAOjI,EAAGkoC,QAAU;qBACtC9I,EAAUj3B,EAAIF,KAAOE,EAAIxP,KAAO;gBACrCqH,GAAGomD,GAAcj+C;;iBAK7B,IACIF,EADAwuD,EAAS,GAUb,OARIF,GAAUpuD,EAAIF,QAChBwuD,EAAS,GAAGz2D,EAAG/O,WAAWyW,IAC1BO,EAAO0E,CAAI,iBAAiB8pD;yBACTr3B,EAAUj3B,EAAIF,KAAOjI,EAAGkoC,QAAU;qBACtC9I,EAAUj3B,EAAIF,KAAOE,EAAIxP,KAAO;gBACrCqH,GAAGomD,GAAcj+C,iBAGtBwE,CAAI,cAAcjF,cAAkB1H,GAAGw2D;sCACZ9uD;4BACVyE,KAAOu4B;cACrBtF,EAAU6jB;cACV7jB,EAAUq3B;cACVP;qBACO92B,EAAUj3B,EAAIoL;cACrBpL,EAAI6rD,YAAc7rD,EAAI0tD;oBAChBz2B,EAAUzrC,EAAS,WAAQ6B;MACzCyS;UAEH,CAEDm+C,IAAcj+C,GACZ,GAA6B,GAAzBA,EAAII,kBAAwB,MAAO,GAEvC,OADYkkB,OAAOttB,QAAQgJ,GAChBhV,KAAI5C,GAAMoc,CAAI,kBAAkBpc,EAAG4B,UAAUgW,EAAI4rD,MAAQxjE,EAAG4C,IAAM,eAC9E,CAEDsiE,IAAcS,EAAMxuD,GAClB,MAAM1H,EAAKvP,KACL0X,EAAMnI,GAAGy7C,GAAQ/zC,GACvB,GAAIS,GAAK2rD,OAAQ,MAAO,GACxB,MAAM3nD,EAAM,GAAG1a,EAAOa,UAAU0N,EAAGgxC,cAAcv/C,EAAOa,UAAU4jE,EAAKllB,aACvE,OAAOrkC,CAAI;mBACIjF,YAAgByE;mBAChBizB,EAAUj3B,GAAK0rD;iBACjBz0B,EAAUj3B,GAAKsE;;kBAEdtE,GAAKoL,OAAS2iD;YACpBl2D,GAAGuzC,GAAY7rC;;;KAIxB,CAED6rC,IAAY7rC,GACV,MAAM1H,EAAKvP,KACX,IAAKuP,EAAGg1D,SAAU,MAAO,GACzB,MAAM0B,EAAQ9C,gBAAe8C,GACvBC,EAAW32D,EAAGiK,KAAKvC,GACnB+C,EAAQzK,EAAG60D,UAAY70D,GAAGi1D,GAAWjtD,QAAQN,GAAS,EAAI,GAChE,OAAOiF,CAAI,kBAAkB+pD,EAAMC,EAAW,cAAclsD,EAAQ,EAAIA,EAAQ,cAAc20B,EAAUp/B,EAAGq0D,wBAC5G,CAEDqB,IAAcF,EAAO9tD,GACnB,MAAM1H,EAAKvP,KACLi6B,EAAa1qB,EAAG8sC,gBAAkBjV,aAClCliB,EAAW+U,GAAYuN,WAAWu9B,GAClC9wB,EAAQ1kC,EAAGo0D,aAAez+C,EAAW,SAAS3V,EAAGo0D,cAAgB,GACjEwC,EAAQ52D,GAAG62D,GAAarB,GAC9B,OAAO7oD,CAAI;qBACMjF,YAAgBg9B,6BAAiC/uB;YAC1DihD,EAAMzjE,KAAI,CAAC+iE,EAAM9iE,IAAM4M,GAAG82D,GAAYZ,EAAM9iE;;OAGrD,CAED0jE,IAAYZ,EAAMxuD,GAChB,MAAMS,EAAM1X,MAAKgrD,GAAQ/zC,GACzB,OAAIS,GAAK2rD,OAAe,GACjBnnD,CAAI,mBAAmBxE,GAAKsuC,mBAAmBrX,EAAUj3B,GAAK0rD,oBAAoBqC,eAC1F,CAEDW,IAAaE,GACX,MAAM/2D,EAAKvP,KAEX,OADK+C,MAAMC,QAAQsjE,KAASA,EAAS/2D,EAAG20D,QAAQxhE,KAAInB,GAAK+kE,EAAO/kE,MACzD+kE,EAAO5jE,KAAI,CAACd,EAAKe,IAAM4M,GAAGy7C,GAAQroD,GAAK+T,OAAOxR,OAAOqK,GAAGy7C,GAAQroD,GAAIf,GAAOA,GACnF,CAEDsjE,MACE,MAAM31D,EAAKvP,KACX,OAAOuP,EAAGtH,KAAKxD,OAAS,EAAK,GAC7ByX,CAAI,uCAAuC3M,EAAG20D,QAAQz/D,kDAAkD8K,EAAGstB,UAAU,sBACtH,CAED0pC,IAAiBzmE,GACf,IAAKA,EAAG4B,MAAO,OACf,MACME,EADqB,SAAZ9B,EAAGM,KACGN,EAAG+kD,YAAc/kD,EAAG4B,MACnCgW,EAAM1X,MAAKgrD,GAAQlrD,EAAGmX,OAC5B,MAAO,CAAE/O,KAAMpI,EAAGoI,KAAMxG,MAAOE,EAAK+B,SAAW+T,GAAK/T,SACrD,CAEDoiE,IAAU/5D,GAER,MAAMuD,EAAKvP,KAELgG,EAASuJ,GAAG+1D,GACf5iE,KAAI5C,GAAMyP,GAAGg3D,GAAiBzmE,KAC9BkG,QAAOlG,GAAMA,GAAI4B,QAEhB6N,EAAGkoC,SACLloC,EAAG8sC,gBAAgBr2C,OAAOA,EAK7B,CAED8+D,IAAQ94D,GAEN,MAAMuD,EAAKvP,KAEX,IAAKuP,EAAGg1D,SAAU,OAElB,MAAMziB,EAA4B,YAArB91C,EAAEkC,OAAOiP,QAAwBnR,EAAEkC,OAASlC,EAAEkC,OAAOsR,QAAQ,WACpEgnD,EAASx6D,EAAEkC,OAAOsR,QAAQ,MAChC,IAAKsiC,IAAS0kB,EAAQ,OAEtB,MAAM7sD,OAAuB5U,IAAjByhE,EAAOvvD,MAAsBuvD,EAAOvvD,MAAQ+D,MAAMyrD,gBAAgBD,GACxEthB,EAAU31C,EAAGiK,KAAKG,GAClBusD,EAAuB,IAAZhhB,GAAiB,EAAIA,EAAU,EAE5C31C,EAAG60D,UACW,GAAZ8B,EACF32D,GAAGi1D,GAAaj1D,GAAGi1D,GAAWx+D,QAAOzE,GAAKA,GAAKoY,IACrCpK,GAAGi1D,GAAWp6D,SAASuP,IACjCpK,GAAGi1D,GAAW5yD,KAAK+H,IAGrBpK,EAAGiK,KAAOzW,MAAMwM,EAAG20D,QAAQz/D,QAAQs5D,KAAK,GACxCxuD,GAAGi1D,GAAa,CAAC7qD,IAGnBpK,EAAGiK,KAAKG,GAAOusD,EAEf,MAAM1sD,EAAOjK,GAAGm3D,GAAen3D,EAAGiK,KAAMjK,GAAGi1D,IAEvCj1D,EAAGkoC,QACLloC,EAAG8sC,gBAAgB7iC,KAAKA,GAExBjK,EAAGtH,KAAOyO,OAAO0zB,SAAS76B,EAAGtH,KAAMuR,GAGrCjK,EAAG2qB,KAAK,OACT,CAEDwsC,IAAeltD,EAAMgrD,GAEnB,MAAMj1D,EAAKvP,KAEwB,IAA/BwZ,EAAKxT,QAAOzE,GAAKA,IAAGkD,UACtB+U,EAAOzW,MAAMwM,EAAG20D,QAAQz/D,QAAQs5D,KAAK,IAChCxuD,EAAGsH,KAAO,GAIjB,MAAM8vD,EAAYp3D,EAAGtH,KAAK,KAAOlF,MAAMC,QAAQuM,EAAGtH,KAAK,IAGjDuP,EAAOgC,EAAK9W,KAAI,CAACnB,EAAGoB,IAAMpB,EAAI,CAAE2G,KAAMy+D,EAAYp3D,EAAG20D,QAAQvhE,QAAKoC,EAAW6U,IAAKjX,EAAG+W,IAAKnY,EAAGoY,IAAK6qD,EAAUjtD,QAAQ5U,IAAO,OAAMqD,QAAOzE,GAAKA,IAKnJ,OAFAiY,EAAO9C,OAAO0zB,SAAS5yB,EAAM,CAAC,CAAEtP,KAAM,MAAOwR,IAAK,IAGnD,CAEDu9B,IAAUjrC,GAER,MAAMuD,EAAKvP,KAEX,IAAKuP,EAAGyjD,WAAY,OAEpB,MAAM4T,EAA0B,OAArB56D,EAAEkC,OAAOiP,QAAmBnR,EAAEkC,OAASlC,EAAEkC,OAAOsR,QAAQ,MACnE,IAAKonD,EAAI,OAGT,GAAiB,IAAb56D,EAAEs1C,SAAiB/xC,EAAG3F,MAAM,cAAc,GAAO,GAAO,OAE5D,MAAMqwB,EAAa1qB,EAAG8sC,gBAAkBjV,aACxC,IAAKnN,EAAY,OAEjB,MAAMqsC,EAAS/2D,EAAGtH,KAAK2+D,EAAG3vD,OACpBuwB,EAAavN,EAAWuN,WAAW8+B,GACrC/2D,EAAG80D,YACD78B,EACFvN,EAAWsN,eAAe++B,GAE1BrsC,EAAW8O,YAAYu9B,GAEhB/2D,EAAGjB,QACZ2rB,EAAW+O,cAAcz5B,EAAGtH,MACvBu/B,GACHvN,EAAW8O,YAAYu9B,KAGzBrsC,EAAW+O,cAAcz5B,EAAGtH,MAC5BgyB,EAAW8O,YAAYu9B,IAEzB/2D,EAAGmoC,gBACHnoC,EAAG2qB,KAAK,SACT,CAED9T,GAAWpa,GAET,IAAKA,EAAEkC,OAAO6B,QAAQ,YAAa,OACnC,IAAIjQ,EAAK,KAET,OAAQkM,EAAEwa,MACR,IAAK,UACH1mB,EAAKkM,EAAEkC,OAAOwoC,uBACd,MACF,IAAK,YACH52C,EAAKkM,EAAEkC,OAAO8Q,mBAIdlf,IACFA,EAAGirC,QACH/qC,KAAKk6B,KAAK,QAASp6B,GAEtB,CAEDk/C,IAAShzC,GACQ,UAAXA,EAAEwa,MAAkBxmB,MAAKi3C,GAAUjrC,EACxC,QAGChM,KAAKmJ,OAAO,WACb,ECvdY,MAAM09D,qBAAqB1qC,GAEtCt8B,UAAe,CAAC,QAAS,cAAe,QAAS,SAEjDA,cAAgB6b,CAAG;;;;;;;;;WAWnB7b,kBAAoB,CAChB0yD,YAAa,CAAE,EACfjvD,IAAK,CAAElD,KAAMmO,QACbiH,KAAM,CAAEpV,KAAMmO,QACdrG,KAAM,CAAE,EACRD,KAAM,CAAE7H,KAAM2C,OACduD,OAAQ,CAAElG,KAAM2C,MAAO44C,SAAS,EAAMmrB,UAAW3xB,IACjD4xB,WAAY,CAAE3mE,KAAMqB,SACpBwyC,MAAO,IAAKA,GACZ+yB,WAAY,IAAK/yB,EAAO5lC,UAAW,eACnC44D,SAAU,CAAE54D,UAAW,aACvB64D,OAAQ,CAAE74D,UAAW,YAIzBxO,eAAiB,CACbqI,KAAM,CAAE,GAGZi/D,IAAe/4B,IACfslB,IAAYtlB,IAEZvrC,cACI8nB,QACA3qB,KAAKkI,KAAO,GACZlI,KAAKiI,KAAOjI,MAAKyiB,GACjBziB,KAAKgnE,WAAa,QAClBhnE,KAAKi0C,MAAQ,SAChB,CAEDyJ,WACI,MAAMnuC,EAAKvP,KACLo8B,EAAO7sB,GAAG63D,KAChB,OAAOlrD,CAAI;qBACEyyB,EAAUp/B,EAAG0uC;qBACb/P,EAAS3+B,EAAGquC;sBACXruC,GAAG0vC,GAASn3C,KAAKyH;cACzB6sB;;wBAEU7sB,GAAG6W,EAAWte,KAAKyH;sBACrBA,GAAGymD,GAASluD,KAAKyH;cACzBkgC,EAAIlgC,GAAGmkD;oBACDnkD,EAAGrH;oBACHqH,EAAGrH;;2BAEIqH,GAAGu/C;wBACNrf,EAAIlgC,GAAG43D,WAAqB53D,EAAGrH,cAAcqH,GAAG83D;eAEnE,CAEDzpB,cASI,MAPY,IACLjzB,MAAMizB,cACT,UAAU,EACV,aAAa,EACb,sBAAsB,EACtB,UAAU,EAGjB,CAEGkR,SACA,MAAMv/C,EAAKvP,KACLm5D,EAAM5pD,EAAGjM,IAAM,EAAI,WAAWiM,EAAGjM,cAAgB,GACvD,OAAOiM,EAAGgjD,YAAchjD,EAAGgjD,YAAc4G,CAC5C,CAEDnD,IAAShqD,GACAA,EAAEqoC,WAAWr0C,MAAKsnE,GAAWt7D,EACrC,CAEDoa,GAAWpa,GACH66D,cAAaU,GAAMn9D,SAAS4B,EAAEwa,OAAOxmB,MAAKsnE,GAAWt7D,EAC5D,CAEDizC,IAASjzC,GACWA,EAAEw7D,aAAex7D,EAAEkC,QAAUlC,EAAEkC,kBAAkBqP,mBACpDvd,MAAKynE,GAAWz7D,EAAEkC,OAAOyR,cACzC,CAED2nD,IAAWt7D,GACP8Z,SAASS,QAAQva,GACNhM,MACR0nE,GADQ1nE,MACGklB,GACjB,CAEGyiD,SACA,MAAMp4D,EAAKvP,KACX,OAAOuP,EAAGjM,IAAM,GAAKiM,EAAGtH,KAAKxD,QAAU8K,EAAGjM,GAC7C,CAEG2hB,SACA,OAAOliB,MAAMmI,KAAKlL,MAAK4nE,GAAUn5D,SACpC,CAEGyW,SACA,MAAM3V,EAAKvP,KACX,OAAOuP,GAAG0V,GAASjf,QAAOlG,GAAMA,EAAG4B,MAAMI,gBAAkByN,GAAG+1D,GAAO5jE,MAAMI,gBAAe8T,KAC7F,CAED8xD,IAAQG,GACJ,MAAMt4D,EAAKvP,KACLw1D,EAAMjmD,GAAG+1D,GACX/1D,GAAGo4D,KAAYE,GAA0B,GAAjBt4D,EAAGw3D,WAC3BvR,EAAI9zD,MAAQ,GAGX6N,EAAGjJ,OAAO8D,SAASorD,EAAI9zD,SACxB6N,EAAGjJ,OAAOsL,KAAK4jD,EAAI9zD,OACnB8zD,EAAI9zD,MAAQ,GACZ6N,EAAGmoC,gBAEV,CAED+vB,IAAWK,GACP,IAAKA,EAAO,OACZ,MACMpmE,EAAQomE,EAAM15D,QAAQ1M,MADjB1B,KAERsG,OAFQtG,KAEIsG,OAAON,QAAOzE,GAAKA,GAAKG,GAC1C,CAED0lE,MACI,MAAM73D,EAAKvP,KACX,OAAOuP,EAAGjJ,OAAO5D,KAAInB,GAAKgO,GAAGw4D,GAAWxmE,IAC3C,CAEDwmE,IAAWnmE,EAAM,IACb,IAAKA,EAAK,MAAO,GACjB,MAAM2N,EAAKvP,KAEX,OADauP,EAAGiG,KAAO,GAAUjG,EAAGiG,KAC7B0G,CAAI,eAAegyB,EAAS3+B,GAAGy4D,oBAA2BpmE,MAAQA,iCAAmCssC,EAAS3+B,GAAG04D,sBAC3H,CAEGD,SACA,MAAMz4D,EAAKvP,KACL+N,EAAM,CACR0uD,OAAO,EACP/5C,KAAK,EACL,CAAC,MAAMnT,EAAGiG,QAASjG,EAAGiG,KAAO,EAC7B,CAAC,WAAWjG,EAAG0kC,WAAU1kC,EAAG0kC,OAEhC,OAAO1kC,EAAGuuC,OAAOvuC,EAAG23D,OAAQn5D,EAC/B,CAEGk6D,SACA,MAAM14D,EAAKvP,KACL+N,EAAM,CACR,aAAa,EACb,QAAQ,EACR,CAAC,WAAWwB,EAAGy3D,gBAAez3D,EAAGy3D,YAErC,OAAOz3D,EAAGuuC,OAAOvuC,EAAG03D,SAAUl5D,EACjC,CAEDs5D,MAEI,OADWrnE,KACDiI,KAAKvF,KAAInB,GAAK2a,CAAI,kBAAkB3a,OACjD,CAKDmN,IAASqR,GACL,OAAOic,OAAOK,QAAQtc,GAAMrd,KAAI5C,GAAMgN,OAAO4B,QAAQ5O,IACxD,CAEG2iB,SACA,OAAOziB,MAAK0O,GAAS1O,MAAM0C,KAAI5C,GAAMA,EAAGoI,OAAMlC,QAAOzE,KAAKA,GAC7D,CAEG+jE,SACA,OAAOtlE,MAAK0zD,GAAUhyD,KACzB,CAEGkmE,SACA,OAAO5nE,MAAKmnE,GAAazlE,KAC5B,QAGG1B,KAAKmJ,OAAO,SACf,ECpNE,MAAM++D,sBAAsB/rC,GAEjC31B,IAAQ,GAER3D,cACE8nB,QACA3qB,KAAK2mC,MAAO,EACZ3mC,MAAKwG,GAAQxG,KAAKqiB,UAClBriB,KAAKqiB,UAAY,EAClB,CAEDq7B,WACE,OAAO19C,KAAK68B,UAAU78B,MAAKwG,GAC5B,QAGCxG,KAAKmJ,OAAO,UACb,ECZI,MAAMg/D,yBAAyBhsC,GAEpCt8B,kBAAoB,CAClBqf,UAAW,IAAKA,GAChB4D,MAAO,CAAE,EACT5U,OAAQ,CAAE,EACVu8B,OAAQ,CAAErqC,KAAMqB,SAChB0X,MAAO,CAAE/Y,KAAMqB,UAGjB2+D,IAAYhyB,IACZuxB,IAAYvxB,IACZwY,IAAWt6C,KAAK9L,GAChB4nE,IAAc97D,KAAK9L,GAEnBqC,cACE8nB,QACA3qB,KAAKkf,UAAY,MACjBlf,KAAKstB,aAAattB,MAAK4mD,IACvB5mD,KAAKstB,aAAattB,MAAKooE,GACxB,CAED/qB,aAAa/R,GACX3gB,MAAMiyB,oBACK58C,MACRsgE,KADQtgE,MAER6/D,KACHl1C,MAAM0yB,aAAa/R,EACpB,CAEDgS,WAAWhS,GACT3gB,MAAM2yB,WAAWhS,GACjBtrC,MAAK6/D,IACN,CAEDniB,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI;WACJuzB,EAAIlgC,GAAGowD;aACLhxB,EAAUp/B,EAAG0uC;;+BAEK1uC,EAAG2P;uBACX3P,GAAGq3C;eACX1Y,EAAS3+B,EAAGquC;aACdnO,EAAIlgC,GAAG6wD;iCACa7wD,GAAG64D;2BACT74D,GAAG64D;;mCAEK74D,EAAGstB,UAAUttB,EAAGuT;WAEhD,CAED86B,cAUE,MARY,IACPjzB,MAAMizB,cACTmE,SAAW,EACX,mBAAmB,EACnBye,MAAQ,EACRpf,KANSphD,KAMEyqC,OACX,CAPSzqC,MAOL4mD,KAAW,EAGlB,CAED5b,OACEhrC,KAAKyqC,QAAS,CACf,CAEDiW,QACE1gD,KAAKyqC,QAAS,CACf,CAEDn8B,SACEtO,KAAKyqC,QAAUzqC,KAAKyqC,MACrB,CAED61B,MACE,MAAM/wD,EAAKvP,KACXuP,EAAGipC,YAAYjpC,GAAGkgC,GAAM,aAAclgC,EAAGy7B,KAAKljC,KAAKyH,IACnDA,EAAGipC,YAAYjpC,GAAGkgC,GAAM,aAAclgC,EAAGmxC,MAAM54C,KAAKyH,GACrD,CAEDswD,MACE,MAAMtwD,EAAKvP,KACLqoE,EAAU94D,GAAGuvB,GACbwpC,EAAU/4D,GAAGywD,GACdsI,IACD/4D,EAAGk7B,OACLhN,SAASsiC,WAAWxwD,EAAG2P,UAAWopD,EAAS/4D,GAAGkgC,GAAM44B,GAEpD94D,EAAG+d,aAAa/d,GAAGq3C,GAAU,CAAE7oB,IAAK,UAAW92B,KAAM,YAExD,CAEGwoC,SACF,MAAMlgC,EAAKvP,KACX,OAAQuP,EAAGrB,QACT,IAAK,UACH,OAAOlO,KAAK2f,cACd,IAAK,YACH,OAAO3f,KAAK02C,uBACd,IAAK,QACH,OAAO12C,KAAKgf,mBACd,QACE,OAAOzP,EAAG4J,MAAQ5J,GAAGg5D,GAAYh5D,GAAGi5D,GAEzC,CAEGD,SACF,MAAMxoD,EAAO/E,MAAM+E,KAAK/f,MACxB,OAAOgb,MAAMpR,MAAMmW,EAAM/f,KAAKkO,OAC/B,CAEGs6D,SACF,OAAOxtD,MAAMpR,MAAMlD,SAASyI,KAAMnP,KAAKkO,OACxC,CAEG4wB,SAAW,OAAO9+B,MAAKogE,GAAU1+D,KAAQ,CACzCs+D,SAAW,OAAOhgE,MAAK2/D,GAAUj+D,KAAQ,QAG3C1B,KAAKmJ,OAAO,aACb,EC9HI,MAAMs/D,0BAA0BtsC,GAErCt8B,kBAAoB,CAClB2J,IAAK,CAAEmyC,SAAS,EAAMpI,WAAYT,WAGpCjwC,cACE8nB,OACD,CAEDyyB,mBACE,MAAM7tC,EAAKvP,KACX,OAAIuP,EAAGo3B,MACLp3B,EAAGinC,cAAcC,aAAelnC,EACzBA,EAAGoQ,eAELgL,MAAMyyB,kBACd,CAEDM,WACE,OAAOxhC,CAAI,GAAGlc,KAAK29C,kBACpB,CAEFzD,mBACCl6C,KAAKk6B,KAAK,oBAAqB,MAAM,GAAM,EAC3C,QAGEl6B,KAAKmJ,OAAO,cACb,EC5BI,MAAMu/D,qBAEX56D,IAEA66D,IACAC,IAEA/lE,YAAYiL,GACV,MAAMyB,EAAKvP,KACXuP,GAAGzB,GAAQA,EACXyB,GAAGo5D,GAAiBp5D,EAAG0vC,QAAQn3C,KAAKyH,GACpCA,GAAGq5D,GAAgBr5D,EAAGs5D,OAAO/gE,KAAKyH,GAClCzB,EAAKm9B,gBAAgB17B,EACtB,CAEDgmC,gBACE,MAAMhmC,EAAKvP,KACXuP,GAAGzB,GAAMqC,KAAK,QAASZ,GAAGo5D,IAC1Bp5D,GAAGzB,GAAMqC,KAAK,OAAQZ,GAAGq5D,GAC1B,CAEDpzB,mBACE,MAAMjmC,EAAKvP,KACXuP,GAAGzB,GAAMo9B,mBAAmB37B,GAC5BA,GAAGzB,GAAMwoB,MAAM,QAAS/mB,GAAGo5D,IAC3Bp5D,GAAGzB,GAAMwoB,MAAM,OAAQ/mB,GAAGq5D,GAC3B,CAEDC,OAAO78D,GACLhL,EAAO8nE,iBAAiB9oE,MAAK8N,GAAMpM,MACpC,CAEDu9C,QAAQjzC,GACJ,MAAMuD,EAAKvP,KACPuP,GAAGzB,GAAMgjD,UAAUvhD,EAAGs5D,OAAO78D,GAC7BuD,GAAGzB,GAAMijD,YAAYxhD,GAAGzB,GAAMg9B,QACrC,ECnCI,MAAMi+B,eAEXlpE,UAAkB,gBAElBA,UAAmB,CACjBqC,EAAG,eACHf,EAAG,SACHoV,EAAG,SACH5C,EAAG,SACHZ,EAAG,SACHpG,EAAG,SACHF,EAAG,SACH,IAAK,SACL,IAAK,YACL,IAAK,eACLu8D,EAAK,MAGPC,KAAQ,EACR7uB,IACA8uB,IACA53D,IACAxF,IACAzH,IAEAyJ,IAEAjL,YAAYiL,GACC9N,MACR8N,GAAQA,EACXA,EAAKm9B,cAFMjrC,KAGZ,CAEDu1C,gBACav1C,KACRmpE,WACJ,CAED3zB,mBACax1C,MACR8N,GAAMo9B,iBADElrC,KAEZ,CAEDmpE,YACE,MAAM55D,EAAKvP,KAGA,IAACopE,EAFP75D,EAAGlL,UACRkL,GAAG6qC,GAAS7qC,GAAG85D,KACf95D,GAAG25D,IAASE,EAAyE,EAApErmE,MAAMmI,KAAKqE,EAAGlL,SAAS,CAACwb,EAAGld,IAAM4M,GAAG6qC,GAAO5f,IAAI3a,GAAKupD,EAAIzmE,EAAI,EAAIymE,KACjF75D,GAAG+B,GAAS,IAAI/B,EAAGlL,SAASilE,WAAUzpD,GAAKtQ,GAAG6qC,GAAO5f,IAAI3a,KACzDtQ,GAAGzD,GAAUyD,GAAGg6D,KAChBh6D,GAAGi6D,KACJ,CAEDttC,WACE,MAAM3sB,EAAKvP,KACLypE,IAAUl6D,EAAGm2B,SAAgBn2B,EAAGk6D,QAEtC,OADAl6D,EAAGm6D,kBAAkBD,EAAU,GAAK,qBAC7BA,CACR,CAEDC,kBAAkB9nE,GAChB,OAAO5B,MAAK8N,GAAM47D,kBAAkB9nE,EACrC,CAED+nE,kBAAkBhnE,EAAGymE,GACnBppE,MAAK8N,GAAM67D,kBAAkBhnE,EAAGymE,EACjC,CAEDt+B,SACE9qC,MAAK8N,GAAMg9B,QACZ,CAEGpF,cACF,OAAO1kC,EAAO8D,cAAc9E,KAAKusB,IAClC,CAEG5hB,cACF,OAAO3K,MAAK8N,GAAM63C,SAASC,KAC5B,CAEGviC,eACF,OAAOrjB,MAAK8N,GAAMuV,QACnB,CAEG+vC,eACF,OAAOpzD,MAAK8N,GAAMslD,QACnB,CAEG1xD,YACF,MAAOiB,EAAGymE,GAAKppE,MAAKwvC,KACpB,OAAOxvC,KAAKusB,IAAIq9C,UAAU,EAAGR,EAC9B,CAEG1nE,UAAME,GACR5B,MAAK8N,GAAMpM,MAAQE,CACpB,CAEG2qB,UACF,OAAOvsB,MAAK8N,GAAMye,GACnB,CAEG6mC,eACF,OAAOpzD,MAAK8N,GAAMslD,QACnB,CAEG/uD,cACF,OAAOrE,MAAK8N,GAAM0kD,IACnB,CAEGpkD,cACF,OAAOpO,MAAK8N,GAAMM,OACnB,CAEGy7D,qBACF,OAAO7pE,MAAK8N,GAAM+7D,cACnB,CAEGC,mBACF,OAAO9pE,MAAK8N,GAAMg8D,YACnB,CAEG/Y,iBACF,OAAO/wD,MAAK8N,GAAMijD,UACnB,CAEG0Y,cACF,MAAMl6D,EAAKvP,KAEX,IAAIypE,GAAU,EAMd,OALIl6D,GAAGlL,KACLkL,GAAGlL,GAAS0lE,UAAY,EACxBN,EAAUl6D,GAAGlL,GAASJ,KAAKsL,EAAGgd,MAGzBk9C,CACR,CAEDzT,QAAQhqD,GACNhM,MAAKkF,IACN,CAEDkhB,UAAUpa,GACR,MAAMuD,EAAKvP,KACXuP,GAAG05D,GAAkB,cAAVj9D,EAAE6K,IACW,QAAV7K,EAAE6K,MAEdtH,GAAGrK,KACHqK,EAAG2sB,WAEN,CAED0kC,QAAQ50D,GACN,MAAMuD,EAAKvP,KACXuP,GAAGrK,KACCqK,EAAGwhD,YAAYxhD,EAAGu7B,QACvB,CAED2mB,SAASzlD,GACIhM,MACRkF,IACJ,CAEDssD,OAAOxlD,GACLhM,KAAKk8B,UACN,CAMDmtC,MACE,MAAM95D,EAAKvP,KACX,IAAIo6C,EAAQ7qC,EAAGnB,QAAQgsC,MACvB,IAAKA,EAAO,CACV,MAAM4vB,EAAWjB,gBAAeiB,GAChC5vB,EAAQ,IAAI,IAAItjC,IAAIvH,EAAGlL,UACpB2B,QAAOzE,GAAKyoE,EAASzoE,EAAEO,iBACvBQ,KAAK,GACT,CACD,OAAO,IAAIwU,IAAIsjC,GAAS,IACzB,CAMDmvB,MACE,MAAMh6D,EAAKvP,KACX,IAAI8L,EAASyD,EAAGnB,QAAQtC,OACxB,IAAKA,EAAQ,CACX,MAAMk+D,EAAWjB,gBAAeiB,GAIhC,GAHAl+D,EAAS,IAAI,IAAIgL,IAAIvH,EAAGlL,UACrB3B,KAAInB,GAAKyoE,EAASzoE,EAAEO,iBACpBkE,QAAOzE,GAAKA,IACXuK,EAAOrH,OAAS,EAAG,CACrB,MAAMnE,EAAM,CAAA,EAGZ,OAFAwL,EAAO/E,SAAQxF,GAAKjB,EAAIiB,EAAEiI,KAAOjI,IACjCuK,EAASjL,OAAOyF,OAAOhG,GACE,IAAlBwL,EAAOrH,OAAeqH,EAAO8J,MAAQ9J,CAC7C,CAEF,CACD,OAAO,IAAIjH,OAAOiH,GAAU,MAAO,IACpC,CAED0jC,MACE,MAAMjgC,EAAKvP,KACL0B,EAAQ6N,EAAGgd,IACjB,MAAO,CAAChd,EAAGs6D,eAAgBt6D,EAAGu6D,cAAcpnE,KAAIC,IAC9CA,EAAI4M,GAAGqmB,GAAOl0B,EAAMe,MAAM,EAAGE,IAAI2mE,WAAUzpD,GAAKtQ,GAAG6qC,GAAO5f,IAAI3a,MACnD,EAAItQ,GAAG25D,GAAM35D,GAAG25D,GAAMzkE,OAAS,GAAK8K,GAAG05D,GAAQ15D,GAAG25D,GAAMvmE,EAAI,IAAM4M,GAAG+B,GAAS3O,GAE5F,CAEDuC,MACE,MAAMqK,EAAKvP,MACJ2C,EAAGymE,GAAK75D,GAAGigC,KACZ5tC,EAAM2N,GAAGqmB,GAAOrmB,GAAGzB,GAAMye,KAC/Bhd,EAAG7N,MAAQE,EAAIU,IAAI,GACnBiN,EAAGo6D,kBAAkBhnE,EAAGymE,GACxB75D,GAAG05D,IAAQ,CACZ,CAEDrzC,IAAO0vC,GACL,MAAM/1D,EAAKvP,KAEX,OADAslE,EAAQA,EAAM9hE,MAAM+L,GAAGzD,KAAY,GAC5B/I,MAAMmI,KAAKqE,EAAGlL,SAAS,CAACwb,EAAGld,KAAM2iE,EAAM3iE,KAAOkd,GAAKtQ,GAAG6qC,GAAO5f,IAAI3a,KAAKylD,EAAMx1D,SAAe+P,GACnG,CAED2pD,MAEE,MAAMj6D,EAAKvP,KAEX,GAA0B,IAAtBuP,EAAGlL,QAAQI,OAAc,OAE7B,MAAMwlE,EAAQ16D,EAAGlL,QAAQjC,MAAM,IACzB8nE,EAAQ,CAAC,KAETF,EAAWjB,gBAAeiB,GAC1BG,EAAUpB,gBAAeoB,GAE/B,IAAIx+D,EAAM,EACVs+D,EAAMljE,SAAQ,CAACxF,EAAGoB,KAChB,MAAMgR,EAAIpE,GAAG6qC,GAAO5f,IAAIj5B,GAAKyoE,EAASzoE,EAAEO,eAAiB,KACzD,OAAK6R,GAOLs2D,EAAMtnE,GAAK,IAAIkC,OAAO8O,EAAG,KAEJ,IAAjBu2D,EAAMzlE,OAAqBylE,EAAMt4D,KAAK+B,EAAEqZ,QAExCk9C,EAAMA,EAAMzlE,OAAS,KAAOkP,EAAEqZ,OAAerhB,KAE7CA,EAAM,GAAGu+D,EAAMt4D,KAAK,MAAMjG,MAC9BA,EAAM,OACNu+D,EAAMt4D,KAAK+B,EAAEqZ,WAdPrhB,EAAM,GAAGu+D,EAAMt4D,KAAK,MAAMjG,MAC9BA,EAAM,EACFw+D,EAAQ//D,SAAS7I,IAAI2oE,EAAMt4D,KAAK,MAC7Bs4D,EAAMt4D,KAAKrQ,GAWA,IAGlBoK,EAAM,GAAGu+D,EAAMt4D,KAAK,MAAMjG,MAC9Bu+D,EAAMt4D,KAAK,KAEXrC,GAAGlL,GAAW,IAAIQ,OAAOqlE,EAAM5nE,KAAK,IAAK,IAG1C,EC7QI,MAAM8nE,uBAEXt8D,IAEAjL,YAAYiL,GACC9N,MACR8N,GAAQA,EACXA,EAAKm9B,cAFMjrC,KAGZ,CAEDu1C,gBACC,CAEDC,mBACax1C,MACR8N,GAAMo9B,iBADElrC,KAEZ,CAEDk8B,WACE,MAAM3sB,EAAKvP,KACLypE,IAAUl6D,EAAGm2B,SAAgBn2B,EAAGk6D,QAEtC,OADAl6D,EAAGm6D,kBAAkBD,EAAU,GAAK,wBAC7BA,CACR,CAEDC,kBAAkB9nE,GAChB,OAAO5B,MAAK8N,GAAM47D,kBAAkB9nE,EACrC,CAEG8jC,cACF,OAAO1kC,EAAO8D,cAAc9E,KAAKusB,IAClC,CAEG5hB,cACF,OAAO3K,MAAK8N,GAAM63C,SAASC,KAC5B,CAEGlkD,YACF,OAAO1B,MAAK8N,GAAMpM,KACnB,CAEGA,UAAME,GACR5B,MAAK8N,GAAMpM,MAAQE,CACpB,CAEG2qB,UACF,OAAOvsB,MAAK8N,GAAMye,GACnB,CAEG6mC,eACF,OAAOpzD,MAAK8N,GAAMslD,QACnB,CAEG/vC,eACF,OAAOrjB,MAAK8N,GAAMuV,QACnB,CAEGjV,cACF,OAAOpO,MAAK8N,GAAMM,OACnB,CAEGwlD,eACF,MAAM5xD,EAAMhC,MAAK8N,GAAMu8D,aACvB,GAAIroE,aAAe6C,OAAQ,MAAO,CAAC7C,GACnC,GAAIe,MAAMC,QAAQhB,GAAM,OAAOA,EAAIgE,QAAOlD,GAAKA,aAAa+B,SAC5D,MAAM,IAAIjE,MAAM,+DACjB,CAEG6oE,cACF,MAAMl6D,EAAKvP,KACX,IAAIypE,GAAU,EACd,IAAK,MAAM5uD,KAAKtL,EAAGqkD,SAEjB,GADA6V,EAAU5uD,EAAE5W,KAAKsL,EAAG7N,OAChB+nE,EAAS,MAGf,OAAOA,CACR,CAEDrjD,UAAUpa,GACgB,QAAVA,EAAE6K,KAEd7W,KAAKk8B,UAER,CAEDs1B,OAAOxlD,GACLhM,KAAKk8B,UACN,CAEDu1B,SAASzlD,GACPhM,KAAKk8B,UACN,EC5FI,MAAMouC,iBAEXx8D,IAEAjL,YAAYiL,GACC9N,MACR8N,GAAQA,EACXA,EAAKm9B,cAFMjrC,KAGZ,CAEDu1C,gBAEC,CAEDC,mBACax1C,MACR8N,GAAMo9B,iBADElrC,KAEZ,CAEG+yD,gBACF,OAAO/xD,EAAOsM,MAAMtN,MAAK8N,GAAMilD,UAAW,EAC3C,CAEGrxD,YACF,OAAO1B,MAAK8N,GAAMpM,KACnB,CAEGA,UAAME,GACR5B,MAAK8N,GAAMpM,MAAQE,CACpB,CAEGxB,WACF,OAAOJ,MAAK8N,IAAO1N,IACpB,CAED41D,QAAQhqD,GACN,MAAMuD,EAAKvP,KACK,WAAZuP,EAAGnP,MACDmP,EAAGwjD,UAAY,GAAKxjD,EAAG7N,MAAM+C,OAAS8K,EAAGwjD,YACzCxjD,EAAG7N,MAAQ6N,EAAG7N,MAAMkoE,UAAU,EAAGr6D,EAAGwjD,WAG3C,EC5CI,MAAMwX,mBAEXz8D,IAEA08D,KAAa,EAEb3nE,YAAYiL,GACC9N,MACR8N,GAAQA,EACXA,EAAKm9B,cAFMjrC,KAGZ,CAEDu1C,gBAEC,CAEDC,mBACax1C,MACR8N,GAAMo9B,iBADElrC,KAEZ,CAEGkzD,aACF,OAAOlzD,MAAK8N,GAAMolD,MACnB,CAEG9yD,WACF,OAAOJ,MAAK8N,IAAO1N,IACpB,CAEGA,SAAKwB,GACH5B,MAAK8N,KAAO9N,MAAK8N,GAAM1N,KAAOwB,EACnC,CAED6oE,IAAUz+D,GACR,OAAOhM,KAAKkzD,QAAoB,UAAVlnD,EAAE6K,KAAmB7K,EAAE0+D,QAAU1+D,EAAEya,SAAWza,EAAEsa,UAA0B,aAAdtmB,KAAKI,IACxF,CAED4+C,QAAQhzC,GACN,MAAMuD,EAAKvP,KACG,UAAVgM,EAAE6K,KAAmBtH,GAAGi7D,KAC1Bj7D,EAAGnP,KAAO,WAEb,CAEDgmB,UAAUpa,GACR,MAAMuD,EAAKvP,KACPuP,GAAGk7D,GAAUz+D,KACfuD,GAAGi7D,IAAa,EAChBj7D,EAAGnP,KAAO,OAEb,EC/CI,MAAMuqE,eAEX78D,IAEAjL,YAAYiL,GACC9N,MACR8N,GAAQA,EACXA,EAAKm9B,cAFMjrC,KAGZ,CAEDu1C,gBAEC,CAEDC,mBACax1C,MACR8N,GAAMo9B,iBADElrC,KAEZ,CAEGusB,UACF,OAAOvsB,MAAK8N,GAAMye,GACnB,CAEG7qB,YACF,OAAO1B,MAAK8N,GAAMpM,KACnB,CAEGA,UAAME,GACR5B,MAAK8N,GAAMpM,MAAQE,CACpB,CAEGxB,WACF,OAAOJ,MAAK8N,IAAO1N,IACpB,CAED41D,QAAQhqD,GACN,MAAMs5D,EAAQt5D,EAAEkC,OACVwpB,EAAQ4tC,EAAMuE,eACdruC,EAAM8pC,EAAMwE,aAClBxE,EAAM5jE,MAAQ1B,MAAKo/B,KACnBkmC,EAAMqE,kBAAkBjyC,EAAO8D,EAChC,CAEDi2B,SAASzlD,GACPhM,KAAK0B,MAAQ1B,MAAKo/B,IACnB,CAEDoyB,OAAOxlD,GACLhM,KAAK0B,MAAQ1B,MAAKo/B,IACnB,CAEDA,MACE,MAAM7vB,EAAKvP,KACX,GAAgB,SAAZuP,EAAGnP,KAAiB,CACtB,MAAMsC,EAAMwM,SAASsS,WAAWxhB,MAAK8N,GAAO,kBAC5C,GAAIpL,EAAK,OAAO1B,EAAOygB,cAAc/e,EAAIhB,MAAO6N,EAAGgd,IACpD,CACD,OAAOhd,EAAG7N,KACX,ECnDI,MAAMkpE,sBAEX98D,IAEA+8D,IAEAhoE,YAAYiL,GACV,MAAMyB,EAAKvP,KACXuP,GAAGzB,GAAQA,EACXyB,GAAGs7D,GAAmBt7D,GAAGu7D,GAAWhjE,KAAKyH,GACzCzB,EAAKm9B,cAAc17B,EACpB,CAEDgmC,gBACE,MAAMhmC,EAAKvP,KACEuP,EAAGiI,MAEdjI,GAAGzB,GAAM0qC,YAAYjpC,EAAGvJ,OAAQ,SAAUuJ,GAAGs7D,GAEhD,CAEDr1B,mBACE,MAAMjmC,EAAKvP,KACXuP,GAAGzB,GAAMo9B,iBAAiB37B,GAC1BA,GAAGzB,GAAM2qC,YAAYlpC,EAAGvJ,OAAQ,SAAUuJ,GAAGs7D,GAC9C,CAEDx0B,cAEOr2C,MAAK8N,GAAMmsC,YACdj6C,KAAKyxD,UAER,CAEG5Q,gBACF,OAAO7gD,MAAK8N,EACb,CAEGpM,YACF,OAAO1B,MAAK8N,GAAMpM,KACnB,CAEGA,UAAME,GACR5B,MAAK8N,GAAMpM,MAAQE,CACpB,CAEG4V,WACF,OAAOxX,MAAK8N,EACb,CAEG9H,aACF,MACMA,EAAS8G,OAAO5D,IADXlJ,MACkB8N,GAAO,eACpC,OAAOkN,MAAMgF,QAFFhgB,KAEa+K,MAAO/E,EAChC,CAEG+E,YAEF,OAAO/K,MAAK8N,GAAMinB,MAAQ/Z,MAAMwE,QAAQxf,MAAK8N,GAAO,OACrD,CAEGi9D,mBACF,OAAO/vD,MAAM+vD,aAAa/qE,KAAK+K,OAAO,EACvC,CAEGigE,aACF,OAAOl+D,OAAO5D,IAAIlJ,MAAK8N,GAAO,SAAU,GACzC,CAED0jD,OAAOxlD,GACAhM,MAAKirE,MAAanlD,SAASyC,KAAKvoB,MAAK8N,GAAO,SAAU,CAAEyW,IAAI,EAAOyI,OAAQhhB,GACjF,CAEDylD,SAASzlD,GAEP,MAAMuD,EAAKvP,KACLqK,EAAMkF,EAAGxE,MACf,IAAI6qB,GAAQ,EACR7nB,EAAMiN,MAAMpR,MAAM2F,EAAGiI,KAAM,iBAAiBjI,EAAG7N,WAC9CqM,IACDA,EAAMwB,EAAGiI,MAAMO,cAAc,UAC7B6d,GAAQ,GAGZ,MAAM5zB,EAAM+L,GAAKK,SAAW,GAC5BvN,OAAO8M,QAAQ3L,GAAK+E,SAAQ4yB,IACxB,MAAM/3B,EAAMg0B,EAAQ,GAAK+D,EAAE,GACrB9iB,EAAM8iB,EAAE,GACd,GAAY,OAAR9iB,GAAwB,UAARA,EAElB,YADA/J,OAAOU,IAAI+B,GAAGzB,GAAO,QAAQ+I,IAAO8iB,EAAE,IAIxC,MAAM3zB,EAAS,SAAS6Q,gBAAkBA,QAC9B9T,MAAMmI,KAAK8P,MAAMsC,SAASjT,EAAKrE,IACvCA,QAAOlG,GAAqB,WAAfA,EAAGqd,UACfnX,QAAOlG,GAAqB,YAAfA,EAAGqd,UAChBnX,QAAOlG,GAAMA,IAAOyP,GAAGzB,KACvB9H,QAAOlG,GAAMA,IAAOyP,EAAGvJ,SACvBA,QAAOzE,IAAKyZ,MAAMwE,QAAQje,EAAG,mBAE7BwF,SAAQjH,GAAMyP,GAAG27D,GAASprE,EAAI+W,EAAKjV,IAAK,GAElD,CAEDkpE,IAAW9+D,GACT,MAAMuD,EAAKvP,KACLwX,EAAOjI,EAAGiI,KAChBjI,EAAG7N,MAAQ,GACX6N,GAAGzB,GAAMuV,UAAW,EACpB,MAAM8nD,EAAYr+D,OAAO5D,IAAIqG,EAAGvJ,OAAQ,cAClCA,EAASmlE,EAAY,sBAAsBA,MAAgB,mBAAmBn/D,EAAEkC,OAAOxM,UAC7FsZ,MAAMsC,SAAS9F,EAAM,UAAUzQ,SAAQjH,GAAMyP,GAAG67D,GAAatrE,GAAI,KACjEkb,MAAMsC,SAAS9F,EAAMxR,GAAQe,SAAQjH,GAAMyP,GAAG67D,GAAatrE,GAAI,IAEhE,CAEDsrE,IAAatrE,EAAI4B,GACboL,OAAOwB,OAAOxO,EAAI,WAAY4B,GAC9BsZ,MAAM8F,YAAYhhB,EAAI,SAAU4B,EACnC,CAEDwpE,IAASprE,EAAI+W,EAAM,GAAInV,EAAQ,IAE7B,MAAMuG,EAAO6E,OAAO5D,IAAIpJ,EAAI,QAAQ+W,IAAO,IAAIzU,MAAM,SAC/CqnE,EAAU/nE,EAAM+C,OAAS,GAAKwD,EAAKmC,SAAS1I,GACpCsZ,MAAM4J,cAAc9kB,IAAOkb,MAAMqwD,gBAAgBvrE,IAAsB,kBAAfA,EAAGqd,QAGvErQ,OAAOwB,OAAOxO,EAAI,YAAa2pE,GAE/BA,EAAUzuD,MAAMomC,KAAKthD,GAAMkb,MAAM4gC,KAAK97C,GAIxCgN,OAAOU,IAAI1N,EAAI,eAAe2pE,GAAU,MACxCzuD,MAAMsC,SAASxd,EAAI,yBAAyBiH,SAAQjH,GAAMgN,OAAOU,IAAI1N,EAAI,eAAe2pE,GAAU,OACnG,CAEDwB,MACE,MAAM17D,EAAKvP,KACLwX,EAAOjI,EAAGiI,KAChB,IAAKA,EAAM,OAAO,EAClB,IAAKjI,EAAGy7D,OAAQ,OAAO,EACvB,IAAKxzD,EAAKO,cAAc,UAAW,OAAO,EAE1C,OAAc,MADFP,EAAKO,cAAc,iBAAiBxI,EAAG7N,UAEpD,ECzJI,MAAM4pE,wBAAwBV,sBAEnC/nE,YAAYiL,GACV6c,MAAM7c,EACP,CAEG0J,WACF,OAAOxX,KAAK6gD,SACb,ECPI,MAAM0qB,uBAAuBX,sBAElC/nE,YAAYiL,GACV6c,MAAM7c,EACP,CAEG0J,WACF,MAAMjI,EAAKvP,KACX,GAAIuP,EAAGsxC,UAAUrpC,KAAM,OAAOjI,EAAGsxC,UAAUrpC,KAC3C,MAAMA,EAAO1K,OAAO5D,IAAIqG,EAAGsxC,UAAW,QACtC,OAAO7lC,MAAMgF,QAAQzQ,EAAGxE,MAAOyM,EAChC,ECVI,MAAMg0D,mBAEX19D,SAAQ/I,EACR0mE,KAAc,EAEd5oE,YAAYiL,GACV,MAAMyB,EAAKvP,KACXuP,GAAGk8D,IAAc,EACjBl8D,GAAGzB,GAAQA,EACXA,EAAKm9B,gBAAgB17B,EACtB,CAEDgmC,gBACC,CAEDC,mBACE,MAAMjmC,EAAKvP,KACXuP,GAAGzB,GAAMo9B,mBAAmB37B,GAC5BA,GAAGzB,QAAQ/I,EACXwK,GAAGk8D,IAAc,CAClB,CAEGxa,iBACF,OAAOjxD,MAAK8N,GAAMmjD,UACnB,CAEGD,mBACF,OAAOhxD,MAAK8N,GAAMkjD,YACnB,CAEGrmD,cACF,OAAO3K,MAAK8N,GAAM63C,SAASC,KAC5B,CAEGviC,eACF,OAAOrjB,MAAK8N,GAAMuV,QACnB,CAEG+vC,eACF,OAAOpzD,MAAK8N,GAAMslD,QACnB,CAEG1xD,YACF,OAAO1B,MAAK8N,GAAMpM,KACnB,CAEG2vD,WACF,OAAOrxD,MAAK8N,GAAMujD,IACnB,CAEGD,YACF,OAAOpxD,MAAK8N,GAAMsjD,KACnB,CAEG5pD,cACF,OAAOxH,MAAK8N,GAAMtG,OACnB,CAEG+nD,gBACF,OAAOv0C,MAAMu0C,UAAUvvD,MAAK8N,GAC7B,CAEDouB,WACE,MAAM3sB,EAAKvP,KACLoY,EAAM7I,EAAG5E,SAAW4E,EAAG8T,SAE7B,OADA9T,GAAGm8D,GAAStzD,GACLA,CACR,CAEDwoD,QAAQ50D,GACNhM,KAAKk8B,UACN,CAED9V,UAAUpa,GACR,MAAMuD,EAAKvP,KACa,QAAVgM,EAAE6K,MACFtH,EAAG2sB,aACb3sB,GAAGo8D,GAAS3/D,GACZuD,GAAGq8D,KAER,CAEDla,UAAU1lD,GACRhM,KAAKk8B,UACN,CAEDu1B,SAASzlD,GACPhM,MAAK6rE,GAAgB7/D,EACtB,CAEDwlD,OAAOxlD,GACMhM,MACR2rE,GAAS3/D,GADDhM,MAER6rE,GAAgB7/D,EACpB,CAED2/D,IAAS3/D,GACP,MAAMuD,EAAKvP,KACPuP,EAAG5E,SACH4E,EAAGggD,WAAahgD,EAAG6hD,QACrBtrC,SAASS,QAAQva,GAAG,GAAO,GAAM,GACjCuD,GAAGw7B,KAEN,CAED8gC,IAAgB7/D,GACd,OAAOhM,KAAKixD,WAAajxD,MAAKgyD,KAAoBhyD,KAAKgxD,aAAehxD,MAAK2hB,KAAmB3hB,KAAKk8B,UACpG,CAED6O,MACE,OAAO/qC,MAAK8N,GAAMi9B,OACnB,CAEDppB,MAGE,OAFW3hB,KACRk8B,WADQl8B,MAED8N,GAAM6T,eACjB,CAEDqwC,MAGE,OAFWhyD,KACRk8B,WADQl8B,MAED8N,GAAMkkD,gBACjB,CAEDpmD,WACE,MAAM2D,EAAKvP,KACX,IAAIuP,GAAGk8D,KAAel8D,EAAG5E,SAAY4E,EAAGggD,UAAxC,CAEA,GADAhgD,GAAGk8D,IAAc,EACbl8D,EAAG8hD,KACL,UACQ9hD,GAAG8hD,WACHrwD,EAAOwG,QAAQ+H,EAAG/H,QACzB,CAAC,MAAOwE,GAER,CAEHuD,GAAGk8D,IAAc,CAVyC,CAW3D,CAEDC,IAAS/gE,GACP,MAAM4E,EAAKvP,KACX4gB,uBAAsB,KACpB5F,MAAM8F,YAAYvR,GAAGzB,GAAO,cAAenD,EAAQ,GAEtD,CAED0mD,MACE,OAAO36B,OAAO26B,KAAK,IAAK,KAAM,IAAK,WACpC,ECvJH,MAAMya,GAAc,CAElB,CAACjhE,OAAOkY,IAAI,eACV,MAAM1Y,EAAM2Q,MAAM+E,KAAK/f,MACvB,OAAOgb,MAAMgG,OAAO3W,EACrB,EAKD,CAACQ,OAAOkY,IAAI,gBACV,OAAO/H,MAAMmD,UAAUne,MAAMgG,QAAO9D,GAAKA,aAAai6B,KAAW3vB,QAAQ9K,KAC1E,EAUD8d,QAAQ5V,EAAQ,IACd,OAAOoR,MAAMwE,QAAQxf,KAAM4J,EAC5B,EAODA,MAAMA,EAAQ,GAAIyT,GAAS,GACzB,OAAOrC,MAAMpR,MAAM5J,KAAM4J,GAAO,EAAOyT,EACxC,EAODC,SAAS1T,EAAQ,GAAIyT,GAAS,GAC5B,OAAOrC,MAAMsC,SAAStd,KAAM4J,GAAO,EAAOyT,EAC3C,EAWDqrB,OAAOrjB,GAAU,EAAMC,GAAW,EAAOrd,GACvCjI,KAAKk6B,KAAK,SAAUjyB,EAAMod,EAASC,GAAU,EAC9C,EAUD4U,KAAKhyB,EAAMlG,EAAM,GAAIqjB,GAAU,EAAOC,GAAW,EAAOuC,GAAa,GACnE,OAAO/B,SAASyC,KAAKvoB,KAAMkI,EAAMlG,EAAKqjB,EAASC,EAAUuC,EAC1D,EAQDm2B,UAAU91C,EAAO,GAAIV,EAAU,GAC7B,OAAOse,SAASc,KAAK5mB,KAAMkI,EAAMV,EAClC,EAQDuf,KAAK7e,EAAM+D,GACT,OAAOjM,KAAKkmB,OAAOhe,EAAM+D,GAAM,EAChC,EAQDkE,GAAGjI,EAAM+D,EAAM8a,GAAO,GACpB,OAAO/mB,KAAKkmB,OAAOhe,EAAM+D,EAAM8a,EAChC,EAQDuP,IAAIpuB,EAAM+D,GACR,OAAOjM,KAAKmnB,SAASjf,EAAM+D,EAC5B,EAMDsa,QAAQva,EAAGkV,GAAW,EAAMqG,GAAY,EAAMC,GAAY,GACxD1B,SAASS,QAAQva,EAAGkV,EAAUqG,EAAWC,EAC1C,EAQDtB,OAAOhe,EAAM+D,EAAM8a,GAAO,GACxB,OAAO/mB,KAAKw4C,YAAYx4C,KAAMkI,EAAM+D,EAAM8a,EAC3C,EAQDI,SAASjf,EAAM+D,GACb,OAAOjM,KAAKy4C,YAAYz4C,KAAMkI,EAAM+D,EACrC,EAWDusC,YAAY14C,EAAIoI,EAAO,GAAIzH,EAAIsmB,GAAO,GACpC,OAAOjB,SAASyE,OAAOvqB,KAAMF,EAAIoI,EAAMzH,EAAIsmB,EAC5C,EASD0xB,YAAY34C,EAAIoI,EAAO,GAAIzH,GACzB,OAAOqlB,SAASzK,OAAOrb,KAAMF,EAAIoI,EAAMzH,EACxC,GAWUsrE,MAASpjE,GACb9H,OAAOggB,OAAOlY,EAAMqjE,WAAarjE,EAAOmjE,IClL1C,MAAMG,eAEXn+D,SAAQ/I,EACR0mE,KAAc,EAEd5oE,YAAYiL,GACV,MAAMyB,EAAKvP,KACXuP,GAAGzB,GAAQA,EACXyB,GAAGk8D,IAAc,EACjB39D,EAAKm9B,cAAc17B,EACpB,CAEDgmC,gBAEC,CAEDC,mBACE,MAAMjmC,EAAKvP,KACXuP,GAAGzB,GAAMo9B,iBAAiB37B,GAC1BA,GAAGzB,QAAQ/I,EACXwK,GAAGk8D,IAAc,CAClB,CAEDp1B,cAEOr2C,MAAK8N,GAAMmsC,UAGjB,CAMDiyB,QAAQ9mD,GAGP,CAMDypC,SAASzpC,GAGR,CAMD+mD,WAAWngE,GAGV,CAMD0lD,UAAU1lD,GAGT,CAMDylD,SAASzlD,GAGR,CAMDwlD,OAAOxlD,GAEN,CAEG+oB,WACF,OAAO/0B,MAAK8N,GAAMinB,IACnB,CAEGg9B,aACF,OAAO/xD,KAAK+0B,MAAMg9B,MACnB,EC3EI,MAAMqa,kBAGXt+D,SAAQ/I,EACR2iC,SAAY3iC,EACZ8lC,SAAe9lC,EAEfsnE,SAActnE,EACdunE,SAAkBvnE,EAClBwnE,SAAsBxnE,EACtBynE,SAAmBznE,EAEnB0nE,SAAkB1nE,EAClBs3C,SAAkBt3C,EAElBlC,YAAYiL,GACV9N,MAAK8N,GAAQA,CACd,CAED8uC,oBACE,MAAMrtC,EAAKvP,KACL8N,EAAOyB,GAAGzB,GAEZyB,EAAGylB,QACLlnB,EAAKqC,GAAG,QAASZ,GAAG28D,GAASpkE,KAAKyH,IAClCzB,EAAKqC,GAAG,SAAUZ,GAAGs/C,GAAU/mD,KAAKyH,IACpCzB,EAAKqC,GAAG,WAAYZ,GAAG48D,GAAYrkE,KAAKyH,MAExCzB,EAAKqC,GAAG,UAAWZ,GAAG6W,EAAWte,KAAKyH,IACtCzB,EAAKqC,GAAG,QAASZ,GAAGyvC,GAASl3C,KAAKyH,IAClCzB,EAAKqC,GAAG,QAASZ,GAAGymD,GAASluD,KAAKyH,IAClCzB,EAAKqC,GAAG,QAASZ,GAAGqxD,GAAS94D,KAAKyH,KAIpCzB,EAAKqC,GAAG,SAAUZ,GAAGkiD,GAAU3pD,KAAKyH,IACpCzB,EAAKqC,GAAG,OAAQZ,GAAGiiD,GAAQ1pD,KAAKyH,IAChCzB,EAAKqC,GAAG,UAAWZ,GAAGmiD,GAAW5pD,KAAKyH,IAEtCA,GAAGm9D,IAAS7sD,GAAMA,EAAE01B,mBACrB,CAEDwH,uBACE,MAAMxtC,EAAKvP,KACX8lB,SAASk3B,gBAAgBztC,GAAGzB,IAC5ByB,GAAGm9D,IAAS7sD,GAAMA,EAAE21B,uBAEpBjmC,GAAGs7B,IAAcrhB,QAEjBja,GAAGzB,QAAQ/I,EACXwK,GAAGm4B,QAAY3iC,EACfwK,GAAGs7B,QAAe9lC,EAClBwK,GAAGi9D,QAAmBznE,EAEtBwK,GAAGk9D,QAAkB1nE,EACrBwK,GAAG8sC,QAAkBt3C,EAErBwK,GAAG88D,QAActnE,EACjBwK,GAAG+8D,QAAkBvnE,EACrBwK,GAAGg9D,QAAsBxnE,CAC1B,CAEDsxC,YAAYnuC,GACV,MAAMqH,EAAKvP,KACNuP,GAAGzB,GAAMuoC,cACZ9mC,GAAGo9D,KACHp9D,GAAGzB,GAAM6T,mBAEX3hB,MAAK0sE,IAAS7sD,GAAMA,EAAEw2B,cAAcnuC,IACrC,CAEDg0B,WACEl8B,MAAK0sE,IAAS7sD,GAAMA,EAAEqc,cACvB,CAED+O,cAAchR,GACZ,IAAKA,EAAY,OACjB,MAAM1qB,EAAKvP,KACXuP,GAAGs7B,KAAiB,IAAI/zB,IACxBvH,GAAGs7B,GAAapsB,IAAIwb,GACpB1qB,GAAGq9D,KACCr9D,GAAGzB,GAAM4a,aACXuR,EAAWsb,iBAEd,CAEDrK,iBAAiBjR,GACJj6B,MACR6qC,IAAczhB,OAAO6Q,GADbj6B,MAER4sE,IACJ,CAEDA,MACE,MAAMr9D,EAAKvP,KACXuP,GAAGm4B,GAAYn4B,GAAGs7B,GAAe9nC,MAAMmI,KAAKqE,GAAGs7B,IAAcxoC,UAAY,EAC1E,CAEDqqE,IAAQhmD,GACkB,mBAAbA,GACT1mB,MAAK0nC,IAAW3gC,QAAQ2f,EAE3B,CAEDwV,SAASlwB,GACP,OAAOhM,MAAK0nC,IAAY1nC,MAAK0nC,GAAU1wB,OAAM6I,IAAKA,EAAEqc,UAAWrc,EAAEqc,SAASlwB,IAC3E,CAED0lD,IAAW1lD,GACThM,MAAK0sE,IAAQ7sD,GAAKA,EAAE6xC,YAAY1lD,IACjC,CAEDoa,GAAWpa,GACThM,MAAK0sE,IAAQ7sD,GAAKA,EAAEuG,YAAYpa,IACjC,CAEDgzC,IAAShzC,GACPhM,MAAK0sE,IAAQ7sD,GAAKA,EAAEm/B,UAAUhzC,IAC/B,CAEDgqD,IAAShqD,GACPhM,MAAK0sE,IAAQ7sD,GAAKA,EAAEm2C,UAAUhqD,IAC/B,CAED40D,IAAS50D,GACPhM,MAAK0sE,IAAQ7sD,GAAKA,EAAE+gD,UAAU50D,IAC/B,CAEDylD,IAAUzlD,GACRhM,MAAK0sE,IAAQ7sD,GAAKA,EAAE4xC,WAAWzlD,IAChC,CAEDwlD,IAAQxlD,GACNhM,MAAK0sE,IAAQ7sD,GAAKA,EAAE2xC,SAASxlD,IAC9B,CAEDkgE,IAASlgE,GACPhM,MAAK0sE,IAAQ7sD,GAAKA,EAAEqsD,UAAUlgE,IAC/B,CAED6iD,IAAU7iD,GACRhM,MAAK0sE,IAAQ7sD,GAAKA,EAAEgvC,WAAW7iD,IAChC,CAEDmgE,IAAYngE,GACVhM,MAAK0sE,IAAQ7sD,GAAKA,EAAEssD,aAAangE,IAClC,CAED2gE,MACE,MAAMp9D,EAAKvP,KACL8N,EAAOyB,GAAGzB,GAEZyB,EAAGylB,OACLzlB,GAAGk9D,KAAoB,IAAIR,eAAen+D,IAE1CyB,GAAGg9D,KAAwB,IAAIf,mBAAmB19D,GAC9CyB,EAAGs9D,SAASt9D,GAAGu9D,KACfv9D,EAAGgmD,YAAYhmD,GAAGw9D,KAClBx9D,EAAGyV,WAAUzV,GAAGi9D,KAAqB,IAAIlB,gBAAgBx9D,KAG3DA,EAAK2pC,UACHloC,EAAGyV,UAAYzV,EAAGy9D,cACpBz9D,GAAG8sC,KAAoB,IAAIzF,eAAe9oC,GAG/C,CAEDi/D,MACI,MAAMx9D,EAAKvP,KACL8N,EAAOyB,GAAGzB,GAChByB,GAAG+8D,KAAoB,IAAI3B,eAAe78D,GAC1CyB,GAAG88D,KAAgB,IAAI3D,qBAAqB56D,EAC/C,CAEDg/D,MACE,MAAMv9D,EAAKvP,KACL8N,EAAOyB,GAAGzB,GAChB,IAAIyW,GAAK,EACT,OAAQzW,EAAK1N,MACX,IAAK,OACHmkB,GAAK,EACLhV,GAAG+8D,KAAoB,IAAI3B,eAAe78D,GAC1C,MACF,IAAK,WACHyW,GAAK,EACLhV,GAAG+8D,KAAoB,IAAI/B,mBAAmBz8D,GAC9C,MACF,IAAK,SACHyW,GAAK,EACLhV,GAAG+8D,KAAoB,IAAIhC,iBAAiBx8D,GAG5CyW,IACFhV,GAAG88D,KAAgB,IAAI3D,qBAAqB56D,GAE/C,CAEGqP,cACF,OAAOnd,MAAK8N,IAAOqP,OACpB,CAEG6X,aACF,MAAyB,SAAjBh1B,KAAKmd,OACd,CAEGo4C,iBACF,MAAyB,aAAjBv1D,KAAKmd,OACd,CAEG0vD,cACF,MAAyB,UAAjB7sE,KAAKmd,OACd,CAEG6H,eACF,MAAyB,WAAjBhlB,KAAKmd,OACd,CAEG6vD,iBACF,MAAyB,aAAjBhtE,KAAKmd,OACd,ECpNI,MAAM8vD,2BAA2B1vD,yBAGhCwuD,MAAMkB,oBACNjyD,MAAM7R,OAAO,gBAAiB8jE,mBAAoB,CAAE7jE,QAAS,WAC7DvI,OAAOC,KAAKmsE,mBACf,CAEUC,gCACP,MAAO,CAAC,WACX,CAEDjzB,KAAc,EACdkzB,SAAqBpoE,EACrBqoE,SAAUroE,EAEVlC,cACI8nB,OAEH,CAEDiyB,oBACI,MAAMrtC,EAAKvP,KACXuP,GAAG49D,IAAoBvwB,oBACvBrtC,GAAG69D,GAAU79D,EAAGwlB,KAChBxlB,GAAG89D,IACN,CAEDtwB,uBACI,MAAMxtC,EAAKvP,KACX8lB,SAASk3B,gBAAgBztC,GACzBA,GAAG49D,IAAoBpwB,uBACvBxtC,GAAG49D,QAAqBpoE,EACxBwK,GAAG69D,QAAUroE,CAChB,CAED03C,yBAAyBv0C,EAAMw0C,EAAUC,GACrC,MAAMptC,EAAKvP,KACXuP,GAAG89D,GAAWnlE,GACdqH,EAAG+tC,WAAWp1C,EAAMw0C,EAAUC,GAC9BptC,GAAG49D,IAAoB92B,YAAYnuC,EACtC,CAEDmlE,IAAWnlE,GACP,MAAMqH,EAAKvP,KACNuP,GAAG0qC,KACJ1qC,EAAG8tC,aAAan1C,GAChBqH,GAAG49D,IAAoB92B,YAAYnuC,GACnCqH,GAAG0qC,IAAc,EAExB,CAEDoD,aAAa/R,GACT,MAAM/7B,EAAKvP,KACL+0B,EAAOxlB,GAAG69D,GAChB,GAAI79D,EAAGkzC,UAAY1tB,EAAM,CACrBxlB,EAAGipC,YAAYzjB,EAAM,SAAUxlB,GAAG+9D,GAAaxlE,KAAKyH,IACpDA,EAAGipC,YAAYzjB,EAAM,UAAWxlB,GAAG+9D,GAAaxlE,KAAKyH,IACrD,MAAMmX,EAAWnX,GAAG0vC,GAASn3C,KAAKyH,GAC5Bg+D,EAAUh+D,EAAGi+D,UAAY,EAAItjE,EAAWujE,SAAS/mD,EAAUnX,EAAGi+D,WAAW,GAAQ9mD,EACvFnX,EAAGY,GAAG,QAASo9D,EAClB,CACJ,CAEDjwB,WAAWhS,EAASoR,EAAUC,GACV,aAAZrR,GACAtrC,KAAKk6B,KAAK,WAAYl6B,KAAKqjB,UAAU,GAAM,GAAM,EAExD,CAED4nB,cAAchR,GACVj6B,MAAKmtE,IAAoBliC,cAAchR,EAC1C,CAEDiR,iBAAiBjR,GACbj6B,MAAKmtE,IAAoBjiC,iBAAiBjR,EAC7C,CAEGlvB,YACA,OAAO/K,KAAK6K,OAAOkY,IAAI,cAC1B,CAEGwT,sBACA,OAAOv2B,KAAK6K,OAAOkY,IAAI,eAC1B,CAEGk3B,iBACA,OAAOj6C,MAAKi6C,EACf,CAEGllB,WAEA,OAAOpK,MAAMoK,MADF/0B,KACa+K,OAAOgqB,MADpB/0B,KAC+Bwf,UAAU,OACvD,CAEGijC,eACA,OAAO7O,YAAY6O,SAASziD,KAAKI,KACpC,CAEGoiD,cACA,OAAO5O,YAAY4O,QAAQxiD,KAAKI,KACnC,CAMGotE,gBACA,OAAO1gE,OAAO0V,SAASxiB,KAAM,aAAc,EAC9C,CAQG2K,cACA,MAAMmnD,EAAW9xD,MAAKotE,IAAStb,SAC/B,OAAOA,GAGS,IAHE/uD,MAAMmI,KAAK4mD,GACxB9rD,QAAOlG,GAAMkb,MAAM4J,cAAc9kB,KACjCkG,QAAOlG,IAA6B,IAAvBA,EAAG6lD,UAAUC,QAC1BnhD,MAER,CAQD6oE,IAAathE,GACT,MAAMuD,EAAKvP,KACPuP,GAAG69D,IAAW79D,EAAGkzC,WACjBlzC,EAAG8T,UAA0B,IAAf9T,EAAG5E,QAExB,CAEDs0C,IAASjzC,GACL,MAAMuD,EAAKvP,KACPuP,GAAG69D,IAAW79D,EAAGkzC,WACblzC,EAAG5E,SACC4E,EAAGkzC,UAAUlzC,GAAG69D,GAAQM,gBACxBn+D,EAAGizC,SAASjzC,GAAG69D,GAAQnwC,UAE3BnX,SAASS,QAAQva,GACjBuD,EAAG8T,UAAW,GAGzB,EC3JE,MAAMsqD,0BAA0B/oB,wBAGnCmnB,MAAM4B,mBACN3yD,MAAM7R,OAAO,eAAgBwkE,kBAAmB,CAAEvkE,QAAS,UAC3DvI,OAAOC,KAAK6sE,kBACb,CAEUT,gCAET,MAAO,CAAC,eAAgB,OAAQ,WAAY,WAC7C,CAEDC,SAAqBpoE,EACrB6oE,SAAkB7oE,EAClB8oE,SAAqB9oE,EACrB+oE,SAAkB/oE,EAElBV,SAAWU,EACXk1C,KAAc,EAEdp3C,cACE8nB,QACA3qB,MAAKmtE,GAAqB,IAAIf,kBAAkBpsE,KACjD,CAED48C,oBACE,MAAMrtC,EAAKvP,KACXuP,GAAG49D,IAAoBvwB,oBACvBrtC,GAAG89D,KACH99D,EAAGnB,QAAQ1M,MAAQ6N,EAAG7N,MACtB6N,EAAGY,GAAG,UAAUnE,GAAKuD,EAAGnB,QAAQ1M,MAAQ6N,EAAG7N,OAC5C,CAEDq7C,uBACE,MAAMxtC,EAAKvP,KACXuP,GAAG49D,IAAoBpwB,uBACvBxtC,GAAG49D,QAAqBpoE,EAExBwK,GAAGq+D,QAAkB7oE,EACrBwK,GAAGs+D,QAAqB9oE,EACxBwK,GAAGu+D,QAAkB/oE,EACrBwK,GAAGlL,QAAWU,EAEd+gB,SAASk3B,gBAAgBztC,EAC1B,CAEDktC,yBAAyBv0C,EAAMw0C,EAAUC,GACvC,MAAMptC,EAAKvP,KACX,GAAIuP,EAAGw+D,YAAuB,aAAT7lE,GAAuBqH,EAAG6jD,SAAU,OAAO7jD,EAAG6jD,UAAW,EAC9E7jD,GAAG89D,GAAWnlE,GACdqH,EAAG+tC,WAAWp1C,EAAMw0C,EAAUC,GAC9BptC,GAAG49D,IAAoB92B,YAAYnuC,EACpC,CAED+iC,cAAchR,GACZj6B,MAAKmtE,IAAoBliC,cAAchR,EACxC,CAEDiR,iBAAiBjR,GACfj6B,MAAKmtE,IAAoBjiC,iBAAiBjR,EAC3C,CAEGlvB,YACF,OAAO/K,KAAK6K,OAAOkY,IAAI,cACxB,CAKGwT,sBACF,OAAOv2B,KAAK6K,OAAOkY,IAAI,eACxB,CAGGk3B,iBACF,OAAOj6C,MAAKi6C,EACb,CAEG6W,eACF,OAAO9wD,KAAKgP,aAAa,WAC1B,CAEGitB,gBACF,OAAOj8B,KAAKgP,aAAa,YAC1B,CAEG+hD,iBACF,OAAO/wD,KAAKgP,aAAa,aAC1B,CAKGiiD,iBACF,OAAOjxD,KAAKgP,aAAa,aAC1B,CAKGgiD,mBACF,OAAOhxD,KAAKgP,aAAa,eAC1B,CAEGqiD,WACF,OAAOrxD,KAAKgP,aAAa,OAC1B,CAEGoiD,YACF,OAAOpxD,KAAKgP,aAAa,QAC1B,CAEGwjD,WACF,OAAO1lD,OAAO5D,IAAIlJ,KAAM,OACzB,CAEGqqE,mBACF,OAAOrqE,MAAKqE,EAEb,CAGG6uD,aACF,OAAOlzD,KAAKgP,aAAa,SAC1B,CAEGxH,cACF,OAAOsF,OAAO0V,SAASxiB,KAAM,UAAW,EACzC,CAEG8wD,aAASpvD,GACXoL,OAAOwB,OAAOtO,KAAM,WAAY0B,EACjC,CAEGu6B,cAAUv6B,GACZoL,OAAOwB,OAAOtO,KAAM,WAAY0B,EACjC,CAEGqvD,eAAWrvD,GACboL,OAAOwB,OAAOtO,KAAM,WAAY0B,EACjC,CAEGuvD,eAAWvvD,GACboL,OAAOwB,OAAOtO,KAAM,aAAc0B,EACnC,CAEGsvD,iBAAatvD,GACfoL,OAAOwB,OAAOtO,KAAM,eAAgB0B,EACrC,CAEG2vD,SAAK3vD,GACPoL,OAAOwB,OAAOtO,KAAM,OAAQ0B,EAC7B,CAEG0vD,UAAM1vD,GACRoL,OAAOwB,OAAOtO,KAAM,QAAS0B,EAC9B,CAEG8wD,SAAK9wD,GACPoL,OAAOU,IAAIxN,KAAM,OAAQ0B,EAC1B,CAEG2oE,iBAAa3oE,GACf,IAAIuG,EAAOvG,EAEX,GAAIV,EAAOwE,WAAW9D,GAAQ,CAC5B,MAAMpB,GAAOyC,MAAMC,QAAQtB,GAASA,EAAQ,CAACA,IAAQgB,KAAInB,GAAKA,EAAEyrB,QAAUzrB,EAAEI,cAAgBJ,IAC5F0G,EAAOxC,KAAKiI,UAAUpN,EACvB,CACDwM,OAAOU,IAAIxN,KAAM,eAAgBiI,EAClC,CAMGirD,WAAOxxD,GACS,aAAd1B,KAAKI,MAAqB0M,OAAOwB,OAAOtO,KAAM,SAAU0B,EAC7D,CAEG8F,YAAQ9F,GACVoL,OAAO0B,SAASxO,KAAM,UAAW0B,EAClC,CAEG0xD,eACF,OAAOzoC,MAAMyoC,QACd,CAEGA,aAAS1xD,GACXipB,MAAMyoC,UAAWpzD,KAAK+tE,YAAqB/sE,EAAOgM,OAAOtL,EAC1D,CAEG6qB,UACF,OAAO5B,MAAMjpB,KACd,CAEGA,YACF,OAAO1B,MAAK4tE,GAAkB5tE,MAAK4tE,GAAgBlsE,MAAQipB,MAAMjpB,KAClE,CAEGA,UAAME,GACR+oB,MAAMjpB,MAAQ1B,KAAKwyD,OAAS5wD,EAAM,GAAKA,CACxC,CAKGs8C,gBACF,OAAOl+C,OAAS0G,SAAS6U,aAC1B,CAEGwyD,iBACF,MAAqB,aAAd/tE,KAAKI,IACb,CAEG20B,WAEF,OAAOpK,MAAMoK,MADF/0B,KACa+K,OAAOgqB,MADpB/0B,KAC+Bwf,UAAU,OACrD,CAEDyd,QACE,MAAM1tB,EAAKvP,KAGX,OAFAuP,EAAGm6D,kBAAkB,IACrB1uD,MAAMiiB,MAAM1tB,GACLA,EAAG2sB,UACX,CAEDva,gBAEE,OADA3hB,KAAKk8B,WACEvR,MAAMhJ,eACd,CAEDqwC,iBAEE,OADAhyD,KAAKk8B,WACEvR,MAAMqnC,gBACd,CAED91B,SAASlwB,GACP,OAAOhM,MAAKmtE,GAAmBjxC,SAASlwB,EACzC,CAODwT,QAAQ5V,EAAQ,IACd,OAAOoR,MAAMwE,QAAQxf,KAAM4J,EAC5B,CAGDyzC,aAAa/R,GACX,MAAM/7B,EAAKvP,KACPuP,EAAG0sB,WAAW1sB,EAAGw7B,QACrB,MAAM9iC,EAAOsH,EAAG4kD,eAAelsD,KAC3BA,GAAM+S,MAAM6G,mBAAmBtS,EAAItH,EACxC,CAEDq1C,WAAWhS,EAASoR,EAAUC,GAE5B,MAAMptC,EAAKvP,KAEP,SAAWsrC,GACb/7B,GAAGy+D,KAGD,iBAAmB1iC,GACrB/7B,GAAG0+D,GAAoBtxB,GAGrB,SAAWrR,GACb/7B,GAAG2+D,KAGW,aAAZ5iC,GAAsC,aAAZA,GAC5B/7B,EAAG2sB,UAEN,CAEDmxC,IAAWnlE,GACT,MAAMqH,EAAKvP,KACNuP,GAAG0qC,KACN1qC,GAAGy+D,KACHz+D,GAAG0+D,GAAoB1+D,EAAGlL,SAC1BkL,GAAG2+D,KACH3+D,EAAG8tC,aAAan1C,GAChBqH,GAAG49D,IAAoB92B,YAAYnuC,GACnCqH,GAAG0qC,IAAc,EACjB1qC,EAAG2sB,WAEN,CAED8xC,MACE,MAAMz+D,EAAKvP,KACPuP,EAAGijD,MAAoB,SAAZjjD,EAAGnP,MAChBmP,EAAGgjD,YAAchjD,EAAGijD,KACpBjjD,GAAGq+D,KAAoB,IAAI7E,eAAex5D,KAE1CA,EAAG27B,iBAAiB37B,GAAGq+D,IACvBr+D,GAAGq+D,GAAkB,KAExB,CAEDK,IAAoBtxB,GAClB,MAAMptC,EAAKvP,KACX,GAAIgB,EAAOuE,aAAao3C,GAAW,CACjC,MAAMr8C,EAAMU,EAAOuM,OAAOovC,EAAU,IACpCptC,GAAGlL,IAAYtB,MAAMC,QAAQ1C,GAAOA,EAAM,IAAIoC,KAAInB,GAAK,IAAIsD,OAAOtD,IACxE,MACMgO,GAAGlL,QAAWU,EAGhB,MAAMopE,EAAUprE,MAAMC,QAAQuM,GAAGlL,KAAakL,GAAGlL,GAASI,OAAS,EAC7DovC,EAAS,CAAC,OAAQ,YAAYzpC,SAASmF,EAAGnP,MAC5C+tE,GAAWt6B,EACbtkC,GAAGs+D,KAAuB,IAAIzD,uBAAuB76D,IAErDA,EAAG27B,iBAAiB37B,GAAGs+D,IACvBt+D,GAAGs+D,GAAqB,KAE3B,CAEDK,MACE,MAAM3+D,EAAKvP,KACPuP,EAAGiI,KACLjI,GAAGu+D,KAAoB,IAAIvC,eAAeh8D,IAE1CA,EAAG27B,iBAAiB37B,GAAGu+D,IACvBv+D,GAAGu+D,GAAkB,KAExB,ECtUI,MAAMM,6BAA6BC,2BAGlCtC,MAAMqC,sBACNpzD,MAAM7R,OAAO,kBAAmBilE,qBAAsB,CAAEhlE,QAAS,aACjEvI,OAAOC,KAAKstE,qBACf,CAEDn0B,KAAc,EACdkzB,SAAqBpoE,EAErBlC,cACI8nB,QACA3qB,MAAKmtE,GAAqB,IAAIf,kBAAkBpsE,KACnD,CAED48C,oBACe58C,MACRmtE,IAAoBvwB,oBADZ58C,MAERqtE,IACN,CAEDtwB,uBACI,MAAMxtC,EAAKvP,KACXuP,GAAG49D,IAAoBpwB,uBACvBxtC,GAAG49D,QAAqBpoE,EACxB+gB,SAASk3B,gBAAgBztC,EAC5B,CAEDktC,yBAAyBv0C,EAAMw0C,EAAUC,GACrC,MAAMptC,EAAKvP,KACXuP,GAAG89D,GAAWnlE,GACdqH,EAAG+tC,WAAWp1C,EAAMw0C,EAAUC,GAC9BptC,GAAG49D,IAAoB92B,YAAYnuC,EACtC,CAEDmlE,IAAWnlE,GACP,MAAMqH,EAAKvP,KACNuP,GAAG0qC,KACJ1qC,EAAG8tC,aAAan1C,GAChBqH,GAAG49D,IAAoB92B,YAAYnuC,GACnCqH,GAAG0qC,IAAc,EAExB,CAEDoD,aAAa/R,GACT,MAAM/7B,EAAKvP,KACLiI,EAAOsH,EAAG4kD,eAAelsD,KAC3BA,GAAM+S,MAAM6G,mBAAmBtS,EAAItH,GACnCsH,EAAG0sB,WAAW1sB,EAAGw7B,OACxB,CAEDuS,WAAWhS,EAASoR,EAAUC,GACV,aAAZrR,GAAsC,aAAZA,GAC1BtrC,KAAKk8B,UAEZ,CAED+O,cAAchR,GACVj6B,MAAKmtE,IAAoBliC,cAAchR,EAC1C,CAEDiR,iBAAiBjR,GACbj6B,MAAKmtE,IAAoBjiC,iBAAiBjR,EAC7C,CAEDgD,QACI,MAAM1tB,EAAKvP,KACXuP,EAAGm6D,kBAAkB,IACrB1uD,MAAMiiB,MAAM1tB,GACZA,EAAG2sB,UACN,CAEDva,gBAEI,OADA3hB,KAAKk8B,WACEvR,MAAMhJ,eAChB,CAEDqwC,iBAEI,OADAhyD,KAAKk8B,WACEvR,MAAMqnC,gBAChB,CAED91B,SAASlwB,GACL,OAAOhM,MAAKmtE,GAAmBjxC,SAASlwB,EAC3C,CAEGjB,YACA,OAAO/K,KAAK6K,OAAOkY,IAAI,eAC1B,CAEGwT,sBACA,OAAOv2B,KAAK6K,OAAOkY,IAAI,eAC1B,CAEGk3B,iBACA,OAAOj6C,MAAKi6C,EACf,CAKGgX,iBACA,OAAOjxD,KAAKgP,aAAa,aAC5B,CAKGgiD,mBACA,OAAOhxD,KAAKgP,aAAa,eAC5B,CAEG+hD,iBACA,OAAO/wD,KAAKgP,aAAa,aAC5B,CAEG8hD,eACA,OAAO9wD,KAAKgP,aAAa,WAC5B,CAEGoiD,YACA,OAAOpxD,KAAKgP,aAAa,QAC5B,CAEGqiD,WACA,OAAOrxD,KAAKgP,aAAa,OAC5B,CAEGxH,cACA,OAAOsF,OAAO0V,SAASxiB,KAAM,UAAW,EAC3C,CAEGixD,eAAWvvD,GACXoL,OAAOwB,OAAOtO,KAAM,aAAc0B,EACrC,CAEGsvD,iBAAatvD,GACboL,OAAOwB,OAAOtO,KAAM,eAAgB0B,EACvC,CAEGqvD,eAAWrvD,GACXoL,OAAOwB,OAAOtO,KAAM,aAAc0B,EACrC,CAEGovD,aAASpvD,GACToL,OAAOwB,OAAOtO,KAAM,WAAY0B,EACnC,CAEG0vD,UAAMxvD,GAAM,GACZkL,OAAOwB,OAAOtO,KAAM,QAAS4B,EAChC,CAEGyvD,SAAKzvD,GAAM,GACXkL,OAAOwB,OAAOtO,KAAM,OAAQ4B,EAC/B,CAEG4F,YAAQ5F,EAAM,GACd,OAAOkL,OAAO0B,SAASxO,KAAM,UAAW4B,EAC3C,CAEGmzB,WAEA,OAAOpK,MAAMoK,MADF/0B,KACa+K,OAAOgqB,MADpB/0B,KAC+Bwf,UAAU,OACvD,CAED5T,WAAW5H,EAAM,IACRA,IACLhE,KAAK0B,YAAcouB,SAAS0B,SAASxtB,EAAK,MAAO,MAAM,GAC1D,ECvKE,MAAMsqE,2BAA2B1wD,yBAGhCmuD,MAAMuC,oBACNtzD,MAAM7R,OAAO,gBAAiBmlE,mBAAoB,CAAEllE,QAAS,WAC7DvI,OAAOC,KAAKwtE,mBACf,CAEDrmE,IAAQ,GAERklE,SAAqBpoE,EACrBk1C,KAAc,EAEdp3C,cACI8nB,QACA3qB,MAAKmtE,GAAqB,IAAIf,kBAAkBpsE,KACnD,CAEUktE,gCACP,MAAO,CAAC,MACX,CAEDtwB,oBACe58C,MACRmtE,IAAoBvwB,oBADZ58C,MAERqtE,IACN,CAEDtwB,uBACI,MAAMxtC,EAAKvP,KACXuP,GAAG49D,IAAoBpwB,uBACvBxtC,GAAG49D,QAAqBpoE,EACxB+gB,SAASk3B,gBAAgBztC,EAC5B,CAEDktC,yBAAyBv0C,EAAMw0C,EAAUC,GACrC,MAAMptC,EAAKvP,KACXuP,GAAG89D,GAAWnlE,GACdqH,EAAG+tC,WAAWp1C,EAAMw0C,EAAUC,GAC9BptC,GAAG49D,IAAoB92B,YAAYnuC,EACtC,CAEDmlE,IAAWnlE,GACP,MAAMqH,EAAKvP,KACNuP,GAAG0qC,KACJ1qC,EAAG8tC,aAAan1C,GAChBqH,GAAG49D,IAAoB92B,YAAYnuC,GACnCqH,GAAG0qC,IAAc,EAExB,CAEDoD,aAAa/R,GACT,MAAM/7B,EAAKvP,KACLiI,EAAOsH,EAAGwlB,MAAM9sB,KAClBA,GAAM+S,MAAM6G,mBAAmBtS,EAAItH,GACnCsH,EAAG0sB,WAAW1sB,EAAGw7B,QACrBx7B,EAAGY,GAAG,QAASZ,GAAG28D,GACrB,CAED5uB,WAAWhS,EAASoR,EAAUC,GAEV,QAAZrR,GAAmBtrC,KAAKgyB,KAAK2qB,GACjB,aAAZrR,GAAsC,aAAZA,GAC1BtrC,KAAKk8B,UAEZ,CAED+O,cAAchR,GACVj6B,MAAKmtE,IAAoBliC,cAAchR,EAC1C,CAEDiR,iBAAiBjR,GACbj6B,MAAKmtE,IAAoBjiC,iBAAiBjR,EAC7C,CAEGlvB,YACA,OAAO/K,KAAK6K,OAAOkY,IAAI,cAC1B,CAEGwT,sBACA,OAAOv2B,KAAK6K,OAAOkY,IAAI,eAC1B,CAEG7R,aACA,OAAOlR,KAAK4J,MAAM,UAAU7C,SAAQjH,GAAMkb,MAAM4G,mBAAmB9hB,EAAI,CAAA,IAC1E,CAEGoR,WAAOjJ,GACPjI,KAAKmL,MAAMlD,EACd,CAKG4O,UACA,OAAO/J,OAAO5D,IAAIlJ,KAAM,MAAO,EAClC,CAEGy3C,cACA,OAAO3qC,OAAO5D,IAAIlJ,KAAM,UAC3B,CAEG+0B,WAEA,OAAOpK,MAAMoK,MADF/0B,KACa+K,OAAOgqB,MADpB/0B,KAC+Bwf,UAAU,OACvD,CAKGlZ,aACA,OAAOvD,MAAMmI,KAAKlL,KAAKohB,iBAAiB1e,KAAI5C,GAAMA,EAAG4B,OACxD,CAKG4E,WAAOA,GACPA,IAAW,GACPtF,EAAOoC,SAASkD,KAASA,EAASA,EAAOlE,MAAM,MACnDW,MAAMmI,KAAKpL,GAAGmlB,SAASle,SAAQjH,GAAMA,EAAGolB,SAAW5e,EAAOiR,QAAQzX,EAAG4B,QAAU,GAClF,CAEDigB,gBAEI,OADA3hB,KAAKk8B,WACEvR,MAAMhJ,eAChB,CAEDqwC,iBAEI,OADAhyD,KAAKk8B,WACEvR,MAAMqnC,gBAChB,CAED91B,SAASlwB,GACL,OAAOhM,MAAKmtE,GAAmBjxC,SAASlwB,EAC3C,CAEDixB,QACIjiB,MAAM6J,YAAY7kB,KACrB,CAOD23C,WAAW1vC,EAAO,IACd,MACM4O,EADK7W,KACI6W,IAEf5O,GADAA,EAAOlF,MAAMC,QAAQiF,GAAQA,EAAO,CAACA,IACzBvF,KAAII,GAAK9B,EAAOoC,SAASN,GAAKA,EAAIA,EAAE+T,KAC3C7Q,QAAOzE,GAAKA,IACZmB,KAAInB,IAAa,CAACiF,KAAMjF,EAAGG,MAAOH,MAL5BvB,KAMRmL,MAAMlD,EACZ,CAOD2D,WAAW5H,EAAM,IACb,GAAKA,EACL,IACI,MAAMiE,QAAa6nB,SAAS0B,SAASxtB,EAAK,MAAO,MAAM,GACvDhE,KAAKmL,MAAMlD,EACd,CAAC,MAAOyU,GAEL9c,MAAM8c,MAAM1c,KAAM0c,EACrB,CACJ,CAEDvR,MAAMlD,GAEF,IAAKlF,MAAMC,QAAQiF,GAAO,OAAO,EAEjC,MAAMsH,EAAKvP,KAWX,OATA+L,gBAAe,KAEX,MAAMyL,EAAO,GACbvP,EAAKlB,SAAQjE,IACT0U,EAAK5F,KAAKrC,GAAGg/D,GAAWzrE,GAAG,IAG/BkY,MAAMyF,QAAQlR,EAAIiI,EAAKlV,KAAK,MAAM,KAE/B,CACV,CAEDisE,IAAWzrE,GACP,MAAM0X,EAAM,CAAC,WAcb,OAZA3Z,OAAO8M,QAAQ7K,GAAGiE,SAAQ0Q,IACtB,MAAMZ,EAAMY,EAAG,GACT7V,EAAM6V,EAAG,GACf,GAAI,SAAWZ,EACf,MAAI,aAAeA,EAAY2D,EAAI5I,KAAKiF,QACxC2D,EAAI5I,KAAK,GAAGiF,MAAQjV,KAAO,IAG/B4Y,EAAI5I,KAAK,KACT4I,EAAI5I,KAAK9O,EAAE0D,MACXgU,EAAI5I,KAAK,aAEF4I,EAAIlY,KAAK,IACnB,CAED4pE,IAASlgE,GACLhM,KAAKi9B,OACR,EC/ME,MAAMuxC,6BAA6BC,2BAGlC1C,MAAMyC,sBACNxzD,MAAM7R,OAAO,kBAAmBqlE,qBAAsB,CAAEplE,QAAS,aACjEvI,OAAOC,KAAK0tE,qBACf,CAEDvmE,IAAQ,GAERklE,SAAqBpoE,EACrBk1C,KAAc,EAEdp3C,cACI8nB,QACA3qB,MAAKmtE,GAAqB,IAAIf,kBAAkBpsE,KACnD,CAEUktE,gCACP,MAAO,CAAC,MACX,CAEDtwB,oBACI,MAAMrtC,EAAKvP,KACXsM,KAAKoiE,MAAMn/D,GACXA,GAAG49D,IAAoBvwB,oBACvBrtC,GAAG89D,IACN,CAEDtwB,uBACI,MAAMxtC,EAAKvP,KACXuP,GAAG49D,IAAoBpwB,uBACvBxtC,GAAG49D,QAAqBpoE,EACxB+gB,SAASk3B,gBAAgBztC,EAC5B,CAEDktC,yBAAyBv0C,EAAMw0C,EAAUC,GACrC,MAAMptC,EAAKvP,KACXuP,GAAG89D,GAAWnlE,GACdqH,EAAG+tC,WAAWp1C,EAAMw0C,EAAUC,GAC9BptC,GAAG49D,IAAoB92B,YAAYnuC,EACtC,CAEDmlE,IAAWnlE,GACP,MAAMqH,EAAKvP,KACNuP,GAAG0qC,KACJ1qC,EAAG8tC,aAAan1C,GAChBqH,GAAG49D,IAAoB92B,YAAYnuC,GACnCqH,GAAG0qC,IAAc,EAExB,CAEDoD,aAAa/R,GACT,MAAM/7B,EAAKvP,KACPuP,EAAG0sB,WAAW1sB,EAAGw7B,QACrB,MAAM9iC,EAAOsH,EAAGwlB,MAAM9sB,KAClBA,GAAM+S,MAAM6G,mBAAmBtS,EAAItH,EAC1C,CAEDq1C,WAAWhS,EAASoR,EAAUC,GAEV,QAAZrR,GAAmBtrC,KAAKgyB,KAAK2qB,GACjB,aAAZrR,GAAsC,aAAZA,GAC1BtrC,KAAKk8B,UAEZ,CAED+O,cAAchR,GACVj6B,MAAKmtE,IAAoBliC,cAAchR,EAC1C,CAEDiR,iBAAiBjR,GACbj6B,MAAKmtE,IAAoBjiC,iBAAiBjR,EAC7C,CAEGlvB,YACA,OAAO/K,KAAK6K,OAAOkY,IAAI,cAC1B,CAEGwT,sBACA,OAAOv2B,KAAK6K,OAAOkY,IAAI,eAC1B,CAEG7R,aACA,OAAOlR,KAAK4J,MAAM,UAAU7C,SAAQjH,GAAMkb,MAAM4G,mBAAmB9hB,EAAI,CAAA,IAC1E,CAEGoR,WAAOjJ,GACPjI,KAAKmL,MAAMlD,EACd,CAEGwvC,cACA,OAAO3qC,OAAO5D,IAAIlJ,KAAM,UAC3B,CAKG6W,UACA,OAAO/J,OAAO5D,IAAIlJ,KAAM,MAAO,EAClC,CAQD23C,WAAW1vC,EAAO,IACd,MACM4O,EADK7W,KACI6W,IAEf5O,GADAA,EAAOlF,MAAMC,QAAQiF,GAAQA,EAAO,CAACA,IACzBvF,KAAII,GAAK9B,EAAOoC,SAASN,GAAKA,EAAIA,EAAE+T,KAC3C7Q,QAAOzE,GAAKA,IACZmB,KAAInB,IAAa,CAACG,MAAOH,MALnBvB,KAMRmL,MAAMlD,EACZ,CAOD2D,WAAW5H,EAAM,IACb,GAAKA,EACL,IACI,MAAMiE,QAAa6nB,SAAS0B,SAASxtB,EAAK,MAAO,MAAM,GACvDhE,KAAKmL,MAAMlD,EACd,CAAC,MAAOyU,GAEL9c,MAAM8c,MAAM1c,KAAM0c,EACrB,CACJ,CAEDvR,MAAMlD,GAEF,IAAKlF,MAAMC,QAAQiF,GAAO,OAAO,EAEjC,MAAMsH,EAAKvP,KAWX,OATA+L,gBAAe,KAEX,MAAMyL,EAAO,GACbvP,EAAKlB,SAAQjE,IACT0U,EAAK5F,KAAKrC,GAAGg/D,GAAWzrE,GAAG,IAG/BkY,MAAMyF,QAAQlR,EAAIiI,EAAKlV,KAAK,MAAM,KAE/B,CACV,CAEDisE,IAAWzrE,GACP,MAAM0X,EAAM,CAAC,WAoBb,OAlBIxZ,EAAOoC,SAASN,KAAIA,EAAI,CAAEpB,MAAOoB,IAErCjC,OAAO8M,QAAQ7K,GAAGiE,SAAQ0Q,IACtB,MAAMZ,EAAMY,EAAG,GACT7V,EAAM6V,EAAG,GACf,GAAI,SAAWZ,EACf,MAAI,aAAeA,EAAY2D,EAAI5I,KAAKiF,QACxC2D,EAAI5I,KAAK,GAAGiF,MAAQjV,KAAO,IAG3BkB,EAAE0D,MACFgU,EAAI5I,KAAK,KACT4I,EAAI5I,KAAK9O,EAAE0D,MACXgU,EAAI5I,KAAK,cAET4I,EAAI5I,KAAK,KAGN4I,EAAIlY,KAAK,IACnB,ECrLE,MAAMqsE,yBAAyB15C,uBAG9B82C,MAAM4C,kBACN3zD,MAAM7R,OAAO,cAAewlE,iBAAkB,CAAEvlE,QAAS,SACzDvI,OAAOC,KAAK6tE,iBACf,CAEUzB,gCACP,MAAO,CAAC,WAAY,MACvB,CAEDjzB,KAAc,EACdkzB,SAAqBpoE,EAErBlC,cACI8nB,QACA3qB,MAAKmtE,GAAqB,IAAIf,kBAAkBpsE,KACnD,CAED48C,oBACe58C,MACRmtE,IAAoBvwB,sBADZ58C,MAERqtE,IACN,CAEDtwB,uBACI,MAAMxtC,EAAKvP,KACXuP,GAAG49D,IAAoBpwB,yBACvBxtC,GAAG49D,QAAqBpoE,EACxB+gB,SAASk3B,gBAAgBztC,EAC5B,CAEDktC,yBAAyBv0C,EAAMw0C,EAAUC,GACrC,MAAMptC,EAAKvP,KACXuP,GAAG89D,GAAWnlE,GACdqH,EAAG+tC,WAAWp1C,EAAMw0C,EAAUC,GAC9BptC,GAAG49D,IAAoB92B,cAAcnuC,EACxC,CAEDmlE,IAAWnlE,GACP,MAAMqH,EAAKvP,KACNuP,GAAG0qC,KACJ1qC,EAAG8tC,aAAan1C,GAChBqH,GAAG49D,IAAoB92B,cAAcnuC,GACrCqH,GAAG0qC,IAAc,EAExB,CAEDoD,aAAa/R,GACT,MAAM/7B,EAAKvP,KACLiI,EAAOsH,EAAG4kD,eAAelsD,KAC3BA,GAAM+S,MAAM6G,mBAAmBtS,EAAItH,GACnCsH,EAAG0sB,WAAW1sB,EAAGw7B,OACxB,CAEDuS,WAAWhS,EAASoR,EAAUC,GAC1B,MAAMptC,EAAKvP,KACK,QAAZsrC,GAAmB/7B,EAAGyiB,KAAK2qB,GACf,aAAZrR,IACA/7B,EAAGkyB,QAAUlyB,EAAGkyB,SAAQ,GAAQlyB,EAAGiyB,QAAO,GAEjD,CAEDyJ,cAAchR,GACVj6B,MAAKmtE,IAAoBliC,cAAchR,EAC1C,CAEDiR,iBAAiBjR,GACbj6B,MAAKmtE,IAAoBjiC,iBAAiBjR,EAC7C,CAEDgD,QAGItS,MAAMsS,QAFKj9B,KAIR+xD,OACE/rD,QAAOlG,GAAMkb,MAAM4zD,WAAW9uE,KAC9BiH,SAAQjH,GAAMkb,MAAMiiB,MAAMn9B,KANpBE,KAORk8B,UACN,CAEDva,gBAEI,OADA3hB,KAAKk8B,WACEvR,MAAMhJ,eAChB,CAEDqwC,iBAEI,OADAhyD,KAAKk8B,WACEvR,MAAMqnC,gBAChB,CAEDrwC,gBACI,OAAOgJ,MAAMhJ,iBACT3hB,KAAK+xD,OACA/rD,QAAOlG,IAAOA,EAAGujB,WACjBrM,OAAMlX,GAAMA,EAAG6hB,iBAC3B,CAEDqwC,iBACI,OAAOrnC,MAAMqnC,kBACThyD,KAAK+xD,OACA/rD,QAAOlG,IAAOA,EAAGujB,WACjBrM,OAAMlX,GAAMA,EAAGkyD,kBAC3B,CAKD91B,SAASlwB,GACL,OAAOhM,KAAK+xD,OACP/rD,QAAOlG,IAAOA,EAAGujB,WACjBrM,OAAM6I,IAAKA,EAAEqc,UAAWrc,EAAEqc,SAASlwB,IAC3C,CAOD8oB,MAAM5sB,GACF,OAAOA,GAAQlI,KAAK+xD,OAAO/rD,QAAOkpD,GAAKA,EAAEhnD,OAASA,GACrD,CAEDu5B,QAAQ7wB,GAAM,GACVoK,MAAM6zD,aAAa7uE,KAAM,0BAA2B4Q,EAAK,eACzD,MAAMy/C,EAAMrwD,KAAK4xD,aACbvB,IAAKA,EAAIhtC,UAAW,EAC3B,CAEDme,OAAO5wB,GAAM,GACToK,MAAM8zD,YAAY9uE,KAAM,0BAA2B4Q,EAAK,eACxD,MAAMy/C,EAAMrwD,KAAK4xD,aACbvB,IAAKA,EAAIhtC,UAAW,EAC3B,CAEDzX,WAAW5H,EAAM,IACb,GAAKA,EACL,IACI,MAAMiE,QAAa6nB,SAAS0B,SAASxtB,EAAK,MAAO,MAAM,GACvDhE,KAAK23C,WAAW1vC,EACnB,CAAC,MAAOyU,GAEL9c,MAAM8c,MAAM1c,KAAM0c,EACrB,CACJ,CAED4kC,IAAQlhD,GACJ,OAAOJ,KAAKsd,SAAS,gBAAgBld,OAAU,EAClD,CAED2uE,IAAW1xD,GAAS,GAChB,OAAOrd,KAAKsd,SAAS,+BAAgCD,EACxD,CAEGtS,YACA,OAAO/K,KAAK6K,OAAOkY,IAAI,cAC1B,CAEGwT,sBACA,OAAOv2B,KAAK6K,OAAOkY,IAAI,eAC1B,CAEGk3B,iBACA,OAAOj6C,MAAKi6C,EACf,CAEG/oC,aACA,MAAMjJ,EAAO,CAAA,EAEb,OADAjI,KAAK+xD,OAAOhrD,SAAQ+tB,GAAS9Z,MAAM4G,mBAAmBkT,EAAO7sB,KACtDA,CACV,CAEGiJ,WAAOjJ,GACIjI,KACR+xD,OAAOhrD,SAAQ+tB,GAAS9Z,MAAM6G,mBAAmBiT,EAAO7sB,KADhDjI,KAERk8B,UACN,CAKG+0B,iBACA,OAAOjxD,KAAKgP,aAAa,aAC5B,CAKGgiD,mBACA,OAAOhxD,KAAKgP,aAAa,eAC5B,CAEGoiD,YACA,OAAOpxD,KAAKgP,aAAa,QAC5B,CAEGqiD,WACA,OAAOrxD,KAAKgP,aAAa,OAC5B,CAEGxH,cACA,OAAOsF,OAAO0V,SAASxiB,KAAM,UAAW,EAC3C,CAEGixD,eAAWvvD,GACXoL,OAAOwB,OAAOtO,KAAM,aAAc0B,EACrC,CAEGsvD,iBAAatvD,GACboL,OAAOwB,OAAOtO,KAAM,eAAgB0B,EACvC,CAEG0vD,UAAMxvD,GAAM,GACZkL,OAAOwB,OAAOtO,KAAM,QAAS4B,EAChC,CAEGyvD,SAAKzvD,GAAM,GACXkL,OAAOwB,OAAOtO,KAAM,OAAQ4B,EAC/B,CAEG4F,YAAQ5F,EAAM,GACd,OAAOkL,OAAO0B,SAASxO,KAAM,UAAW4B,EAC3C,CAEGgwD,mBACA,OAAO5xD,MAAKshD,GAAQ,SACvB,CAEGuQ,kBACA,OAAO7xD,MAAKshD,GAAQ,QACvB,CAKGwQ,eACA,OAAOnnC,MAAMmnC,QAChB,CAKG55C,aACA,OAAOnV,MAAMmI,KAAKlL,KAAK8xD,UAAUpvD,KAAI5C,GAAMA,EAAGg1B,OAASh1B,GAC1D,CAKGiyD,aACA,OAAO/xD,MAAK+uE,IAAW,EAC1B,CAEGjwD,cACA,OAAO9e,KAAK+xD,OACX/rD,QAAOlG,IAAOA,EAAGujB,WACjBrd,QAAOlG,IAAOA,EAAG6lD,SAASC,OAC9B,CAEGj7C,cACA,OAA+B,IAAxB3K,KAAK8e,QAAQra,MACvB,ECtRE,MAAMuqE,4BAA4B7yC,GAEvCt8B,kBAAoB,CAClB43C,QAAS,CAAE,EACXxvC,KAAM,CAAE7H,KAAM2C,OACdkxC,MAAO,IAAKA,GACZ6vB,QAAS,CAAEnoB,SAAS,GACpBszB,QAAS,CAAEtzB,SAAS,EAAMv7C,KAAMmO,SAGlC1L,cACE8nB,QACA,MAAMpb,EAAKvP,KACXuP,EAAG0/D,QAAU,EACb1/D,EAAGu0D,QAAU,gBACbv0D,GAAG2/D,IACJ,CAED5xB,WAAWhS,GACT3gB,MAAM2yB,WAAWhS,GACjBtrC,MAAKkvE,IACN,CAEDxxB,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI,+CAA+C3M,GAAG0vC,YAAkBtQ,EAAUp/B,EAAG0uC;QACxFtsC,EAAOpC,EAAGtH,MAAQ,IAAKs9B,GAASA,IAAOA,GAASrpB,CAAI;;gBAE5CqpB,EAAKh9B;iBACJg9B,EAAK0O;gBACN1O;kBACEA,EAAK/pB;oBACH+pB,EAAKu+B,SAAWv0D,EAAGu0D;oBACnBv+B,EAAK0pC,SAAW1/D,EAAG0/D;YAC3B1pC,EAAK4pC;;;kBAId,CAEDx3B,WAAW1vC,GACTjI,KAAKiI,KAAOA,CACb,CAEDinE,MACE,MAAM3/D,EAAKvP,KACXuP,EAAG+N,SAAS,sBAAsBvW,SAAQjH,IACxCA,EAAGgkE,QAAUv0D,EAAGu0D,QAChBhkE,EAAGmvE,QAAU1/D,EAAG0/D,QAChBnvE,EAAGm0C,MAAQ1kC,EAAG0kC,KAAK,GAEtB,CAEDgL,IAASjzC,GACP,MAAMlM,EAAKkM,EAAEkC,OAAOsR,QAAQ,qBAC5B1f,GAAIi0B,OAAO/nB,EACZ,QAGChM,KAAKmJ,OAAO,gBACb,EC1DI,MAAMimE,gCAAgCjzC,GAE3Ct8B,kBAAoB,CAClB0I,KAAM,CAAE,EACR0rC,MAAO,IAAKA,GACZhsC,KAAM,CAAE4B,OAAO,EAAMzJ,KAAMS,QAC3B2a,OAAQ,CAAEmgC,SAAS,EAAMv7C,KAAMqB,SAC/BqiE,QAAS,CAAEj6D,OAAO,EAAMzJ,KAAMqB,SAC9BwtE,QAAS,CAAEplE,OAAO,EAAMzJ,KAAMmO,SAGhC1L,cACE8nB,QACA3qB,KAAKiI,KAAO,EACb,CAEDy1C,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI,2CAA2CgyB,EAAS3+B,EAAGquC,yBAAyBjP,EAAUp/B,EAAG0uC;;UAElG1uC,GAAG8iD;;wDAE2C9iD,GAAGxJ;aAExD,CAED63C,cAME,MAJY,IACPjzB,MAAMizB,cACTpiC,OAHSxb,KAGIwb,OAGhB,CAEG62C,SACF,MAAM9iD,EAAKvP,KACX,OAAIuP,EAAGiM,OAAeU,CAAI,iBAC1B3M,EAAGtH,KAAKjE,IAAMuL,EAAGtH,KAAKjE,KAAOuL,EAAGhH,KAChCgH,EAAGtH,KAAKypC,KAAO,QACRgpB,aAAa2U,SAAS9/D,EAAGtH,KAAM,CAAA,GACvC,CAEGlC,SACF,MAAMwJ,EAAKvP,KACX,OAAOuP,EAAGyP,oBAAsBzP,EAAGu0D,QAAU5nD,CAAI,4BAA4B3M,EAAG0kC,kBAAkB1kC,EAAG0/D,kBAAkB1/D,EAAGu0D,sBAAwB,EACnJ,CAED/vC,OAAO/nB,GACLmnB,mBAAmB8nB,QAAQj7C,KAAK4J,MAAM,KAAK,GAAOoC,EACnD,QAGChM,KAAKmJ,OAAO,qBACb,ECnDI,MAAMmmE,aAETzsE,YAAY0sE,EAAMC,GACdxvE,KAAKuvE,KAAOA,EACZvvE,KAAKwvE,UAAYA,CACpB,CAED3vE,gBAAgB4vE,EAAUD,GACtB,OAAOF,cAAaI,GAAkBD,EAAUD,EACnD,CAED3vE,YAAY8vE,GACR,OAAO5sE,MAAMmI,KAAKykE,GAAO3pE,QAAOkpD,GAAKA,aAAa0gB,OAAMltE,KAAIwsD,GAAK,IAAIogB,aAAapgB,IACrF,CAEG2gB,eACA,MAAMtgE,EAAKvP,KACX,OAAOuP,EAAGigE,UAAY,GAAGjgE,EAAGigE,aAAajgE,EAAGggE,KAAKrnE,OAASqH,EAAGggE,KAAKrnE,IACrE,CAED4nE,UACI,MAAO,CAAC,YAAa,YAAa,YAAa,aAAc,iBAAiB1lE,SAASpK,KAAKuvE,KAAKnvE,KACpG,CAED2vE,UACI,MAAO,CAAC,YAAa,mBAAmB3lE,SAASpK,KAAKuvE,KAAKnvE,KAC9D,CAEDP,UAAyB4vE,EAAUD,GAC/B,OAAIA,GAAaF,cAAaU,GAAaP,GAChCH,cAAaW,GAAU,GAAIX,cAAaY,GAAOT,IAEnDhoE,QAAQC,QAAQ4nE,cAAankC,GAASpoC,MAAMmI,KAAKukE,EAASE,OAAS,KAAKjtE,KAAIwsD,GAAK,IAAIogB,aAAapgB,KAC5G,CAEDrvD,UAAe0vE,GACX,OAAOA,EAAKrnE,KAAK/D,WAAW,IAC/B,CAEDtE,UAAgB8vE,GACZ,OAAO5sE,MAAMmI,KAAKykE,GAAO3pE,QAAOupE,IAASD,cAAajM,GAAQkM,IACjE,CAED1vE,UAAgBklE,GACZ,OAAO,IAAIt9D,SAAQ,CAAUC,EAASC,KAClCo9D,EAAMwK,KAAK7nE,EAASC,EAChC,GACK,CAED9H,UAAmBklE,GACf,OAAO,IAAIt9D,SAAQ,CAAUC,EAASC,KAClC,MAAM+B,EAAS,GACTy/B,EAAS47B,EAAMoL,eACf5lC,KAAO,KACTpB,EAAOinC,aAAYziE,IACXA,EAAQlJ,OAAS,GACjBiF,EAAOkI,QAAQjE,GACf48B,QAEA7iC,EAAQgC,EACX,GACF/B,EAAO,EAEd4iC,MACZ,GACK,CAED1qC,gBAAuBgxB,EAAMljB,GACzB,MAAM0iE,EAAU,GAChB,IAAK,MAAMtL,KAASuK,cAAankC,GAASx9B,GACtC,GAAIo3D,EAAMiL,YAAa,CACnB,MAAMriE,QAAgB2hE,cAAagB,GAAYvL,GACzCvtD,QAAa83D,cAAaW,GAAUlL,EAAM8K,SAAUliE,GAC1D0iE,EAAQz+D,QAAS,EACjC,KAAmB,CACH,MAAM29D,QAAaD,cAAaiB,GAASxL,GACzCsL,EAAQz+D,KAAK,IAAI09D,aAAaC,EAAM1+C,GACvC,CAEL,OAAOw/C,CACV,CAEDxwE,UAAoB4vE,GAChB,OAAO1sE,MAAMmI,KAAKukE,EAAShtD,OAAOnS,MAAMi1B,IACpC,MAAMw/B,EAAQx/B,EAAKirC,kBAAoBjrC,EAAKirC,mBAC5C,OAAOzL,GAASA,EAAMiL,WAAW,GAExC,CAEDnwE,UAAc4vE,GACV,OAAO1sE,MAAMmI,KAAKukE,EAAShtD,OACtB/f,KAAK6iC,GAASA,EAAKirC,qBACnBxqE,QAAO++D,GAAkB,MAATA,GACxB,ECrFE,MAAM0L,yBAAyBt0C,GAElCt8B,aAAe,sCACfA,WAAa,wCAEbA,kBAAoB,CAChB6wE,QAAS,CAAEriE,UAAW,YACtBmlD,SAAU,CAAEnlD,UAAW,aACvBsiE,SAAU,CAAEtiE,UAAW,aAEvB0wC,SAAU,CAAEpD,SAAS,EAAMv7C,KAAMqB,SACjC+tE,UAAW,CAAE7zB,SAAS,EAAMv7C,KAAMqB,SAClCyG,KAAM,CAAE,EACR4a,MAAO,CAAE,EACThX,OAAQ,CAAE,EACV9F,OAAQ,CAAE,EACV4qE,YAAa,CAAEj1B,SAAS,EAAMttC,UAAW,gBAAiBjO,KAAMmO,SAGpEsiE,IAAUziC,IACV0iC,IAAU1iC,IACV2iC,IAAY,KAEZluE,cACI8nB,QACA3qB,KAAK0b,IAAM+0D,iBAAiBnjB,IAC5BttD,KAAK2wE,SAAW,SAChB3wE,KAAK++C,UAAW,EAChB/+C,KAAK8iB,MAAQ2tD,iBAAiBO,MAC9BhxE,KAAKgG,OAAS,yBACdhG,KAAKwvE,WAAY,EACjBxvE,KAAK4wE,YAAc,CACtB,CAEDlzB,WACI,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI;oCACiBgyB,EAAS3+B,EAAGquC;mBAC7BjP,EAAUp/B,EAAG0uC;sBACV1uC,GAAG0vC;0BACC1vC,GAAG0hE;yBACJ1hE,GAAG0hE;0BACF1hE,GAAG2hE;qBACR3hE,GAAG4hE;sBACF5hE,GAAG6hE;uBACF7hE,GAAGkiD;yCACeliD,EAAGikD,kBAAkBjkD,EAAGrH,SAASqH,EAAGstB,UAAUttB,EAAGuT;qBACrE2sB,EAAIlgC,GAAGuhE;sCACUvhE,EAAGzD;yBAChByD,EAAGohE;wBACJphE,EAAGrH;sBACLqH,EAAGrH;kBACPqH,EAAGwvC,SAAW,WAAa;kBAC3BxvC,EAAGigE,UAAY,4BAA8B;mBAC5C//B,EAAIlgC,GAAGshE,0BAA+BthE,EAAGmhE;;SAGvD,CAEGG,aACA,OAAO7wE,MAAK6wE,GAAQnvE,KACvB,CAEGovE,aACA,OAAO9wE,MAAK8wE,GAAQpvE,KACvB,CAEDu9C,IAASjzC,GACLhM,KAAK8wE,OAAOroE,OACf,CAEDwoE,IAAajlE,GACT,MAAMuD,EAAKvP,KACPuP,GAAGwhE,IAAW/oE,aAAauH,GAAGwhE,IAClCxhE,GAAGwhE,GAAYlpE,YAAW,IAAM0H,EAAGrC,gBAAgB,UAAU,KAC7D,MAAMuiE,EAAWzjE,EAAEqlE,aACd5B,GAAalgE,GAAG+hE,GAAS7B,KAC9BA,EAAS8B,WAAa,OACtBhiE,EAAGtC,aAAa,QAAS,IACzBjB,EAAEyb,iBACL,CAEDypD,IAAallE,GAELA,EAAEqlE,eAAcrlE,EAAEqlE,aAAaE,WAAa,QADrCvxE,KAERkN,gBAAgB,SACnB4Y,SAASS,QAAQva,EACpB,CAEDmlE,IAAQnlE,GACJ,MAAMuD,EAAKvP,KACXuP,EAAGrC,gBAAgB,SACnB,MAAMuiE,EAAWzjE,EAAEqlE,aACd5B,GAAalgE,GAAG+hE,GAAS7B,KAC9BlgE,GAAGgb,GAAQklD,GACX3pD,SAASS,QAAQva,GACpB,CAEDolE,IAASplE,GAEL,IAAKA,EAAEwlE,cAAe,OACtB,IAAKxlE,EAAEwlE,cAAc/uD,MAAO,OAC5B,MAAM8sD,EAHKvvE,MAGKyxE,GAAYzlE,EAAEwlE,cAAc/uD,OAC5C,IAAK8sD,EAAM,OACX,MAAMI,EAAQ,CAACJ,GALJvvE,MAMRuqB,GAAQolD,GACX7pD,SAASS,QAAQva,EACpB,CAEDylD,IAAUzlD,GACN,MAEM2jE,EAFK3vE,KACM8wE,OACGnB,MACfA,GAA0B,IAAjBA,EAAMlrE,QAHTzE,MAIRuqB,GAAQolD,EAEd,CAED2B,IAAS7B,GACL,OAAO1sE,MAAMmI,KAAKukE,EAASiC,OAAOtnE,SAAS,QAC9C,CAEDqnE,IAAYhvD,GACR,MACMkvD,EADK3xE,KACIgG,OAAS,IAAInB,OADjB7E,KAC2BgG,QAAU,KAChD,IAAK,MAAMu/B,KAAQ9iB,EACf,GAAkB,SAAd8iB,EAAKqsC,KAAiB,CACtB,IAAKD,EAAK,OAAOpsC,EAAKssC,YACtB,GAAIF,EAAI1tE,KAAKshC,EAAKnlC,MAAO,OAAOmlC,EAAKssC,WACxC,CAEL,OAAO,IACV,CAED/lE,IAAQgmE,GACJ,MACMT,EAAe,IAAIU,aACzBD,EAAY/qE,SAAQC,GAAKqqE,EAAa5uD,MAAMhE,IAAIzX,EAAEuoE,QAFvCvvE,KAGR8wE,OAAOnB,MAAQ0B,EAAa1B,MAHpB3vE,KAIR6wE,OAAOlwD,YAAcmxD,EAAYpvE,KAAIsE,GAAKA,EAAEuoE,KAAKrnE,OAAM5F,KAAK,KAClE,CAEDsJ,SAAcomE,GACV,MAAMziE,EAAKvP,KAEL8xE,EADYE,aAAuBD,mBAE7BzC,aAAaW,SAAS+B,EAAaziE,EAAGigE,WAC5CF,aAAapkE,KAAK8mE,GAGlBC,EAAmB1iE,EAAGqhE,YAAc,EACpCkB,EAAY9rE,QAAOgB,GAAKA,EAAEuoE,KAAK/5D,MAAQjG,EAAGqhE,cAC1CkB,EAEWviE,EAAG2qB,KAAK,SAAU,CAAE43C,YAAaG,IAAoB,GAAM,GAAO,IACnEA,EAAiBxtE,SAC7B8K,GAAGzD,GAAQmmE,GACX1iE,EAAG2qB,KAAK,WAAY,CAAE43C,YAAaG,IAAoB,GAE9D,CAEDpyE,cAAgB6b,CAAG;;;;;;;;;gEAYf1b,KAAKmJ,OAAO,aACf,ECjLE,MAAM+oE,qBAAqB/1C,GAE9Bt8B,kBAAoB,CAChBqhD,SAAU,CAACvF,SAAQ,EAAMv7C,KAAKmO,QAC9B5K,SAAU,CAACg4C,SAAQ,IAGvBn7C,GAAM,EAENqC,cACI8nB,QACA3qB,KAAKkhD,SAAW,EAChBlhD,KAAK2D,SAAW3C,EAAO2C,QAC1B,CAEDi5C,oBACIjyB,MAAMiyB,oBACN58C,KAAK03B,OACR,CAEDqlB,uBACI/8C,KAAK43B,OACLjN,MAAMoyB,sBACT,CAEDW,WAEI,OADa,IAAIl8C,MACL2wE,mBAAmBnyE,KAAK2D,SACvC,CAED+zB,QACI,MAAMnoB,EAAKvP,KACPuP,EAAG2xC,SAAU,GAAgB,IAAX3xC,GAAG/O,EACrB+O,GAAG/O,EAAM0tB,YAAY3e,GAAG+e,GAAQxmB,KAAKyH,GAAmB,IAAdA,EAAG2xC,UAE7C3xC,EAAGmoC,eAEV,CAED9f,OACI/M,cAAc7qB,MAAKQ,GACnBR,MAAKQ,EAAM,CACd,CAED8tB,MACG1N,uBAAsB,IAAM5gB,KAAK03C,iBACnC,QAGG13C,KAAKmJ,OAAO,iBACf,EC1BE,MAAMipE,qBAAqBj2C,GAE9Bt8B,kBAAoB,CAChB6B,MAAO,CAAE,EACTwD,OAAQ,CAAE,EACVvB,SAAU,CAAE,GAGhBd,cACI8nB,QACA3qB,KAAK2D,SAAWe,UAAUf,SAC1B3D,KAAK0B,MAAQ,IAAIF,IACpB,CAEDk8C,WACI,OAAO19C,KAAK0J,MACf,CAEGA,aACA,MAAM6F,EAAKvP,KACL4B,EAAM2N,EAAGmF,KACf,OAAInF,EAAGrK,OAAetD,EAAIsD,OAAOqK,EAAGrK,QAC7B,IAAIF,KAAKG,eAAeoK,EAAG5L,SAAU4L,EAAGnB,SAASlJ,OAAOtD,EAClE,CAEG8S,WACA,MACM5R,EAAItB,KAAKkE,MADJ1F,KACa0B,OAAS,IAAIF,MAC/BkT,EAAO,IAAI1D,OAAOlO,GAExB,OADA4R,EAAK/Q,SAHM3D,KAGQ2D,SACZ+Q,CACV,QAIG1U,KAAKmJ,OAAO,iBACf,EC9DE,MAAMkpE,qBAAqBl2C,GAE9Bt8B,kBAAoB,CAChBqV,OAAQ,CAAC9U,KAAMmO,SAGnB1L,cACI8nB,QACA3qB,KAAKkV,OAAS,CACjB,CAEDwoC,WACI,OAAO19C,KAAK0B,KACf,CAEGA,YACA,OAAO1B,KAAKklD,QAAUllD,KAAKkV,MAC9B,CAEGgwC,cACA,OAAO,IAAI1jD,MAAOsQ,aACrB,QAGG9R,KAAKmJ,OAAO,iBACf,ECrBE,MAAMmpE,yBAAyBn2C,GAElCt8B,kBAAoB,CAChB6B,MAAO,CAAE,EACTiV,SAAU,CAAE,EACZhT,SAAU,CAAE,GAGhB+5C,WACI,OAAO19C,KAAKkF,MACf,CAEG+f,SAEA,OAAOpkB,OAAOsK,MADHnL,KACYoO,QAAS,CAAE6J,MAAO,WAAYtB,SAD1C3W,KACuD2W,UACrE,CAEGzR,aACA,MAAMqK,EAAKvP,KACX,OAAO,IAAIgF,KAAKC,aAAasK,EAAG5L,SAAU4L,GAAG0V,IAAU/f,OAAOqK,EAAG7N,MACpE,QAGG1B,KAAKmJ,OAAO,qBACf,EClCE,MAAMopE,mBAGL/kD,cAAcI,MAAM2kD,YAAYt6D,MACnC,CAEUA,mBACP,MAAO,22DAqEV,ECrEU,MAAMu6D,sBAAsBr2C,GAEvCt8B,gBAAkB,gBAClBA,gBAAkB,kBAClBA,iBAAmB,oBAEnBA,gBAAkB,6BAClBA,iBAAmB,yBAEnBA,kBAAoB,CAChBijB,MAAO,CAAE,EACTg/B,KAAM,CAAE,EACR7N,MAAO,CAAE,EACTw+B,QAAS,CAAEpkE,UAAW,YACtBqkE,SAAU,CAAErkE,UAAW,cAG3BxL,cACI8nB,QACA,MAAMhiB,EAAQ6pE,cACdxyE,KAAK8hD,KAAOn5C,EAAMgqE,SAClB3yE,KAAKyyE,QAAU9pE,EAAMiqE,SACrB5yE,KAAK0yE,SAAW/pE,EAAM4kD,SACzB,CAED7P,WACI,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI;iEAC8CyyB,EAAUp/B,EAAG0uC;;yEAEL1uC,EAAGkjE,WAAWljE,EAAG0kC,OAASu+B,cAAcG;sBAC3FpjE,GAAGuzC;;;qCAGYvzC,EAAGmjE,aAAanjE,EAAGstB,UAAUttB,EAAGuT;;SAGhE,CAEDggC,MACI,OAAO9iD,KAAK8hD,KAAO5lC,CAAI,kBAAkBlc,KAAK8hD,mBAAqB5lC,CAAI,2BAC1E,QAGGlc,KAAKmJ,OAAO,UACf,EC1CU,MAAM0pE,uBAAuB12C,GAExCt8B,WAAa,iGAEboX,KAAU,EAEVpU,cACI8nB,OACH,CAEDuyB,aAAaC,GACT,OAAOn9C,KAAK8yE,MAAMruE,OAAS,CAC9B,CAEDi5C,WAEI,OAAOxhC,CAAI,eAAegyB,EADfluC,KAC2B49C,yBAAyBjP,EADpD3uC,KACiEi+C,iCAC/E,CAEDL,cACI,OAAO59C,KAAK89C,OAAO+0B,eAAevlB,IAAK3iC,MAAMizB,cAChD,CAEGk1B,YACA,OAAO9yE,KAAKsd,SAAS,WAAW,GAAO,EAC1C,CAEG7Y,aACA,OAAOzE,KAAK8yE,MAAMruE,MACrB,CAEGwS,YACA,OAAOjX,MAAKiX,EACf,CAEGA,UAAMrV,EAAM,GAERA,EAAM,GAAKA,GADJ5B,KACcyE,SADdzE,MAERiX,GAASrV,EACf,CAEGsjD,cAEA,OADWllD,KACD8yE,MADC9yE,MACQiX,GACtB,CAEG87D,cACA,OAAuB,IAAhB/yE,MAAKiX,EACf,CAEG+7D,aACA,OAAOhzE,MAAKiX,KAAWjX,KAAKyE,OAAS,CACxC,CAED+H,OACI,MAAM+C,EAAKvP,KACX,GAAwB,IAApBuP,EAAGujE,MAAMruE,OACb,OAAI8K,EAAGyjE,SACHzjE,GAAG0H,IAAW,IAAG1H,EAAG21C,QAAQjR,MAAQu+B,cAAcS,WACtD1jE,EAAG0H,QACH1H,EAAG21C,QAAQjR,MAAQu+B,cAAcU,SAC1B3jE,EAAG21C,QACb,CAEDnhB,WACI,MAAMx0B,EAAKvP,KACX,GAAwB,IAApBuP,EAAGujE,MAAMruE,OACb,OAAI8K,EAAGwjE,UACPxjE,EAAG21C,QAAQjR,MAAQu+B,cAAcG,SACjCpjE,EAAG0H,QACH1H,EAAG21C,QAAQjR,MAAQu+B,cAAcU,SAC1B3jE,EAAG21C,QACb,CAEDjoB,QACI,MAAM1tB,EAAKvP,KACXuP,EAAGujE,MAAM/rE,SAAQ0Q,GAAMA,EAAGw8B,MAAQu+B,cAAcG,WAChD/xD,uBAAsB,KAClBrR,GAAG0H,GAAS,EACZ1H,EAAG21C,QAAQjR,MAAQu+B,cAAcU,QAAQ,GAEhD,QAIGlzE,KAAKmJ,OAAO,WAAY0pE,eAC3B,ECpGE,MAAMM,8BAA8Bh3C,GAEvCt8B,iBAAmB,+BACnBA,kBAAoB,mDACpBA,eAAiB,6BAEjBA,oBAAsB,mDACtBA,qBAAuB,kDACvBA,kBAAoB,iDAEpBA,oBAAsB,kCACtBA,qBAAuB,sDACvBA,kBAAoB,gCAEpBA,eAAiBszE,sBAAsBC,WAEvCvzE,kBAAoB,CAChBq/B,SAAU,CAAEyc,SAAS,GACrBvwC,OAAQ,CAAEuwC,SAAS,EAAMv7C,KAAMqB,UAGnC+V,IAAQ,IAAIV,IAEZjU,cACI8nB,QACA3qB,KAAK0b,IAAM,MACX1b,KAAKk/B,SAAWi0C,sBAAsBE,OACzC,CAED31B,WAEI,OAAOxhC,CAAI,cAAcyyB,EADd3uC,KAC2Bi+C;2CACH/P,EAFxBluC,KAEoC49C;;eAGlD,CAEDA,cAEI,OADW59C,KACD89C,OADC99C,MACSszE,GAAc3oD,MAAMizB,cAC3C,CAEG01B,SACA,MAAM3qE,EAAQwqE,sBACRvxE,EAAM5B,KAAKk/B,UAAYv2B,EAAM0qE,QACnC,OAAOzxE,EAAI2V,QAAQ,KAAO,GAAK5O,EAAM/G,GAAO+G,EAAM/G,GAAOA,CAC5D,CAED4nB,QACIxpB,KAAKsd,SAAS,YAAYvW,SAAQjH,GAAMA,EAAGyzE,WAC9C,CAEDzkB,KAAKhsC,EAAO+C,EAASm7B,EAAUx5C,EAAS4zB,EAAOnW,GAC3C,OAAOjlB,KAAK4b,QAAQkH,EAAO+C,EAAS,eAAgBm7B,EAAUx5C,EAAS4zB,EAAOnW,EACjF,CAEDuuD,QAAQ1wD,EAAO+C,EAASm7B,EAAUx5C,EAAS4zB,EAAOnW,GAC9C,OAAOjlB,KAAK4b,QAAQkH,EAAO+C,EAAS,kBAAmBm7B,EAAUx5C,EAAS4zB,EAAOnW,EACpF,CAEDrf,KAAKkd,EAAO+C,EAASm7B,EAAUx5C,EAAS4zB,EAAOnW,GAC3C,OAAOjlB,KAAK4b,QAAQkH,EAAO+C,EAAS,kBAAmBm7B,EAAUx5C,EAAS4zB,EAAOnW,EACpF,CAEDwuD,OAAO3wD,EAAO+C,EAASm7B,EAAUx5C,EAAS4zB,EAAOnW,GAC7C,OAAOjlB,KAAK4b,QAAQkH,EAAO+C,EAAS,iBAAkBm7B,EAAUx5C,EAAS4zB,EAAOnW,EACnF,CAEDyuD,QAAQ5wD,EAAO+C,EAASm7B,EAAUx5C,EAAS4zB,EAAOnW,GAC9C,OAAOjlB,KAAK4b,QAAQkH,EAAO+C,EAAS,kBAAmBm7B,EAAUx5C,EAAS4zB,EAAOnW,EACpF,CAED0uD,UAAU7wD,EAAO+C,EAASm7B,EAAUx5C,EAAS4zB,EAAOnW,GAChD,OAAOjlB,KAAK4b,QAAQkH,EAAO+C,EAAS,oBAAqBm7B,EAAUx5C,EAAS4zB,EAAOnW,EACtF,CAED4iC,KAAK/kC,EAAO+C,EAASm7B,EAAUx5C,EAAS4zB,EAAOnW,GAC3C,OAAOjlB,KAAK4b,QAAQkH,EAAO+C,EAAS,eAAgBm7B,EAAUx5C,EAAS4zB,EAAOnW,EACjF,CAED2uD,MAAM9wD,EAAO+C,EAASm7B,EAAUx5C,EAAS4zB,EAAOnW,GAC5C,OAAOjlB,KAAK4b,QAAQkH,EAAO+C,EAAS,gBAAiBm7B,EAAUx5C,EAAS4zB,EAAOnW,EAClF,CAgBDrZ,cAAckX,EAAQ,GAAI+C,EAAU,GAAInK,EAAM,GAAIslC,GAAW,EAAOx5C,EAAU,EAAG4zB,EAAQ,GAAKnW,GAC1F,IAAKY,EAAS,OACd,MAAMtW,EAAKvP,KACX,GAAIuP,EAAGnE,OAAQ,CACX,IAAIgN,QAAY+6D,sBAAsBU,oBAEtC,GADIz7D,IAAKA,EAAM7I,GAAGukE,GAAYhxD,EAAO+C,EAASre,EAAS4zB,EAAOnW,IAC1D7M,EAAK,OAAOA,CACnB,CACD,OAAO7I,GAAGwkE,GAASjxD,EAAO+C,EAASnK,EAAKslC,EAAUx5C,EAAS4zB,EAC9D,CAED24C,IAASjxD,EAAO+C,EAASnK,EAAKslC,EAAUx5C,EAAS4zB,GAC7C,MAAM7rB,EAAKvP,KACLkG,EAAM,kBAAkBwV,cAAgBslC,EAAW,WAAa,eAAex5C,cAAoB4zB,eAAmBvV,aAAmB/C,gBAAoBvT,EAAG5L,yBAChK7D,EAAKkb,MAAMtV,MAAMQ,GAAK,GAO5B,OANA0a,uBAAsBhV,gBACZ2D,GAAG6rB,GAAOA,GAChB,MAAM44C,EAAQzkE,GAAG0kE,GACbD,IAAUzkE,GAAIzC,OAAOU,IAAIwmE,EAAO,QAAS,mBAAmBzkE,EAAGmM,OAAOnM,EAAG2vB,YAC7E80C,EAAMj3D,YAAYjd,EAAG,IAElBA,CACV,CAED8L,SAAkBkX,EAAO+C,EAASre,EAAS4zB,EAAOnW,EAAU,IACxD,MAAM1V,EAAKvP,WACLuP,GAAG6rB,GAAOA,GAChBnW,EAAQ9V,KAAO8V,EAAQ9V,MAAQ0W,EAC/B,MAAMquD,EAAe,IAAIC,aAAarxD,EAAOmC,GAC7C1V,GAAGiI,GAAMiH,IAAIy1D,GACb,MAAMxtD,EAAWnX,GAAG6kE,GAAatsE,KAAK,CAAEosE,aAAcA,EAAcnpE,MAAOwE,IAG3E,OAFA2kE,EAAansE,iBAAiB,QAAS2e,GACnClf,EAAU,IAAG0sE,EAAatsE,IAAMC,WAAW6e,EAAoB,IAAVlf,IAClD0sE,CACV,CAEGD,SACA,MAAMI,EAAMprE,eAAeC,IAAI,cAAc60B,IAC7C,OAAOs2C,GAAOA,EAAI3rD,aAAe1N,MAAMpR,MAAMyqE,EAAK,qBAA+Br0E,IACpF,CAED4L,SAAawvB,EAAQ,GACbp6B,OAAOmC,SAASi4B,IAAUA,EAAQ,SAASp6B,OAAOwG,QAAgB,IAAR4zB,EACjE,CAEDg5C,MACI,MAAM7kE,EAAKvP,KACXuP,EAAG2kE,aAAaxzB,QAChBnxC,EAAGxE,OAAMyM,GAAM4R,OAAO7Z,EAAG2kE,cACrB3kE,EAAG2kE,aAAatsE,KAAKI,aAAauH,EAAG2kE,aAAatsE,IACzD,CAKD4hB,QACI,MAAMja,EAAKvP,KACX+C,MAAMmI,KAAKqE,EAAG0R,iBAAiB,aAAala,SAAQjH,GAAMA,EAAGub,WAC7D9L,GAAGiI,GAAMzQ,SAAQutE,GAAMA,EAAG5zB,UAC1BnxC,GAAGiI,GAAMgS,OACZ,CAMU+qD,+BACP,MAAO,iBAAkBhrE,IAC5B,CAMUirE,uBACP,MAAmC,YAA5BL,aAAaM,UACvB,CAQD50E,iCACI,MAAM8I,EAAQwqE,sBACd,QAAKxqE,EAAM4rE,oBACN5rE,EAAM6rE,iBAAiBL,aAAaN,oBAClClrE,EAAM6rE,UAChB,QAGGx0E,KAAKmJ,OAAO,kBACf,EC9LE,MAAMurE,uBAAuBv4C,GAEhCt8B,kBAAoB,CAChBmhD,SAAU,CAAErF,SAAS,EAAMv7C,KAAMqB,SACjCgpC,OAAQ,CAAEkR,SAAS,EAAMv7C,KAAMqB,SAC/BokB,QAAS,CAAE81B,SAAS,GACpB74B,MAAO,CAAE64B,SAAS,GAClBvgB,MAAO,CAAEugB,SAAS,EAAMv7C,KAAMmO,QAC9B/G,QAAS,CAAEm0C,SAAS,EAAMv7C,KAAMmO,SAGpComE,KAAW,EAEX9xE,cACI8nB,QACA,MAAMpb,EAAKvP,KACXuP,EAAG/H,QAAU,EACb+H,EAAG6rB,MAAQ,EACX7rB,EAAGq4C,MAAO,CACb,CAED1K,aAAaC,GACT,MAAM5tC,EAAKvP,KACL40E,EAAmBrlE,GAAGslE,GAAqB13B,GAKjD,OAJI5tC,EAAG6rB,MAAQ,GAAK7rB,EAAGk7B,QAAUmqC,IAC7BrlE,GAAGolE,IAAW,EACdplE,GAAGulE,MAEAvlE,GAAGwlE,KAAkBxlE,GAAGolE,EAClC,CAEDE,IAAqB13B,GACjB,OAAOA,EAAkB3iB,IAAI,SAChC,CAED5uB,WACI,MAAM2D,EAAKvP,WACLgB,EAAOwG,QAAmB,IAAX+H,EAAG6rB,OACxB7rB,GAAGolE,IAAW,EACdplE,EAAGmoC,eACN,CAED9rC,cAAcuxC,GACV,MAAM5tC,EAAKvP,KACL40E,EAAmBrlE,GAAGslE,GAAqB13B,GAC7C5tC,EAAG/H,QAAU,GAAK+H,EAAGk7B,cACfzpC,EAAOwG,QAAqB,IAAb+H,EAAG/H,SACxB+H,EAAGk7B,QAAS,GACLmqC,IAAqBrlE,EAAGk7B,QAC/Bl7B,EAAG8L,QAEV,CAEDqiC,WACI,MAAMnuC,EAAKvP,KACX,OAAOuP,EAAGuT,MAAQvT,GAAGylE,KAAsBzlE,GAAG0lE,IACjD,CAEDD,MACI,MAAMzlE,EAAKvP,KACX,OAAOkc,CAAI;oBACCyyB,EAAUp/B,EAAG0uC;0CACS/P,EAAS3+B,EAAGquC;;kBAEpCruC,EAAGstB,UAAUttB,EAAGuT;;kBAEhBvT,EAAGyxC,SAAWzxC,GAAG+xC,GAAU;;;kBAG3B/xC,EAAGstB,UAAUttB,EAAGsW;;;;SAK7B,CAEDovD,MACI,MAAM1lE,EAAKvP,KACX,OAAOkc,CAAI;2CACwBgyB,EAAS3+B,EAAGquC;;;gBAGvCruC,EAAGstB,UAAUttB,EAAGsW;;;gBAGhBtW,EAAGyxC,SAAWzxC,GAAG+xC,GAAU;;;SAItC,CAED1D,cAMI,MAJY,IACLjzB,MAAMizB,cACTwD,KAHOphD,KAGIyqC,OAGlB,CAED8oC,UACIvzE,KAAKyqC,QAAS,CACjB,CAEG6W,SAEA,OAAOplC,CAAI,+DADAlc,KACkEuzE,oBAChF,CAEGwB,SACA,MAAMG,EAAUl6D,MAAMwC,SAASxd,KAAK2f,cAAe,mBAC7Cw1D,EAAWn1E,KAAK2f,yBAAyBwzD,sBAC/C,OAAO+B,GAAWC,CACrB,QAGGn1E,KAAKmJ,OAAO,WACf,ECnHE,MAAMisE,uBAETtnE,IACAyR,IAEA1c,YAAYiL,GACG9N,MACR8N,GAAQA,EACXA,EAAKm9B,cAFMjrC,KAGd,CAEDu1C,gBACI,MAAMhmC,EAAKvP,KACXuP,GAAGgQ,GAAQhQ,GAAGzB,GAAMyR,KACpBhQ,GAAG8lE,GAAmB9lE,EACzB,CAEDimC,mBACI,MAAMjmC,EAAKvP,KACXuP,GAAG+lE,GAAsB/lE,GACzBA,GAAGzB,GAAMo9B,iBAAiB37B,EAC7B,CAGD0pC,aACI,MAAM1pC,EAAKvP,KACLu1E,EAAUhmE,GAAGgQ,GACnBhQ,GAAGgQ,GAAQhQ,GAAGzB,GAAMyR,KAChBg2D,GAAWhmE,GAAGgQ,KACdhQ,GAAG+lE,GAAsB/lE,GACzBA,GAAG8lE,GAAmB9lE,GAE7B,CAGD8lE,IAAmBp7C,GACfj6B,MAAK8N,GAAMyR,MAAM0rB,gBAAgBhR,EACpC,CAGDq7C,IAAsBr7C,GAClBj6B,MAAKuf,IAAO2rB,mBAAmBjR,EAClC,CAEDnsB,KAAKyR,GACD,OAAOA,EAAK1U,OAAOkY,IAAI,gBAAkB/iB,MAAK8N,EACjD,CAEDtK,MAAM+b,GACF,MAAMzR,EAAO9N,KAAK8N,KAAKyR,GACvB,OAAOzR,GAAMyR,OAASA,CACzB,CAEGkO,YACA,OAAOztB,MAAK8N,GAAMuuC,gBAAgB5uB,KACrC,CAEDiqB,cAAcn4B,GACNvf,KAAKwD,MAAM+b,IAAOvf,KAAK8N,KAAKyR,GAAMm4B,eACzC,EC3DE,MAAM89B,uBAAuBJ,uBAEhCvyE,YAAYiL,GACR6c,MAAM7c,EACT,CAED2nE,IAAal2D,EAAM1V,GAAQ,GACvB,MAAM/J,EAAKE,KAAK8N,KAAKyR,GACjBzf,IAAIA,EAAGosC,QAAUriC,EACxB,CAGDsiC,OAAO5sB,GACHvf,MAAKy1E,GAAal2D,GAAM,EAC3B,CAED0sB,UAAU1sB,GACNvf,KAAK03C,cAAcn4B,EACtB,CAEDmtB,SAASntB,EAAMm2D,GACX11E,MAAKy1E,GAAal2D,GAClBvf,KAAK03C,cAAcn4B,EAAKQ,KAC3B,CAED4sB,SAASptB,EAAMo2D,GACX31E,MAAKy1E,GAAal2D,GAClBvf,KAAK03C,cAAcn4B,EAAKQ,KAC3B,CAEDysB,SAASjtB,GACL,MAAMkO,EAAQztB,KAAKytB,MACfA,EACAA,EAAM+e,SAASjtB,GAEfvf,KAAK03C,cAAcn4B,EAE1B,CAEDktB,WAAWltB,GACPvf,KAAK03C,cAAcn4B,EACtB,CAEDgsB,eAAehsB,GACXvf,KAAK03C,cAAcn4B,EACtB,CAEDisB,mBAAmBjsB,EAAMqrB,GACrB5qC,KAAK03C,cAAcn4B,EACtB,CAEDq2D,SAASr2D,GACDvf,KAAKwD,MAAM+b,IAAOvf,KAAK8N,KAAKyR,GAAMlE,QACzC,ECpDE,MAAMw6D,0BAA0B15C,GAYrCt8B,kBAAoB,CAClBqsC,QAAS,CAAEriC,OAAO,GAClB0V,KAAM,CAAEnf,KAAMS,OAAQ0yC,WAAaR,GAAWA,aAAkBvI,WAGlE3nC,cACE8nB,QACA3qB,KAAK2mC,MAAO,CACb,CAEDuW,aAAa5R,GACX,QAAOtrC,KAAKuf,IACb,CAED+9B,WAAWhS,GACT3gB,MAAM2yB,WAAWhS,GACbA,EAAQ9Q,IAAI,UAASx6B,KAAKuf,KAAK1U,OAAOkY,IAAI,eAAiB/iB,KAChE,CAEDmgD,UACMngD,KAAK0qC,SAAS1qC,MAAKgd,IAAO+tB,QAC9B/qC,KAAKoO,QAAQ+8B,QAAUnrC,KAAKmrC,OAC7B,CAEDuS,WACE,MAAMnuC,EAAKvP,KACLuf,EAAOhQ,EAAGgQ,KACVxR,EAAMwB,EAAG7N,OAAS,GACxBqM,EAAIg0C,QAAUxyC,EAAGstB,UAAU9uB,EAAIg0C,SAC/Bh0C,EAAI+U,MAAQvT,EAAGstB,UAAU9uB,EAAI+U,OAC7B,MAAM0mC,EAASj6C,EAAG28B,QAAU38B,GAAGumE,GAAev2D,EAAK8R,OAAS9hB,GAAGuzC,GAAYvjC,EAAK8R,OAChF,OAAOqpC,aAAa2U,SAASthE,EAAKwB,EAAGquC,cAAe4L,EACrD,CAED5L,cACE,MAAMruC,EAAKvP,KACL+N,EAAM,CACV,mBAAmB,EACnB,0BAA0B,EAC1B,sBAAsB,EACtB,YAAYwB,GAAGsuC,GACf,WAAYtuC,EAAG47B,SAEjB,OAAO57B,EAAGuuC,OAAOvuC,GAAGwmE,GAAWxmE,EAAGuuC,OAAOvuC,GAAGo0C,GAAc51C,EAAKwB,EAAG2V,WAAa3V,EAAG80D,aAAc90D,EAAGm7B,QACpG,CAKDp8B,SACEtO,KAAKyqC,OAASzqC,KAAK0gD,QAAU1gD,KAAKgrC,MACnC,CAKDA,OACEhrC,MAAKg2E,IAAQ,GACbh2E,KAAK+qC,OACN,CAKD2V,QACE1gD,MAAKg2E,IAAQ,EACd,CAKDC,kBACEj2E,KAAK8qC,QAAQ9qC,KAAKklB,SACnB,CAED6lB,MAAMnpC,GAAM,GACNA,GAAK+oB,MAAMogB,QACf/qC,KAAK0qC,QAAiB,GAAP9oC,CAChB,CAEDkpC,OAAOlpC,GAAM,GACX5B,KAAKklB,SAAkB,GAAPtjB,CACjB,CAEDmyB,OAAO/nB,GACLmnB,mBAAmB8nB,QAAQj7C,MAAKgd,GAAOhR,EAUxC,CAEGgR,SACF,OAAOhd,KAAK4J,MAAM,IACnB,CAEGs5B,aACF,OAAOljC,KAAKuf,MAAM2jB,MACnB,CAEGkD,eACF,OAAQpmC,KAAKkjC,MACd,CAEGrsB,UACF,OAAO7W,KAAKuf,MAAM1I,GACnB,CAEGnV,YACF,OAAO1B,KAAKuf,MAAM7d,OAAS,EAC5B,CAEG2vB,YACF,OAAOrxB,KAAKuf,MAAM8R,QAAU,CAC7B,CAEGqZ,cACF,OAAO1qC,KAAKuf,MAAMmrB,OACnB,CAEGS,cACF,MAAM9rB,EAASrf,KAAKqf,OACpB,OAAOA,GAAQorB,SAA6B,IAAnBprB,GAAQgS,KAClC,CAEGhS,aACF,OAAOrf,KAAKuf,MAAMF,MACnB,CAEG62D,iBACF,MAAM3wC,EAAOvlC,KAAKqf,SAASxU,OAAOkY,IAAI,eACtC,OAAOwiB,aAAgBswC,kBAAoBtwC,OAAOxgC,CACnD,CAEG2lC,YAAQ9oC,GACVA,GAAc,IAARA,EACN5B,KAAKuf,KAAKmrB,QAAU9oC,CACrB,CAEGsjB,eACF,OAAOllB,KAAKuf,MAAM2F,QACnB,CAEGA,aAAStjB,GACXA,GAAc,IAARA,EACN,MAAM2N,EAAKvP,KACPuP,EAAG62B,UAAY72B,EAAGxE,MAAMi7B,OAAMpkC,GAAM,GAEpC2N,EAAG80D,YACDziE,EACF2N,EAAGgQ,KAAKmsB,YAERn8B,EAAGgQ,KAAKosB,cAGVp8B,EAAGgQ,KAAK2F,SAAWtjB,CAEtB,CAEG6oC,aACF,OAAOzqC,KAAKuf,MAAMkrB,MACnB,CAEGA,WAAO7oC,GACT5B,MAAKg2E,IAAgB,IAARp0E,EACd,CAEGmJ,YACF,OAAO/K,KAAKwf,QAAQ,UACrB,CAEG6kD,kBACF,OAAOrkE,KAAK+K,MAAMs5D,WACnB,CAEG0R,SAAc,OAAO/1E,KAAK+K,MAAMgrE,UAAY,YAAe,CAC3DpyB,SAAiB,OAAO3jD,KAAK+K,MAAM44C,aAAe,QAAW,CAC7D2Q,SAAc,OAAOt0D,KAAK+K,MAAMupD,UAAY,EAAK,CACjD6hB,SAAgB,OAAOn2E,KAAK+K,MAAMorE,YAAc,WAAc,CAC9DC,SAAwB,OAAOp2E,KAAK+K,MAAMqrE,oBAAsB,SAAY,CAE5Ev4B,SACF,OAA8B,IAAvB79C,KAAK0B,OAAOm8C,SAAyC,IAAtB79C,KAAK+K,MAAM8yC,MAClD,CAEGiE,SACF,MAAMvyC,EAAKvP,KACLuf,EAAOhQ,EAAGgQ,KACVtX,EAAOsH,EAAG7N,MACV20E,EAAK9mE,EAAGxE,MACd,IAAIurE,EAAUruE,EAAK65C,MAAQu0B,EAAGE,SAE9B,OADIh3D,EAAK6mB,WAAUkwC,EAAU/2D,EAAKkrB,OAAUxiC,EAAKuuE,UAAYH,EAAGG,SAAavuE,EAAKwuE,WAAaJ,EAAGI,WAC3FH,CACR,CAEDI,IAAcrlD,GACZ,OAAOnV,CAAI,oBAAoBmV,iBAChC,CAEDykD,IAAezkD,GACb,OAAOnV,CAAI,GAAGlc,MAAK02E,GAAcrlD,mCAClC,CAEDyxB,IAAYzxB,GACV,OAAOnV,CAAI,GAAGlc,MAAK02E,GAAcrlD,KAASrxB,MAAK22E,+BAAyC32E,MAAK8hD,gBAC9F,CAED60B,MACE,MAAMpnE,EAAKvP,KACX,IAAKuP,EAAG80D,YAAa,MAAO,GAC5B,MAAMpwB,EAAQ1kC,EAAG2V,SAAW3V,GAAG6mE,GAAsB7mE,GAAG4mE,GAClDr0B,EAAOvyC,EAAGgQ,KAAKksB,mBAAqB,mBAAqBl8B,EAAG2V,SAAW,oBAAsB,SACnG,OAAOhJ,CAAI;iCACkB+3B,KAAS1kC,GAAG+kD;wBACrBxS,eACrB,CAEDk0B,IAAQp0E,GAAM,GACZ,MAAM2N,EAAKvP,KACPuP,EAAGgQ,MAAM6mB,WACX72B,EAAGgQ,KAAKkrB,OAAS7oC,EAEpB,QAGC5B,KAAKmJ,OAAO,eACb,EClPI,MAAMytE,sBAAsBz6C,GAEjCt8B,cAAgB6b,CAAG;;;;;;OAQnB7b,cAAgB,CACd02E,SAAU,CAAEloE,UAAW,aACvBooE,UAAW,CAAEpoE,UAAW,cACxBmoE,SAAU,CAAEnoE,UAAW,aACvBimD,SAAU,CAAEjmD,UAAW,aACvB0nE,SAAU,CAAE1nE,UAAW,aACvBs1C,YAAa,CAAEt1C,UAAW,gBAC1B8nE,WAAY,CAAE9nE,UAAW,iBAAkB4lC,GAC3CmiC,mBAAoB,CAAE/nE,UAAW,0BAA2B4lC,IAG9Dp0C,kBAAoB,CAClB43C,QAAS,CAAE,EACXxvC,KAAM,CAAE7H,KAAMS,QACd0e,KAAM,CAAEnf,KAAMS,OAAQ0yC,WAAaR,GAAWA,aAAkBvI,UAChEqT,OAAQ,CAAEz9C,KAAMqB,QAASk6C,SAAS,GAClCk7B,MAAO,CAAEz2E,KAAMqB,QAASk6C,SAAS,GACjC3V,KAAM,CAAE5lC,KAAMqB,QAASk6C,SAAS,GAChC0oB,YAAa,CAAEjkE,KAAMqB,QAASk6C,SAAS,GACvCmD,SAAU,CAAE1+C,KAAMqB,QAASk6C,SAAS,MACjCi7B,cAAcE,QAInBj3E,eAAiB,IACZ+2E,cAAcE,OACjBp7D,IAAK,CAAE,EACPomC,KAAM,CAAE,EACR7N,MAAO,CAAE,EACTnxB,MAAO,CAAE,EACTi/B,QAAS,CAAE,EACXtX,OAAQ,CAAErqC,KAAMqB,SAChByjB,SAAU,CAAE9kB,KAAMqB,UAGpBk7B,KAAU,EACVo6C,IAAW3oC,IAEXnU,IAAc,KAEdp3B,cACE8nB,QACA,MAAMpb,EAAKvP,KACXuP,EAAGy2B,MAAO,EACVz2B,EAAG80D,aAAc,EACjB90D,EAAGtH,KAAO+S,MAAMzN,OAAOgC,GAAI,GAAM,GAAMkT,MACvClT,EAAGgQ,KAAO,IAAIirB,SAAS,KAAM,CAAE,WAAYxqC,KAAKmd,SAAW,MAAO,GAClE5N,EAAGgnE,SAAW,eACdhnE,EAAGknE,UAAY,SACflnE,EAAGinE,SAAW,eACdjnE,EAAGo0C,YAAc,SACjBp0C,EAAGwmE,SAAW,aACdxmE,EAAGgQ,KAAK1U,OAAOkY,IAAI,eAAiBxT,EACpCA,GAAG0qB,GAAc,IAAIu7C,eAAejmE,EACrC,CAEDmuC,WACE,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI,cAAcyyB,EAAUp/B,EAAG0uC;4BACd/P,EAAS3+B,EAAGquC;oBACpBruC,GAAG0vC;sBACD1vC,GAAG6W;oBACL7W,GAAGyvC;oCACavP,EAAIlgC,GAAGwnE;YAC/BplE,EAAOpC,EAAGgQ,KAAKtE,KAAK1L,EAAGgQ,MAAM,GAAO,IAASA,GAASA,EAAK1I,MAAM0I,GAASrD,CAAI;mCACvDqD;;;eAIhC,CAED29B,aAAa5R,GACX,MAAM/7B,EAAKvP,KAUX,OATIsrC,EAAQ9Q,IAAI,SAAWjrB,EAAGtH,OAASsH,GAAGotB,KACxCptB,GAAGotB,IAAU,EACb5wB,gBAAe,KACbwD,EAAGgQ,KAAKiK,QACRja,EAAGgQ,KAAK2nB,SAAS33B,EAAGtH,MACpBsH,GAAGotB,IAAU,EACbptB,EAAGmoC,eAAe,OAGf13C,KAAKuf,IACb,CAED+9B,WAAWhS,GACT3gB,MAAM2yB,WAAWhS,GACbA,EAAQ9Q,IAAI,iBAAmBx6B,KAAKqkE,aAAarkE,KAAKuf,MAAMosB,cAChE3rC,KAAKuf,KAAKxQ,MAAQ/O,KAAKqkE,WACxB,CAED1sB,WAAW1vC,GACLA,aAAgBuiC,SACdviC,EAAK8X,OAAS/f,KAAKuf,OAAMvf,KAAKuf,KAAOtX,GAEzCjI,KAAKiI,KAAOA,CAEf,CAEDuE,KAAK4+B,GAAS,GACZ,MAAM77B,EAAKvP,KACX,IAAIulC,EAAOh2B,EAAGynE,SAMd,OALKzxC,EAAOh2B,EAAGuvC,WAAUvZ,EAAOh2B,GAAG+B,IAC/Bi0B,GAAM4F,UACR5F,EAAKwF,QACDK,GAAU77B,EAAGm7B,SAAStE,UAAU72B,EAAGm7B,QAAQM,QAE1Cz7B,EAAGm7B,OACX,CAED3G,SAASsH,GAAW,GAClB,MAAM97B,EAAKvP,KACX,IAAIulC,EAAOh2B,EAAG0nE,aAMd,OALK1xC,EAAOh2B,EAAGuvC,WAAUvZ,EAAOh2B,GAAG6B,IAC/Bm0B,GAAM4F,UACR5F,EAAKwF,QACDxF,EAAKa,UAAYiF,GAAU9F,EAAKmb,SAE/BnxC,EAAGm7B,OAEX,CAED0B,YACEpsC,KAAKuf,MAAM6sB,WACZ,CAEDC,cACErsC,KAAKuf,MAAM8sB,aACZ,CAKDrB,KAAKna,GACQ7wB,KACR0qC,SAASM,MACb,CAMD0V,MAAM7vB,GACO7wB,KACR0qC,SAASgW,OACb,CAEDl3B,QACExpB,KAAKuf,MAAMiK,QACXxpB,KAAK03C,eACN,CAEDw/B,SACEl3E,KAAKwpB,QACLxpB,KAAKq8C,gBAAgB9R,MACtB,CAEGrlB,eACF,OAAOllB,MAAK8N,GAAM9N,KAAKuf,KAAKwsB,gBAC7B,CAEGrB,cACF,OAAO1qC,MAAK8N,GAAM9N,KAAKuf,KAAKorB,cAC7B,CAKGssC,mBACF,OAAOj3E,KAAK0qC,SAASnrB,KAAKskB,MAAK1iC,GAAKA,GAAGgqC,UAAS,GAAM,KAAQtgC,OAAOkY,IAAI,cAC1E,CAKGi0D,eACF,OAAOh3E,KAAK0qC,SAASnrB,KAAKskB,MAAK1iC,GAAKA,GAAGgqC,UAAS,KAAQtgC,OAAOkY,IAAI,cACpE,CAEGvL,SACF,OAAOxX,MAAK+2E,GAASr1E,KACtB,CAEG4P,SACF,OAAOtR,MAAKwX,GAAMiF,iBACnB,CAEGrL,SACF,OAAOpR,MAAKwX,GAAM4nC,gBACnB,CAEDtxC,IAAMyR,GACJ,OAAIxc,MAAMC,QAAQuc,GACTA,EAAK7c,KAAIvB,GAAIA,EAAE0J,OAAOkY,IAAI,iBAAgB/c,QAAQ7E,GAAIA,IAExDoe,IAAO1U,OAAOkY,IAAI,cAC1B,CAEDk8B,IAASjzC,GACP,MAAM81C,EAA4B,YAArB91C,EAAEkC,OAAOiP,QAAwBnR,EAAEkC,OAASlC,EAAEkC,OAAOsR,QAAQ,WACpEq1C,EAAgC,UAAvB/S,GAAM1zC,QAAQhO,KACvBN,EAAKkM,EAAEkC,OAAOsR,QAAQ,gBAC5B,IAAK1f,EAAGyf,KAAM,OAEd,MAAMhQ,EAAKvP,KAEPuP,EAAG80D,YACDxP,GAAQ/0D,EAAGm2E,kBAEfn2E,EAAGgrC,QAAO,GAGZ,MAAMqsC,EAAc5nE,EAAG80D,cAAgBxP,IAAatlD,EAAG80D,YACnDvkE,EAAGsmC,UAAY+wC,GAAYr3E,EAAGwO,SAElCxO,EAAGirC,QACHjrC,EAAGi0B,OAAO/nB,EACX,CAEDoa,GAAWpa,GAET,MAAMuD,EAAKvP,KACLF,EAAKyP,EAAGm7B,QACd,GAAK5qC,EAEL,OAAQkM,EAAEwa,MACR,IAAK,UACHjX,EAAGw0B,WACH,MACF,IAAK,YACHx0B,EAAG/C,OACH,MACF,IAAK,YACC1M,EAAGsmC,SACDtmC,EAAG2qC,OACLl7B,EAAGmxC,SAEF5gD,EAAGo2E,YAAcp2E,IAAKirC,QAGzBx7B,EAAGw0B,WAEL,MACF,IAAK,aACCjkC,EAAGsmC,WAAatmC,EAAG2qC,OACrBl7B,EAAGy7B,OAEHz7B,EAAG/C,OAEL,MACF,IAAK,QACG1M,EAAGsmC,UACLtmC,EAAGwO,SAGZ,CAED0wC,IAAShzC,GAEP,MAAMlM,EAAKkM,EAAEkC,OAAOsR,QAAQ,gBAC5B,GAAM1f,GAAIyf,KAEV,OAAQvT,EAAEwa,MACR,IAAK,QACH1mB,EAAGi0B,OAAO/nB,GACV,MACF,IAAK,MACHlM,EAAGirC,QACH,MACF,IAAK,QACHjrC,EAAGgrC,QAAO9qC,KAAKqkE,cAAevkE,EAAGolB,UACjCplB,EAAGirC,QAGR,QAGC/qC,KAAKmJ,OAAO,UACb,ECzRI,MAAMiuE,8BAA8Bj7C,GAEvCt8B,kBAAoB,CAChB2J,IAAK,CAAE,EACP6tE,MAAO,CAAE,EACT9sB,OAAQ,CAAEnqD,KAAMqB,QAASqN,SAAS,GAClCwoE,MAAO,CAAEl3E,KAAMqB,QAASk6C,SAAS,EAAM7sC,SAAS,GAChDuU,SAAU,CAAEjjB,KAAMqB,QAASk6C,SAAS,EAAM7sC,SAAS,IAGvDyoE,KAAgB,EAChBC,IAAiB,KACjBC,IAAkB,KAElBC,KAAW,EAEX70E,cACI8nB,OACH,CAEDiyB,oBACIjyB,MAAMiyB,oBACN,MAAMrtC,EAAKvP,KACXuP,GAAGioE,GAAiBjoE,GAAGooE,GAAiB7vE,KAAKyH,GAC7CA,GAAGyiB,IACN,CAED+qB,uBACIpyB,MAAMoyB,uBACN/8C,MAAK43E,IACR,CAEDt6B,WAAWhS,GACP,MAAM/7B,EAAKvP,KACPsrC,EAAQ9Q,IAAI,UACZjrB,GAAGsoE,KAEHvsC,EAAQ9Q,IAAI,cACZjrB,EAAG8T,SAAW9T,GAAGqoE,KAAYroE,GAAGyiB,MAEpCrH,MAAM2yB,WAAWhS,EACpB,CAKGwsC,gBAEA,MAAO,kBAAmBpzE,WADf1E,KAC+BwJ,KAAOxI,EAAO61D,MAD7C72D,KACsDwJ,IACpE,CAKG+tE,mBACA,OAAOv3E,MAAKu3E,EACf,CAMDQ,aACI,OAAO/3E,KAAKg4E,YAAY,cAC3B,CAMDhsC,UACI,OAAOhsC,KAAKg4E,YAAY,gBAC3B,CAODA,YAAYnyD,GACR,MAAMtW,EAAKvP,KACLoY,EAAMpX,EAAOi3E,QAAQpyD,IAAYtW,EAAG2oE,SAQ1C,OAPI9/D,IACI7I,GAAGkoE,GACHloE,GAAGkoE,GAAgBU,MAAMH,YAAYnyD,GAErCtW,GAAGgoE,IAAe/7D,QAAQw8D,YAAYnyD,IAGvCzN,CACV,CASDggE,UAAU/xD,GAEN,OADA9W,IAAG+nE,GAAO,kCAAmCjxD,IACtC,CACV,CAEDsxD,IAAoBtxD,IAChB,MAAM9W,EAAKvP,KACPqmB,EAAMpe,KACFsH,EAAG6oE,UAAU/xD,IACb9W,EAAG2qB,KAAK,UAAW7T,EAAMpe,MAAM,GAAM,GAAM,GAG/CsH,GAAG+nE,GAAO,kCAAmCjxD,EAChD,EAGLgyD,MACI,MAAM9oE,EAAKvP,KACPuP,GAAGgoE,IAAe/7D,SAClBjM,GAAGkoE,GAAkB,IAAIa,eACzB/oE,GAAGkoE,GAAgBU,MAAMI,UAAYhpE,GAAGioE,GACxCjoE,GAAGsoE,KACHtoE,GAAGgoE,GAAc/7D,OAAOw8D,YAAY,YAAa,CAACzoE,GAAGkoE,GAAgBe,QAG5E,CAEDX,MACe73E,MACRu3E,IAAe/7D,QAAQw8D,YADfh4E,KAC8Bs3E,MAAQ,WAAa,YACjE,CAGD1rE,SAAqC2rE,GACjC,OAAOA,GAAckB,SAAST,YAAY,uBAC7C,CAGDU,IAA4BnB,GACxB,MAAMhoE,EAAKvP,KACXu3E,EAAaxvE,iBAAiB,eAAe,KAEzCwvE,EAAaoB,YAAY5wE,iBAAiB,eAAe,KACjDwvE,EAAakB,UAET/zE,UAAUk0E,cAAc3+C,WACxB1qB,GAAGspE,GAA+BtB,GAGlChoE,GAAG+nE,GAAO,iDAEjB,GACH,GAET,CAGDwB,MACI,IAAIC,GAAa,EACjBr0E,UAAUk0E,cAAc7wE,iBAAiB,oBAAoB,KACpDgxE,IACDjyE,OAAOmc,SAASi0D,SAChB6B,GAAa,EAChB,GAER,CAEDntE,WACI,MAAM2D,EAAKvP,KACX8vB,SAASS,SAAWhhB,GAAGmoE,GACnBnoE,EAAG8T,gBACG9T,GAAGgoE,IAAe51C,cAE5BpyB,GAAGkoE,IAAiBU,MAAMz3B,QAC1BnxC,GAAGkoE,IAAiBe,MAAM93B,QAC1BnxC,GAAGkoE,GAAkB,KACrBloE,GAAGgoE,GAAgB,IACtB,CAGD3rE,WACI,MAAM2D,EAAKvP,KACX,IAAIuP,EAAG8T,WACP9T,GAAGmoE,GAAW5nD,SAASS,SACvBT,SAASS,UAAW,EAEfhhB,EAAGuoE,WAAR,CAIA,IACI,MAAM/pE,EAAMwB,EAAG8nE,MAAQ,CAAEA,MAAO9nE,EAAG8nE,OAAU,GACzC9nE,EAAGg7C,SAAQx8C,EAAI3N,KAAO,UAC1BmP,GAAGgoE,SAAsB7yE,UAAUk0E,cAAct+C,SAAS/qB,EAAG/F,IAAKuE,GAClEwB,GAAG+nE,GAAO,sCAAuC/nE,GAAGgoE,IAEpDhoE,GAAGupE,KACHvpE,GAAGspE,GAA+BtpE,GAAGgoE,IACrChoE,GAAGmpE,GAA4BnpE,GAAGgoE,IAClChoE,GAAG8oE,GAAa9oE,GAAGgoE,IAEnBhoE,GAAG+nE,GAAO,qDAAsD/nE,GAAGgoE,GAAcF,MAEpF,CAAC,MAAO36D,GACLnN,GAAGgoE,IAAgB,CAEtB,CACDhoE,EAAG2qB,KAAK,SAAU3qB,EAAG2oE,UAAU,GAAM,GAAM,EAlB1C,CAmBJ,CAEDZ,IAAOzxD,EAAS5d,EAAO,IACfjI,KAAKs3E,KAGZ,QAGGt3E,KAAKmJ,OAAO,oBACf,ECjOE,MAAM6vE,uBAAuB78C,GAErB88C,qBACP,OAAOh4E,WAAWi4E,cAAgBj4E,WAAWgiB,UAAU+M,QAAU,gBACpE,CAEDnwB,kBAAoB,CAChBmE,IAAK,CAAE,EACPgnD,OAAQ,CAAE,EACVvT,QAAS,CAAE,EACXx7B,OAAQ,CAAE7b,KAAMmO,QAChByN,MAAO,CAAE5b,KAAMmO,QACftG,KAAM,CAAE7H,KAAM2C,OACdkiB,QAAS,CAAE7kB,KAAMS,SAGrBs4E,IAAa/qC,IACbgrC,IAAS,KAETv2E,cACI8nB,QACA3qB,KAAKic,OAAS,EACdjc,KAAKgc,MAAQ,EACbg9D,gBAAenpD,IAClB,CAED+sB,oBACIjyB,MAAMiyB,oBACN58C,MAAKq5E,IACR,CAEDt8B,uBACIpyB,MAAMoyB,uBACN,MAAMxtC,EAAKvP,KACPuP,GAAG6pE,IAAQ7pE,GAAG6pE,GAAOE,UACzB/pE,GAAG6pE,GAAS,IACf,CAEDl8B,aAAa5R,GACT,OAAO0tC,gBAAeO,EACzB,CAEDl8B,aAAa/R,GACTtrC,MAAK2vC,KACLhlB,MAAM0yB,aAAa/R,EACtB,CAED6U,QAAQ7U,GACJ,MAAM/7B,EAAKvP,MACPsrC,EAAQ9Q,IAAI,QAAU8Q,EAAQ9Q,IAAI,YAAWjrB,GAAGogC,MAChDrE,EAAQ9Q,IAAI,SAAW8Q,EAAQ9Q,IAAI,aAAYjrB,GAAGiqE,GAAYjqE,EAAGtH,KAAMsH,EAAG0V,QACjF,CAEDy4B,WACI,MAAMnuC,EAAKvP,KACX,OAAOkc,CAAI,WAAWuzB,EAAIlgC,GAAG4pE;yBACZjrC,EAAS3+B,EAAGquC;yBACZjP,EAAUp/B,EAAGyM,MAAQ,GAAIzM,EAAGyM;0BAC3B2yB,EAAUp/B,EAAG0M,OAAS,GAAI1M,EAAG0M;sBAElD,CAED07B,WAAW1vC,GACPjI,KAAKiI,KAAOA,CACf,CAEGwxE,aACA,OAAOz5E,MAAKm5E,GAAWz3E,KAC1B,CAIDu7B,QACIj9B,MAAKo5E,IAAQn8C,OAChB,CAED+O,UACIhsC,MAAKo5E,IAAQzpC,QAChB,CAED+pC,YAAY93E,GACR5B,MAAKo5E,IAAQ9qD,OAAO1sB,EACvB,CAEDg2B,OACI53B,MAAKo5E,IAAQxhD,MAChB,CAEDpO,QACIxpB,MAAKo5E,IAAQ5vD,OAChB,CAED8wC,OAAOp4D,EAAGqU,GACN,MAAMhH,EAAKvP,KACNuP,GAAG6pE,IACRx4D,uBAAsB,KAClB,MAAM+4D,EAAMpqE,EAAG3F,MAAM,OACjB+vE,IACAA,EAAI1hE,MAAM+D,MAAQ,GAAG9Z,MACrBy3E,EAAI1hE,MAAMgE,OAAS,GAAG1F,OAE1BhH,GAAG6pE,GAAO9e,OAAOp4D,EAAGqU,EAAE,GAE7B,CAEDqjE,cAAcx5E,EAAO,YAAay5E,EAAU,GACxC,OAAO75E,MAAKo5E,IAAQQ,cAAcx5E,EAAMy5E,EAC3C,CAIDjuE,WACI,MAAM2D,EAAKvP,KACX,IACI,MAAMilB,QAAgB6K,SAAS0B,SAASjiB,EAAGy7C,OAAQ,MAAO,MAAM,EAAM,CAAA,GAChE/iD,QAAa6nB,SAAS0B,SAASjiB,EAAGvL,IAAK,MAAO,MAAM,EAAM,IAChEuL,EAAGtH,KAAOA,EACVsH,EAAG0V,QAAUA,CAChB,CAAC,MAAOvI,GACL9c,MAAM8c,MAAM,KAAMA,EACrB,CACJ,CAED88D,IAAYvxE,EAAMgd,GACd,MAAM1V,EAAKvP,KACLF,EAAKyP,EAAGwI,cAAc,4BACtBhK,EAAMlN,OAAOggB,OAAOoE,EAAS+zD,eAAezrE,OAAOzN,IAEnDg6E,EAAO/rE,EAAI9F,KAAK8xE,SAGtB,GAFAD,EAAK/yE,SAAQ,CAACjE,EAAGH,IAAMG,EAAEmF,KAAuB,IAAhB6xE,EAAKr1E,OAAewD,EAAOA,EAAKtF,IAAM,KAElE4M,GAAG6pE,GAAQ,OAAO7pE,EAAGmqE,YAAY3rE,GAErC,MAAMisE,EAAMzqE,EAAGkqE,QAAQQ,WAAW,MAC9BD,EACAzqE,GAAG6pE,GAAS,IAAIJ,gBAAekB,GAAOF,EAAKjsE,GAE3CnO,MAAM8c,MAAM,KAAM,+BAEzB,CAED9Q,WACSotE,gBAAeO,UAAgBzzD,SAASc,KAAKlgB,SAAU,WAAY,GAAG,GAC3E1G,KAAK03C,eACR,CAED73C,WAAkB,EAClBA,WAAuB,EACvBA,UAAgB,KAEhBA,kBACI,MAAM0P,EAAKypE,eACX,IAAmB,IAAfzpE,EAAG0pE,UACH1pE,GAAGgqE,KAAYhqE,GAAG4qE,GAAtB,CACA5qE,GAAG4qE,IAAgB,EACnB,IACI,MACMn2E,EAAM,GADGg1E,eAAeC,kCAExBiB,MAAEA,EAAKE,cAAEA,SAAwB3wE,OAAOzF,GAC9Ck2E,EAAM5/C,YAAY8/C,GAClB7qE,GAAG2qE,GAASA,EACZ3qE,GAAGgqE,IAAW,EACdzzD,SAASyC,KAAK7hB,SAAU,WAC3B,CAAC,MAAOsF,GACLpM,MAAM8c,MAAM,KAAM1Q,EAC9B,CAAkB,QACNuD,GAAG4qE,IAAgB,CACtB,CAd2C,CAe/C,CAWDt6E,cAAcC,EAAIoI,EAAO,OAAQxG,EAAQ,QAAStB,EAAO,QAGrD,KAAMN,aAAciJ,aAAc,MAAO,CAAA,EAEzC,MAAMsxE,EAAQv6E,EAAGsN,aAAalF,GACxBoyE,EAAOx6E,EAAGsN,aAAa1L,GACvB64E,EAAQz6E,EAAGsN,aAAahN,GAE9B,IAAI4B,EAAM,KAEV,OAAQu4E,GACJ,IAAK,QACDv4E,EAAM,GACN,MACJ,IAAK,SACDA,EAAM,CAAA,EACN,MACJ,QACI,OAAOg3E,gBAAerhE,EAAQ2iE,EAAMC,GAG5C,MAAMC,EAASz3E,MAAMmI,KAAKpL,EAAG2O,UACvBzL,EAAoB,UAAVu3E,EACVE,EAAqB,WAAVF,EAgBjB,OAdAC,EAAOzzE,SAAQjH,IACX,MAAM46E,EAAO56E,EAAGsN,aAAalF,GAC7B,GAAIlF,EACAhB,EAAI4P,KAAK+oE,QAAQptE,OAAOzN,EAAIoI,EAAMxG,EAAOtB,SACtC,GAAIq6E,EAAU,CACjB,MAAMn6E,EAAM04E,eAAezrE,OAAOzN,EAAIoI,EAAMxG,EAAOtB,GACnD4B,EAAI04E,GAAQp6E,CAC5B,KAAmB,CACH,MAAMs6E,EAAO96E,EAAGsN,aAAa1L,GACvBm5E,EAAO/6E,EAAGsN,aAAahN,GAC7B4B,EAAIq4E,GAAOK,GAAQC,SAAQhjE,EAAQijE,EAAMC,EAC5C,KAGE74E,CACV,CAEDnC,SAAe+B,EAAKxB,GAChB,OAAQA,GACJ,IAAK,UAAW,MAAe,SAARwB,EACvB,IAAK,SAAU,OAAOP,WAAWO,GACjC,QAAS,OAAOA,EAEvB,QAGG5B,KAAKmJ,OAAO,WACf,ECxOE,MAAM2xE,2BAA2B3+C,GAEzB88C,qBACP,OAAOh4E,WAAW85E,aAAe,4DACpC,CAEDl7E,kBAAoB,CAChBmE,IAAK,CAAE,EACPo+B,MAAO,CAAE,EACTl0B,OAAQ,CAAE,EACVvK,SAAU,CAAE,GAGhBq3E,IAAW5sC,IACXnmC,IAEApF,cACI8nB,QACA3qB,KAAKoiC,MAAQ,SAChB,CAEDkb,WAAWhS,GACP,MAAM/7B,EAAKvP,KACPsrC,EAAQ9Q,IAAI,UAAUjrB,GAAGozB,KACzB2I,EAAQ9Q,IAAI,WAAWjrB,GAAG0rE,KAC1B3vC,EAAQ9Q,IAAI,QAAQjrB,GAAG2rE,KACvB5vC,EAAQ9Q,IAAI,aAAajrB,GAAG4rE,GAAa5rE,GAAGtH,GACnD,CAEDy1C,WAEI,OAAOxhC,CAAI,cAAcuzB,EADdzvC,MACqBg7E,cAAoB9sC,EADzCluC,KACqD49C,+BACnE,CAEDA,cACI,MACMw9B,EAAcp6E,EAAO6F,iBADhB7G,KACoC2D,UAI/C,MAHY,CACR,CAAC,YAHM3D,KAGS2D,YAAay3E,EAGpC,CAODC,UAAUpzE,EAAO,GAAImpB,GAAS,GAC1BpxB,MAAKiI,GAAQA,EACbjI,MAAKm7E,GAAalzE,EAAMmpB,EAC3B,CAEGhW,YAAQxZ,EAAK,IACb5B,MAAKiI,GAAQrG,EACb5B,MAAKm7E,GAAav5E,EACrB,CAEGwZ,cACA,OAAOpb,MAAKiI,EACf,CAED2D,WACI,MAAM5H,EAAM,GAAG82E,mBAAmB7B,kBAAkBj5E,KAAKoiC,gBACzDpnB,MAAMsgE,UAAUt7E,KAAMgE,EACzB,CAMDi3E,MACI,MAAM1rE,EAAKvP,KACLF,EAAKyP,EAAGrB,OAAS8M,MAAMpR,MAAM2F,EAAGrB,QAAU,KAChD,IAAKpO,EAAI,OAAOkb,MAAMyF,QAAQlR,GAAGiX,GAAO,mBAAmBjX,EAAGrB,qBAC9DqB,GAAGtH,GAAQnI,EAAG8G,UACd2I,GAAG4rE,GAAar7E,EAAG8G,UACtB,CAKDgF,WACI,MAAM2D,EAAKvP,KACX,IACI,MAAMiI,QAAa6nB,SAASkC,KAAKziB,EAAGvL,KACpC,IAAKiE,EAAM,MAAM,IAAIrH,MAAM,YAAY2O,EAAGvL,oBAC1CuL,GAAGtH,GAAQA,EACXsH,GAAG4rE,GAAalzE,EACnB,CAAC,MAAOyU,GACL1B,MAAMyF,QAAQlR,GAAGiX,GAAO9J,EAAMmJ,QACjC,CACJ,CAEGW,SACA,OAAOxmB,MAAKg7E,GAASt5E,KACxB,CAED02E,IAAWpsE,GACP,MACMoP,EAAUpP,EAAE/D,KAAKA,KACvBI,IAAIK,gBAAgBsD,EAAE/D,KAAKjE,KAC3BgX,MAAMyF,QAHKzgB,MAGMwmB,GAAOxa,EAAE/D,KAAKmpB,OAHpBpxB,MAGgCwmB,GAAM5f,UAAYwU,EAAUA,GACvEpP,EAAEkC,OAAOqtE,WACZ,CAEDJ,IAAalzE,EAAO,GAAImpB,GAAS,GAC7B,MAAM7hB,EAAKvP,KACX,IAAKiI,EAAM,OAAO+S,MAAMyF,QAAQlR,GAAGiX,GAAO,YAC1C,IACI,MAAMg1D,EAAWjsE,GAAGksE,GACdtzE,EAAO,IAAIC,KAAK,CAACozE,GAAW,CAAEp7E,KAAM,2BACpCs7E,EAAUrzE,IAAIC,gBAAgBH,GAC9BszE,EAAS,IAAIE,OAAOD,GAC1BD,EAAOlD,UAAYhpE,GAAG6oE,GAAWtwE,KAAKyH,GACtCksE,EAAOzD,YAAY,CAAE/vE,KAAMA,EAAMjE,IAAK03E,EAAStqD,OAAQA,GAC1D,CAAC,MAAO1U,GACL1B,MAAMyF,QAAQlR,GAAGiX,GAAO9J,EAAMmJ,QACjC,CACJ,CAEG41D,SACA,MACMG,EADK57E,KACM2D,SADN3D,KACoB2D,SAASvB,MAAM,KAAKM,KAAInB,GAAK,kBAAkBu5E,mBAAmB7B,qBAAqB13E,EAAE2C,qBAAoB5B,KAAK,IAAM,GACvJ,MAAO,uEACkBw4E,mBAAmB7B,gDAClC2C,uLAGb,QAGG57E,KAAKmJ,OAAO,eACf,EClIE,MAAM0yE,0BAA0B1/C,GAExB88C,qBACP,OAAOh4E,WAAW66E,iBAAmB,iDACxC,CAEDj8E,kBAAoB,CAChBmE,IAAK,CAAE,EACP+3E,QAAS,CAAE37E,KAAMmO,QACjBytE,UAAW,CAAE57E,KAAMmO,OAAQF,UAAW,eAG1C4tE,IAAgB7tC,IAChB04B,IAAa,KACb11D,IAAQ,KACRE,IAAS,KACTyO,IAAQ,KACR8Q,IAAQ,KACRvH,GAAS,GAETs9B,IAAWt6C,KAAK9L,GAEhBqC,cACI8nB,QACA3qB,KAAK+7E,QAAU,GACf/7E,KAAKstB,aAAattB,MAAK4mD,GAC1B,CAEDh7C,0BACI,MAAM2D,EAAKvP,KAEX,SADMuP,GAAG2sE,KACLj7E,WAAWk7E,SAAU,CACrB,MAAMpuE,EAAM,CAAEquE,WAAW,EAAMC,QAAQ,GACvC9sE,GAAGu3D,GAAa,IAAI7lE,WAAWk7E,SAASG,UAAUvuE,GAClD4c,MAAMiyB,mBACT,CACJ,CAEDU,WAAWhS,GACP,MAAM/7B,EAAKvP,KACPsrC,EAAQ9Q,IAAI,SACZjrB,GAAGgtE,GAAShtE,EAAGvL,KACfuL,GAAG2rE,GAAO3rE,EAAGvL,KAEpB,CAED05C,WACI,MAAMnuC,EAAKvP,KAEL+N,EAAM,CAAE,aADCwB,EAAGysE,UAAY,GAAI,GAAGzsE,EAAGysE,gBAGxC,OADAzsE,EAAG+d,aAAa/d,GAAGq3C,GAAU74C,GACtBmO,CAAI,QAAQuzB,EAAIlgC,GAAG0sE,4BAAuC/tC,EAAS3+B,EAAGquC,wBAChF,CAEDA,cACI,MAAMruC,EAAKvP,KACLo7E,EAAcp6E,EAAO6F,iBAAiB0I,EAAG5L,UAK/C,MAJY,CACR,CAAC4L,GAAGq3C,KAAY,EAChB,CAAC,YAAYr3C,EAAG5L,YAAay3E,EAGpC,CAEDnS,OACI,MACMjlE,EADKhE,MACIw8E,KADJx8E,MAERk7E,GAAOl3E,EACb,CAEG+b,WACA,OAAO/f,MAAK+f,IAAS,EACxB,CAKG08D,SACA,OAAOz8E,MAAKi8E,GAAcv6E,KAC7B,CAKDkK,SAAa5H,EAAM,IACf,MAAMuL,EAAKvP,KAGX,KADAgE,EAAMuL,GAAG1N,EAAWmC,IACV,OAEV,IAAIiE,QAAa6nB,SAASkC,KAAKhuB,GAC1BiE,IAELsH,GAAGshB,GAAQthB,GAAG8P,GAAQrb,GACjBuL,GAAGwQ,KAAOxQ,GAAGwQ,GAAQxQ,GAAGshB,IAG7B5oB,EAAOA,EAAKhG,QAAQ,gBAAiB,QAErCsN,GAAGktE,GAAW71E,UAAY2I,GAAGmtE,GAAUz0E,GAEvC6d,SAASyC,KAAKhZ,EAAI,OAAQvL,GAC1B4c,uBAAsB,KAClBrR,GAAGotE,KACHptE,GAAGqtE,KACHrtE,GAAGstE,IAAa,IAEvB,CAEDh7E,GAAWmC,EAAM,IAEb,OAAKA,GAAOA,EAAIG,WAAW,QAAgBH,EADhChE,MAED6wB,GAAQ,IAAIxoB,IAAIrE,EAFfhE,MAEuB6wB,IAAOlvB,WACrCmuB,SAAS4B,aAAa1tB,GAAK,EAClC,CAEDqb,IAAQrb,EAAM,IACV,OAAOA,EAAII,SAAS,KAAOJ,EAAM8rB,SAASgtD,WAAW94E,EACxD,CAED64E,MACI78E,MAAK+8E,GAAc,gBAAiB,yBACvC,CAEDH,MACe58E,MAER+8E,GAAc,QADJ,8EAEhB,CAEDA,IAAc78D,EAAKxE,GACf,MACMlE,EAAOwD,MAAMsC,SADRtd,MACoBy8E,GAAYv8D,GAC3CU,uBAAsB,IAAMpJ,EAAKzQ,SAAQjH,GAAMkb,MAAM8F,YAAYhhB,EAAI4b,MACxE,CAEDihE,MACI,MAAMptE,EAAKvP,KACLg9E,EAAQhiE,MAAMsC,SAAS/N,GAAGktE,GAAY,KAAKz2E,QAAOlG,IAAOgN,OAAO5D,IAAIpJ,EAAI,QAAQqE,WAAW,OAEjG64E,EACKh3E,QAAOlG,KAAQgN,OAAO5D,IAAIpJ,EAAI,QAAQsE,SAAS,QAAU0I,OAAO5D,IAAIpJ,EAAI,QAAQsE,SAAS,QACzF2C,SAAQjH,GAAMA,EAAGoO,OAAS,WAE/B8uE,EACKh3E,QAAOlG,GAAMgN,OAAO5D,IAAIpJ,EAAI,QAAQsE,SAAS,QAAU0I,OAAO5D,IAAIpJ,EAAI,QAAQsE,SAAS,OACvF2C,SAAQjH,GAAMgmB,SAASyE,OAAOzqB,EAAIA,EAAI,QAASyP,GAAG0tE,GAAan1E,KAAKyH,KAE5E,CAED0tE,IAAajxE,GACT,MAAMuD,EAAKvP,KACLF,EAAKkM,EAAEkC,OACP3F,EAAOuE,OAAO5D,IAAIpJ,EAAI,QAC5B,GAAIyI,EAAKpE,WAAW,KAAM,OAC1B2hB,SAASS,QAAQva,GACjBlM,EAAGyI,KAAOgH,GAAG1N,EAAW0G,GAGxB,OADgBud,SAASyC,KAAKhZ,EAAI,OAAQzP,EAAGyI,MAAM,GAAO,GAAO,IAGjEgH,GAAGgtE,GAASz8E,EAAGyI,MACfgH,GAAG2rE,GAAOp7E,EAAGyI,OACN,QAJP,CAKH,CAEDi0E,MACI,MAAMjtE,EAAKvP,KACX,GAAyB,IAArBuP,GAAG+Z,EAAO7kB,OAAe,OAAO8K,GAAG+B,GACvC,MAAMtN,EAAMuL,GAAG+Z,EAAO1T,MACtB,OAAO5R,GAAOA,IAAQuL,GAAG6B,GAAQ7B,GAAGitE,KAAex4E,CACtD,CAEDu4E,IAASv4E,GACL,MAAMuL,EAAKvP,KACPuP,GAAG+Z,EAAO7kB,QAAU8K,EAAGwsE,UAASxsE,GAAG+Z,EAAS/Z,GAAG+Z,EAAO7mB,MAAM,IAC5D8M,GAAG6B,IAASpN,IAChBuL,GAAG+Z,EAAO1X,KAAK5N,GACfuL,GAAG6B,GAAQpN,EACNuL,GAAG+B,KAAQ/B,GAAG+B,GAAStN,GAC/B,CAED04E,IAAUz0E,GACN,OAAOjI,MAAK8mE,GAAW4V,SAASz0E,EACnC,CAED2D,WAEI,GAAI3K,WAAWk7E,SAAU,OACzB,MAAMe,EAASx2E,SAASC,cAAc,UAChCyyB,EAAUtT,SAASc,KAAKs2D,EAAQ,OAAQ,GAAG,GACjDA,EAAO98E,KAAO,kBACd88E,EAAO1zE,IAAMqyE,kBAAkB5C,QAC/Bj+D,MAAM+B,YAAYrW,SAAS8V,KAAM0gE,SAC3B9jD,CACT,QAGGp5B,KAAKmJ,OAAO,cACf,EC1ME,MAAMg0E,wBAAwBhhD,GAEtB88C,qBACP,OAAOh4E,WAAWm8E,eAAiB,6CACtC,CAEDv9E,kBAAoB,CAChBmE,IAAK,CAAE,EACPo+B,MAAO,CAAE,EACTl0B,OAAQ,CAAE,EACVvK,SAAU,CAAE,GAGhBs4E,IAAgB7tC,IAChBivC,IAAU,KAEVx6E,cACI8nB,QACA3qB,KAAK2D,SAAW,GAChB3D,KAAKoiC,MAAQ,SAChB,CAEDx2B,gCACUuxE,iBAAgBttD,KACtBlF,MAAMiyB,mBACT,CAEDQ,mBACI,OAAOp9C,IACV,CAEDq9C,eACIr9C,MAAKs9E,KACL3yD,MAAM0yB,cACT,CAEDC,WAAWhS,GACP,MAAM/7B,EAAKvP,KACNuP,GAAG8tE,KACJ/xC,EAAQ9Q,IAAI,UAAUjrB,GAAGozB,GAASpzB,EAAG6yB,OACrCkJ,EAAQ9Q,IAAI,WAAWjrB,GAAG0rE,GAAU1rE,EAAGrB,QACvCo9B,EAAQ9Q,IAAI,QAAQjrB,GAAG2rE,GAAO3rE,EAAGvL,KACjCsnC,EAAQ9Q,IAAI,aAAajrB,GAAG8pC,GAAY9pC,EAAG5L,UAClD,CAED+5C,WAEI,OAAOxhC,CAAI,QAAQuzB,EADRzvC,MACei8E,cAAyB/tC,EADxCluC,KACoD49C,wBAClE,CAEG2/B,aACA,OAAOz2E,OAAOy2E,MACjB,CAEGF,aACA,OAAOr9E,MAAKq9E,EACf,CAEGG,YACA,OAAOx9E,MAAKq9E,GAAQI,UACvB,CAOGj3D,WACA,OAAOxmB,MAAKq9E,IAAS97D,YAAc,EACtC,CAEGiF,SAAKve,EAAO,IACDjI,MACJq9E,IADIr9E,MACQq9E,GAAQl6D,SAASlb,EACvC,CAKGy1E,gBAEA,OADW19E,KACDw9E,MAAMG,gBADL39E,KACwBq9E,OAAOO,eAC7C,CAEG7yE,YACA,OAAO/K,KAAK2f,aACf,CAED05B,IAAY11C,GACR,MAAM4L,EAAKvP,KACPuP,EAAGguE,QAAU55E,GACb4L,EAAGguE,OAAOF,OAAOQ,iBAAiBtuE,EAAGiuE,MAAO75E,EAEnD,CAEDg/B,IAASP,GACMpiC,KACJu9E,QAAUn7C,GADNpiC,KACgBu9E,OAAOF,OAAOS,SAAS17C,EACrD,CAMD64C,IAAU/sE,GACN,MACMpO,EAAKoO,EAAS8M,MAAMpR,MAAMsE,GAAU,KAC1C,IAAKpO,EAAI,OAFEE,KAEQwmB,KAAO,mBAAmBtY,eAFlClO,KAGRwmB,KAAO1mB,EAAG8G,SAChB,CAKDgF,SAAa5H,GACT,MAAMuL,EAAKvP,KACX,IACI,MAAMiI,EAAOjE,QAAY8rB,SAASkC,KAAKhuB,GAAO,KAC9C,IAAKiE,EAAM,MAAM,IAAIrH,MAAM,YAAYoD,kBACvCuL,EAAGiX,KAAO,GACVjX,GAAG8pC,GAAY9pC,EAAG5L,UAClB4L,EAAGiX,KAAOve,CACb,CAAC,MAAOyU,GACLnN,EAAGiX,KAAO9J,EAAMmJ,OACnB,CACJ,CAEDy3D,MAEI,MAAM/tE,EAAKvP,KAEL+N,EAAM,CACRrM,MAAO,GACPiC,SAAU4L,EAAG5L,SACby+B,MAAO7yB,EAAG6yB,MACV27C,iBAAiB,EACjBC,QAAS,CAAE78C,SAAS,IAGxB5xB,GAAG8tE,GAAU9tE,EAAGguE,QAAQF,QAAQjxD,OAAO7c,GAAGktE,GAAY1uE,GAEtDwB,EAAGipC,YAAY1xC,OAAQ,SAAUyI,GAAG+a,EAAUxiB,KAAKyH,IAEnD,IACQA,EAAGvL,IACHuL,GAAG2rE,GAAO3rE,EAAGvL,KACNuL,EAAGrB,QACVqB,GAAG0rE,GAAU1rE,EAAGrB,OAEhC,CAAkB,QACN0S,uBAAsB,IAAMrR,EAAG2qB,KAAK,iBACpC3qB,GAAG+a,GACN,CACJ,CAEDA,GAAUte,GACN,MAAMuD,EAAKvP,KACNuP,GAAG8tE,KACR9tE,GAAG8tE,GAAQjrB,OAAO,CAAEp2C,MAAO,EAAGC,OAAQ,IAEtC2E,uBAAsB,KAClB,MAAM9E,EAAOvM,EAAGxE,OAAOgR,wBACnBD,GACAvM,GAAG8tE,GAAQjrB,OAAO,CAAEp2C,MAAOF,EAAKE,MAAOC,OAAQH,EAAKG,QACvD,IAER,CAEGwgE,SACA,OAAOz8E,MAAKi8E,GAAcv6E,KAC7B,CAED7B,UAEAA,kBACI,GAAIoB,WAAWs8E,OAAQ,OACvB,MAAML,EAASx2E,SAASC,cAAc,UAChCyyB,EAAUtT,SAASc,KAAKs2D,EAAQ,OAAQ,GAAG,GACjDA,EAAO98E,KAAO,kBACd88E,EAAO1zE,IAAM,GAAG2zE,gBAAgBlE,sBAChCj+D,MAAM+B,YAAYrW,SAAS8V,KAAM0gE,SAC3B9jD,CACT,CAMDv5B,YACI,MAAMmE,EAAMm5E,gBAAgBlE,QAC5BnyE,OAAOm3E,kBAAoB,CACvBC,QAAS,GAAGl6E,IACZm6E,aAAc,CAACC,EAAU/rB,IACd,sCAAsCzoB,mBAAmB,+DACpB5lC,wCAC3BA,sCAI5B,CAEDnE,YACI,OAAO,IAAI4H,SAAQ,CAACC,EAASC,KAEzB02E,QAAQrzB,OAAO,CACXszB,MAAO,CAAEC,GAAM,GAAGpB,gBAAgBlE,cAClC,SAAU,CAAE51D,UAAU,KAE1Bg7D,QAAQ,CAAC,yBAA0B32E,EAAQ,GAElD,CAED7H,kBACI,MAAM0P,EAAK4tE,gBACP5tE,GAAGivE,KACPjvE,GAAGkvE,WACGlvE,GAAG2sE,WACH3sE,GAAGmvE,KACTnvE,GAAGivE,IAAe,EACrB,QAGGx+E,KAAKmJ,OAAO,YACf"}