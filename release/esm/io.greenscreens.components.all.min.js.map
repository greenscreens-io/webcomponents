{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/GSVersion.mjs","../../modules/base/style.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSID.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSDynamicStyle.mjs","../../modules/base/GSCacheStyles.mjs","../../modules/base/GSAdoptedEngine.mjs","../../modules/base/GSBeep.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSLocalization.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSTemplateCache.mjs","../../modules/base/GSTheme.mjs","../../modules/base/GSAttributeHandler.mjs","../../modules/helpers/Stack.mjs","../../modules/helpers/Queue.mjs","../../modules/helpers/BinaryTree.mjs","../../modules/helpers/DoublyLinkedList.mjs","../../modules/helpers/Tree.mjs","../../modules/data/ReadWriteRegistry.mjs","../../modules/data/AbstractReadWrite.mjs","../../modules/data/ReadWrite.mjs","../../modules/data/CachedReadWrite.mjs","../../modules/data/TreeNode.mjs","../../modules/data/TreeReader.mjs","../../modules/lib.mjs","../../modules/directives/dataset.mjs","../../modules/directives/literal.mjs","../../modules/directives/css-map.mjs","../../modules/properties/verificator.mjs","../../modules/properties/autocapitalize.mjs","../../modules/properties/autocomplete.mjs","../../modules/properties/autocorrect.mjs","../../modules/properties/buttonType.mjs","../../modules/properties/color.mjs","../../modules/properties/environment.mjs","../../modules/properties/inputType.mjs","../../modules/properties/nav.mjs","../../modules/properties/orientation.mjs","../../modules/properties/placement.mjs","../../modules/properties/position.mjs","../../modules/properties/protocol.mjs","../../modules/properties/size.mjs","../../modules/properties/arrayConverter.mjs","../../modules/controllers/AdoptedController.mjs","../../modules/controllers/AttributeController.mjs","../../modules/controllers/ContentController.mjs","../../modules/controllers/DataController.mjs","../../modules/controllers/ElementMoveController.mjs","../../modules/controllers/LocalizationController.mjs","../../modules/controllers/OrientationController.mjs","../../modules/controllers/TemplateController.mjs","../../modules/controllers/ThemeController.mjs","../../modules/controllers/SlotController.mjs","../../modules/GSElement.mjs","../../modules/controllers/ElementNavigationController.mjs","../../modules/controllers/GroupController.mjs","../../modules/components/Accordion.mjs","../../modules/components/AccordionItem.mjs","../../modules/components/Alert.mjs","../../modules/components/Button.mjs","../../modules/components/Calendar.mjs","../../modules/components/Card.mjs","../../modules/components/Center.mjs","../../modules/components/Menu.mjs","../../modules/components/Context.mjs","../../modules/components/Compare.mjs","../../modules/components/Controller.mjs","../../modules/components/Copyright.mjs","../../modules/components/DataHandler.mjs","../../modules/components/Dialog.mjs","../../modules/components/Drawer.mjs","../../modules/components/Dropdown.mjs","../../modules/components/Email.mjs","../../modules/components/Form.mjs","../../modules/components/FormGroup.mjs","../../modules/components/FormPanel.mjs","../../modules/components/Group.mjs","../../modules/components/Icon.mjs","../../modules/components/Indent.mjs","../../modules/components/Image.mjs","../../modules/components/Layout.mjs","../../modules/components/Link.mjs","../../modules/components/List.mjs","../../modules/components/ListItem.mjs","../../modules/components/Nav.mjs","../../modules/components/NavItem.mjs","../../modules/components/Overlay.mjs","../../modules/components/Pager.mjs","../../modules/components/Popup.mjs","../../modules/components/Progress.mjs","../../modules/components/Spinner.mjs","../../modules/components/Splitter.mjs","../../modules/components/tab/Tab.mjs","../../modules/components/tab/TabPanel.mjs","../../modules/components/tab/TabGroup.mjs","../../modules/components/Table.mjs","../../modules/components/Tag.mjs","../../modules/components/Text.mjs","../../modules/components/Tooltip.mjs","../../modules/components/Template.mjs","../../modules/components/ext/controllers/CopySelectController.mjs","../../modules/components/ext/controllers/MaskController.mjs","../../modules/components/ext/controllers/MultipatternController.mjs","../../modules/components/ext/controllers/NumberController.mjs","../../modules/components/ext/controllers/PasswordController.mjs","../../modules/components/ext/controllers/TextController.mjs","../../modules/components/ext/controllers/ListController.mjs","../../modules/components/ext/controllers/ValidityController.mjs","../../modules/components/ext/ReactiveInput.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSInputElement.mjs","../../modules/components/ext/GSTextArea.mjs","../../modules/components/breadcrumb/Breadcrumb.mjs","../../modules/components/breadcrumb/BreadcrumbItem.mjs","../../modules/components/filebox/Attachment.mjs","../../modules/components/filebox/FileBox.mjs","../../modules/components/intl/TimeFormat.mjs","../../modules/components/intl/DateFormat.mjs","../../modules/components/intl/YearFormat.mjs","../../modules/components/intl/CurrencyFormat.mjs","../../modules/components/steps/StepStyle.mjs","../../modules/components/steps/Step.mjs","../../modules/components/steps/Steps.mjs","../../modules/components/toast/Notification.mjs","../../modules/components/toast/Toast.mjs","../../modules/components/tree/controllers/AbstractTreeController.mjs","../../modules/components/tree/controllers/TreeController.mjs","../../modules/components/tree/TreeItem.mjs","../../modules/components/tree/Tree.mjs","../../modules/extra/Chart.mjs","../../modules/extra/Highlight.mjs","../../modules/extra/Markdown.mjs","../../modules/extra/Monaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport class GSVersion {\r\n\r\n    static get version() {\r\n        return '2.0.0';\r\n    }\r\n\r\n    static get build() {\r\n        return 2025.0131;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Required CSS Styles for WebCompoents, regardless Bootstrap CSS.\r\n */\r\nexport const gsstyles = `.z-10k{z-index:10000 !important;}\r\n.gs-hide,gs-item{display:none !important;}\r\ngs-popover,gs-tooltip{position:fixed;top:0px;left:0px;},\r\n.d-contents{display:contents;}';\r\ngs-button-group::part(.btn-group){box-shadow:rgba(72, 72, 72, 0.4) 0px 0.125rem 0.25rem;}\r\ngs-group>gs-button::part(button) {box-shadow: none;}\r\ngs-group>gs-button:not(:last-child)::part(button) {border-top-right-radius: 0;border-bottom-right-radius: 0;}\r\ngs-group>gs-button:not(:first-child)::part(button) {margin-left: calc(var(--bs-border-width) * -5);border-top-left-radius: 0;border-bottom-left-radius: 0;}\r\ngs-layout {width: 100%;height: 100%;}\r\ngs-split-panel{flex: 1 1 auto !important;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]:before {content: attr(data-value);}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {visibility: hidden;display: inline-block;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-calendar-picker-indicator {position: relative;top: 0px;right: 0;color: black;opacity: 0.5;}\r\n`;","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic isPrimitive = (o) => !Array.isArray(o) && (this.isBool(o) || this.isDate(o) || this.isNumber(o) || this.isString(o));\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic asArray(val) {\r\n\t\treturn Array.isArray(val) ? val : [val];\r\n\t}\r\n\r\n\tstatic asNum(val, dft = 0, locale) {\r\n\t\tlocale = locale || GSUtil.locale;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(locale);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(locale = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(locale).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t};\r\n\t\tconst reg = /[&<>\"'/]/ig;\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\t\t\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tif (time <= 0) return;\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to write to the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async writeToClipboard(value = '') {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-write\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.writeText(value);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to read from the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async readFromClipboard() {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-read\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.readText();\r\n\t\t}\r\n\t\treturn '';\r\n\t}\t\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribite name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop];\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\t\t\t\t\r\n\t\t\t\tconst tmp = opt; // Object.hasOwn(opt, prop) ? opt : target;\r\n\t\t\t\t\r\n\t\t\t\tconst type = tmp[prop]?.type;\r\n\t\t\t\tconst safe = tmp[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = tmp[prop]?.default;\r\n\t\t\t\tconst multi = tmp[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = tmp[prop]?.attribute || prop;\r\n\t\t\t\tlet val = target.hasAttribute(prop) ? GSAttr.get(target, prop) : target[prop];\r\n\r\n\t\t\t\tif (GSFunction.isFunction(val)) return val.bind(target);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, locale) {\r\n        format = format || GSUtil.getDateFormat(locale);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, locale: {}, extract: {}, key: { type: Boolean } };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', locale:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const locale = cfg.locale || GSUtil.locale;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        // intercept overrides; used b GS-TABLE cell Ui remapping\r\n        if (cfg.childElementCount > 0) {\r\n            const el = cfg.querySelector(`gs-item[value=\"${val}\"]`);\r\n            return GSAttr.get(el, \"map\", val);\r\n        }\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, locale);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'text':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(locale);\r\n                    return new GSDate(val).format(fmt, locale);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, locale);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static *filter(data = [], filter = [], fields, limit = 0) {\r\n        let cnt = 0;\r\n        let sts = false;\r\n        for (let rec of data) {\r\n            sts = GSData.filterRecord(rec, filter, fields);\r\n            if (sts) {\r\n                cnt++\r\n                yield rec;\r\n            }\r\n            if (limit > 0 && cnt >= limit) break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields, limit = 0) {\r\n        data = Array.isArray(data) ? data : [data];\r\n        filter = Array.isArray(filter) ? filter : [filter];\r\n        if (filter.length === 0) return data;\r\n        return [...GSData.filter(data, filter, fields, limit)];\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = GSUtil.isPrimitive(filter);\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter, fields);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (GSData.filterValue(value, filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter, fields) {\r\n\r\n        let primitive = false;\r\n        let found = true;\r\n        let value = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            primitive = GSUtil.isPrimitive(flt);\r\n            if (primitive) {\r\n                found = found && GSData.filterSimple(rec, flt, fields);\r\n            } else {\r\n                value = rec[flt.name];\r\n                if (flt.name) {\r\n                    found = found && GSData.filterValue(value, flt)\r\n                } else {\r\n                    found = found && GSData.filterSimple(rec, flt.value, fields);\r\n                }\r\n            }\r\n\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static filterValue(value, filter) {\r\n        const toCheck = GSUtil.isPrimitive(filter) ? filter : filter.value;\r\n        if (GSUtil.isDate(value)) {\r\n            return GSData.matchDate(value, filter);\r\n        } else if (GSUtil.isNumber(value)) {\r\n            return GSData.matchNumber(value, GSUtil.asNum(toCheck, null), filter.op);\r\n        } else {\r\n            return (GSUtil.normalize(value)).toLocaleLowerCase().includes(GSUtil.normalize(toCheck).toLocaleLowerCase());\r\n        }\r\n    }\r\n\r\n    static matchDate(val, filter, locale) {\r\n\r\n        if (typeof filter === 'string') {\r\n            const value = '' + filter;\r\n            const local = val.toLocaleDateString(locale);\r\n            const iso = val.toISOString();\r\n            return local.includes(value) || iso.includes(value);\r\n        }\r\n\r\n        if (!filter.value) return false;\r\n\r\n        const qry = filter.value instanceof Date ? 'date' : typeof filter.value;\r\n\r\n        switch (qry) {\r\n            case 'number':\r\n                return GSData.matchNumber(val.getTime(), filter.value, filter.op);\r\n            case 'date':\r\n                return GSData.matchNumber(val.getTime(), filter.value.getTime(), filter.op);\r\n        }\r\n\r\n        return GSData.matchDate(val, '' + filter.value, filter.locale);\r\n    }\r\n\r\n    /**\r\n     * Match number by operator\r\n     * @param {*} value \r\n     * @param {*} query \r\n     * @param {*} operator \r\n     */\r\n    static matchNumber(value = 0, query = 0, operator = 'eq') {\r\n        switch (operator) {\r\n            case 'gt': return query > value;\r\n            case 'lt': return query < value;\r\n            case 'ge': return query >= value;\r\n            case 'le': return query <= value;\r\n        }\r\n        return value === query;\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToOject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name, partial = false) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj[n][i] : null;\r\n        } else if (obj.hasOwnProperty(n)) {\r\n            obj = partial ? obj[n] || obj : obj[n];\r\n        } else {\r\n            obj = null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n\tstatic readFromObject(obj, name) {\r\n        if (obj?.hasOwnProperty(name)) return GSData.readFromProperty(obj, name);\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} shadow \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el, shadow = false) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()), shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSlotElement\r\n\t * @returns {Boolean}\r\n\t */\t\r\n\tstatic isSlotElement(el) {\r\n\t\treturn el instanceof HTMLSlotElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @param {Number} level How many levels to wal, 0 = all\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry, levels = 0) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tlevels = GSUtil.asNum(levels, 0);\r\n\t\tconst limit = levels > 0;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t\tif (limit && --levels == 0) return null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el, defaults = false) {\r\n\t\tlet val = null;\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\t\tval = el.value ? el.valueAsNumber : el.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\t\tval = Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value') && el.value) {\r\n\t\t\t\t\tval = el.checked ? el.value : null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tval = el.checked;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tval = el.value;\r\n\t\t\t}\r\n\r\n\t\t\tif(GSUtil.isNull(val) && defaults) {\r\n\t\t\t\tval = el.defaultValue;\r\n\t\t\t}\r\n\t\t\treturn val;\r\n\t\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el, defaults);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromValue(el, val, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tif (defaults) el.defaultValue = el.checked;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = GSUtil.normalize(data);\r\n\t\t\t\tif (defaults) el.defaultValue = el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true, defaults = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => GSDOM.fromElement2Object(el, params, defaults) );\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @param {Boolean} defaults Set default value for form reset  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output', defaults = false) {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\t// if (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj, defaults));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromObject2Element(el, obj, defaults = false) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\tGSDOM.fromValue(el, val, defaults);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement (input) value to JSON Object  \r\n\t * @param {HTMLElement} owner Element value source\r\n\t * @param {Object} obj Object to populate \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromElement2Object(el, obj, defaults = false) {\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t} else if (el.checked) {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\tconst props = GSDOM.allProperties(own);\r\n\t\tArray.from(own.attributes).forEach(v => {\r\n\t\t\tconst type = props[v.name]?.type;\r\n\t\t\tswitch(type) {\r\n\t\t\t\tcase Boolean :\r\n\t\t\t\t\tobj[v.name] = own.hasAttribute(v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Number :\r\n\t\t\t\t\tobj[v.name] = GSAttr.getAsNum(own, v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\tobj[v.name] = v.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', '');\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own\r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t */\r\n\tstatic setValue(qry, val, own, defaults = false) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\t/**\r\n\t * Extract and merge all static properties definition from WebComponent instance\r\n\t * @param {GSElement} obj \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic allProperties(obj) {\r\n\t\tconst list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n\t\tlist.push(obj.constructor?.properties || obj.properties);\r\n\t\treturn GSData.mergeObjects(list);\r\n\t}\r\n\r\n\t/**\r\n\t * Return element template ref\r\n\t * @param {GSElement} host \r\n\t * @returns \r\n\t */\r\n\tstatic templateRef(host) {\r\n\t\tif (!host) return;\r\n\t\tif(host.tagName === 'GS-TEMPLATE') return host.src;\r\n\t\treturn host.template || host.query?.('template', false);\r\n\t  }\r\n\t\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if available.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = GSUtil.isString(data) ? data : data.action || data.data?.action;\r\n\t\t\tGSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(me.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {Boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el, opt) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el, opt);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {Boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {Boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {Boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {Boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {Boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {Boolean} forRemove - call on node remove or add\r\n     * @param {HTMLElement} target - element to monitor\r\n     * @returns {Boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {Boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {Boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = (style || '').toString();\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop();\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n    * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\nimport { gsstyles } from \"./style.mjs\";\r\n\r\n/**\r\n * Cache for dynaamically loaded styles.\r\n * Used to share styles among GS-* WebComponents\r\n * @class\r\n */\r\nexport class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Create a new CSSStyleSheet\r\n\t * @param {String} id Unique ID\r\n\t * @returns {CSSStyleSheet} Created instance\r\n\t */\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {String} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\t\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\t\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {String} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {String} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id, style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSID.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(gsstyles);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from './GSDOM.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSDOMObserver } from './GSDOMObserver.mjs';\r\nimport { GSCacheStyles } from './GSCacheStyles.mjs';\r\n\r\nconst adoptedId = Symbol();\r\nconst observer = Symbol();\r\n\r\n/**\r\n * Monitor HTMLStyleElement & HTMLLinkElement (of type stylesheet) for changes.\r\n * Every such element marked with data-adoptable=\"true\" will be cached and\r\n * will trigger gs-adopted event to notify component controller to update adoptableStyleSheet list\r\n */\r\nexport class GSAdoptedEngine {\r\n\r\n  static #timerID = 0;\r\n  static #ID = Date.now();\r\n  static #scheduled = false;\r\n\r\n  static #init() {\r\n    const me = GSAdoptedEngine;\r\n    me.observe(document.head);\r\n    me.#preload();\r\n    me.#timerID = setInterval(() => me.#adopt(), me.timeout);\r\n  }\r\n\r\n  static #clear() {\r\n    const me = GSAdoptedEngine;\r\n    clearInterval(me.#timerID);\r\n    me.#timerID = undefined;\r\n  }\r\n\r\n  static #adopt() {\r\n    const me = GSAdoptedEngine;\r\n    const sheets = me.#adoptable;\r\n    if (sheets.length == 0) return me.#clear();\r\n    sheets.map(s => me.#adoptSheet(s));\r\n    me.update();\r\n  }\r\n\r\n  static update() {\r\n    const me = GSAdoptedEngine;\r\n    if (me.#scheduled) return;\r\n    me.#scheduled = true;\r\n    queueMicrotask(() => {\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          document.adoptedStyleSheets = me.#sorted;\r\n          document.adoptedStyleSheets.id = ++me.#ID;\r\n        } finally {\r\n          me.#scheduled = false;\r\n          globalThis.dispatchEvent(new CustomEvent('gs-adopted'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static #asText(sheet) {\r\n    return Object.values(sheet.cssRules).map(o => o.cssText).join('');\r\n  }\r\n\r\n  static #adoptLink(el) {\r\n    const me = GSAdoptedEngine;\r\n    GSAdoptedEngine.#monitorAttributes(el);\r\n    Array.from(document.styleSheets).filter(s => s.ownerNode === el).map(s => me.#adoptSheet(s));\r\n  }\r\n\r\n  static #adoptSheet(sheet) {\r\n    const me = GSAdoptedEngine;\r\n    const style = me.#asText(sheet);\r\n    return me.#adoptStyle(sheet.ownerNode, style);\r\n  }\r\n\r\n  static #adoptStyle(ownerNode, style) {\r\n    const me = GSAdoptedEngine;\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(style);\r\n    sheet.id = ++me.#ID;\r\n    ownerNode[adoptedId] = sheet.id;\r\n    me.#store(ownerNode, sheet);\r\n    return sheet;\r\n  }\r\n\r\n  static #store(ownerNode, sheet) {\r\n    GSCacheStyles.set(sheet.id, sheet);\r\n  }\r\n\r\n  static #remove(ownerNode, sheet) {\r\n    GSCacheStyles.remove(sheet.id);\r\n    ownerNode[observer]?.disconnect?.();\r\n    ownerNode[observer] = undefined;\r\n  }\r\n\r\n  static get #sorted() {\r\n    return GSCacheStyles.styles;\r\n  }\r\n\r\n  /**\r\n   * List of adoptable styles or links. Filter only those with dataset.adoptable=true\r\n   * @returns {HTMLStyleElement|HTMLLinkElement}\r\n   */\r\n  static get #adoptable() {\r\n    return Object.values(document.styleSheets)\r\n      .filter(o => o.ownerNode)\r\n      .filter(o => o.ownerNode.dataset.adoptable)\r\n      .filter(o => !o.ownerNode[adoptedId]);\r\n  }\r\n\r\n  static #preload() {\r\n    GSDOM.queryAll(document.head, 'link[rel=\"preload\"][as=\"style\"]')\r\n    .forEach(el => {\r\n      el.remove();\r\n      document.head.appendChild(el);\r\n    });\r\n  }\r\n\r\n  static #onAttributeChange(mutationList) {\r\n    mutationList.forEach((mutation) => {\r\n       const id = mutation.target[adoptedId];\r\n       const style = GSCacheStyles.get(id);\r\n       if(style) style.disabled = mutation.target.hasAttribute('disabled');\r\n    });\r\n    GSAdoptedEngine.update();\r\n  }\r\n  \r\n  static #monitorAttributes(element) {\r\n    const me = GSAdoptedEngine;\r\n    const callback = me.#onAttributeChange.bind(me);\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(element, {\r\n      attributeFilter: [\"disabled\"],\r\n      attributeOldValue: true,\r\n      subtree: false,\r\n    });\r\n    return observer;\r\n  }\r\n  \r\n  /**\r\n   * Filter style and link(css) elements which will be shared\r\n   * with all web componentes. Filter only those marked with data-adoptable\r\n   * @param {HTMLElement} el \r\n   * @returns {Boolean} Return true if monotired element is selected for further processing\r\n   */\r\n  static #onMonitorFilter(el) {\r\n    return (Boolean(el.dataset?.adoptable))\r\n      && (\r\n        (el instanceof HTMLLinkElement && (el.rel === 'stylesheet' || el.as === \"style\"))\r\n        || el instanceof HTMLStyleElement\r\n      );\r\n  }\r\n\r\n  /**\r\n   * When style added to the HTML page, attach it to the WebComponents\r\n   * @param {HTMLStyleElement|HTMLLinkElement} el \r\n   */\r\n  static #onMonitorConnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    if (el instanceof HTMLStyleElement) {\r\n      me.#adoptStyle(el, el.innerText);\r\n      me.update();\r\n    } else if (el instanceof HTMLLinkElement) {\r\n      GSEvents.wait(el, 'load', 0, false).then(e => {\r\n        if (el.rel === 'preload') return el.rel = \"stylesheet\";\r\n        me.#adoptLink(e.target);\r\n        me.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When style removed, remove from adoptable and update\r\n   * @param {HTMLElement} el \r\n   */\r\n  static #onMonitorDisconnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    me.#sorted.filter(o => o.id === el[adoptedId])\r\n          .forEach(o => me.#remove(el, o));\r\n    me.update();\r\n  }\r\n\r\n  /**\r\n   * Observe DOM tree from mutations\r\n   * @param {HTMLElement} owner Root element to watch DOM tree from \r\n   */\r\n  static observe(owner) {\r\n    const me = GSAdoptedEngine;\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorConnect, false, owner);\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorDisconnect, true, owner);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBeep class\r\n * @module base/GSBeep\r\n */\r\n\r\n\r\n/**\r\n * A helper class to use browser AudiContext to make tones\r\n * @class\r\n */\r\nexport class GSBeep {\r\n\r\n    static audioCtx = globalThis.AudioContext || globalThis.webkitAudioContext || globalThis.audioContext;\r\n\r\n    /**\r\n     * Helper function to emit a beep sound in the browser using the Web Audio API.\r\n     * \r\n     * @param {number} duration - The duration of the beep sound in milliseconds.\r\n     * @param {number} frequency - The frequency of the beep sound.\r\n     * @param {number} volume - The volume of the beep sound.\r\n     * @param {string} tyoe - The sound type (sine, square, sawtooth, triangle, custom)\r\n     * \r\n     * @returns {Promise} - A promise that resolves when the beep sound is finished.\r\n     */\r\n    static beep(duration = 200, frequency = 440, volume = 1, type = 'sine') {\r\n        return new Promise((resolve, reject) => {\r\n            try{\r\n                const context = new GSBeep.audioCtx();\r\n                const oscillatorNode = context.createOscillator();\r\n                const gainNode = context.createGain();\r\n                oscillatorNode.connect(gainNode);\r\n\r\n                // Set the oscillator frequency in hertz\r\n                oscillatorNode.frequency.value = frequency;\r\n\r\n                // Set the type of oscillator\r\n                oscillatorNode.type = type;\r\n                gainNode.connect(context.destination);\r\n\r\n                // Set the gain to the volume\r\n                gainNode.gain.value = volume * 0.01;\r\n\r\n                // Start audio with the desired duration\r\n                oscillatorNode.start(context.currentTime);\r\n                oscillatorNode.stop(context.currentTime + duration * 0.001);\r\n\r\n                // Resolve the promise when the sound is finished\r\n                oscillatorNode.onended = () => resolve();                \r\n            }catch(error) {\r\n                reject(error);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promisses sequentially\r\n\t * @param {Arrayy<Promise>} ps \r\n\t * @returns \r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport { GSEvent } from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport class GSEventBus {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {String} name EventBus name\r\n     * @param {String} type Event name\r\n     * @param {Object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {String} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {String} name unique buss name\r\n     * @returns {Boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constructor to attach Gesture featuer to an HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {Boolean} swipe Monitor swipe gesture\r\n     * @param {Boolean} tap Monitor tap gesture\r\n     * @param {Boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move: me.#handleTouchMove.bind(me),\r\n            start: me.#handleTouchStart.bind(me),\r\n            end: me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) {\r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 && Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {Number}\r\n     */\r\n    static fingers(e) {\r\n        return e.detail.touches?.length;\r\n    }\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns {GSGesture}\r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport class GSItem extends HTMLElement {\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic properties = {\r\n\t\tactive: { type: Boolean },\r\n\t\tdisabled: { type: Boolean },\r\n\t\tautofocus: { type: Boolean },\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return template content of GS-ITEM element (if exists)\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tget body() {\r\n\t\tlet tpl = GSAttr.get(this, 'template');\r\n\t\tif (tpl) return `<gs-template flat src=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = this.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item elements\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tget items() {\r\n\t\treturn Array.from(this.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSAttr.get(this, 'name', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent GS-* component\r\n\t */\r\n\tget parentComponent() {\r\n\t\treturn GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n\t}\r\n\t\t\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate that parent element contains only specific childrens\r\n\t * @param {*} own \r\n\t * @param {*} tagName \r\n\t * @returns \r\n\t */\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic collect(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Convert GS-ITEM list to JSON\r\n\t * @param {HTMLElement} root Element containing GS-ITEM childs \r\n\t * @returns {Array} Arary of JSON objects\r\n\t */\r\n\tstatic toJSON(root) {\r\n\t\treturn GSItem.collect(root).map(el => el.asJSON(true));\r\n\t}\r\n\r\n\t/**\r\n\t * Make GS-ITEM attributes JSON compatible \r\n\t * @param {*} root \r\n\t * @param {*} definition \r\n\t * @returns \r\n\t */\r\n    static proxify(root, definition) {        \r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, definition));\r\n    }\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSVersion } from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        //if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        }\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport class GSPopper {\r\n\r\n\t/**\r\n\t * A simple wrapper to get element DOMRect\r\n\t * @param {HTMLElement} el \r\n\t * @returns {DOMRect}\r\n\t */\r\n\tstatic asRect(el) {\r\n\t\treturn el.getBoundingClientRect();\r\n\t}\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = GSPopper.asRect(el);\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = GSPopper.asRect(element);\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\r\n\t\tconst css = {\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '0px',\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.translate = `${obj.x}px ${obj.y}px`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tconst astyle = GSDynamicStyle.dynamicStyle(arrow);\r\n\r\n\t\tconst css = {\r\n\t\t\tinset: GSPopper.#inset(pos),\r\n\t\t\tposition: 'absolute',\r\n\t\t\tmargin: '0px',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\twidth: 'max-content',\r\n\t\t\theight: 'max-content',\t\t\t\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\t\tastyle.position = 'absolute';\r\n\r\n\t\tconst srect = GSPopper.asRect(source);\r\n\t\tconst arect = GSPopper.asRect(arrow);\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tconst aopt = {\r\n\t\t\ttranslate: `${arr.x}px ${arr.y}px`,\r\n\t\t\ttop: arr.top ? arr.top : '',\r\n\t\t\tleft: arr.left ? arr.left : ''\r\n\t\t}\r\n\r\n\t\tconst opt = {\r\n\t\t\ttranslate : `${obj.x}px ${obj.y}px`\r\n\t\t};\r\n\r\n\t\tObject.assign(style, opt);\r\n\t\tObject.assign(astyle, aopt);\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst opt = {};\r\n\r\n\t\topt.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\topt.left = '';\r\n\t\t\topt.top = '0px';\r\n\t\t\tshift = 0; //pos.isStart ? size : -1 * size;\r\n\t\t\topt.translate = `${shift}px ${arrowPosH / 2}px`;\r\n\t\t} else {\r\n\t\t\topt.top = '';\r\n\t\t\topt.left = '0px';\r\n\t\t\tshift = 0; //pos.isTop ? size : -1 * size;\r\n\t\t\topt.translate = `${arrowPosW}px ${shift}px`;\r\n\t\t}\r\n\r\n\t\tGSDynamicStyle.applyDynamicStyle(arrow, opt);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {\r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSQueryCSS } from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value);\r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n\r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t// return document.getElementById(tpl.slice(1));\r\n\t\t\treturn GSDOM.query(`template[id=\"${tpl.slice(1)}\"]`, true);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTheme class\r\n * @module base/GSTheme\r\n */\r\n\r\n/**\r\n * Switch between dark and light mode\r\n * @Class\r\n */\r\nexport class GSTheme {\r\n\r\n    static #STORAGE = 'gs-theme-mode';\r\n\r\n    /**\r\n     * Changes the theme to 'dark mode' and save settings to local stroage.\r\n     * Basically, replaces/toggles every CSS class that has '-light' class with '-dark'\r\n     * @param {HTMLElement} el \r\n     */\r\n    static darkMode(el) {\r\n        GSTheme.#switch(el, 'light', 'dark');\r\n    }\r\n\r\n    /**\r\n     * Changes the theme to 'light mode' and save settings to local stroage.\r\n     * @param {HTMLElement} el \r\n     */\r\n    static lightMode(el) {\r\n        GSTheme.#switch(el, 'dark', 'light');\r\n    }\r\n\r\n    static #switch(el, from = 'light', to = 'dark') {\r\n\r\n        const root = el || document.body;\r\n\r\n        // TODO  switch dark/light mode ?!??!? \r\n\r\n        // save last state\r\n        GSTheme.theme = to;\r\n    }\r\n\r\n    static get theme() {\r\n        return localStorage.getItem(GSTheme.#STORAGE);\r\n    }\r\n\r\n    static set theme(val) {\r\n        localStorage.setItem(GSTheme.#STORAGE, val);\r\n        window.dispatchEvent(new CustomEvent('gs-theme', { detail: val }));\r\n        const htmlEl = document.head.parentElement;\r\n        if (val) {\r\n            htmlEl.dataset.bsTheme = val;\r\n        } else {\r\n            delete htmlEl.dataset.bsTheme;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get system default theme by media query\r\n     * @returns {String} dark|light \r\n     */\r\n    static getSystemDefaultTheme() {\r\n        const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\r\n        return darkThemeMq.matches ? 'dark' : 'light';\r\n    }\r\n\r\n    static #onTheme(e) {\r\n        const q = new URLSearchParams(location.hash.slice(1));\r\n        GSTheme.theme = q.get('theme');\r\n    }\r\n\r\n    static #setup() {\r\n        window.addEventListener('hashchange', GSTheme.#onTheme)\r\n        let settings = localStorage.getItem(GSTheme.#STORAGE);\r\n        if (settings == null) {\r\n            settings = GSTheme.getSystemDefaultTheme();\r\n        }\r\n\r\n\r\n        if (settings == 'dark') return GSTheme.darkMode();\r\n        if (settings == 'light') return GSTheme.lightMode();\r\n        // TODO switch\r\n\r\n    }\r\n\r\n    static {\r\n        GSTheme.#setup();\r\n        globalThis.GSTheme = GSTheme;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-attribute - toggle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-call - calls a function on a given target (multipel functions supported)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: \r\n * data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * \r\n * data-gs-target determine element on which to execute,\r\n * if not specified, it means current element\r\n * \r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el) {\r\n        const me = this;\r\n        me.#host = el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = GSAttributeHandler.proxify(me.#host);\r\n    }\r\n\r\n    /**\r\n     * Main function to process element data-gs-* attributes\r\n     * @param {Event} e \r\n     */\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    /**\r\n     * Process each individual data-gs-* attribute\r\n     * @param {GSElement} host \r\n     * @param {String|HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleSwap(target);\r\n        me.#handleInject(host, target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    /**\r\n     * Bind provided value to the form or form element\r\n     * @param {HTMLFormElement|HTMLInputElement} target \r\n     * @param {Event} evt \r\n     * @returns \r\n     */\r\n    #handleBinding(target, evt) {\r\n        const source = evt.target.field || evt.target.form || evt.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (!(isField || isForm)) return;\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Trigger 'action' event on target to execute specific function\r\n     * @param {GSElement} target \r\n     */\r\n    #handleAction(target) {\r\n        if (this.action) GSEvents.send(target, 'action', this.action, true, true);\r\n    }\r\n\r\n    /**\r\n     * Set target attribute value\r\n     * @param {HTMLElement} target \r\n     * @returns \r\n     */\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    /**\r\n     * Set value to target propery\r\n     * @param {GSElement} target \r\n     * @returns \r\n     */\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle target css class\r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {*} host \r\n     * @param {*} target \r\n     * @param {*} evt \r\n     * @returns \r\n     */\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)();\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send an event to a target\r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    /**\r\n     * Inject HTML to target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleInject(host, target) {\r\n        if (this.inject) {\r\n            const src = this.#toHTML(this.inject);\r\n            const content = GSDOM.parse(src, true);\r\n            this.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Swap inner HTML on a target\r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleSwap(target) {\r\n        if (this.swap) target.innerHTML =  this.#toHTML(this.swap);\r\n    }\r\n\r\n    /**\r\n     * Convert value as URL to a tempalte or as a component name to inject\r\n     * @param {String} value \r\n     * @returns {String}\r\n     */\r\n    #toHTML(value = '') {\r\n        return value.indexOf('/') < 0 ? `<${value}></${value}>` : `<gs-template flat src=\"${value}\"></gs-template>`;\r\n    }\r\n\r\n    /**\r\n     * Load HTML template and apply to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    /**\r\n     * Apply htmltemplate to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} template \r\n     */    \r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    /**\r\n     * Apply html template to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} content \r\n     */    \r\n    #applyContent(host, target, content) {\r\n        if (host.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    deattach(name = 'click') {\r\n        //GSEvents.deattachListeners(this.#host);\r\n        const me = this;\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        me.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n        const me = this;\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                //return [GSDOM.root(me.#host)];\r\n                return [me.#host.parentComponent];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n        const list = GSDOM.queryAll(document.body, me.target, false, true).filter(el => el.tagName !== 'GS-ITEM'); \r\n        if (list.length === 0) list.push(me.#host);\r\n        return list;\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    /**\r\n     * Is property value JSON\r\n     */\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    /**\r\n     * Is element attribute value JSON\r\n     */\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    /**\r\n     * Wrap any element into data-gs-* handler\r\n     * @param {HTMLElement} el \r\n     * @returns {Proxy}\r\n     */\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    /**\r\n     * Process data-gs-* attributtes on a element\r\n     * @param {HTMLElement} el \r\n     * @param {Event} e \r\n     * @returns \r\n     */\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    /**\r\n     * Create a new attribute handler instance\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     * @param {boolean} override If 'false' will skip existing atributes\r\n     */\r\n    static clone(from, to, override = true) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .filter(o => override || !to.hasAttribute(o.attribute))          \r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    /**\r\n     * Check if component is bindable to events\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static isBindable(el) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        return Object.values(def)\r\n            .filter(o => el.hasAttribute(o.attribute))\r\n            .length > 0;\r\n\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig  last in, first out (LIFO) order of operations.\r\n */\r\nexport class Stack extends Array {\r\n    \r\n    push(item) {\r\n        this.unshift(item);\r\n    }\r\n\r\n    pop() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig first in, first out (FIFO) order of operations.\r\n */\r\nexport class Queue extends Array {\r\n    \r\n    enqueue(item) {\r\n        this.push(item);\r\n    }\r\n\r\n    dequeue() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst tree = new BinaryTree(1, 'AB');\r\n\r\ntree.insert(1, 11, 'AC');\r\ntree.insert(1, 12, 'BC');\r\ntree.insert(12, 121, 'BG', { right: true });\r\n\r\n[...tree.preOrderTraversal()].map(x => x.value);\r\n// ['AB', 'AC', 'BC', 'BCG']\r\n\r\n[...tree.inOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB', 'BC', 'BG']\r\n\r\ntree.value;                // 'AB'\r\ntree.hasChildren;          // true\r\n\r\ntree.find(12).isLeaf;           // false\r\ntree.find(121).isLeaf;          // true\r\ntree.find(121).parent.value;    // 'BC'\r\ntree.find(12).left;             // null\r\ntree.find(12).right.value;      // 'BG'\r\n\r\ntree.remove(12);\r\n\r\n[...tree.postOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB']\r\n*/\r\n\r\n/**\r\n * Binary Tree Node data holder\r\n */\r\nexport class BinaryTreeNode {\r\n\r\n    constructor(key, value = key, parent = null) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n\r\n    /**\r\n     * Check if both left and right are empty.\r\n     */\r\n    get isLeaf() {\r\n        return this.left === null && this.right === null;\r\n    }\r\n\r\n    /**\r\n     * Check if node has children\r\n     */\r\n    get hasChildren() {\r\n        return !this.isLeaf;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Binary tree implementation\r\n */\r\nexport class BinaryTree extends BinaryTreeNode {\r\n\r\n    constructor(key, value = key) {\r\n        super(key, value);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in in-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *inOrderTraversal(node = this) {\r\n        if (node.left) yield* this.inOrderTraversal(node.left);\r\n        yield node;\r\n        if (node.right) yield* this.inOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in post-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *postOrderTraversal(node = this) {\r\n        if (node.left) yield* this.postOrderTraversal(node.left);\r\n        if (node.right) yield* this.postOrderTraversal(node.right);\r\n        yield node;\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in pre-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *preOrderTraversal(node = this) {\r\n        yield node;\r\n        if (node.left) yield* this.preOrderTraversal(node.left);\r\n        if (node.right) yield* this.preOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to find the given parent node and \r\n     * insert a new child BinaryTreeNode either as the left or right child, \r\n     * depending on the passed options object.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @param {*} options \r\n     * @returns {boolean} Return true if data inserted\r\n     */\r\n    insert(\r\n        parentNodeKey,\r\n        key,\r\n        value = key,\r\n        { left, right } = { left: true, right: true }\r\n    ) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === parentNodeKey) {\r\n                const canInsertLeft = left && node.left === null;\r\n                const canInsertRight = right && node.right === null;\r\n                if (!canInsertLeft && !canInsertRight) return false;\r\n                if (canInsertLeft) {\r\n                    node.left = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n                if (canInsertRight) {\r\n                    node.right = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to remove a BinaryTreeNode from the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.left.key === key) {\r\n                node.left = null;\r\n                return true;\r\n            }\r\n            if (node.right.key === key) {\r\n                node.right = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to retrieve the given node in the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    find(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new DoublyLinkedList();\r\n\r\nlist.insertFirst(1);\r\nlist.insertFirst(2);\r\nlist.insertFirst(3);\r\nlist.insertLast(4);\r\nlist.insertAt(3, 5);\r\n\r\nlist.size;                      // 5\r\nlist.head.value;                // 3\r\nlist.head.next.value;           // 2\r\nlist.tail.value;                // 4\r\nlist.tail.previous.value;       // 5\r\n[...list].map(e => e.value);    // [3, 2, 1, 5, 4]\r\n\r\nlist.removeAt(1);               // 2\r\nlist.getAt(1).value;            // 1\r\nlist.head.next.value;           // 1\r\n[...list].map(e => e.value);    // [3, 1, 5, 4]\r\n\r\nlist.reverse();\r\n[...list].map(e => e.value);    // [4, 5, 1, 3]\r\n\r\nlist.clear();\r\nlist.size;                      // 0\r\n*/\r\n\r\n/**\r\n * Node data holder\r\n */\r\nexport class Node {\r\n\r\n    value = null;\r\n    next = null;\r\n    previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    release() {\r\n        this.value = undefined;\r\n        this.next = undefined;\r\n        this.previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DoublyLinkedList {\r\n\r\n    #nodes = [];\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     */\r\n    get size() {\r\n        return this.#nodes.length;\r\n    }\r\n\r\n    /**\r\n     * First element in the list\r\n     */\r\n    get head() {\r\n        return this.size ? this.#nodes[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Last elemet in the list\r\n     */\r\n    get tail() {\r\n        return this.size ? this.#nodes[this.size - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Create new linked node\r\n     * @param {*} value \r\n     * @param {*} nextNode \r\n     * @param {*} previousNode \r\n     * @returns \r\n     */\r\n    create(value, nextNode, previousNode) {\r\n        return new Node(value, nextNode, previousNode);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the given position in the list\r\n     * @param {*} index \r\n     * @param {*} value \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    insertAt(index, value, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index] || null;\r\n        const node = create(value, nextNode, previousNode);\r\n\r\n        if (previousNode) previousNode.next = node;\r\n        if (nextNode) nextNode.previous = node;\r\n        this.#nodes.splice(index, 0, node);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the beginning of the list\r\n     * @param {*} value \r\n     */\r\n    insertFirst(value) {\r\n        this.insertAt(0, value);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the end of the list\r\n     * @param {*} value \r\n     */\r\n    insertLast(value) {\r\n        this.insertAt(this.size, value);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data in the given index\r\n     * @param {Number} index \r\n     * @returns \r\n     */\r\n    getAt(index) {\r\n        return this.#nodes[index];\r\n    }\r\n\r\n    indexOf(val) {\r\n        return this.#nodes.indexOf(val);\r\n    }\r\n\r\n    /**\r\n     * Remove the data at the given index\r\n     * @param {*} index \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    removeAt(index, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index + 1] || null;\r\n\r\n        if (previousNode) previousNode.next = nextNode;\r\n        if (nextNode) nextNode.previous = previousNode;\r\n\r\n        return this.#nodes.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    clear(full = true) {\r\n        if (full) this.#nodes.forEach(o => o.release());\r\n        this.#nodes = [];\r\n    }\r\n\r\n    /**\r\n     * Reverse data order\r\n     */\r\n    reverse() {\r\n        this.#nodes = this.#nodes.reduce((acc, { value }) => {\r\n            const nextNode = acc[0] || null;\r\n            const node = new Node(value, nextNode, null);\r\n            if (nextNode) nextNode.previous = node;\r\n            return [node, ...acc];\r\n        }, []);\r\n    }\r\n\r\n    toArray() {\r\n        return this.#nodes.map(e => e.value);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#nodes;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield* this.#nodes;\r\n    }\r\n\r\n    #validate(index, safe = false) {\r\n        const isInvalid = this.#isInvalidIndex(index);\r\n        if (isInvalid) {\r\n            if (safe) {\r\n                console.log(this.#error());\r\n            } else {\r\n                throw new Error(this.#error());\r\n            }\r\n        }\r\n        return !isInvalid;\r\n    }\r\n\r\n    #isInvalidIndex(index) {\r\n        return !Number.isInteger(index) || index < 0 || index > this.size;\r\n    }\r\n\r\n    #error() {\r\n        return `Invalid index. Current length is ${this.size}.`;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        const list = new DoublyLinkedList();\r\n        if (Array.isArray(data)) data.forEach(v => list.insertLast(v));\r\n        return list;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Tree Node data holder\r\n */\r\nexport class Tree {\r\n\r\n    value;\r\n\r\n    #key = null;\r\n    #parent = null;\r\n    #children;\r\n\r\n    #folder = false;\r\n    #level = 0;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        this.#key = key;\r\n        this.#parent = parent;\r\n        this.#folder = value?.leaf === false;\r\n        this.#level = parent ? parent.level + 1 : level;\r\n        this.#children = this.#folder ? [] : undefined;\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Return tree list from root to this node.\r\n     * TODO: Refactor when iterator \"map\" become available\r\n     */\r\n    get subtree() {\r\n        return Array.from(this.up(undefined, false, true, true));\r\n    }\r\n\r\n    get levelID() {\r\n        return this.subtree.map(o => o.level).join('.');\r\n    }\r\n\r\n    /**\r\n     * Unique node canonical form\r\n     */\r\n    get nodeID() {\r\n        //if (this.parent?.level < 0) return this.index;\r\n        return this.subtree.map(o => o.index).join('.');\r\n    }\r\n\r\n    get path() {\r\n        return this.subtree.map(o => o.key).join('/');\r\n    }\r\n\r\n    get index() {\r\n        return this.parent?.nodes.indexOf(this) || 0;\r\n    }\r\n\r\n    get size() {\r\n        return this.#children?.length || -1;\r\n    }\r\n\r\n    get level() {\r\n        return this.#level;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Check if #children is empty\r\n     */\r\n    get isLeaf() {\r\n        return !this.#folder;\r\n    }\r\n\r\n    get isFolder() {\r\n        return this.#folder;\r\n    }\r\n\r\n    /**\r\n     * Check if has #childrens\r\n     */\r\n    get hasChildren() {\r\n        return this.#folder && this.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get key() {\r\n        this.#key ??= this.nodeID;\r\n        return this.#key;\r\n    }\r\n\r\n    get nodes() {\r\n        return this.#children;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get parent() {\r\n        return this.#parent;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n    /**\r\n     * Check if there are more siblings \r\n     */\r\n    get hasMore() {\r\n        return this.#parent?.size > this.index + 1;\r\n    }\r\n\r\n    get firstChild() {\r\n        return this.hasMore ? this.#children[0] : undefined;\r\n    }\r\n\r\n    get lastChild() {\r\n        return this.hasMore ? this.#children[this.#children.length - 1] : undefined;\r\n    }\r\n\r\n    get next() {\r\n        return this.down(this, false, false).next().value || this.nextSibling || this.parent?.nextSibling;\r\n    }\r\n\r\n    get previous() {\r\n        const node = this.previousSibling;\r\n        return (node?.hasChildren) ? node.lastChild : node || this.up(this, false, false).next().value;\r\n    }\r\n\r\n    get nextSibling() {\r\n        return this.hasMore ? this.#parent.#children[this.index + 1] : undefined;\r\n    }\r\n\r\n    get previousSibling() {\r\n        return this.index > 0 ? this.#parent.#children[this.index - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Clear all #children\r\n     */\r\n    clear() {\r\n        if (this.#children) {\r\n            this.#children.forEach(o => o.release?.());\r\n            this.#children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally, if called externally, \r\n     * make sure node is removed from parent \r\n     */\r\n    release() {\r\n        this.clear();\r\n        this.#key = null;\r\n        this.value = null;\r\n        this.#parent = null;\r\n    }\r\n\r\n    /**\r\n     * Walk down the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     * @param {Boolean} flat Navigate all nodes out of subtree\r\n     */\r\n    *down(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (node.#children?.length) {\r\n            for (let child of node.#children) {\r\n                yield* this.down(child, values, true, reverse, flat);\r\n            }\r\n        }\r\n        if (flat) {\r\n            const item = node.nextSibling || node.parent.nextSibling;\r\n            if (item) yield* this.down(item, values, true, reverse, flat);\r\n        }\r\n        /*\r\n        */\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk up the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     */\r\n    *up(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (flat) {\r\n            let item = node.previousSibling;\r\n            item = item?.isFolder ? item.lastChild : item\r\n            if (item) yield* this.up(item, values, true, reverse, flat);\r\n        }        \r\n        if (node.parent) {\r\n            yield* this.up(node.parent, values, true, reverse, flat);\r\n        }\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk through all nodes\r\n     * @param {*} node \r\n     */\r\n    walk = this.down;\r\n\r\n    /**\r\n     * Simulate array function \"forEach\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */\r\n    forEach(callback, flat = false, reverse = false) {\r\n        this.every((node, index) => {\r\n            callback(node, index);\r\n            return true;\r\n        }, flat, reverse);\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"every\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    every(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let sts = true;\r\n        let i = 0;\r\n        for (let node of it) {\r\n            sts = callback(node, i++);\r\n            if (!sts) break;\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"find\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    find(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let i = 0;\r\n        for (let node of it) {\r\n            if (callback(node, i++)) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"filter\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only childrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    filter(callback, flat, reverse) {\r\n        return [...this.#filtered(callback, flat, reverse)];\r\n    }\r\n\r\n    *#filtered(callback, flat, reverse) {\r\n        const it = this.iterate(flat, reverse);\r\n        for (let node of it) {\r\n            let res = callback(node);\r\n            if (res) yield node;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Iterate all nodes\r\n     * @param {boolean} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {boolean} reverse If set, will iterate up the tree\r\n     */\r\n    *iterate(flat, reverse) {\r\n        reverse ? yield* this.up(this, false, false, false, flat) : yield* this.down(this, false, false,  false, flat);\r\n    }\r\n\r\n    /**\r\n     * Add a new Tree to the tree.\r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    append(key, value = key) {\r\n        let newOne = undefined;\r\n        if (key instanceof Tree) {\r\n            key.#parent = this;\r\n            key.#level = this.#level + 1;\r\n            newOne = key;\r\n        } else {\r\n            newOne = new Tree(key, value, this);\r\n        }\r\n        this.#folder = true;\r\n        this.#children ??= [];\r\n        this.#children.push(newOne);\r\n        return newOne;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method and Array.prototype.push() \r\n     * to add a new Tree to the tree.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    insert(parentNodeKey, key, value = key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === parentNodeKey) {\r\n                const newOne = new Tree(key, value, node);\r\n                this.#folder = true;\r\n                this.#children ??= [];\r\n                node.#children.push(newOne);\r\n                return newOne;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove node from tree. If key is set, will search for first node with matching key.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n\r\n        const me = this;\r\n\r\n        if (key) {\r\n            const node = me.findByKey(key);\r\n            node?.remove();\r\n            return node;\r\n        }\r\n\r\n        if (me.isRoot) throw new Error('Root node can\\'t be removed!');\r\n        const node = me.parent;\r\n        const filtered = node.#children.filter(c => c !== me);\r\n        if (filtered.length !== node.#children.length) {\r\n            node.#children = filtered;\r\n            return me;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method to retrieve the given node in the tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    findByKey(key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convert tree into array list\r\n     * @returns \r\n     */\r\n    flatten(values, inclusive, reverse) {\r\n        return [...this.down(this, values, inclusive, reverse)];\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) Tree.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.#children?.map(o => o.toJSON()) || {};\r\n        return this.isLeaf ? { key: this.key, value: this.value } :\r\n            {\r\n                key: this.key,\r\n                value: this.value,\r\n                items: this.#children.map(o => o.toJSON())\r\n            }\r\n    }\r\n\r\n    /**\r\n     * Make node iterable\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.down();\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof Tree;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) throw new Error('Parent required when data is array');\r\n            raw.forEach(o => Tree.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        const tree = new Tree(obj.key, obj, data ? parent : undefined);\r\n        if (hasParent) parent.append(tree);\r\n        if (items) Tree.from(tree, items);\r\n        return tree;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../base/GSID.mjs\";\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynamic menu etc.\r\n * @Class\r\n */\r\nexport class GSAbstractReadWrite extends GSEvent {\r\n\r\n    static #SELECT = Symbol('select');\r\n\r\n    #id = null;\r\n    #processors = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to register\r\n     * @param {object} processor\r\n     */\r\n    addProcessor(processor) {\r\n        if (!processor) return;\r\n        this.#processors ??= new Set();\r\n        this.#processors.add(processor);\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to remove\r\n     * @param {object} processor \r\n     */    \r\n    removeProcessor(processor) {\r\n        if (processor) this.#processors?.delete(processor);\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Generic event dispatcher, can be overriden to controll when to fire event\r\n     * @param {*} owner \r\n     * @param {*} type \r\n     * @param {*} data \r\n     * @param {*} error \r\n     */\r\n    notify(owner, type, data, error) {\r\n        this.emit(error ? 'error' : type, { type: type, error: error, owner: owner, data: data }, true);\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.#processors?.forEach(c => c.postRead?.(data));\r\n            if (data) me.notify(owner, 'read', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'read', data, e);\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.#processors?.forEach(c => c.postWrite?.(data));\r\n            if (result) me.notify(owner, 'write', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'write', data, e);\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        if (!val) return false;\r\n        GSUtil.asArray(val).forEach(o => o[GSAbstractReadWrite.#SELECT] = true);\r\n        const me = this;\r\n        me.emit('selection-add', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        if (!val) return false;\r\n        delete val[GSAbstractReadWrite.#SELECT];\r\n        const me = this;\r\n        me.emit('selection-remove', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        const me = this;\r\n        GSUtil.asArray(data).forEach(o => me.removeSelected(o));\r\n        me.emit('selection-clear');\r\n        me.emit('select');\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    getSelected(data = []) {\r\n        const me = this;        \r\n        return GSUtil.asArray(data).filter(o => me.isSelected(o));\r\n    }\r\n\r\n    /**\r\n     * Check if record id is in list of selected records\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    isSelected(val) {\r\n        return val ? val[GSAbstractReadWrite.#SELECT] === true : false;\r\n    }\r\n\r\n    /**\r\n     * Get list of selected records.\r\n     * Override in inherited class\r\n     */\r\n    get selected() {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"../base/GSFunction.mjs\";\r\nimport { GSLoader } from \"../base/GSLoader.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSAbstractReadWrite } from \"./AbstractReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #TYPE = \"remote\";\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #key = null;\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically register in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */\r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */\r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return { ...this.#headers };\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = { ...val };\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     */\r\n    get key() {\r\n        return this.#key;\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     * @var {String} \r\n     */\r\n    set key(val) {\r\n        this.#key = val;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */\r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#filter = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#sort = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest', 'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#writer);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSReadWrite.#TYPE, GSReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSData } from \"../base/GSData.mjs\";\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSCachedReadWrite class\r\n * @module base/GSCachedReadWrite\r\n */\r\n\r\n/**\r\n * ReadWrite with cached memory data. \r\n * @Class\r\n */\r\nexport class GSCachedReadWrite extends GSReadWrite {\r\n\r\n    static #TYPE = 'cached';\r\n\r\n    #data = [];\r\n\r\n    #reformat(data = []) {\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        return records;\r\n    }\r\n\r\n    #postFilter(data) {\r\n        const me = this;\r\n        data = GSData.sortData(data, me.sort);        \r\n        let limit = me.limit === 0 ? data.length : me.limit;\r\n        data = data.slice(me.skip, me.skip + limit);\r\n        return data;\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelected(this.#data);\r\n        this.#data = [];\r\n    }\r\n\r\n    append(data) {\r\n        if(!data) return false;\r\n        const me = this;\r\n        data = me.#reformat(data);\r\n        me.#data = me.#data.concat(data);\r\n        return me.#data;\r\n    }\r\n\r\n    remove(data) {\r\n        const me = this;\r\n        me.removeSelected(data);\r\n        me.#data = me.#data.filter(o => o =! data);\r\n        return me.#data;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n\r\n        if (me.#data.length === 0) {\r\n            const data = await super.onRead();\r\n            me.#data = me.#reformat(data);\r\n        }\r\n\r\n        let data = GSData.filterData(me.#data, me.filter, me.fields, me.limit);\r\n        data = me.#postFilter(data);\r\n        return data;\r\n    }\r\n\r\n    async onWrite(owner, data) {\r\n        return this.append(data);        \r\n    }\r\n\r\n    disable() {\r\n        this.#data = [];\r\n        super.disable();\r\n    }\r\n\r\n    set search(val) {\r\n        const me = this;\r\n        me.filter = val ? [{value : val}] : [];\r\n        me.read();\r\n        /*\r\n        let data = GSData.filterData(me.#data, [{value : val}]);\r\n        data = me.#postFilter(data);\r\n        me.notify(me, 'read', data);\r\n        */\r\n    }\r\n\r\n    clearSelected() {\r\n        return super.clearSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return super.getSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSCachedReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSCachedReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSCachedReadWrite.#TYPE, GSCachedReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { Tree } from \"../helpers/Tree.mjs\";\r\n\r\n/**\r\n * A module loading TreeNode class\r\n * @module data/TreeNode\r\n */\r\n\r\n/**\r\n * UI mediator between Tree linked nodes and WebComponents\r\n * @Class\r\n */\r\nexport class TreeNode extends Tree {\r\n\r\n    #multi = false;\r\n    #opened = false;\r\n    #focused = false;\r\n    #selected = false;\r\n    \r\n    #focusedNode = undefined;\r\n    #selectedNode = undefined;\r\n    #controllers = undefined;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        super(key, value, parent, level);\r\n\r\n        if (value?.select === true || (this.multi && parent?.selected)) this.selected = true;\r\n        if (value?.focus === true) this.focused = true;\r\n        if (value?.open === true) this.opened = true;\r\n    }\r\n\r\n    addController(controller) {\r\n        const root = this.root;\r\n        (root.#controllers ??= new Set()).add(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.root.#controllers?.delete(controller);\r\n    }\r\n\r\n    /**\r\n     * Is multi selection available\r\n     */\r\n    get multi() {\r\n        return this.root.#multi === true;\r\n    }\r\n\r\n    set multi(val) {\r\n        this.root.#multi = val === true;\r\n    }\r\n\r\n    get visible() {\r\n        if (this.level < 0) return true;\r\n        return this.parent?.opened;\r\n    }\r\n\r\n    /**\r\n     * select single node, removing seelction flag from all other nodes\r\n     */\r\n    get opened() {\r\n        if (this.level < 0) return true;\r\n        return this.isLeaf ? this.parent?.opened : this.#opened;\r\n    }\r\n\r\n    set opened(val) {\r\n        val = val === true;\r\n        if (val) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus single node, removing focus flag from all other nodes\r\n     */\r\n    get focused() {\r\n        return this.#focused;\r\n    }\r\n\r\n    set focused(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const changed = this.#focused != val;\r\n        const focusedNode = root.focusedNode();\r\n        \r\n        root.#focusedNode = undefined;        \r\n        this.#focused = val;\r\n        if (focusedNode && focusedNode !== this) {\r\n            focusedNode.focused = false;\r\n        }\r\n\r\n        if (val) root.#focusedNode = this;\r\n        if (changed) root.#controllers?.forEach((c) => c.onFocusChanged?.(this));\r\n    }\r\n\r\n    /**\r\n     * Select single or multi node, depending on multi selection flag\r\n     * If single, remove selection flag from all other nodes\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    set selected(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const selectedNode = root.selectedNode();\r\n        const changed = this.#selected != val;\r\n        this.#selected = val;\r\n        if (val) {\r\n            if (selectedNode && selectedNode !== this && !root.multi) {\r\n                selectedNode.selected = false;\r\n            }\r\n            root.#selectedNode = this;\r\n        }\r\n        if (changed) {\r\n            root.#controllers?.forEach((c) => c.onSelectionChanged?.(this, selectedNode));\r\n            if (root.multi) root.#controllers?.forEach((c) => c.onSelectionChanged?.(this.parent, selectedNode));\r\n        } \r\n    }\r\n\r\n    get isPartialySelected() {\r\n        return this.selected && this.hasChildren && this.nodes.length > this.nodes.filter(n => n.selected).length;\r\n    }\r\n\r\n    /* hide from public\r\n    get host() {\r\n        return this[Symbol.for('gs-element')];\r\n    }\r\n\r\n    set host(el) {\r\n        this[Symbol.for('gs-element')] = el;\r\n    }\r\n    */\r\n\r\n    selectAll() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            this.deselectAll();\r\n            this.selected = true;\r\n            return\r\n        }\r\n        this.#selectionFlag(true);\r\n        root.#selectedNode = this;\r\n        root.#controllers?.forEach((c) => c.onSelectAll?.(root));\r\n    }\r\n\r\n    deselectAll() {\r\n        const root = this.root;\r\n        this.#selectionFlag(false);\r\n        root.#selectedNode = undefined;\r\n        root.#controllers?.forEach((c) => c.onDeselectAll?.(root));\r\n    }\r\n\r\n    /**\r\n     * Return last focused node\r\n     * @returns \r\n     */\r\n    focusedNode() {\r\n        const node = this.root.#focusedNode;\r\n        return node?.focused ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * Return last selected node\r\n     * @returns \r\n     */\r\n    selectedNode() {\r\n        const node = this.root.#selectedNode;\r\n        return node?.selected ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * List all selected nodes.\r\n     * TODO; refactor when Iterator.filter become available \r\n     * @returns \r\n     */\r\n    selectedNodes() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            const node = root.selectedNode()\r\n            return node?.selected ? [node] : [];\r\n        }\r\n        const result = [];\r\n        for (let node of root.walk()) {\r\n            if (node.selected) result.push(node);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Call from external controller data must be refresshed (to notify UI optionally)\r\n     * @param {*} root \r\n     */\r\n    refresh(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onRefresh?.(this));\r\n    }\r\n\r\n    /**\r\n     * Notify controllers about data loading (from async controller)\r\n     * @param {*} root \r\n     */\r\n    loading(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onLoad?.(this));\r\n    }\r\n\r\n    expandAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.expand(root);\r\n        }\r\n    }\r\n\r\n    collapseAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.collapse(root);\r\n        }\r\n    }\r\n\r\n    expand(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        if (!me.parent?.opened) {\r\n            me.parent?.expand(root);\r\n        }\r\n        const update = !me.opened;\r\n        me.#opened = true;\r\n        if (update) me.#expanded(root);\r\n        //me.nodes?.filter( n => !n.opened).forEach(c => c.refresh(root));\r\n        me.nodes?.forEach(c => c.refresh(root));\r\n    }\r\n\r\n    collapse(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        const update = me.#opened || me.parent.#opened;\r\n        me.nodes?.filter(n => n.opened || n.parent.opened).forEach(o => o.collapse(root));\r\n        //me.nodes?.forEach(o => o.collapse(root));\r\n        me.#opened = false;\r\n        if (update) me.#collapsed(root);\r\n    }\r\n\r\n    select(val = true) {\r\n        this.selected = val === true;\r\n    }\r\n\r\n    #expanded(root) {\r\n        root.#controllers?.forEach((c) => c.onExpand?.(this));\r\n    }\r\n\r\n    #collapsed(root) {\r\n        root.#controllers?.forEach((c) => c.onCollapse?.(this));\r\n    }\r\n\r\n    release() {\r\n        if (this.#selected) this.selected = false;\r\n        super.release();\r\n    }\r\n\r\n    append(key, value = key) {\r\n        const me = this;\r\n        const node = super.append(key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onAppend?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    insert(parentNodeKey, key, value = key) {\r\n        const me = this;\r\n        const node = super.insert(parentNodeKey, key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onInsert?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    remove() {\r\n        const node = super.remove();\r\n        if (node) this.root.#controllers?.forEach((c) => c.onInsert?.(node));\r\n        return node;\r\n    }\r\n\r\n    #selectionFlag(val = false) {\r\n        val = val === true\r\n        for (let node of this.walk()) {\r\n            node.selected = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) TreeNode.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.nodes?.map(o => o.toJSON()) || {};\r\n        const obj = Object.assign({\r\n            key: this.key,\r\n            opened: this.#opened,\r\n            focused: this.#focused,\r\n            selected: this.#selected,\r\n            items: undefined\r\n        }, this.value);\r\n        obj.items = this.nodes?.map(o => o.toJSON());\r\n        return obj;\r\n    }\r\n\r\n    static get root() {\r\n        return new TreeNode(null, null, null, -1);\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof TreeNode;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) return TreeNode.from(TreeNode.root, raw);\r\n            raw.forEach(o => TreeNode.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        obj.leaf = !Array.isArray(items);\r\n        const tree = new TreeNode(obj.key, obj, data ? parent : undefined);\r\n        if (items) TreeNode.from(tree, items);\r\n        if (hasParent) parent.append(tree);\r\n        return tree;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { TreeNode } from \"./TreeNode.mjs\";\r\n\r\n/**\r\n * A module loading GSTreeReader class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for reading Tree nodes\r\n * @Class\r\n */\r\nexport class GSTreeReader extends GSReadWrite {\r\n\r\n    #data = TreeNode.root;\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    async write(val) {\r\n        throw new Error('Writer not available for TreeReader')\r\n    }\r\n\r\n    async read(owner) {\r\n        const me = this;\r\n        let node = undefined;\r\n        const data = await super.read(owner);\r\n        if (!this.#data) {\r\n            node = TreeNode.from(data);\r\n            this.#data = node;\r\n        } else {\r\n            const parent = me.filter?.length > 0 ? me.#data.findByKey(me.filter[0]) : me.#data;\r\n            parent.clear();\r\n            node = parent.fromJSON(data);\r\n        }\r\n        me.filter = undefined;\r\n        me.notify(owner, 'read', node);\r\n        return node;\r\n    }\r\n\r\n    disable() {\r\n        super.disable();\r\n        this.#data?.release();\r\n    }\r\n\r\n    notify(owner, type, data, error) {\r\n        const isNode = data instanceof TreeNode;\r\n        if (!error && !isNode && type === 'read') return;\r\n        super.notify(owner, type, data, error);\r\n    }\r\n\r\n    /**\r\n     * Called from Tree when node is expanded \r\n     * @param {*} node \r\n     */\r\n    async onExpand(node) {\r\n        if (node.hasChildren) return;\r\n        node.loading();\r\n        this.filter = node.key;\r\n        return await this.read();\r\n    }\r\n\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSTreeReader} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSTreeReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('tree', GSTreeReader);\r\n    }\r\n\r\n}","// Lit 3.0 Google\r\nconst litUrl = globalThis.GS_LIT_URL || '/bootstrap-lit/assets/lib/lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const Directive = litModule.Directive;\r\nexport const LitElement = litModule.LitElement;\r\nexport const PartType = litModule.PartType;\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const adoptStyles = litModule.adoptStyles;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const createRef = litModule.createRef;\r\nexport const css = litModule.css;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const directive = litModule.directive;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getCompatibleStyle = litModule.getCompatibleStyle;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const guard = litModule.guard;\r\nexport const html = litModule.html;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isServer = litModule.isServer;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const literal = litModule.literal;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const noChange = litModule.noChange;\r\nexport const notEqual = litModule.notEqual;\r\nexport const nothing = litModule.nothing;\r\nexport const range = litModule.range;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const render = litModule.render;\r\nexport const repeat = litModule.repeat;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const staticHtml = litModule.staticHtml;\r\nexport const staticSvg = litModule.staticSvg;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const svg = litModule.svg;\r\nexport const templateContent = litModule.templateContent;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const unsafeStatic = litModule.unsafeStatic;\r\nexport const until = litModule.until;\r\nexport const when = litModule.when;\r\nexport const withStatic = litModule.withStatic;","import { Directive, directive, nothing } from \"../lib.mjs\";\r\n\r\nconst definition = {\r\n    'action': 'gsAction',\r\n    'anchor': 'gsAnchor',\r\n    'attribute': 'gsAttribute',\r\n    'call': 'gsCall',\r\n    'exec': 'gsExec',\r\n    'inject': 'gsInject',\r\n    'property': 'gsProperty',\r\n    'swap': 'gsSwap',\r\n    'target': 'gsTarget',\r\n    'template': 'gsTemplate',\r\n    'toggle': 'gsToggle',\r\n    'trigger': 'gsTrigger',\r\n    'value': 'gsValue'\r\n}\r\n\r\nconst template = {\r\n    'gsAction': undefined,\r\n    'gsAnchor': undefined,\r\n    'gsAttribute': undefined,\r\n    'gsCall': undefined,\r\n    'gsExec': undefined,\r\n    'gsInject': undefined,\r\n    'gsProperty': undefined,\r\n    'gsSwap': undefined,\r\n    'gsTarget': undefined,\r\n    'gsTemplate': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTrigger': undefined,\r\n    'gsValue': undefined\r\n}\r\n\r\nclass DatasetDirective extends Directive {\r\n\r\n    render(obj) {\r\n        console.log(obj);\r\n        return nothing;\r\n    }\r\n\r\n    update(part, [obj, flat = true]) {\r\n\r\n        if (!obj) return nothing;\r\n\r\n        const dataset = part.element.dataset;\r\n        const srcset = obj.dataset || obj;\r\n        const isDataset = srcset instanceof DOMStringMap;\r\n\r\n        if (isDataset) {\r\n            Object.assign(dataset, srcset);\r\n        } \r\n        \r\n        if (flat) this.#remap(dataset, obj);\r\n\r\n        return nothing;\r\n    }\r\n\r\n    #remap(dataset, obj) {\r\n        const opt = Object.assign({}, template);\r\n        const list = Object.entries(obj).filter(v => Object.hasOwn(definition, v[0]));\r\n        if (list.length > 0) {\r\n            list.forEach(kv => opt[definition[kv[0]]] = kv[1]);\r\n            Object.assign(dataset, opt);\r\n        }\r\n    }\r\n}\r\n\r\nexport const dataset = directive(DatasetDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\n\r\n/**\r\n * Generic object property descritptor getter\r\n * @param {Object} instance \r\n * @returns {PropertyDescriptor}\r\n */\r\nfunction descriptors(instance) {\r\n  return Object.entries(Object.getOwnPropertyDescriptors(instance));\r\n}\r\n\r\n/**\r\n * List of all object property descriptors \r\n * @param {Object} instance Object instance \r\n * @returns {Array<PropertyDescriptor>}\r\n */\r\nfunction listProperties(instance) {\r\n  return descriptors(instance)\r\n    .filter(e => typeof e[1].value !== 'function')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List all object property getters\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGetters(instance) {\r\n  return descriptors(Reflect.getPrototypeOf(instance))\r\n    .filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List of all getteble properties from an object\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGettable(instance) {\r\n  return new Set([...listGetters(instance), ...listProperties(instance)]);\r\n}\r\n\r\n/**\r\n * Parse string literal template into Lit html instance\r\n * @param {*} tpl \r\n * @param {*} params \r\n * @returns {function}\r\n */\r\nexport function literalTemplate(tpl, params) {\r\n  const names = Array.from(listGettable(params));\r\n  const vals = names.map(v => params[v]);\r\n  names.push('html');\r\n  vals.push(html);\r\n  return new Function(...names, `return html\\`${tpl}\\`;`)(...vals);\r\n}","/**\r\n * A clone of classMap directive to support CSS directive.\r\n * Lit classs is not expoed, so we have to clone it and create our own.\r\n */\r\n\r\nimport { Directive, PartType, directive, noChange } from \"../lib.mjs\";\r\n\r\nclass CssMapDirective extends Directive {\r\n\r\n    constructor(partInfo) {\r\n        super(partInfo);\r\n        if (partInfo.type !== PartType.ATTRIBUTE ||\r\n            partInfo.name !== 'css' ||\r\n            partInfo.strings?.length > 2) {\r\n            throw new Error('`classMap()` can only be used in the `css` attribute ' +\r\n                'and must be the only part in the attribute.');\r\n        }\r\n    }\r\n\r\n    render(classInfo) {\r\n        // Add spaces to ensure separation from static classes\r\n        return (' ' +\r\n            Object.keys(classInfo)\r\n                .filter((key) => classInfo[key])\r\n                .join(' ') +\r\n            ' ');\r\n    }\r\n\r\n    update(part, [classInfo]) {\r\n\r\n        // Remember dynamic classes on the first render\r\n        if (this._previousClasses === undefined) {\r\n            this._previousClasses = new Set();\r\n            if (part.strings !== undefined) {\r\n                this._staticClasses = new Set(part.strings\r\n                    .join(' ')\r\n                    .split(/\\s/)\r\n                    .filter((s) => s !== ''));\r\n            }\r\n\r\n            for (const name in classInfo) {\r\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\r\n                    this._previousClasses.add(name);\r\n                }\r\n            }\r\n            return this.render(classInfo);\r\n        }\r\n\r\n        const classList = part.element.classList;\r\n\r\n        // Remove old classes that no longer apply\r\n        for (const name of this._previousClasses) {\r\n            if (!(name in classInfo)) {\r\n                classList.remove(name);\r\n                this._previousClasses.delete(name);\r\n            }\r\n        }\r\n\r\n        // Add or remove classes based on their classMap value\r\n        for (const name in classInfo) {\r\n            // We explicitly want a loose truthy check of `value` because it seems\r\n            // more convenient that '' and 0 are skipped.\r\n            const value = !!classInfo[name];\r\n            if (value !== this._previousClasses.has(name) &&\r\n                !this._staticClasses?.has(name)) {\r\n                if (value) {\r\n                    classList.add(name);\r\n                    this._previousClasses.add(name);\r\n                } else {\r\n                    classList.remove(name);\r\n                    this._previousClasses.delete(name);\r\n                }\r\n            }\r\n        }\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * A directive that applies dynamic CSS classes.\r\n *\r\n * This must be used in the `css` attribute and must be the only part used in\r\n * the attribute. It takes each property in the `classInfo` argument and adds\r\n * the property name to the element's `classList` if the property value is\r\n * truthy; if the property value is falsey, the property name is removed from\r\n * the element's `css`.\r\n *\r\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\r\n * truthy.\r\n *\r\n * @param classInfo\r\n */\r\nexport const cssMap = directive(CssMapDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocapitalizeTypes = ['', 'none', 'off', 'on', 'sentences', 'words', 'characters'];\r\n\r\nexport const autocapitalize = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocapitalizeTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocompleteTypes = ['', 'off', 'on'];\r\n\r\nexport const autocomplete = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocompleteTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocorrectTypes = ['', 'on', 'off'];\r\n\r\nexport const autocorrect = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocorrectTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class ButtonTypes {\r\n\r\n    static values = ['button', 'reset', 'submit'];\r\n\r\n    static is(val) {\r\n        return ButtonTypes.values.includes(val);\r\n    }\r\n\r\n    static isReest(val) {\r\n        return ButtonTypes.values.indexOf(val) === 1;\r\n    }\r\n\r\n    static isSubmit(val) {\r\n        return ButtonTypes.values.indexOf(val) === 2;\r\n    }\r\n} \r\n\r\nexport const buttonType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ButtonTypes.is(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ColorTypes = ['', 'primary', 'secondary', 'dark', 'light', 'info', 'warning', 'danger', 'alert', 'link', 'success'];\r\n\r\nexport const color = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ColorTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'dektop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const InputTypes = [\r\n   { type: 'checkbox', ignore: true},\r\n   { type: 'radio', ignore: true},\r\n   { type: 'switch', ignore: true},\r\n   { type: 'range', ignore: true},\r\n   { type: 'number', native: true},\r\n   { type: 'email', native: true},\r\n   { type: 'url',  native: true},\r\n   { type: 'file', native: true}, \r\n   { type: 'text'},\r\n   { type: 'password'}\r\n];\r\n\r\nexport const inputType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && InputTypes.filter(o => o.type === newVal).length === 1;\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const NavTypes = ['', 'pills', 'tabs', 'underline'];\r\n\r\nexport const nav = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && NavTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PlacementTypes {\r\n\r\n    static values = ['center', 'left', 'right', 'start', 'end', 'top', 'bottom'];\r\n\r\n    static includes(val) {\r\n        return PlacementTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        return PlacementTypes.values.indexOf(val) > 4;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = PlacementTypes.values.indexOf(val)\r\n        return idx > 0 && idx < 5;\r\n    }\r\n\r\n    static isCenter(val) {\r\n        return PlacementTypes.values.indexOf(val) === 0;\r\n    }\r\n\r\n    static isBefore(val) {\r\n        return ['left', 'start', 'top'].includes(val);\r\n    }\r\n\r\n    static isAfter(val) {\r\n        return ['right', 'end', 'bottom'].includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const placement = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PlacementTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PositionTypes {\r\n\r\n    static values = ['absolute', 'fixed', 'relative', 'sticky', 'static'];\r\n\r\n    static includes(val) {\r\n        return PositionTypes.values.includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const position = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PositionTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const SizeTypes = { 'default' : '', 'normal': '',  'medium': '', 'small': 'sm', 'large': 'lg', 'big' : 'lg', 'extra' : 'xl' };\r\n\r\nexport const size = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && Object.hasOwn(SizeTypes, newVal);\r\n    }\r\n\r\n};","export const stringArrayConverter = {\r\n    fromAttribute: (value, type) => {\r\n        return (value || '').split(',');\r\n    },\r\n    toAttribute: (value, type) => {\r\n        return (value || []).join(',');\r\n    }\r\n  }","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCacheStyles } from '../base/GSCacheStyles.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time even gs-adopted is triggered by the GSAdoptedEngien class,\r\n * all registerd controller will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to preven dom node polution; \r\n * Style  changes  are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me.#host);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values, isGlobal = false) {\r\n    const me = this;\r\n    let style = null;\r\n    if (isGlobal) {\r\n      style = GSCacheStyles.dynamic;\r\n    } else {\r\n      me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');      \r\n      style = me.#dynamic;\r\n    }    \r\n    if (values === null && style.rules.length > 0 ) return style.removeRule(name);\r\n    return style.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.deattach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (!me.#isSelf() && me.#target) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs).forEach(el => el?.remove());\r\n      me.#refs.clear();\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n  #selectCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#selectCallback = me.#onSelect.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async relink(read = true) {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#listen(read);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.filter = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get selected() {\r\n    return this.store?.selected;\r\n  }\r\n\r\n  isSelected(val) {\r\n    return this.store?.isSelected(val);\r\n  }\r\n\r\n  addSelected(val) {\r\n    return this.store?.addSelected(val);\r\n  }\r\n  \r\n  removeSelected(val) {\r\n    return this.store?.removeSelected(val);\r\n  }\r\n\r\n  clearSelected(data) {\r\n    return this.store?.clearSelected(data);\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    storage?.on('read', me.#readCallback);\r\n    storage?.on('write', me.#writeCallback);\r\n    storage?.on('error', me.#errorCallback);\r\n    storage?.on('select', me.#selectCallback);\r\n    if (read) storage.read(me.#host);\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    storage?.off('read', me.#readCallback);\r\n    storage?.off('write', me.#writeCallback);\r\n    storage?.off('error', me.#errorCallback);\r\n    storage?.off('select', me.#selectCallback);\r\n  }\r\n\r\n  #onSelect(e) {\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for elment move events, properly handling mouse events.\r\n */\r\nexport class ElementMoveController {\r\n\r\n  #host;\r\n  #element;\r\n  #attached = false;\r\n\r\n  #cursorX = 0;\r\n  #cursorY = 0;\r\n\r\n  #mouseUpCallback;\r\n  #mouseDownCallback;\r\n  #mouseMoveCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n    me.#mouseUpCallback = me.#onMouseUp.bind(me);\r\n    me.#mouseDownCallback = me.#onMouseDown.bind(me);\r\n    me.#mouseMoveCallback = me.#onMouseMove.bind(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  attach(element) {\r\n    const me = this;\r\n    if (!me.#attached) {\r\n      me.#element = element;\r\n      me.#attached = true;\r\n      me.#host.attachEvent(me.#element, 'mousedown', me.#mouseDownCallback);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.#cursorX = 0;\r\n    me.#cursorY = 0;\r\n    me.#host.removeEvent(document, 'mouseup', me.#mouseUpCallback);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n  * Call host onStartMove function\r\n  * @param {MouseEvent} e \r\n  */\r\n  #onMouseDown(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n    me.#host.onStartMove?.(e, me.#cursorX, me.#cursorY);\r\n    me.#host.attachEvent(document, 'mouseup', me.#mouseUpCallback, true);\r\n    me.#host.attachEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n   * Remove mousemove listener and call host onEndMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseUp(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n    return me.#host.onEndMove?.(e, me.#cursorX, me.#cursorY);\r\n  }\r\n\r\n  /**\r\n   * Call host onMouseMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseMove(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n\r\n    me.#host.onMouseMove?.(e, me.#cursorX, me.#cursorY);\r\n\r\n    if (me.#cursorX < e.clientX) {\r\n      me.#host.onCursorRight?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorX > e.clientX) {\r\n      me.#host.onCursorLeft?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    if (me.#cursorY < e.clientY) {\r\n      me.#host.onCursorUp?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorY > e.clientY) {\r\n      me.#host.onCursorDown?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #locale;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#locale = host.locale;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#locale !== me.#host?.locale) {\r\n      me.#locale === me.#host?.locale;\r\n      me.updateLanguage(me.#locale);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#locale) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me.#host);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n  static #cache = new Map();\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  // inherited\r\n  hostConnected() {\r\n\r\n  }\r\n\r\n  // inherited\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  // inherited\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#template) return;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      me.#template = TemplateController.#cache.get(ref);      \r\n      me.#lastRef = ref;\r\n      if (ref && !me.#template) TemplateController.#schedule(this);\r\n    }\r\n  }\r\n\r\n  // inherited\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (me.#template) {\r\n      this.#host.removeController(this);\r\n      me.#host.templateInjected?.();\r\n    } \r\n\r\n  }\r\n\r\n  async #load() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (!ref) return;\r\n    let template = null;\r\n    const isTplEl = ref instanceof HTMLTemplateElement;\r\n    const cacheable = GSUtil.isString(ref);\r\n    if (cacheable) {\r\n      template = TemplateController.#cache.get(ref);\r\n    }\r\n    if (!template) {\r\n      template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n      if (cacheable) {\r\n        TemplateController.#cache.set(ref, template);\r\n      }       \r\n    }\r\n    if (template) {\r\n      me.#template = template;\r\n      me.#host.requestUpdate();\r\n    }\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    return GSDOM.templateRef(this.#host);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = false));\r\n    }\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle event when template slot changes\r\n */\r\nexport class SlotController {\r\n\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      const me = this;\r\n      const target = me.#host.renderRoot || me.#host;\r\n      me.#host.attachEvent(target, 'slotchange', me.#onSlotChanged.bind(me));\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    #onSlotChanged(e) {\r\n      e.target.assignedElements().forEach(el => {\r\n        el.onSlotInjected?.(e.target);\r\n      });\r\n    }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\nimport { SlotController } from './controllers/SlotController.mjs';\r\nimport { GSAttributeHandler } from './base/GSAttributeHandler.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    locale: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n  #orientation;\r\n  #localization;\r\n  #dataController;\r\n  #slotController;\r\n  #themes\r\n  #template;\r\n  #content;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.locale = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    //me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n    me.#slotController = new SlotController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    const tpl = GSDOM.templateRef(me);\r\n    if (tpl) me.#template = new TemplateController(me);    \r\n    if (me.isBindable) me.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('storage')) {\r\n      if (me.storage) {\r\n        if (!me.#dataController) {\r\n          me.#dataController = new DataController(me);\r\n        } else {\r\n          me.#dataController.relink();\r\n        }\r\n      } else {\r\n        me.#dataController?.hostDisconnected();\r\n        me.#dataController = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when this element injected in some slot\r\n   * @param {*} slot \r\n   */\r\n  onSlotInjected(slot) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return this.renderTemplate();\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : noChange;\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Called when asynchronnous template is injected into component\r\n   */\r\n  templateInjected() {\r\n    \r\n\t}\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to witch to add parsed CSS\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @param {boolean} isGlobal \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value, isGlobal = false) {\r\n    return this.#adopted.style(id, value, isGlobal);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @param {Number} levels - walk limit\r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '', levels = -1) {\r\n    return GSDOM.closest(this, query, levels);\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.locale, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    //return this.dataset.gsTarget;\r\n    return GSAttributeHandler.isBindable(this);\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template?.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment);\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os);\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol);\r\n  }\r\n\r\n  /**\r\n   * Internal attribute set if component is genrated by other components\r\n   */\r\n  get isGenerated() {\r\n    return this.hasAttribute('generated');\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Get instance of internal styles\r\n   */\r\n  get elementStyles() {\r\n    return this.constructor.elementStyles.map(s => Object.values(s).filter(o => o instanceof CSSStyleSheet).pop()).pop();\r\n  }\r\n\r\n  /**\r\n   * Internal shadow styles rule\r\n   * @param {*} name \r\n   * @returns \r\n   */\r\n  cssRule(name) {\r\n    return Array.from(this.elementStyles.rules).filter(r => r.selectorText === name).pop();\r\n  }\r\n\r\n  /**\r\n   * Set dynamic CSS rule \r\n   * See GSIcon hot it is done\r\n   * @param {*} rule \r\n   * @param {*} name \r\n   * @param {*} value \r\n   */\r\n  setCSSProperty(rule, name, value) {\r\n    this.cssRule(rule).style.setProperty(name, value);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    return GSDOM.allProperties(obj);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, opt);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from \"../GSElement.mjs\";\r\n\r\n/**\r\n * Controller for child element navigation / selection / focusing\r\n */\r\nexport class ElementNavigationController {\r\n\r\n  #host;\r\n  #attached;\r\n  #focused;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#attached = false;\r\n  }\r\n\r\n  get circular() {\r\n    return this.#host?.circular === true;\r\n  }\r\n\r\n  get multiple() {\r\n    return this.#host?.multiple === true;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host.active;\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */\r\n  init() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */  \r\n  attach(el) {\r\n    const me = this;\r\n    if (me.#attached) return;\r\n    me.#attached = true;\r\n    me.#host.attachEvent(el, 'keydown', e => me.onKeyDown(e));\r\n    me.#host.attachEvent(el, 'keyup', e => me.onKeyUp(e));\r\n    me.#host.attachEvent(el, 'click', e => me.onClick(e));\r\n    me.#host.attachEvent(el, 'focusin', e => me.onFocusIn(e));\r\n    me.#host.attachEvent(el, 'focusout', e => me.onFocusOut(e));\r\n  }\r\n\r\n  previous() {\r\n    const me = this;\r\n    let el = me.#focused?.previousElementSibling;\r\n    while (el?.disabled) el = el.previousElementSibling;\r\n    if (me.circular && !el) el = me.lastElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  next() {\r\n    const me = this;\r\n    let el = me.#focused?.nextElementSibling;\r\n    while (el?.disabled) el = el.nextElementSibling;\r\n    if (me.circular && !el) el = me.firstElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    const me = this;\r\n    const active = me.selected;\r\n    if (me.multiple) {\r\n      active.forEach(el => {\r\n        el.active = false;\r\n        el.blur();\r\n      });\r\n    } else if (active) {\r\n      active.active = false;\r\n      active.blur();\r\n    }\r\n    me.#focused = undefined;\r\n    me.#host?.emit('group-reset', undefined, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element selected\r\n   * @param {*} el \r\n   */\r\n  #onSelected(el) {\r\n    const me = this;\r\n    me.#host?.onSelected?.(el);\r\n    me.#host?.emit('group-selected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element deselected\r\n   * @param {*} el \r\n   */\r\n  #onDeselected(el) {\r\n    this.#host?.onDeselected?.(el);\r\n    this.#host?.emit('group-deselected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  #onFocused(el) {\r\n    this.#host?.onFocused?.(el);\r\n    this.#host?.emit('group-focused', el, true);\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  #isNavigable(el) {\r\n    return this.#host?.isNavigable ? this.#host?.isNavigable(el) : true;\r\n  }\r\n\r\n  #focus(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    me.#focused = el;\r\n    if (el) {\r\n      me.#onFocused(me.#focused);\r\n    }\r\n  }\r\n\r\n  #toggle(el) {\r\n    if (!el) return;\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    if (el.active) {\r\n      me.#onSelected(el);\r\n    } else {\r\n      me.#onDeselected(el);\r\n    }\r\n  }\r\n\r\n  #select(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n\r\n    const active = me.selected;\r\n    if (active && !me.multiple) {\r\n      active.active = false;\r\n      me.#toggle(active);\r\n    }\r\n\r\n    if (me.multiple) {\r\n      el.active = !el.active;\r\n    } else {\r\n      el.active = true;\r\n    }\r\n    me.#toggle(el);\r\n  }\r\n\r\n  onFocusOut(e) {\r\n    const me = this;\r\n    //if (me.#focused === e.target) me.#focused = undefined;\r\n  }\r\n\r\n  onFocusIn(e) {\r\n    const me = this;\r\n    me.#focus(e.target)\r\n  }\r\n\r\n  onClick(e) {\r\n    const me = this;\r\n    const el = e.composedPath()\r\n    .filter(el => el instanceof GSElement)\r\n    .filter(el => el.parentComponent === me.#host).pop();\r\n    if (!me.#isNavigable(el)) return;\r\n    if (e.ctrlKey) me.reset();\r\n    me.#onDeselected(me.selected);\r\n    me.#select(el);\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        me.next();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'Space':\r\n      case 'Enter':\r\n        me.#focused?.click();\r\n        break;\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEventBus } from \"../base/GSEventBus.mjs\";\r\n\r\n/**\r\n * Controller for multiple elements groups\r\n */\r\nexport class GroupController {\r\n\r\n  #host;\r\n\r\n  #busEvent;\r\n  #busCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    if (me.#host.group) {\r\n      me.#busCallback = me.#onBusEvent.bind(me);\r\n      me.#busEvent = GSEventBus.register(me.#host.clazzName);\r\n      me.#busEvent.on(me.#host.group, me.#busCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#busEvent?.off(me.#host.group, me.#busCallback);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  #onBusEvent(e) {\r\n    this.#host.onBusEvent?.(e);\r\n  }\r\n\r\n  notify(data) {\r\n    const me = this;\r\n    me.#busEvent?.emit(me.#host.group, {owner: me.#host, item:data}); \t\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\n\r\nexport class GSAccordionElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    autoclose: { type: Boolean },\r\n    cssItem: { reflect: true, attribute: 'css-item' },\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    data: { type: Array }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.settings;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n       @notify=\"${me.#onNotify.bind(me)}\"\r\n       @click=\"${me.#onClick}\" \r\n       @keyup=\"${me.#onKeyUp}\" \r\n       class=\"accordion ${classMap(me.renderClass())}\">\r\n       ${this.#renderItems()}\r\n       <slot></slot></div>`\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-accordion-item');\r\n  }\r\n\r\n  get settings() {\r\n    const cfg = this.constructor.properties;\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n  }\r\n\r\n  close() {\r\n    this.#state(false);\r\n  }\r\n\r\n  open() {\r\n    this.#state(true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-accordion-item generated\r\n        .opened=\"${ifDefined(o.disabled === true)}\" \r\n        message=\"${ifDefined(o.message)}\" \r\n        template=\"${ifDefined(o.template)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-accordion-item>`;\r\n    });\r\n  }\r\n\r\n  #state(val = false) {\r\n    this.items.forEach(el => el.opened = val);\r\n    this.notify();\r\n  }\r\n\r\n  #onNotify(e) {\r\n    const me = this;\r\n    if (me.autoclose && e.target.opened) {\r\n      me.items.filter(el => el != e.target).forEach(el => el.opened = false);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const isItemCloser = e?.composedPath()[0]?.matches('.accordion-button');\r\n    if(isItemCloser) e.target.toggle?.();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        e.target.close?.();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.target.open?.();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSAccordionItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    message: { reflect: true, },\r\n    title: { reflect: true, },\r\n    opened: { type: Boolean, reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-ACCORDION';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const owner = me.owner;\r\n    const cssHeader = me.cssHeader || owner?.cssHeader;\r\n    const cssBody = me.cssBody || owner?.cssBody;\r\n    return html`<div class=\"accordion-item ${me.css}\">\r\n             <h2 class=\"accordion-header\">\r\n               <button type=\"button\" \r\n                class=\"accordion-button  ${cssHeader} ${me.opened ? '' : 'collapsed'}\"> \r\n                 ${me.translate(me.title)}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse  ${cssBody} ${me.opened ? 'show' : ''}\">\r\n               <div class=\"accordion-body\">\r\n                   ${me.translate(me.message)}\r\n                   ${me.renderTemplate()}\r\n                   <slot></slot>\r\n               </div>\r\n             </div>      \r\n     </div>`\r\n  }\r\n\r\n  open() {\r\n    this.notify(true);\r\n  }\r\n  \r\n  close() {\r\n    this.notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.notify(!this.opened);\r\n  }\r\n\r\n  notify(val = false) {\r\n    const me = this;\r\n    me.opened = val;\r\n    super.notify();\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-accordion') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSAlertElement extends GSElement {\r\n\r\n    static properties = {\r\n        message: { reflect: true },\r\n        color: { ...color },\r\n        closed: { reflect: true, type: Boolean },\r\n        closable: { reflect: true, type: Boolean },\r\n        delay: { reflect: true, type: Number },\r\n    }\r\n\r\n    #ref;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.delay = 1;\r\n        this.#ref = createRef();\r\n        this.#data = this.#proxify(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div role=\"alert\" dir=\"${ifDefined(me.direction)}\" ${ref(me.#ref)} \r\n            @mouseover=\"${() => me.#pause = true}\"\r\n            @mouseout=\"${() => me.#pause = false}\"\r\n            class=\"alert fade ${classMap(me.renderClass())}\" >\r\n            ${me.#first}\r\n            ${me.renderTemplate()}\r\n            <slot></slot>\r\n            ${me.#second}\r\n        </div>`;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#handleBillboard();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        if (!changed.has('opened')) return;\r\n        this.#handleBillboard();\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': !me.closed,\r\n            'alert-dismissible': me.closable,\r\n            [`alert-${this.color}`]: me.color,\r\n\r\n        }\r\n        return css;\r\n    }\r\n\r\n    open() {\r\n        this.notify(false);\r\n    }\r\n\r\n    close() {\r\n        this.notify(true);\r\n    }\r\n\r\n    toggle() {\r\n        this.notify(!this.closed);\r\n    }\r\n\r\n    notify(val = false) {\r\n        const me = this;\r\n        me.closed = val;\r\n        if (me.closed) setTimeout(() => { me.#ref.value.classList.toggle('d-none', true) }, 250);\r\n        super.notify();\r\n    }\r\n\r\n    get isBillboard() {\r\n        return this.#data?.length > 0;\r\n    }\r\n\r\n    get #message() {\r\n        return this.translate(this.message);\r\n    }\r\n\r\n    get #first() { return this.rtl ? this.#button : this.#message; };\r\n\r\n    get #second() { return this.rtl ? this.#message : this.#button; };\r\n\r\n    get #button() {\r\n        return this.closable ? html`<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"${this.close}\"></button>` : '';\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, {message:{}}));\r\n    }\r\n\r\n    #handleBillboard() {\r\n        const me = this;\r\n        if (me.closed) {\r\n            clearInterval(me.#interval);\r\n            me.#interval = 0;\r\n        } else {\r\n            me.#billboard();\r\n        }        \r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        if (!me.isBillboard) return;\r\n        const items = me.#data;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].message;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].message;\r\n        }, me.delay * 1000);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-alert');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, size, buttonType, ButtonTypes, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSButtonElement extends GSElement {\r\n\r\n  static properties = {\r\n    type: { ...buttonType }, // reset, submit\r\n    size: { ...size }, // small, large, normal\r\n    color: { ...color },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    toggleColor: { ...color, attribute : 'toggle-color' },\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    outline: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    toggling: { type: Boolean },\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    text: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'button';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<button part=\"button\" role=\"button\" ${ref(me.#refEl)}\r\n        dir=\"${ifDefined(me.direction)}\"\r\n        type=\"${ifDefined(me.type)}\" \r\n        class=\"btn ${classMap(me.renderClass())}\" \r\n        title=\"${ifDefined(me.#tooltip)}\"\r\n        ?disabled=${me.disabled}\r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"\r\n        @click=\"${me.#onClick}\">\r\n          ${me.#first} ${me.#second}</button>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n      'focus-ring': document.activeElement === me,\r\n      [`text-${me.text}`]: me.text,\r\n      [`btn-${size}`]: size,\r\n      [`btn-outline-${me.color}`]: me.outline,\r\n      [`btn-${me.color}`]: !me.outline && me.color,\r\n      [`btn-${me.toggleColor}`]: me.active && me.toggleColor,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    if(me.toggling) me.toggle();\r\n    me.iconEl?.animate();\r\n    if (me.isReset) return me.form?.reset();\r\n    if (me.isSubmit) return me.form?.submit();\r\n    me.notify();\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get isReset() {\r\n    return ButtonTypes.isReest(this.type);\r\n  }\r\n\r\n  get isSubmit() {\r\n    return ButtonTypes.isSubmit(this.type);\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form, form');\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #tooltip() {\r\n    return this.translate(this.tooltip);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-button');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { unsafeHTML, classMap, html, ifDefined, css } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\n\r\nexport class GSCalendarElement extends GSElement {\r\n\r\n  static styles = css`.year::-webkit-outer-spin-button,.year::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;} .year {-moz-appearance: textfield;} .day:focus{font-weight: bold;}`\r\n\r\n  static properties = {\r\n    date: {},\r\n    target: {},\r\n    format: { hasChanged: notEmpty },\r\n    year: { type: Number },\r\n    month: { type: Number, hasChanged: numGE0 },\r\n    day: { type: Number, hasChanged: numGE0 },\r\n    arrovPrev: { attribute: 'arrow-prev' },\r\n    arrowNext: { attribute: 'arrow-next' },\r\n    cssDays: { attribute: 'css-days' },\r\n    cssToday: { attribute: 'css-today' },\r\n    cssWeeks: { attribute: 'css-weeks' },\r\n    cssMonth: { attribute: 'css-month' },\r\n    cssYear: { attribute: 'css-year' },\r\n    cssNav: { attribute: 'css-nav' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    minYear: { attribute: 'year-min', type: Number },\r\n    maxYear: { attribute: 'year-max', type: Number },\r\n  }\r\n\r\n  #date;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.#date = new GSDate();\r\n    me.#date.locale = GSUtil.locale;\r\n    me.locale = GSUtil.locale;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.minYear = 1900;\r\n    me.maxYear = 2100;\r\n    me.arrowPrev = '&#10094;';\r\n    me.arrowNext = '&#10095;';\r\n    me.cssNav = 'btn-light';\r\n    me.cssToday = 'btn-secondary';\r\n    me.cssSelected = 'btn-primary';\r\n    me.cssWeeks = 'fw-bold text-bg-dark';\r\n    me.cssYear = 'form-control fs-5 fw-bold border-0 text-center m-1 p-0';\r\n    me.cssMonth = 'form-control fs-3 fw-bold border-0 text-center m-1 p-0';\r\n  }\r\n\r\n  get date() {\r\n    const me = this;\r\n    //return this.#date.toISOString();\r\n    return new Proxy(this.#date, {\r\n      set(target, prop, value) {\r\n        if (typeof target[prop] != 'function') {\r\n          target[prop] = value;\r\n          me.#update();\r\n        }\r\n        return true;\r\n      },\r\n      get(target, prop, receiver) {\r\n        const value = target[prop];\r\n        if (value instanceof Function) {\r\n          return function (...args) {\r\n            try {\r\n              return value.apply(this === receiver ? target : this, args);\r\n            } finally {\r\n              me.#update();\r\n            }\r\n          };\r\n        }\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  previousMonth() {\r\n    const me  =this;\r\n    if (me.month == 0) {\r\n      me.month = 11;\r\n      me.year--;\r\n    } else {\r\n      me.month--;\r\n    }\r\n  }\r\n\r\n  nextMonth() {\r\n    const me  =this;\r\n    if (me.month == 11) {\r\n      me.month = 0;\r\n      me.year++;\r\n    } else {\r\n      me.month++;\r\n    } \r\n  }\r\n\r\n  previousYear() {\r\n    this.year--;\r\n  }\r\n\r\n  nextYear() {\r\n    this.year++;\r\n  }\r\n\r\n  formatted(date) {\r\n    const me = this;\r\n    return (date || me.#date).format(me.format, me.locale);\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    const date = new GSDate(me.#date);\r\n    me.#updateTarget(date);\r\n    me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#date.year = me.year;\r\n    me.#date.month = me.month;\r\n    me.#date.day = me.day;\r\n    me.#date.locale = me.locale;\r\n\r\n    const week = GSDate.dayList(true, me.locale).map(v => html`<div class=\"col\">${v}</div>`);\r\n    const months = me.#monthsHTML();\r\n    const year = me.#yearHTML();\r\n\r\n    return html`\r\n          <div class=\"container-fluid text-center ${classMap(me.renderClass())}\"\r\n          dir=\"${ifDefined(me.direction)}\"\r\n          @keydown=\"${me.#onKey}\"\r\n          @click=\"${me.#onDay}\">\r\n          <div class=\"row align-items-center ${me.cssHeader} header\">\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.previousMonth}\" class=\"btn ${me.cssNav} arrow prev\">${unsafeHTML(me.arrowPrev)}</a>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  ${months}\r\n                  ${year}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.nextMonth}\" class=\"btn ${me.cssNav} arrow next\">${unsafeHTML(me.arrowNext)}</a>\r\n              </div>\r\n          </div>\r\n          <div class=\"row weeks ${me.cssWeeks}\">${week}</div>\r\n          ${unsafeHTML(me.#daysHTML())}\r\n      </div>`;\r\n  }\r\n\r\n  #updateTarget(date) {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    const tgt = GSDOM.query(document.documentElement, me.target);\r\n    if (!tgt) return;\r\n\r\n    if (tgt instanceof HTMLInputElement) {\r\n      if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n      return tgt.value = me.formatted(date);\r\n    }\r\n    GSDOM.setHTML(tgt, me.formatted(date));\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.locale = me.#date.locale;\r\n  }\r\n\r\n  #isToday(v, date) {\r\n    const me = this;\r\n    return v && GSUtil.asNum(v) === date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n  }\r\n\r\n  #daysHTML() {\r\n    const me = this;\r\n    const today = new GSDate();\r\n    today.locale = me.locale;\r\n    const list = me.#date.build(me.locale);\r\n    const result = list\r\n      .map(v => {\r\n        const c1 = me.#isToday(v, today) ? me.cssToday : '';\r\n        const c2 = me.#isToday(v, me.#date) ? me.cssSelected : '';\r\n\r\n        const d = v ? `<a tabindex=\"0\" href=\"#\" class=\"btn shadow-none ${c1} ${c2} day\" data-day=\"${v}\">${v}</a>` : ''\r\n        return `<div class=\"col p-0\">${d}</div>`;\r\n      })\r\n      .map((v, i) => {\r\n        if (i === 0) return `<div class=\"row days\">${v}`;\r\n        const isBreak = i % 7 == 0;\r\n        return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n      });\r\n    result.push('</div>');\r\n    return result.join('');\r\n  }\r\n\r\n\r\n  #monthsHTML() {\r\n    const me = this;\r\n    const current = me.#date.MMMM;\r\n    const months = GSDate.monthList(false, me.locale);\r\n    const list = months.map((v, i) => html`<option value=\"${i}\" selected=${ifDefined(current == v ? true : undefined)}>${v}</option>`);\r\n    //const list = GSDate.monthList(false, me.locale).map((v, i) => html`<option value=\"${i}\" ${current == v ? 'selected' : ''}>${v}</option>`);\r\n    return html`<select @change=\"${me.#onMonth}\" name=\"month\" class=\"month ${me.cssMonth}\" value=\"${months.indexOf(current)}\">${list}</select>`;\r\n  }\r\n\r\n  #yearHTML() {\r\n    const me = this;\r\n    return html`<input @change=\"${me.#onYear}\" name=\"year\" class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n  }\r\n\r\n  #onDay(e) {\r\n    GSEvents.prevent(e);\r\n    if (!e.target.classList.contains('day')) return;\r\n    this.day = GSUtil.asNum(e.target.dataset.day, this.day);\r\n  }\r\n\r\n  #onMonth(e) {\r\n    this.month = e.target.selectedIndex;\r\n  }\r\n\r\n  #onYear(e) {\r\n    this.year = e.target.value;\r\n  }\r\n\r\n  #onKey(e) {\r\n    console.log(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-calendar');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCardElement extends GSElement {\r\n\r\n  static styles = css`.card-header, .card-footer{ background-color: inherit; color: inherit;}`;\r\n\r\n  static properties = {\r\n\r\n    imageStyle: { type: Object, attribute: 'image-style', reflect : true },\r\n\r\n    overlay: { type: Boolean },\r\n    placement: { ...placement },\r\n    align: { ...placement },\r\n\r\n    image: {},\r\n    title: {},\r\n    subtitle: {},\r\n    text: {},\r\n    footer: {},\r\n    header: {},\r\n\r\n    colorText: { attribute: 'color-text' },\r\n    colorBack: { attribute: 'color-back' },\r\n    colorBorder: { attribute: 'color-border' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssSubtitle: { attribute: 'css-subtitle' },\r\n    cssText: { attribute: 'css-text' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssImage: { attribute: 'css-image' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.border = false;\r\n    this.shadow = false;\r\n    this.align = 'start';\r\n    this.placement = 'top';\r\n    this.imageStyle = this.imageStyle || {};\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const content =  me.isVertical ? me.#renderVertical() : me.#renderHorizontal();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"card ${classMap(me.renderClass())}\">${content}</div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return [me.#imageTop, me.#header, me.#body, me.#footer, me.#imageBottom];\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    const start = PlacementTypes.isBefore(me.placement);\r\n    const startClass = start ? 'col-4' : 'col-8';\r\n    const endClass = start ? 'col-8' : 'col-4';\r\n    const startHtml = start ? me.#images : me.#body;\r\n    const endHtml =  start ? me.#body : me.#images;\r\n    return html`<div class=\"row g-0\">\r\n        <div class=\"${startClass}\">\r\n            ${startHtml}\r\n        </div>\r\n        <div class=\"${endClass}\">\r\n          ${endHtml}\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      border: me.border || me.colorBorder,\r\n      [`text-${me.align}`]: me.align,\r\n      [`text-${me.colorText}`]: me.colorText,\r\n      [`bg-${me.colorBack}`]: me.colorBack,\r\n      [`border-${me.colorBorder}`]: me.colorBorder,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return PlacementTypes.isHorizontal(this.placement);\r\n  }\r\n\r\n  get #body() {\r\n    const me = this;\r\n    return html`<div class=\"${me.overlay ? 'card-img-overlay' : 'card-body'} ${me.cssBody}\">\r\n      <h5 class=\"card-title  ${me.cssTitle}\"><slot name=\"title\">${me.translate(me.title)}</slot></h5>\r\n      <h6 class=\"card-subtitle  ${me.cssSubtitle}\"><slot name=\"subtitle\">${me.translate(me.subtitle)}</slot></h6>\r\n      <p class=\"card-text ${me.cssText}\"><slot name=\"text\">${me.translate(me.text)}</slot></p>\r\n      <slot name=\"body\"></slot>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  get #header() {\r\n    return this.overlay ? '' : html`<div class=\"card-header  ${this.cssHeader}\"><slot name=\"header\">${this.header}</slot></div>`;\r\n  }\r\n\r\n  get #footer() {\r\n    return this.overlay ? '' : html`<div class=\"card-footer ${this.cssFooter}\"><slot name=\"footer\">${this.footer}</slot></div>`;\r\n  }\r\n\r\n  get #imageSlot() {\r\n    return html`<slot name=\"image\"></slot>`;\r\n  }\r\n\r\n  get #image() {\r\n    const me = this;\r\n    const css = me.isHorizontal ? 'img-fluid' : 'card-img';\r\n    me.dynamicStyle(me.#styleID, me.imageStyle);\r\n    return html`<img src=\"${me.image}\" class=\"rounded-${me.placement} ${css} ${me.cssImage} ${me.#styleID}\" alt=\"...\">`;\r\n  }\r\n\r\n  get #images() {\r\n    return this.image ? this.#image : this.#imageSlot;\r\n  }\r\n\r\n  get #imageTop() {\r\n    return this.placement === 'top' ? this.#images : '';\r\n  }\r\n\r\n  get #imageBottom() {\r\n    return this.placement === 'bottom' ? this.#images : '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-card');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSCenterElement extends GSElement {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n      class=\"position-absolute top-50 start-50 translate-middle ${classMap(me.renderClass())}\">\r\n    ${me.renderTemplate()}<slot></slot></div>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-center');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenuElement class\r\n * @module components/GSMenuElement\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSMenuElement extends GSElement {\r\n\r\n    static properties = {\r\n        storage: {},\r\n        auto: { type: Boolean, reflect: true },\r\n        opened: { type: Boolean, reflect: true },\r\n        dark: { type: Boolean },\r\n        reverse: { type: Boolean },\r\n        offset: { type: Number },\r\n        data: { type: Array },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {},\r\n        title: {},\r\n        header: {},\r\n        color: {},\r\n        icon: {},\r\n        url: { default: '#' }\r\n    }\r\n\r\n    #menuRef = createRef();\r\n    #styleID = GSID.id;\r\n    #controller = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.offset = 0;\r\n        me.dynamicStyle(me.#styleID);\r\n        me.data = me.#proxify(me);\r\n        me.#controller = new GroupController(this);\r\n    }\r\n\r\n    onBusEvent(e) {\r\n       if (e.detail.owner != this) {\r\n            this.opened = false;\r\n       }\r\n     }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        if (changed.has('opened') && !this.opened) {\r\n            this.#closeSubmenus();\r\n        }\r\n    }\r\n\r\n    updated() {\r\n        this.#updatePosition();\r\n        if (this.opened) {\r\n            this.#controller.notify();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<ul \r\n            ${ref(me.#menuRef)}\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            class=\"dropdown-menu ${classMap(me.renderClass())}\"\r\n            data-gs-class=\"${me.#styleID}\"\r\n            data-menu=\"true\"\r\n            @mouseover=\"${me.#onMouseOver}\"\r\n            @mouseleave=\"${me.#onMouseLeave}\"\r\n            @keydown=\"${me.#onKeyDown}\"\r\n            @click=\"${me.#onClick}\">\r\n            ${me.#items(me.data)}\r\n        </ul>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'submenu': me.dataset.submenu,\r\n            'dropdown-menu-dark': me.dark,\r\n            [me.#styleID]: true,\r\n            'show': me.opened,\r\n            'dropend': !me.reverse,\r\n            'dropstart': me.reverse,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    /**\r\n     * Show at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {HTMLElement} caller\r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n\r\n        const me = this;\r\n        // offset to render under the mouse,\r\n        // important for GSGrid for better UI experience\r\n        const offset = GSUtil.asNum(me.offset, 0);\r\n        let target = caller;\r\n\r\n        if (GSEvents.isMouseOrPointerEvent(x)) {\r\n            const e = x;\r\n            target = e.target;\r\n            y = e.clientY;\r\n            x = e.clientX;\r\n            let offset = GSDOM.offsetParent(me);\r\n            offset = offset ? offset.getBoundingClientRect() : null;\r\n            x = x - (offset?.left || 0);\r\n            y = y - (offset?.top || 0);\r\n        }\r\n\r\n        const cfg = { clientX: x - offset, clientY: y - offset, target: target };\r\n\r\n        requestAnimationFrame(() => {\r\n            const style = {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                left: '0px',\r\n                translate: `${cfg.clientX}px ${cfg.clientY}px`\r\n            };\r\n            const rule = me.dynamicStyle(me.#styleID);\r\n            Object.assign(rule.style, style);\r\n        });\r\n        me.open();\r\n\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    #items(root) {\r\n        const me = this;\r\n        return root.map(el => me.#item(el));\r\n    }\r\n\r\n    #item(el) {\r\n        const me = this;\r\n        const isSub = el.items?.length > 0;\r\n        if (isSub) return me.#renderSubmenu(el);\r\n        if (!(el.header || el.name)) return me.#renderDivider();\r\n        return el.header ? me.#renderHeader(el) : me.#renderMenu(el);\r\n    }\r\n\r\n    #renderHeader(el) {\r\n        return html`<li data-inert=\"true\"><h6 class=\"dropdown-header\">${this.#renderIcon(el)}${el.header}</h6></li>`;\r\n    }\r\n\r\n    #renderDivider() {\r\n        return html`<li data-inert=\"true\"><hr class=\"dropdown-divider\"></li>`;\r\n    }\r\n\r\n    #renderSubmenu(el) {\r\n        const me = this;\r\n        return html`<li>\r\n            <a class=\"dropdown-item dropdown-toggle\" data-toggle=\"true\" href=\"#\">\r\n                <div class=\"d-inline-block w-100\">${me.#renderIcon(el)}${el.name}</div>\r\n            </a>\r\n            <gs-menu auto \r\n                .data=${el.items} \r\n                ?dark=${me.dark} \r\n                ?reverse=\"${me.reverse}\" \r\n                locale=\"${ifDefined(me.locale)}\" \r\n                data-submenu=\"true\">\r\n            </gs-menu>\r\n        </li>`;\r\n    }\r\n\r\n    #renderIcon(el) {\r\n        return el.icon ? html`<gs-icon css=\"mx-1\" name=\"${el.icon}\"></gs-icon>` : '';\r\n    }\r\n\r\n    #renderMenu(el) {\r\n        return html`<li>\r\n                <gs-button css=\"dropdown-item shadow-none\" \r\n                    ${dataset(el, false)}\r\n                    url=\"${el.url}\"\r\n                    title=\"${el.name}\" \r\n                    locale=\"${ifDefined(this.locale)}\" \r\n                    icon=\"${ifDefined(el.icon)}\" \r\n                    text=\"${ifDefined(el.color)}\"\r\n                    data-gs-target=\"${ifDefined(el.target || 'self')}\"\r\n                    data-gs-action=\"${ifDefined(el.action)}\">\r\n                </gs-button></li>`;\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSMenuElement.options));\r\n    }\r\n\r\n    #closeSubmenus(menu) {\r\n        GSDOM.queryAll(this.renderRoot, 'gs-menu', false, false)\r\n            .filter(el => el != menu)\r\n            .forEach(el => el.close());\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.key) {\r\n            case 'Escape':\r\n                me.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        submenu?.close();\r\n        if (me.auto) me.close();\r\n    }\r\n\r\n    #onMouseLeave(e) {\r\n        GSEvents.prevent(e);\r\n        if (this.auto) this.close();\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        me.#closeSubmenus(submenu);\r\n        submenu?.open();\r\n    }\r\n\r\n    #toSubmenu(e) {\r\n        const menuItem = e.target.closest('li');\r\n        return menuItem?.querySelector('gs-menu');\r\n    }\r\n\r\n    #updatePosition() {\r\n        const me = this;\r\n        if (!me.opened) return;\r\n        const rule = me.dynamicStyle(me.#styleID);\r\n        if (me.isSubmenu) {\r\n            const opt = { translate: `0px -25px` };\r\n            if (me.reverse) {\r\n                opt.left = 'inherited';\r\n                opt.right = '100%';\r\n            } else {\r\n                opt.right = 'inherited';\r\n                opt.left = '100%';\r\n            }\r\n            Object.assign(rule.style, opt);\r\n        } else {\r\n            rule.style.translate = null;\r\n            const rect = me.#menu.getBoundingClientRect();\r\n            const offset = window.innerWidth - rect.right;\r\n            me.reverse = offset - 5 < 0;\r\n            if (me.reverse) rule.style.translate = `${offset - 2}px`;\r\n        }\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.dataset.submenu;\r\n    }\r\n\r\n    get #menu() {\r\n        return this.#menuRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-menu');\r\n    }\r\n}\r\n","/*GSContextElement\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContextElement class\r\n * @module components/GSContextElement\r\n */\r\n\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for context menu\r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSContextElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        target: {},\r\n        filter: {},\r\n        altContext: { type: Boolean },\r\n        disabled: { type: Boolean },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;        \r\n        me.auto = true;\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n            me.target = \"tbody\";\r\n            me.filter = \"[selected]\";\r\n            me.offset =\"4\";\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', me.close.bind(me));        \r\n        if (!me.slot) me.#attachTarget();\r\n    }\r\n    \r\n    onSlotInjected(slot) {\r\n        this.#attachTarget();\r\n    }\r\n\r\n    #attachTarget() {\r\n        const me = this;        \r\n        const owner = GSDOM.parent(me.assignedSlot || me);\r\n        let targets = me.target ? GSDOM.queryAll(owner, me.target) : [owner];\r\n        if (!targets.length) targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    }\r\n\r\n    #match(e) {\r\n        const me = this;\r\n        return e.composedPath().filter(el => el.matches)\r\n            .filter(el => el.matches(me.filter ? me.filter : me.target));\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        if (e.shiftKey && me.altContext) return;\r\n        const list = me.#match(e);\r\n        if (list.length === 0) return;\r\n        GSEvents.prevent(e);\r\n        me.popup(e);\r\n        return true;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    /**\r\n     * Show submenu at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n        return this.disabled ? false : super.popup(x, y, caller);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-context');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, notEmpty } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\nexport class GSCompareElement extends GSElement {\r\n\r\n  static styles = css`.slider {\r\n         --gs-position : 50%;\r\n          left : var(--gs-position);\r\n          width: 8px;\r\n          height: 100%;\r\n          border-width: 1px;\r\n          cursor: w-resize;\r\n          border-color: darkgray;\r\n          border-style: solid;\r\n          background-color: lightgray;\r\n      }\r\n      .clipper {\r\n        --gs-position : 50%;\r\n        clip-path: inset(0px var(--gs-position) 0px 0px);\r\n      }\r\n    `;\r\n\r\n  static properties = {\r\n    background: { ...color },\r\n    width: { type: Number },\r\n    height: { type: Number },\r\n    before: { hasChanged: notEmpty },\r\n    after: { hasChanged: notEmpty },\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  #elRef = createRef();\r\n  #clipRef = createRef();\r\n  #slideRef = createRef();\r\n\r\n  #mouseController;\r\n  #elPosition;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.width = 0;\r\n    me.height = 0;\r\n    me.dynamicStyle(me.#styleID);\r\n    me.#mouseController = new ElementMoveController(me);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#mouseController.attach(this.#splitter);\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n         dir=\"${ifDefined(me.direction)}\"\r\n         @loaded=\"${me.#onLoad}\" \r\n         @dblclick=\"${me.#onDoubleClick}\"\r\n         data-gs-class=\"${me.#styleID}\"\r\n         class=\"${classMap(me.renderClass())}\">\r\n      <div class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden\"><slot name=\"before\">${me.#before}</slot></div>\r\n      <div ${ref(me.#clipRef)} class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden clipper\"><slot name=\"after\">${me.#after}</slot></div>\r\n      <div ${ref(me.#slideRef)} class=\"slider position-absolute top-0><slot name=\"control\"></slot></div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      \"position-relative\": true,\r\n      \"user-select-none\": true,\r\n      \"d-contents\": me.isAuto,\r\n      \"h-100\": me.isAuto,\r\n      \"w-100\": me.isAuto,\r\n      \"overflow-hidden\": true,\r\n      [`bg-${me.background}`]: me.background,\r\n      [`${me.#styleID}`]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Handles resizing based on mouse move event\r\n   * @param {MouseEvent} e \r\n   */\r\n  onStartMove(e) {\r\n    this.#elPosition = this.#splitter.getBoundingClientRect();\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    const me = this;\r\n    const offset = me.#elPosition.left;\r\n    const width = me.#elPosition.width;\r\n    const pos = GSUtil.range(e.clientX - offset, 0, width);\r\n    const pct = (pos / width) * 100;\r\n    me.#update(pct);\r\n  }\r\n\r\n  get isAuto() {\r\n    return this.width == 0 || this.height == 0;\r\n  }\r\n\r\n  get isFixed() {\r\n    return !this.isAuto;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  get #before() {\r\n    return this.before ? html`<img @load=\"${this.#onLoad}\" src=\"${me.before}\"></img>` : '';\r\n  }\r\n\r\n  get #after() {\r\n    return this.after ? html`<img @load=\"${this.#onLoad}\" src=\"${me.after}\"></img>` : '';\r\n  }\r\n\r\n  get #isAuto() {\r\n    return this.width === 0 || this.height === 0;\r\n  }\r\n\r\n  get #splitter() {\r\n    return this.#elRef.value;\r\n  }\r\n\r\n  get #slider() {\r\n    return this.#slideRef.value;\r\n  }\r\n\r\n  get #clip() {\r\n    return this.#clipRef.value;\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const me = this;\r\n    if (me.#isAuto) {\r\n      const el = e.target;\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n    }\r\n  }\r\n\r\n  #onDoubleClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#update();\r\n    me.#mouseController.reset();\r\n  }\r\n\r\n  #update(pct = 50) {\r\n    const me = this;\r\n    me.#clip.style.setProperty('--gs-position', `${100 - pct}%`);\r\n    me.#slider.style.setProperty('--gs-position', `${pct}%`);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-compare');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\n\r\n/**\r\n * Helper component to enable controller attachment to the GS WebComponent.\r\n * It is used to simplify and separate templates from logic.\r\n */\r\nexport class GSControllerElement extends GSElement {\r\n\r\n  static properties = {\r\n    module: {},\r\n    controller: {},\r\n  }\r\n\r\n  #clazz = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  updated(changes) {\r\n    super.updated(changes);\r\n    const me = this;\r\n    if (me.isConnected && me.isValid) {\r\n      me.#initialize();\r\n    }\r\n  }\r\n\r\n  get isValid() {\r\n    return this.parentElement instanceof GSElement;\r\n  }\r\n\r\n  async #initialize() {\r\n\r\n    const me = this;\r\n    const host = me.parentElement;\r\n\r\n    if (me.#clazz) return;\r\n\r\n    let clazz = globalThis[me.controller];\r\n    if (!clazz && me.module) {\r\n      const url = GSLoader.normalizeURL(me.module);\r\n      const module = await import(url);\r\n      clazz = module[me.controller];\r\n    }\r\n\r\n    if (clazz) {\r\n      new clazz(host);\r\n      me.#clazz = clazz;\r\n      globalThis[me.controller] = clazz;\r\n    }\r\n\r\n  }\r\n\r\n  static {\r\n    this.define('gs-controller');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSCopyrightElement extends GSElement {\r\n\r\n  static properties = {\r\n    year: { reflect: true, type: Number },\r\n    company: { reflect: true },\r\n    url: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    if (!(me.isCompany && me.isYear)) return '';\r\n    const year = new Date().getFullYear();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"${classMap(me.renderClass())}\"><a target=\"_blank\" href=\"${me.url ? me.url : '#'}\"><small>&copy; ${me.company} ${me.year}. - ${year}.</small></a></div>`;\r\n  }\r\n\r\n  get isCompany() {\r\n    return GSUtil.isStringNonEmpty(this.company);\r\n  }\r\n\r\n  get isYear() {\r\n    return GSUtil.isStringNonEmpty(this.year);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-copyright');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSFunction } from '../base/GSFunction.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/verificator.mjs';\r\nimport { GSReadWriteRegistry } from '../data/ReadWriteRegistry.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for easier access to the GSReadWrite/GSTreeReader\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSDataHandler extends GSElement {\r\n\r\n    static properties = {\r\n        storage: { state: true },\r\n        src: { reflect: true },\r\n        action: { reflect: true },\r\n        mode: { reflect: true },\r\n        reader: { reflect: true },\r\n        writer: { reflect: true },\r\n        limit: { type: Number, reflect: true },\r\n        skip: { type: Number, reflect: true },\r\n        filter: { type: Array, reflect: true },\r\n        sort: { type: Array, reflect: true },\r\n        type: {},\r\n        autoload: { type: Boolean },\r\n        autorefresh: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    }\r\n\r\n    #iid = 0;\r\n    #config = null;\r\n    #handler = null;\r\n    #lifoReadRef = null;\r\n    #lifoWriteRef = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        me.autorefresh = 0;\r\n        me.autoload = false;\r\n        me.flat = true;\r\n        me.filter = [];\r\n        me.sort = [];\r\n        me.limit = 0;\r\n        me.skip = 0;\r\n        me.src = '';\r\n        me.type = 'remote';\r\n        me.mode = 'query';\r\n        me.reader = 'GET';\r\n        me.writer = 'POST';\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n          }\r\n        if (!me.isGenerated && !me.id) throw new Error('Element ID is required attribute!');\r\n        GSItem.validate(me, me.tagName);\r\n    }\r\n    \r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        const itemHolder = me.isGenerated && me.childElementCount === 0 ? me.parentComponent : me;\r\n        me.#config = GSItem.proxify(itemHolder, GSData.PROPERTIES);\r\n        me.#initLIFO(true);\r\n        me.#initLIFO(false);\r\n    }\r\n    \r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        me.#handler?.disable();\r\n        me.#handler?.removeProcessor(me);\r\n        me.#lifoReadRef = null;\r\n        me.#lifoWriteRef = null;\r\n        clearTimeout(me.#iid);\r\n    }\r\n    \r\n    firstUpdated() {\r\n        const me = this;\r\n        me.#handler = GSReadWriteRegistry.newHandler(me.type, me.storage, false);\r\n        if (me.#config?.length > 0) me.#handler?.addProcessor(me);\r\n        me.#updateHandler();\r\n        me.#handler?.enable();\r\n        me.dataController?.read();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        const me = this;\r\n        me.#updateHandler();\r\n        if (changed.has('autorefresh')) me.schedule(me.autorefresh);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.key = me.key;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.formatSort(me.sort);\r\n        me.#handler.filter = me.formatFilter(me.filter);\r\n        if (me.autoload) me.read();\r\n    }\r\n\r\n    get isDebug() {\r\n        return this.dataset.gsDebug;\r\n    }\r\n\r\n    get handler() {\r\n        return this.#handler;\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    get isCached() {\r\n        return this.#handler?.type == 'cached';\r\n    }\r\n\r\n    set search(val) {\r\n        if (this.#handler) this.#handler.search = val;\r\n    }\r\n\r\n    get key() {\r\n        return this.#config.filter(o => o.key).map(o => o.name).pop() || null;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    formatFilter(val) {\r\n        val = this.#formated(val);\r\n        return Array.isArray(val) ? val : [];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    formatSort(val) {\r\n        val = this.#formated(val);\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort || [];\r\n    }\r\n\r\n    schedule(time = 0) {\r\n        const me = this;\r\n        time = GSUtil.asNum(time) * 1000;\r\n        clearInterval(me.#iid);\r\n        if (time > 0) me.#iid = setInterval(() => {\r\n            me.read(me);\r\n        }, time);\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data, append = false) {\r\n        return this.#lifoWriteRef(data, append);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return this.#handler?.selected;\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        return this.#handler?.addSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        return this.#handler?.removeSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        return this.#handler?.clearSelected();\r\n    }\r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onDataRead(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data Read: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onDataWrite(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data write: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Process data after receive, before notifying \r\n     * @param {*} data \r\n     */\r\n    postRead(data) {\r\n        const me = this;\r\n        if (!Array.isArray(data)) data = [data];\r\n        data.forEach(r => {\r\n            me.#config.forEach(c => {\r\n                let val = r[c.name];\r\n                if (!GSUtil.isNull(val)) {\r\n                    val = GSData.format(c, val);\r\n                    r[c.name] = val;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onDataError(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data error: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #initLIFO(read = true) {\r\n        const me = this;\r\n        if (read) {\r\n            me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n        } else {\r\n            me.#lifoWriteRef = GSFunction.callOnceLifo(me.#lifoWriteRefCallback, me);\r\n        }\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO(true);\r\n        return me.#lifoCall(true);\r\n    }\r\n\r\n    #lifoWriteRefCallback(data, append) {\r\n        const me = this;\r\n        me.#initLIFO(false);\r\n        return me.#lifoCall(false, data, append);\r\n    }\r\n    \r\n    #lifoCall(read = true, data, append) {\r\n        const me = this;\r\n        me.#verifyHandler();        \r\n        if (read) return me.#handler?.read(me);        \r\n        if (!append) me.#handler.clear();\r\n        return me.#handler?.write(me, data);\r\n    }\r\n\r\n    #formated(val) {\r\n        return GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    static {\r\n        this.define('gs-data-handler');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { size, SizeTypes } from '../properties/size.mjs';\r\n\r\nexport class GSDialogElement extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n  static ALIGN = 'end';\r\n  static CANCEL = 'Cancel';\r\n  static CONFIRM = 'Ok';\r\n\r\n  static #STACK = [];\r\n\r\n  static styles = css`dialog{--bs-modal-width: 500px;width:var(--bs-modal-width);outline:none;}dialog::backdrop{backdrop-filter: blur(4px);}`;\r\n\r\n  static properties = {\r\n\r\n    standard: { reflect: true, type: Boolean },\r\n    opened: { reflect: true, type: Boolean },\r\n    cancelable: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    escapable: { reflect: true, type: Boolean },\r\n    disabled: { reflect: true, type: Boolean },\r\n\r\n    size : size,\r\n\r\n    title: { reflect: true },\r\n    message: { reflect: true },\r\n    cancelText: { reflect: true, },\r\n    confirmText: { reflect: true, },\r\n\r\n    minWidth: { reflect: true, type: Number, attribute: 'min-width' },\r\n    buttonAlign: { reflect: true, attribute: 'button-align' },\r\n\r\n    iconCancel: { reflect: true, attribute: 'icon-cancel' },\r\n    iconConfirm: { reflect: true, attribute: 'icon-confirm' },\r\n\r\n    colorCancel: { attribute: 'color-cancel' },\r\n    colorConfirm: { attribute: 'color-confirm' },\r\n\r\n    cssCancel: { attribute: 'css-cancel' },\r\n    cssConfirm: { attribute: 'css-confirm' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssContent: { attribute: 'css-content' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #dialogRef = createRef();\r\n  #btnConfirmRef = createRef();\r\n  #btnCancelRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    const clazz = GSDialogElement;\r\n    me.opened = false;\r\n    me.standard = false;\r\n    me.cancelable = false;\r\n    me.closable = false;\r\n    me.escapable = false;\r\n    me.disabled = false;\r\n    me.shadow = false;\r\n    me.rounded = false;\r\n\r\n    me.minWidth = 0;\r\n    me.css = clazz.CSS;\r\n    me.cssTitle = clazz.TITLE_CSS;\r\n    me.cssHeader = clazz.HEADER_CSS;\r\n    me.buttonAlign = clazz.ALIGN;\r\n    me.cancelText = clazz.CANCEL;\r\n    me.confirmText = clazz.CONFIRM;\r\n    me.colorCancel = 'secondary';\r\n    me.colorConfirm = 'primary';\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialogElement.#updateStack();\r\n  }\r\n\r\n  updated(changed) {\r\n    super.updated(changed);\r\n    if (changed.has('opened')) {\r\n      this.#onOpenChanged();\r\n    }\r\n  }\r\n\r\n  #onOpenChanged() {\r\n    const me = this;\r\n    let state = null;\r\n    if (me.opened) {\r\n      GSDialogElement.#STACK.push(me);\r\n      state = 'opening';\r\n      if (me.standard) {\r\n        me.#dialog?.open();\r\n      } else {\r\n        me.#dialog?.showModal();\r\n      }\r\n      me.#focusable()?.focus();\r\n    } else {\r\n      state = 'closing';\r\n      GSDialogElement.#STACK.pop();\r\n      me.#dialog?.close();\r\n    }\r\n    me.notify(true, false, state);\r\n  }\r\n\r\n  #renderConfirm() {\r\n    const me = this;\r\n    if (!me.closable) return '';\r\n    return html`<gs-button  ${ref(me.#btnConfirmRef)} \r\n      @click=\"${me.#onConfirm.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconConfirm)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      .disabled=\"${me.disabled}\"  \r\n      css=\"${ifDefined(me.cssConfirm)}\" \r\n      color=\"${ifDefined(me.colorConfirm)}\" \r\n      title=\"${me.confirmText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderCancel() {\r\n    const me = this;\r\n    if (!me.cancelable) return '';\r\n    return html`<gs-button ${ref(me.#btnCancelRef)}\r\n      @click=\"${me.#onCancel.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconCancel)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      css=\"${ifDefined(me.cssCancel)}\" \r\n      color=\"${ifDefined(me.colorCancel)}\" \r\n      title=\"${me.cancelText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderFooter() {\r\n    const me = this;\r\n    const isFooter = me.cancelable || me.closable;\r\n    if (!isFooter) return '';\r\n    return html`<div class=\"card-footer d-flex user-select-none justify-content-${me.buttonAlign} ${me.cssFooter}\">\r\n      ${me.#renderCancel()} &nbsp;${me.#renderConfirm()}\r\n      </div>`;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const styles = { \r\n      'min-width': me.minWidth > 0 ? `${me.minWidth}px` : undefined \r\n    };\r\n    me.dynamicStyle(me.#styleID, styles);\r\n    return html`\r\n        <dialog tabindex=\"-1\" ${ref(me.#dialogRef)} \r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @close=\"${me.#onCancel.bind(me)}\"\r\n            @cancel=\"${me.#onCancel.bind(me)}\"\r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @form=\"${me.#onForm.bind(me)}\"\r\n            @submit=\"${me.#onSubmit.bind(me)}\"\r\n            class=\"${classMap(me.renderClass())}\">\r\n            <div class=\"card ${me.cssContent}\">\r\n                <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n                  <div class=\"card-title ${me.cssTitle}\">\r\n                    <slot name=\"title\">${me.translate(me.title)}</slot>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body ${me.cssBody}\">\r\n                  <slot name=\"body\">\r\n                  ${me.translate(me.message)}\r\n                  ${me.renderTemplate()}\r\n                  </slot>\r\n                </div>\r\n                ${me.#renderFooter()}\r\n            </div>\r\n            <slot name=\"extra\"></slot>\r\n            <div class=\"toast-container position-fixed\"></slot></div>\r\n        </dialog>`\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'dialog': true,\r\n      'p-0': true,\r\n      'border-0': true,\r\n      [me.#styleID]: true,\r\n      [`modal-${size}`]: size ? true : false\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.closable = closable;\r\n    me.cancelable = cancelable;\r\n    me.escapable = cancelable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('click-action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    return this.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    return this.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    index = GSUtil.asNum(index, 0);\r\n    const me = this;\r\n    me.forms?.forEach?.(f => { f.reset(); f.data = data; });\r\n    const tab = me.tab;\r\n    if (tab && index > -1) tab.index = index;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  get form() {\r\n    return this.query('gs-form', true);\r\n  }\r\n\r\n  get forms() {\r\n    return this.queryAll('gs-form', true);\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('gs-tab', true);\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.#dialogRef.value;\r\n  }\r\n\r\n  get #btnConfirm() {\r\n    return this.#btnConfirmRef.value;\r\n  }\r\n\r\n  get #btnCancel() {\r\n    return this.#btnCancelRef.value;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  #focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#btnCancel;\r\n    if (me.closable) return me.#btnConfirm;\r\n    return me;\r\n  }\r\n\r\n  async #onConfirm(e) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const ret = await Promise.all(me.forms?.map?.(form => form.submit()));\r\n    if (ret.indexOf(false) < 0) me.close();\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.close();\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle injected form events\r\n   * @param {*} e \r\n   */\r\n  #onForm(e) {\r\n    let  sts = true;\r\n    const me = this;\r\n    const data = e.detail;\r\n    switch (data.type) {\r\n      case 'submit':\r\n        sts = me.emit('data', data.data, false, false, true);\r\n        if (!sts) GSEvents.prevent(e);\r\n        //me.opened = false;\r\n        break;\r\n      case 'valid':\r\n        me.disabled = data.data === false;     \r\n        break;\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  #onSubmit(e) {\r\n    debugger;\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialogElement.#STACK = GSDialogElement.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  /**\r\n   * Return number of dialogs in a stack\r\n   */\r\n  static get size() {\r\n    return GSDialogElement.#STACK.length;\r\n  }\r\n\r\n  static get top() {\r\n    GSDialogElement.#updateStack();\r\n    const size = GSDialogElement.size;\r\n    return size === 0 ? null :  GSDialogElement.#STACK[size - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialogElement.#updateStack();\r\n    return Array.from(GSDialogElement.#STACK);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-dialog');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, unsafeHTML, html, ifDefined } from '../lib.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSDrawerElement extends GSElement {\r\n\r\n  static properties = {\r\n    autoclose: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    backdrop: { reflect: true, type: Boolean },\r\n    expanded: { reflect: true, type: Boolean },\r\n    scroll: { reflect: true, type: Boolean },\r\n\r\n    min: { reflect: true, type: Number},\r\n    max: { reflect: true},\r\n    fingers: { reflect: true, type: Number},\r\n    placement: {...placement},\r\n    \r\n    transition: { reflect: true },\r\n    duration: { reflect: true, type: Number },\r\n\r\n    title: { reflect: true},\r\n\r\n    cssTitle: { reflect: true, attribute: \"css-title\"},\r\n    cssHead: { reflect: true, attribute: \"css-head\" },\r\n    cssBody: { reflect: true, attribute: \"css-body\" },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.placement = 'start';\r\n    me.cssTitle = 'fs-5';\r\n    me.transition = 'linear';\r\n    me.duration = 0.2;\r\n    me.min = 0;\r\n    me.max = 'auto';\r\n    me.fingers = 2;\r\n    me.on('mouseleave', me.#onLeave.bind(me));\r\n    me.on('mouseenter', me.#onEnter.bind(me));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`${unsafeHTML(me.#style)}\r\n    <div tabindex=\"-1\" dir=\"${ifDefined(me.direction)}\"\r\n     class=\"offcanvas overflow-hidden anime ${classMap(me.renderClass())}\">\r\n      ${me.#header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        ${me.renderTemplate()}\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>${me.#backdrop}`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': true,\r\n      'anime-open' : me.expanded,\r\n      'anime-close' : !me.expanded,\r\n      [`offcanvas-${me.placement}`]: me.placement,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #style() {\r\n    const me = this;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    return `<style>\r\n    .anime {\r\n      transition-property: ${pos} !important;\r\n      transition-duration: ${me.duration}s  !important;\r\n      transition-timing-function: ${me.transition} !important;\r\n    }\r\n    .anime-open {\r\n        ${pos} : ${me.max}${GSUtil.isNumber(me.max) ? 'px':''} !important;\r\n    }\r\n    .anime-close {\r\n      ${pos} : ${me.min}${GSUtil.isNumber(me.min) ? 'px':''} !important;\r\n    }    \r\n    </style>`;\r\n  }\r\n\r\n  get #backdrop() {\r\n    const me = this;\r\n    if (!me.backdrop) return '';\r\n    return html`<div class=\"offcanvas-backdrop fade ${me.expanded ? 'show' : 'invisible'}\" @click=\"${me.close}\"></div>`;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    return me.closable ? html`<button type=\"button\" class=\"btn-close text-reset\" @click=\"${me.close}\"></button>` : '';\r\n  }\r\n\r\n  get #title() {\r\n    const me = this;\r\n    return me.title ? html`<div class=\"offcanvas-title ${me.cssTitle}\">${me.translate(me.title)}</div>` : '';\r\n  }\r\n\r\n  get #header() {\r\n    const me = this;\r\n    return me.#hasHeader ? html`<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${me.#title}${me.#button}</slot></div>` : '';\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  get #hasHeader() {\r\n    return this.title || this.closable || this.#headSlot;\r\n  }\r\n\r\n  #notify(val) {\r\n    const me = this;\r\n    me.expanded = val == true;\r\n    me.notify();\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  open() {\r\n    this.#notify(true);\r\n  }\r\n\r\n  close() {\r\n    this.#notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.#notify(!this.expanded);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return !this.isVertical;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-drawer');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdownElement class\r\n * @module components/GSDropdownElement\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { cssMap } from '../directives/css-map.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDropdownElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        icon: {},\r\n        text: {...color},\r\n        color: {...color},\r\n        size: {},\r\n        title: {},\r\n        tooltip: {},\r\n        group: {},\r\n        simple: {type:Boolean}\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"dropdown\"  dir=\"${ifDefined(me.direction)}\">\r\n                ${me.#renderButton()}\r\n                ${super.renderUI()}\r\n            </div>`;\r\n    }\r\n\r\n    #buttonClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'btn': true,\r\n            [`btn-${me.color}`] : me.color ? true : false,\r\n            'dropdown-toggle': !me.simple,\r\n            'shadow-none' : true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    #renderButton() {\r\n        const me = this;\r\n        return html`<gs-link css=\"${cssMap(me.#buttonClass())}\"\r\n            url=\"#\"         \r\n            icon=\"${ifDefined(me.icon)}\"\r\n            text=\"${ifDefined(me.text)}\"\r\n            size=\"${ifDefined(me.size)}\"\r\n            title=\"${ifDefined(me.title)}\"\r\n            tooltip=\"${ifDefined(me.tooltip)}\"\r\n            @notify=\"${me.toggle}\">\r\n            </gs-link>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-dropdown');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html, unsafeHTML } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Safe email rendering to protect from spam bots.\r\n */\r\nexport class GSEmailElement extends GSElement {\r\n\r\n  static shadowRootOptions = { mode: 'closed' }\r\n\r\n  static style = css`.e-mail:before {\r\n    content: attr(data-website) \"\\0040\" attr(data-user);\r\n    unicode-bidi: bidi-override;\r\n    direction: rtl;\r\n    }`;\r\n\r\n  static properties = {\r\n    user: { reflect: true },\r\n    domain: { reflect: true },\r\n    dev: { type: Boolean }\r\n  }\r\n\r\n  #user;\r\n  #domain;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  willUpdate(changes) {\r\n    super.willUpdate(changes);\r\n    this.#updateUser();\r\n    this.#updateDomain()\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${unsafeHTML(this.#style)}<a @click=\"${this.#onClick}\" class=\"e-mail\" data-user=\"${this.#user}\" data-website=\"${this.#domain}\"  href=\"mailto://\"></a>`;\r\n  }\r\n\r\n  get #style() {\r\n    return '<style>.e-mail:before { content: attr(data-website) \"\\u0040\" attr(data-user); unicode-bidi: bidi-override; direction: rtl; }</style>';\r\n  }\r\n\r\n  get #url() {\r\n    return `mailto://${GSUtil.reverse(this.dataset.user)}@${GSUtil.reverse(this.dataset.domain)}`;\r\n  }\r\n\r\n  #updateUser() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.user) {\r\n      me.#user = dataset.user || GSUtil.reverse(me.user);\r\n      if (me.dev) dataset.user = me.#user;\r\n      me.user = '';\r\n    }\r\n  }\r\n\r\n  #updateDomain() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.domain) {\r\n      me.#domain = dataset.domain || GSUtil.reverse(me.domain);\r\n      if (me.dev) dataset.domain = me.#domain;\r\n      me.domain = '';\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    window.location.href = me.#url;\r\n    //window.open(me.#url, '_blank');  \r\n  }\r\n\r\n  static {\r\n    this.define('gs-email');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSFormElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    disabled: { type: Boolean },\r\n    data: { type: Object },\r\n\r\n    name: { reflect : true},\r\n    rel: { reflect : true},\r\n    acceptCharset : {reflect : true, attribute: 'accept-charset'},\r\n    autocapitalize: { reflect : true},\r\n    autocomplete: { reflect : true},\r\n\r\n    action: { reflect : true},\r\n    enctype: { reflect : true},\r\n    method: { reflect : true},\r\n    novalidate: { reflect : true, type: Boolean},\r\n    target: { reflect : true},\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n    this.disabled = false;\r\n    this.method = \"dialog\";\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<form ${ref(me.#formRef)}\r\n      name=\"${ifDefined(me.name)}\"\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      @change=\"${me.#onChange}\"\r\n      @submit=\"${me.submit}\"\r\n      @reset=\"${me.reset}\"\r\n      method=\"${me.method}\"\r\n      \r\n      rel=\"${ifDefined(me.rel)}\"\r\n      acceptCharset=\"${ifDefined(me.acceptCharset)}\"\r\n      autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n      autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n      action=\"${ifDefined(me.action)}\"\r\n      enctype=\"${ifDefined(me.enctype)}\"\r\n      target=\"${ifDefined(me.target)}\"\r\n\r\n      ?novalidate=\"${me.novalidate}\">\r\n      <slot></slot>\r\n    </form>`;\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    me.dataController?.read();\r\n  }\r\n  \r\n  updated(changed) {\r\n    const me = this;\r\n    if (changed.has('disabled')) {\r\n      if (me.disabled) {\r\n        me.disable();\r\n      } else {\r\n        me.enable();\r\n      }\r\n    }\r\n    if (changed.has('data')) {\r\n      if (GSUtil.isNull(me.data)) {\r\n        me.reset();\r\n      } else {\r\n        me.asJSON = Object.assign(me.asJSON, me.data);\r\n      }\r\n    }\r\n  }\r\n\r\n  templateInjected() {\r\n    const me = this;\r\n    me.#doFilter(me.#filterField);\r\n\t}  \r\n\r\n  async reset(e) {\r\n    const me = this;\r\n    const internal = e?.target === me.form;\r\n\r\n    if (internal) {\r\n      // not required, form will reset on it's own\r\n      //me.elements.forEach(el => el.value = el.defaultValue);\r\n      await me.dataController?.read(me.asJSON);\r\n    } else {\r\n      me.data = {};\r\n      me.form.reset();\r\n    }\r\n  }\r\n\r\n  async submit(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    if (!me.validate()) return;\r\n    const json = me.asJSON;\r\n    await me.dataController?.write(json);\r\n    const data = { type: 'submit', data: json, source: e, owner : me};\r\n    return me.emit('form', data, true, true, true);\r\n  }\r\n\r\n  #childrens(shadow = false) {\r\n    return this.queryAll('input,select,output,textarea', shadow);\r\n  }\r\n\r\n  get #filterField() {\r\n    const me = this;\r\n    return me.elements.filter(el => el.name === me.dataset.gsfDisable).pop();\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  /**\r\n  * Overide native to pickup all form elements, including ones in shadow dom\r\n  */\r\n  get elements() {\r\n    return this.#childrens(true);\r\n  }\r\n\r\n  get fields() {\r\n    return this.elements;\r\n  }\r\n\r\n  get inputs() {\r\n    return this.elements;\r\n  }\r\n\r\n  get asJSON() {\r\n    const data = {};\r\n    this.elements.forEach(field => GSDOM.fromElement2Object(field, data));    \r\n    return data;\r\n  }\r\n\r\n  set asJSON(data) {\r\n    const me = this;\r\n    //me.form.reset(); do not use, create a circular calls\r\n    me.elements.forEach(field => GSDOM.fromObject2Element(field, data));    \r\n    //me.#doFilter(me.#filterField);\r\n    me.validate();\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#childrens(false)\r\n      .filter(el => GSDOM.isVisible(el))\r\n      .map(el => el.checkValidity())\r\n      .filter(v => v === false).length === 0;\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.isValid && this.form.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    this.#childrens(false)\r\n      .filter(el => GSDOM.isVisible(el))\r\n      .filter(el => !el.checkValidity())\r\n      .forEach(el => el.reportValidity() );\r\n    return this.form.reportValidity();\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    let isValid = me.checkValidity();\r\n    if (!isValid) me.reportValidity();\r\n    const data = { type: 'valid', data: isValid, owner : me};\r\n    isValid = me.onValidate(isValid);\r\n    data.isValid = isValid;\r\n    me.emit('form', data, true, true);\r\n    return isValid;\r\n  }\r\n\r\n  disable() {\r\n    GSDOM.disableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  enable() {\r\n    GSDOM.enableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataWrite(data) {\r\n\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  onFieldChange(el) {\r\n\r\n  }\r\n\r\n  onValidate(sts) {\r\n\r\n    return sts;\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    let field = e.target;\r\n    if (e.composed) {\r\n      field = e.composedPath()\r\n        .filter(el => el.matches?.('input,select,textarea,gs-form-group'))\r\n        .pop();\r\n    }\r\n    me.#doFilter(field);\r\n    me.handle(e);\r\n    if (me.validate()) me.onFieldChange(e.detail);\r\n  }\r\n\r\n  /**\r\n   * Filter field disabled status\r\n   * @param {HTMLInputElement} field \r\n   */\r\n  #doFilter(field) {\r\n    \r\n    if(!field) return;\r\n    \r\n    const me = this;\r\n\r\n    const value = me.#fieldValue(field);\r\n    const fldName = me.dataset.gsfDisable;\r\n    const fldVal = me.dataset.gsfValue;\r\n    const matched = fldName && field.name === fldName;\r\n    const flag = matched && value === fldVal;\r\n    if (matched) {\r\n      me.elements\r\n        .filter(el => el.name != fldName)\r\n        .forEach(el => el.disabled = flag);\r\n    } \r\n\r\n  }\r\n\r\n  /**\r\n   * Initialy, field might not be set just yet (if it is selectable),\r\n   * so we need to take valeu fro mgs-item definition\r\n   * @param {*} field \r\n   * @returns \r\n   */\r\n  #fieldValue(field) {\r\n    let value = field.tagName === 'GS-FORM-GROUP' ? field.field?.value : field.value;\r\n    if (field.selectable && GSUtil.isNull(value)) {\r\n      value = GSAttr.get(this.query('gs-item[selected]'), 'value');\r\n    }\r\n    return value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, unsafeHTML, ifDefined } from '../lib.mjs';\r\nimport { inputType, numGT0, numGE0, autocapitalize, autocorrect, autocomplete } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSFormGroupElement extends GSElement {\r\n\r\n  static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2';\r\n  static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n  static CSS_ICON = 'text-primary me-2 fs-5';\r\n  static ICON = 'info-circle-fill';\r\n\r\n  static #SELECTOPT = {\r\n    name : {},\r\n    value : {},\r\n    selected : {type: Boolean}\r\n  }\r\n\r\n  static properties = {\r\n    icon: {},\r\n    layout: {},\r\n    placement: {},\r\n\r\n    label: {},\r\n    description: {},\r\n    placeholder: {reflect: true},\r\n\r\n    pattern: {},\r\n    mask: {},\r\n    \r\n    form: {},\r\n    wrap: {},\r\n    spellcheck: {},\r\n\r\n    type: { ...inputType },\r\n    name: {},\r\n    list: {},\r\n    accept: {},   \r\n    value: {},\r\n\r\n    lang: {reflect: true},\r\n    title: {reflect: true},\r\n    rows: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    cols: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    step: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    min: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    max: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    minLength: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    maxLength: { type: Number, reflect: true, hasChanged: numGT0 },\r\n\r\n    reverse: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n\r\n    autoid: { type: Boolean },\r\n    autocopy: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    autocapitalize: { ...autocapitalize, reflect: true },\r\n    autocorrect: { ...autocorrect, reflect: true },\r\n    autocomplete: { reflect: true },\r\n\r\n    autofocus: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    checked: { type: Boolean, reflect: true },\r\n    multiple: { type: Boolean, reflect: true },\r\n    reveal: { type: Boolean, reflect: true },\r\n    readonly: { type: Boolean, reflect: true },\r\n    required: { type: Boolean, reflect: true },\r\n\r\n    invalidMessage: {reflect: true},\r\n\r\n    cellField: { attribute: 'cell-field' },\r\n    cellLabel: { attribute: 'cell-label' },\r\n    cssLabel: { attribute: 'css-label' },\r\n    cssField: { attribute: 'css-field' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #inputRef = createRef();\r\n  #ouptutRef = createRef();\r\n  #patterns = [];\r\n  #options = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.#validateAllowed();\r\n    this.dynamicStyle(this.#styleID);\r\n    this.rows = 0;\r\n    this.cols = 0;\r\n    this.type = 'text';\r\n    this.placement = 'top';\r\n    this.layout = 'horizontal';\r\n    this.invalidMessage = 'Invalid input',\r\n    this.icon = GSFormGroupElement.ICON;\r\n    this.cssLabel = GSFormGroupElement.CSS_LABEL;\r\n    this.cellLabel = GSFormGroupElement.CSS_LABEL_CELL;\r\n  }\r\n  \r\n  connectedCallback() {\r\n    const me = this;\r\n    const form = GSDOM.closest(me, 'gs-form');\r\n    me.layout = GSAttr.get(form, 'layout', me.layout);\r\n\r\n    if (!me.form && form) me.form = form.name;\r\n\r\n    if (me.selectable) {\r\n      me.#options = GSItem.proxify(me, GSFormGroupElement.#SELECTOPT);\r\n    } else {\r\n      me.#patterns = GSItem.collect(me)\r\n      .filter(el => el.dataset.pattern)\r\n      .map(el => new RegExp(el.dataset.pattern));\r\n    }      \r\n    super.connectedCallback();\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    me.#onRange();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    switch (me.layout) {\r\n      case 'floating': return me.#renderFloating();\r\n      case 'vertical': return me.#renderVertical();\r\n      default: return me.#renderHorizontal();\r\n    }\r\n  }\r\n\r\n\r\n  #renderFloating() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n       <div class=\"form-floating ${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n          ${me.#renderLabel()}\r\n       </div>\r\n       ${me.#renderInfo()}\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n      <div class=\"col-12 text-md-start ${me.cellLabel}\">\r\n          ${me.#renderLabel()}\r\n      </div>\r\n       <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n       </div>\r\n       ${me.#renderInfo()}   \r\n    </div>      \r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row form-group ${classMap(me.renderClass())}\">    \r\n       <slot name=\"header\"></slot>\r\n       ${me.#renderLabelWrap()}\r\n       ${me.#renderField()}\r\n       ${me.#renderInfo()}\r\n       <slot name=\"footer\"></slot>\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderLabel() {\r\n    const me = this;\r\n    return html`<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.translate(me.label)}</label>`;\r\n  }\r\n\r\n  #renderLabelWrap() {\r\n    const me = this;\r\n    return html`<div class=\" text-md-end ${me.cellLabel}\">${me.#renderLabel()}</div>`;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.#isIcon ? html`<gs-icon size=\"5\" css=\"${GSFormGroupElement.CSS_ICON}}\" name=\"${me.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderTooltip() {\r\n    const me = this;\r\n    const tgt = me.#isIcon ? '@parent' : `[name='${me.name}']`;\r\n    return me.description ? html`<gs-tooltip local locale=\"${ifDefined(me.locale)}\" placement=\"${me.placement}\" title=\"${me.description}\" target=${ifDefined(tgt)}></gs-tooltip>` : '';\r\n  }\r\n\r\n  #renderInfo() {\r\n    const me = this;\r\n    const tooltip = me.#renderTooltip();\r\n    if (tooltip && me.#isIcon) return html`\r\n    <div class=\"col-auto\">\r\n       ${tooltip}\r\n       ${me.#renderIcon()}\r\n    </div>`;\r\n    return tooltip;\r\n  }\r\n\r\n  #renderField() {\r\n    const me = this;\r\n    return html`\r\n    <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n       <slot name=\"body\">${me.#renderInput()}${me.#renderOutput()}</slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderOutput() {\r\n    const me = this;\r\n    if (!me.isRange) return \"\";\r\n    return html`<span ${ref(me.#ouptutRef)} class=\"position-absolute px-1\">${me.value}</span>`;\r\n  }\r\n\r\n  #renderInput() {\r\n\r\n    const me = this;\r\n\r\n    const idattr = me.autoid ? me.name : undefined;\r\n    const val = me.isFieldset ? me.value.split(',') : me.value;\r\n\r\n    if (Array.isArray(val)) {\r\n      const wrap = me.dataset.radioLayout === 'vertical';\r\n      return val.map((it, i) => { return { v: it, id: `${me.name}_${i}` } })\r\n        .map((o, i) => me.#fieldSet(me.name + i, o.v, me.#inputHTML(o.id, me.name, o.v), wrap));\r\n    }\r\n\r\n    if (me.selectable) return me.#selectHTML(idattr, me.name, me.value);\r\n\r\n    if (me.#isTextArea) return me.#textArea(idattr, me.name, me.value);\r\n\r\n    return me.#inputHTML(idattr, me.name, me.value);\r\n  }\r\n\r\n  #fieldSet(id, val, fld, vertical = false) {\r\n    const me = this;\r\n    return vertical ?\r\n      html`<div class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></div>`\r\n      :\r\n      html`<span class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></span>`;\r\n  }\r\n\r\n  #initStyle() {\r\n    const me = this;\r\n    const style = {\r\n      transform: me.reverse && me.isRange ? 'rotateY(180deg)' : ''\r\n    }\r\n    me.dynamicStyle(me.#styleID, style);    \r\n  }\r\n\r\n  #renderOptions() {\r\n    const me = this;\r\n    return me.#options.map( el => html`<option value=\"${el.value}\" ?selected=${el.selected}>${el.name || el.innerText || el.value }</option>`);\r\n  }\r\n\r\n  #selectHTML(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n\r\n    return html`<select ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @change=\"${me.#onChange.bind(me)}\"\r\n        \r\n            name=\"${name}\"             \r\n            form=\"${ifDefined(me.form)}\"\r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\">\r\n            ${me.#renderOptions()}\r\n            </select>`;\r\n  }\r\n\r\n  get #isTextArea() {\r\n    const me = this;\r\n    return (me.rows > 0 || me.cols > 0) && me.type === 'text';\r\n  }\r\n\r\n  get #listHTML() {\r\n    const me = this;\r\n    let list = '';\r\n    if (me.list) {\r\n      const root = me.parentComponent || me.parentElement;\r\n      const el = GSDOM.query(root, `datalist[id=\"${me.list}\"]`, true);\r\n      if (el) list = html`${unsafeHTML(el.outerHTML)}`;\r\n    }\r\n    return list;\r\n  }\r\n\r\n  #textArea(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder) : null;\r\n    const title = me.title ? me.translate(me.title) : null;\r\n\r\n    return html`<textarea  is=\"gs-ext-text\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)}     \r\n            lang=\"${ifDefined(me.lang)}\"\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n            cols=\"${me.cols}\"\r\n            rows=\"${me.rows}\"\r\n\r\n            ?block=\"${true}\"\r\n            ?beep=\"${true}\"\r\n            timeout=\"${2000}\"\r\n\r\n            spellcheck=\"${ifDefined(me.spellcheck)}\" \r\n            wrap=\"${ifDefined(me.wrap)}\" \r\n            form=\"${ifDefined(me.form)}\" \r\n            name=\"${name}\" \r\n            value=\"${ifDefined(value)}\"\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            title=\"${ifDefined(title)}\"\r\n    \r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus}\"            \r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"      \r\n      ></textarea>`;\r\n  }\r\n\r\n  #inputHTML(id, name, value) {\r\n    const me = this;\r\n    const type = me.isSwitch ? 'checkbox' : me.type;\r\n    let title = me.isRange ? me.value : me.title;\r\n    title = title ? me.translate(me.title) : title;\r\n\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder) : null;\r\n    const description = me.description ? me.translate(me.description) : null;\r\n    \r\n    me.#initStyle();\r\n\r\n    return html`<input is=\"gs-ext-input\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n        \r\n            name=\"${name}\" \r\n            type=\"${type}\" \r\n            form=\"${ifDefined(me.form)}\"\r\n            value=\"${ifDefined(value)}\"\r\n            title=\"${ifDefined(title)}\"\r\n\r\n            ?block=\"${true}\"\r\n            ?beep=\"${true}\"\r\n            timeout=\"${2000}\"\r\n\r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            description=\"${ifDefined(description)}\"\r\n\r\n            .multipattern=\"${ifDefined(me.#patterns)}\"\r\n            mask=\"${ifDefined(me.mask)}\"\r\n            pattern=\"${ifDefined(me.pattern)}\"\r\n            list=\"${ifDefined(me.list)}\"\r\n            accept=\"${ifDefined(me.accept)}\"\r\n             \r\n            step=\"${ifDefined(me.step)}\"\r\n            min=\"${ifDefined(me.min)}\"\r\n            max=\"${ifDefined(me.max)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?multiple=\"${me.multiple}\"\r\n            ?checked=\"${me.checked}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"\r\n            ?reveal=\"${me.reveal}\"\r\n            >${me.#listHTML}`;\r\n  }\r\n\r\n  get #cssField() {\r\n    const me = this;\r\n    if (me.selectable) return 'form-select ms-0';\r\n    if (me.isCheckable) return 'form-check-input ms-0';\r\n    if (me.isRange) return 'form-range';\r\n    return 'form-control';\r\n  }\r\n\r\n  get #cssLabel() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-label';\r\n    if (me.isFloating) return 'ms-2';\r\n    return me.isVertical ? 'form-label' : '';\r\n  }\r\n\r\n  get #cssCheck() {\r\n    const me = this;\r\n    if (me.isCheckable) {\r\n      //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      if (me.isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n      return me.isFieldset ? '' : 'form-check';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get #cellField() {\r\n    const me = this;\r\n    const val = (me.isHorizontal) ? '6' : '11';\r\n    return me.cellField || `col-md-${val} col-sm-${val} col-xs-11`;\r\n  }\r\n\r\n  get #isIcon() {\r\n    return GSUtil.isStringNonEmpty(this.icon);\r\n  }\r\n\r\n  #onRange(e) { \r\n    this.emit('input', e);\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if (me.isRange) me.value = e.target?.value;\r\n    me.emit('change', e, true, true);\r\n  }\r\n\r\n  #validateAllowed() {\r\n    const me = this;\r\n    const slots = ['header', 'body', 'footer'];\r\n    let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n    if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n    list = Array.from(me.children).filter(el => !el.slot);\r\n    const tagList = ['GS-ITEM', 'DATALIST'];\r\n    const allowed = GSDOM.isAllowed(list, tagList);\r\n    if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n  get isFloating() {\r\n    return this.layout === 'floating';\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.layout === 'horizontal';\r\n  }\r\n\r\n  get isVertical() {\r\n    return this.layout === 'vertical';\r\n  }\r\n\r\n  get isFieldset() {\r\n    const me = this;\r\n    return me.type === 'radio' && me.value?.includes(',');\r\n  }\r\n\r\n  get isCheckable() {\r\n    const me = this;\r\n    return me.isCheck || me.isRadio || me.isSwitch;\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.field?.checked;\r\n  }\r\n\r\n  get isCheck() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get isRadio() {\r\n    return this.type === 'radio';\r\n  }\r\n\r\n  get isSwitch() {\r\n    return this.type === 'switch';\r\n  }\r\n\r\n  get isNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  get isRange() {\r\n    return this.type === 'range';\r\n  }\r\n\r\n  get isText() {\r\n    return this.type === 'text';\r\n  }\r\n\r\n  get isPassword() {\r\n    return this.type === 'passsword';\r\n  }\r\n\r\n  get isEmail() {\r\n    return this.type === 'email';\r\n  }\r\n\r\n  get isURL() {\r\n    return this.type === 'url';\r\n  }\r\n\r\n  get isFile() {\r\n    return this.type === 'file';\r\n  }\r\n\r\n  get field() {\r\n    return this.#inputRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref, repeat } from '../lib.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSFormGroupElement } from './FormGroup.mjs';\r\n\r\n/**\r\n * Component is responsible for auto-building gs-form and gs-form-group elements\r\n * from either JSON data or GS-ITEM elements.\r\n */\r\nexport class GSFormPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    formStorage: { attribute: 'form-storage' },\r\n    disabled: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.#proxify;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<gs-form ${ref(me.#formRef)}\r\n      ?disabled=${me.disabled} \r\n      storage=\"${ifDefined(me.formStorage)}\" \r\n      .locale=\"${me.locale}\"\r\n      .rtl=\"${me.rtl}\"\r\n      .css=\"${me.css}\"\r\n      .theme=\"${me.theme}\"\r\n      .margin=\"${me.margin}\"\r\n      .padding=\"${me.padding}\"\r\n      .border=\"${me.border}\"\r\n      .shadow=\"${me.shadow}\"\r\n      .os=\"${me.os}\"\r\n      .browser=\"${me.browser}\"\r\n      .environment=\"${me.environment}\"\r\n      .orientation=\"${me.orientation}\"\r\n      .protocol=\"${me.protocol}\">\r\n      <slot>\r\n        ${repeat(me.data, (r) => html`<gs-form-group .data=${r} locale=\"${ifDefined(me.locale)}\" ></gs-form-group>`)}\r\n      </slot>\r\n    </gs-form>`;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  get #proxify() {\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, GSFormGroupElement.properties));\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGroupElement class\r\n * @module components/GSGroupElement\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSAttributeHandler } from '../base/GSAttributeHandler.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { ElementNavigationController } from '../controllers/ElementNavigationController.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { classMap, createRef, html, render, ifDefined, ref } from '../lib.mjs';\r\n\r\n/**\r\n * Renderer for grouped elements such as Buttons, Navs, Tabs and lists.\r\n * Components handles grouped elements navigation, selection and focus.\r\n * \r\n * @class\r\n * @extends { GSElement }\r\n */\r\nexport class GSGroupElement extends GSElement {\r\n\r\n  static properties = {\r\n    // multiple lists with single select across \r\n    group : {},\r\n    storage: {},    \r\n    circular: { type: Boolean },\r\n    multiple: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #elRef = createRef();\r\n  #controller;\r\n  #controllerGroup;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.data = me.initData();\r\n    me.#controller = new ElementNavigationController(me);\r\n    me.#controllerGroup = new GroupController(me);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    // allow single setting at the container component to apply to the child\r\n    Array.from(me.children).forEach(it => {\r\n      GSAttributeHandler.clone(me, it, false);\r\n    });\r\n  }  \r\n\r\n\r\n  #prerender() {\r\n    const me = this;\r\n    me.queryAll('[generated]').forEach(el => el.remove());\r\n    if (me.data.length > 0) {\r\n      const items = me.renderItems();\r\n      const tpl = document.createElement('template');\r\n      render(items, tpl);\r\n      Array.of(...tpl.children).forEach(el => GSDOM.appendChild(me, el));\r\n    }\r\n  }\r\n  \r\n  firstUpdated(changed) {\r\n    const me = this;\r\n    me.#controller.init();\r\n    me.#controller.attach(me.#elRef.value);\r\n    super.firstUpdated(changed);\r\n    //me.#prerender();\r\n  }  \r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.#prerender();\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      ${me.renderWrappedUI()}\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedUI(name) {\r\n    const me = this;\r\n    return html`<div \r\n      class=\"${classMap(me.renderWrappedClass())}\">\r\n      <slot name=\"${ifDefined(name)}\"></slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    return {};\r\n  }\r\n\r\n  renderItems() {\r\n    return '';\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSItem);\r\n  }\r\n\r\n  previous() {\r\n    this.#controller.previous();\r\n  }\r\n\r\n  next() {\r\n    this.#controller.next();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    this.#controller.reset();\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  isNavigable(el) {\r\n    return el?.tagName === this.childTagName;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onBusEvent(e) {\r\n    let owner, item;  \r\n    ({owner, item} = e.detail);\r\n    if (owner != this) {\r\n      if (!item?.disabled || owner?.selectable) {\r\n        this.reset();\r\n      }\r\n    }\r\n  }\r\n  \r\n  onSelected(el) {\r\n    this.#controllerGroup.notify(el);\r\n  }\r\n\r\n  get focused() {\r\n    return this.#controller.focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#controller.selected;\r\n  }\r\n\r\n  get childTagName() {\r\n    return '';\r\n  }\r\n    \r\n  get items() {\r\n    const me = this;\r\n    return me.queryAll(me.childTagName);\r\n  }\r\n\r\n  get generated() {\r\n    const me = this;\r\n    return this.queryAll(`${me.childTagName}[generated]`);\r\n  }\r\n\r\n  get active() {\r\n    const me = this;\r\n    if (me.multiple) return me.queryAll(`${me.childTagName}[active]`);\r\n    return me.query(`${me.childTagName}[active]`);\r\n  }\r\n\r\n  settings(el) {\r\n    const tagName = customElements.getName(el)?.toUpperCase() || 'GS-ITEM';\r\n    const cfg = GSElement.allProperties(el);\r\n    const items = Array.from(this.children).filter(e => e.tagName === tagName ).map(el => GSAttr.proxify(el, cfg));\r\n    const active = items.filter(el => el.active);\r\n    active.forEach((el, idx) => el.active = idx === 0);\r\n    return items;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-group');\r\n  }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGT0 } from '../properties/index.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSIconElement extends GSElement {\r\n\r\n  static styles = css`\r\n    :host {\r\n      --gs-icon-super-color : cornflowerblue;\r\n      --gs-icon-content : '';\r\n    }\r\n    i::after {\r\n      top: -8px;\r\n      font-size: 0.7em;\r\n      position: relative;\r\n      content: var(--gs-icon-content);\r\n      content: attr(data-super);\r\n      color: var(--gs-icon-super-color);\r\n    }`;\r\n\r\n  static properties = {\r\n    name: { reflect: true, hasChanged: notEmpty },\r\n    size: { reflect: true, type: Number, hasChanged: numGT0 },\r\n    color: { reflect: true, ...color },\r\n    superColor: { attribute : 'super-color'},\r\n    super: { reflect: true },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    _clicked: { attribute:false},\r\n    _hovered: { attribute:false},\r\n  }\r\n\r\n  #ref = createRef();\r\n  \r\n  constructor() {\r\n    super();\r\n    //this.flat = true;\r\n  }\r\n\r\n  /*\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    this.#embdeded = GSDOM.matches(this.parentComponent, '[icon]');\r\n  }\r\n  */\r\n\r\n  updated(changed) {\r\n    if (changed.has('_clicked')) {\r\n      if (this._clicked) this.#postAnimate();\r\n    } \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.setCSSProperty(':host', '--gs-icon-super-color', me.superColor);\r\n    return html`<i  ${ref(me.#ref)}\r\n       class=\"bi ${classMap(me.renderClass())}\"\r\n       data-super=\"${ifDefined(me.super)}\"\r\n       @click=\"${me.animate}\"\r\n       @mouseover=\"${me.#onMouseOver}\"\r\n       @mouseout=\"${me.#onMouseOut}\"></i>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      [`text-${me.color}`]: me.color,\r\n      [`bi-${me.name}`]: me.name,\r\n      'fs': me.size > 0,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.clickCss]: me._clicked,\r\n      [me.hoverCss]: me._hovered,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  async #postAnimate() {\r\n    const me = this;\r\n    const delay = GSUtil.asNum(me.dataset.delay, 1);\r\n    if (delay > 0) {\r\n      await GSUtil.timeout(delay * 1000);\r\n      me._clicked = false;\r\n    }    \r\n  }\r\n\r\n  #onMouseOver(e) {\r\n    this.hover(true);\r\n  }\r\n\r\n  #onMouseOut(e) {\r\n    this.hover(false);\r\n  }\r\n\r\n  animate() {\r\n    const me = this;\r\n    me._hovered = false;\r\n    me._clicked = true;\r\n  }\r\n\r\n  hover(sts = false) {\r\n    const me = this;\r\n    if (sts) {\r\n      me._clicked = false;\r\n    }\r\n    me._hovered = sts;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-icon');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/index.mjs';\r\n\r\nexport class GSIndentElement extends GSElement {\r\n\r\n  static styles = css`.indent {\r\n      --gs-indent : 10px;\r\n      margin-left: var(--gs-indent);\r\n      margin-right: var(--gs-indent);\r\n    }`;\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    size: { type: Number, hasChanged: numGT0 },\r\n    multiplier: { type: Number, hasChanged: numGT0 }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.size = 1;\r\n    me.multiplier = 10;\r\n  }\r\n\r\n  renderUI() {\r\n    const size = this.size * this.multiplier;\r\n    return html`<span class=\"indent\" style=\"--gs-indent: ${size}px;\"></span>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-indent');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nconst numdef = { reflect: true, type: Number, hasChanged: numGE0 };\r\n\r\nexport class GSImageElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { hasChanged: notEmpty },\r\n    width: numdef,\r\n    height: numdef,\r\n    opacity: numdef,\r\n    invert: numdef,\r\n    grayscale: numdef,\r\n    brightness: numdef,\r\n    blur: numdef,\r\n    contrast: numdef,\r\n    saturate: numdef,\r\n    hue: numdef,\r\n    sepia: numdef,\r\n\r\n    alt: {},\r\n    loading: {}\r\n\r\n  }\r\n\r\n  #imageRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    this.#update();\r\n    return this.src;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<img ${ref(me.#imageRef)} \r\n            @load=\"${me.#onLoad}\"\r\n            src=\"${me.src}\" \r\n            alt=\"${me.alt}\" \r\n            loading=\"${ifDefined(me.loading)}\" \r\n            class=\"${me.#styleID}\" \r\n            data-gs-class=\"${me.#styleID}\">\r\n          </img>`;\r\n  }\r\n\r\n  get complete() {\r\n    return this.#imageRef.value?.complete || false;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  #renderStyle() {\r\n    const me = this;\r\n    const filter = me.#buildFilter();\r\n    const css = {\r\n      width: me.width > 0 ? me.width : undefined,\r\n      height: me.height > 0 ? me.height : undefined,\r\n      filter: filter.length > 0 ? filter.join(' ') : ''\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #buildFilter() {\r\n    const me = this;\r\n    const o = [];\r\n\r\n    if (me.blur > 0) o.push(`blur(${me.blur}px)`);\r\n    if (me.invert > 0) o.push(`invert(${me.invert})`);\r\n    if (me.opacity > 0) o.push(`opacity(${me.opacity})`);\r\n    if (me.contrast > 0) o.push(`contrast(${me.contrast})`);\r\n    if (me.grayscale > 0) o.push(`grayscale(${me.grayscale})`);\r\n    if (me.brightness > 0) o.push(`brightness(${me.brightness})`);\r\n\r\n    if (me.hue > 0) o.push(`hue-rotate(${me.hue}deg)`);\r\n    if (me.sepia > 0) o.push(`sepia(${me.sepia}%)`);\r\n    if (me.saturate > 0) o.push(`saturate(${me.saturate}%)`);\r\n\r\n    return o;\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.filter = me.#buildFilter().join(' ').trim();\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const el = e.target;\r\n    const me = this;\r\n    if (el) {\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n      me.emit('loaded', { width: el.width, height: el.height, element: el }, true);\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-image');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayoutElement\r\n */\r\n\r\nimport { classMap, html, ifDefined, templateContent } from '../lib.mjs';\r\nimport { orientation, OrientationTypes } from '../properties/orientation.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSLayoutElement extends GSElement {\r\n\r\n    static properties = {\r\n        type: { ...orientation }\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        id : {},\r\n        type: {},\r\n        min: { type: Number },\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        resizable: { type: Boolean },\r\n        autofit: { type: Boolean },\r\n        vPos: { attribute: 'h-pos' },\r\n        hPos: { attribute: 'v-pos' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.autofit = true;  \r\n        me.#items(me).map((el, idx, els) => me.#dyncss(el, idx, els, 0));\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if ( this.autofit && GSDOM.root(this) === document.body) document.body.classList.add('vh-100');\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const list = me.#items(me).map((el, idx, els) => me.#build(el, idx, els));\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"d-flex flex-fill w-100 h-100 ${classMap(me.renderClass())}\">${list}</div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const horizontal = OrientationTypes.isHorizontal(me.type);\r\n        return {\r\n            ...super.renderClass(),\r\n            'flex-column': horizontal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #items(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSLayoutElement.options));\r\n    }\r\n\r\n    #resizable(el) {\r\n        return el.size > 0 || el.min > 0 || el.max > 0 || el.resizable;\r\n    }\r\n\r\n    #dyncss(el, idx, els, lev = 0) {\r\n        const me = this;\r\n        me.#items(el.self).map((it, idx, items) => me.#dyncss(it, idx, items, lev+1));\r\n        if(me.#resizable(el)) me.dynamicStyle(`gsd-${lev}-${idx}`);\r\n    }\r\n\r\n    #build(el, idx, els, lev = 0) {\r\n\r\n        const me = this;\r\n        const type = el.self.parentElement.type || 'vertical';\r\n\r\n        const list = me.#items(el.self).map((it, idx, items) => me.#build(it, idx, items, lev+1));\r\n        \r\n        const min = el.min;\r\n        const max = el.max;\r\n        const template = el.template;\r\n        const tplEl = me.#elementTemplate(el);\r\n\r\n        const tc = `#${tplEl?.id}` !== template;\r\n\r\n        const dir = el.type || type || 'vertical';\r\n        const horizontal = OrientationTypes.isHorizontal(dir);\r\n        \r\n        const col = list.length > 0 && horizontal ? 'flex-column' : '';\r\n\r\n        const did = `gsd-${lev}-${idx}`;\r\n        const css = me.#panelCSS(el, col, did);\r\n        const style = me.#panelStyle(el, horizontal);\r\n        me.dynamicStyle(did, style);\r\n\r\n        const slot = el.name ? html`<slot name=\"${el.name}\"></slot>` : '';\r\n        const src = html`<div id=\"${ifDefined(el.id)}\" class=\"d-flex ${classMap(css)}\">\r\n            ${list}\r\n            ${templateContent(tplEl)}\r\n            ${template && tc ? html`<gs-template flat src=\"${template}\"></gs-template>` : ''}\r\n            ${slot}\r\n            </div>`;\r\n\r\n        if (!el.resizable) return src;\r\n\r\n        const resize = (idx === els.length - 1) ? 'end' : 'start';\r\n        const splitter = me.#splitter(min, max, type, resize);\r\n\r\n        if (idx === els.length - 1) return [splitter , src];\r\n        return [src, splitter];\r\n    }\r\n    \r\n    #elementTemplate(el) {\r\n        const tplEl = el.self.firstElementChild;\r\n        return tplEl instanceof HTMLTemplateElement ? tplEl : undefined;\r\n    }\r\n\r\n    #panelCSS(el, col, did) {\r\n\r\n        const resizable = this.#resizable(el);\r\n        const grow = resizable ? '' : 'flex-grow-1';\r\n\r\n        let vpos = el.vPos;\r\n        let hpos = el.hPos;\r\n\r\n        hpos = hpos ? `align-items-${hpos}` : '';\r\n        vpos = vpos ? `justify-content-${vpos}` : '';\r\n\r\n        const css = this.mapCSS(el.css, {\r\n            [did] : resizable,\r\n            [col] : col,\r\n            [grow] : grow,\r\n            [hpos] : hpos,\r\n            [vpos] : vpos\r\n        });\r\n    \r\n        return css;        \r\n    }\r\n\r\n    #panelStyle(el, horizontal) {\r\n        const min = el.size || el.min;\r\n        const max = el.max || el.size;\r\n        const style = {};\r\n        if (horizontal) {\r\n            style['min-height'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-height'] = max > 0 ? `${max}px` : undefined;\r\n        } else {\r\n            style['min-width'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-width'] = max > 0 ? `${max}px` : undefined;\r\n        }\r\n        return style;        \r\n    }\r\n\r\n    #splitter(min, max, dir, resize) {\r\n        return html`<gs-splitter split=\"${dir}\" resize=\"${resize}\" min=\"${min}\" max=\"${max}\"></gs-splitter>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-layout');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSLinklement extends GSElement {\r\n\r\n  static properties = {\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    size: { type: Number },\r\n    text: { ...color },\r\n    color: { ...color },\r\n    url: {},\r\n    ping: {},\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    target: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.url = '#';\r\n    // this.text = 'primary'; // do not set as default -> gs-dropdown\r\n    // this.target = '_blank'; // not used \r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n      <a ${ref(me.#refEl)}  \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        title=\"${ifDefined(me.translate(me.tooltip))}\" \r\n        href=\"${ifDefined(me.url)}\" \r\n        ping=\"${ifDefined(me.ping)}\" \r\n        target=\"${ifDefined(me.target)}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        ?disabled=${me.disabled} \r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"        \r\n        @click=\"${me.#onClick}\">\r\n        ${me.#first}${me.#second}\r\n        </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,      \r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [`text-${me.text}`]: me.text,\r\n      [`bg-${me.color}`]: me.color\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.iconEl?.animate();\r\n    me.notify();\r\n    if (me.url === '#' || GSUtil.isStringEmpty(me.url)) {\r\n      GSEvents.prevent(e);\r\n      me.handle(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon css=\"mx-1\" ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    size=\"${this.size}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  /**\r\n   * Generate clickable link\r\n   * @param {*} options \r\n   * @param {*} css \r\n   * @param {*} before \r\n   * @param {*} after \r\n   * @returns \r\n   */\r\n  static generate(options, css, before, after) {\r\n    const opt = options;\r\n    return html`<a class=\"${classMap(css)}\"\r\n        tabindex=\"0\"    \r\n        ${dataset(opt, true)}\r\n        part=\"${ifDefined(opt.part)}\"\r\n        tooltip=\"${ifDefined(opt.tooltip)}\"\r\n        href=\"${ifDefined(opt.url)}\">        \r\n        ${before || ''}\r\n        <slot>${opt.title}</slot> \r\n        ${after || ''}\r\n    </a>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-link');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\n\r\nexport class GSListElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    selectable: { reflect: true, type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = false;\r\n    this.multiple = false;\r\n    this.selectable = false;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  renderClass() {\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group': true,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    return html`<slot></slot>`;\r\n  }\r\n\r\n  reset() {\r\n    this.items.forEach(el => el.reset());\r\n    this.notify();\r\n  }\r\n\r\n  renderItems() {    \r\n    return this.data.map(o => {\r\n      return html`<gs-list-item generated\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-list-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return super.isNavigable(el) && this.selectable;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-LIST-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSListItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    size: { type: Number },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true }\r\n  }\r\n\r\n  #initial;\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.binded();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.#initial = this.active;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-LIST';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n        // allow single setting at the gs-list to apply to the child\r\n        // GSAttributeHandler.clone(this.parentComponent, this, false);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<a  tabindex=\"0\" ${ref(me.#refEl)}\r\n       href=\"${ifDefined(me.url)}\" \r\n       target=\"${ifDefined(me.target)}\" \r\n       class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()} \r\n        ${me.#renderSecond()}\r\n        <slot>${me.renderTemplate()}</slot>\r\n      </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.#itemCSS] : true,\r\n      'active': me.active && me.isSelectable()\r\n    }\r\n    return me.mapCSS(me.#itemStatusCSS, css);\r\n  }\r\n\r\n  isSelectable() {\r\n    return !GSUtil.asBool(this.disabled) || GSUtil.asBool(this.parentComponent.selectable);\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.icon ? html`<gs-icon name=\"${me.icon}\" size=\"${me.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderText() {\r\n    return this.title ? html`<span>${this.translate(this.title)}</span>` : html`<slot name=\"title\"></slot>`;\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.rtl ? this.#renderText() : this.#renderIcon();\r\n  }\r\n\r\n  #renderSecond() {\r\n    return this.rtl ? this.#renderIcon() : this.#renderText();\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || this.#initial || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #inactiveCSS() {\r\n    return this.parentComponent.dataset?.cssInactive || '';\r\n  }\r\n\r\n  get #itemCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #itemStatusCSS() {\r\n    return this.active && this.isSelectable() ? this.#activeCSS : this.#inactiveCSS;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { PlacementTypes, nav, placement } from '../properties/index.mjs';\r\n\r\nexport class GSNavElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    type: nav,\r\n    placement: placement,\r\n    vertical: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = true;\r\n    this.multiple = false;\r\n    this.type = 'pills';\r\n    this.placement = 'start';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-nav-item');\r\n  }\r\n  \r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const isBefore = PlacementTypes.isBefore(me.placement);\r\n    const isTab = me.type === 'tabs';\r\n    const css = {\r\n      'nav': true,\r\n      [`nav-${me.type}`]: me.type,\r\n      'flex-column': me.vertical,\r\n      'border-bottom-0': me.vertical,\r\n      'border-end': isTab && isBefore && me.vertical,\r\n      'border-start': isTab && !isBefore && me.vertical,\r\n      [`justify-content-${me.placement}`]: !me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Render items based on data propprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-nav-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-nav-item>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  onFocused(el) {\r\n    // el?.click();\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-NAV-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { NavTypes, PlacementTypes } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSNavItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    disabled: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    active: { type: Boolean, reflect: true }\r\n  }\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-NAV';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div class=\"nav-item ${classMap(me.renderClass())}\">${me.#button}</div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    return this.mapCSS(this.#itemsCSS, super.renderClass());\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get isNav() {\r\n    return true;\r\n  }\r\n\r\n  get vertical() {\r\n    return this.parentComponent.vertical || false;\r\n  }\r\n\r\n  get placement() {\r\n    return this.parentComponent.placement;\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #title() {\r\n    return html`<slot>${this.translate(this.title)}</slot>`;\r\n  }\r\n\r\n  get #icon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  get #first() {\r\n    return this.rtl ? this.#title : this.#icon;\r\n  }\r\n\r\n  get #second() {\r\n    return this.rtl ? this.#icon : this.#title;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#buttonCSS, {});\r\n    if (me.active) obj = me.mapCSS(me.#buildCSS + ' ' + me.#activeCSS, obj);\r\n    return html`<a tabindex=\"0\" type=\"button\" role=\"nav\" \r\n     ${ref(me.#refEl)}\r\n     class=\"nav-link ${classMap(obj)}\"\r\n     href=\"${ifDefined(me.url)}\" \r\n     target=\"${ifDefined(me.target)}\">\r\n        ${me.#first} \r\n        ${me.#second}\r\n      </a>`;\r\n  }\r\n\r\n  get #itemsCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #buttonCSS() {\r\n    return this.parentComponent.dataset?.cssButton || '';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #navType() {\r\n    return NavTypes.indexOf(this.parentComponent.type);\r\n  }\r\n\r\n  // fiix for shadowed DOM, parent class=\"nav nav-pills..\" \r\n  // do not cross shadow dom, so item elements does not see CSS\r\n  // we have to simulate\r\n  get #buildCSS() {\r\n    const isVertical = this.vertical;\r\n    const isBefore = PlacementTypes.isBefore(this.placement);\r\n    switch (this.#navType) {\r\n      // pills\r\n      case 1: return 'rounded text-bg-primary';\r\n      // tabs\r\n      case 2:\r\n        if (isVertical) {\r\n          if (isBefore) {\r\n            return 'shadow-none border border-end-0';\r\n          } else {\r\n            return 'shadow-none border border-start-0';\r\n          }\r\n        }\r\n        return 'shadow-none border border-bottom-0';\r\n      // underline\r\n      case 3: return 'shadow-none border-bottom border-3 fw-medium';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { svg, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSOverlayElement extends GSElement {\r\n\r\n    static properties = {\r\n        color: {},\r\n        target: {},\r\n        autoremove: { type: Boolean },\r\n        opened: { type: Boolean },\r\n        opacity: { type: Number },\r\n        padding: { type: Number },\r\n        radius: { type: Number },\r\n    }\r\n\r\n    #styleID = GSID.id;\r\n    #styleID2 = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        //this.color = 'rgb(0,0,0)';\r\n        this.color = '#000';\r\n        this.opacity = 0.7;\r\n        this.padding = 1;\r\n        this.radius = 6;\r\n        this.dynamicStyle(this.#styleID);\r\n        this.dynamicStyle(this.#styleID2);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', () => me.requestUpdate());\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        if (!me.opened) return '';\r\n        const path = me.#path;\r\n        return path ? html`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlspce=\"preserve\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\" preserveAspectRatio=\"xMinYMin slice\"\r\n            viewvbox=\"0 0 ${window.innerWidth} ${window.innerHeight}\"\r\n            class=\"gs-overlay gs-overlay-animated ${me.#styleID}\"\r\n            @click=\"${me.reset.bind(me)}\">\r\n            ${path}\r\n        </svg>` : '';\r\n    }\r\n\r\n    async firstUpdated(changed) {\r\n        const me = this;\r\n        const opt = {\r\n            fillRule: \"evenodd\",\r\n            clipRule: \"evenodd\",\r\n            strokeLinejoin: \"round\",\r\n            strokeMiterlimit: \"2\",\r\n            zIndex: \"10000\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    get #path() {\r\n        const me = this;\r\n        const el = GSDOM.query(me.target);\r\n        if (!me.target) return '';\r\n        const pathStr = me.#createSVGPathString(el);\r\n        const opt = { fill: me.color, opacity: me.opacity, pointerEvents: 'auto', cursor: 'auto' };\r\n        me.dynamicStyle(me.#styleID2, opt);\r\n        return svg`<path class=\"${me.#styleID2}\"  d=\"${pathStr}\"></path>`;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n\r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n\r\n        const rect = target.getBoundingClientRect();\r\n\r\n        const padding = me.padding;\r\n        const radius = me.radius;\r\n\r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n\r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n\r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n\r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n\r\n        const val = `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n            M${highlightBoxX},${highlightBoxY} \r\n            h${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n            v${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n            h-${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n            v-${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;\r\n        return val.replace(/[\\t\\n]/g, ' ');\r\n    }\r\n\r\n    static {\r\n        this.define('gs-overlay');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, map, range, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { size, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSPagerElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    size: { ...size },\r\n    first: { type: Boolean },\r\n    last: { type: Boolean },\r\n    next: { type: Boolean },\r\n    previous: { type: Boolean },\r\n    pages: { type: Number },\r\n\r\n    labelFirst: { attribute: 'label-first' },\r\n    labelLast: { attribute: 'label-last' },\r\n    labelNext: { attribute: 'label-next' },\r\n    labelPrevious: { attribute: 'label-previous' },\r\n\r\n    cssItem: { attribute: 'css-item' },\r\n\r\n  }\r\n\r\n  #ref = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.pages = 5;\r\n    me.labelFirst = '&laquo;';\r\n    me.labelLast = '&raquo;';\r\n    me.labelNext = '&rsaquo;';\r\n    me.labelPrevious = '&lsaquo;';\r\n    if (me.#isInTable) {\r\n      me.slot = \"extra\";\r\n    }\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const half = Math.floor((me.pages - 1) / 2);\r\n    const page = me.dataController?.page || 0;\r\n    const start = page - half < 1 ? 1 : page - half;\r\n    const end = page > 0 ? page + half : me.pages;\r\n\r\n    return html`<nav \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        @click=\"${me.#onClick}\"\r\n        @keyup=\"${me.#onKeyUp}\"\r\n        @keydown=\"${me.#onKeyDown}\">\r\n        <ul ${ref(me.#ref)} class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()}\r\n        ${me.#renderPrevious()}\r\n        ${map(range(start, end + 1), (i) => me.#renderItem(i, '', '', i  === page))}\r\n        ${me.#renderNext()}\r\n        ${me.#renderLast()}\r\n        </ul></nav>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = me.size ? SizeTypes[me.size] || me.size : '';\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'pagination': true,\r\n      [`pagination-${size}`]: size,\r\n\r\n    }\r\n    return css;\r\n  }\r\n\r\n  updated() {\r\n    const target = this.#ref.value;\r\n    if (target && this.isFocused) {\r\n      target.querySelector('.active > a')?.focus();\r\n    }\r\n  }\r\n\r\n  onDataRead() {\r\n    this.requestUpdate();\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.first ? this.#renderItem(this.labelFirst, 'first', 'First page') : '';\r\n  }\r\n\r\n  #renderLast() {\r\n    return this.last ? this.#renderItem(this.labelLast, 'last', 'Last page') : '';\r\n  }\r\n\r\n  #renderPrevious() {\r\n    return this.previous ? this.#renderItem(this.labelPrevious, 'previous', 'Previous page') : '';\r\n  }\r\n\r\n  #renderNext() {\r\n    return this.next ? this.#renderItem(this.labelNext, 'next', 'Next page') : '';\r\n  }\r\n\r\n  #renderItem(text = '', name = '', title = '', active = false) {\r\n    const me = this;\r\n    text = GSUtil.decodeHTMLEntities(text);\r\n    return html`<li class=\"page-item ${active ? 'active' : ''}\">\r\n              <a class=\"page-link ${this.cssItem}\" \r\n                 name=\"${name}\" \r\n                 title=\"${me.translate(title)}\" \r\n                 href=\"#\">${me.translate(text)}</a>\r\n            </li>`;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const el = this.#toTarget(e, 'a');\r\n    if (!el) return;\r\n\r\n    const ctrl = me.dataController;\r\n    if (!ctrl) return;\r\n\r\n    const val = el.name || el.text;\r\n    me.emit(val, el);\r\n    \r\n    switch (val) {\r\n      case 'first':\r\n        return ctrl.firstPage();\r\n      case 'last':\r\n        return ctrl.lastPage();\r\n      case 'next':\r\n        return ctrl.nextPage();\r\n      case 'previous':\r\n        return ctrl.prevPage();\r\n    }\r\n\r\n    ctrl.page = val;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const current = this.#toTarget(e, 'li');\r\n    let el = null;\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        el = current?.previousElementSibling;\r\n        break;\r\n      case 'ArrowRight':\r\n        el = current?.nextElementSibling;\r\n        break;\r\n    }\r\n    el = el?.querySelector('a');\r\n    el?.focus();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') {\r\n      this.#toTarget(e, 'a')?.click();\r\n    }\r\n  }\r\n\r\n  #toTarget(e, name) {\r\n    const el = e.target.closest(name) || e.target;\r\n    return el.tagName === name.toUpperCase() ? el : undefined;\r\n  }\r\n\r\n  get #isInTable() {\r\n    return this.parentComponent?.tagName === 'GS-TABLE';\r\n  }\r\n  \r\n  static {\r\n    this.define('gs-pagination');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, position } from '../properties/index.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSPopper } from \"../base/GSPopper.mjs\";\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopupElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    position: { ...position },\r\n    trigger: {},\r\n    target: {},\r\n    autoclose: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    opened: { type: Boolean },\r\n    hPos: { type: Number, attribute: 'h-pos' },\r\n    vPos: { type: Number, attribute: 'v-pos' },\r\n    wMin: { type: Number, attribute: 'w-min' },\r\n    wMax: { type: Number, attribute: 'w-max' },\r\n    hMin: { type: Number, attribute: 'h-min' },\r\n    hMax: { type: Number, attribute: 'h-max' },\r\n\r\n  }\r\n\r\n  #caller = null;\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.autofocus = true;\r\n    this.autoclose = true;\r\n    this.trigger = 'click';\r\n    this.position = 'absolute';\r\n    this.placement = 'bottom';\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachTaraget();\r\n    me.attachEvent(window, 'resize', me.close.bind(me));\r\n    me.on('mouseleave', me.#onAuto.bind(me));\r\n  }\r\n\r\n  firstUpdated(changedProperties) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#resize();\r\n      me.#reposition();\r\n    });\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#reposition();\r\n    if (me.autofocus) me.focus();\r\n    me.notify();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div \r\n      ${ref(me.#panelRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"fade ${classMap(me.renderClass())}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      @keydown=\"${me.#onKeyDown}\">\r\n      ${me.renderTemplate()}\r\n      <slot></slot>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': me.opened,\r\n      //'d-none' : !me.opened,\r\n      [me.#styleID]: true,\r\n      [`position-${me.position}`]: me.position,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  focus() {\r\n    this.query('[tabindex], input, select, textarea, button, a', true)?.focus();\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Show popup at x/y position on the screen\r\n   * @param {Number} x \r\n   * @param {Number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const obj = {\r\n      top: '0px',\r\n      left: '0px',\r\n      translate: `${x}px ${y}px`\r\n    };\r\n    me.#resize(obj);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      case 'Escape':\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    //if (!me.opened) return;\r\n    if (me.vPos || me.hPos) {\r\n      const opt = {\r\n        top: '0px',\r\n        left: '0px',\r\n        translate: `${me.hPos}px ${me.vPos}px`\r\n      };\r\n      const rule = me.dynamicStyle(me.#styleID);\r\n      Object.assign(rule.style, opt);\r\n    } else if (me.target) {\r\n      let target = GSDOM.query(document.documentElement, me.target);\r\n      target = target.renderRoot?.firstElementChild || target;\r\n      GSPopper.popupFixed(me.placement, me.#panel, target);\r\n    }\r\n\r\n  }\r\n\r\n  #resize(obj = {}) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n    if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n    if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n    if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n    Object.assign(rule.style, obj);\r\n  }\r\n\r\n  #onPopup(e) {\r\n    const me = this;\r\n    me.#caller = e;\r\n    if (e instanceof Event) {\r\n      GSEvents.prevent(e);\r\n      me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n    }\r\n\r\n    if (me.placement) {\r\n      GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n      me.opened = true;\r\n      return;\r\n    }\r\n\r\n    let x = e.clientX, y = e.clientY;\r\n    const rect = me.#panel.getBoundingClientRect();\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #attachTaraget() {\r\n    const me = this;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    me.trigger.split(' ').forEach(evt => {\r\n      targets.forEach(target => me.attachEvent(target, evt, me.#onPopup.bind(me)));\r\n    });\r\n  }\r\n\r\n  #onAuto(e) {\r\n    if (this.autoclose) this.close();\r\n  }\r\n\r\n  get #panel() {\r\n    return this.#panelRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-popup');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, classMap, ifDefined } from '../lib.mjs';\r\nimport { literalTemplate } from '../directives/literal.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSProgressElement extends GSElement {\r\n\r\n  static properties = {\r\n    min: { reflect: true, type: Number },\r\n    max: { reflect: true, type: Number },\r\n    step: { reflect: true, type: Number },\r\n    value: { reflect: true, type: Number },\r\n    label: { reflect: true }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.min = 0;\r\n    this.step = 1;\r\n    this.max = 100;\r\n    this.value = 0;\r\n    this.styles = { width: '0%' };\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'progress-bar' : true,\r\n      [me.#styleID] : true\r\n    }\r\n    return css;\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#updateStyle();\r\n    const obj = {min :me.min, max:me.max, step:me.step, value:me.value, percentage:me.percentage};\r\n    return html`\r\n    <div class=\"progress\" @keydown=\"${me.#onKeySelect}\" dir=\"${ifDefined(me.direction)}\">\r\n        <div class=\"${classMap(me.renderClass())}\" \r\n             \r\n             role=\"progressbar\"\r\n             tabindex=\"0\">\r\n             ${literalTemplate(me.label, obj)}\r\n        </div>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    if (changed.has('value')) {\r\n      let val = me.step + changed.get('value');\r\n      val = me.#update(val, val);\r\n      changed.set('value', val);\r\n    }\r\n  }\r\n\r\n  updated(changed) {\r\n    if (changed.has('value')) {\r\n      this.notify();\r\n    }\r\n  }\r\n\r\n  increase(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value + val, me.value);\r\n    return true;\r\n  }\r\n\r\n  decrease(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value - val, me.value);\r\n    return true;\r\n  }\r\n\r\n  get percentage() {\r\n    const me = this;\r\n    return Math.trunc((me.value / me.max) * 100);\r\n  }\r\n\r\n  #updateStyle() {\r\n    const me = this;\r\n    me.styles.width = `${me.percentage}%`;\r\n    me.dynamicStyle(me.#styleID, me.styles);\r\n  }\r\n\r\n  #update(val, old = 0) {\r\n    val = GSUtil.asNum(val, GSUtil.asNum(old));\r\n    const me = this;\r\n    if (val > me.max) val = me.max;\r\n    if (val < me.min) val = me.min;\r\n    return val;\r\n  }\r\n\r\n  #onKeySelect(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp' :\r\n      case 'ArrowRight' :\r\n          return me.increase();\r\n      case 'ArrowLeft' :\r\n      case 'ArrowDown' :\r\n         return me.decrease();\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-progress');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\n\r\nexport class GSSpinnerElement extends GSElement {\r\n\r\n    static styles = css`.spinner-border { border: var(--bs-spinner-border-width) solid currentcolor; border-right-color: transparent; }`;\r\n\r\n    static properties = {\r\n        color: { ...color, reflect: true },\r\n        small: { type: Boolean, reflect: true },\r\n        pulsar: { type: Boolean }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\" role=\"status\"></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"spinner-border\": !me.pulsar,\r\n            \"spinner-grow\": me.pulsar,\r\n            [`text-${me.color}`]: me.color,\r\n            [`spinner-border-sm`]: !me.pulsar && me.small,\r\n            [`spinner-grow-sm`]: me.pulsar && me.small,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-spinner');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitterElement class\r\n * @module components/GSSplitterElement\r\n */\r\n\r\nimport { classMap, createRef, ref, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCSSMap } from '../base/GSCSSMap.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { notEmpty, numGT0, placement } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSSplitterElement extends GSElement {\r\n\r\n    static properties = {\r\n        // Check if splitter use vertical or horizontal splitting\r\n        split: { reflect: true },\r\n        // start|end|top|bottom\r\n        resize: { ...placement, hasChanged: notEmpty },\r\n        size: { type: Number, hasChanged: numGT0 }\r\n    }\r\n\r\n    #cursor = 0;\r\n    #styleID = GSID.id;\r\n    #styleTGT = GSID.id;\r\n    #elRef = createRef();\r\n    #mouseController;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.size = 8;\r\n        me.resize = 'start';\r\n        me.dynamicStyle(me.#styleID);\r\n        me.#load();\r\n        me.#mouseController = new ElementMoveController(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        //this.dynamicStyle(this.#styleTGT, null, true);\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        super.firstUpdated(changed);\r\n        const me = this;\r\n        me.#mouseController.attach(me.#splitter);\r\n        //const shadow = GSDOM.root(me.target) instanceof ShadowRoot;\r\n        //me.dynamicStyle(me.#styleTGT, {}, !shadow);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#elRef)} \r\n            @dblclick=\"${me.#onDoubleClick}\"\r\n            data-gs-class=\"${me.#styleID}\" \r\n            class=\"${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'splitter': true,\r\n            [me.#styleID]: true\r\n        }\r\n        return css;\r\n    }\r\n\r\n    updated(changedProperties) {\r\n        const me = this;\r\n        me.#cssUpdate();\r\n    }\r\n\r\n    /**\r\n    * Lock UI for mouse events to enable resizing over embedded iframes\r\n    * @param {MouseEvent} e \r\n    */\r\n    onStartMove(e) {\r\n        const me = this;\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', { start: true });\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    onMouseMove(e) {\r\n        const me = this;\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Save last position and unlock mouse UI events when resizing finished\r\n     * @param {*} e \r\n     */\r\n    onEndMove(e) {\r\n        const me = this;\r\n        me.#save();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', { stop: true });\r\n    }\r\n\r\n    /**\r\n    * Check if splitter use vertical or hotizontal splitting\r\n    * @returns {Boolean}\r\n    */\r\n    get isVertical() {\r\n        return this.split === 'vertical';\r\n    }\r\n\r\n    get isHorizontal() {\r\n        return !this.isVertical;\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display', 'none')).pop();\r\n        }\r\n        el.classList?.add(me.#styleTGT);\r\n        return el;\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.#elRef.value;\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        return this.target.style;\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n\r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n                .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, true);\r\n                    el.dataset.gsSplitter = true;\r\n                });\r\n        } else {\r\n            me.#lockable\r\n                .filter(el => el.dataset.gsSplitter)\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, false);\r\n                    delete el.dataset.gsSplitter;\r\n                });\r\n        }\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { width: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { height: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        const key = me.isVertical ? 'width' : 'height';\r\n        me.#styleDynamic[key] = val + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { [key]: val + \"px\" }, true);\r\n    }\r\n\r\n    #cssUpdate() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        const opt = {\r\n            [size]: `${me.size}px`,\r\n            [full]: '100%',\r\n            'border-width': '1px',\r\n            cursor: cursor,\r\n            'border-color': 'darkgray',\r\n            'border-style': 'solid',\r\n            'background-color': 'lightgray',\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-splitter');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNavItemElement } from '../NavItem.mjs';\r\n\r\n/**\r\n * Tab component (gs-tab), generate selectable/switchable tabs on a panel\r\n */\r\nexport class GSTabItemElement extends GSNavItemElement {\r\n\r\n  static properties = {\r\n    name: {}\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.#updateCSS + this.css;\r\n  }\r\n\r\n  get #updateCSS() {\r\n    const me = this;\r\n    return me.shouldUpdate() ? GSUtil.normalize(me.parentComponent?.tabCSS) : '';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.parentComponent?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\n\r\n/**\r\n * Container for individual tab; part of tabed panel\r\n */\r\nexport class GSTabPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    name: {},\r\n    template: {},\r\n    active: { type: Boolean, reflect : true }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.active = false;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" \r\n      class=\"${classMap(this.renderClass())}\">\r\n      <slot>\r\n      ${this.template ? html`<gs-template flat src=\"${this.template}\"></gs-template>` : ''}\r\n      </slot></div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tab-pane': true,\r\n      'd-none' : !me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tab-group') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../../base/GSID.mjs';\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { PlacementTypes } from '../../properties/placement.mjs';\r\nimport { GSNavElement } from '../Nav.mjs';\r\n\r\n/**\r\n * Panel with tabs component (gs-tab-group), generate childrens gs-tab and gs-tab-panel \r\n */\r\nexport class GSTabGroupElement extends GSNavElement {\r\n\r\n  static properties = {\r\n    panelCSS: { attribute: 'css-panel' },\r\n    tabCSS: { attribute: 'css-tab' },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n   \r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    // link tabs and panels\r\n    me.items.forEach(el => me.#findPanel(el));\r\n    me.onSelected(me.active);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.items.forEach(el => me.#findPanel(el));\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'd-flex': me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    const me = this;\r\n    const reverse = PlacementTypes.isAfter(me.placement);\r\n    const list = [super.renderWrappedUI('tabs'),\r\n    html`<div class=\"tab-content flex-fill ${me.panelCSS}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <slot name=\"panels\"></slot>\r\n      </div>\r\n      <slot class=\"d-none\"></slot>`];\r\n    return reverse ? list.reverse() : list;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const css = super.renderWrappedClass();\r\n    return me.mapCSS(me.tabCSS, css);\r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    const me = this;\r\n    const tabs =  me.#renderTabs();\r\n    const panels = me.#renderPanels();\r\n    return tabs.concat(...panels);\r\n  }\r\n\r\n  #renderTabs() {    \r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab generated slot=\"tabs\"\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\"    \r\n        title=\"${ifDefined(o.title)}\"\r\n        name=\"${o.name}\"></gs-tab>`;\r\n    });    \r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  #renderPanels() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-panel generated  \r\n        slot=\"panels\" name=\"${o.name}\" \r\n        .active=\"${ifDefined(o.active)}\"\r\n        template=\"${ifDefined(o.template)}\"></gs-tab-panel>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when tab selected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onSelected(el) {\r\n    el?.click();\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = true;\r\n  }\r\n\r\n  /**\r\n   * Callback when tab deselected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onDeselected(el) {\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = false;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-TAB';\r\n  }\r\n\r\n  /**\r\n   * Selected Tab node name is used to find the panel.\r\n   * If panel found, auto-link it with node element\r\n   * @param {GSTabElement} el \r\n   */\r\n  #findPanel(el) {\r\n    if (!el) return null;\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    const generated = me.data?.length > 0;\r\n    let panel = el[key] || me.query(`gs-tab-panel[name=\"${el.name}\"]`, generated);\r\n    if (!el[key]) el[key] = panel;\r\n    return panel;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\n/**\r\n * A HTML Table renderer for tabular data representation.\r\n * Either use \"storage\" property to point to data handler\r\n * or use simpler form by using \"data\" property.\r\n * \r\n * NOTE: Simpler form currently does not suport data filter.\r\n * Simpler form is only for read-ony static data representation.\r\n */\r\nexport class GSTableElement extends GSElement {\r\n\r\n  static #icons = ['sort-up', 'arrow-down-up', 'sort-down-alt'];\r\n\r\n  static styles = css`th:hover { opacity: 50% !important; }`;\r\n\r\n  static CELLS = {\r\n    align: {},\r\n    width: {},\r\n    width: {},\r\n    css: {},\r\n    title: {},\r\n    colspan: {},\r\n    storage: {},\r\n    ref: {}, // if set; use storage or gs-items to map ref value to virtual field\r\n    filter: { type: Boolean },\r\n    hidden: { type: Boolean },\r\n    fixed: { type: Boolean },\r\n    filterType: { attribute: 'filter-type' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    ...GSData.PROPERTIES\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    color: { ...color },\r\n    colorHead: { ...color, attribute: 'head-color' },\r\n    colorSelect: { ...color, attribute: 'select-color' },\r\n    colorSort: { ...color, attribute: 'sort-color' },\r\n    stripedColumn: { type: Boolean, attribute: 'striped-column' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    divider: { type: Boolean },\r\n    striped: { type: Boolean },\r\n    hover: { type: Boolean },\r\n    small: { type: Boolean },\r\n    grid: { type: Boolean },\r\n    borderless: { type: Boolean },\r\n\r\n    sort: { type: Array, state: true },\r\n    columns: { type: Array, state: true },\r\n    key: { type: Number, state: true },\r\n\r\n    data: { type: Array },\r\n    datacolumn: { type: Boolean },\r\n    multisort: { type: Boolean },\r\n    multiselect: { type: Boolean },\r\n    protected: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n    toggle: { type: Boolean },\r\n    sortable: { type: Boolean },\r\n  }\r\n\r\n  #config = [];\r\n  #sortOrder = [];\r\n  #auto = false;\r\n\r\n  constructor() {\r\n    super();\r\n    this.headColor = 'secondary';\r\n    this.colorSelect = 'info';\r\n    this.columns = [];    \r\n    this.data = [];\r\n    this.sort = [];\r\n    this.key = 0;\r\n  }\r\n\r\n  get selected() {\r\n    return this.dataController.selected;\r\n  }\r\n\r\n  set search(val) {\r\n    const me = this;\r\n    if (me.storage && me.dataController) {\r\n      return me.dataController.search = val;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#config = GSItem.proxify(me, GSTableElement.CELLS);\r\n    if (me.columns.length === 0) me.columns = me.#config.map(v => v.name);\r\n    if (!me.storage) {      \r\n      me.storage = me.#auto = GSID.next('table-');\r\n    }\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.dataController.clearSelected(this.data);\r\n    this.data = [];\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'user-select-none': me.protected,\r\n      'table': true,\r\n      'table-sm': me.small,\r\n      'table-hover': me.hover,\r\n      'table-striped': me.striped,\r\n      'table-bordered': me.grid,\r\n      'table-borderless': me.borderless,\r\n      'table-striped-columns': me.stripedColumns,\r\n      [`table-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.dataController?.read();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (me.columns.length != me.sort.length) me.sort = Array(me.columns.length).fill(0);\r\n    if (me.datacolumn && me.data.length > 0) {\r\n      me.columns = me.data[0];\r\n      me.data = me.data.slice(1);\r\n    }\r\n    if (changed.has('multiselect') && !me.multiselect) me.dataController.clearSelected();\r\n    if (changed.has('selectable') && !me.selectable) me.dataController.clearSelected();\r\n    if (changed.has('sortable') || changed.has('multisort')) {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [];\r\n    }\r\n\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const headColor = me.colorHead ? `table-${me.colorHead}` : '';\r\n    return html`\r\n      <table  \r\n       dir=\"${ifDefined(me.direction)}\"\r\n       @keyup=\"${me.#onKeyUp}\"\r\n       @keydown=\"${me.#onKeyDown}\"\r\n       class=\"${classMap(me.renderClass())}\">\r\n        <thead class=\"${ifDefined(headColor)}\">\r\n          ${me.#renderFilters()}\r\n          <tr @click=${me.#onSort}>\r\n            ${me.columns.map((entry, index) => me.#renderColumn(entry, index))}\r\n          </tr>\r\n        </thead>\r\n        <tbody @click=${me.#onSelect} @contextmenu=${me.#onSelect} class=\"${me.divider ? 'table-group-divider' : ''}\" role=\"button\">\r\n          ${me.data.map((entry, index) => me.#renderRecord(entry, index))}\r\n          ${me.#renderEmpty()}\r\n        </tbody>\r\n      </table>\r\n      <slot name=\"extra\">${me.#renderHandler()}</slot>\r\n    `;\r\n  }\r\n\r\n  #renderHandler() {\r\n    const me = this;\r\n    return me.#auto ? html`<gs-data-handler type=\"cached\" mode=\"\" id=${me.#auto} generated></gs-data-handler>` : '';\r\n  }\r\n\r\n  onDataRead(data) {\r\n    const me = this;\r\n    me.data = data;\r\n    //me.dataController.clearSelected();\r\n\r\n    // update filtering\r\n    if (data.length > 0 && me.#hasFilters) {\r\n      me.#config.forEach((entry, index) => {\r\n        entry.columnType = me.#columType(index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear table filters\r\n   */\r\n  clear() {\r\n    this.#input.forEach(el => el.value = '');\r\n    this.dataController?.filter([]);\r\n  }\r\n\r\n  valueAt(row, cell) {\r\n    return this.data.length > row ? this.data[row][cell] : undefined;\r\n  }\r\n\r\n  get #input() {\r\n    return this.queryAll('th > input, th > select', true);\r\n  }\r\n\r\n  get #hasFilters() {\r\n    return this.#config.filter(o => o.filter).length > 0;\r\n  }\r\n\r\n  #columType(index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const cell = me.valueAt(0, me.columns[index]);\r\n    cfg.type = cfg.type || 'text';\r\n    const cfgType = { 'string': 'text', 'currency': 'number', 'timestamp': 'datetime-local' }[cfg.type]\r\n    const dataType = cell instanceof Date ? 'date' : typeof cell;\r\n    return cell ? dataType : cfgType || cfg.type;\r\n  }\r\n\r\n  #renderFilters() {\r\n    const me = this;\r\n    return me.#hasFilters ? html`<tr>${me.columns.map((entry, index) => me.#renderFilter(entry, index))}</tr>` : '';\r\n  }\r\n\r\n  #renderFilter(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (!cfg?.filter) return html`<th></th>`;\r\n\r\n    let mask = '';\r\n    const hasSub = cfg.childElementCount > 0;\r\n    const isDate = cfg.columnType === 'date';\r\n    if (isDate) mask = cfg.format || GSUtil.getDateFormat(cfg.locale || GSUtil.locale);\r\n    const css = `${GSUtil.normalize(me.cssFilter)} ${GSUtil.normalize(cell.cssFilter)}`; \r\n\r\n    if (hasSub && cfg.fixed) {\r\n      return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n          <select is=\"gs-ext-select\" .index=${index}\r\n              class=\"form-select ${css}\" \r\n              name=\"${cell}\"> \r\n              ${me.#renderOption(cfg)}\r\n              </select>\r\n          </th>`;\r\n    }\r\n\r\n    let listid = '';\r\n    let list = '';\r\n    if (hasSub) {\r\n      listid = `${me.id}-list-${index}`;\r\n      list = html`<datalist id=\"${listid}\">${me.#renderOption(cfg)}</datalist>`;\r\n    } \r\n\r\n    return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n        ${list}\r\n        <input is=\"gs-ext-input\" .index=${index}\r\n            class=\"form-control ${css}\" \r\n            mask=\"${ifDefined(mask)}\"\r\n            list=\"${ifDefined(listid)}\"\r\n            name=\"${cell}\" \r\n            placeholder=\"${ifDefined(cfg.title)}\" \r\n            type=\"${cfg.filterType || cfg.columnType}\"\r\n            data-slots=\"${ifDefined(isDate ? 'DMY' : undefined)}\">\r\n        </th>`;\r\n  }\r\n\r\n  #renderOption(cfg) {\r\n    if (cfg.childElementCount == 0) return '';\r\n    const sub = GSItem.proxify(cfg);\r\n    return sub.map(el => html`<option value=\"${el.value}\">${cfg.fixed ? el.map : ''}</option>`);\r\n  }\r\n\r\n  #renderColumn(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    const css = `${GSUtil.normalize(me.cssHeader)} ${GSUtil.normalize(cell.cssHeader)}`; \r\n    return html`\r\n      <th .index=${index} class=\"${css}\" \r\n        colspan=\"${ifDefined(cfg.colspan)}\"\r\n        width=\"${ifDefined(cfg?.width)}\">\r\n        <div class=\"d-flex justify-content-between\"> \r\n          <span>${cfg?.title || cell}</span>\r\n          ${me.#renderIcon(index)}\r\n        </div>\r\n      </th>\r\n    `\r\n  }\r\n\r\n  #renderIcon(index) {\r\n    const me = this;\r\n    if (!me.sortable) return '';\r\n    const icons = GSTableElement.#icons;\r\n    const sortType = me.sort[index];\r\n    const order = me.multisort ? me.#sortOrder.indexOf(index) + 1 : '';\r\n    return html`<gs-icon name=\"${icons[sortType + 1]}\" super=\"${order > 0 ? order : ''}\" color=\"${ifDefined(me.colorSort)}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderRecord(entry, index) {\r\n    const me = this;\r\n    const selected = me.dataController.isSelected(entry);\r\n    const color = me.colorSelect && selected ? `table-${me.colorSelect}` : '';\r\n    const cells = me.#remapRecord(entry);\r\n    return html`\r\n        <tr .index=${index} class=\"${color}\" tabindex=\"0\" ?selected=${selected}>\r\n          ${cells.map((cell, i) => me.#renderCell(cell, i))}\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  #renderCell(cell, index) {\r\n    const cfg = this.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    return html`<td class=\"text-${cfg?.align}\" colspan=\"${ifDefined(cfg.colspan)}\" ><span>${cell}</span></td>`;\r\n  }\r\n\r\n  #remapRecord(record) {\r\n    const me = this;\r\n    if (!Array.isArray(record)) record = me.columns.map(v => record[v]);\r\n    return record.map((val, i) => me.#config[i] ? GSData.format(me.#config[i], val) : val);\r\n  }\r\n\r\n  #renderEmpty() {\r\n    const me = this;\r\n    return me.data.length > 0 ?  '' :\r\n    html`<tr data-ignore=\"true\"><td colspan=\"${me.columns.length}\" class=\"text-center fw-bold text-muted\">${me.translate('No Data')}</td></tr>`;\r\n  }\r\n\r\n  #elementTofilter(el) {\r\n    if (!el.value) return undefined;\r\n    const isDate = el.type === 'date';\r\n    const val = isDate ? el.valueAsDate : el.value;\r\n    const cfg = this.#config[el.index];\r\n    return { name: el.name, value: val, locale : cfg?.locale };\r\n  }\r\n\r\n  #onFilter(e) {\r\n    \r\n    const me = this;\r\n    \r\n    const filter = me.#input\r\n      .map(el => me.#elementTofilter(el))\r\n      .filter(el => el?.value);\r\n\r\n    if (me.storage) {\r\n      me.dataController.filter(filter);\r\n    } else {\r\n      // TODO keep full data, use sorted\r\n      // GSData.filter(me.data, filter);\r\n    }\r\n  }  \r\n\r\n  #onSort(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.sortable) return;\r\n    \r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const column = e.target.closest('th');\r\n    if (!icon || !column) return;\r\n\r\n    const idx = column.index !== undefined ? column.index : GSDOM.getElementIndex(column);\r\n    const current = me.sort[idx];\r\n    const sortType = current === 1 ? -1 : current + 1;\r\n\r\n    if (me.multisort) {\r\n      if (sortType == 0) {\r\n        me.#sortOrder = me.#sortOrder.filter(v => v != idx);\r\n      } else if (!me.#sortOrder.includes(idx)) {\r\n        me.#sortOrder.push(idx);\r\n      }\r\n    } else {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [idx];\r\n    }\r\n\r\n    me.sort[idx] = sortType;\r\n\r\n    const sort = me.#prepareSorter(me.sort, me.#sortOrder);\r\n\r\n    if (me.storage) {\r\n      me.dataController?.sort(sort);\r\n    } else {\r\n      me.data = GSData.sortData(me.data, sort);\r\n    }\r\n\r\n    me.emit('sort');\r\n  }\r\n\r\n  #prepareSorter(sort, sortOrder) {\r\n    \r\n    const me = this;\r\n\r\n    if (sort.filter(v => v).length === 0) {\r\n      sort = Array(me.columns.length).fill(0);\r\n      sort[me.key] = 1;\r\n    }\r\n\r\n    // if data record is object (not simple array)\r\n    const isComplex = me.data[0] && !Array.isArray(me.data[0]);\r\n\r\n    // sort list \r\n    const list = sort.map((v, i) => v ? { name: isComplex ? me.columns[i] : undefined, col: i, ord: v, idx: sortOrder.indexOf(i) } : null).filter(v => v);\r\n\r\n    // order sort list by idx\r\n    sort = GSData.sortData(list, [{ name: 'idx', ord: 1 }]);\r\n\r\n    return sort;\r\n  }\r\n\r\n  #onSelect(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.selectable) return;\r\n    \r\n    const tr = e.target.tagName === 'TR' ? e.target : e.target.closest('tr');\r\n    if (!tr) return;\r\n    \r\n    // if context menu is attached and right click made\r\n    if (e.button === 2 && !me.query('gs-context')) return;\r\n    \r\n    const record = me.data[tr.index];\r\n    const isSelected = me.dataController.isSelected(record);\r\n    if (me.multiselect) {\r\n      if (isSelected) {\r\n        me.dataController.removeSelected(record);\r\n      } else {\r\n        me.dataController.addSelected(record);\r\n      }\r\n    } else if (me.toggle) {\r\n      if (isSelected) {\r\n        me.dataController.clearSelected(me.data);\r\n      } else {\r\n        me.dataController.addSelected(record);\r\n      }\r\n    } else {\r\n      me.dataController.clearSelected(me.data);\r\n      me.dataController.addSelected(record);\r\n    }\r\n    me.emit('select');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    if (!e.target.matches('tbody tr')) return;\r\n    let el = null;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        el = e.target.previousElementSibling;\r\n        break;\r\n      case 'ArrowDown':\r\n        el = e.target.nextElementSibling;\r\n        break;\r\n    }\r\n\r\n    if (el) {\r\n      el.focus();\r\n      this.emit('focus', el);\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') this.#onSelect(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-table');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport { createRef, ref, classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { stringArrayConverter, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSTagElement}\r\n */\r\nexport default class GSTagElement extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static styles = css`\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n\r\n    static properties = {\r\n        placeholder: {},\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        name: {},\r\n        data: { type: Array },\r\n        values: { type: Array, reflect: true, converter: stringArrayConverter },\r\n        appendable: { type: Boolean },\r\n        color: { ...color },\r\n        closeColor: { ...color, attribute: 'close-color' },\r\n        cssClose: { attribute: 'css-close' },\r\n        cssTag: { attribute: 'css-tag' },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {}\r\n    }\r\n\r\n    #dataListRef = createRef();\r\n    #inputRef = createRef();\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = '';\r\n        this.data = this.#items;\r\n        this.closeColor = 'light';\r\n        this.color = 'primary';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const tags = me.#renderTags();\r\n        return html`\r\n        <div  dir=\"${ifDefined(me.direction)}\" \r\n            class=\"${classMap(me.renderClass())}\"\r\n            @click=\"${me.#onClick.bind(me)}\">\r\n            ${tags}\r\n            <input type=\"text\" \r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            ${ref(me.#inputRef)}\r\n            name=\"${me.name}\" \r\n            list=\"${me.name}_list\"\r\n            class=\"form-control d-flex w-auto flex-grow-1\" \r\n            placeholder=\"${me.#info}\">\r\n            <datalist ${ref(me.#dataListRef)} id=\"${me.name}_list\">${me.#renderList()}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"d-flex\": true,\r\n            \"flex-wrap\": true,\r\n            \"align-items-center\": true,\r\n            \"gap-1 \": true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    get #info() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return me.placeholder ? me.placeholder : alt;\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTagElement.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.data.length >= me.max;\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax || (!optEl && me.appendable == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (!me.values.includes(fld.value)) {\r\n            me.values.push(fld.value);\r\n            fld.value = '';\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const value = tagEl.dataset.value;\r\n        me.values = me.values.filter(v => v != value);\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v));\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        const size = me.size > 0 ? `fs-${me.size}` : '';\r\n        return html`<div class=\"${classMap(me.#tagClass)}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"${classMap(me.#btnClass)}\"></button></div>`;\r\n    }\r\n\r\n    get #tagClass() {\r\n        const me = this;\r\n        const opt = {\r\n            badge: true,\r\n            tag: true,\r\n            [`fs-${me.size}`]: me.size > 0,\r\n            [`bg-${me.color}`]: me.color ? true : false\r\n        }\r\n        return me.mapCSS(me.cssTag, opt);\r\n    }\r\n\r\n    get #btnClass() {\r\n        const me = this;\r\n        const opt = {\r\n            'btn-close': true,\r\n            'ms-1': true,\r\n            [`bg-${me.closeColor}`]: me.closeColor ? true : false\r\n        }\r\n        return me.mapCSS(me.cssClose, opt);\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        return me.data.map(v => html`<option value=\"${v}\">`);\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el));\r\n    }\r\n\r\n    get #items() {\r\n        return this.#proxify(this).map(el => el.name).filter(v => v ? true : false);\r\n    }\r\n\r\n    get #input() {\r\n        return this.#inputRef.value;\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.#dataListRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-tag');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSTextElement extends GSElement {\r\n\r\n  #text = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.#text = this.innerText;\r\n    this.innerText = \"\";\r\n  }\r\n\r\n  renderUI() {\r\n    return this.translate(this.#text);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-text');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSTooltipElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    title: {},\r\n    target: {},\r\n    opened: { type: Boolean },\r\n    local: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowStyle = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.placement = 'top';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowStyle);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      role=\"tooltip\"\r\n      data-popper-placement=\"${me.placement}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      <div ${ref(me.#arrowRef)} \r\n          class=\"tooltip-arrow ${me.#arrowStyle}\" \r\n          data-gs-class=\"${me.#arrowStyle}\">\r\n      </div>\r\n      <div class=\"tooltip-inner\">${me.translate(me.title)}</div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tooltip': true,\r\n      'bs-tooltip-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  #attachEvents() {\r\n    const me = this;\r\n    me.attachEvent(me.#ref, 'mouseenter', me.open.bind(me));\r\n    me.attachEvent(me.#ref, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const arrowEl = me.#arrow;\r\n    const panelEl = me.#panel;\r\n    if (!panelEl) return;\r\n    if (me.opened) {\r\n      GSPopper.popupFixed(me.placement, panelEl, me.#ref, arrowEl);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, { top: '-1000px', left: '-1000px' });\r\n    }\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return me.local ? me.#refLocal : me.#refGlobal;\r\n    }\r\n  }\r\n\r\n  get #refLocal() {\r\n    const root = GSDOM.root(this);\r\n    return GSDOM.query(root, this.target);\r\n  }\r\n  \r\n  get #refGlobal() {\r\n    return GSDOM.query(document.body, this.target);\r\n  }\r\n\r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-tooltip');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty } from '../properties/index.mjs';\r\n\r\nexport class GSTemplateElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { reflect: true, hasChanged: notEmpty }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    const me = this;\r\n    if (me.flat) {\r\n      me.renderOptions.renderBefore = me;\r\n      return me.parentElement;\r\n    }\r\n    return super.createRenderRoot();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${this.renderTemplate()}`;\r\n  }\r\n\r\n\ttemplateInjected() {\r\n\t\tthis.emit('template-injected', null, true, true);\r\n\t}\r\n\r\n  static {\r\n    this.define('gs-template');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle automatic field value copy and select\r\n */\r\nexport class CopySelectController {\r\n\r\n  #host;\r\n\r\n  #clickCallback;\r\n  #copyCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#clickCallback = me.#onClick.bind(me);\r\n    me.#copyCallback = me.#onCopy.bind(me);\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on?.('click', me.#clickCallback);\r\n    me.#host.on?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host.off?.('click', me.#clickCallback);\r\n    me.#host.off?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  #onCopy() {\r\n    GSUtil.writeToClipboard(this.#host.value);\r\n  }\r\n\r\n  #onClick(e) {\r\n      const me = this;\r\n      if (me.#host.autocopy) GSUtil.writeToClipboard(me.#host.value);\r\n      if (me.#host.autoselect) me.#host.select();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle field mask \r\n */\r\nexport class MaskController {\r\n\r\n  static #special = '.^$*+?()[]{}\\|';\r\n\r\n  static #maskType = {\r\n    x: /[0-9a-fA-F]/g,\r\n    n: /[0-9]/g,\r\n    y: /[0-9]/g,\r\n    m: /[0-9]/g,\r\n    d: /[0-9]/g,\r\n    h: /[0-9]/g,\r\n    s: /[0-9]/g,\r\n    '.': /[0-9]/g,\r\n    '#': /[a-zA-Z]/g,\r\n    '*': /[0-9a-zA-Z]/g,\r\n    '_': /./g\r\n  };\r\n\r\n  #back = false;\r\n  #slots;\r\n  #prev;\r\n  #first;\r\n  #accept;\r\n  #pattern;\r\n\r\n  #host;\r\n\r\n  #keyDownCallback;\r\n  #inputCallback;\r\n  #focusCallback;\r\n  #changeCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    me.#inputCallback = me.#format.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    me.#changeCallback = me.#onChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.initRules();\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n    me.#host.on('input', me.#inputCallback);\r\n    me.#host.on('focus', me.#focusCallback);\r\n    me.#host.on('change', me.#changeCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n    me.#host.off('input', me.#inputCallback);\r\n    me.#host.off('focus', me.#focusCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n  }\r\n\r\n  initRules() {\r\n    const me = this;\r\n    if (!me.pattern) return;\r\n    me.#slots = me.#buildSlots();\r\n    me.#prev = (j => Array.from(me.pattern, (c, i) => me.#slots.has(c) ? j = i + 1 : j))(0);\r\n    me.#first = [...me.pattern].findIndex(c => me.#slots.has(c));\r\n    me.#accept = me.#buildAccept();\r\n    me.#toPattern();    \r\n  }\r\n  \r\n  validate() {\r\n    const me = this;\r\n    me.setCustomValidity('');\r\n\r\n    const isValid = me.#host.checkValidity();\r\n    const isMatch = isValid && me.isMatch;\r\n\r\n    if (!isMatch) me.setCustomValidity('Data did not match mask!');\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  checkValidity(isValid) {    \r\n    return isValid && this.isMatch;  \r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.#host.reportValidity();\r\n  }\r\n\r\n  setSelectionRange(i, j) {\r\n    this.#host.setSelectionRange(i, j);\r\n  }\r\n  \r\n  select() {\r\n    this.#host.select();\r\n  }\r\n\r\n  get value() {\r\n    const [i, j] = this.#range();\r\n    return this.raw.substring(0, j);\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get pattern() {\r\n    return this.#host.mask;\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get selectionStart() {\r\n    return this.#host.selectionStart;\r\n  }\r\n\r\n  get selectionEnd() {\r\n    return this.#host.selectionEnd;\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.#host.autoselect;\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n    \r\n    let isMatch = true;\r\n    if (me.#pattern) {\r\n      me.#pattern.lastIndex = 0;\r\n      isMatch = me.#pattern.test(me.raw);\r\n    }\r\n   \r\n    return isMatch;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    this.#back = e.key === \"Backspace\";\r\n  }\r\n\r\n  #onFocus(e) {\r\n    const me = this;\r\n    me.#format();\r\n    if (me.autoselect) me.select();\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.#format();\r\n    me.validate();\r\n  }\r\n\r\n  /**\r\n   * If data-slots not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildSlots() {\r\n    const me = this;\r\n    let slots = me.dataset.slots;\r\n    if (!slots) {\r\n      const maskType = MaskController.#maskType;\r\n      slots = [...new Set(me.pattern)]\r\n        .filter(v => maskType[v.toLowerCase()])\r\n        .join('');\r\n    }\r\n    return new Set(slots || \"_\");\r\n  }\r\n\r\n  /**\r\n   * If data-accept not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildAccept() {\r\n    const me = this;\r\n    let accept = me.dataset.accept;\r\n    if (!accept) {\r\n      const maskType = MaskController.#maskType;\r\n      accept = [...new Set(me.pattern)]\r\n      .map(v => maskType[v.toLowerCase()])\r\n      .filter(v => v);\r\n      if (accept.length > 0) {\r\n        const tmp = {};\r\n        accept.forEach(v => tmp[v.src] = v);\r\n        accept = Object.values(tmp);\r\n        return accept.length === 1 ? accept.pop() : accept;\r\n      } \r\n\r\n    }\r\n    return new RegExp(accept || \"\\\\d\", \"g\");\r\n  }\r\n\r\n  #range() {\r\n    const me = this;\r\n    const value = me.raw;\r\n    return [me.selectionStart, me.selectionEnd].map(i => {\r\n      i = me.#clean(value.slice(0, i)).findIndex(c => me.#slots.has(c));\r\n      return i < 0 ? me.#prev[me.#prev.length - 1] : me.#back ? me.#prev[i - 1] || me.#first : i;\r\n    });\r\n  }\r\n\r\n  #format() {\r\n    const me = this;\r\n    const [i, j] = me.#range();\r\n    const val = me.#clean(me.#host.raw);\r\n    me.value = val.join``;\r\n    me.setSelectionRange(i, j);\r\n    me.#back = false;\r\n  }\r\n\r\n  //  TODO support multi #accecpt\r\n  #clean(input) {\r\n    const me = this;\r\n    input = input.match(me.#accept) || [];\r\n    return Array.from(me.pattern, (c, i) => input[i] === c || me.#slots.has(c) ? input.shift() || c : c);\r\n  }\r\n\r\n  #toPattern() {\r\n\r\n    const me = this;\r\n\r\n    if (me.pattern.length === 0) return;\r\n\r\n    const chars = me.pattern.split('');\r\n    const masks = ['^'];\r\n\r\n    const maskType = MaskController.#maskType;\r\n    const special = MaskController.#special;\r\n\r\n    let cnt = 0;\r\n    chars.forEach((v, i) => {\r\n      const m = me.#slots.has(v) ? maskType[v.toLowerCase()] : null;\r\n      if (!m) {\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        cnt = 0;\r\n        if (special.includes(v)) masks.push('\\\\');\r\n        return masks.push(v);\r\n      }\r\n\r\n      chars[i] = new RegExp(m, 'g');\r\n\r\n      if (masks.length === 0) return masks.push(m.source);\r\n\r\n      if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n      if (cnt > 0) masks.push(`{${++cnt}}`);\r\n      cnt = 0;\r\n      masks.push(m.source);\r\n    });\r\n\r\n    if (cnt > 0) masks.push(`{${++cnt}}`);\r\n    masks.push('$');\r\n\r\n    me.#pattern = new RegExp(masks.join(''), 'g');\r\n    // me.#max = me.pattern.length;\r\n    // me.#masks = chars;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle multiple patterns\r\n */\r\nexport class MultipatternController {\r\n\r\n  #host;\r\n\r\n  #changeCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#changeCallback = me.#onChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('change', me.#changeCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('change', me.#changeCallback);\r\n  }\r\n  \r\n  validate() {\r\n    const me = this;\r\n    me.setCustomValidity('');\r\n\r\n    const isValid = me.#host.checkValidity();\r\n    const isMatch = isValid && me.isMatch;\r\n\r\n    if (!isMatch) me.setCustomValidity('Data did not match pattern!');\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  checkValidity(isValid) {    \r\n    return isValid && this.isMatch;  \r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.#host.reportValidity();\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get patterns() {\r\n    const obj = this.#host.multipattern;\r\n    if (obj instanceof RegExp) return [obj];\r\n    if (Array.isArray(obj)) return obj.filter(o => o instanceof RegExp);\r\n    throw new Error('Invalid multipattern value. Expected RegExp object or array.');\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n    let isMatch = true;\r\n    for (const r of me.patterns) {\r\n      isMatch = r.test(me?.value);\r\n      if (isMatch) break;\r\n    }\r\n   \r\n    return isMatch;\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.validate();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type number to support max length entry\r\n */\r\nexport class NumberController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get maxLength() {\r\n    return GSUtil.asNum(this.#host.maxLength, 0);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n    \r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'number') return me.#onNumberInput(e);\r\n  }\r\n\r\n  #onNumberInput(e) {\r\n    const me = this;\r\n    if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n        me.value = me.value.substring(0, me.maxLength);\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle for input tpye password to support keyboard shortcut for password reveal.\r\n */\r\nexport class PasswordController {\r\n\r\n  #host;\r\n\r\n  #revealing = false;\r\n\r\n  #keyUpCallback;\r\n  #keyDownCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyUpCallback = me.#onKeyUp.bind(me);\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('keyup', me.#keyUpCallback);\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keyup', me.#keyUpCallback);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  get reveal() {\r\n    return this.#host.hasAttribute('reveal');\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  set type(val) {\r\n    if (this.#host) this.#host.type = val;\r\n  }\r\n\r\n  #isReveal(e) {\r\n    return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    const me = this;\r\n    if (e.key === 'Shift' && me.#revealing) {\r\n      me.type = 'password';\r\n    }\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (me.#isReveal(e)) {\r\n      me.#revealing = true;\r\n      me.type = 'text';\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCSSMap } from \"../../../base/GSCSSMap.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type text to support text value changes based on CSS\r\n */\r\nexport class TextController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'text') me.value = me.#updateText(me.value);\r\n  }\r\n\r\n  #updateText(value = '') {\r\n    const map = GSCSSMap.styleValue(this.#host, 'text-transform');\r\n    if (map) value = GSUtil.textTransform(map.value, value);\r\n    return value;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update avaialble selections in another field selections.\r\n */\r\nexport class ListController {\r\n\r\n  #host;\r\n\r\n  #monitorCallback;\r\n  #changeCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#monitorCallback = me.#onMonitor.bind(me);\r\n    me.#changeCallback = me.#onDataChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (list) {\r\n      me.#host.on('blur', me.#blurCallback);\r\n      me.#host.on('change', me.#changeCallback);\r\n      me.#host.attachEvent(me.filter, 'change', me.#monitorCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('blur', me.#blurCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n    me.#host.removeEvent(me.filter, 'change', me.#monitorCallback);\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n      this.#onDataChange();\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get list() {\r\n    const me = this;\r\n    if (me.#host.list) return me.#host.list;\r\n    const list = GSAttr.get(me.#host, 'list');\r\n    return GSDOM.getByID(me.#host.owner, list);\r\n  }\r\n\r\n  get filter() {\r\n    const me = this;\r\n    const filter = GSAttr.get(me.#host, 'data-filter');\r\n    return GSDOM.getByID(me.#host.owner, filter);\r\n  }\r\n\r\n  get owner() {\r\n    return this.#host.owner;\r\n  }\r\n\r\n  get strict() {\r\n    return GSAttr.get(this.#host, 'strict', '');\r\n  }\r\n\r\n  #onBlur(e) {\r\n    if (!this.#isInList()) GSEvents.send(this.#host, 'strict', { ok: false, source: e });\r\n  }\r\n\r\n  #onDataChange(e) {\r\n    const me = this;\r\n    const own = me.owner;\r\n    let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n    let clean = false;\r\n    if (!opt) {\r\n        opt = me.list?.querySelector('option');\r\n        clean = true;\r\n    }\r\n\r\n    const obj = opt?.dataset || {};\r\n    Object.entries(obj).forEach(p => {\r\n        const val = clean ? '' : p[1];\r\n        const key = p[0];\r\n        GSAttr.set(me.#host, `data-${key}`, p[1]);\r\n        if (key === 'id' || key === 'group') return;\r\n\r\n        const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n        const els = Array.from(GSDOM.queryAll(own, filter));\r\n        els.filter(el => el.tagName !== 'OPTION')\r\n            .filter(el => el !== me)\r\n            .filter(el => GSAttr.get(el, 'list').length === 0)\r\n            .forEach(el => me.#togleEl(el, key, val))\r\n    });\r\n  }\r\n\r\n  #onMonitor(e) {\r\n    const me = this;\r\n    const list = me.list;\r\n    me.value = '';\r\n    const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n    GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n    const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n    GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n\r\n  }\r\n\r\n  #togleEl(el, key = '', value = '') {\r\n\r\n    const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n    const isMatch = value.length > 0 && data.includes(value);\r\n    const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n\r\n    if (frmel) {\r\n      GSAttr.toggle(el, 'disabled', !isMatch);\r\n    } else {\r\n      isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n    }\r\n\r\n    const form = GSDOM.closest(el, 'form');\r\n    GSDOM.formElements(form)\r\n      .forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n  }\r\n\r\n  #isInList() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (!list) return true;\r\n    if (!me.strict) return true;\r\n    if (!list.querySelector('option')) return true;\r\n    const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n    return opt != null;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSBeep } from \"../../../base/GSBeep.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Handle for input/testarea to support validity checkups\r\n */\r\nexport class ValidityController {\r\n\r\n  #host;\r\n\r\n  #invalidCallback;\r\n  #blurCallback;\r\n  #changeCallback;\r\n  #focusCallback;\r\n\r\n  #processing;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#processing = false;\r\n    me.#host = host;\r\n    me.#invalidCallback = me.#onInvalid.bind(me);\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#changeCallback = me.#onChange.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on?.('invalid', me.#invalidCallback);\r\n    me.#host.on?.('blur', me.#blurCallback);\r\n    me.#host.on?.('focus', me.#focusCallback);\r\n    me.#host.on?.('change', me.#changeCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host.off?.('invalid', me.#invalidCallback);\r\n    me.#host.off?.('blur', me.#blurCallback);\r\n    me.#host.off?.('focus', me.#focusCallback);\r\n    me.#host.off?.('change', me.#changeCallback);\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.#host.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.#host.reportValidity();\r\n  }\r\n\r\n  focus() {\r\n    return this.#host.focus();\r\n  }\r\n\r\n  get validity() {\r\n    return this.#host.validity;\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  get beep() {\r\n    return this.#host.beep;\r\n  }\r\n\r\n  get block() {\r\n    return this.#host.block;\r\n  }\r\n\r\n  get timeout() {\r\n    return this.#host.timeout;\r\n  }\r\n\r\n  async #onInvalid(e) {\r\n    const me = this;\r\n    if (me.#processing) return;\r\n\r\n    me.#processing = true;\r\n    if (me.block) me.focus();\r\n    if (me.beep) await me.#beep();\r\n    if (me.timeout) {\r\n      await GSUtil.timeout(me.timeout);\r\n      me.setCustomValidity(me.validity.valid ? '' : ' ');\r\n    }\r\n    me.#processing = false;\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.setCustomValidity('');\r\n    const isValid = me.checkValidity();\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  #onFocus(e) {\r\n    GSDOM.toggleClass(this.#host, 'is-invalid', !this.validity.valid);\r\n  }\r\n\r\n  #onBlur(e) {\r\n    const me = this;\r\n    me.#onFocus(e);\r\n    const isValid = me.validity.valid;\r\n\r\n    if (!isValid) {\r\n      if (me.block) me.focus();\r\n      if (me.beep) me.#beep();\r\n    }\r\n  }\r\n\r\n  #beep() {\r\n    return GSBeep.beep(100, 1200, 150, 'triangle');\r\n  }\r\n\r\n}  ","\r\nimport { notEqual, defaultConverter } from '../../lib.mjs';\r\n\r\n\r\nconst defaultPropertyDeclaration = {\r\n    attribute: true,\r\n    reflect: false,\r\n    type: String,\r\n    converter: defaultConverter,\r\n    hasChanged: notEqual,\r\n}\r\n\r\nconst attributeToPropertyMap = Symbol();\r\nconst prepare = Symbol();\r\nconst elementProperties = Symbol();\r\nconst finalize = Symbol();\r\nconst finalized = Symbol();\r\n\r\nconst prepareFn = function () {\r\n    const me = this;\r\n    if (Object.getOwnPropertySymbols(me).includes(elementProperties)) return;\r\n    const superCtor = Object.getPrototypeOf(me);\r\n    if (typeof superCtor[finalize] === 'function') superCtor[finalize]();\r\n    me[elementProperties] = new Map(superCtor[elementProperties]);\r\n}\r\n\r\nconst attributeNameForProperty = (name, options) => {\r\n    const attribute = options.attribute;\r\n    return attribute === false\r\n        ? undefined\r\n        : typeof attribute === 'string'\r\n            ? attribute\r\n            : typeof name === 'string'\r\n                ? name.toLowerCase()\r\n                : undefined;\r\n}\r\n\r\n/**\r\n * Reactivity for HTMLInputElement based on Google ltd. Lit ReactiveElement\r\n */\r\nexport class ReactiveInput extends HTMLInputElement {\r\n\r\n    // user defiend \r\n    static properties = {};\r\n    \r\n    static [finalized] = false;\r\n\r\n    #reflectingProperties = undefined;\r\n    #instanceProperties = undefined;\r\n\r\n    #controllers = undefined;\r\n    #updatePromise = undefined;\r\n    #changedProperties = undefined;\r\n    #reflectingProperty = undefined;\r\n\r\n    #hasUpdated = false;\r\n    #isUpdatePending = false;\r\n\r\n    #isConnected = false;\r\n\r\n    /**\r\n     * Returns a list of attributes corresponding to the registered properties.\r\n    */\r\n    static get observedAttributes() {\r\n        Object.defineProperty(ReactiveInput.__proto__, prepare, { value: prepareFn });\r\n        const me = this;\r\n        me[finalize]();\r\n        return me[attributeToPropertyMap] && [...me[attributeToPropertyMap].keys()];\r\n    }\r\n\r\n    static addInitializer(initializer) {\r\n        const me = this;\r\n        me[prepare]();\r\n        me.initializers ??= [].push(initializer);\r\n    }\r\n\r\n    static [finalize]() {\r\n        const me = this;\r\n        //if (Object.hasOwn(me, 'finalized')) return;\r\n        if (me[finalized] === true) return;\r\n        me[finalized] = true;\r\n        me[prepare]();\r\n\r\n        if (Object.hasOwn(me, 'properties')) {\r\n            const props = me.properties;\r\n            const propKeys = [\r\n                ...Object.getOwnPropertyNames(props),\r\n                ...Object.getOwnPropertySymbols(props),\r\n            ];\r\n            for (const p of propKeys) {\r\n                me.createProperty(p, props[p]);\r\n            }\r\n        }\r\n\r\n        // Create the attribute-to-property map\r\n        me[attributeToPropertyMap] = new Map();\r\n        for (const [p, options] of me[elementProperties]) {\r\n            const attr = attributeNameForProperty(p, options);\r\n            if (attr !== undefined) {\r\n                me[attributeToPropertyMap].set(attr, p);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static createProperty(name, options) {\r\n        const me = this;\r\n        if (options.state) options.attribute = false;\r\n        me[prepare]();\r\n        me[elementProperties].set(name, options);\r\n        if (!options.noAccessor) {\r\n            const key = Symbol();\r\n            const descriptor = me.getPropertyDescriptor(name, key, options);\r\n            if (descriptor !== undefined) {\r\n                Object.defineProperty(me.prototype, name, descriptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    static getPropertyDescriptor(name, key, options) {\r\n        const { get, set } = Object.getOwnPropertyDescriptor(this.prototype, name) ?? {\r\n            get() {\r\n                return this[key];\r\n            },\r\n            set(v) {\r\n                this[key] = v;\r\n            },\r\n        }\r\n        return {\r\n            get() {\r\n                return get?.call(this);\r\n            },\r\n            set(value) {\r\n                const me = this;\r\n                const oldValue = get?.call(me);\r\n                set?.call(me, value);\r\n                me.requestUpdate(name, oldValue, options);\r\n            },\r\n            configurable: true,\r\n            enumerable: true,\r\n        }\r\n    }\r\n\r\n    static getPropertyOptions(name) {\r\n        return this[elementProperties].get(name) ?? defaultPropertyDeclaration;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initialize();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.enableUpdating(true);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n        me.#isConnected = true;\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.#isConnected = false;\r\n        this.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        this.#attributeToProperty(name, newValue);\r\n    }\r\n\r\n    // ******************************\r\n    // PUBLIC GETTERS\r\n    // ******************************\r\n\r\n    get hasUpdated() { return this.#hasUpdated; }\r\n    get isUpdatePending() { return this.#isUpdatePending; }\r\n    get renderRoot() { return this; }\r\n\r\n    // ******************************\r\n    // PROTECTED FUNCTIONS \r\n    // ******************************\r\n\r\n    addController(controller) {\r\n        // if (!(controller instanceof ReactiveController)) throw new Error('Argument not instance of ReactiveController');\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.#isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    enableUpdating(requestedUpdate) { }\r\n\r\n    firstUpdated(changedProperties) { }\r\n\r\n    updated(changedProperties) { }\r\n\r\n    getUpdateComplete() { return this.#updatePromise; }\r\n\r\n    scheduleUpdate() { return this.performUpdate(); }\r\n\r\n    shouldUpdate(changedProperties) { return true; }\r\n\r\n    willUpdate(changedProperties) { }\r\n\r\n    update(changedProperties) {\r\n        const me = this;\r\n        // The forEach() expression will only run when when #reflectingProperties is\r\n        // defined, and it returns undefined, setting #reflectingProperties to undefined\r\n        me.#reflectingProperties &&= me.#reflectingProperties.forEach((p) => me.#propertyToAttribute(p, this[p]));\r\n        me.#markUpdated();\r\n    }\r\n\r\n    get updateComplete() {\r\n        return this.getUpdateComplete();\r\n    }\r\n\r\n    requestUpdate(name, oldValue, options) {\r\n        const me = this;\r\n        if (name !== undefined) {\r\n            options ??= (me.constructor).getPropertyOptions(name);\r\n            const hasChanged = options.hasChanged ?? notEqual;\r\n            const newValue = me[name];\r\n            if (hasChanged(newValue, oldValue)) {\r\n                me.#changeProperty(name, oldValue, options);\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (me.#isUpdatePending === false) {\r\n            me.#updatePromise = me.#enqueueUpdate();\r\n        }\r\n    }\r\n\r\n    performUpdate() {\r\n\r\n        const me = this;\r\n        if (!me.#isUpdatePending) return;\r\n\r\n        if (!me.#hasUpdated) {\r\n\r\n            // Mixin instance properties once, if they exist.\r\n            if (me.#instanceProperties) {\r\n                for (const [p, value] of me.#instanceProperties) {\r\n                    this[p] = value;\r\n                }\r\n                me.#instanceProperties = undefined;\r\n            }\r\n\r\n            const elementProps = me.constructor[elementProperties];\r\n            if (elementProps.size > 0) {\r\n                for (const [p, options] of elementProps) {\r\n                    if (\r\n                        options.wrapped === true &&\r\n                        !me.#changedProperties.has(p) &&\r\n                        me[p] !== undefined\r\n                    ) {\r\n                        me.#changeProperty(p, this[p], options);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let shouldUpdate = false;\r\n        const changedProperties = me.#changedProperties;\r\n        try {\r\n            shouldUpdate = me.shouldUpdate(changedProperties);\r\n            if (shouldUpdate) {\r\n                me.willUpdate(changedProperties);\r\n                me.#controllers?.forEach((c) => c.hostUpdate?.());\r\n                me.update(changedProperties);\r\n            } else {\r\n                me.#markUpdated();\r\n            }\r\n        } catch (e) {\r\n            shouldUpdate = false;\r\n            me.#markUpdated();\r\n            throw e;\r\n        }\r\n\r\n        if (shouldUpdate) {\r\n            me.#didUpdate(changedProperties);\r\n        }\r\n    }\r\n\r\n    // ******************************\r\n    // PRIVATE FUNCTIONS \r\n    // ******************************\r\n\r\n    #didUpdate(changedProperties) {\r\n        const me = this;\r\n        me.#controllers?.forEach((c) => c.hostUpdated?.());\r\n        if (!me.#hasUpdated) {\r\n            me.#hasUpdated = true;\r\n            me.firstUpdated(changedProperties);\r\n        }\r\n        me.updated(changedProperties);\r\n    }\r\n\r\n    #markUpdated() {\r\n        const me = this;\r\n        me.#changedProperties = new Map();\r\n        me.#isUpdatePending = false;\r\n    }\r\n\r\n    async #enqueueUpdate() {\r\n        const me = this;\r\n        me.#isUpdatePending = true;\r\n        try {\r\n            await me.#updatePromise;\r\n        } catch (e) {\r\n            Promise.reject(e);\r\n        }\r\n        const result = me.scheduleUpdate();\r\n\r\n        if (result != null) {\r\n            await result;\r\n        }\r\n        return !me.#isUpdatePending;\r\n    }\r\n\r\n    #changeProperty(name, oldValue, options) {\r\n        const me = this;\r\n        if (!me.#changedProperties.has(name)) {\r\n            me.#changedProperties.set(name, oldValue);\r\n        }\r\n\r\n        if (options.reflect === true && me.#reflectingProperty !== name) {\r\n            (me.#reflectingProperties ??= new Set()).add(name);\r\n        }\r\n    }\r\n\r\n    #attributeToProperty(name, value) {\r\n        const me = this;\r\n        const ctor = me.constructor;\r\n        const propName = (ctor[attributeToPropertyMap]).get(name);\r\n        if (propName !== undefined && me.#reflectingProperty !== propName) {\r\n            const options = ctor.getPropertyOptions(propName);\r\n            const converter =\r\n                typeof options.converter === 'function'\r\n                    ? { fromAttribute: options.converter }\r\n                    : options.converter?.fromAttribute !== undefined\r\n                        ? options.converter\r\n                        : defaultConverter;\r\n            // mark state reflecting\r\n            me.#reflectingProperty = propName;\r\n            me[propName] = converter?.fromAttribute(value, options.type);\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #propertyToAttribute(name, value) {\r\n        const me = this;\r\n        const elementProps = me.constructor[elementProperties];\r\n        const options = elementProps?.get(name);\r\n        const attr = attributeNameForProperty(name, options);\r\n        if (attr !== undefined && options.reflect === true) {\r\n            const converter =\r\n                (options.converter)?.toAttribute !==\r\n                    undefined\r\n                    ? (options.converter)\r\n                    : defaultConverter;\r\n            const attrValue = converter?.toAttribute(value, options.type);\r\n\r\n            me.#reflectingProperty = name;\r\n            if (attrValue == null) {\r\n                me.removeAttribute(attr);\r\n            } else {\r\n                me.setAttribute(attr, attrValue);\r\n            }\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #saveInstanceProperties() {\r\n        const me = this;\r\n        const instanceProperties = new Map();\r\n        const elementProps = me.constructor[elementProperties];\r\n        for (const p of elementProps.keys()) {\r\n            if (Object.hasOwn(me, p)) {\r\n                instanceProperties.set(p, me[p]);\r\n                delete me[p];\r\n            }\r\n        }\r\n        if (instanceProperties.size > 0) {\r\n            me.#instanceProperties = instanceProperties;\r\n        }\r\n    }\r\n\r\n    #initialize() {\r\n        const me = this;\r\n        me.#updatePromise = new Promise((res) => me.enableUpdating = res);\r\n        me.#changedProperties = new Map();\r\n        me.#saveInstanceProperties();\r\n        me.requestUpdate();\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n        const data = this.form?.data;\r\n        if (data) GSDOM.fromObject2Element(this, data);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n        \r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity();\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get form() {\r\n        return this.closest('gs-form');\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n    /**\r\n     * Find closest top element by CSS selector\r\n     * @param {String} query \r\n     * @returns {HTMLElement}\r\n     */\r\n    closest(query = '') {\r\n        return GSDOM.closest(this, query);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n        \r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = { value: o };\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSData } from '../../base/GSData.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\nimport { AdoptedController } from '../../controllers/AdoptedController.mjs';\r\nimport { AttributeController } from '../../controllers/AttributeController.mjs';\r\nimport { CopySelectController } from './controllers/CopySelectController.mjs';\r\nimport { MaskController } from './controllers/MaskController.mjs';\r\nimport { MultipatternController } from './controllers/MultipatternController.mjs';\r\nimport { PasswordController } from './controllers/PasswordController.mjs';\r\nimport { NumberController } from './controllers/NumberController.mjs';\r\nimport { TextController } from './controllers/TextController.mjs';\r\nimport { ListController } from './controllers/ListController.mjs';\r\n\r\nimport { ReactiveInput } from './ReactiveInput.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSBeep } from '../../base/GSBeep.mjs';\r\nimport { ValidityController } from './controllers/ValidityController.mjs';\r\n\r\n/**\r\n * Extended HTMLInputElement with controllers support\r\n * adding various features such as masked input support \r\n */\r\nexport class GSInputElement extends ReactiveInput {\r\n\r\n  static properties = {\r\n    autocopy: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    autoselect: { type: Boolean },\r\n    reveal: { type: Boolean },\r\n    mask: { reflect: true },\r\n    multipattern: { type : Object},\r\n\r\n    block: { type: Boolean },\r\n    beep: { type: Boolean },\r\n    timeout: { type: Number }\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n\r\n  #copyselect;\r\n  #maskController;\r\n  #multiPatternController;\r\n  #passwordController;\r\n  #numberController;\r\n  #textController;\r\n  #listController;\r\n  #validityController;\r\n\r\n  constructor() {\r\n    super();\r\n    this.block = false;\r\n    this.beep = false;\r\n    this.timeout = 0;\r\n    this.#copyselect = new CopySelectController(this);\r\n    this.#validityController = new ValidityController(this);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n\r\n    super.willUpdate(changed);\r\n\r\n    if (changed.has('mask') && this.mask && this.type === 'text') {\r\n      this.placeholder = this.mask;\r\n      this.#maskController ??= new MaskController(this);\r\n      this.#maskController.initRules();\r\n    }\r\n\r\n    if (changed.has('multipattern') && this.multipattern) {\r\n      if (['text', 'password'].includes(this.type)) {\r\n        this.#multiPatternController ??= new MultipatternController(this);\r\n      }\r\n    }\r\n\r\n    if (this.list) {\r\n      this.#listController ??= new ListController(this);\r\n    }\r\n\r\n    switch (this.type) {\r\n      case 'text':\r\n        this.#textController ??= new TextController(this);\r\n        break;\r\n      case 'password':\r\n        this.#passwordController ??= new PasswordController(this);\r\n        break;\r\n      case 'number':\r\n        this.#numberController ??= new NumberController(this);\r\n        break;\r\n    }\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus) this.focus();    \r\n    const data = this.form?.data;\r\n    if (data) GSDOM.fromObject2Element(this, data);\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value) {\r\n    this.#adopted ??= new AdoptedController(me);\r\n    return this.#adopted.style(id, value);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  checkValidity() {\r\n    const me = this;\r\n    const isValid = super.checkValidity();\r\n    const results = [];\r\n    if (me.#multiPatternController) results.push(me.#multiPatternController.checkValidity(isValid));\r\n    if (me.#maskController) results.push(me.#maskController.checkValidity(isValid));\r\n    return results.length > 0 ? results.filter(v => v).length === results.length : isValid;\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form');\r\n  }\r\n\r\n  get owner() {\r\n    const own = GSDOM.root(this);\r\n    return GSDOM.unwrap(own);\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  get raw() {\r\n    return super.value;\r\n  }\r\n\r\n  get value() {\r\n    return this.#maskController ? this.#maskController.value : super.value;\r\n  }\r\n\r\n  set value(val) {\r\n    super.value = this.mask === val ? '' : val;\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSInputElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   */\r\n  static define(name, clazz) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, { extends: 'input' });\r\n    }\r\n  }\r\n\r\n  static {\r\n    GSInputElement.define('gs-ext-input', GSInputElement);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvent } from \"../../base/GSEvent.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { GSBeep } from \"../../base/GSBeep.mjs\";\r\nimport { CopySelectController } from \"./controllers/CopySelectController.mjs\";\r\nimport { ValidityController } from \"./controllers/ValidityController.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <textarea is=\"gs-ext-text\"></textarea>\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLTextAreaElement}\r\n */\r\nexport class GSTextArea extends HTMLTextAreaElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-text', GSTextArea, { extends: 'textarea' });\r\n        Object.seal(GSTextArea);\r\n    }\r\n\r\n    #isConnected = false;\r\n    #controllers = undefined;\r\n\r\n    #copyselect;\r\n    #validityController;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#copyselect = new CopySelectController(this);\r\n        this.#validityController = new ValidityController(this);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        const data = me.form?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n        me.#isConnected = true;\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#isConnected = false;\r\n        me.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    addController(controller) {\r\n        // if (!(controller instanceof ReactiveController)) throw new Error('Argument not instance of ReactiveController');\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.#isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    get block() {\r\n        return this.hasAttribute('block');\r\n    }\r\n\r\n    get beep() {\r\n        return this.hasAttribute('beep');\r\n    }\r\n\r\n    get timeout() {\r\n        return GSAttr.getAsNum(this, 'timeout', 0);\r\n    }\r\n\r\n    set block(val = false) {\r\n        GSAttr.toggle(this, 'block', val);\r\n    }\r\n\r\n    set beep(val = false) {        \r\n        GSAttr.toggle(this, 'beep', val);\r\n    }\r\n\r\n    set timeout(val = 0) {\r\n        return GSAttr.setAsNum(this, 'timeout', val);\r\n    }\r\n\r\n    get form() {\r\n        return this.closest('gs-form');\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n    /**\r\n     * Find closest top element by CSS selector\r\n     * @param {String} query \r\n     * @returns {HTMLElement}\r\n     */\r\n    closest(query = '') {\r\n        return GSDOM.closest(this, query);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        this.value = await GSLoader.loadSafe(url, 'GET', null, true);\r\n    }\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined, repeat } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSBreadcrumbElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n    color: { ...color },\r\n    divider: { reflect: true },\r\n    spacing: { reflect: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.spacing = 1;\r\n    me.divider = 'chevron-right';\r\n    me.#updateChildren();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#updateChildren();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<nav part=\"base\" class=\"breadcrumb\" @click=\"${me.#onClick}\" dir=\"${ifDefined(me.direction)}\"><slot>\r\n      ${repeat(me.data || [], (item) => item, (item) => html`\r\n        <gs-breadcrumb-item  \r\n        href=\"${item.href}\"\r\n        color=\"${item.color}\"\r\n        .data=${item}     \r\n        .active=${item.active}\r\n        .divider=\"${item.divider || me.divider}\"\r\n        .spacing=\"${item.spacing || me.spacing}\">\r\n          ${item.$text}\r\n        </gs-breadcrumb-item>\r\n      `)}\r\n    </slot></nav>`;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #updateChildren() {\r\n    const me = this;\r\n    me.queryAll('gs-breadcrumb-item').forEach(el => {\r\n      el.divider = me.divider;\r\n      el.spacing = me.spacing;\r\n      el.color = me.color;\r\n    });\r\n  }\r\n\r\n  #onClick(e) {\r\n    const el = e.target.closest('gs-bradcrumb-item');\r\n    el?.handle(e);\r\n  } \r\n\r\n  static {\r\n    this.define('gs-breadcrumb');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSBreadcrumbItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    color: { ...color },\r\n    data: { state: true, type: Object },\r\n    active: { reflect: true, type: Boolean },\r\n    divider: { state: true, type: Boolean },\r\n    spacing: { state: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div part=\"base\" class=\"breadcrumb-item ${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <span part=\"prefix\"><slot name=\"prefix\"></slot></span>        \r\n        ${me.#label}\r\n        <span part=\"suffix\"><slot name=\"suffix\"></slot></span>\r\n        <span part=\"separator\"><slot name=\"separator\">${me.#separator}</slot></span>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #label() {\r\n    const me = this;\r\n    if (me.active) return html`<slot></slot>`;\r\n    me.data.url = me.data.url || me.href;\r\n    me.data.part = 'label';\r\n    return GSLinklement.generate(me.data, {})\r\n  }\r\n\r\n  get #separator() {\r\n    const me = this;\r\n    return me.nextElementSibling && me.divider ? html`<gs-icon size=\"7\" color=\"${me.color}\" css=\"mx-${me.spacing}\" name=\"${me.divider}\"></gs-icon>` : '';\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.query('a', true), e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-breadcrumb-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport { classMap, createRef, ref, css, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSAttachment } from './Attachment.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSFileBoxElement extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    static properties = {\r\n        cssList: { attribute: 'css-list' },\r\n        cssLabel: { attribute: 'css-label' },\r\n        cssInput: { attribute: 'css-input' },\r\n\r\n        multiple: { reflect: true, type: Boolean },\r\n        directory: { reflect: true, type: Boolean },\r\n        name: {},\r\n        title: {},\r\n        accept: {},\r\n        filter: {},\r\n    }\r\n\r\n    #listEl = createRef();\r\n    #fileEl = createRef();\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = GSFileBoxElement.CSS;\r\n        this.cssInput = 'd-none';\r\n        this.multiple = true;\r\n        this.title = GSFileBoxElement.TITLE;\r\n        this.filter = '^image\\/(gif|png|jpeg)$'\r\n        this.directory = false;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div part=\"border\" class=\"${classMap(me.renderClass())}\"\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @click=\"${me.#onClick}\"\r\n            @dragenter=\"${me.#onDragenter}\"\r\n            @dragover=\"${me.#onDragenter}\"\r\n            @dragleave=\"${me.#onDragleave}\"\r\n            @drop=\"${me.#onDrop}\"\r\n            @paste=\"${me.#onPaste}\"\r\n            @change=\"${me.#onChange}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.translate(me.title)}</label>\r\n            <input ${ref(me.#fileEl)}  part=\"input\" \r\n                type=\"file\" accept=\"${me.accept}\" \r\n                class=\"${me.cssInput}\" \r\n                name=\"${me.name}\" \r\n                id=\"${me.name}\" \r\n                ${me.multiple ? \"multiple\" : \"\"} \r\n                ${me.directory ? \"directory webkitdirectory\" : \"\"}>\r\n            <pre ${ref(me.#listEl)} part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    get listEl() {\r\n        return this.#listEl.value;\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.#fileEl.value;\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = me.emit('accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            me.emit('accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static styles = css`\r\n        .dash {\r\n            border-style: var(--gs-fieldbox-border, dashed) !important;\r\n            border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n        }\r\n        input[type=file] {\r\n            color : var(--gs-fieldbox-color, transparent);\r\n        } \r\n        input[type=file]::file-selector-button {}             \r\n        input[type=file]::file-selector-button:hover {}`;\r\n\r\n    static {\r\n        this.define('gs-filebox');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/TimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSTimeFormat extends GSElement {\r\n\r\n    static properties = {\r\n        interval: {reflect:true, type:Number},\r\n        locale: {reflect:true},\r\n    }\r\n\r\n    #id = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.interval = 1;\r\n        this.locale = GSUtil.locale;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const date = new Date();\r\n        return date.toLocaleTimeString(this.locale);\r\n    }    \r\n\r\n    start() {\r\n        const me = this;\r\n        if (me.interval >0 && me.#id === 0) {\r\n            me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n        } else {\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n        this.#id = 0;\r\n    }\r\n    \r\n    #update() {\r\n       requestAnimationFrame(() => this.requestUpdate());\r\n    }\r\n\r\n    static {\r\n        this.define('gs-time-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/DateFormat\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDate } from '../../base/GSDate.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSDateFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        format: {},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.locale = navigator.locale;\r\n        this.value = new Date();\r\n    }\r\n\r\n    renderUI() {\r\n        return this.result;\r\n    }    \r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.date;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get date() {\r\n        const me = this;\r\n        const o = Date.parse(me.value || new Date());\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n\r\n    static {\r\n        this.define('gs-date-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/YearFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSYearFormat extends GSElement {\r\n\r\n    static properties = {\r\n        offset: {type :Number},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n    }\r\n\r\n    renderUI() {\r\n        return this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        this.define('gs-year-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/CurrencyFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSCurrencyFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        currency: {},\r\n    }\r\n\r\n    renderUI() {\r\n        return this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-currency-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCacheStyles } from \"../../base/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepElement class\r\n * @module components/steps/GSStepElement\r\n */\r\n\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepElement extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-primary';\r\n    static COMPLETED = 'text-bg-secondary';\r\n\r\n    static ICON_CSS = 'border rounded-circle fs-1';\r\n    static TITLE_CSS = 'mb-0 fs-6 mt-3 fw-bold';\r\n\r\n    static properties = {\r\n        title: {},\r\n        icon: {},\r\n        color: {},\r\n        iconCSS: { attribute: 'icon-css' },\r\n        titleCSS: { attribute: 'title-css' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const clazz = GSStepElement;\r\n        this.icon = clazz.INACTIVE;\r\n        this.iconCSS = clazz.ICON_CSS;\r\n        this.titleCSS = clazz.TITLE_CSS;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"step d-block w-100 text-center mb-4\"  dir=\"${ifDefined(me.direction)}\">\r\n            <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color || GSStepElement.INACTIVE}\">\r\n                    ${me.#renderIcon()}\r\n                </div>\r\n            </div>\r\n            <div class=\"step-title ${me.titleCSS}\">${me.translate(me.title)}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    #renderIcon() {\r\n        return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-step');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepsElement class\r\n * @module components/steps/GSStepsElement\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSStepStyle } from \"./StepStyle.mjs\";\r\nimport GSStepElement from './Step.mjs';\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepsElement extends GSElement {\r\n\r\n    static CSS = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n\r\n    #index = -1;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldUpdate(changedProperties) { \r\n        return this.steps.length > 0;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\"><slot></slot></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        return this.mapCSS(GSStepsElement.CSS, super.renderClass());\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get length() {\r\n        return this.steps.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length - 1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isLast) return false;\r\n        if (me.#index > - 1) me.current.color = GSStepElement.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStepElement.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStepElement.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStepElement.SELECTED;\r\n        });\r\n    }\r\n\r\n    static {\r\n        GSStepStyle.style;\r\n        this.define('gs-steps', GSStepsElement);\r\n    }\r\n\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSAttr } from '../../base/GSAttr.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\n\r\nexport class GSNotificationElement extends GSElement {\r\n\r\n    static TOP_START = \"position-fixed top-0 start-0\";\r\n    static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n    static TOP_END = \"position-fixed top-0 end-0\";\r\n\r\n    static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n    static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n    static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n    \r\n    static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n    static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n    static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n    static DEFAULT = GSNotificationElement.BOTTOM_END;\r\n\r\n    static properties = {\r\n        position: { reflect: true },\r\n        native: { reflect: true, type: Boolean }\r\n    };\r\n\r\n    #list = new Set();\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = 'p-3';\r\n        this.position = GSNotificationElement.DEFAULT;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n            class=\"toast-container z-10k ${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        return me.mapCSS(me.#positionCSS, super.renderClass());\r\n    }    \r\n\r\n    get #positionCSS() {\r\n        const clazz = GSNotificationElement;\r\n        const val = this.position || clazz.DEFAULT;\r\n        return val.indexOf('_') > 0 && clazz[val] ? clazz[val] : val;\r\n    }\r\n\r\n    clear() {\r\n        this.queryAll('gs-toast').forEach(el => el.dismiss());\r\n    }\r\n\r\n    info(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n    }\r\n\r\n    success(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n    }\r\n\r\n    warn(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n    }\r\n\r\n    danger(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n    }\r\n\r\n    primary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n    }\r\n\r\n    secondary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n    }\r\n\r\n    dark(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n    }\r\n\r\n    light(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n    }\r\n\r\n    /**\r\n     * Main function to show notification. \r\n     * It has support for Bootstrap based and web based notifications.\r\n     * \r\n     * @async\r\n     * @param {String} title Notification title\r\n     * @param {String} message Notification message\r\n     * @param {String} css CSS styling (web only)\r\n     * @param {Boolean} closable Can user close it (web only)\r\n     * @param {Number} timeout Timeout after which to close notification  (default 2 sec)\r\n     * @param {Number} delay Timeout after which to show notification (default 1 sec)\r\n     * @param {Object} options Options for native Notification\r\n     * @returns {Promise<Notification|GSToast>}\r\n     */\r\n    async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n        if (!message) return;\r\n        const me = this;\r\n        if (me.native) {\r\n            let sts = await GSNotificationElement.requestPermission();\r\n            if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n            if (sts) return sts;\r\n        }\r\n        return me.#showWeb(title, message, css, closable, timeout, delay);\r\n    }\r\n\r\n    #showWeb(title, message, css, closable, timeout, delay) {\r\n        const me = this;\r\n        const tpl = `<gs-toast css=\"${css}\"  opened ${closable ? 'closable' : ''} timeout=\"${timeout}\"  delay=\"${delay}\" message=\"${message}\" title=\"${title}\" locale=\"${me.locale}\" ></gs-toast>`;\r\n        const el = GSDOM.parse(tpl, true);\r\n        requestAnimationFrame(async () => {\r\n            await me.#delay(delay);\r\n            const toast = me.#dialogToast;\r\n            if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n            toast.appendChild(el);\r\n        });\r\n        return el;\r\n    }\r\n\r\n    async #showNative(title, message, timeout, delay, options = {}) {\r\n        const me = this;\r\n        await me.#delay(delay);\r\n        options.body = options.body || message;\r\n        const notification = new Notification(title, options);\r\n        me.#list.add(notification);\r\n        const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n        notification.addEventListener('close', callback);\r\n        if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n        return notification;\r\n    }\r\n\r\n    get #dialogToast() {\r\n        const dlg = customElements.get('gs-dialog')?.top;\r\n        return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n    }\r\n\r\n    async #delay(delay = 0) {\r\n        if (GSUtil.isNumber(delay) && delay > 0) await GSUtil.timeout(delay * 1000);\r\n    }\r\n\r\n    #clearNative() {\r\n        const me = this;\r\n        me.notification.close();\r\n        me.owner.#list.delete(me.notification);\r\n        if (me.notification.iid) clearTimeout(me.notification.iid);\r\n    }\r\n\r\n    /**\r\n     * Clear all triggered notifications\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n        me.#list.forEach(nn => nn.close());\r\n        me.#list.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is supported\r\n     * @returns {Boolean} \r\n     */\r\n    static get isNativeSupported() {\r\n        return \"Notification\" in self;\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is allowed\r\n     * @returns {Boolean} \r\n     */\r\n    static get isGranted() {\r\n        return Notification.permission === \"granted\";\r\n    }\r\n\r\n    /**\r\n     * Request useage for browser native notification\r\n     * \r\n     * @async\r\n     * @returns {Promise<boolean>} Return granted status\r\n     */\r\n    static async requestPermission() {\r\n        const clazz = GSNotificationElement;\r\n        if (!clazz.isNativeSupported) return false;\r\n        if (!clazz.isGranted) await Notification.requestPermission();\r\n        return clazz.isGranted;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-notification');\r\n    }\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNotificationElement } from './Notification.mjs';\r\n\r\nexport class GSToastElement extends GSElement {\r\n\r\n    static properties = {\r\n        closable: { reflect: true, type: Boolean },\r\n        opened: { reflect: true, type: Boolean },\r\n        message: { reflect: true },\r\n        title: { reflect: true },\r\n        delay: { reflect: true, type: Number },\r\n        timeout: { reflect: true, type: Number }\r\n    }\r\n\r\n    #pending = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.timeout = 2;\r\n        me.delay = 2;\r\n        me.auto = true; \r\n    }\r\n\r\n    shouldUpdate(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.delay > 0 && me.opened && visibilityChange) {\r\n            me.#pending = true;\r\n            me.#pendingUpdate();\r\n        }\r\n        return me.#validParent && (!me.#pending);\r\n    }\r\n\r\n    #isVisibilityChanged(changedProperties) {\r\n        return changedProperties.has('opened');\r\n    }\r\n\r\n    async #pendingUpdate() {\r\n        const me = this;\r\n        await GSUtil.timeout(me.delay * 1000);\r\n        me.#pending = false;\r\n        me.requestUpdate();\r\n    }\r\n\r\n    async updated(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.timeout > 0 && me.opened) {\r\n            await GSUtil.timeout(me.timeout * 1000);\r\n            me.opened = false;\r\n        } else if (visibilityChange && !me.opened) { \r\n            me.remove();\r\n        };\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return me.title ? me.#renderWithHeader() : me.#renderSimple();\r\n    }\r\n\r\n    #renderWithHeader() {\r\n        const me = this;\r\n        return html`\r\n        <div dir=\"${ifDefined(me.direction)}\"\r\n            class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n            <div class=\"toast-header\">\r\n                ${me.translate(me.title)}\r\n                <slot name=\"header\"></slot>\r\n                ${me.closable ? me.#button : ''}\r\n            </div>\r\n            <div class=\"toast-body\">\r\n                ${me.translate(me.message)}\r\n                <slot name=\"body\"></slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    #renderSimple() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.translate(me.message)}\r\n              <slot name=\"body\"></slot>\r\n              </div>\r\n              ${me.closable ? me.#button : ''}\r\n          </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': me.opened,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    dismiss() {\r\n        this.opened = false;\r\n    }\r\n\r\n    get #button() {\r\n        const me = this;\r\n        return html`<button type=\"button\" class=\"btn-close me-2 m-auto\" @click=\"${me.dismiss}\"></button>`;\r\n    }\r\n\r\n    get #validParent() {\r\n        const isToast = GSDOM.hasClass(this.parentElement, 'toast-container');\r\n        const isNotify = this.parentElement instanceof GSNotificationElement;\r\n        return isToast || isNotify;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-toast');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller managing data tree navigation.\r\n * Controller is added to every gs-tree-node and \r\n * reacts on Tree node changes to update UI\r\n */\r\nexport class AbstractTreeController {\r\n\r\n    #host;\r\n    #node;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        host.addController(me);\r\n    }\r\n    \r\n    hostConnected() {\r\n        const me = this;\r\n        me.#node = me.#host.node;\r\n        me.#addNodeController(me);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        const me = this;\r\n        me.#removeNodeController(me);\r\n        me.#host.removeController(me);\r\n    }\r\n\r\n    // before rendering\r\n    hostUpdate() {\r\n        const me = this;\r\n        const oldNode = me.#node;\r\n        me.#node = me.#host.node;\r\n        if (oldNode != me.#node) {\r\n            me.#removeNodeController(me);\r\n            me.#addNodeController(me);\r\n        }\r\n    }\r\n\r\n    // link Tree node callbacks with controller and component\r\n    #addNodeController(controller) {\r\n        this.#host.node?.addController?.(controller);\r\n    }\r\n\r\n    // unlink Tree node callbacks with controller and component\r\n    #removeNodeController(controller) {\r\n        this.#node?.removeController?.(controller);\r\n    }\r\n\r\n    host(node) {\r\n        return node[Symbol.for('gs-element')] || this.#host;\r\n    }\r\n\r\n    match(node) {\r\n        const host = this.host(node);\r\n        return host?.node === node;\r\n    }\r\n\r\n    get store() {\r\n        return this.#host.dataController?.store;\r\n    }\r\n\r\n    requestUpdate(node) {\r\n        if (this.match(node)) this.host(node).requestUpdate();\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { AbstractTreeController } from './AbstractTreeController.mjs';\r\n\r\n/**\r\n * Controller managing data TreeNode callbacks to reflect UI.\r\n */\r\nexport class TreeController extends AbstractTreeController {\r\n\r\n    constructor(host) {\r\n        super(host);\r\n    }\r\n\r\n    #toggleState(node, state = false) {\r\n        const el = this.host(node);\r\n        if (el) el.loading = state;\r\n    }\r\n\r\n    // Tree controller callbacks\r\n    onLoad(node) {\r\n        this.#toggleState(node, true);\r\n    }\r\n\r\n    onRefresh(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onAppend(node, addedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onInsert(node, insertedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onExpand(node) {\r\n        const store = this.store;\r\n        if (store) {\r\n            store.onExpand(node);\r\n        } else {\r\n            this.requestUpdate(node);\r\n        }\r\n    }\r\n\r\n    onCollapse(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onFocusChanged(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onSelectionChanged(node, selectedNode) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onRemove(node) {\r\n        if (this.match(node)) this.host(node).remove();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../../lib.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSTreeItemElement extends GSElement {\r\n\r\n  /*\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n    */\r\n\r\n  static properties = {\r\n    loading: { state: true },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('node')) this.node[Symbol.for('gs-element')] = this;\r\n  }\r\n\r\n  updated() {\r\n    if (this.focused) this.query('a')?.focus();\r\n    this.dataset.visible = this.visible;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const opt = me.value || {};\r\n    opt.tooltip = me.translate(opt.tooltip)\r\n    opt.title = me.translate(opt.title)\r\n    const before = me.loading ? me.#renderSpinner(node.level) : me.#renderIcon(node.level);\r\n    return GSLinklement.generate(opt, me.renderClass(), before);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const opt = {\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      'user-select-none  ': true,\r\n      'border-0': me.#border ? false : true,\r\n      'gs-hide': !me.visible\r\n    };\r\n    return me.mapCSS(me.#cssFocus, me.mapCSS(me.#cssSelected, opt, me.selected && !me.multiselect), me.focused);\r\n  }\r\n\r\n  /**\r\n   * Toggle folder\r\n   */\r\n  toggle() {\r\n    this.opened ? this.close() : this.open();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open() {\r\n    this.#status(true);\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   */\r\n  close() {\r\n    this.#status(false);\r\n  }\r\n\r\n  focus(val = true) {\r\n    if (val) super.focus();\r\n    this.focused = val == true;\r\n  }\r\n\r\n  select(val = true) {\r\n    this.selected = val == true;\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.querySelector('a'), e);\r\n  }\r\n\r\n  get isLeaf() {\r\n    return this.node?.isLeaf;\r\n  }\r\n\r\n  get isFolder() {\r\n    return !this.isLeaf;\r\n  }\r\n\r\n  get key() {\r\n    return this.node?.key;\r\n  }\r\n\r\n  get value() {\r\n    return this.node?.value || {};\r\n  }\r\n\r\n  get level() {\r\n    return this.node?.level || -1;\r\n  }\r\n\r\n  get focused() {\r\n    return this.node?.focused;\r\n  }\r\n\r\n  get visible() {\r\n    const parent = this.parent;\r\n    return parent?.opened || parent?.level === -1;\r\n  }\r\n\r\n  get parent() {\r\n    return this.node?.parent;\r\n  }\r\n\r\n  get parentItem() {\r\n    const item = this.parent?.[Symbol.for('gs-element')];\r\n    return item instanceof GSTreeItemElement ? item : undefined;\r\n  }\r\n\r\n  set focused(val) {\r\n    val = val === true;\r\n    this.node.focused = val;\r\n  }\r\n\r\n  get selected() {\r\n    return this.node?.selected;\r\n  }\r\n\r\n  set selected(val) {\r\n    val = val === true;\r\n    const me = this;\r\n    if (me.isFolder && me.owner.leaf) val = false;\r\n\r\n    if (me.multiselect) {\r\n      if (val) {\r\n        me.node.selectAll();\r\n      } else {\r\n        me.node.deselectAll();\r\n      }\r\n    } else {\r\n      me.node.selected = val;\r\n    }\r\n  }\r\n\r\n  get opened() {\r\n    return this.node?.opened;\r\n  }\r\n\r\n  set opened(val) {\r\n    this.#status(val === true);\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tree');\r\n  }\r\n\r\n  get multiselect() {\r\n    return this.owner.multiselect;\r\n  }\r\n\r\n  get #cssFocus() { return this.owner.cssFocus || 'focus-ring'; }\r\n  get #cssSelected() { return this.owner.cssSelected || 'active'; }\r\n  get #cssCheck() { return this.owner.cssCheck || ''; }\r\n  get #checkColor() { return this.owner.checkColor || 'secondary'; }\r\n  get #checkColorSelected() { return this.owner.checkColorSelected || 'primary'; }\r\n\r\n  get #border() {\r\n    return this.value?.border === true || this.owner.border === true;\r\n  }\r\n\r\n  get #icon() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const data = me.value;\r\n    const ui = me.owner;\r\n    let itemIco = data.icon || ui.itemIcon;\r\n    if (node.isFolder) itemIco = node.opened ? (data.openIcon || ui.openIcon) : (data.closeIcon || ui.closeIcon);\r\n    return itemIco;\r\n  }\r\n\r\n  #renderIndent(level) {\r\n    return html`<gs-indent size=\"${level}\"></gs-indent>`;\r\n  }\r\n\r\n  #renderSpinner(level) {\r\n    return html`${this.#renderIndent(level)}<gs-spinner small></gs-spinner>`;\r\n  }\r\n\r\n  #renderIcon(level) {\r\n    return html`${this.#renderIndent(level)}${this.#renderMulti()}<gs-icon size=\"5\" name=\"${this.#icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderMulti() {\r\n    const me = this;\r\n    if (!me.multiselect) return '';\r\n    const color = me.selected ? me.#checkColorSelected : me.#checkColor;\r\n    const icon = me.node.isPartialySelected ? 'dash-square-fill' : me.selected ? 'check-square-fill' : 'square';\r\n    return html`<gs-icon size=\"6\" data-type=\"state\" \r\n                css=\"me-1 text-${color} ${me.#cssCheck}\"\r\n                name=\"${icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #status(val = false) {\r\n    const me = this;\r\n    if (me.node?.isFolder) {\r\n      me.node.opened = val;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, css, createRef, ref, repeat, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { TreeController } from './controllers/TreeController.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSTreeElement extends GSElement {\r\n\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n\r\n  static shared = {\r\n    itemIcon: { attribute: 'icon-item' },\r\n    closeIcon: { attribute: 'icon-close' },\r\n    openIcon: { attribute: 'icon-open' },\r\n    cssCheck: { attribute: 'css-check' },\r\n    cssFocus: { attribute: 'css-focus' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    checkColor: { attribute: 'check-color', ...color },\r\n    checkColorSelected: { attribute: 'check-color-selected', ...color },\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode },\r\n    border: { type: Boolean, reflect: true },\r\n    guide: { type: Boolean, reflect: true },\r\n    leaf: { type: Boolean, reflect: true },\r\n    multiselect: { type: Boolean, reflect: true },\r\n    circular: { type: Boolean, reflect: true },\r\n    ...GSTreeElement.shared\r\n  }\r\n\r\n  // GS-ITEM attributes mapping\r\n  static options = {\r\n    ...GSTreeElement.shared,\r\n    css: {},\r\n    icon: {},\r\n    color: {},\r\n    title: {},\r\n    tooltip: {},\r\n    opened: { type: Boolean },\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  #queued = false;\r\n  #listRef = createRef();\r\n\r\n  #controller = null;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.leaf = false;\r\n    me.multiselect = false;\r\n    me.data = GSDOM.toJson(me, true, true).items;\r\n    me.node = new TreeNode(null, { '#tagName': this.tagName }, null, -1);\r\n    me.itemIcon = 'file-earmark';\r\n    me.closeIcon = 'folder'; // caret-right; chevron-right\r\n    me.openIcon = 'folder2-open'; // caret-down; chevron-down\r\n    me.cssSelected = 'active'; // fw-bold\r\n    me.cssFocus = 'focus-ring';\r\n    me.node[Symbol.for('gs-element')] = me;\r\n    me.#controller = new TreeController(me);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n          class=\"treeview ${classMap(me.renderClass())}\"          \r\n          @click=\"${me.#onClick}\"\r\n          @keydown=\"${me.#onKeyDown}\"\r\n          @keyup=\"${me.#onKeyUp}\">\r\n          <div class=\"list-group\" ${ref(me.#listRef)}>\r\n          ${repeat(me.node.walk(me.node, false, false), (node) => node.key, (node) => html`\r\n            <gs-tree-item .node=\"${node}\"></gs-tree-item>\r\n          `)}\r\n          </div>    \r\n        </div>`;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data') && me.data && !me.#queued) {\r\n      me.#queued = true;\r\n      queueMicrotask(() => {\r\n        me.node.clear();\r\n        me.node.fromJSON(me.data);\r\n        me.#queued = false;\r\n        me.requestUpdate();\r\n      });\r\n    }\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('multiselect') && !this.multiselect) this.node?.deselectAll();\r\n    this.node.multi = this.multiselect;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    if (data instanceof TreeNode) {\r\n      if (data.root !== this.node) this.node = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n\r\n  next(expand = false) {\r\n    const me = this;\r\n    let item = me.nextItem;\r\n    if (!item & me.circular) item = me.#first;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (expand && me.focused?.isFolder) me.focused.open();\r\n    }\r\n    return me.focused;\r\n  }\r\n\r\n  previous(collapse = false) {\r\n    const me = this;\r\n    let item = me.previousItem;\r\n    if (!item & me.circular) item = me.#last;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (item.isFolder && collapse) item.close();\r\n    }\r\n    return me.focused;\r\n\r\n  }\r\n\r\n  expandAll() {\r\n    this.node?.expandAll();\r\n  }\r\n\r\n  collapseAll() {\r\n    this.node?.collapseAll();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open(path) {\r\n    const me = this;\r\n    me.focused?.open();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   * TODO - path navigation\r\n   */\r\n  close(path) {\r\n    const me = this;\r\n    me.focused?.close();\r\n  }\r\n\r\n  clear() {\r\n    this.node?.clear();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  reload() {\r\n    this.clear();\r\n    this.dataController?.read();\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host(this.node.selectedNode());\r\n  }\r\n\r\n  get focused() {\r\n    return this.#host(this.node.focusedNode());\r\n  }\r\n\r\n  /**\r\n   * Previous visible ge-node-item\r\n   */\r\n  get previousItem() {\r\n    return this.focused?.node.find(n => n?.visible, true, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  /**\r\n   * Next visible ge-node-item\r\n   */\r\n  get nextItem() {\r\n    return this.focused?.node.find(n => n?.visible, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  get #list() {\r\n    return this.#listRef.value;\r\n  }\r\n\r\n  get #first() {\r\n    return this.#list.firstElementChild;\r\n  }\r\n\r\n  get #last() {\r\n    return this.#list.lastElementChild;\r\n  }\r\n\r\n  #host(node) {\r\n    return node?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const isIcon = e.target.closest('gs-icon')?.dataset.type === 'state';\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!el.node) return;\r\n\r\n    const me = this;\r\n\r\n    if (me.multiselect) {\r\n      if (isIcon) el.select(!el.selected);\r\n    } else {\r\n      el.select(true);\r\n    }\r\n\r\n    const expandable = (me.multiselect && !isIcon) || (!me.multiselect);\r\n    if (el.isFolder && expandable) el.toggle();\r\n\r\n    el.focus();\r\n    el.handle(e);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    const me = this;\r\n    const el = me.focused;\r\n    if (!el) return;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n        me.next();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (el.isFolder) {\r\n          if (el.opened) {\r\n            me.close();\r\n          } else {\r\n            (el.parentItem || el)?.focus();\r\n          }\r\n        } else {\r\n          me.previous();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if (el.isFolder && !el.opened) {\r\n          me.open();\r\n        } else {\r\n          me.next();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!(el?.node)) return;\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        el.handle(e);\r\n        break;\r\n      case 'Tab':\r\n        el.focus();\r\n        break;\r\n      case 'Space':\r\n        el.select(this.multiselect ? !el.selected : true);\r\n        el.focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\n\r\nexport class GSChartElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/bootstrap-lit';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        config: {},\r\n        storage: {},\r\n        height: { type: Number },\r\n        width: { type: Number },\r\n        data: { type: Array },\r\n        options: { type: Object },\r\n    }\r\n\r\n    #canvasRef = createRef();\r\n    #chart = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.height = 0;\r\n        this.width = 0;\r\n        GSChartElement.#init();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#waitInit();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    shouldUpdate(changed) {\r\n        return GSChartElement.#isChart;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#render();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        const me = this;\r\n        if (changed.has('url') || changed.has('config')) me.#render();\r\n        if (changed.has('data') || changed.has('options')) me.#renderData(me.data, me.options);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<canvas ${ref(me.#canvasRef)} \r\n                class=\"${classMap(me.renderClass())}\"\r\n                width=\"${ifDefined(me.width > 0 ? me.width : false)}\" \r\n                height=\"${ifDefined(me.height > 0 ? me.height : false)}\" >\r\n            </canvas>`;\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.#canvasRef.value;\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    refresh() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    updateChart(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const options = await GSLoader.loadSafe(me.config, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.url, 'GET', null, true, []);\r\n        me.data = data;\r\n        me.options = options;\r\n    }\r\n\r\n    #renderData(data, options) {\r\n        const me = this;\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChartElement.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => o.data = sets.length === 1 ? data : data[i] || []);\r\n\r\n        if (me.#chart) return me.updateChart(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChartElement.#Chart(ctx, opt);\r\n    }\r\n\r\n    async #waitInit() {\r\n        if (!GSChartElement.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        this.requestUpdate();\r\n    }\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    static async #init() {\r\n        const me = GSChartElement;\r\n        if (me.URL_LIB === false) return;\r\n        if (me.#isChart || me.#initializing) return;\r\n        me.#initializing = true;\r\n        try {\r\n            const origin = GSChartElement.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);\r\n            me.#Chart = Chart;\r\n            me.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            me.#initializing = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert DOM tree into a JSON structure\r\n     * \r\n     * @param {HTMLElement} obj HTML element instance to convert\r\n     * @param {string} name DOM attribute name for object key\r\n     * @param {string} value DOM attribute name for object value\r\n     * @param {string} type DOM attribute name for object type\r\n     * @returns {object}\r\n     */\r\n    static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n        if (!(el instanceof HTMLElement)) return {};\r\n\r\n        const nameV = el.getAttribute(name);\r\n        const valV = el.getAttribute(value);\r\n        const typeV = el.getAttribute(type);\r\n\r\n        let obj = null;\r\n\r\n        switch (typeV) {\r\n            case 'array':\r\n                obj = [];\r\n                break;\r\n            case 'object':\r\n                obj = {};\r\n                break;\r\n            default:\r\n                return GSChartElement.#toType(valV, typeV);\r\n        }\r\n\r\n        const childs = Array.from(el.children);\r\n        const isArray = typeV === 'array';\r\n        const isObject = typeV === 'object';\r\n\r\n        childs.forEach(el => {\r\n            const _nam = el.getAttribute(name);\r\n            if (isArray) {\r\n                obj.push(GSChart.toJson(el, name, value, type));\r\n            } else if (isObject) {\r\n                const tmp = GSChartElement.toJson(el, name, value, type);\r\n                obj[_nam] = tmp;\r\n            } else {\r\n                const _val = el.getAttribute(value);\r\n                const _typ = el.getAttribute(type);\r\n                obj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    static #toType(val, type) {\r\n        switch (type) {\r\n            case 'boolean': return val === 'true';\r\n            case 'number': return parseFloat(val);\r\n            default: return val\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-chart');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#data = data;\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append: append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSMarkdownElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        history: { type: Number },\r\n        maxHeight: { type: Number, attribute: 'max-height' },\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        this.history = 10;\r\n        this.dynamicStyle(this.#styleID);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const me = this;\r\n        await me.#initLib();\r\n        if (globalThis.showdown) {\r\n            const opt = { tasklists: true, tables: true };\r\n            me.#converter = new globalThis.showdown.Converter(opt);\r\n            super.connectedCallback();\r\n        }\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('url')) {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url);\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const height = me.maxHeight > 0 ? `${me.maxHeight}px;` : false;\r\n        const opt = { 'max-height': height }\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        return html`<div ${ref(me.#containerRef)} class=\"overflow-auto ${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [me.#styleID] : true,\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        me.#onURL(url);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n\r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n\r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });\r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n            GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n\r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list = GSDOM.queryAll(me.#container, qry);\r\n        requestAnimationFrame(() => list.forEach(el => GSDOM.toggleClass(el, css)) );\r\n    }\r\n\r\n    #handleLinks() {\r\n        const me = this;\r\n        const links = GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n            .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')))\r\n            .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n            .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/'))\r\n            .forEach(el => GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me)));\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        if (me.#cache.length === 0 ) return me.#first;\r\n        const url = me.#cache.pop();\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if (me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdownElement.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-markdown');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSMonacoElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #editor = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = '';\r\n        this.theme = 'vs-dark';\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonacoElement.#init();\r\n        super.connectedCallback();\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.#onMonacoReady();\r\n        super.firstUpdated();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        if (changed.has('theme')) me.#onTheme(me.theme);\r\n        if (changed.has('target')) me.#onTarget(me.target);\r\n        if (changed.has('url')) me.#onURL(me.url);\r\n        if (changed.has('language')) me.#onLanguage(me.language);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#containerRef)} class=\"${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        return this.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    get owner() {\r\n        return this.parentElement;\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n\r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor?.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor?.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    static #initialized;\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonacoElement.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        const url = GSMonacoElement.URL_LIB;\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${url}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${url}'};\r\n                importScripts('${url}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({\r\n                paths: { 'vs': `${GSMonacoElement.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false }\r\n            });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static async #init() {\r\n        const me = GSMonacoElement;\r\n        if (me.#initialized) return;\r\n        me.#initEnv();\r\n        await me.#initLib();\r\n        await me.#initMonaco();\r\n        me.#initialized = true;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-monaco');\r\n    }\r\n\r\n}"],"names":["GSVersion","version","build","gsstyles","GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSUtil$1","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Date","Boolean","value","toString","val","trim","toLowerCase","str","obj","replace","x","g","split","reverse","join","word","toUpperCase","slice","map","i","capitalize","constructor","o","Array","isArray","isBool","isDate","isNumber","isString","min","max","Math","match","dft","locale","sep","numberSeparator","extractNumber","replaceAll","url","test","startsWith","endsWith","pattern","charset","floor","random","length","navigator","language","languages","flags","RegExp","isStringEmpty","undefined","Intl","NumberFormat","format","DateTimeFormat","string","isNull","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","separator","filter","capitalizeAll","tpl","params","names","keys","vals","values","Function","text","textArea","document","createElement","innerHTML","isStringNonEmpty","window","forEach","a","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","result","permissions","query","state","clipboard","writeText","readText","GSFunction$1","GSFunction","isFunction","includes","own","isFunctionDefined","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","from","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSID","prefx","next","s","l","h","charCodeAt","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","attributes","host","opt","recursive","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","children","proxify","safe","unsafe","dflt","default","multi","hasAttribute","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","first","getDay","mondayFirst","isMondayFirst","days","repeat","push","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","d","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","m","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","k","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Locale","weekInfo","firstDay","charAt","toLocaleString","size","isLowercase","hour","hour12","pop","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","getDateFormat","regex","getFormattedDateRegex","parseFormattedDate","groups","y","Y","valueOf","GSData","currency","extract","key","Set","b","every","index","toSorted","compareArrays","second","arr","indexOf","list","it","cfg","toType","rule","toRegex","childElementCount","querySelector","fmt","style","fields","limit","sts","rec","filterRecord","isPrimitive","filterSimple","filterComplex","filterValue","primitive","found","flt","toCheck","matchDate","matchNumber","op","toLocaleLowerCase","local","toLocaleDateString","iso","toISOString","operator","sort","sortPair","ord","idx","col","v1","v2","compare","order","compareNum","compareString","compareBool","s1","s2","localeCompare","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","partial","r","readFromProperty","readFromObject","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","wrap","appendChild","link","slot","isText","tagName","FORMEL","shadow","queryAll","HTMLButtonElement","hasClass","ownClazz","inheritance","pel","HTMLSlotElement","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","parentAll","childAll","child","parentElement","offsetParent","c","ShadowRoot","HTMLBodyElement","root","getByID","documentElement","walk","qry","levels","proxy","res","receiver","sanitize","sanitizer","setHTML","Document","textContent","requestAnimationFrame","toggleClass","contains","unwrap","querySelectorAll","defaults","valueAsNumber","selectedOptions","checked","defaultValue","getValue","styleValue","textTransform","ignore","checkValidity","fromElement2Object","fromObject2Element","objectPathExist","fromValue","writeToOject","toValue","plain","innerText","props","allProperties","getAsNum","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","location","hash","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","CLEANUP1","whiteList","asState","isAllowed","toValidationError","allowElement","allowTag","fetch","ok","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","properties","mergeObjects","template","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","detail","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","delete","removeListener","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","for","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","rid","waitAnimationFrame","onResize","attach","GSAbortController","AbortController","super","abort","clearInterval","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","isFunctions","getFilter","exec","create","GSDynamicStyle","deleteRule","getRule","setRule","sync","insertRule","updateRule","isImportant","setProperty","source","dynamicStyleSheetByID","dynamicStyleSheet","gsClass","dynamicRule","dynamicRuleByID","dynamicStyle","assign","dynamicStyleByID","GSCacheStyles","store","dynamic","styles","adopt","adoptedId","GSAdoptedEngine","now","preload","timerID","setInterval","sheets","adoptable","adoptSheet","update","scheduled","sorted","ID","cssText","monitorAttributes","ownerNode","adoptStyle","disconnect","mutationList","onAttributeChange","attributeFilter","attributeOldValue","HTMLLinkElement","rel","as","HTMLStyleElement","then","adoptLink","registerFilter","onMonitorFilter","onMonitorConnect","onMonitorDisconnect","init","GSBeep","AudioContext","webkitAudioContext","audioContext","duration","frequency","volume","audioCtx","oscillatorNode","createOscillator","gainNode","createGain","connect","destination","gain","start","currentTime","stop","onended","GSEnvironment","isMobile","userAgentData","mobile","userAgent","isDesktop","isWebkit","protocol","strVal","brands","brand","strAgt","isEdge","isDevice","platform","screen","otype","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","ps","p","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSItem","autofocus","validate","parentComponent","GSElement","tags","collect","definition","GSLoader","GS_TEMPLATE_URL","origin","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","UNIQUE","searchParams","append","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GS_LOCALIZATION_LANGUAGE","lang","GSLocalization","GSLocalizationImpl","queue","queued","GS_LOCALIZATION_URL","translate","deft","getLanguage","texthash","reset","promises","loadWait","sequential","Pragma","isDefault","hk","details","GSPopper","asRect","sx","scrollX","sy","scrollY","top","bottom","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","arrow","pos","fromPlacement","isPlacementValid","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","aopt","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","applyDynamicStyle","GSQueryCSS","property","object","GSQuery","instance","GSTemplateCache","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTheme","switch","theme","STORAGE","htmlEl","bsTheme","matchMedia","q","URLSearchParams","onTheme","settings","getSystemDefaultTheme","darkMode","lightMode","setup","GSAttributeHandler","anchor","call","inject","swap","trigger","calls","toggles","triggers","handle","targets","handleTarget","handleBinding","handleAction","handleSwap","handleInject","handleAttribute","handleProperty","handleToggle","handleTrigger","handleCall","handleExec","handleTemplate","field","form","isForm","HTMLFormElement","isField","isFormElement","toObject","isAttributeJSON","jsonToAttr","toggleAttribute","isPropertyJSON","toggleProperty","tout","symbol","toHTML","applyContent","applyTemplate","clone","insertAdjacent","deattach","DEFINITION","override","Stack","item","unshift","peek","isEmpty","Queue","enqueue","dequeue","BinaryTreeNode","isLeaf","hasChildren","isRoot","BinaryTree","inOrderTraversal","postOrderTraversal","preOrderTraversal","insert","parentNodeKey","canInsertLeft","canInsertRight","find","Node","previous","release","toJSON","DoublyLinkedList","tail","previousNode","insertAt","splice","insertFirst","insertLast","getAt","removeAt","acc","toArray","iterator","isInvalid","isInvalidIndex","isInteger","Tree","folder","leaf","up","levelID","nodeID","isFolder","hasMore","firstChild","lastChild","down","previousSibling","inclusive","flat","iterate","filtered","Je","newOne","findByKey","flatten","fromJSON","raw","hasParent","GSReadWriteRegistryImpl","handlers","INTERNAL","addHandler","removeHandler","getHandler","newHandler","enabled","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","processors","enable","addProcessor","processor","removeProcessor","disable","isRegistered","notify","onRead","postRead","onWrite","postWrite","addSelected","asArray","SELECT","removeSelected","clearSelected","getSelected","isSelected","selected","GSReadWrite","reader","writer","mode","skip","TYPE","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCachedReadWrite","reformat","records","postFilter","sortData","filterData","search","read","TreeNode","opened","focused","focusedNode","selectedNode","controllers","select","focus","open","addController","removeController","visible","expand","collapse","changed","onFocusChanged","onSelectionChanged","isPartialySelected","selectAll","deselectAll","selectionFlag","onSelectAll","onDeselectAll","selectedNodes","refresh","onRefresh","loading","onLoad","expandAll","collapseAll","expanded","collapsed","onExpand","onCollapse","onAppend","onInsert","GSTreeReader","litUrl","GS_LIT_URL","litModule","ReactiveController","ReactiveElement","AsyncDirective","AsyncReplaceDirective","CSSResult","Directive","LitElement","PartType","TemplateResultType","UnsafeHTMLDirective","UntilDirective","_$LE","_$LH","adoptStyles","asyncAppend","asyncReplace","choose","classMap","clearPart","createRef","defaultConverter","directive","getCommittedValue","getCompatibleStyle","getDirectiveClass","guard","ifDefined","insertPart","isCompiledTemplateResult","isDirectiveResult","isServer","isSingleExpression","isTemplateResult","keyed","literal","live","noChange","notEqual","nothing","range","ref","removePart","render","setChildPartValue","setCommittedValue","staticHtml","staticSvg","styleMap","supportsAdoptingStyleSheets","svg","templateContent","unsafeCSS","unsafeHTML","unsafeSVG","unsafeStatic","until","when","withStatic","gsAction","gsAnchor","gsAttribute","gsCall","gsExec","gsInject","gsProperty","gsSwap","gsTarget","gsTemplate","gsToggle","gsTrigger","gsValue","DatasetDirective","part","srcset","DOMStringMap","remap","hasOwn","descriptors","getOwnPropertyDescriptors","listProperties","listGetters","getPrototypeOf","literalTemplate","listGettable","cssMap","CssMapDirective","partInfo","ATTRIBUTE","strings","classInfo","_previousClasses","_staticClasses","notEmpty","newVal","oldVal","numGT0","numGE0","numLT0","numLE0","AutocapitalizeTypes","autocapitalize","hasChanged","AutocompleteTypes","autocomplete","AutocorrectTypes","autocorrect","ButtonTypes","buttonType","is","ColorTypes","color","EnvironmentTypes","environment","InputTypes","inputType","NavTypes","nav","OrientationTypes","PlacementTypes","PositionTypes","ProtocolTypes","SizeTypes","normal","medium","small","large","big","extra","stringArrayConverter","fromAttribute","toAttribute","AdoptedController","hostConnected","hostDisconnected","isGlobal","rules","removeRule","renderRoot","onAdopted","AttributeController","eventName","onNotify","isFormEl","ContentController","refs","removeContent","hostUpdated","isSelf","contentRef","options","renderOptions","renderBefore","previousElementSibling","keep","DataController","readCallback","writeCallback","errorCallback","selectCallback","onSelect","write","storeID","firstPage","page","lastPage","nextPage","prevPage","storage","requestUpdate","onDataRead","onDataWrite","onDataError","ElementMoveController","attached","cursorX","cursorY","mouseUpCallback","mouseDownCallback","mouseMoveCallback","onMouseUp","onMouseDown","onMouseMove","attachEvent","removeEvent","onStartMove","onEndMove","onCursorRight","onCursorLeft","onCursorUp","onCursorDown","LocalizationController","hostUpdate","updateLanguage","updateLanguageExt","langauge","onLanguage","OrientationController","hosts","onOrientation","TemplateController","lastRef","templateRef","schedule","templateInjected","isTplEl","cacheable","tasks","task","process","finally","ThemeController","updateTheme","updateThemeExt","SlotController","onSlotChanged","assignedElements","onSlotInjected","rtl","reflect","hide","rounded","bordered","onready","os","browser","adopted","uiHandler","localization","dataController","slotController","themes","attributeChangedCallback","oldValue","newValue","connectedCallback","isBindable","binded","disconnectedCallback","deattachListeners","createRenderRoot","firstUpdated","willUpdate","relink","isAllowRender","renderUI","renderTemplate","renderClass","border","mapCSS","flag","waitEvent","direction","isFocused","isValidEnvironment","isValidBrowser","isValidOS","isValidProtocol","isValidOrientation","isGenerated","definitions","elementStyles","cssRule","setCSSProperty","ElementNavigationController","circular","multiple","onKeyUp","onClick","onFocusIn","onFocusOut","lastElementChild","blur","onSelected","onDeselected","onFocused","isNavigable","composedPath","GroupController","busEvent","busCallback","onBusEvent","GSAccordionElement","autoclose","cssItem","cssHeader","cssBody","renderItems","close","message","isItemCloser","GSAccordionItemElement","shouldUpdate","changedProperties","component","GSAlertElement","closed","closable","pause","interval","handleBillboard","updated","show","isBillboard","button","billboard","GSButtonElement","clickCss","hoverCss","toggleColor","outline","toggling","icon","tooltip","refEl","refIco","onMouseOver","onMouseOut","iconEl","animate","isReset","isSubmit","submit","hover","isReest","iconHtml","renderIcon","GSCalendarElement","arrovPrev","arrowNext","cssDays","cssToday","cssWeeks","cssMonth","cssYear","cssNav","cssSelected","minYear","maxYear","arrowPrev","previousMonth","nextMonth","previousYear","nextYear","formatted","updateTarget","week","dayList","months","monthsHTML","yearHTML","onKey","onDay","daysHTML","tgt","HTMLInputElement","valueAsDate","isToday","today","c1","c2","current","monthList","onMonth","onYear","selectedIndex","GSCardElement","imageStyle","overlay","align","image","subtitle","footer","header","colorText","colorBack","colorBorder","cssTitle","cssSubtitle","cssFooter","cssImage","styleID","isVertical","renderVertical","renderHorizontal","imageTop","imageBottom","isBefore","startClass","endClass","startHtml","images","endHtml","isHorizontal","imageSlot","GSCenterElement","GSMenuElement","auto","dark","menuRef","closeSubmenus","updatePosition","onMouseLeave","submenu","dropend","dropstart","popup","caller","isMouseOrPointerEvent","renderSubmenu","renderHeader","renderMenu","renderDivider","menu","toSubmenu","menuItem","isSubmenu","innerWidth","GSContextElement","isInTable","attachTarget","assignedSlot","onPopup","GSCompareElement","background","before","after","elRef","clipRef","slideRef","mouseController","elPosition","splitter","onDoubleClick","isAuto","pct","isFixed","slider","clip","GSControllerElement","module","changes","initialize","GSCopyrightElement","company","isCompany","isYear","GSDataHandler","autoload","autorefresh","config","handler","lifoReadRef","lifoWriteRef","itemHolder","PROPERTIES","initLIFO","updateHandler","formatSort","formatFilter","isDebug","gsDebug","isCached","formated","save","verifyHandler","callOnceLifo","lifoReadRefCallback","lifoWriteRefCallback","lifoCall","GSDialogElement","standard","escapable","cancelText","confirmText","minWidth","buttonAlign","iconCancel","iconConfirm","colorCancel","colorConfirm","cssCancel","cssConfirm","cssContent","dialogRef","btnConfirmRef","btnCancelRef","CSS","TITLE_CSS","HEADER_CSS","ALIGN","CANCEL","CONFIRM","updateStack","onOpenChanged","STACK","dialog","showModal","focusable","renderConfirm","onConfirm","renderCancel","onCancel","renderFooter","onForm","onSubmit","info","confirm","prompt","forms","f","tab","btnConfirm","btnCancel","QUERY_INPUT","isVisible","GSDrawerElement","backdrop","scroll","fingers","transition","cssHead","onLeave","onEnter","hasHeader","headSlot","GSDropdownElement","simple","renderButton","buttonClass","btn","GSEmailElement","user","domain","dev","updateUser","updateDomain","GSFormElement","acceptCharset","enctype","novalidate","formRef","onChange","doFilter","filterField","childrens","elements","gsfDisable","inputs","reportValidity","onValidate","disableInput","enableInput","onFieldChange","fieldValue","fldName","fldVal","gsfValue","matched","selectable","GSFormGroupElement","layout","label","description","placeholder","mask","spellcheck","rows","cols","step","minLength","maxLength","autoid","autocopy","autoselect","reveal","readonly","required","invalidMessage","cellField","cellLabel","cssLabel","cssField","inputRef","ouptutRef","patterns","validateAllowed","ICON","CSS_LABEL","CSS_LABEL_CELL","SELECTOPT","onRange","renderFloating","cssCheck","renderInput","renderOutput","renderLabel","renderInfo","renderLabelWrap","renderField","isIcon","CSS_ICON","renderTooltip","isRange","idattr","isFieldset","radioLayout","fieldSet","inputHTML","selectHTML","isTextArea","fld","vertical","initStyle","listHTML","outerHTML","isSwitch","isCheckable","isFloating","slots","tagList","isCheck","isRadio","isChecked","isPassword","isEmail","isURL","GSFormPanelElement","formStorage","GSGroupElement","controllerGroup","initData","prerender","of","renderWrappedUI","renderWrappedClass","childTagName","generated","getName","GSIconElement","superColor","_clicked","_hovered","postAnimate","fs","GSIndentElement","multiplier","numdef","GSImageElement","invert","grayscale","brightness","contrast","saturate","hue","sepia","alt","imageRef","complete","renderStyle","buildFilter","GSLayoutElement","resizable","autofit","vPos","hPos","els","dyncss","horizontal","lev","tplEl","elementTemplate","tc","dir","did","panelCSS","panelStyle","resize","grow","vpos","hpos","GSLinklement","ping","GSListElement","GSListItemElement","initial","renderFirst","renderSecond","itemCSS","isSelectable","itemStatusCSS","renderText","activeCSS","cssActive","inactiveCSS","cssInactive","GSNavElement","isTab","GSNavItemElement","itemsCSS","isNav","buttonCSS","buildCSS","cssButton","navType","GSOverlayElement","autoremove","radius","styleID2","innerHeight","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathStr","createSVGPathString","fill","pointerEvents","cursor","windowX","windowY","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPagerElement","pages","labelFirst","labelLast","labelNext","labelPrevious","half","renderPrevious","renderItem","renderNext","renderLast","pagination","decodeHTMLEntities","toTarget","ctrl","GSPopupElement","wMin","wMax","hMin","hMax","panelRef","attachTaraget","onAuto","reposition","popupFixed","panel","Event","overflowH","overflowV","GSProgressElement","updateStyle","percentage","onKeySelect","increase","decrease","trunc","old","GSSpinnerElement","pulsar","GSSplitterElement","styleTGT","cssUpdate","lock","updateMouse","isPreceeding","isStyleValue","styleDynamic","lockable","csize","cls","gsSplitter","updateX","updateY","dx","GSTabItemElement","updateCSS","tabCSS","GSTabPanelElement","GSTabGroupElement","findPanel","isAfter","tabs","renderTabs","panels","renderPanels","GSTableElement","colspan","hidden","fixed","filterType","cssFilter","colorHead","colorSelect","colorSort","stripedColumn","divider","striped","grid","borderless","columns","datacolumn","multisort","multiselect","protected","sortable","sortOrder","headColor","CELLS","table","stripedColumns","renderFilters","onSort","entry","renderColumn","renderRecord","renderEmpty","renderHandler","columnType","columType","input","valueAt","row","cell","cfgType","timestamp","dataType","renderFilter","hasSub","onFilter","renderOption","listid","icons","sortType","cells","remapRecord","renderCell","record","elementTofilter","column","getElementIndex","prepareSorter","isComplex","tr","GSTagElement","converter","appendable","closeColor","cssClose","cssTag","dataListRef","renderTags","onInput","renderList","updateTag","KEYS","srcElement","removeTag","addTag","isMax","datalist","optEl","tagEl","renderTag","tagClass","btnClass","badge","GSTextElement","GSTooltipElement","arrowRef","arrowStyle","attachEvents","fade","arrowEl","panelEl","refLocal","refGlobal","GSTemplateElement","CopySelectController","clickCallback","copyCallback","onCopy","writeToClipboard","MaskController","_","back","prev","keyDownCallback","inputCallback","focusCallback","changeCallback","onFocus","initRules","j","buildSlots","findIndex","buildAccept","toPattern","setCustomValidity","isMatch","setSelectionRange","substring","selectionStart","selectionEnd","lastIndex","maskType","clean","chars","masks","special","MultipatternController","multipattern","NumberController","onNumberInput","PasswordController","revealing","keyUpCallback","isReveal","altKey","TextController","updateText","ListController","monitorCallback","blurCallback","onBlur","onMonitor","onDataChange","hasUpdated","strict","isInList","togleEl","dataGroup","isButtonElement","formElements","ValidityController","invalidCallback","processing","onInvalid","validity","beep","block","valid","defaultPropertyDeclaration","attributeToPropertyMap","prepare","elementProperties","finalize","finalized","prepareFn","getOwnPropertySymbols","superCtor","attributeNameForProperty","ReactiveInput","reflectingProperties","instanceProperties","updatePromise","reflectingProperty","isUpdatePending","observedAttributes","initializer","initializers","propKeys","getOwnPropertyNames","createProperty","noAccessor","descriptor","getPropertyDescriptor","prototype","configurable","enumerable","enableUpdating","attributeToProperty","requestedUpdate","getUpdateComplete","scheduleUpdate","performUpdate","propertyToAttribute","markUpdated","updateComplete","getPropertyOptions","changeProperty","enqueueUpdate","elementProps","wrapped","didUpdate","ctor","propName","attrValue","saveInstanceProperties","GSComboExt","HTMLSelectElement","setIf","objToHTML","GSDataListExt","HTMLDataListElement","GSInputElement","copyselect","maskController","multiPatternController","passwordController","numberController","textController","listController","validityController","results","GSTextArea","HTMLTextAreaElement","GSBreadcrumbElement","spacing","updateChildren","$text","GSBreadcrumbItemElement","generate","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","createReader","readEntries","getEntries","getFile","webkitGetAsEntry","GSFileBoxElement","cssList","cssInput","listEl","fileEl","dragging","TITLE","onDragenter","onDragleave","onDrop","onPaste","dataTransfer","hasFile","dropEffect","clipboardData","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","GSTimeFormat","toLocaleTimeString","GSDateFormat","GSYearFormat","GSCurrencyFormat","GSStepStyle","GSStepElement","iconCSS","titleCSS","INACTIVE","ICON_CSS","GSStepsElement","steps","isFirst","isLast","COMPLETED","SELECTED","GSNotificationElement","BOTTOM_END","DEFAULT","positionCSS","dismiss","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","dlg","nn","isNativeSupported","isGranted","permission","GSToastElement","pending","visibilityChange","isVisibilityChanged","pendingUpdate","validParent","renderWithHeader","renderSimple","isToast","isNotify","AbstractTreeController","addNodeController","removeNodeController","oldNode","TreeController","toggleState","addedNode","insertedNode","onRemove","GSTreeItemElement","renderSpinner","cssFocus","status","parentItem","checkColor","checkColorSelected","ui","itemIco","itemIcon","openIcon","closeIcon","renderIndent","renderMulti","GSTreeElement","guide","shared","listRef","nextItem","previousItem","reload","expandable","GSChartElement","URL_LIB","GS_URL_CHART","canvasRef","chart","waitInit","destroy","isChart","renderData","canvas","updateChart","div","toBase64Image","quality","sets","datasets","ctx","getContext","Chart","initializing","registerables","nameV","valV","typeV","childs","isObject","_nam","GSChart","_val","_typ","GSHighlightElement","GS_URL_HLJS","codeRef","onTarget","onURL","onHighlight","hasLangauge","highlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMarkdownElement","GS_URL_MARKDOWN","history","maxHeight","containerRef","initLib","showdown","tasklists","tables","Converter","toCache","fromCache","container","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","script","GSMonacoElement","GS_URL_MONACO","editor","onMonacoReady","monaco","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","automaticLayout","minimap","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","paths","vs","initialized","initEnv","initMonaco"],"mappings":"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"}