{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/style.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSID.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSDynamicStyle.mjs","../../modules/base/GSCacheStyles.mjs","../../modules/base/GSAdoptedEngine.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSLocalization.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSTemplateCache.mjs","../../modules/base/GSTheme.mjs","../../modules/base/GSAttributeHandler.mjs","../../modules/helpers/Stack.mjs","../../modules/helpers/Queue.mjs","../../modules/helpers/BinaryTree.mjs","../../modules/helpers/DoublyLinkedList.mjs","../../modules/helpers/Tree.mjs","../../modules/data/ReadWriteRegistry.mjs","../../modules/data/AbstractReadWrite.mjs","../../modules/data/ReadWrite.mjs","../../modules/lib.mjs","../../modules/directives/dataset.mjs","../../modules/directives/literal.mjs","../../modules/directives/css-map.mjs","../../modules/properties/verificator.mjs","../../modules/properties/buttonType.mjs","../../modules/properties/color.mjs","../../modules/properties/environment.mjs","../../modules/properties/inputType.mjs","../../modules/properties/nav.mjs","../../modules/properties/orientation.mjs","../../modules/properties/placement.mjs","../../modules/properties/position.mjs","../../modules/properties/protocol.mjs","../../modules/properties/size.mjs","../../modules/properties/arrayConverter.mjs","../../modules/controllers/AdoptedController.mjs","../../modules/controllers/AttributeController.mjs","../../modules/controllers/ContentController.mjs","../../modules/controllers/DataController.mjs","../../modules/controllers/ElementMoveController.mjs","../../modules/controllers/ElementNavigationController.mjs","../../modules/controllers/OrientationController.mjs","../../modules/controllers/ThemeController.mjs","../../modules/controllers/TemplateController.mjs","../../modules/controllers/LocalizationController.mjs","../../modules/GSElement.mjs","../../modules/components/Accordion.mjs","../../modules/components/AccordionItem.mjs","../../modules/components/Alert.mjs","../../modules/components/Button.mjs","../../modules/components/Calendar.mjs","../../modules/components/Card.mjs","../../modules/components/Center.mjs","../../modules/components/Menu.mjs","../../modules/components/Context.mjs","../../modules/components/Compare.mjs","../../modules/components/Controller.mjs","../../modules/components/Copyright.mjs","../../modules/components/DataHandler.mjs","../../modules/components/Dialog.mjs","../../modules/components/Drawer.mjs","../../modules/components/Dropdown.mjs","../../modules/components/Email.mjs","../../modules/components/Form.mjs","../../modules/components/FormGroup.mjs","../../modules/components/FormPanel.mjs","../../modules/components/Group.mjs","../../modules/components/Icon.mjs","../../modules/components/Indent.mjs","../../modules/components/Image.mjs","../../modules/components/Layout.mjs","../../modules/components/Link.mjs","../../modules/components/List.mjs","../../modules/components/ListItem.mjs","../../modules/components/NavItem.mjs","../../modules/components/Nav.mjs","../../modules/components/Overlay.mjs","../../modules/components/Pager.mjs","../../modules/components/Popup.mjs","../../modules/components/Progress.mjs","../../modules/components/Spinner.mjs","../../modules/components/Splitter.mjs","../../modules/components/tab/Tab.mjs","../../modules/components/tab/TabPanel.mjs","../../modules/components/tab/TabGroup.mjs","../../modules/components/Table.mjs","../../modules/components/Tag.mjs","../../modules/components/Text.mjs","../../modules/components/Tooltip.mjs","../../modules/components/Template.mjs","../../modules/components/ext/controllers/CopySelectController.mjs","../../modules/components/ext/controllers/MaskController.mjs","../../modules/components/ext/controllers/NumberController.mjs","../../modules/components/ext/controllers/PasswordController.mjs","../../modules/components/ext/controllers/TextController.mjs","../../modules/components/ext/controllers/ListController.mjs","../../modules/components/ext/ReactiveInput.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSInputElement.mjs","../../modules/components/breadcrumb/Breadcrumb.mjs","../../modules/components/breadcrumb/BreadcrumbItem.mjs","../../modules/components/intl/TimeFormat.mjs","../../modules/components/intl/DateFormat.mjs","../../modules/components/intl/YearFormat.mjs","../../modules/components/intl/CurrencyFormat.mjs","../../modules/components/steps/StepStyle.mjs","../../modules/components/steps/Step.mjs","../../modules/components/steps/Steps.mjs","../../modules/components/toast/Notification.mjs","../../modules/components/toast/Toast.mjs","../../modules/components/tree/controllers/AbstractTreeController.mjs","../../modules/components/tree/controllers/TreeController.mjs","../../modules/data/TreeNode.mjs","../../modules/components/tree/TreeItem.mjs","../../modules/components/tree/Tree.mjs","../../modules/extra/Chart.mjs","../../modules/extra/Highlight.mjs","../../modules/extra/Markdown.mjs","../../modules/extra/Monaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Required CSS Styles for WebCompoents, regardless Bootstrap CSS.\r\n */\r\nexport const gsstyles = `.z-10k{z-index:10000 !important;}\r\n.gs-hide,gs-item{display:none !important;}\r\ngs-popover,gs-tooltip{position:fixed;top:0px;left:0px;},\r\n.d-contents{display:contents;}';\r\ngs-button-group::part(.btn-group){box-shadow:rgba(72, 72, 72, 0.4) 0px 0.125rem 0.25rem;}\r\ngs-group>gs-button::part(button) {box-shadow: none;}\r\ngs-group>gs-button:not(:last-child)::part(button) {border-top-right-radius: 0;border-bottom-right-radius: 0;}\r\ngs-group>gs-button:not(:first-child)::part(button) {margin-left: calc(var(--bs-border-width) * -5);border-top-left-radius: 0;border-bottom-left-radius: 0;}\r\ngs-layout {width: 100%;height: 100%;}\r\ngs-split-panel{flex: 1 1 auto !important;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]:before {content: attr(data-value);}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {visibility: hidden;display: inline-block;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-calendar-picker-indicator {position: relative;top: 0px;right: 0;color: black;opacity: 0.5;}\r\n`;","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic asNum(val = 0, dft = 0, locale) {\r\n\t\tlocale = locale || GSUtil.locale;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(locale);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(locale = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(locale).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to write to the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async writeToClipboard(value = '') {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-write\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.writeText(value);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to read from the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async readFromClipboard() {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-read\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.readText();\r\n\t\t}\r\n\t\treturn '';\r\n\t}\t\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribite name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst safe = opt[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = opt[prop]?.default;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, locale) {\r\n        format = format || GSUtil.getDateFormat(locale);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, locale: {}, extract: {} };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', locale:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const locale = cfg.locale || GSUtil.locale;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, locale);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'text':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(locale);\r\n                    return new GSDate(val).format(fmt, locale);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, locale);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static *filter(data = [], filter = [], fields, limit = 0) {\r\n        let cnt = 0;\r\n        let sts = false;\r\n        for (let rec of data) {\r\n            sts = GSData.filterRecord(rec, filter, fields);\r\n            if (sts) {\r\n                cnt++\r\n                yield rec;\r\n            }\r\n            if (limit > 0 && cnt >= limit) break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields, limit = 0) {\r\n        data = Array.isArray(data) ? data : [];\r\n        filter = Array.isArray(filter) ? filter : [];\r\n        if (filter.length === 0) return data;\r\n        return [...GSData.filter(data, filter, fields, limit)];\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (GSData.filterValue(value, filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let value = null;\r\n\r\n        for (let flt of filter) {\r\n            value = rec[flt.name];\r\n            if (flt.name) {\r\n                found = found && GSData.filterValue(value, flt)\r\n            } else {\r\n                found = found && GSData.filterSimple(rec, flt.value);\r\n            }\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static filterValue(value, filter) {\r\n        if (value instanceof Date) {\r\n            return GSData.matchDate(value, filter);\r\n        } else if (value instanceof Date) {\r\n            return GSData.matchNumber(value, GSUtil.asNum(filter.value), filter.op);\r\n        } else {\r\n            return ('' + value).toLocaleLowerCase().includes(('' + filter.value).toLocaleLowerCase());\r\n        }\r\n    }\r\n\r\n    static matchDate(val, filter, locale) {\r\n\r\n        if (typeof filter === 'string') {\r\n            const value = '' + filter;\r\n            const local = val.toLocaleDateString(locale);\r\n            const iso = val.toISOString();\r\n            return local.includes(value) || iso.includes(value);\r\n        }\r\n\r\n        if (!filter.value) return false;\r\n\r\n        const qry = filter.value instanceof Date ? 'date' : typeof filter.value;\r\n\r\n        switch (qry) {\r\n            case 'number':\r\n                return GSData.matchNumber(val.getTime(), filter.value, filter.op);\r\n            case 'date':\r\n                return GSData.matchNumber(val.getTime(), filter.value.getTime(), filter.op);\r\n        }\r\n\r\n        return GSData.matchDate(val, '' + filter.value, filter.locale);\r\n    }\r\n\r\n    /**\r\n     * Match number by operator\r\n     * @param {*} value \r\n     * @param {*} query \r\n     * @param {*} operator \r\n     */\r\n    static matchNumber(value = 0, query = 0, operator = 'eq') {\r\n        switch (operator) {\r\n            case 'gt': return query > value;\r\n            case 'lt': return query < value;\r\n            case 'ge': return query >= value;\r\n            case 'le': return query <= value;\r\n        }\r\n        return value === query;\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToOject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromObject(obj, name) {\r\n        name.split('.')\r\n            .filter(v => !GSUtil.isNull(v))\r\n            .forEach(v => obj = GSData.readFromProperty(obj, v));\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static objectPathExist(obj, name) {\r\n        if (!name) return false;\r\n        return name.split('.')\r\n            .map(v => GSData.readFromProperty(obj, v))\r\n            .filter(v => !GSUtil.isNull(v))\r\n            .length > 0;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value') && el.value) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t}\r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t */\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(me.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {Boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el, opt) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el, opt);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {Boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {Boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {Boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {Boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {Boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {Boolean} forRemove - call on node remove or add\r\n     * @param {HTMLElement} target - element to monitor\r\n     * @returns {Boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {Boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {Boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop();\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n    * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\nimport { gsstyles } from \"./style.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Create a new CSSStyleSheet\r\n\t * @param {String} id Unique ID\r\n\t * @returns {CSSStyleSheet} Created instance\r\n\t */\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {String} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\t\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\t\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {String} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {String} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id, style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSID.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(gsstyles);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSDOM } from './GSDOM.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSDOMObserver } from './GSDOMObserver.mjs';\r\nimport { GSCacheStyles } from './GSCacheStyles.mjs';\r\n\r\nconst adoptedId = Symbol();\r\nconst observer = Symbol();\r\n\r\n/**\r\n * Monitor HTMLStyleElement & HTMLLinkElement (of type stylesheet) for changes.\r\n * Every such element marked with data-adoptable=\"true\" will be cached and\r\n * will trigger gs-adopted event to notify component controller to update adoptableStyleSheet list\r\n */\r\nexport class GSAdoptedEngine {\r\n\r\n  static #timerID = 0;\r\n  static #ID = Date.now();\r\n  static #scheduled = false;\r\n\r\n  static #init() {\r\n    const me = GSAdoptedEngine;\r\n    me.observe(document.head);\r\n    me.#preload();\r\n    me.#timerID = setInterval(() => me.#adopt(), me.timeout);\r\n  }\r\n\r\n  static #clear() {\r\n    const me = GSAdoptedEngine;\r\n    clearInterval(me.#timerID);\r\n    me.#timerID = undefined;\r\n  }\r\n\r\n  static #adopt() {\r\n    const me = GSAdoptedEngine;\r\n    const sheets = me.#adoptable;\r\n    if (sheets.length == 0) return me.#clear();\r\n    sheets.map(s => me.#adoptSheet(s));\r\n    me.update();\r\n  }\r\n\r\n  static update() {\r\n    const me = GSAdoptedEngine;\r\n    if (me.#scheduled) return;\r\n    me.#scheduled = true;\r\n    queueMicrotask(() => {\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          document.adoptedStyleSheets = me.#sorted;\r\n          document.adoptedStyleSheets.id = ++me.#ID;\r\n        } finally {\r\n          me.#scheduled = false;\r\n          globalThis.dispatchEvent(new CustomEvent('gs-adopted'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static #asText(sheet) {\r\n    return Object.values(sheet.cssRules).map(o => o.cssText).join('');\r\n  }\r\n\r\n  static #adoptLink(el) {\r\n    const me = GSAdoptedEngine;\r\n    GSAdoptedEngine.#monitorAttributes(el);\r\n    Array.from(document.styleSheets).filter(s => s.ownerNode === el).map(s => me.#adoptSheet(s));\r\n  }\r\n\r\n  static #adoptSheet(sheet) {\r\n    const me = GSAdoptedEngine;\r\n    const style = me.#asText(sheet);\r\n    return me.#adoptStyle(sheet.ownerNode, style);\r\n  }\r\n\r\n  static #adoptStyle(ownerNode, style) {\r\n    const me = GSAdoptedEngine;\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(style);\r\n    sheet.id = ++me.#ID;\r\n    ownerNode[adoptedId] = sheet.id;\r\n    me.#store(ownerNode, sheet);\r\n    return sheet;\r\n  }\r\n\r\n  static #store(ownerNode, sheet) {\r\n    GSCacheStyles.set(sheet.id, sheet);\r\n  }\r\n\r\n  static #remove(ownerNode, sheet) {\r\n    GSCacheStyles.remove(sheet.id);\r\n    ownerNode[observer]?.disconnect?.();\r\n    ownerNode[observer] = undefined;\r\n  }\r\n\r\n  static get #sorted() {\r\n    return GSCacheStyles.styles;\r\n  }\r\n\r\n  /**\r\n   * List of adoptable styles or links. Filter only those with dataset.adoptable=true\r\n   * @returns {HTMLStyleElement|HTMLLinkElement}\r\n   */\r\n  static get #adoptable() {\r\n    return Object.values(document.styleSheets)\r\n      .filter(o => o.ownerNode)\r\n      .filter(o => o.ownerNode.dataset.adoptable)\r\n      .filter(o => !o.ownerNode[adoptedId]);\r\n  }\r\n\r\n  static #preload() {\r\n    GSDOM.queryAll(document.head, 'link[rel=\"preload\"][as=\"style\"]')\r\n    .forEach(el => {\r\n      el.remove();\r\n      document.head.appendChild(el);\r\n    });\r\n  }\r\n\r\n  static #onAttributeChange(mutationList) {\r\n    mutationList.forEach((mutation) => {\r\n       const id = mutation.target[adoptedId];\r\n       const style = GSCacheStyles.get(id);\r\n       if(style) style.disabled = mutation.target.hasAttribute('disabled');\r\n    });\r\n    GSAdoptedEngine.update();\r\n  }\r\n  \r\n  static #monitorAttributes(element) {\r\n    const me = GSAdoptedEngine;\r\n    const callback = me.#onAttributeChange.bind(me);\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(element, {\r\n      attributeFilter: [\"disabled\"],\r\n      attributeOldValue: true,\r\n      subtree: false,\r\n    });\r\n    return observer;\r\n  }\r\n  \r\n  /**\r\n   * Filter style and link(css) elements which will be shared\r\n   * with all web componentes. Filter only those marked with data-adoptable\r\n   * @param {HTMLElement} el \r\n   * @returns {Boolean} Return true if monotired element is selected for further processing\r\n   */\r\n  static #onMonitorFilter(el) {\r\n    return (Boolean(el.dataset?.adoptable))\r\n      && (\r\n        (el instanceof HTMLLinkElement && (el.rel === 'stylesheet' || el.as === \"style\"))\r\n        || el instanceof HTMLStyleElement\r\n      );\r\n  }\r\n\r\n  /**\r\n   * When style added to the HTML page, attach it to the WebComponents\r\n   * @param {HTMLStyleElement|HTMLLinkElement} el \r\n   */\r\n  static #onMonitorConnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    if (el instanceof HTMLStyleElement) {\r\n      me.#adoptStyle(el, el.innerText);\r\n      me.update();\r\n    } else if (el instanceof HTMLLinkElement) {\r\n      GSEvents.wait(el, 'load', 0, false).then(e => {\r\n        if (el.rel === 'preload') return el.rel = \"stylesheet\";\r\n        me.#adoptLink(e.target);\r\n        me.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When style removed, remove from adoptable and update\r\n   * @param {HTMLElement} el \r\n   */\r\n  static #onMonitorDisconnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    me.#sorted.filter(o => o.id === el[adoptedId])\r\n          .forEach(o => me.#remove(el, o));\r\n    me.update();\r\n  }\r\n\r\n  /**\r\n   * Observe DOM tree from mutations\r\n   * @param {HTMLElement} owner Root element to watch DOM tree from \r\n   */\r\n  static observe(owner) {\r\n    const me = GSAdoptedEngine;\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorConnect, false, owner);\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorDisconnect, true, owner);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promisses sequentially\r\n\t * @param {Arrayy<Promise>} ps \r\n\t * @returns \r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport { GSEvent } from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport class GSEventBus {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {String} name EventBus name\r\n     * @param {String} type Event name\r\n     * @param {Object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {String} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {String} name unique buss name\r\n     * @returns {Boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constructor to attach Gesture featuer to an HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {Boolean} swipe Monitor swipe gesture\r\n     * @param {Boolean} tap Monitor tap gesture\r\n     * @param {Boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move: me.#handleTouchMove.bind(me),\r\n            start: me.#handleTouchStart.bind(me),\r\n            end: me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) {\r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 && Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {Number}\r\n     */\r\n    static fingers(e) {\r\n        return e.detail.touches?.length;\r\n    }\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns {GSGesture}\r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport class GSItem extends HTMLElement {\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return template content of GS-ITEM element (if exists)\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tget body() {\r\n\t\tlet tpl = GSAttr.get(this, 'template');\r\n\t\tif (tpl) return `<gs-template src=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = this.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item elements\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tget items() {\r\n\t\treturn Array.from(this.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSAttr.get(this, 'name', '');\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate that parent element contains only specific childrens\r\n\t * @param {*} own \r\n\t * @param {*} tagName \r\n\t * @returns \r\n\t */\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic collect(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Convert GS-ITEM list to JSON\r\n\t * @param {HTMLElement} root Element containing GS-ITEM childs \r\n\t * @returns {Array} Arary of JSON objects\r\n\t */\r\n\tstatic toJSON(root) {\r\n\t\treturn GSItem.collect(root).map(el => el.asJSON(true));\r\n\t}\r\n\r\n\t/**\r\n\t * Make GS-ITEM attributes JSON compatible \r\n\t * @param {*} root \r\n\t * @param {*} definition \r\n\t * @returns \r\n\t */\r\n    static proxify(root, definition) {        \r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, definition));\r\n    }\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport class GSPopper {\r\n\r\n\t/**\r\n\t * A simple wrapper to get element DOMRect\r\n\t * @param {HTMLElement} el \r\n\t * @returns {DOMRect}\r\n\t */\r\n\tstatic asRect(el) {\r\n\t\treturn el.getBoundingClientRect();\r\n\t}\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = GSPopper.asRect(el);\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = GSPopper.asRect(element);\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\r\n\t\tconst css = {\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '0px',\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.translate = `${obj.x}px ${obj.y}px`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tconst astyle = GSDynamicStyle.dynamicStyle(arrow);\r\n\r\n\t\tconst css = {\r\n\t\t\tinset: GSPopper.#inset(pos),\r\n\t\t\tposition: 'absolute',\r\n\t\t\tmargin: '0px',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\twidth: 'max-content',\r\n\t\t\theight: 'max-content',\t\t\t\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\t\tastyle.position = 'absolute';\r\n\r\n\t\tconst srect = GSPopper.asRect(source);\r\n\t\tconst arect = GSPopper.asRect(arrow);\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tconst aopt = {\r\n\t\t\ttranslate: `${arr.x}px ${arr.y}px`,\r\n\t\t\ttop: arr.top ? arr.top : '',\r\n\t\t\tleft: arr.left ? arr.left : ''\r\n\t\t}\r\n\r\n\t\tconst opt = {\r\n\t\t\ttranslate : `${obj.x}px ${obj.y}px`\r\n\t\t};\r\n\r\n\t\tObject.assign(style, opt);\r\n\t\tObject.assign(astyle, aopt);\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst opt = {};\r\n\r\n\t\topt.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\topt.left = '';\r\n\t\t\topt.top = '0px';\r\n\t\t\tshift = 0; //pos.isStart ? size : -1 * size;\r\n\t\t\topt.translate = `${shift}px ${arrowPosH / 2}px`;\r\n\t\t} else {\r\n\t\t\topt.top = '';\r\n\t\t\topt.left = '0px';\r\n\t\t\tshift = 0; //pos.isTop ? size : -1 * size;\r\n\t\t\topt.translate = `${arrowPosW}px ${shift}px`;\r\n\t\t}\r\n\r\n\t\tGSDynamicStyle.applyDynamicStyle(arrow, opt);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {\r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSQueryCSS } from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value);\r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n\r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\treturn document.getElementById(tpl.slice(1));\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTheme class\r\n * @module base/GSTheme\r\n */\r\n\r\n/**\r\n * Switch between dark and light mode\r\n * @Class\r\n */\r\nexport class GSTheme {\r\n\r\n    static #STORAGE = 'gs-theme-mode';\r\n\r\n    /**\r\n     * Changes the theme to 'dark mode' and save settings to local stroage.\r\n     * Basically, replaces/toggles every CSS class that has '-light' class with '-dark'\r\n     * @param {HTMLElement} el \r\n     */\r\n    static darkMode(el) {\r\n        GSTheme.#switch(el, 'light', 'dark');\r\n    }\r\n\r\n    /**\r\n     * Changes the theme to 'light mode' and save settings to local stroage.\r\n     * @param {HTMLElement} el \r\n     */\r\n    static lightMode(el) {\r\n        GSTheme.#switch(el, 'dark', 'light');\r\n    }\r\n\r\n    static #switch(el, from = 'light', to = 'dark') {\r\n\r\n        const root = el || document.body;\r\n\r\n        // TODO  switch dark/light mode ?!??!? \r\n\r\n        // save last state\r\n        GSTheme.theme = to;\r\n    }\r\n\r\n    static get theme() {\r\n        return localStorage.getItem(GSTheme.#STORAGE);\r\n    }\r\n\r\n    static set theme(val) {\r\n        localStorage.setItem(GSTheme.#STORAGE, val);\r\n        window.dispatchEvent(new CustomEvent('gs-theme', { detail: val }));\r\n        const htmlEl = document.head.parentElement;\r\n        if (val) {\r\n            htmlEl.dataset.bsTheme = val;\r\n        } else {\r\n            delete htmlEl.dataset.bsTheme;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get system default theme by media query\r\n     * @returns {String} dark|light \r\n     */\r\n    static getSystemDefaultTheme() {\r\n        const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\r\n        return darkThemeMq.matches ? 'dark' : 'light';\r\n    }\r\n\r\n    static #onTheme(e) {\r\n        const q = new URLSearchParams(location.hash.slice(1));\r\n        GSTheme.theme = q.get('theme');\r\n    }\r\n\r\n    static #setup() {\r\n        window.addEventListener('hashchange', GSTheme.#onTheme)\r\n        let settings = localStorage.getItem(GSTheme.#STORAGE);\r\n        if (settings == null) {\r\n            settings = GSTheme.getSystemDefaultTheme();\r\n        }\r\n\r\n\r\n        if (settings == 'dark') return GSTheme.darkMode();\r\n        if (settings == 'light') return GSTheme.lightMode();\r\n        // TODO switch\r\n\r\n    }\r\n\r\n    static {\r\n        GSTheme.#setup();\r\n        globalThis.GSTheme = GSTheme;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-attribute - togle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-call - calls a function on a given target (multipel functions supported)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el) {\r\n        const me = this;\r\n        me.#host = el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = GSAttributeHandler.proxify(me.#host);\r\n    }\r\n\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleSwap(target);\r\n        me.#handleInject(host, target);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    #handleBinding(target, evt) {\r\n        const source = evt.target.field || evt.target.form || evt.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n        if (!(isField || isForm)) return;\r\n    }\r\n\r\n    #handleAction(target) {\r\n        const me = this;\r\n        GSEvents.send(target, 'action', me.action);\r\n    }\r\n\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)();\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    #handleInject(host, target) {\r\n        if (this.inject) {\r\n            const content = GSDOM.parse(this.inject, true);\r\n            this.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n    #handleSwap(target) {\r\n        if (this.swap) target.innerHTML = this.swap;\r\n    }\r\n\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    #applyContent(host, target, content) {\r\n        if (host.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    deattach(name = 'click') {\r\n        //GSEvents.deattachListeners(this.#host);\r\n        const me = this;\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        me.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n        const me = this;\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                return [GSDOM.root(me.#host)];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n        return GSDOM.queryAll(document.body, me.target, false, true) || [me.#host];\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     */\r\n    static clone(from, to) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig  last in, first out (LIFO) order of operations.\r\n */\r\nexport class Stack extends Array {\r\n    \r\n    push(item) {\r\n        this.unshift(item);\r\n    }\r\n\r\n    pop() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig first in, first out (FIFO) order of operations.\r\n */\r\nexport class Queue extends Array {\r\n    \r\n    enqueue(item) {\r\n        this.push(item);\r\n    }\r\n\r\n    dequeue() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst tree = new BinaryTree(1, 'AB');\r\n\r\ntree.insert(1, 11, 'AC');\r\ntree.insert(1, 12, 'BC');\r\ntree.insert(12, 121, 'BG', { right: true });\r\n\r\n[...tree.preOrderTraversal()].map(x => x.value);\r\n// ['AB', 'AC', 'BC', 'BCG']\r\n\r\n[...tree.inOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB', 'BC', 'BG']\r\n\r\ntree.value;                // 'AB'\r\ntree.hasChildren;          // true\r\n\r\ntree.find(12).isLeaf;           // false\r\ntree.find(121).isLeaf;          // true\r\ntree.find(121).parent.value;    // 'BC'\r\ntree.find(12).left;             // null\r\ntree.find(12).right.value;      // 'BG'\r\n\r\ntree.remove(12);\r\n\r\n[...tree.postOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB']\r\n*/\r\n\r\n/**\r\n * Binary Tree Node data holder\r\n */\r\nexport class BinaryTreeNode {\r\n\r\n    constructor(key, value = key, parent = null) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n\r\n    /**\r\n     * Check if both left and right are empty.\r\n     */\r\n    get isLeaf() {\r\n        return this.left === null && this.right === null;\r\n    }\r\n\r\n    /**\r\n     * Check if node has children\r\n     */\r\n    get hasChildren() {\r\n        return !this.isLeaf;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Binary tree implementation\r\n */\r\nexport class BinaryTree extends BinaryTreeNode {\r\n\r\n    constructor(key, value = key) {\r\n        super(key, value);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in in-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *inOrderTraversal(node = this) {\r\n        if (node.left) yield* this.inOrderTraversal(node.left);\r\n        yield node;\r\n        if (node.right) yield* this.inOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in post-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *postOrderTraversal(node = this) {\r\n        if (node.left) yield* this.postOrderTraversal(node.left);\r\n        if (node.right) yield* this.postOrderTraversal(node.right);\r\n        yield node;\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in pre-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *preOrderTraversal(node = this) {\r\n        yield node;\r\n        if (node.left) yield* this.preOrderTraversal(node.left);\r\n        if (node.right) yield* this.preOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to find the given parent node and \r\n     * insert a new child BinaryTreeNode either as the left or right child, \r\n     * depending on the passed options object.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @param {*} options \r\n     * @returns {boolean} Return true if data inserted\r\n     */\r\n    insert(\r\n        parentNodeKey,\r\n        key,\r\n        value = key,\r\n        { left, right } = { left: true, right: true }\r\n    ) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === parentNodeKey) {\r\n                const canInsertLeft = left && node.left === null;\r\n                const canInsertRight = right && node.right === null;\r\n                if (!canInsertLeft && !canInsertRight) return false;\r\n                if (canInsertLeft) {\r\n                    node.left = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n                if (canInsertRight) {\r\n                    node.right = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to remove a BinaryTreeNode from the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.left.key === key) {\r\n                node.left = null;\r\n                return true;\r\n            }\r\n            if (node.right.key === key) {\r\n                node.right = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to retrieve the given node in the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    find(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new DoublyLinkedList();\r\n\r\nlist.insertFirst(1);\r\nlist.insertFirst(2);\r\nlist.insertFirst(3);\r\nlist.insertLast(4);\r\nlist.insertAt(3, 5);\r\n\r\nlist.size;                      // 5\r\nlist.head.value;                // 3\r\nlist.head.next.value;           // 2\r\nlist.tail.value;                // 4\r\nlist.tail.previous.value;       // 5\r\n[...list].map(e => e.value);    // [3, 2, 1, 5, 4]\r\n\r\nlist.removeAt(1);               // 2\r\nlist.getAt(1).value;            // 1\r\nlist.head.next.value;           // 1\r\n[...list].map(e => e.value);    // [3, 1, 5, 4]\r\n\r\nlist.reverse();\r\n[...list].map(e => e.value);    // [4, 5, 1, 3]\r\n\r\nlist.clear();\r\nlist.size;                      // 0\r\n*/\r\n\r\n/**\r\n * Node data holder\r\n */\r\nexport class Node {\r\n\r\n    value = null;\r\n    next = null;\r\n    previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    release() {\r\n        this.value = undefined;\r\n        this.next = undefined;\r\n        this.previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DoublyLinkedList {\r\n\r\n    #nodes = [];\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     */\r\n    get size() {\r\n        return this.#nodes.length;\r\n    }\r\n\r\n    /**\r\n     * First element in the list\r\n     */\r\n    get head() {\r\n        return this.size ? this.#nodes[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Last elemet in the list\r\n     */\r\n    get tail() {\r\n        return this.size ? this.#nodes[this.size - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Create new linked node\r\n     * @param {*} value \r\n     * @param {*} nextNode \r\n     * @param {*} previousNode \r\n     * @returns \r\n     */\r\n    create(value, nextNode, previousNode) {\r\n        return new Node(value, nextNode, previousNode);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the given position in the list\r\n     * @param {*} index \r\n     * @param {*} value \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    insertAt(index, value, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index] || null;\r\n        const node = create(value, nextNode, previousNode);\r\n\r\n        if (previousNode) previousNode.next = node;\r\n        if (nextNode) nextNode.previous = node;\r\n        this.#nodes.splice(index, 0, node);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the beginning of the list\r\n     * @param {*} value \r\n     */\r\n    insertFirst(value) {\r\n        this.insertAt(0, value);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the end of the list\r\n     * @param {*} value \r\n     */\r\n    insertLast(value) {\r\n        this.insertAt(this.size, value);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data in the given index\r\n     * @param {Number} index \r\n     * @returns \r\n     */\r\n    getAt(index) {\r\n        return this.#nodes[index];\r\n    }\r\n\r\n    indexOf(val) {\r\n        return this.#nodes.indexOf(val);\r\n    }\r\n\r\n    /**\r\n     * Remove the data at the given index\r\n     * @param {*} index \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    removeAt(index, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index + 1] || null;\r\n\r\n        if (previousNode) previousNode.next = nextNode;\r\n        if (nextNode) nextNode.previous = previousNode;\r\n\r\n        return this.#nodes.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    clear(full = true) {\r\n        if (full) this.#nodes.forEach(o => o.release());\r\n        this.#nodes = [];\r\n    }\r\n\r\n    /**\r\n     * Reverse data order\r\n     */\r\n    reverse() {\r\n        this.#nodes = this.#nodes.reduce((acc, { value }) => {\r\n            const nextNode = acc[0] || null;\r\n            const node = new Node(value, nextNode, null);\r\n            if (nextNode) nextNode.previous = node;\r\n            return [node, ...acc];\r\n        }, []);\r\n    }\r\n\r\n    toArray() {\r\n        return this.#nodes.map(e => e.value);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#nodes;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield* this.#nodes;\r\n    }\r\n\r\n    #validate(index, safe = false) {\r\n        const isInvalid = this.#isInvalidIndex(index);\r\n        if (isInvalid) {\r\n            if (safe) {\r\n                console.log(this.#error());\r\n            } else {\r\n                throw new Error(this.#error());\r\n            }\r\n        }\r\n        return !isInvalid;\r\n    }\r\n\r\n    #isInvalidIndex(index) {\r\n        return !Number.isInteger(index) || index < 0 || index > this.size;\r\n    }\r\n\r\n    #error() {\r\n        return `Invalid index. Current length is ${this.size}.`;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        const list = new DoublyLinkedList();\r\n        if (Array.isArray(data)) data.forEach(v => list.insertLast(v));\r\n        return list;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Tree Node data holder\r\n */\r\nexport class Tree {\r\n\r\n    value;\r\n\r\n    #key = null;\r\n    #parent = null;\r\n    #children;\r\n\r\n    #folder = false;\r\n    #level = 0;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        this.#key = key;\r\n        this.#parent = parent;\r\n        this.#folder = value?.leaf === false;\r\n        this.#level = parent ? parent.level + 1 : level;\r\n        this.#children = this.#folder ? [] : undefined;\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Return tree list from root to this node.\r\n     * TODO: Refactor when iterator \"map\" become available\r\n     */\r\n    get subtree() {\r\n        return Array.from(this.up(undefined, false, true, true));\r\n    }\r\n\r\n    get levelID() {\r\n        return this.subtree.map(o => o.level).join('.');\r\n    }\r\n\r\n    /**\r\n     * Unique node canonical form\r\n     */\r\n    get nodeID() {\r\n        //if (this.parent?.level < 0) return this.index;\r\n        return this.subtree.map(o => o.index).join('.');\r\n    }\r\n\r\n    get path() {\r\n        return this.subtree.map(o => o.key).join('/');\r\n    }\r\n\r\n    get index() {\r\n        return this.parent?.nodes.indexOf(this) || 0;\r\n    }\r\n\r\n    get size() {\r\n        return this.#children?.length || -1;\r\n    }\r\n\r\n    get level() {\r\n        return this.#level;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Check if #children is empty\r\n     */\r\n    get isLeaf() {\r\n        return !this.#folder;\r\n    }\r\n\r\n    get isFolder() {\r\n        return this.#folder;\r\n    }\r\n\r\n    /**\r\n     * Check if has #childrens\r\n     */\r\n    get hasChildren() {\r\n        return this.#folder && this.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get key() {\r\n        this.#key ??= this.nodeID;\r\n        return this.#key;\r\n    }\r\n\r\n    get nodes() {\r\n        return this.#children;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get parent() {\r\n        return this.#parent;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n    /**\r\n     * Check if there are more siblings \r\n     */\r\n    get hasMore() {\r\n        return this.#parent?.size > this.index + 1;\r\n    }\r\n\r\n    get firstChild() {\r\n        return this.hasMore ? this.#children[0] : undefined;\r\n    }\r\n\r\n    get lastChild() {\r\n        return this.hasMore ? this.#children[this.#children.length - 1] : undefined;\r\n    }\r\n\r\n    get next() {\r\n        return this.down(this, false, false).next().value || this.nextSibling || this.parent?.nextSibling;\r\n    }\r\n\r\n    get previous() {\r\n        const node = this.previousSibling;\r\n        return (node?.hasChildren) ? node.lastChild : node || this.up(this, false, false).next().value;\r\n    }\r\n\r\n    get nextSibling() {\r\n        return this.hasMore ? this.#parent.#children[this.index + 1] : undefined;\r\n    }\r\n\r\n    get previousSibling() {\r\n        return this.index > 0 ? this.#parent.#children[this.index - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Clear all #children\r\n     */\r\n    clear() {\r\n        if (this.#children) {\r\n            this.#children.forEach(o => o.release?.());\r\n            this.#children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally, if called externally, \r\n     * make sure node is removed from parent \r\n     */\r\n    release() {\r\n        this.clear();\r\n        this.#key = null;\r\n        this.value = null;\r\n        this.#parent = null;\r\n    }\r\n\r\n    /**\r\n     * Walk down the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     * @param {Boolean} flat Navigate all nodes out of subtree\r\n     */\r\n    *down(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (node.#children?.length) {\r\n            for (let child of node.#children) {\r\n                yield* this.down(child, values, true, reverse, flat);\r\n            }\r\n        }\r\n        if (flat) {\r\n            const item = node.nextSibling || node.parent.nextSibling;\r\n            if (item) yield* this.down(item, values, true, reverse, flat);\r\n        }\r\n        /*\r\n        */\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk up the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     */\r\n    *up(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (flat) {\r\n            let item = node.previousSibling;\r\n            item = item?.isFolder ? item.lastChild : item\r\n            if (item) yield* this.up(item, values, true, reverse, flat);\r\n        }        \r\n        if (node.parent) {\r\n            yield* this.up(node.parent, values, true, reverse, flat);\r\n        }\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk through all nodes\r\n     * @param {*} node \r\n     */\r\n    walk = this.down;\r\n\r\n    /**\r\n     * Simulate array function \"forEach\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */\r\n    forEach(callback, flat = false, reverse = false) {\r\n        this.every((node, index) => {\r\n            callback(node, index);\r\n            return true;\r\n        }, flat, reverse);\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"every\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    every(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let sts = true;\r\n        let i = 0;\r\n        for (let node of it) {\r\n            sts = callback(node, i++);\r\n            if (!sts) break;\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"find\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    find(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let i = 0;\r\n        for (let node of it) {\r\n            if (callback(node, i++)) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"filter\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only childrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    filter(callback, flat, reverse) {\r\n        return [...this.#filtered(callback, flat, reverse)];\r\n    }\r\n\r\n    *#filtered(callback, flat, reverse) {\r\n        const it = this.iterate(flat, reverse);\r\n        for (let node of it) {\r\n            let res = callback(node);\r\n            if (res) yield node;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Iterate all nodes\r\n     * @param {boolean} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {boolean} reverse If set, will iterate up the tree\r\n     */\r\n    *iterate(flat, reverse) {\r\n        reverse ? yield* this.up(this, false, false, false, flat) : yield* this.down(this, false, false,  false, flat);\r\n    }\r\n\r\n    /**\r\n     * Add a new Tree to the tree.\r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    append(key, value = key) {\r\n        let newOne = undefined;\r\n        if (key instanceof Tree) {\r\n            key.#parent = this;\r\n            key.#level = this.#level + 1;\r\n            newOne = key;\r\n        } else {\r\n            newOne = new Tree(key, value, this);\r\n        }\r\n        this.#folder = true;\r\n        this.#children ??= [];\r\n        this.#children.push(newOne);\r\n        return newOne;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method and Array.prototype.push() \r\n     * to add a new Tree to the tree.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    insert(parentNodeKey, key, value = key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === parentNodeKey) {\r\n                const newOne = new Tree(key, value, node);\r\n                this.#folder = true;\r\n                this.#children ??= [];\r\n                node.#children.push(newOne);\r\n                return newOne;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove node from tree. If key is set, will search for first node with matching key.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n\r\n        const me = this;\r\n\r\n        if (key) {\r\n            const node = me.findByKey(key);\r\n            node?.remove();\r\n            return node;\r\n        }\r\n\r\n        if (me.isRoot) throw new Error('Root node can\\'t be removed!');\r\n        const node = me.parent;\r\n        const filtered = node.#children.filter(c => c !== me);\r\n        if (filtered.length !== node.#children.length) {\r\n            node.#children = filtered;\r\n            return me;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method to retrieve the given node in the tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    findByKey(key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convert tree into array list\r\n     * @returns \r\n     */\r\n    flatten(values, inclusive, reverse) {\r\n        return [...this.down(this, values, inclusive, reverse)];\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) Tree.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.#children?.map(o => o.toJSON()) || {};\r\n        return this.isLeaf ? { key: this.key, value: this.value } :\r\n            {\r\n                key: this.key,\r\n                value: this.value,\r\n                items: this.#children.map(o => o.toJSON())\r\n            }\r\n    }\r\n\r\n    /**\r\n     * Make node iterable\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.down();\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof Tree;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) throw new Error('Parent required when data is array');\r\n            raw.forEach(o => Tree.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        const tree = new Tree(obj.key, obj, data ? parent : undefined);\r\n        if (hasParent) parent.append(tree);\r\n        if (items) Tree.from(tree, items);\r\n        return tree;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../base/GSID.mjs\";\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n    #processors = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to register\r\n     * @param {object} processor\r\n     */\r\n    addProcessor(processor) {\r\n        if (!processor) return;\r\n        this.#processors ??= new Set();\r\n        this.#processors.add(processor);\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to remove\r\n     * @param {object} processor \r\n     */    \r\n    removeProcessor(processor) {\r\n        if (processor) this.#processors?.delete(processor);\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Generic event dispatcher, can be overriden to controll when to fire event\r\n     * @param {*} owner \r\n     * @param {*} type \r\n     * @param {*} data \r\n     * @param {*} error \r\n     */\r\n    notify(owner, type, data, error) {\r\n        this.emit(error ? 'error' : type, { type: type, error: error, owner: owner, data: data }, true);\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.#processors?.forEach(c => c.postRead?.(data));\r\n            if (data) me.notify(owner, 'read', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'read', data, e);\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.#processors?.forEach(c => c.postWrite?.(data));\r\n            if (result) me.notify(owner, 'write', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'write', data, e);\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"../base/GSFunction.mjs\";\r\nimport { GSLoader } from \"../base/GSLoader.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSAbstractReadWrite } from \"./AbstractReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically register in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */\r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */\r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return { ...this.#headers };\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = { ...val };\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */\r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#filter = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#sort = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest', 'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#writer);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('remote', GSReadWrite);\r\n    }\r\n\r\n}","// Lit 3.0 Google\r\nconst litUrl = globalThis.GS_LIT_URL || '/bootstrap-lit/assets/lib/lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const Directive = litModule.Directive;\r\nexport const LitElement = litModule.LitElement;\r\nexport const PartType = litModule.PartType;\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const adoptStyles = litModule.adoptStyles;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const createRef = litModule.createRef;\r\nexport const css = litModule.css;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const directive = litModule.directive;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getCompatibleStyle = litModule.getCompatibleStyle;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const guard = litModule.guard;\r\nexport const html = litModule.html;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isServer = litModule.isServer;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const literal = litModule.literal;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const noChange = litModule.noChange;\r\nexport const notEqual = litModule.notEqual;\r\nexport const nothing = litModule.nothing;\r\nexport const range = litModule.range;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const render = litModule.render;\r\nexport const repeat = litModule.repeat;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const staticHtml = litModule.staticHtml;\r\nexport const staticSvg = litModule.staticSvg;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const svg = litModule.svg;\r\nexport const templateContent = litModule.templateContent;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const unsafeStatic = litModule.unsafeStatic;\r\nexport const until = litModule.until;\r\nexport const when = litModule.when;\r\nexport const withStatic = litModule.withStatic;","import { Directive, directive, nothing } from \"../lib.mjs\";\r\n\r\nconst definition = {\r\n    'action': 'gsAction',\r\n    'anchor': 'gsAnchor',\r\n    'attribute': 'gsAttribute',\r\n    'call': 'gsCall',\r\n    'exec': 'gsExec',\r\n    'inject': 'gsInject',\r\n    'property': 'gsProperty',\r\n    'swap': 'gsSwap',\r\n    'target': 'gsTarget',\r\n    'template': 'gsTemplate',\r\n    'toggle': 'gsToggle',\r\n    'trigger': 'gsTrigger',\r\n    'value': 'gsValue'\r\n}\r\n\r\nconst template = {\r\n    'gsAction': undefined,\r\n    'gsAnchor': undefined,\r\n    'gsAttribute': undefined,\r\n    'gsCall': undefined,\r\n    'gsExec': undefined,\r\n    'gsInject': undefined,\r\n    'gsProperty': undefined,\r\n    'gsSwap': undefined,\r\n    'gsTarget': undefined,\r\n    'gsTemplate': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTrigger': undefined,\r\n    'gsValue': undefined\r\n}\r\n\r\nclass DatasetDirective extends Directive {\r\n\r\n    render(obj) {\r\n        console.log(obj);\r\n        return nothing;\r\n    }\r\n\r\n    update(part, [obj, flat = true]) {\r\n\r\n        if (!obj) return nothing;\r\n\r\n        const dataset = part.element.dataset;\r\n        const srcset = obj.dataset || obj;\r\n        const isDataset = srcset instanceof DOMStringMap;\r\n\r\n        if (isDataset) {\r\n            Object.assign(dataset, srcset);\r\n        } \r\n        \r\n        if (flat) this.#remap(dataset, obj);\r\n\r\n        return nothing;\r\n    }\r\n\r\n    #remap(dataset, obj) {\r\n        const opt = Object.assign({}, template);\r\n        const list = Object.entries(obj).filter(v => Object.hasOwn(definition, v[0]));\r\n        if (list.length > 0) {\r\n            list.forEach(kv => opt[definition[kv[0]]] = kv[1]);\r\n            Object.assign(dataset, opt);\r\n        }\r\n    }\r\n}\r\n\r\nexport const dataset = directive(DatasetDirective);\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\n\r\n/**\r\n * Generic object property descritptor getter\r\n * @param {Object} instance \r\n * @returns {PropertyDescriptor}\r\n */\r\nfunction descriptors(instance) {\r\n  return Object.entries(Object.getOwnPropertyDescriptors(instance));\r\n}\r\n\r\n/**\r\n * List of all object property descriptors \r\n * @param {Object} instance Object instance \r\n * @returns {Array<PropertyDescriptor>}\r\n */\r\nfunction listProperties(instance) {\r\n  return descriptors(instance)\r\n    .filter(e => typeof e[1].value !== 'function')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List all object property getters\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGetters(instance) {\r\n  return descriptors(Reflect.getPrototypeOf(instance))\r\n    .filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List of all getteble properties from an object\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGettable(instance) {\r\n  return new Set([...listGetters(instance), ...listProperties(instance)]);\r\n}\r\n\r\n/**\r\n * Parse string literal template into Lit html instance\r\n * @param {*} tpl \r\n * @param {*} params \r\n * @returns {function}\r\n */\r\nexport function literalTemplate(tpl, params) {\r\n  const names = Array.from(listGettable(params));\r\n  const vals = names.map(v => params[v]);\r\n  names.push('html');\r\n  vals.push(html);\r\n  return new Function(...names, `return html\\`${tpl}\\`;`)(...vals);\r\n}","/**\r\n * A clone of classMap directive to support CSS directive.\r\n * Lit classs is not expoed, so we have to clone it and create our own.\r\n */\r\n\r\nimport { Directive, PartType, directive, noChange } from \"../lib.mjs\";\r\n\r\nclass CssMapDirective extends Directive {\r\n\r\n    constructor(partInfo) {\r\n        super(partInfo);\r\n        if (partInfo.type !== PartType.ATTRIBUTE ||\r\n            partInfo.name !== 'css' ||\r\n            partInfo.strings?.length > 2) {\r\n            throw new Error('`classMap()` can only be used in the `css` attribute ' +\r\n                'and must be the only part in the attribute.');\r\n        }\r\n    }\r\n\r\n    render(classInfo) {\r\n        // Add spaces to ensure separation from static classes\r\n        return (' ' +\r\n            Object.keys(classInfo)\r\n                .filter((key) => classInfo[key])\r\n                .join(' ') +\r\n            ' ');\r\n    }\r\n\r\n    update(part, [classInfo]) {\r\n\r\n        // Remember dynamic classes on the first render\r\n        if (this._previousClasses === undefined) {\r\n            this._previousClasses = new Set();\r\n            if (part.strings !== undefined) {\r\n                this._staticClasses = new Set(part.strings\r\n                    .join(' ')\r\n                    .split(/\\s/)\r\n                    .filter((s) => s !== ''));\r\n            }\r\n\r\n            for (const name in classInfo) {\r\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\r\n                    this._previousClasses.add(name);\r\n                }\r\n            }\r\n            return this.render(classInfo);\r\n        }\r\n\r\n        const classList = part.element.classList;\r\n\r\n        // Remove old classes that no longer apply\r\n        for (const name of this._previousClasses) {\r\n            if (!(name in classInfo)) {\r\n                classList.remove(name);\r\n                this._previousClasses.delete(name);\r\n            }\r\n        }\r\n\r\n        // Add or remove classes based on their classMap value\r\n        for (const name in classInfo) {\r\n            // We explicitly want a loose truthy check of `value` because it seems\r\n            // more convenient that '' and 0 are skipped.\r\n            const value = !!classInfo[name];\r\n            if (value !== this._previousClasses.has(name) &&\r\n                !this._staticClasses?.has(name)) {\r\n                if (value) {\r\n                    classList.add(name);\r\n                    this._previousClasses.add(name);\r\n                } else {\r\n                    classList.remove(name);\r\n                    this._previousClasses.delete(name);\r\n                }\r\n            }\r\n        }\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * A directive that applies dynamic CSS classes.\r\n *\r\n * This must be used in the `css` attribute and must be the only part used in\r\n * the attribute. It takes each property in the `classInfo` argument and adds\r\n * the property name to the element's `classList` if the property value is\r\n * truthy; if the property value is falsey, the property name is removed from\r\n * the element's `css`.\r\n *\r\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\r\n * truthy.\r\n *\r\n * @param classInfo\r\n */\r\nexport const cssMap = directive(CssMapDirective);\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class ButtonTypes {\r\n\r\n    static values = ['button', 'reset', 'submit'];\r\n\r\n    static is(val) {\r\n        return ButtonTypes.values.includes(val);\r\n    }\r\n\r\n    static isReest(val) {\r\n        return ButtonTypes.values.indexOf(val) === 1;\r\n    }\r\n\r\n    static isSubmit(val) {\r\n        return ButtonTypes.values.indexOf(val) === 2;\r\n    }\r\n} \r\n\r\nexport const buttonType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ButtonTypes.is(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const ColorTypes = ['', 'primary', 'secondary', 'dark', 'light', 'info', 'warning', 'danger', 'alert', 'link', 'success'];\r\n\r\nexport const color = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ColorTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'dektop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n\r\nexport const InputTypes = ['checkbox', 'radio', 'switch', 'number', 'range', 'text', 'passsword', 'email', 'url', 'file'];\r\n\r\nexport const inputType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && InputTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const NavTypes = ['', 'pills', 'tabs', 'underline'];\r\n\r\nexport const nav = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && NavTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class PlacementTypes {\r\n\r\n    static values = ['center', 'left', 'right', 'start', 'end', 'top', 'bottom'];\r\n\r\n    static includes(val) {\r\n        return PlacementTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        return PlacementTypes.values.indexOf(val) > 4;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = PlacementTypes.values.indexOf(val)\r\n        return idx > 0 && idx < 5;\r\n    }\r\n\r\n    static isCenter(val) {\r\n        return PlacementTypes.values.indexOf(val) === 0;\r\n    }\r\n\r\n    static isBefore(val) {\r\n        return ['left', 'start', 'top'].includes(val);\r\n    }\r\n\r\n    static isAfter(val) {\r\n        return ['right', 'end', 'bottom'].includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const placement = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PlacementTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class PositionTypes {\r\n\r\n    static values = ['absolute', 'fixed', 'relative', 'sticky', 'static'];\r\n\r\n    static includes(val) {\r\n        return PositionTypes.values.includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const position = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PositionTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const SizeTypes = { 'default' : '', 'normal': '',  'medium': '', 'small': 'sm', 'large': 'lg', 'big' : 'lg' };\r\n\r\nexport const size = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && Object.hasOwn(SizeTypes, newVal);\r\n    }\r\n\r\n};","export const stringArrayConverter = {\r\n    fromAttribute: (value, type) => {\r\n        return (value || '').split(',');\r\n    },\r\n    toAttribute: (value, type) => {\r\n        return (value || []).join(',');\r\n    }\r\n  }","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time even gs-adopted is triggered by the GSAdoptedEngien class,\r\n * all registerd controller will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to preven dom node polution; \r\n * Style  changes  are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me.#host);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values) {\r\n    const me = this;\r\n    me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');\r\n    return me.#dynamic.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.deattach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (!me.#isSelf()) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs).forEach(el => el?.remove());\r\n      me.#refs.clear();\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async relink(read = true) {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#listen(read);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.filter = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    storage?.on('read', me.#readCallback);\r\n    storage?.on('write', me.#writeCallback);\r\n    storage?.on('error', me.#errorCallback);\r\n    if (read) storage.read(me.#host);\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    storage?.off('read', me.#readCallback);\r\n    storage?.off('write', me.#writeCallback);\r\n    storage?.off('error', me.#errorCallback);\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for elment move events, properly handling mouse events.\r\n */\r\nexport class ElementMoveController {\r\n\r\n  #host;\r\n  #element;\r\n  #attached = false;\r\n\r\n  #cursorX = 0;\r\n  #cursorY = 0;\r\n\r\n  #mouseUpCallback;\r\n  #mouseDownCallback;\r\n  #mouseMoveCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n    me.#mouseUpCallback = me.#onMouseUp.bind(me);\r\n    me.#mouseDownCallback = me.#onMouseDown.bind(me);\r\n    me.#mouseMoveCallback = me.#onMouseMove.bind(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  attach(element) {\r\n    const me = this;\r\n    if (!me.#attached) {\r\n      me.#element = element;\r\n      me.#attached = true;\r\n      me.#host.attachEvent(me.#element, 'mousedown', me.#mouseDownCallback);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.#cursorX = 0;\r\n    me.#cursorY = 0;\r\n    me.#host.removeEvent(document, 'mouseup', me.#mouseUpCallback);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n  * Call host onStartMove function\r\n  * @param {MouseEvent} e \r\n  */\r\n  #onMouseDown(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n    me.#host.onStartMove?.(e, me.#cursorX, me.#cursorY);\r\n    me.#host.attachEvent(document, 'mouseup', me.#mouseUpCallback, true);\r\n    me.#host.attachEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n   * Remove mousemove listener and call host onEndMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseUp(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n    return me.#host.onEndMove?.(e, me.#cursorX, me.#cursorY);\r\n  }\r\n\r\n  /**\r\n   * Call host onMouseMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseMove(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n\r\n    me.#host.onMouseMove?.(e, me.#cursorX, me.#cursorY);\r\n\r\n    if (me.#cursorX < e.clientX) {\r\n      me.#host.onCursorRight?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorX > e.clientX) {\r\n      me.#host.onCursorLeft?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    if (me.#cursorY < e.clientY) {\r\n      me.#host.onCursorUp?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorY > e.clientY) {\r\n      me.#host.onCursorDown?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for child element navigation / selection / focusing\r\n */\r\nexport class ElementNavigationController {\r\n\r\n  #host;\r\n  #attached;\r\n  #selected;\r\n  #focused;\r\n  #multiselect = new Set();\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#attached = false;\r\n  }\r\n\r\n  get circular() {\r\n    return this.#host?.circular === true;\r\n  }\r\n\r\n  get multiple() {\r\n    return this.#host?.multiple === true;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.multiple ? [...this.#multiselect.values()] : this.#selected;\r\n  }\r\n\r\n  attach(el) {\r\n    const me = this;\r\n    if (me.#attached) return;\r\n    me.#attached = true;\r\n    me.#host.attachEvent(el, 'keydown', e => me.onKeyDown(e));\r\n    me.#host.attachEvent(el, 'keyup', e => me.onKeyUp(e));\r\n    me.#host.attachEvent(el, 'click', e => me.onClick(e));\r\n    me.#host.attachEvent(el, 'focusin', e => me.onFocusIn(e));\r\n    me.#host.attachEvent(el, 'focusout', e => me.onFocusOut(e));\r\n  }\r\n\r\n  previous() {\r\n    const me = this;\r\n    let el = me.#focused?.previousElementSibling;\r\n    while (el && el.disabled) el = el.previousElementSibling;\r\n    if (me.circular && !el) el = me.lastElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  next() {\r\n    const me = this;\r\n    let el = me.#focused?.nextElementSibling;\r\n    while (el && el.disabled) el = el.nextElementSibling;\r\n    if (me.circular && !el) el = me.firstElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    const me = this;\r\n    if (me.multiple) {\r\n      me.#multiselect.forEach(el => {\r\n        el.active = false;\r\n        el.blur();\r\n      });\r\n    } else if (me.#selected) {\r\n      me.#selected.active = false;\r\n      me.#selected.blur();\r\n    }\r\n    me.#multiselect.clear();\r\n    me.#focused = undefined;\r\n    me.#selected = undefined;\r\n    this.#host?.emit('group-reset', undefined, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element selected\r\n   * @param {*} el \r\n   */\r\n  #onSelected(el) {\r\n    this.#host?.onSelected?.(el);\r\n    this.#host?.emit('group-selected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element deselected\r\n   * @param {*} el \r\n   */\r\n  #onDeselected(el) {\r\n    this.#host?.onDeselected?.(el);\r\n    this.#host?.emit('group-deselected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  #onFocused(el) {\r\n    this.#host?.onFocused?.(el);\r\n    this.#host?.emit('group-focused', el, true);\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  #isNavigable(el) {\r\n    return this.#host?.isNavigable ? this.#host?.isNavigable(el) : true;\r\n  }\r\n\r\n  #focus(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    me.#focused = el;\r\n    if (el) {\r\n      me.#onFocused(me.#focused);\r\n    }\r\n  }\r\n\r\n  #toggle(el) {\r\n    if (!el) return;\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    if (el.active) {\r\n      me.#multiselect.add(el);\r\n      me.#onSelected(el);\r\n    } else {\r\n      me.#multiselect.delete(el);\r\n      me.#onDeselected(el);\r\n    }\r\n  }\r\n\r\n  #select(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n\r\n    if (me.#selected && !me.multiple) {\r\n      me.#selected.active = false;\r\n      me.#toggle(me.#selected);\r\n    }\r\n\r\n    me.#selected = el;\r\n    if (el) {\r\n      if (me.multiple) {\r\n        el.active = !el.active;\r\n      } else {\r\n        el.active = true;\r\n      }\r\n      me.#toggle(el);\r\n    }\r\n  }\r\n\r\n  onFocusOut(e) {\r\n    const me = this;\r\n    //if (me.#focused === e.target) me.#focused = undefined;\r\n  }\r\n\r\n  onFocusIn(e) {\r\n    const me = this;\r\n    me.#focus(e.target)\r\n  }\r\n\r\n  onClick(e) {\r\n    const me = this;\r\n    if (e.ctrlKey) me.reset();\r\n    me.#select(e.target);\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        me.next();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        me.#focused?.click();\r\n        break;\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me.#host);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n  #injected;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#injected = false;\r\n    me.#request();    \r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  hostUpdate() {\r\n    this.#request();\r\n  }\r\n\r\n  requestUpdate() {\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  hostUpdated() {\r\n    if (this.#injected) this.#host.templateInjected?.();\r\n  }\r\n\r\n  #request() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      me.#lastRef = ref;\r\n      if (ref) TemplateController.#schedule(this);\r\n    }\r\n  }\r\n\r\n  async #load() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (!ref) return;\r\n    const isTplEl = ref instanceof HTMLTemplateElement;\r\n    const template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n    if (template) {\r\n      me.#template = template;\r\n      me.#injected = true;\r\n      me.#host.requestUpdate();\r\n    }\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    const host = this.#host;\r\n    if (!host) return;\r\n    if(this.isTemplateElement) return host.src;\r\n    return host.template || host.query('template', false);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    await GSUtil.timeout(100);\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = false));\r\n    }\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #locale;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#locale = host.locale;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#locale !== me.#host?.locale) {\r\n      me.#locale === me.#host?.locale;\r\n      me.updateLanguage(me.#locale);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#locale) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    locale: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n  #orientation;\r\n  #localization;\r\n  #dataController;\r\n  #themes\r\n  #template;\r\n  #content;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.locale = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('storage')) {\r\n      if (me.storage) {\r\n        if (!me.#dataController) {\r\n          me.#dataController = new DataController(me);\r\n        } else {\r\n          me.#dataController.relink();\r\n        }\r\n      } else {\r\n        me.#dataController?.hostDisconnected();\r\n        me.#dataController = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return noChange;\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : ''\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Called when asynchronnous template is injected into component\r\n   */\r\n  templateInjected() {\r\n    \r\n\t}\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to witch to add parsed CSS\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value) {\r\n    return this.#adopted.style(id, value);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.locale, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment);\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os);\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol);\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, opt);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\n\r\nexport class GSAccordionElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    autoclose: { type: Boolean },\r\n    cssItem: { reflect: true, attribute: 'css-item' },\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    data: { type: Array }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.settings;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n       @notify=\"${me.#onNotify.bind(me)}\"\r\n       @click=\"${me.#onClick}\" \r\n       @keyup=\"${me.#onKeyUp}\" \r\n       class=\"accordion ${classMap(me.renderClass())}\">\r\n       ${this.#renderItems()}\r\n       <slot></slot></div>`\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-accordion-item');\r\n  }\r\n\r\n  get settings() {\r\n    const cfg = this.constructor.properties;\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n  }\r\n\r\n  close() {\r\n    this.#state(false);\r\n  }\r\n\r\n  open() {\r\n    this.#state(true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-accordion-item generated\r\n        .opened=\"${ifDefined(o.disabled === true)}\" \r\n        message=\"${ifDefined(o.message)}\" \r\n        template=\"${ifDefined(o.template)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-accordion-item>`;\r\n    });\r\n  }\r\n\r\n  #state(val = false) {\r\n    this.items.forEach(el => el.opened = val);\r\n    this.notify();\r\n  }\r\n\r\n  #onNotify(e) {\r\n    const me = this;\r\n    if (me.autoclose && e.target.opened) {\r\n      me.items.filter(el => el != e.target).forEach(el => el.opened = false);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    e.target.toggle?.();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        e.target.close?.();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.target.open?.();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSAccordionItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    message: { reflect: true, },\r\n    title: { reflect: true, },\r\n    opened: { type: Boolean, reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-ACCORDION';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const owner = me.owner;\r\n    const cssHeader = me.cssHeader || owner?.cssHeader;\r\n    const cssBody = me.cssBody || owner?.cssBody;\r\n    return html`<div class=\"accordion-item ${me.css}\">\r\n             <h2 class=\"accordion-header\">\r\n               <button type=\"button\" \r\n                class=\"accordion-button  ${cssHeader} ${me.opened ? '' : 'collapsed'}\"> \r\n                 ${me.translate(me.title)}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse  ${cssBody} ${me.opened ? 'show' : ''}\">\r\n               <div class=\"accordion-body\">\r\n                   ${me.translate(me.message)}\r\n                   ${me.renderTemplate()}\r\n                   <slot></slot>\r\n               </div>\r\n             </div>      \r\n     </div>`\r\n  }\r\n\r\n  open() {\r\n    this.notify(true);\r\n  }\r\n  \r\n  close() {\r\n    this.notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.notify(!this.opened);\r\n  }\r\n\r\n  notify(val = false) {\r\n    const me = this;\r\n    me.opened = val;\r\n    super.notify();\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-accordion') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSAlertElement extends GSElement {\r\n\r\n    static properties = {\r\n        message: { reflect: true },\r\n        color: { ...color },\r\n        closed: { reflect: true, type: Boolean },\r\n        closable: { reflect: true, type: Boolean },\r\n        delay: { reflect: true, type: Number },\r\n    }\r\n\r\n    #ref;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.delay = 1;\r\n        this.#ref = createRef();\r\n        this.#data = this.#proxify(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div role=\"alert\" dir=\"${ifDefined(me.direction)}\" ${ref(me.#ref)} \r\n            @mouseover=\"${() => me.#pause = true}\"\r\n            @mouseout=\"${() => me.#pause = false}\"\r\n            class=\"alert fade ${classMap(me.renderClass())}\" >\r\n            ${me.#first}\r\n            ${me.renderTemplate()}\r\n            <slot></slot>\r\n            ${me.#second}\r\n        </div>`;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#handleBillboard();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        if (!changed.has('opened')) return;\r\n        this.#handleBillboard();\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': !me.closed,\r\n            'alert-dismissible': me.closable,\r\n            [`alert-${this.color}`]: me.color,\r\n\r\n        }\r\n        return css;\r\n    }\r\n\r\n    open() {\r\n        this.notify(false);\r\n    }\r\n\r\n    close() {\r\n        this.notify(true);\r\n    }\r\n\r\n    toggle() {\r\n        this.notify(!this.closed);\r\n    }\r\n\r\n    notify(val = false) {\r\n        const me = this;\r\n        me.closed = val;\r\n        if (me.closed) setTimeout(() => { me.#ref.value.classList.toggle('d-none', true) }, 250);\r\n        super.notify();\r\n    }\r\n\r\n    get isBillboard() {\r\n        return this.#data?.length > 0;\r\n    }\r\n\r\n    get #message() {\r\n        return this.translate(this.message);\r\n    }\r\n\r\n    get #first() { return this.rtl ? this.#button : this.#message; };\r\n\r\n    get #second() { return this.rtl ? this.#message : this.#button; };\r\n\r\n    get #button() {\r\n        return this.closable ? html`<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"${this.close}\"></button>` : '';\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, {message:{}}));\r\n    }\r\n\r\n    #handleBillboard() {\r\n        const me = this;\r\n        if (me.closed) {\r\n            clearInterval(me.#interval);\r\n            me.#interval = 0;\r\n        } else {\r\n            me.#billboard();\r\n        }        \r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        if (!me.isBillboard) return;\r\n        const items = me.#data;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].message;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].message;\r\n        }, me.delay * 1000);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-alert');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, size, buttonType, ButtonTypes, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSButtonElement extends GSElement {\r\n\r\n  static properties = {\r\n    type: { ...buttonType }, // reset, submit\r\n    size: { ...size }, // small, large, normal\r\n    color: { ...color },\r\n    toggleColor: { ...color, attribute : 'toggle-color' },\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    outline: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    toggling: { type: Boolean },\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    text: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'button';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<button part=\"button\" role=\"button\" ${ref(me.#refEl)}\r\n        dir=\"${ifDefined(me.direction)}\"\r\n        type=\"${ifDefined(me.type)}\" \r\n        class=\"btn ${classMap(me.renderClass())}\" \r\n        title=\"${ifDefined(me.#tooltip)}\"\r\n        ?disabled=${me.disabled} \r\n        @click=\"${me.#onClick}\">\r\n          ${me.#first} ${me.#second}</button>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n      'focus-ring': document.activeElement === me,\r\n      [`text-${me.text}`]: me.text,\r\n      [`btn-${size}`]: size,\r\n      [`btn-outline-${me.color}`]: me.outline,\r\n      [`btn-${me.color}`]: !me.outline && me.color,\r\n      [`btn-${me.toggleColor}`]: me.active && me.toggleColor,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    if(me.toggling) me.toggle();\r\n    if (me.isReset) return me.form?.reset();\r\n    if (me.isSubmit) return me.form?.submit();\r\n    me.notify();\r\n  }\r\n\r\n  get isReset() {\r\n    return ButtonTypes.isReest(this.type);\r\n  }\r\n\r\n  get isSubmit() {\r\n    return ButtonTypes.isSubmit(this.type);\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form, form');\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #tooltip() {\r\n    return this.translate(this.tooltip);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#icon; };\r\n\r\n  get #second() { return this.rtl ? this.#icon : this.#title; };\r\n\r\n  get #icon() { return this.icon ? html`<gs-icon class=\"bi bi-${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  static {\r\n    this.define('gs-button');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { unsafeHTML, classMap, html, ifDefined, css } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\n\r\nexport class GSCalendarElement extends GSElement {\r\n\r\n  static style = css`.year::-webkit-outer-spin-button,.year::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;} .year {-moz-appearance: textfield;} .day:focus{font-weight: bold;}`\r\n\r\n  static properties = {\r\n    date: {},\r\n    target: {},\r\n    format: { hasChanged: notEmpty },\r\n    year: { type: Number },\r\n    month: { type: Number, hasChanged: numGE0 },\r\n    day: { type: Number, hasChanged: numGE0 },\r\n    arrovPrev: { attribute: 'arrow-prev' },\r\n    arrowNext: { attribute: 'arrow-next' },\r\n    cssDays: { attribute: 'css-days' },\r\n    cssToday: { attribute: 'css-today' },\r\n    cssWeeks: { attribute: 'css-weeks' },\r\n    cssMonth: { attribute: 'css-month' },\r\n    cssYear: { attribute: 'css-year' },\r\n    cssNav: { attribute: 'css-nav' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    minYear: { attribute: 'year-min', type: Number },\r\n    maxYear: { attribute: 'year-max', type: Number },\r\n  }\r\n\r\n  #date;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.#date = new GSDate();\r\n    me.#date.locale = GSUtil.locale;\r\n    me.locale = GSUtil.locale;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.minYear = 1900;\r\n    me.maxYear = 2100;\r\n    me.arrowPrev = '&#10094;';\r\n    me.arrowNext = '&#10095;';\r\n    me.cssNav = 'btn-light';\r\n    me.cssToday = 'btn-secondary';\r\n    me.cssSelected = 'btn-primary';\r\n    me.cssWeeks = 'fw-bold text-bg-dark';\r\n    me.cssYear = 'form-control fs-5 fw-bold border-0 text-center m-1 p-0';\r\n    me.cssMonth = 'form-control fs-3 fw-bold border-0 text-center m-1 p-0';\r\n  }\r\n\r\n  get date() {\r\n    const me = this;\r\n    //return this.#date.toISOString();\r\n    return new Proxy(this.#date, {\r\n      set(target, prop, value) {\r\n        if (typeof target[prop] != 'function') {\r\n          target[prop] = value;\r\n          me.#update();\r\n        }\r\n        return true;\r\n      },\r\n      get(target, prop, receiver) {\r\n        const value = target[prop];\r\n        if (value instanceof Function) {\r\n          return function (...args) {\r\n            try {\r\n              return value.apply(this === receiver ? target : this, args);\r\n            } finally {\r\n              me.#update();\r\n            }\r\n          };\r\n        }\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  previousMonth() {\r\n    const me  =this;\r\n    if (me.month == 0) {\r\n      me.month = 11;\r\n      me.year--;\r\n    } else {\r\n      me.month--;\r\n    }\r\n  }\r\n\r\n  nextMonth() {\r\n    const me  =this;\r\n    if (me.month == 11) {\r\n      me.month = 0;\r\n      me.year++;\r\n    } else {\r\n      me.month++;\r\n    } \r\n  }\r\n\r\n  previousYear() {\r\n    this.year--;\r\n  }\r\n\r\n  nextYear() {\r\n    this.year++;\r\n  }\r\n\r\n  formatted(date) {\r\n    const me = this;\r\n    return (date || me.#date).format(me.format, me.locale);\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    const date = new GSDate(me.#date);\r\n    me.#updateTarget(date);\r\n    me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#date.year = me.year;\r\n    me.#date.month = me.month;\r\n    me.#date.day = me.day;\r\n    me.#date.locale = me.locale;\r\n\r\n    const week = GSDate.dayList(true, me.locale).map(v => html`<div class=\"col\">${v}</div>`);\r\n    const months = me.#monthsHTML();\r\n    const year = me.#yearHTML();\r\n\r\n    return html`\r\n          <div class=\"container-fluid text-center ${classMap(me.renderClass())}\"\r\n          dir=\"${ifDefined(me.direction)}\"\r\n          @keydown=\"${me.#onKey}\"\r\n          @click=\"${me.#onDay}\">\r\n          <div class=\"row align-items-center ${me.cssHeader} header\">\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.previousMonth}\" class=\"btn ${me.cssNav} arrow prev\">${unsafeHTML(me.arrowPrev)}</a>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  ${months}\r\n                  ${year}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.nextMonth}\" class=\"btn ${me.cssNav} arrow next\">${unsafeHTML(me.arrowNext)}</a>\r\n              </div>\r\n          </div>\r\n          <div class=\"row weeks ${me.cssWeeks}\">${week}</div>\r\n          ${unsafeHTML(me.#daysHTML())}\r\n      </div>`;\r\n  }\r\n\r\n  #updateTarget(date) {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    const tgt = GSDOM.query(document.documentElement, me.target);\r\n    if (!tgt) return;\r\n\r\n    if (tgt instanceof HTMLInputElement) {\r\n      if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n      return tgt.value = me.formatted(date);\r\n    }\r\n    GSDOM.setHTML(tgt, me.formatted(date));\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.locale = me.#date.locale;\r\n  }\r\n\r\n  #isToday(v, date) {\r\n    const me = this;\r\n    return v && GSUtil.asNum(v) === date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n  }\r\n\r\n  #daysHTML() {\r\n    const me = this;\r\n    const today = new GSDate();\r\n    today.locale = me.locale;\r\n    const list = me.#date.build(me.locale);\r\n    const result = list\r\n      .map(v => {\r\n        const c1 = me.#isToday(v, today) ? me.cssToday : '';\r\n        const c2 = me.#isToday(v, me.#date) ? me.cssSelected : '';\r\n\r\n        const d = v ? `<a tabindex=\"0\" href=\"#\" class=\"btn shadow-none ${c1} ${c2} day\" data-day=\"${v}\">${v}</a>` : ''\r\n        return `<div class=\"col p-0\">${d}</div>`;\r\n      })\r\n      .map((v, i) => {\r\n        if (i === 0) return `<div class=\"row days\">${v}`;\r\n        const isBreak = i % 7 == 0;\r\n        return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n      });\r\n    result.push('</div>');\r\n    return result.join('');\r\n  }\r\n\r\n\r\n  #monthsHTML() {\r\n    const me = this;\r\n    const current = me.#date.MMMM;\r\n    const months = GSDate.monthList(false, me.locale);\r\n    const list = months.map((v, i) => html`<option value=\"${i}\" selected=${ifDefined(current == v ? true : undefined)}>${v}</option>`);\r\n    //const list = GSDate.monthList(false, me.locale).map((v, i) => html`<option value=\"${i}\" ${current == v ? 'selected' : ''}>${v}</option>`);\r\n    return html`<select @change=\"${me.#onMonth}\" name=\"month\" class=\"month ${me.cssMonth}\" value=\"${months.indexOf(current)}\">${list}</select>`;\r\n  }\r\n\r\n  #yearHTML() {\r\n    const me = this;\r\n    return html`<input @change=\"${me.#onYear}\" name=\"year\" class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n  }\r\n\r\n  #onDay(e) {\r\n    GSEvents.prevent(e);\r\n    if (!e.target.classList.contains('day')) return;\r\n    this.day = GSUtil.asNum(e.target.dataset.day, this.day);\r\n  }\r\n\r\n  #onMonth(e) {\r\n    this.month = e.target.selectedIndex;\r\n  }\r\n\r\n  #onYear(e) {\r\n    this.year = e.target.value;\r\n  }\r\n\r\n  #onKey(e) {\r\n    console.log(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-calendar');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, styleMap } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\n\r\nexport class GSCardElement extends GSElement {\r\n\r\n  static styles = css`.card-header, .card-footer{ background-color: inherit; color: inherit;}`;\r\n\r\n  static properties = {\r\n\r\n    imageStyle: { type: Object, attribute: 'image-style', reflect : true },\r\n\r\n    overlay: { type: Boolean },\r\n    placement: { ...placement },\r\n    align: { ...placement },\r\n\r\n    image: {},\r\n    title: {},\r\n    subtitle: {},\r\n    text: {},\r\n    footer: {},\r\n    header: {},\r\n\r\n    colorText: { attribute: 'color-text' },\r\n    colorBack: { attribute: 'color-back' },\r\n    colorBorder: { attribute: 'color-border' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssSubtitle: { attribute: 'css-subtitle' },\r\n    cssText: { attribute: 'css-text' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssImage: { attribute: 'css-image' },\r\n\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.border = false;\r\n    this.shadow = false;\r\n    this.align = 'start';\r\n    this.placement = 'top';\r\n    this.imageStyle = this.imageStyle || {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const content =  me.isVertical ? me.#renderVertical() : me.#renderHorizontal();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"card ${classMap(me.renderClass())}\">${content}</div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return [me.#imageTop, me.#header, me.#body, me.#footer, me.#imageBottom];\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    const start = PlacementTypes.isBefore(me.placement);\r\n    const startClass = start ? 'col-4' : 'col-8';\r\n    const endClass = start ? 'col-8' : 'col-4';\r\n    const startHtml = start ? me.#images : me.#body;\r\n    const endHtml =  start ? me.#body : me.#images;\r\n    return html`<div class=\"row g-0\">\r\n        <div class=\"${startClass}\">\r\n            ${startHtml}\r\n        </div>\r\n        <div class=\"${endClass}\">\r\n          ${endHtml}\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      border: me.border || me.colorBorder,\r\n      [`text-${me.align}`]: me.align,\r\n      [`text-${me.colorText}`]: me.colorText,\r\n      [`bg-${me.colorBack}`]: me.colorBack,\r\n      [`border-${me.colorBorder}`]: me.colorBorder,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return PlacementTypes.isHorizontal(this.placement);\r\n  }\r\n\r\n  get #body() {\r\n    const me = this;\r\n    return html`<div class=\"${me.overlay ? 'card-img-overlay' : 'card-body'} ${me.cssBody}\">\r\n      <h5 class=\"card-title  ${me.cssTitle}\"><slot name=\"title\">${me.translate(title)}</slot></h5>\r\n      <h6 class=\"card-subtitle  ${me.cssSubtitle}\"><slot name=\"subtitle\">${me.translate(me.subtitle)}</slot></h6>\r\n      <p class=\"card-text ${me.cssText}\"><slot name=\"text\">${me.translate(me.text)}</slot></p>\r\n      <slot name=\"body\"></slot>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  get #header() {\r\n    return this.overlay ? '' : html`<div class=\"card-header  ${this.cssHeader}\"><slot name=\"header\">${this.header}</slot></div>`;\r\n  }\r\n\r\n  get #footer() {\r\n    return this.overlay ? '' : html`<div class=\"card-footer ${this.cssFooter}\"><slot name=\"footer\">${this.footer}</slot></div>`;\r\n  }\r\n\r\n  get #imageSlot() {\r\n    return html`<slot name=\"image\"></slot>`;\r\n  }\r\n\r\n  get #image() {\r\n    const css = this.isHorizontal ? 'img-fluid' : 'card-img';\r\n    return html`<img src=\"${this.image}\" class=\"rounded-${this.placement} ${css} ${this.cssImage}\" style=${styleMap(this.imageStyle)} alt=\"...\">`;\r\n  }\r\n\r\n  get #images() {\r\n    return this.image ? this.#image : this.#imageSlot;\r\n  }\r\n\r\n  get #imageTop() {\r\n    return this.placement === 'top' ? this.#images : '';\r\n  }\r\n\r\n  get #imageBottom() {\r\n    return this.placement === 'bottom' ? this.#images : '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-card');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSCenterElement extends GSElement {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n      class=\"position-absolute top-50 start-50 translate-middle ${classMap(this.renderClass())}\">\r\n    ${this.renderTemplate()}<slot></slot></div>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-center');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenuElement class\r\n * @module components/GSMenuElement\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSMenuElement extends GSElement {\r\n\r\n    static properties = {\r\n        storage: {},\r\n        auto: { type: Boolean, reflect: true },\r\n        opened: { type: Boolean, reflect: true },\r\n        dark: { type: Boolean },\r\n        reverse: { type: Boolean },\r\n        data: { type: Array },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {},\r\n        title: {},\r\n        header: {},\r\n        color: {},\r\n        icon: {},\r\n        url: { default: '#' }\r\n    }\r\n\r\n    #menuRef = createRef();\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.dynamicStyle(me.#styleID);\r\n        me.data = me.#proxify(me);\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        if (changed.has('opened') && !this.opened) {\r\n            this.#closeSubmenus();\r\n        }\r\n    }\r\n\r\n    updated() {\r\n        this.#updatePosition();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<ul \r\n            ${ref(me.#menuRef)}\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            class=\"dropdown-menu ${classMap(me.renderClass())}\"\r\n            data-gs-class=\"${me.#styleID}\"\r\n            data-menu=\"true\"\r\n            @mouseover=\"${me.#onMouseOver}\"\r\n            @mouseleave=\"${me.#onMouseLeave}\"\r\n            @keydown=\"${me.#onKeyDown}\"\r\n            @click=\"${me.#onClick}\">\r\n            ${me.#items(me.data)}\r\n        </ul>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'submenu': me.dataset.submenu,\r\n            'dropdown-menu-dark': me.dark,\r\n            [me.#styleID]: true,\r\n            'show': me.opened,\r\n            'dropend': !me.reverse,\r\n            'dropstart': me.reverse,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    /**\r\n     * Show at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {HTMLElement} caller\r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n\r\n        const me = this;\r\n        let target = caller;\r\n\r\n        if (GSEvents.isMouseOrPointerEvent(x)) {\r\n            const e = x;\r\n            target = e.target;\r\n            y = e.clientY;\r\n            x = e.clientX;\r\n            let offset = GSDOM.offsetParent(me);\r\n            offset = offset ? offset.getBoundingClientRect() : null;\r\n            x = x - (offset?.left || 0);\r\n            y = y - (offset?.top || 0);\r\n        }\r\n\r\n        const cfg = { clientX: x, clientY: y, target: target };\r\n\r\n        requestAnimationFrame(() => {\r\n            const style = {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                left: '0px',\r\n                translate: `${cfg.clientX}px ${cfg.clientY}px`\r\n            };\r\n            const rule = me.dynamicStyle(me.#styleID);\r\n            Object.assign(rule.style, style);\r\n        });\r\n        me.open();\r\n\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    #items(root) {\r\n        const me = this;\r\n        return root.map(el => me.#item(el));\r\n    }\r\n\r\n    #item(el) {\r\n        const me = this;\r\n        const isSub = el.items?.length > 0;\r\n        if (isSub) return me.#renderSubmenu(el);\r\n        if (!(el.header || el.name)) return me.#renderDivider();\r\n        return el.header ? me.#renderHeader(el) : me.#renderMenu(el);\r\n    }\r\n\r\n    #renderHeader(el) {\r\n        return html`<li data-inert=\"true\"><h6 class=\"dropdown-header\">${el.header}</h6></li>`;\r\n    }\r\n\r\n    #renderDivider() {\r\n        return html`<li data-inert=\"true\"><hr class=\"dropdown-divider\"></li>`;\r\n    }\r\n\r\n    #renderSubmenu(el) {\r\n        const me = this;\r\n        return html`<li>\r\n            <a class=\"dropdown-item dropdown-toggle\" data-toggle=\"true\" href=\"#\">\r\n                <div class=\"d-inline-block w-100\">${el.name}</div>\r\n            </a>\r\n            <gs-menu auto \r\n                .data=${el.items} \r\n                ?dark=${me.dark} \r\n                ?reverse=\"${me.reverse}\" \r\n                locale=\"${ifDefined(me.locale)}\" \r\n                data-submenu=\"true\">\r\n            </gs-menu>\r\n        </li>`;\r\n    }\r\n\r\n    #renderMenu(el) {\r\n        return html`<li>\r\n                <gs-button css=\"dropdown-item shadow-none\" \r\n                    ${dataset(el, false)}\r\n                    url=\"${el.url}\"\r\n                    title=\"${el.name}\" \r\n                    locale=\"${ifDefined(this.locale)}\" \r\n                    icon=\"${ifDefined(el.icon)}\" \r\n                    text=\"${ifDefined(el.color)}\">\r\n                </gs-button></li>`;\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSMenuElement.options));\r\n    }\r\n\r\n    #closeSubmenus(menu) {\r\n        GSDOM.queryAll(this.renderRoot, 'gs-menu', false, false)\r\n            .filter(el => el != menu)\r\n            .forEach(el => el.close());\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.key) {\r\n            case 'Escape':\r\n                me.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        submenu?.close();\r\n        if (me.auto) me.close();\r\n    }\r\n\r\n    #onMouseLeave(e) {\r\n        GSEvents.prevent(e);\r\n        if (this.auto) this.close();\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        me.#closeSubmenus(submenu);\r\n        submenu?.open();\r\n    }\r\n\r\n    #toSubmenu(e) {\r\n        const menuItem = e.target.closest('li');\r\n        return menuItem?.querySelector('gs-menu');\r\n    }\r\n\r\n    #updatePosition() {\r\n        const me = this;\r\n        if (!me.opened) return;\r\n        const rule = me.dynamicStyle(me.#styleID);\r\n        if (me.isSubmenu) {\r\n            const opt = { translate: `0px -25px` };\r\n            if (me.reverse) {\r\n                opt.left = 'inherited';\r\n                opt.right = '100%';\r\n            } else {\r\n                opt.right = 'inherited';\r\n                opt.left = '100%';\r\n            }\r\n            Object.assign(rule.style, opt);\r\n        } else {\r\n            rule.style.translate = null;\r\n            const rect = me.#menu.getBoundingClientRect();\r\n            const offset = window.innerWidth - rect.right;\r\n            me.reverse = offset - 5 < 0;\r\n            if (me.reverse) rule.style.translate = `${offset - 2}px`;\r\n        }\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.dataset.submenu;\r\n    }\r\n\r\n    get #menu() {\r\n        return this.#menuRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-menu');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDContextElement class\r\n * @module components/GSDContextElement\r\n */\r\n\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDContextElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        target: {},\r\n        altContext: { type: Boolean },\r\n        disabled: { type: Boolean },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', me.close.bind(me));\r\n        me.#attachTarget();\r\n    }\r\n    \r\n    #attachTarget() {\r\n        const me = this;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    }\r\n\r\n    #match(e) {\r\n        const me = this;\r\n        return e.composedPath().filter(el => el.matches)\r\n            .filter(el => el.matches(me.target));\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        if (e.shiftKey && me.altContext) return;\r\n        const list = me.#match(e);\r\n        if (list.length === 0) return;\r\n        GSEvents.prevent(e);\r\n        me.popup(e);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show submenu at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n        return this.disabled ? false : super.popup(x, y, caller);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-context');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, notEmpty } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\nexport class GSCompareElement extends GSElement {\r\n\r\n  static styles = css`.slider {\r\n         --gs-position : 50%;\r\n          left : var(--gs-position);\r\n          width: 8px;\r\n          height: 100%;\r\n          border-width: 1px;\r\n          cursor: w-resize;\r\n          border-color: darkgray;\r\n          border-style: solid;\r\n          background-color: lightgray;\r\n      }\r\n      .clipper {\r\n        --gs-position : 50%;\r\n        clip-path: inset(0px var(--gs-position) 0px 0px);\r\n      }\r\n    `;\r\n\r\n  static properties = {\r\n    background: { ...color },\r\n    width: { type: Number },\r\n    height: { type: Number },\r\n    before: { hasChanged: notEmpty },\r\n    after: { hasChanged: notEmpty },\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  #elRef = createRef();\r\n  #clipRef = createRef();\r\n  #slideRef = createRef();\r\n\r\n  #mouseController;\r\n  #elPosition;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.width = 0;\r\n    me.height = 0;\r\n    me.dynamicStyle(me.#styleID);\r\n    me.#mouseController = new ElementMoveController(me);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#mouseController.attach(this.#splitter);\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    // style=\"-display:contents;width:${me.width}px !important;height:${me.height}px !important;\"\r\n    return html`<div ${ref(me.#elRef)} \r\n         dir=\"${ifDefined(me.direction)}\"\r\n         @loaded=\"${me.#onLoad}\" \r\n         @dblclick=\"${me.#onDoubleClick}\"\r\n         data-gs-class=\"${me.#styleID}\"\r\n         class=\"${classMap(me.renderClass())}\">\r\n      <div class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden\"><slot name=\"before\">${me.#before}</slot></div>\r\n      <div ${ref(me.#clipRef)} class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden clipper\"><slot name=\"after\">${me.#after}</slot></div>\r\n      <div ${ref(me.#slideRef)} class=\"slider position-absolute top-0><slot name=\"control\"></slot></div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      \"position-relative\": true,\r\n      \"user-select-none\": true,\r\n      \"d-contents\": me.isAuto,\r\n      \"h-100\": me.isAuto,\r\n      \"w-100\": me.isAuto,\r\n      \"overflow-hidden\": true,\r\n      [`bg-${me.background}`]: me.background,\r\n      [`${me.#styleID}`]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Handles resizing based on mouse move event\r\n   * @param {MouseEvent} e \r\n   */\r\n  onStartMove(e) {\r\n    this.#elPosition = this.#splitter.getBoundingClientRect();\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    const me = this;\r\n    const offset = me.#elPosition.left;\r\n    const width = me.#elPosition.width;\r\n    const pos = GSUtil.range(e.clientX - offset, 0, width);\r\n    const pct = (pos / width) * 100;\r\n    me.#update(pct);\r\n  }\r\n\r\n  get isAuto() {\r\n    return this.width == 0 || this.height == 0;\r\n  }\r\n\r\n  get isFixed() {\r\n    return !this.isAuto;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  get #before() {\r\n    return this.before ? html`<img @load=\"${this.#onLoad}\" src=\"${me.before}\"></img>` : '';\r\n  }\r\n\r\n  get #after() {\r\n    return this.after ? html`<img @load=\"${this.#onLoad}\" src=\"${me.after}\"></img>` : '';\r\n  }\r\n\r\n  get #isAuto() {\r\n    return this.width === 0 || this.height === 0;\r\n  }\r\n\r\n  get #splitter() {\r\n    return this.#elRef.value;\r\n  }\r\n\r\n  get #slider() {\r\n    return this.#slideRef.value;\r\n  }\r\n\r\n  get #clip() {\r\n    return this.#clipRef.value;\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const me = this;\r\n    if (me.#isAuto) {\r\n      const el = e.target;\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n    }\r\n  }\r\n\r\n  #onDoubleClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#update();\r\n    me.#mouseController.reset();\r\n  }\r\n\r\n  #update(pct = 50) {\r\n    const me = this;\r\n    me.#clip.style.setProperty('--gs-position', `${100 - pct}%`);\r\n    me.#slider.style.setProperty('--gs-position', `${pct}%`);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-compare');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\n\r\n/**\r\n * Helper component to enable HTML based controller attachment to the parent element.\r\n * It is used to simplify and separate templates from logic.\r\n */\r\nexport class GSControllerElement extends GSElement {\r\n\r\n  static properties = {\r\n    module: {},\r\n    controller: {},\r\n  }\r\n\r\n  #clazz = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  updated(changes) {\r\n    super.updated(changes);\r\n    const me = this;\r\n    if (me.isConnected && me.isValid) {\r\n      me.#initialize();\r\n    }\r\n  }\r\n\r\n  get isValid() {\r\n    return this.parentElement instanceof GSElement;\r\n  }\r\n\r\n  async #initialize() {\r\n\r\n    const me = this;\r\n    const host = me.parentElement;\r\n\r\n    if (me.#clazz) return;\r\n\r\n    let clazz = globalThis[me.controller];\r\n    if (!clazz && me.module) {\r\n      const url = GSLoader.normalizeURL(me.module);\r\n      const module = await import(url);\r\n      clazz = module[me.controller];\r\n    }\r\n\r\n    if (clazz) {\r\n      new clazz(host);\r\n      me.#clazz = clazz;\r\n    }\r\n\r\n  }\r\n\r\n  static {\r\n    this.define('gs-controller');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSCopyrightElement extends GSElement {\r\n\r\n  static properties = {\r\n    year: { reflect: true, type: Number },\r\n    company: { reflect: true },\r\n    url: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    if (!(me.isCompany && me.isYear)) return '';\r\n    const year = new Date().getFullYear();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"${classMap(me.renderClass())}\"><a target=\"_blank\" href=\"${me.url ? me.url : '#'}\"><small>&copy; ${me.company} ${me.year}. - ${year}.</small></a></div>`;\r\n  }\r\n\r\n  get isCompany() {\r\n    return GSUtil.isStringNonEmpty(this.company);\r\n  }\r\n\r\n  get isYear() {\r\n    return GSUtil.isStringNonEmpty(this.year);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-copyright');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSFunction } from '../base/GSFunction.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/verificator.mjs';\r\nimport { GSReadWriteRegistry } from '../data/ReadWriteRegistry.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for easier access to the GSReadWrite/GSTreeReader\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSDataHandler extends GSElement {\r\n\r\n    static properties = {\r\n        storage: { state: true },\r\n        src: { reflect: true },\r\n        action: { reflect: true },\r\n        mode: { reflect: true },\r\n        reader: { reflect: true },\r\n        writer: { reflect: true },\r\n        limit: { type: Number, reflect: true },\r\n        skip: { type: Number, reflect: true },\r\n        filter: { type: Array, reflect: true },\r\n        sort: { type: Array, reflect: true },\r\n        type: {},\r\n        autoload: { type: Boolean },\r\n        autorefresh: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    }\r\n\r\n    #iid = 0;\r\n    #config = null;\r\n    #handler = null;\r\n    #lifoReadRef = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        if (!me.id) throw new Error('Element ID is required attribute!');\r\n        GSItem.validate(me, me.tagName);\r\n        me.autorefresh = true;\r\n        me.autoload = false;\r\n        me.flat = true;\r\n        me.filter = [];\r\n        me.sort = [];\r\n        me.limit = 0;\r\n        me.skip = 0;\r\n        me.type = 'remote';\r\n        me.mode = 'query';\r\n        me.reader = 'GET';\r\n        me.writer = 'POST';\r\n        me.storage = me.id;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#initLIFO();\r\n        me.#config = GSItem.proxify(me, GSData.PROPERTIES);\r\n        me.#handler = GSReadWriteRegistry.newHandler(me.type, me.id, false);\r\n        if (me.#config?.length > 0) me.#handler?.addProcessor(me);\r\n        me.#handler?.enable();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#handler?.disable();\r\n        this.#handler?.removeProcessor(this);\r\n        this.#lifoReadRef = null;\r\n        clearTimeout(this.#iid);\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.dataController?.read();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        const me = this;\r\n        me.#updateHandler();\r\n        if (changed.has('autorefresh')) me.schedule(me.autorefresh);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.formatSort(me.sort);\r\n        me.#handler.filter = me.formatFilter(me.filter);\r\n        if (me.autoload) me.read();\r\n    }\r\n\r\n    get isDebug() {\r\n        return this.dataset.gsDebug;\r\n    }\r\n\r\n    get handler() {\r\n        return this.#handler;\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    set search(val) {\r\n        if (this.#handler) this.#handler.search = val;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    formatFilter(val) {\r\n        val = this.#formated(val);\r\n        return Array.isArray(val) ? val : [];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    formatSort(val) {\r\n        val = this.#formated(val);\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort || [];\r\n    }\r\n\r\n    schedule(time = 0) {\r\n        const me = this;\r\n        time = GSUtil.asNum(time) * 1000;\r\n        clearInterval(me.#iid);\r\n        if (time > 0) me.#iid = setInterval(() => {\r\n            me.read(me);\r\n        }, time);\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data) {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        me.#handler?.write(me, data);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onDataRead(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data Read: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onDataWrite(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data write: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Process data after receive, before notifying \r\n     * @param {*} data \r\n     */\r\n    postRead(data) {\r\n        const me = this;\r\n        if (!Array.isArray(data)) data = [data];\r\n        data.forEach(r => {\r\n            me.#config.forEach(c => {\r\n                let val = r[c.name];\r\n                if (!GSUtil.isNull(val)) {\r\n                    val = GSData.format(c, val);\r\n                    r[c.name] = val;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onDataError(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data error: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #initLIFO() {\r\n        const me = this;\r\n        me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO();\r\n        return me.#lifoRead();\r\n    }\r\n\r\n    #lifoRead() {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        return me.#handler?.read(me);\r\n    }\r\n\r\n    #formated(val) {\r\n        return GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-data-handler');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSDialogElement extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n  static ALIGN = 'end';\r\n  static CANCEL = 'Cancel';\r\n  static CONFIRM = 'Ok';\r\n\r\n  static #STACK = [];\r\n\r\n  static styles = css`dialog{outline:none;}dialog::backdrop{backdrop-filter: blur(4px);}`;\r\n\r\n  static properties = {\r\n\r\n    standard: { refelct: true, type: Boolean },\r\n    opened: { refelct: true, type: Boolean },\r\n    cancelable: { refelct: true, type: Boolean },\r\n    closable: { refelct: true, type: Boolean },\r\n    escapable: { refelct: true, type: Boolean },\r\n    disabled: { refelct: true, type: Boolean },\r\n\r\n    title: { refelct: true },\r\n    message: { refelct: true },\r\n    cancelText: { refelct: true, },\r\n    confirmText: { refelct: true, },\r\n\r\n    buttonAlign: { refelct: true, attribute: 'button-align' },\r\n\r\n    iconCancel: { refelct: true, attribute: 'icon-cancel' },\r\n    iconConfirm: { refelct: true, attribute: 'icon-confirm' },\r\n\r\n    cssCancel: { attribute: 'css-cancel' },\r\n    cssConfirm: { attribute: 'css-confirm' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssContent: { attribute: 'css-content' },\r\n\r\n  }\r\n\r\n  #dialogRef = createRef();\r\n  #btnConfirmRef = createRef();\r\n  #btnCancelRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    const clazz = GSDialogElement;\r\n    me.opened = false;\r\n    me.standard = false;\r\n    me.cancelable = false;\r\n    me.closable = false;\r\n    me.escapable = false;\r\n    me.disabled = false;\r\n    me.shadow = false;\r\n    me.rounded = false;\r\n\r\n    me.css = clazz.CSS;\r\n    me.cssTitle = clazz.TITLE_CSS;\r\n    me.cssHeader = clazz.HEADER_CSS;\r\n    me.buttonAlign = clazz.ALIGN;\r\n    me.cancelText = clazz.CANCEL;\r\n    me.confirmText = clazz.CONFIRM;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialogElement.#updateStack();\r\n  }\r\n\r\n  updated() {\r\n    super.updated();\r\n    const me = this;\r\n    if (me.opened) {\r\n      GSDialogElement.#STACK.push(me);\r\n      if (me.standard) {\r\n        me.#dialog?.open();\r\n      } else {\r\n        me.#dialog?.showModal();\r\n      }\r\n      me.#focusable()?.focus();\r\n    } else {\r\n      GSDialogElement.#STACK.pop();\r\n      me.#dialog?.close();\r\n    }\r\n    me.notify();\r\n  }\r\n\r\n  #renderConfirm() {\r\n    const me = this;\r\n    if (!me.closable) return '';\r\n    return html`<gs-button  ${ref(me.#btnConfirmRef)} \r\n      @click=\"${me.#onConfirm.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconConfirm)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      .disabled=\"${me.disabled}\"  \r\n      css=\"${me.cssConfirm}\" \r\n      color=\"primary\" \r\n      title=\"${me.confirmText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderCancel() {\r\n    const me = this;\r\n    if (!me.cancelable) return '';\r\n    return html`<gs-button ${ref(me.#btnCancelRef)}\r\n      @click=\"${me.#onCancel.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconCancel)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      css=\"${me.cssCancel}\" \r\n      color=\"primary\" \r\n      title=\"${me.cancelText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderFooter() {\r\n    const me = this;\r\n    const isFooter = me.cancelable || me.closable;\r\n    if (!isFooter) return '';\r\n    return html`<div class=\"card-footer d-flex user-select-none justify-content-${me.buttonAlign} ${me.cssFooter}\">\r\n      ${me.#renderCancel()} &nbsp;${me.#renderConfirm()}\r\n      </div>`;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n        <dialog tabindex=\"-1\" ${ref(me.#dialogRef)} \r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @close=\"${me.#onCancel.bind(me)}\"\r\n            @cancel=\"${me.#onCancel.bind(me)}\"\r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            class=\"dialog p-0 border-0 ${classMap(me.renderClass())}\">\r\n            <div class=\"card ${me.cssContent}\">\r\n                <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n                  <div class=\"card-title ${me.cssTitle}\">\r\n                    <slot name=\"title\">${me.translate(me.title)}</slot>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body ${me.cssBody}\">\r\n                  <slot name=\"body\">${me.translate(me.message)}</slot>\r\n                </div>\r\n                ${me.#renderFooter()}\r\n            </div>\r\n            <slot name=\"extra\"></slot>\r\n            <div class=\"toast-container position-fixed\"></slot></div>\r\n        </dialog>`\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.closable = closable;\r\n    me.cancelable = cancelable;\r\n    me.escapable = cancelable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('click-action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    return this.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    return this.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    index = GSUtil.asNum(index, 0);\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); f.values = data;});\r\n    const tab = me.tab;\r\n    if (tab && index > -1) tab.index = index;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  get form() {\r\n    return this.query('form', true);\r\n  }\r\n\r\n  get forms() {\r\n    return this.queryAll('form', true);\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('gs-tab', true);\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.#dialogRef.value;\r\n  }\r\n\r\n  get #btnConfirm() {\r\n    return this.#btnConfirmRef.value;\r\n  }\r\n\r\n  get #btnCancel() {\r\n    return this.#btnCancelRef.value;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  #focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#btnCancel;\r\n    if (me.closable) return me.#btnConfirm;\r\n    return me;\r\n  }\r\n\r\n  #onConfirm(e) {\r\n    this.close();\r\n    this.emit('click-action');\r\n  }\r\n\r\n  #onCancel(e) {\r\n    this.close();\r\n    this.emit('click-action');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) {\r\n        GSEvents.prevent(e);\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  static #updateStack() {\r\n    const stack = GSDialogElement.#STACK;\r\n    stack = stack.filter(v => v.isConnected);\r\n  }\r\n\r\n  static get top() {\r\n    GSDialogElement.#updateStack();\r\n    const stack = GSDialogElement.#STACK;\r\n    if (stack.length === 0) return null;\r\n    return stack[stack.length - 1];\r\n  }\r\n\r\n  static {\r\n    this.define('gs-dialog');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, unsafeHTML, html, ifDefined } from '../lib.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSDrawerElement extends GSElement {\r\n\r\n  static properties = {\r\n    autoclose: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    backdrop: { reflect: true, type: Boolean },\r\n    expanded: { reflect: true, type: Boolean },\r\n    scroll: { reflect: true, type: Boolean },\r\n\r\n    min: { reflect: true, type: Number},\r\n    max: { reflect: true},\r\n    fingers: { reflect: true, type: Number},\r\n    placement: {...placement},\r\n    \r\n    transition: { reflect: true },\r\n    duration: { reflect: true, type: Number },\r\n\r\n    title: { reflect: true},\r\n\r\n    cssTitle: { reflect: true, attribute: \"css-title\"},\r\n    cssHead: { reflect: true, attribute: \"css-head\" },\r\n    cssBody: { reflect: true, attribute: \"css-body\" },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.placement = 'start';\r\n    me.cssTitle = 'fs-5';\r\n    me.transition = 'linear';\r\n    me.duration = 0.2;\r\n    me.min = 0;\r\n    me.max = 'auto';\r\n    me.fingers = 2;\r\n    me.on('mouseleave', me.#onLeave.bind(me));\r\n    me.on('mouseenter', me.#onEnter.bind(me));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`${unsafeHTML(me.#style)}\r\n    <div tabindex=\"-1\" dir=\"${ifDefined(me.direction)}\"\r\n     class=\"offcanvas overflow-hidden anime ${classMap(me.renderClass())}\">\r\n      ${me.#header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        ${me.renderTemplate()}\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>${me.#backdrop}`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': true,\r\n      'anime-open' : me.expanded,\r\n      'anime-close' : !me.expanded,\r\n      [`offcanvas-${me.placement}`]: me.placement,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #style() {\r\n    const me = this;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    return `<style>\r\n    .anime {\r\n      transition-property: ${pos} !important;\r\n      transition-duration: ${me.duration}s  !important;\r\n      transition-timing-function: ${me.transition} !important;\r\n    }\r\n    .anime-open {\r\n        ${pos} : ${me.max}${GSUtil.isNumber(me.max) ? 'px':''} !important;\r\n    }\r\n    .anime-close {\r\n      ${pos} : ${me.min}${GSUtil.isNumber(me.min) ? 'px':''} !important;\r\n    }    \r\n    </style>`;\r\n  }\r\n\r\n  get #backdrop() {\r\n    const me = this;\r\n    if (!me.backdrop) return '';\r\n    return html`<div class=\"offcanvas-backdrop fade ${me.expanded ? 'show' : 'invisible'}\" @click=\"${me.close}\"></div>`;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    return me.closable ? html`<button type=\"button\" class=\"btn-close text-reset\" @click=\"${me.close}\"></button>` : '';\r\n  }\r\n\r\n  get #title() {\r\n    const me = this;\r\n    return me.title ? html`<div class=\"offcanvas-title ${me.cssTitle}\">${me.translate(me.title)}</div>` : '';\r\n  }\r\n\r\n  get #header() {\r\n    const me = this;\r\n    return me.#hasHeader ? html`<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${me.#title}${me.#button}</slot></div>` : '';\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  get #hasHeader() {\r\n    return this.title || this.closable || this.#headSlot;\r\n  }\r\n\r\n  #notify(val) {\r\n    const me = this;\r\n    me.expanded = val == true;\r\n    me.notify();\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  open() {\r\n    this.#notify(true);\r\n  }\r\n\r\n  close() {\r\n    this.#notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.#notify(!this.expanded);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return !this.isVertical;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-drawer');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdownElement class\r\n * @module components/GSDropdownElement\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { cssMap } from '../directives/css-map.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDropdownElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        icon: {},\r\n        text: {...color},\r\n        color: {...color},\r\n        size: {},\r\n        title: {}\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"dropdown\"  dir=\"${ifDefined(me.direction)}\">\r\n                ${me.#renderButton()}\r\n                ${super.renderUI()}\r\n            </div>`;\r\n    }\r\n\r\n    #buttonClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'btn': true,\r\n            [`btn-${me.color}`] : me.color ? true : false,\r\n            'dropdown-toggle': true,\r\n            'shadow-none' : true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    #renderButton() {\r\n        const me = this;\r\n        return html`<gs-link css=\"${cssMap(me.#buttonClass())}\"\r\n            url=\"#\"         \r\n            icon=\"${ifDefined(me.icon)}\"\r\n            text=\"${ifDefined(me.text)}\"\r\n            size=\"${ifDefined(me.size)}\"\r\n            title=\"${ifDefined(me.title)}\"\r\n            @notify=\"${me.open}\">\r\n            </gs-link>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-dropdown');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { css, html, unsafeHTML } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Safe email rendering to protect from spam bots.\r\n */\r\nexport class GSEmailElement extends GSElement {\r\n\r\n  static shadowRootOptions = { mode: 'closed' }\r\n\r\n  static style = css`.e-mail:before {\r\n    content: attr(data-website) \"\\0040\" attr(data-user);\r\n    unicode-bidi: bidi-override;\r\n    direction: rtl;\r\n    }`;\r\n\r\n  static properties = {\r\n    user: { reflect: true },\r\n    domain: { reflect: true },\r\n    dev: { type: Boolean }\r\n  }\r\n\r\n  #user;\r\n  #domain;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  willUpdate(changes) {\r\n    super.willUpdate(changes);\r\n    this.#updateUser();\r\n    this.#updateDomain()\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${unsafeHTML(this.#style)}<a @click=\"${this.#onClick}\" class=\"e-mail\" data-user=\"${this.#user}\" data-website=\"${this.#domain}\"  href=\"mailto://\"></a>`;\r\n  }\r\n\r\n  get #style() {\r\n    return '<style>.e-mail:before { content: attr(data-website) \"\\u0040\" attr(data-user); unicode-bidi: bidi-override; direction: rtl; }</style>';\r\n  }\r\n\r\n  get #url() {\r\n    return `mailto://${GSUtil.reverse(this.dataset.user)}@${GSUtil.reverse(this.dataset.domain)}`;\r\n  }\r\n\r\n  #updateUser() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.user) {\r\n      me.#user = dataset.user || GSUtil.reverse(me.user);\r\n      if (me.dev) dataset.user = me.#user;\r\n      me.user = '';\r\n    }\r\n  }\r\n\r\n  #updateDomain() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.domain) {\r\n      me.#domain = dataset.domain || GSUtil.reverse(me.domain);\r\n      if (me.dev) dataset.domain = me.#domain;\r\n      me.domain = '';\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    window.location.href = me.#url;\r\n    //window.open(me.#url, '_blank');  \r\n  }\r\n\r\n  static {\r\n    this.define('gs-email');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSFormElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    disabled: { type: Boolean },\r\n    data: { type: Object },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = [];\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<form ${ref(me.#formRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      @change=\"${me.#onChange}\"\r\n      @submit=\"${me.submit}\"\r\n      @reset=\"${me.reset}\">\r\n      <slot></slot>\r\n    </form>`;\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    if (changed.has('disabled')) {\r\n      if (me.disabled) {\r\n        me.disable();\r\n      } else {\r\n        me.enable();\r\n      }\r\n    }\r\n    if (changed.has('data')) {\r\n      me.asJSON = me.data;\r\n    }\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  get isValid() {\r\n    return this.queryAll('input,select,textarea', true)\r\n      .filter(el => GSDOM.isVisible(el))\r\n      .map(el => el.checkValidity())\r\n      .filter(v => v === false).length === 0;\r\n  }\r\n\r\n  /**\r\n  * Overide native to pickup all form elements, including ones in shadow dom\r\n  */\r\n  get elements() {\r\n    return this.queryAll('input,select,output,textarea', true);\r\n  }\r\n\r\n  get asJSON() {\r\n    return GSDOM.toObject(this);\r\n  }\r\n\r\n  set asJSON(data) {\r\n    const me = this;\r\n    GSDOM.fromObject(me, data);\r\n    return me.validate();\r\n  }\r\n\r\n  disable() {\r\n    GSDOM.disableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  enable() {\r\n    GSDOM.enableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.form.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.form.reportValidity();\r\n  }\r\n\r\n  reset(e) {\r\n    const me = this;\r\n    if (e?.target === me.form) {\r\n      me.dataController?.read(me.asJSON);\r\n    } else {\r\n      me.form.reset();\r\n    }\r\n  }\r\n\r\n  submit(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    if (me.validate()) me.dataController?.write(me.asJSON);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataWrite(data) {\r\n\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    const isValid = me.checkValidity() && me.isValid;\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if (me.isBindable) me.handle(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { inputType, numGT0, numGE0 } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSFormGroupElement extends GSElement {\r\n\r\n  static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2';\r\n  static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n  static CSS_ICON = 'text-primary me-2 fs-5';\r\n  static ICON = 'info-circle-fill';\r\n\r\n  static properties = {\r\n    icon: {},\r\n    layout: {},\r\n    placement: {},\r\n\r\n    description: {},\r\n    label: {},\r\n    placeholder: {},\r\n    pattern: {},\r\n    mask: {},\r\n\r\n    name: {},\r\n    type: { ...inputType },\r\n    list: {},\r\n    accept: {},\r\n\r\n    lang : {},\r\n    step: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    min: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    max: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    minLength: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    maxLength: { type: Number, reflect: true, hasChanged: numGT0 },\r\n\r\n    reverse: { type: Boolean },\r\n\r\n    autoid: { type: Boolean },\r\n    autocopy: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    autocapitalize: { type: Boolean, reflect: true },\r\n    autocomplete: { type: Boolean, reflect: true },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    checked: { type: Boolean, reflect: true },\r\n    multiple: { type: Boolean, reflect: true },\r\n    reveal: { type: Boolean, reflect: true },\r\n    readonly: { type: Boolean, reflect: true },\r\n    required: { type: Boolean, reflect: true },\r\n\r\n    cellField: { attribute: 'cell-field' },\r\n    cellLabel: { attribute: 'cell-label' },\r\n    cssLabel: { attribute: 'css-label' },\r\n    cssField: { attribute: 'css-field' },\r\n\r\n  }\r\n\r\n  #inputRef = createRef();\r\n  #ouptutRef = createRef();\r\n  #patterns = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.#validateAllowed();\r\n    this.type = 'text';\r\n    this.icon = GSFormGroupElement.ICON;\r\n    this.placement = 'top';\r\n    this.layout = 'horizontal';\r\n    this.cssLabel = GSFormGroupElement.CSS_LABEL;\r\n    this.cellLabel = GSFormGroupElement.CSS_LABEL_CELL;\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#patterns = GSItem.collect(me)\r\n      .filter(el => el.dataset.pattern)\r\n      .map(el => new RegExp(el.dataset.pattern));\r\n    super.connectedCallback();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#onRange();\r\n    if (me.templateRef && !me.field)  {\r\n      const field = GSDOM.formElements(me.renderRoot).pop();\r\n      me.#inputRef.value = field;\r\n      if (field) {\r\n        field.name = this.name;\r\n        me.attachEvent(field, 'change', me.#onChange.bind(me));\r\n      } \r\n    }\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    switch (me.layout) {\r\n      case 'floating': return me.#renderFloating();\r\n      case 'vertical': return me.#renderVertical();\r\n      default: return me.#renderHorizontal();\r\n    }\r\n  }\r\n\r\n  #renderFloating() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n       <div class=\"form-floating ${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n          ${me.#renderLabel()}\r\n       </div>\r\n       ${me.#renderInfo()}\r\n    </div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n      <div class=\"col-12 text-md-start ${me.cellLabel}\">\r\n          ${me.#renderLabel()}\r\n      </div>\r\n       <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n       </div>\r\n       ${me.#renderInfo()}   \r\n    </div>      \r\n    `;\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row form-group ${classMap(me.renderClass())}\">    \r\n       <slot name=\"header\"></slot>\r\n       ${me.#renderLabelWrap()}\r\n       ${me.#renderField()}\r\n       ${me.#renderInfo()}\r\n       <slot name=\"footer\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderLabel() {\r\n    const me = this;\r\n    return html`<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.translate(me.label)}</label>`;\r\n  }\r\n\r\n  #renderLabelWrap() {\r\n    const me = this;\r\n    return html`<div class=\" text-md-end ${me.cellLabel}\">${me.#renderLabel()}</div>`;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.#isIcon ? html`<gs-icon size=\"5\" css=\"${GSFormGroupElement.CSS_ICON}}\" name=\"${me.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderTooltip() {\r\n    const me = this;\r\n    const tgt = me.#isIcon ? '@parent' : `[name='${me.name}']`;\r\n    return me.description ? html`<gs-tooltip local locale=\"${ifDefined(me.locale)}\" placement=\"${me.placement}\" title=\"${me.description}\" target=${ifDefined(tgt)}></gs-tooltip>` : '';\r\n  }\r\n\r\n  #renderInfo() {\r\n    const me = this;\r\n    const tooltip = me.#renderTooltip();\r\n    if (tooltip && me.#isIcon) return html`\r\n    <div class=\"col-auto\">\r\n       ${tooltip}\r\n       ${me.#renderIcon()}\r\n    </div>`;\r\n    return tooltip;\r\n  }\r\n\r\n  #renderField() {\r\n    const me = this;\r\n    return html`\r\n    <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n       <slot name=\"body\">${me.#renderInput()}${me.#renderOutput()}</slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderOutput() {\r\n    const me = this;\r\n    if (!me.isRange) return \"\";\r\n    return html`<span ${ref(me.#ouptutRef)} class=\"position-absolute px-1\">${me.value}</span>`;\r\n  }\r\n\r\n  #renderInput() {\r\n\r\n    const me = this;\r\n\r\n    const tpl = me.query('template') || me.template;\r\n    if (tpl) return me.renderTemplate();\r\n\r\n    const idattr = me.autoid ? me.name : undefined;\r\n    const val = me.isFieldset ? me.value.split(',') : me.value;\r\n\r\n    if (Array.isArray(val)) {\r\n      const wrap = me.dataset.radioLayout === 'vertical';\r\n      return val.map((it, i) => { return { v: it, id: `${me.name}_${i}` } })\r\n        .map((o, i) => me.#fieldSet(me.name + i, o.v, me.#inputHTML(o.id, me.name, o.v), wrap));\r\n    }\r\n\r\n    return me.#inputHTML(idattr, me.name, me.value);\r\n  }\r\n\r\n  #fieldSet(id, val, fld, vertical = false) {\r\n    const me = this;\r\n    return vertical ?\r\n      html`<div class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></div>`\r\n      :\r\n      html`<span class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></span>`;\r\n  }\r\n\r\n  #inputHTML(id, name, value) {\r\n    const me = this;\r\n    const type = me.isSwitch ? 'checkbox' : me.type;\r\n    return html`<input is=\"gs-ext-input\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n        \r\n            name=\"${name}\" \r\n            value=\"${value}\"\r\n            type=\"${type}\" \r\n    \r\n            style=\"${me.reverse && me.isRange ? 'transform: rotateY(180deg);' : ''}\"\r\n            class=\"${me.#cssField} ${me.cssField}\" \r\n\r\n            placeholder=\"${ifDefined(me.translate(me.placeholder))}\"\r\n            description=\"${ifDefined(me.translate(me.description))}\"\r\n\r\n            mask=\"${ifDefined(me.mask)}\"\r\n            pattern=\"${ifDefined(me.pattern)}\"\r\n            list=\"${ifDefined(me.list)}\"\r\n            accept=\"${ifDefined(me.accept)}\"\r\n             \r\n            step=\"${ifDefined(me.step)}\"\r\n            min=\"${ifDefined(me.min)}\"\r\n            max=\"${ifDefined(me.max)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n            \r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?autocomplete=\"${me.autocomplete}\"\r\n            ?multiple=\"${me.multiple}\"\r\n            ?checked=\"${me.checked}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"\r\n            ?reveal=\"${me.reveal}\"\r\n            >`;\r\n  }\r\n\r\n  get #cssField() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-input ms-0';\r\n    if (me.isRange) return 'form-range';\r\n    return 'form-control';\r\n  }\r\n\r\n  get #cssLabel() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-label';\r\n    if (me.isFloating) return 'ms-2';\r\n    return me.isVertical ? 'form-label' : '';\r\n  }\r\n\r\n  get #cssCheck() {\r\n    const me = this;\r\n    if (me.isCheckable) {\r\n      //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      if (me.isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n      return me.isFieldset ? '' : 'form-check';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get #cellField() {\r\n    const me = this;\r\n    const val = (me.isHorizontal) ? '6' : '11';\r\n    return me.cellField || `col-md-${val} col-sm-${val} col-xs-11`;\r\n  }\r\n\r\n  get #isIcon() {\r\n    return GSUtil.isStringNonEmpty(this.icon);\r\n  }\r\n\r\n  #onRange(e) {\r\n    const me = this;\r\n    if (me.isRange) {\r\n      const el = me.#ouptutRef.value;\r\n      if (el) el.innerHTML = me.field?.value || '';\r\n      me.field.title = me.field.value;\r\n    }\r\n    me.emit('input', e);\r\n  }\r\n\r\n  #onChange(e) {\r\n    this.emit('change', e, true);\r\n  }\r\n\r\n  async #onBlur(e) {\r\n\r\n    const me = this;\r\n    const el = me.field;\r\n\r\n    if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n    let isValid = false;\r\n    for (const r of me.#patterns) {\r\n      isValid = r.test(el.value);\r\n      if (isValid) break;\r\n    }\r\n\r\n    if (!isValid) {\r\n      el.setCustomValidity('Invalid input');\r\n      el.reportValidity();\r\n      el.focus();\r\n      await GSUtil.timeout(2000);\r\n      el.setCustomValidity('');\r\n    }\r\n\r\n    me.emit('change', e);\r\n  }\r\n\r\n  #validateAllowed() {\r\n    const me = this;\r\n    const slots = ['header', 'body', 'footer'];\r\n    let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n    if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n    list = Array.from(me.children).filter(el => !el.slot);\r\n    const tagList = ['TEMPLATE', 'GS-ITEM'];\r\n    const allowed = GSDOM.isAllowed(list, tagList);\r\n    if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    const isValid = me.checkValidity();\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.field?.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.field?.reportValidity();\r\n  }\r\n\r\n  get value() {\r\n    return this.field?.value;\r\n  }\r\n\r\n  set value(val) {\r\n    GSDOM.fromObject2Element(this.field, { [this.name]: val });\r\n    this.validate();\r\n  }\r\n\r\n  get isFloating() {\r\n    return this.layout === 'floating';\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.layout === 'horizontal';\r\n  }\r\n\r\n  get isVertical() {\r\n    return this.layout === 'vertical';\r\n  }\r\n\r\n  get isFieldset() {\r\n    const me = this;\r\n    return me.type === 'radio' && me.value?.includes(',');\r\n  }\r\n\r\n  get isCheckable() {\r\n    const me = this;\r\n    return me.isCheck || me.isRadio || me.isSwitch;\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.field.checked;\r\n  }\r\n\r\n  get isCheck() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get isRadio() {\r\n    return this.type === 'radio';\r\n  }\r\n\r\n  get isSwitch() {\r\n    return this.type === 'switch';\r\n  }\r\n\r\n  get isNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  get isRange() {\r\n    return this.type === 'range';\r\n  }\r\n\r\n  get isText() {\r\n    return this.type === 'text';\r\n  }\r\n\r\n  get isPassword() {\r\n    return this.type === 'passsword';\r\n  }\r\n\r\n  get isEmail() {\r\n    return this.type === 'email';\r\n  }\r\n\r\n  get isURL() {\r\n    return this.type === 'url';\r\n  }\r\n\r\n  get isFile() {\r\n    return this.type === 'file';\r\n  }\r\n\r\n  get field() {\r\n    return this.#inputRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref, repeat } from '../lib.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSFormGroupElement } from './FormGroup.mjs';\r\n\r\n/**\r\n * Component is responsible for auto-building gs-form and gs-form-group elements\r\n * from either JSON data or GS-ITEM elements.\r\n */\r\nexport class GSFormPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    formStorage: { attribute: 'form-storage' },\r\n    disabled: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.#proxify;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<gs-form ${ref(me.#formRef)}\r\n      ?disabled=${me.disabled} \r\n      storage=\"${ifDefined(me.formStorage)}\" \r\n      .locale=\"${me.locale}\"\r\n      .rtl=\"${me.rtl}\"\r\n      .css=\"${me.css}\"\r\n      .theme=\"${me.theme}\"\r\n      .margin=\"${me.margin}\"\r\n      .padding=\"${me.padding}\"\r\n      .border=\"${me.border}\"\r\n      .shadow=\"${me.shadow}\"\r\n      .os=\"${me.os}\"\r\n      .browser=\"${me.browser}\"\r\n      .environment=\"${me.environment}\"\r\n      .orientation=\"${me.orientation}\"\r\n      .protocol=\"${me.protocol}\">\r\n      <slot>\r\n        ${repeat(me.data, (r) => html`<gs-form-group .data=${r} locale=\"${ifDefined(me.locale)}\" ></gs-form-group>`)}\r\n      </slot>\r\n    </form>`;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  get #proxify() {\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, GSFormGroupElement.properties));\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGroupElement class\r\n * @module components/GSGroupElement\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { ElementNavigationController } from '../controllers/ElementNavigationController.mjs';\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\n\r\n/**\r\n * Renderer for grouped elements such as Buttons, Navs, Tabs and lists.\r\n * Components handles grouped elements navigation, selection and focus.\r\n * \r\n * @class\r\n * @extends { GSElement }\r\n */\r\nexport class GSGroupElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    circular: { type: Boolean },\r\n    multiple: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #elRef = createRef();\r\n  #controller;\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.initData();\r\n    this.#controller = new ElementNavigationController(this);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#controller.attach(this.#elRef.value);\r\n    super.firstUpdated(changed);\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      ${me.renderWrappedUI()}\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedUI(name) {\r\n    const me = this;\r\n    return html`<div \r\n      class=\"${classMap(me.renderWrappedClass())}\">\r\n      <slot name=\"${ifDefined(name)}\">${me.renderItems()}</slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    return {};\r\n  }\r\n\r\n  renderItems() {\r\n    return '';\r\n  }\r\n\r\n  initData() {\r\n    return undefined;\r\n  }\r\n\r\n  previous() {\r\n    this.#controller.previous();\r\n  }\r\n\r\n  next() {\r\n    this.#controller.next();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    this.#controller.reset();\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  isNavigable(el) {\r\n    return true;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#controller.focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#controller.selected;\r\n  }\r\n\r\n  settings(el) {\r\n    const cfg = el instanceof GSElement ? el.definitions : GSElement.allProperties(el);\r\n    const items = GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n    const active = items.filter(el => el.active);\r\n    active.forEach((el, idx) => el.active = idx === 0);\r\n    return items;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-group');\r\n  }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGT0 } from '../properties/index.mjs';\r\nimport { color } from '../properties/color.mjs';\r\n\r\nexport class GSIconElement extends GSElement {\r\n\r\n  static styles = css`\r\n    :host {\r\n      --gs-icon-super-color : cornflowerblue;\r\n      --gs-icon-content : '';\r\n    }\r\n    i::after {\r\n      top: -8px;\r\n      font-size: 0.7em;\r\n      position: relative;\r\n      content: var(--gs-icon-content);\r\n      content: attr(data-super);\r\n      color: var(--gs-icon-super-color);\r\n    }`;\r\n\r\n  static properties = {\r\n    name: { reflect: true, hasChanged: notEmpty },\r\n    size: { reflect: true, type: Number, hasChanged: numGT0 },\r\n    color: { reflect: true, ...color },\r\n    superColor: { attribute : 'super-color'},\r\n    super: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    //this.flat = true;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const superColor = me.superColor ? `--gs-icon-super-color:${me.superColor};` : '';\r\n    return html`<i class=\"bi ${classMap(me.renderClass())}\" data-super=\"${ifDefined(me.super)}\" style=\"${ifDefined(superColor)}\"></i>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      [`text-${me.color}`]: me.color,\r\n      [`bi-${me.name}`]: me.name,\r\n      'fs': me.size > 0,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-icon');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/index.mjs';\r\n\r\nexport class GSIndentElement extends GSElement {\r\n\r\n  static styles = css`.indent {\r\n      --gs-indent : 10px;\r\n      margin-left: var(--gs-indent);\r\n      margin-right: var(--gs-indent);\r\n    }`;\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    size: { type: Number, hasChanged: numGT0 },\r\n    multiplier: { type: Number, hasChanged: numGT0 }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.size = 1;\r\n    me.multiplier = 10;\r\n  }\r\n\r\n  renderUI() {\r\n    const size = this.size * this.multiplier;\r\n    return html`<span class=\"indent\" style=\"--gs-indent: ${size}px;\"></span>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-indent');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nconst numdef = { reflect: true, type: Number, hasChanged: numGE0 };\r\n\r\nexport class GSImageElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { hasChanged: notEmpty },\r\n    width: numdef,\r\n    height: numdef,\r\n    opacity: numdef,\r\n    invert: numdef,\r\n    grayscale: numdef,\r\n    brightness: numdef,\r\n    blur: numdef,\r\n    contrast: numdef,\r\n    saturate: numdef,\r\n    hue: numdef,\r\n    sepia: numdef,\r\n\r\n    alt: {},\r\n    loading: {}\r\n\r\n  }\r\n\r\n  #imageRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    this.#update();\r\n    return this.src;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<img ${ref(me.#imageRef)} \r\n            @load=\"${me.#onLoad}\"\r\n            src=\"${me.src}\" \r\n            alt=\"${me.alt}\" \r\n            loading=\"${ifDefined(me.loading)}\" \r\n            class=\"${me.#styleID}\" \r\n            data-gs-class=\"${me.#styleID}\">\r\n          </img>`;\r\n  }\r\n\r\n  get complete() {\r\n    return this.#imageRef.value?.complete || false;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  #renderStyle() {\r\n    const me = this;\r\n    const filter = me.#buildFilter();\r\n    const css = {\r\n      width: me.width > 0 ? me.width : undefined,\r\n      height: me.height > 0 ? me.height : undefined,\r\n      filter: filter.length > 0 ? filter.join(' ') : ''\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #buildFilter() {\r\n    const me = this;\r\n    const o = [];\r\n\r\n    if (me.blur > 0) o.push(`blur(${me.blur}px)`);\r\n    if (me.invert > 0) o.push(`invert(${me.invert})`);\r\n    if (me.opacity > 0) o.push(`opacity(${me.opacity})`);\r\n    if (me.contrast > 0) o.push(`contrast(${me.contrast})`);\r\n    if (me.grayscale > 0) o.push(`grayscale(${me.grayscale})`);\r\n    if (me.brightness > 0) o.push(`brightness(${me.brightness})`);\r\n\r\n    if (me.hue > 0) o.push(`hue-rotate(${me.hue}deg)`);\r\n    if (me.sepia > 0) o.push(`sepia(${me.sepia}%)`);\r\n    if (me.saturate > 0) o.push(`saturate(${me.saturate}%)`);\r\n\r\n    return o;\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.filter = me.#buildFilter().join(' ').trim();\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const el = e.target;\r\n    const me = this;\r\n    if (el) {\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n      me.emit('loaded', { width: el.width, height: el.height, element: el }, true);\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-image');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayoutElement\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, styleMap, templateContent } from '../lib.mjs';\r\nimport { orientation, OrientationTypes } from '../properties/orientation.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSLayoutElement extends GSElement {\r\n\r\n    static properties = {\r\n        type: { ...orientation }\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        type: {},\r\n        min: { type: Number },\r\n        max: { type: Number },\r\n        resizable: { type: Boolean },\r\n        autofit: { type: Boolean },\r\n        vPos: { attribute: 'h-pos' },\r\n        hPos: { attribute: 'v-pos' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.autofit = true;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if ( this.autofit && GSDOM.root(this) === document.body) document.body.classList.add('vh-100');\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const list = me.#items(me).map((el, idx, els) => me.#build(el, idx, els));\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"d-flex flex-fill w-100 h-100 ${classMap(me.renderClass())}\">${list}</div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const horizontal = OrientationTypes.isHorizontal(me.type);\r\n        return {\r\n            ...super.renderClass(),\r\n            'flex-column': horizontal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #items(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSLayoutElement.options));\r\n    }\r\n\r\n    #build(el, idx, els) {\r\n\r\n        const me = this;\r\n        const type = el.self.parentElement.type || 'vertical';\r\n\r\n        const list = me.#items(el.self).map((it, idx, items) => me.#build(it, idx, items));\r\n        \r\n        const min = el.min;\r\n        const max = el.max;\r\n        const template = el.template;\r\n        const tplEl = me.#elementTemplate(el);\r\n\r\n        const tc = `#${tplEl?.id}` !== template;\r\n\r\n        const dir = el.type || type || 'vertical';\r\n        const horizontal = OrientationTypes.isHorizontal(dir);\r\n        \r\n        const col = list.length > 0 && horizontal ? 'flex-column' : '';\r\n\r\n        const css = me.#panelCSS(el, col);\r\n        const style = me.#panelStyle(el, horizontal);\r\n\r\n        const slot = el.name ? html`<slot name=\"${el.name}\"></slot>` : '';\r\n        const src = html`<div class=\"d-flex ${classMap(css)}\" style=\"${styleMap(style)}\">\r\n            ${list}\r\n            ${templateContent(tplEl)}\r\n            ${template && tc ? html`<gs-template src=\"${template}\"></gs-template>` : ''}\r\n            ${slot}\r\n            </div>`;\r\n\r\n        if (!el.resizable) return src;\r\n\r\n        const resize = (idx === els.length - 1) ? 'end' : 'start';\r\n        const splitter = me.#splitter(min, max, type, resize);\r\n\r\n        if (idx === els.length - 1) return [splitter , src];\r\n        return [src, splitter];\r\n    }\r\n    \r\n    #elementTemplate(el) {\r\n        const tplEl = el.self.firstElementChild;\r\n        return tplEl instanceof HTMLTemplateElement ? tplEl : undefined;\r\n    }\r\n\r\n    #panelCSS(el, col) {\r\n\r\n        const resizable = el.min > 0 || el.max > 0 || el.resizable;\r\n        const grow = resizable ? '' : 'flex-grow-1';\r\n\r\n        let vpos = el.vPos;\r\n        let hpos = el.hPos;\r\n\r\n        hpos = hpos ? `align-items-${hpos}` : '';\r\n        vpos = vpos ? `justify-content-${vpos}` : '';\r\n\r\n        const css = this.mapCSS(el.css, {\r\n            [col] : col,\r\n            [grow] : grow,\r\n            [hpos] : hpos,\r\n            [vpos] : vpos\r\n        });\r\n    \r\n        return css;        \r\n    }\r\n\r\n    #panelStyle(el, horizontal) {\r\n        const min = el.min;\r\n        const max = el.max;\r\n        const style = {};\r\n        if (horizontal) {\r\n            style['min-height'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-height'] = max > 0 ? `${max}px` : undefined;\r\n        } else {\r\n            style['min-width'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-width'] = max > 0 ? `${max}px` : undefined;\r\n        }\r\n        return style;        \r\n    }\r\n\r\n    #splitter(min, max, dir, resize) {\r\n        return html`<gs-splitter split=\"${dir}\" resize=\"${resize}\" min=\"${min}\" max=\"${max}\"></gs-splitter>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-layout');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSLinklement extends GSElement {\r\n\r\n  static properties = {\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    size: { type: Number },\r\n    text: { ...color },\r\n    color: { ...color },\r\n    url: {},\r\n    ping: {},\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    target: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.url = '#';\r\n    // this.text = 'primary'; // do not set as default -> gs-dropdown\r\n    // this.target = '_blank'; // not used \r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n      <a ${ref(me.#refEl)}  \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        title=\"${ifDefined(me.translate(me.tooltip))}\" \r\n        href=\"${ifDefined(me.url)}\" \r\n        ping=\"${ifDefined(me.ping)}\" \r\n        target=\"${ifDefined(me.target)}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        ?disabled=${me.disabled} \r\n        @click=\"${me.#onClick}\">\r\n        ${me.#first} ${me.#second}\r\n        </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,      \r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [`text-${me.text}`]: me.text,\r\n      [`bg-${me.color}`]: me.color\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.notify();\r\n    if (me.url === '#' || GSUtil.isStringEmpty(me.url)) {\r\n      GSEvents.prevent(e);\r\n      this.handle(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#icon; };\r\n\r\n  get #second() { return this.rtl ? this.#icon : this.#title; };\r\n\r\n  get #icon() { return this.icon ? html`<gs-icon name=\"${this.icon}\" size=\"${this.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  /**\r\n   * Generate clickable link\r\n   * @param {*} options \r\n   * @param {*} css \r\n   * @param {*} before \r\n   * @param {*} after \r\n   * @returns \r\n   */\r\n  static generate(options, css, before, after) {\r\n    const opt = options;\r\n    return html`<a class=\"${classMap(css)}\"\r\n        tabindex=\"0\"    \r\n        ${dataset(opt, true)}\r\n        part=\"${ifDefined(opt.part)}\"\r\n        tooltip=\"${ifDefined(opt.tooltip)}\"\r\n        href=\"${ifDefined(opt.url)}\">        \r\n        ${before || ''}\r\n        <slot>${opt.title}</slot> \r\n        ${after || ''}\r\n    </a>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-link');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\n\r\nexport class GSListElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    selectable: { reflect: true, type: Boolean },\r\n    cssItem: { attribute: 'css-item' },\r\n    data: { type: Array },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = false;\r\n    this.multiple = false;\r\n    this.data = this.settings;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-list-item');\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group': true,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    return html`<slot>${this.renderItems()}</slot>`;\r\n  }\r\n\r\n  reset() {\r\n    this.items.forEach(el => el.reset());\r\n    this.notify();\r\n  }\r\n\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-list-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .selectable=\"${o.selectable === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-list-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-LIST-ITEM';\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-list-item');\r\n  }\r\n\r\n\r\n\r\n  static {\r\n    this.define('gs-list');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSListItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    autofocus: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    selectable: { type: Boolean, reflect: true },\r\n    generated: { state: true, type: Boolean }\r\n  }\r\n\r\n  #initial;\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.bind();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.#initial = this.active;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-LIST';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#activeCSS, {});\r\n    return html`<a  tabindex=\"0\" ${ref(me.#refEl)}\r\n       href=\"${ifDefined(me.url)}\" \r\n       target=\"${ifDefined(me.target)}\" \r\n       class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()} \r\n        ${me.#renderSecond()}\r\n        <slot>${me.renderTemplate()}</slot>\r\n      </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      [me.#itemCSS] : true,\r\n      'active': me.active\r\n    }\r\n    return me.active ? me.mapCSS(me.#activeCSS, css) : css;\r\n  }\r\n\r\n  #renderIcon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.rtl ? this.translate(this.title) : this.#renderIcon();\r\n  }\r\n\r\n  #renderSecond() {\r\n    return this.rtl ? this.#renderIcon() : this.translate(this.title);\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || this.#initial || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get owner() {\r\n    return (this.hasAttribute('generated') ? GSDOM.component(this) : this.parentElement);\r\n  }\r\n  \r\n  get #activeCSS() {\r\n    return this.owner.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #itemCSS() {\r\n    return this.owner.dataset?.cssItem || '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { NavTypes, PlacementTypes } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSNavItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean },\r\n    active: { type: Boolean, reflect: true },\r\n    generated: { state: true, type : Boolean }\r\n  }\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-NAV';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div class=\"nav-item ${classMap(me.renderClass())}\">${me.#button}</div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    return this.mapCSS(this.#itemsCSS, super.renderClass());\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get vertical() {\r\n    return this.parentElement.vertical || false;\r\n  }\r\n\r\n  get placement() {\r\n    return this.parentElement.placement;\r\n  }\r\n\r\n  get owner() {\r\n    return (this.hasAttribute('generated') ? GSDOM.component(this) : this.parentElement);\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #title() {\r\n    return html`<slot>${this.translate(this.title)}</slot>`;\r\n  }\r\n\r\n  get #icon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  get #first() {\r\n    return this.rtl ? this.#title : this.#icon;\r\n  }\r\n\r\n  get #second() {\r\n    return this.rtl ? this.#icon : this.#title;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#buttonCSS, {});\r\n    if (me.active) obj = me.mapCSS(me.#buildCSS + ' ' + me.#activeCSS, obj);\r\n    return html`<a tabindex=\"0\" type=\"button\" role=\"nav\" \r\n     ${ref(me.#refEl)}\r\n     class=\"nav-link ${classMap(obj)}\"\r\n     href=\"${ifDefined(me.url)}\" \r\n     target=\"${ifDefined(me.target)}\">\r\n        ${me.#first} \r\n        ${me.#second}\r\n      </a>`;\r\n  }\r\n\r\n  get #itemsCSS() {\r\n    return this.owner.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #buttonCSS() {\r\n    return this.owner.dataset?.cssButton || '';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.owner.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #navType() {\r\n    return NavTypes.indexOf(this.owner.type);\r\n  }\r\n\r\n  // fiix for shadowed DOM, parent class=\"nav nav-pills..\" \r\n  // do not cross shadow dom, so item elements does not see CSS\r\n  // we have to simulate\r\n  get #buildCSS() {\r\n    const isVertical = this.vertical;\r\n    const isBefore = PlacementTypes.isBefore(this.placement);\r\n    switch (this.#navType) {\r\n      // pills\r\n      case 1: return 'rounded text-bg-primary';\r\n      // tabs\r\n      case 2:\r\n        if (isVertical) {\r\n          if (isBefore) {\r\n            return 'shadow-none border border-end-0';\r\n          } else {\r\n            return 'shadow-none border border-start-0';\r\n          }\r\n        }\r\n        return 'shadow-none border border-bottom-0';\r\n      // underline\r\n      case 3: return 'shadow-none border-bottom border-3 fw-medium';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { GSNavItemElement } from './NavItem.mjs';\r\nimport { PlacementTypes, nav, placement } from '../properties/index.mjs';\r\n\r\nexport class GSNavElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    type: nav,\r\n    placement: placement,\r\n    vertical: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = true;\r\n    this.multiple = false;\r\n    this.type = 'pills';\r\n    this.placement = 'start';\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSNavItemElement);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-nav-item');\r\n  }\r\n  \r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const isBefore = PlacementTypes.isBefore(me.placement);\r\n    const isTab = me.type === 'tabs';\r\n    const css = {\r\n      'nav': true,\r\n      [`nav-${me.type}`]: me.type,\r\n      'flex-column': me.vertical,\r\n      'border-bottom-0': me.vertical,\r\n      'border-end': isTab && isBefore && me.vertical,\r\n      'border-start': isTab && !isBefore && me.vertical,\r\n      [`justify-content-${me.placement}`]: !me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Render items based on data proeprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-nav-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-nav-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-NAV-ITEM';\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  onFocused(el) {\r\n    el?.click();\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { svg, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSOverlayElement extends GSElement {\r\n\r\n    static properties = {\r\n        color: {},\r\n        target: {},\r\n        autoremove: { type: Boolean },\r\n        opened: { type: Boolean },\r\n        opacity: { type: Number },\r\n        padding: { type: Number },\r\n        radius: { type: Number },\r\n    }\r\n\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        this.color = 'rgb(0,0,0)';\r\n        this.opacity = 0.7;\r\n        this.padding = 1;\r\n        this.radius = 6;\r\n        this.dynamicStyle(this.#styleID);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', () => me.requestUpdate());\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        if (!me.opened) return '';\r\n        const path = me.#path;\r\n        return path ? html`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlspce=\"preserve\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\" preserveAspectRatio=\"xMinYMin slice\"\r\n            viewvbox=\"0 0 ${window.innerWidth} ${window.innerHeight}\"\r\n            class=\"gs-overlay gs-overlay-animated ${me.#styleID}\"\r\n            @click=\"${me.reset.bind(me)}\">\r\n            ${path}\r\n        </svg>` : '';\r\n    }\r\n\r\n    async firstUpdated(changed) {\r\n        const me = this;\r\n        const opt = {\r\n            fillRule: \"evenodd\",\r\n            clipRule: \"evenodd\",\r\n            strokeLinejoin: \"round\",\r\n            strokeMiterlimit: \"2\",\r\n            zIndex: \"10000\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    get #path() {\r\n        const me = this;\r\n        const el = GSDOM.query(me.target);\r\n        if (!me.target) return '';\r\n        const pathStr = me.#createSVGPathString(el);\r\n        return svg`<path style=\"fill:${me.color};opacity:${me.opacity};pointerEvents:auto;cursor:auto;\" d=\"${pathStr}\"></path>`;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n\r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n\r\n        const rect = target.getBoundingClientRect();\r\n\r\n        const padding = me.padding;\r\n        const radius = me.radius;\r\n\r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n\r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n\r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n\r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n\r\n        const val = `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n            M${highlightBoxX},${highlightBoxY} \r\n            h${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n            v${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n            h-${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n            v-${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;\r\n        return val.replace(/[\\t\\n]/g, ' ');\r\n    }\r\n\r\n    static {\r\n        this.define('gs-overlay');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, map, range, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { size, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSPagerElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    size: { ...size },\r\n    first: { type: Boolean },\r\n    last: { type: Boolean },\r\n    next: { type: Boolean },\r\n    previous: { type: Boolean },\r\n    pages: { type: Number },\r\n\r\n    labelFirst: { attribute: 'label-first' },\r\n    labelLast: { attribute: 'label-last' },\r\n    labelNext: { attribute: 'label-next' },\r\n    labelPrevious: { attribute: 'label-previous' },\r\n\r\n    cssItem: { attribute: 'css-item' },\r\n\r\n  }\r\n\r\n  #ref = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.pages = 5;\r\n    this.labelFirst = '&laquo;';\r\n    this.labelLast = '&raquo;';\r\n    this.labelNext = '&rsaquo;';\r\n    this.labelPrevious = '&lsaquo;';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const half = Math.floor((me.pages - 1) / 2);\r\n    const page = me.dataController?.page || 0;\r\n    const start = page - half < 1 ? 1 : page - half;\r\n    const end = page > 0 ? page + half : me.pages;\r\n\r\n    return html`<nav \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        @click=\"${me.#onClick}\"\r\n        @keyup=\"${me.#onKeyUp}\"\r\n        @keydown=\"${me.#onKeyDown}\">\r\n        <ul ${ref(me.#ref)} class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()}\r\n        ${me.#renderPrevious()}\r\n        ${map(range(start, end + 1), (i) => me.#renderItem(i, '', '', i  === page))}\r\n        ${me.#renderNext()}\r\n        ${me.#renderLast()}\r\n        </ul></nav>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = me.size ? SizeTypes[me.size] || me.size : '';\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'pagination': true,\r\n      [`pagination-${size}`]: size,\r\n\r\n    }\r\n    return css;\r\n  }\r\n\r\n  updated() {\r\n    const target = this.#ref.value;\r\n    if (target && this.isFocused) {\r\n      target.querySelector('.active > a')?.focus();\r\n    }\r\n  }\r\n\r\n  onDataRead() {\r\n    this.requestUpdate();\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.first ? this.#renderItem(this.labelFirst, 'first', 'First page') : '';\r\n  }\r\n\r\n  #renderLast() {\r\n    return this.last ? this.#renderItem(this.labelLast, 'last', 'Last page') : '';\r\n  }\r\n\r\n  #renderPrevious() {\r\n    return this.previous ? this.#renderItem(this.labelPrevious, 'previous', 'Previous page') : '';\r\n  }\r\n\r\n  #renderNext() {\r\n    return this.next ? this.#renderItem(this.labelNext, 'next', 'Next page') : '';\r\n  }\r\n\r\n  #renderItem(text = '', name = '', title = '', active = false) {\r\n    const me = this;\r\n    text = GSUtil.decodeHTMLEntities(text);\r\n    return html`<li class=\"page-item ${active ? 'active' : ''}\">\r\n              <a class=\"page-link ${this.cssItem}\" \r\n                 name=\"${name}\" \r\n                 title=\"${me.translate(title)}\" \r\n                 href=\"#\">${me.translate(text)}</a>\r\n            </li>`;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const el = this.#toTarget(e, 'a');\r\n    if (!el) return;\r\n\r\n    const ctrl = me.dataController;\r\n    if (!ctrl) return;\r\n\r\n    const val = el.name || el.text;\r\n    me.emit(val, el);\r\n    \r\n    switch (val) {\r\n      case 'first':\r\n        return ctrl.firstPage();\r\n      case 'last':\r\n        return ctrl.lastPage();\r\n      case 'next':\r\n        return ctrl.nextPage();\r\n      case 'previous':\r\n        return ctrl.prevPage();\r\n    }\r\n\r\n    ctrl.page = val;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const current = this.#toTarget(e, 'li');\r\n    let el = null;\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        el = current?.previousElementSibling;\r\n        break;\r\n      case 'ArrowRight':\r\n        el = current?.nextElementSibling;\r\n        break;\r\n    }\r\n    el = el?.querySelector('a');\r\n    el?.focus();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') {\r\n      this.#toTarget(e, 'a')?.click();\r\n    }\r\n  }\r\n\r\n  #toTarget(e, name) {\r\n    const el = e.target.closest(name) || e.target;\r\n    return el.tagName === name.toUpperCase() ? el : undefined;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-pagination');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, position } from '../properties/index.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSPopper } from \"../base/GSPopper.mjs\";\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopupElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    position: { ...position },\r\n    trigger: {},\r\n    target: {},\r\n    autoclose: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    opened: { type: Boolean },\r\n    hPos: { type: Number, attribute: 'h-pos' },\r\n    vPos: { type: Number, attribute: 'v-pos' },\r\n    wMin: { type: Number, attribute: 'w-min' },\r\n    wMax: { type: Number, attribute: 'w-max' },\r\n    hMin: { type: Number, attribute: 'h-min' },\r\n    hMax: { type: Number, attribute: 'h-max' },\r\n\r\n  }\r\n\r\n  #caller = null;\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.autofocus = true;\r\n    this.autoclose = true;\r\n    this.trigger = 'click';\r\n    this.position = 'absolute';\r\n    this.placement = 'bottom';\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachTaraget();\r\n    me.attachEvent(window, 'resize', me.close.bind(me));\r\n    me.on('mouseleave', me.#onAuto.bind(me));\r\n  }\r\n\r\n  firstUpdated(changedProperties) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#resize();\r\n      me.#reposition();\r\n    });\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#reposition();\r\n    if (me.autofocus) me.focus();\r\n    me.notify();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div \r\n      ${ref(me.#panelRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"fade ${classMap(me.renderClass())}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      @keydown=\"${me.#onKeyDown}\">\r\n      ${me.renderTemplate()}\r\n      <slot></slot>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': me.opened,\r\n      //'d-none' : !me.opened,\r\n      [me.#styleID]: true,\r\n      [`position-${me.position}`]: me.position,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  focus() {\r\n    this.query('[tabindex], input, select, textarea, button, a', true)?.focus();\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Show popup at x/y position on the screen\r\n   * @param {Number} x \r\n   * @param {Number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const obj = {\r\n      top: '0px',\r\n      left: '0px',\r\n      translate: `${x}px ${y}px`\r\n    };\r\n    me.#resize(obj);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      case 'Escape':\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    //if (!me.opened) return;\r\n    if (me.vPos || me.hPos) {\r\n      const opt = {\r\n        top: '0px',\r\n        left: '0px',\r\n        translate: `${me.hPos}px ${me.vPos}px`\r\n      };\r\n      const rule = me.dynamicStyle(me.#styleID);\r\n      Object.assign(rule.style, opt);\r\n    } else if (me.target) {\r\n      let target = GSDOM.query(document.documentElement, me.target);\r\n      target = target.renderRoot?.firstElementChild || target;\r\n      GSPopper.popupFixed(me.placement, me.#panel, target);\r\n    }\r\n\r\n  }\r\n\r\n  #resize(obj = {}) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n    if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n    if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n    if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n    Object.assign(rule.style, obj);\r\n  }\r\n\r\n  #onPopup(e) {\r\n    const me = this;\r\n    me.#caller = e;\r\n    if (e instanceof Event) {\r\n      GSEvents.prevent(e);\r\n      me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n    }\r\n\r\n    if (me.placement) {\r\n      GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n      me.opened = true;\r\n      return;\r\n    }\r\n\r\n    let x = e.clientX, y = e.clientY;\r\n    const rect = me.#panel.getBoundingClientRect();\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #attachTaraget() {\r\n    const me = this;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    me.trigger.split(' ').forEach(evt => {\r\n      targets.forEach(target => me.attachEvent(target, evt, me.#onPopup.bind(me)));\r\n    });\r\n  }\r\n\r\n  #onAuto(e) {\r\n    if (this.autoclose) this.close();\r\n  }\r\n\r\n  get #panel() {\r\n    return this.#panelRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-popup');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, classMap, styleMap, ifDefined } from '../lib.mjs';\r\nimport { literalTemplate } from '../directives/literal.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSProgressElement extends GSElement {\r\n\r\n  static properties = {\r\n    min: { reflect: true, type: Number },\r\n    max: { reflect: true, type: Number },\r\n    step: { reflect: true, type: Number },\r\n    value: { reflect: true, type: Number },\r\n    label: { reflect: true }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.min = 0;\r\n    this.step = 1;\r\n    this.max = 100;\r\n    this.value = 0;\r\n    this.styles = { width: '0%' };\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#updateStyle();\r\n    const obj = {min :me.min, max:me.max, step:me.step, value:me.value, percentage:me.percentage};\r\n    return html`\r\n    <div class=\"progress\" @keydown=\"${me.#onKeySelect}\" dir=\"${ifDefined(me.direction)}\">\r\n        <div class=\"progress-bar ${classMap(me.renderClass())}\" \r\n             style=${styleMap(me.styles)} \r\n             role=\"progressbar\"\r\n             tabindex=\"0\">\r\n             ${literalTemplate(me.label, obj)}\r\n        </div>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  willUpdate(changedProperties) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    if (changedProperties.has('value')) {\r\n      let val = me.step + changedProperties.get('value');\r\n      val = me.#update(val, val);\r\n      changedProperties.set('value', val);\r\n    }\r\n  }\r\n\r\n  updated(changedProperties) {\r\n    if (changedProperties.has('value')) {\r\n      this.notify();\r\n    }\r\n  }\r\n\r\n  increase(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value + val, me.value);\r\n    return true;\r\n  }\r\n\r\n  decrease(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value - val, me.value);\r\n    return true;\r\n  }\r\n\r\n  get percentage() {\r\n    const me = this;\r\n    return Math.trunc((me.value / me.max) * 100);\r\n  }\r\n\r\n  #updateStyle() {\r\n    this.styles.width = `${this.percentage}%`;\r\n  }\r\n\r\n  #update(val, old = 0) {\r\n    val = GSUtil.asNum(val, GSUtil.asNum(old));\r\n    const me = this;\r\n    if (val > me.max) val = me.max;\r\n    if (val < me.min) val = me.min;\r\n    return val;\r\n  }\r\n\r\n  #onKeySelect(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp' :\r\n      case 'ArrowRight' :\r\n          return me.increase();\r\n      case 'ArrowLeft' :\r\n      case 'ArrowDown' :\r\n         return me.decrease();\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-progress');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\n\r\nexport class GSSpinnerElement extends GSElement {\r\n\r\n    static styles = css`.spinner-border { border: var(--bs-spinner-border-width) solid currentcolor; border-right-color: transparent; }`;\r\n\r\n    static properties = {\r\n        color: { ...color, reflect: true },\r\n        small: { type: Boolean, reflect: true },\r\n        pulsar: { type: Boolean }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\" role=\"status\"></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"spinner-border\": !me.pulsar,\r\n            \"spinner-grow\": me.pulsar,\r\n            [`text-${me.color}`]: me.color,\r\n            [`spinner-border-sm`]: !me.pulsar && me.small,\r\n            [`spinner-grow-sm`]: me.pulsar && me.small,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-spinner');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitterElement class\r\n * @module components/GSSplitterElement\r\n */\r\n\r\nimport { classMap, createRef, ref, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCSSMap } from '../base/GSCSSMap.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { notEmpty, numGT0, placement } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSSplitterElement extends GSElement {\r\n\r\n    static properties = {\r\n        // Check if splitter use vertical or horizontal splitting\r\n        split: { reflect: true },\r\n        // start|end|top|bottom\r\n        resize: { ...placement, hasChanged : notEmpty },\r\n        size: { type: Number, hasChanged: numGT0 }\r\n    }\r\n\r\n    #cursor = 0;\r\n    #styleID = GSID.id;\r\n    #elRef = createRef();\r\n    #mouseController;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.size = 8;\r\n        me.resize = 'start';\r\n        me.dynamicStyle(me.#styleID);\r\n        me.#load();\r\n        me.#mouseController = new ElementMoveController(me);\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#mouseController.attach(this.#splitter);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#elRef)} \r\n            @dblclick=\"${me.#onDoubleClick}\"\r\n            data-gs-class=\"${me.#styleID}\" \r\n            class=\"${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'splitter': true,\r\n            [me.#styleID]: true\r\n        }\r\n        return css;\r\n    }\r\n\r\n    updated(changedProperties) {\r\n        const me = this;\r\n        me.#cssUpdate();\r\n    }\r\n\r\n    /**\r\n    * Lock UI for mouse events to enable resizing over embedded iframes\r\n    * @param {MouseEvent} e \r\n    */\r\n    onStartMove(e) {\r\n        const me = this;\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', { start: true });\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    onMouseMove(e) {\r\n        const me = this;\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Save last position and unlock mouse UI events when resizing finished\r\n     * @param {*} e \r\n     */\r\n    onEndMove(e) {\r\n        const me = this;\r\n        me.#save();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', { stop: true });\r\n    }\r\n\r\n    /**\r\n    * Check if splitter use vertical or hotizontal splitting\r\n    * @returns {Boolean}\r\n    */\r\n    get isVertical() {\r\n        return this.split === 'vertical';\r\n    }\r\n\r\n    get isHorizontal() {\r\n        return !this.isVertical;\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display', 'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.#elRef.value;\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        return this.target.style;\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n\r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n                .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, true);\r\n                    el.dataset.gsSplitter = true;\r\n                });\r\n        } else {\r\n            me.#lockable\r\n                .filter(el => el.dataset.gsSplitter)\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, false);\r\n                    delete el.dataset.gsSplitter;\r\n                });\r\n        }\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        if (me.isVertical) {\r\n            me.#styleDynamic.width = val + \"px\";\r\n        } else {\r\n            me.#styleDynamic.height = val + \"px\";\r\n        }\r\n    }\r\n\r\n    #cssUpdate() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        const opt = {\r\n            [size]: `${me.size}px`,\r\n            [full]: '100%',\r\n            'border-width': '1px',\r\n            cursor: cursor,\r\n            'border-color': 'darkgray',\r\n            'border-style': 'solid',\r\n            'background-color': 'lightgray',\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-splitter');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSNavItemElement } from '../NavItem.mjs';\r\n\r\nexport class GSTabItemElement extends GSNavItemElement {\r\n\r\n  static properties = {\r\n    name: {}\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\n\r\nexport class GSTabPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    name: {},\r\n    template: {},\r\n    active: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" \r\n      class=\"${classMap(this.renderClass())}\">\r\n      <slot>\r\n      ${this.template ? html`<gs-template src=\"${this.template}\"></gs-template>` : ''}\r\n      </slot></div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tab-pane': true,\r\n      'd-none' : !me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tab-group') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../../base/GSID.mjs';\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { PlacementTypes } from '../../properties/placement.mjs';\r\nimport { GSNavElement } from '../Nav.mjs';\r\nimport { GSTabItemElement } from './Tab.mjs';\r\n\r\nexport class GSTabGroupElement extends GSNavElement {\r\n\r\n  static properties = {\r\n    panelCSS: { attribute: 'css-panel' },\r\n    tabCSS: { attribute: 'css-tab' },\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSTabItemElement);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-tab');\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'd-flex': me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    const me = this;\r\n    const reverse = PlacementTypes.isAfter(me.placement);\r\n    const list = [super.renderWrappedUI('tabs'),\r\n     html`<div class=\"tab-content flex-fill ${me.panelCSS}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <slot name=\"panels\">${me.renderPanels()}</slot>\r\n      </div>\r\n      <slot class=\"d-none\"></slot>`];\r\n      return reverse ? list.reverse() : list;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const css = super.renderWrappedClass();\r\n    return me.mapCSS(me.tabCSS, css);\r\n  }\r\n\r\n  /**\r\n   * Render items based on data proeprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n        return html`<gs-tab generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus || o.active}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\"    \r\n        title=\"${ifDefined(o.title)}\"\r\n        name=\"${o.name}\"></gs-tab>`;\r\n    });\r\n  }  \r\n \r\n  /**\r\n   * Render items based on data proeprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderPanels() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-panel name=\"${o.name}\" \r\n        template=\"${ifDefined(o.template)}\"></gs-tab-panel>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Filter navigable element\r\n   * @param {HTMLElement} el \r\n   */\r\n  isNavigable(el) {\r\n    return el?.tagName === 'GS-TAB';\r\n  }\r\n\r\n  /**\r\n   * Callback when tab selected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onSelected(el) {\r\n    el?.click();\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = true;\r\n  }\r\n\r\n  /**\r\n   * Callback when tab deselected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onDeselected(el) {\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = false;\r\n  }\r\n\r\n  /**\r\n   * Selected Tab node name is used to find the panel.\r\n   * If panel found, auto-link it with node element\r\n   * @param {GSTabElement} el \r\n   */\r\n  #findPanel(el) {\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    const generated = me.data?.length > 0;\r\n    let panel = el[key] || me.query(`gs-tab-panel[name=\"${el.name}\"]`, generated);\r\n    if (!el[key]) el[key] = panel;\r\n    return panel;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\n\r\n/**\r\n * A simple HTML Table rederer for read-only tabular data representation\r\n * For complex interactive dat use gs-table\r\n */\r\nexport class GSTableElement extends GSElement {\r\n\r\n  static #icons = ['sort-up', 'arrow-down-up', 'sort-down-alt'];\r\n\r\n  static styles = css`th:hover { opacity: 50% !important; }`;\r\n\r\n  static CELLS = {\r\n    align: {},\r\n    width: {},\r\n    width: {},\r\n    css: {},\r\n    title: {},\r\n    filter: { type: Boolean },\r\n    filterType: { attribute: 'filter-type' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    ...GSData.PROPERTIES\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    color: { ...color },\r\n    colorHead: { ...color, attribute: 'head-color' },\r\n    colorSelect: { ...color, attribute: 'select-color' },\r\n    stripedColumn: { type: Boolean, attribute: 'striped-column' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    divider: { type: Boolean },\r\n    striped: { type: Boolean },\r\n    hover: { type: Boolean },\r\n    small: { type: Boolean },\r\n    grid: { type: Boolean },\r\n    borderless: { type: Boolean },\r\n\r\n    sort: { type: Array, state: true },\r\n    columns: { type: Array, state: true },\r\n    selections: { type: Array, state: true },\r\n    key: { type: Number, state: true },\r\n\r\n    data: { type: Array },\r\n    datacolumn: { type: Boolean },\r\n    multisort: { type: Boolean },\r\n    multiselect: { type: Boolean },\r\n    protected: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n    sortable: { type: Boolean },\r\n  }\r\n\r\n  #config = [];\r\n  #sortOrder = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.headColor = 'secondary';\r\n    this.colorSelect = 'info';\r\n    this.columns = [];\r\n    this.selections = [];\r\n    this.data = [];\r\n    this.sort = [];\r\n    this.key = 0;\r\n  }\r\n\r\n  get selected() {\r\n    const me = this;\r\n    return me.data.filter((v, i) => me.selectable.includes(i));\r\n  }\r\n\r\n  set search(val) {\r\n    const me = this;\r\n    if (me.storage) {\r\n      return me.dataController.search = val;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#config = GSItem.proxify(me, GSTableElement.CELLS);\r\n    if (me.columns.length === 0) me.columns = me.#config.map(v => v.name);\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.data = [];\r\n    this.selections = [];\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'user-select-none': me.protected,\r\n      'table': true,\r\n      'table-sm': me.small,\r\n      'table-hover': me.hover,\r\n      'table-striped': me.striped,\r\n      'table-bordered': me.grid,\r\n      'table-borderless': me.borderless,\r\n      'table-striped-columns': me.stripedColumns,\r\n      [`table-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.dataController?.read();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (me.columns.length != me.sort.length) me.sort = Array(me.columns.length).fill(0);\r\n    if (me.datacolumn && me.data.length > 0) {\r\n      me.columns = me.data[0];\r\n      me.data = me.data.slice(1);\r\n    }\r\n    if (changed.has('multiselect') && !me.multiselect) me.selections = [];\r\n    if (changed.has('selectable') && !me.selectable) me.selections = [];\r\n    if (changed.has('sortable') || changed.has('multisort')) {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [];\r\n    }\r\n\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const headColor = me.colorHead ? `table-${me.colorHead}` : '';\r\n    return html`\r\n      <table  \r\n       dir=\"${ifDefined(me.direction)}\"\r\n       @keyup=\"${me.#onKeyUp}\"\r\n       @keydown=\"${me.#onKeyDown}\"\r\n       class=\"${classMap(me.renderClass())}\">\r\n        <thead class=\"${ifDefined(headColor)}\">\r\n          ${me.#renderFilters()}\r\n          <tr @click=${me.#onSort}>\r\n            ${me.columns.map((entry, index) => me.#renderColumn(entry, index))}\r\n          </tr>\r\n        </thead>\r\n        <tbody @click=${me.#onSelect} class=\"${me.divider ? 'table-group-divider' : ''}\">\r\n          ${me.data.map((entry, index) => me.#renderRecord(entry, index))}\r\n          ${me.#renderEmpty()}\r\n        </tbody>\r\n      </table>\r\n      <slot name=\"extra\"></slot>\r\n    `;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    const me = this;\r\n    me.data = data;\r\n    me.selections = [];\r\n\r\n    // update filtering\r\n    if (data.length > 0 && me.#hasFilters) {\r\n      me.#config.forEach((entry, index) => {\r\n        entry.columnType = me.#columType(index);\r\n      });\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.#input.forEach(el => el.value = '');\r\n    this.dataController?.filter([]);\r\n  }\r\n\r\n  valueAt(row, cell) {\r\n    return this.data.length > row ? this.data[row][cell] : undefined;\r\n  }\r\n\r\n  get #input() {\r\n    return this.queryAll('th > input', true);\r\n  }\r\n\r\n  get #hasFilters() {\r\n    return this.#config.filter(o => o.filter).length > 0;\r\n  }\r\n\r\n  #columType(index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const cell = me.valueAt(0, me.columns[index]);\r\n    cfg.type = cfg.type || 'text';\r\n    const cfgType = { 'string': 'text', 'currency': 'number', 'timestamp': 'datetime-local' }[cfg.type]\r\n    const dataType = cell instanceof Date ? 'date' : typeof cell;\r\n    return cell ? dataType : cfgType || cfg.type;\r\n  }\r\n\r\n  #renderFilters() {\r\n    const me = this;\r\n    return me.#hasFilters ? html`<tr>${me.columns.map((entry, index) => me.#renderFilter(entry, index))}</tr>` : '';\r\n  }\r\n\r\n  #renderFilter(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (!cfg?.filter) return html`<th></th>`;\r\n    let mask = '';\r\n    const isDate = cfg.columnType === 'date';\r\n    if (isDate) mask = cfg.format || GSUtil.getDateFormat(cfg.locale || GSUtil.locale);\r\n    const css = `${GSUtil.normalize(me.cssFilter)} ${GSUtil.normalize(cell.cssFilter)}`; \r\n\r\n    return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n        <input is=\"gs-ext-input\" .index=${index}\r\n            class=\"form-control ${css}\" \r\n            mask=\"${ifDefined(mask)}\"\r\n            name=\"${cell}\" \r\n            type=\"${cfg.filterType || cfg.columnType}\"\r\n            data-slots=\"${ifDefined(isDate ? 'DMY' : undefined)}\">\r\n        </th>`;\r\n  }\r\n\r\n  #renderColumn(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const css = `${GSUtil.normalize(me.cssHeader)} ${GSUtil.normalize(cell.cssHeader)}`; \r\n    return html`\r\n      <th .index=${index} class=\"${css}\" width=\"${ifDefined(me.#config[index]?.width)}\">\r\n        <div class=\"d-flex justify-content-between\"> \r\n          <span>${cfg?.title || cell}</span>\r\n          ${me.#renderIcon(index)}\r\n        </div>\r\n      </th>\r\n    `\r\n  }\r\n\r\n  #renderIcon(index) {\r\n    const me = this;\r\n    if (!me.sortable) return '';\r\n    const icons = GSTableElement.#icons;\r\n    const sortType = me.sort[index];\r\n    const order = me.multisort ? me.#sortOrder.indexOf(index) + 1 : '';\r\n    return html`<gs-icon name=\"${icons[sortType + 1]}\" super=\"${order > 0 ? order : ''}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderRecord(entry, index) {\r\n    const me = this;\r\n    if (!Array.isArray(entry)) entry = me.columns.map(v => entry[v]);\r\n    entry = entry.map((val, i) => me.#config[i] ? GSData.format(me.#config[i], val) : val);\r\n    const color = me.colorSelect && me.selections.includes(index) ? `table-${me.colorSelect}` : '';\r\n    return html`\r\n        <tr .index=${index} class=\"${color}\" tabindex=\"0\">\r\n          ${entry.map((cell, i) => html`<td class=\"text-${me.#config[i]?.align}\"><span>${cell}</span></td>`)}\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  #renderEmpty() {\r\n    const me = this;\r\n    if (me.data.length > 0 ) return '';\r\n    return html`<tr data-ignore=\"true\"><td colspan=\"${me.columns.length}\" class=\"text-center fw-bold text-muted\">${me.translate('No Data')}</td></tr>`;\r\n\r\n  }\r\n\r\n  #onFilter(e) {\r\n    const me = this;\r\n    const filter = me.#input\r\n      .map(el => {\r\n        if (!el.value) return undefined;\r\n        const isDate = el.type === 'date';\r\n        const val = isDate ? el.valueAsDate : el.value;\r\n        const cfg = me.#config[el.index];\r\n        return { name: el.name, value: val, locale : cfg?.locale }\r\n      })\r\n      .filter(el => el?.value);\r\n    me.dataController.filter(filter);\r\n  }  \r\n\r\n  #onSort(e) {\r\n    const me = this;\r\n    if (!me.sortable) return;\r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const column = e.target.closest('th');\r\n    if (!icon || !column) return;\r\n    const idx = column.index !== undefined ? column.index : GSDOM.getElementIndex(column);\r\n    const current = me.sort[idx];\r\n    const sortType = current === 1 ? -1 : current + 1;\r\n\r\n    if (me.multisort) {\r\n      if (sortType == 0) {\r\n        me.#sortOrder = me.#sortOrder.filter(v => v != idx);\r\n      } else if (!me.#sortOrder.includes(idx)) {\r\n        me.#sortOrder.push(idx);\r\n      }\r\n    } else {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [idx];\r\n    }\r\n\r\n    me.sort[idx] = sortType;\r\n\r\n    const sort = me.#prepareSorter(me.sort, me.#sortOrder);\r\n\r\n    if (me.storage) {\r\n      return me.dataController.sort(sort);\r\n    }\r\n\r\n    me.data = GSData.sortData(me.data, sort);\r\n    me.emit('sort');\r\n  }\r\n\r\n  #prepareSorter(sort, sortOrder) {\r\n    const me = this;\r\n\r\n    if (sort.filter(v => v).length === 0) {\r\n      sort = Array(me.columns.length).fill(0);\r\n      sort[me.key] = 1;\r\n    }\r\n\r\n    // if data record is object (not simple array)\r\n    const isComplex = me.data[0] && !Array.isArray(me.data[0]);\r\n\r\n    // sort list \r\n    const list = sort.map((v, i) => v ? { name: isComplex ? me.columns[i] : undefined, col: i, ord: v, idx: sortOrder.indexOf(i) } : null).filter(v => v);\r\n\r\n    // order sort list by idx\r\n    sort = GSData.sortData(list, [{ name: 'idx', ord: 1 }]);\r\n\r\n    return sort;\r\n  }\r\n\r\n  #onSelect(e) {\r\n    const me = this;\r\n    if (!me.selectable) return;\r\n    const tr = e.target.tagName === 'TR' ? e.target : e.target.closest('tr');\r\n    if (!tr) return;\r\n    const isSelected = me.selections.includes(tr.index);\r\n    if (me.multiselect) {\r\n      if (isSelected) {\r\n        me.selections = me.selections.filter(v => v != tr.index);\r\n      } else {\r\n        me.selections.push(tr.index);\r\n        me.requestUpdate();\r\n      }\r\n    } else {\r\n      me.selections = isSelected ? [] : [tr.index];\r\n    }\r\n    me.emit('select');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    if (!e.target.matches('tbody tr')) return;\r\n    let el = null;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        el = e.target.previousElementSibling;\r\n        break;\r\n      case 'ArrowDown':\r\n        el = e.target.nextElementSibling;\r\n        break;\r\n    }\r\n\r\n    if (el) {\r\n      el.focus();\r\n      this.emit('focus', el);\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') this.#onSelect(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-table');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport { createRef, ref, classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { stringArrayConverter, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSTagElement}\r\n */\r\nexport default class GSTagElement extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static styles = css`\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n\r\n    static properties = {\r\n        placeholder: {},\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        name: {},\r\n        data: { type: Array },\r\n        values: { type: Array, reflect: true, converter: stringArrayConverter },\r\n        appendable: { type: Boolean },\r\n        color: { ...color },\r\n        closeColor: { ...color, attribute: 'close-color' },\r\n        cssClose: { attribute: 'css-close' },\r\n        cssTag: { attribute: 'css-tag' },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {}\r\n    }\r\n\r\n    #dataListRef = createRef();\r\n    #inputRef = createRef();\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = '';\r\n        this.data = this.#items;\r\n        this.closeColor = 'light';\r\n        this.color = 'primary';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const tags = me.#renderTags();\r\n        return html`\r\n        <div  dir=\"${ifDefined(me.direction)}\" \r\n            class=\"${classMap(me.renderClass())}\"\r\n            @click=\"${me.#onClick.bind(me)}\">\r\n            ${tags}\r\n            <input type=\"text\" \r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            ${ref(me.#inputRef)}\r\n            name=\"${me.name}\" \r\n            list=\"${me.name}_list\"\r\n            class=\"form-control d-flex w-auto flex-grow-1\" \r\n            placeholder=\"${me.#info}\">\r\n            <datalist ${ref(me.#dataListRef)} id=\"${me.name}_list\">${me.#renderList()}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"d-flex\": true,\r\n            \"flex-wrap\": true,\r\n            \"align-items-center\": true,\r\n            \"gap-1 \": true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    get #info() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return me.placeholder ? me.placeholder : alt;\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTagElement.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.data.length >= me.max;\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax || (!optEl && me.appendable == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (!me.values.includes(fld.value)) {\r\n            me.values.push(fld.value);\r\n            fld.value = '';\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const value = tagEl.dataset.value;\r\n        me.values = me.values.filter(v => v != value);\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v));\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        const size = me.size > 0 ? `fs-${me.size}` : '';\r\n        return html`<div class=\"${classMap(me.#tagClass)}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"${classMap(me.#btnClass)}\"></button></div>`;\r\n    }\r\n\r\n    get #tagClass() {\r\n        const me = this;\r\n        const opt = {\r\n            badge: true,\r\n            tag: true,\r\n            [`fs-${me.size}`]: me.size > 0,\r\n            [`bg-${me.color}`]: me.color ? true : false\r\n        }\r\n        return me.mapCSS(me.cssTag, opt);\r\n    }\r\n\r\n    get #btnClass() {\r\n        const me = this;\r\n        const opt = {\r\n            'btn-close': true,\r\n            'ms-1': true,\r\n            [`bg-${me.closeColor}`]: me.closeColor ? true : false\r\n        }\r\n        return me.mapCSS(me.cssClose, opt);\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        return me.data.map(v => html`<option value=\"${v}\">`);\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el));\r\n    }\r\n\r\n    get #items() {\r\n        return this.#proxify(this).map(el => el.name).filter(v => v ? true : false);\r\n    }\r\n\r\n    get #input() {\r\n        return this.#inputRef.value;\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.#dataListRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-tag');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSTextElement extends GSElement {\r\n\r\n  #text = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.#text = this.innerText;\r\n    this.innerText = \"\";\r\n  }\r\n\r\n  renderUI() {\r\n    return this.translate(this.#text);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-text');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSTooltipElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    title: {},\r\n    target: {},\r\n    opened: { type: Boolean },\r\n    local: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowStyle = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.placement = 'top';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowStyle);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      role=\"tooltip\"\r\n      data-popper-placement=\"${me.placement}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      <div ${ref(me.#arrowRef)} \r\n          class=\"tooltip-arrow ${me.#arrowStyle}\" \r\n          data-gs-class=\"${me.#arrowStyle}\">\r\n      </div>\r\n      <div class=\"tooltip-inner\">${me.translate(me.title)}</div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tooltip': true,\r\n      'bs-tooltip-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  #attachEvents() {\r\n    const me = this;\r\n    me.attachEvent(me.#ref, 'mouseenter', me.open.bind(me));\r\n    me.attachEvent(me.#ref, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const arrowEl = me.#arrow;\r\n    const panelEl = me.#panel;\r\n    if (!panelEl) return;\r\n    if (me.opened) {\r\n      GSPopper.popupFixed(me.placement, panelEl, me.#ref, arrowEl);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, { top: '-1000px', left: '-1000px' });\r\n    }\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return me.local ? me.#refLocal : me.#refGlobal;\r\n    }\r\n  }\r\n\r\n  get #refLocal() {\r\n    const root = GSDOM.root(this);\r\n    return GSDOM.query(root, this.target);\r\n  }\r\n  \r\n  get #refGlobal() {\r\n    return GSDOM.query(document.body, this.target);\r\n  }\r\n\r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-tooltip');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty } from '../properties/index.mjs';\r\n\r\nexport class GSTemplateElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { reflect: true, hasChanged: notEmpty }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${this.renderTemplate()}`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-template');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle automatic field value copy and select\r\n */\r\nexport class CopySelectController {\r\n\r\n  #host;\r\n\r\n  #clickCallback;\r\n  #copyCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#clickCallback = me.#onClick.bind(me);\r\n    me.#copyCallback = me.#onCopy.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('click', me.#clickCallback);\r\n    me.#host.on('copy', me.#copyCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('click', me.#clickCallback);\r\n    me.#host.off('copy', me.#copyCallback);\r\n  }\r\n\r\n  #onCopy() {\r\n    GSUtil.writeToClipboard(this.#host.value);\r\n  }\r\n\r\n  #onClick(e) {\r\n      const me = this;\r\n      if (me.#host.autocopy) GSUtil.writeToClipboard(me.#host.value);\r\n      if (me.#host.autoselect) me.#host.select();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle field mask \r\n */\r\nexport class MaskController {\r\n\r\n  static #special = '.^$*+?()[]{}\\|';\r\n\r\n  static #maskType = {\r\n    x: /[0-9a-fA-F]/g,\r\n    n: /[0-9]/g,\r\n    y: /[0-9]/g,\r\n    m: /[0-9]/g,\r\n    d: /[0-9]/g,\r\n    h: /[0-9]/g,\r\n    s: /[0-9]/g,\r\n    '.': /[0-9]/g,\r\n    '#': /[a-zA-Z]/g,\r\n    '*': /[0-9a-zA-Z]/g,\r\n    '_': /./g\r\n  };\r\n\r\n  #back = false;\r\n  #slots;\r\n  #prev;\r\n  #first;\r\n  #accept;\r\n  #pattern;\r\n\r\n  #host;\r\n\r\n  #keyDownCallback;\r\n  #inputCallback;\r\n  #focusCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    me.#inputCallback = me.#format.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.initRules();\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n    me.#host.on('input', me.#inputCallback);\r\n    me.#host.on('focus', me.#focusCallback);\r\n    me.#host.on('blur', me.#blurCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n    me.#host.off('input', me.#inputCallback);\r\n    me.#host.off('focus', me.#focusCallback);\r\n    me.#host.off('blur', me.#blurCallback);\r\n  }\r\n\r\n  initRules() {\r\n    const me = this;\r\n    if (!me.pattern) return;\r\n    me.#slots = me.#builSlots();\r\n    me.#prev = (j => Array.from(me.pattern, (c, i) => me.#slots.has(c) ? j = i + 1 : j))(0);\r\n    me.#first = [...me.pattern].findIndex(c => me.#slots.has(c));\r\n    me.#accept = me.#builAccept();\r\n    me.#toPattern();    \r\n  }\r\n  \r\n  validate() {\r\n    const me = this;\r\n    me.setCustomValidity('');\r\n    me.#pattern.lastIndex = 0;\r\n    const isMatch = me.required ? me.#pattern.test(me.raw) : true;\r\n    const isValid = isMatch && me.checkValidity();\r\n    if (!isMatch) me.setCustomValidity('Data did not match pattern!');\r\n    if (!isValid) me.reportValidity();\r\n    return isValid;\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.#host.checkValidity();\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.#host.reportValidity();\r\n  }\r\n\r\n  setSelectionRange(i, j) {\r\n    this.#host.setSelectionRange(i, j);\r\n  }\r\n  \r\n  select() {\r\n    this.#host.select();\r\n  }\r\n\r\n  get value() {\r\n    const [i, j] = this.#range();\r\n    return this.raw.substring(0, j);\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get pattern() {\r\n    return this.#host.mask;\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get selectionStart() {\r\n    return this.#host.selectionStart;\r\n  }\r\n\r\n  get selectionEnd() {\r\n    return this.#host.selectionEnd;\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.#host.autoselect;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    this.#back = e.key === \"Backspace\";\r\n  }\r\n\r\n  #onFocus(e) {\r\n    const me = this;\r\n    me.#format(e);\r\n    if (me.autoselect) me.select();\r\n  }\r\n\r\n  #onBlur(e) {\r\n    // me.value === me.pattern && (me.value = \"\");\r\n    this.validate();\r\n  }\r\n\r\n  /**\r\n   * If data-slots not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #builSlots() {\r\n    const me = this;\r\n    let slots = me.dataset.slots;\r\n    if (!slots) {\r\n      const maskType = MaskController.#maskType;\r\n      slots = [...new Set(me.pattern)]\r\n        .filter(v => maskType[v.toLowerCase()])\r\n        .join('');\r\n    }\r\n    return new Set(slots || \"_\");\r\n  }\r\n\r\n  /**\r\n   * If data-accept not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #builAccept() {\r\n    const me = this;\r\n    let accept = me.dataset.accept;\r\n    if (!accept) {\r\n      const maskType = MaskController.#maskType;\r\n      accept = [...new Set(me.pattern)]\r\n      .map(v => maskType[v.toLowerCase()])\r\n      .filter(v => v);\r\n      if (accept.length > 0) {\r\n        const tmp = {};\r\n        accept.forEach(v => tmp[v.src] = v);\r\n        accept = Object.values(tmp);\r\n        return accept.length === 1 ? accept.pop() : accept;\r\n      } \r\n\r\n    }\r\n    return new RegExp(accept || \"\\\\d\", \"g\");\r\n  }\r\n\r\n  #range() {\r\n    const me = this;\r\n    const value = me.raw;\r\n    return [me.selectionStart, me.selectionEnd].map(i => {\r\n      i = me.#clean(value.slice(0, i)).findIndex(c => me.#slots.has(c));\r\n      return i < 0 ? me.#prev[me.#prev.length - 1] : me.#back ? me.#prev[i - 1] || me.#first : i;\r\n    });\r\n  }\r\n\r\n  #format(e) {\r\n    const me = this;\r\n    const [i, j] = me.#range();\r\n    me.value = me.#clean(me.#host.raw).join``;\r\n    me.setSelectionRange(i, j);\r\n    me.#back = false;\r\n  }\r\n\r\n  //  TODO support multi #accecpt\r\n  #clean(input) {\r\n    const me = this;\r\n    input = input.match(me.#accept) || [];\r\n    return Array.from(me.pattern, c => input[0] === c || me.#slots.has(c) ? input.shift() || c : c);\r\n  }\r\n\r\n  #toPattern() {\r\n\r\n    const me = this;\r\n\r\n    if (me.pattern.length === 0) return;\r\n\r\n    const chars = me.pattern.split('');\r\n    const masks = ['^'];\r\n\r\n    const maskType = MaskController.#maskType;\r\n    const special = MaskController.#special;\r\n\r\n    let cnt = 0;\r\n    chars.forEach((v, i) => {\r\n      const m = maskType[v.toLowerCase()];\r\n      if (!m) {\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        cnt = 0;\r\n        if (special.includes(v)) masks.push('\\\\');\r\n        return masks.push(v);\r\n      }\r\n\r\n      chars[i] = new RegExp(m, 'g');\r\n\r\n      if (masks.length === 0) return masks.push(m.source);\r\n\r\n      if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n      if (cnt > 0) masks.push(`{${++cnt}}`);\r\n      cnt = 0;\r\n      masks.push(m.source);\r\n    });\r\n\r\n    if (cnt > 0) masks.push(`{${++cnt}}`);\r\n    masks.push('$');\r\n\r\n    me.#pattern = new RegExp(masks.join(''), 'g');\r\n    // me.#max = me.pattern.length;\r\n    // me.#masks = chars;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type number to support max length entry\r\n */\r\nexport class NumberController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get maxLength() {\r\n    return GSUtil.asNum(this.#host.maxLength, 0);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n    \r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'number') return me.#onNumberInput(e);\r\n  }\r\n\r\n  #onNumberInput(e) {\r\n    const me = this;\r\n    if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n        me.value = me.value.substring(0, me.maxLength);\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle for input tpye password tosupport keyboard shortcut for password reveal.\r\n */\r\nexport class PasswordController {\r\n\r\n  #host;\r\n\r\n  #revealing = false;\r\n\r\n  #keyUpCallback;\r\n  #keyDownCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyUpCallback = me.#onKeyUp.bind(me);\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('keyup', me.#keyUpCallback);\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keyup', me.#keyUpCallback);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  get reveal() {\r\n    return this.#host.hasAttribute('reveal');\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  set type(val) {\r\n    if (this.#host) this.#host.type = val;\r\n  }\r\n\r\n  #isReveal(e) {\r\n    return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    const me = this;\r\n    if (e.key === 'Shift' && me.#revealing) {\r\n      me.type = 'password';\r\n    }\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (me.#isReveal(e)) {\r\n      me.#revealing = true;\r\n      me.type = 'text';\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSCSSMap } from \"../../../base/GSCSSMap.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type text to support text value changes based on CSS\r\n */\r\nexport class TextController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'text') me.value = me.#updateText(me.value);\r\n  }\r\n\r\n  #updateText(value = '') {\r\n    const map = GSCSSMap.styleValue(this.#host, 'text-transform');\r\n    if (map) value = GSUtil.textTransform(map.value, value);\r\n    return value;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update avaialble selections in another field selections.\r\n */\r\nexport class ListController {\r\n\r\n  #host;\r\n\r\n  #monitorCallback;\r\n  #changeCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#monitorCallback = me.#onMonitor.bind(me);\r\n    me.#changeCallback = me.#onDataChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (list) {\r\n      me.#host.on('blur', me.#blurCallback);\r\n      me.#host.on('change', me.#changeCallback);\r\n      me.#host.attachEvent(me.filter, 'change', me.#monitorCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('blur', me.#blurCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n    me.#host.removeEvent(me.filter, 'change', me.#monitorCallback);\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n      this.#onDataChange();\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get list() {\r\n    const me = this;\r\n    if (me.#host.list) return me.#host.list;\r\n    const list = GSAttr.get(me.#host, 'list');\r\n    return GSDOM.getByID(me.#host.owner, list);\r\n  }\r\n\r\n  get filter() {\r\n    const me = this;\r\n    const filter = GSAttr.get(me.#host, 'data-filter');\r\n    return GSDOM.getByID(me.#host.owner, filter);\r\n  }\r\n\r\n  get owner() {\r\n    return this.#host.owner;\r\n  }\r\n\r\n  get strict() {\r\n    return GSAttr.get(this.#host, 'strict', '');\r\n  }\r\n\r\n  #onBlur(e) {\r\n    if (!this.#isInList()) GSEvents.send(this.#host, 'strict', { ok: false, source: e });\r\n  }\r\n\r\n  #onDataChange(e) {\r\n    const me = this;\r\n    const own = me.owner;\r\n    let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n    let clean = false;\r\n    if (!opt) {\r\n        opt = me.list?.querySelector('option');\r\n        clean = true;\r\n    }\r\n\r\n    const obj = opt?.dataset || {};\r\n    Object.entries(obj).forEach(p => {\r\n        const val = clean ? '' : p[1];\r\n        const key = p[0];\r\n        GSAttr.set(me.#host, `data-${key}`, p[1]);\r\n        if (key === 'id' || key === 'group') return;\r\n\r\n        const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n        const els = Array.from(GSDOM.queryAll(own, filter));\r\n        els.filter(el => el.tagName !== 'OPTION')\r\n            .filter(el => el !== me)\r\n            .filter(el => GSAttr.get(el, 'list').length === 0)\r\n            .forEach(el => me.#togleEl(el, key, val))\r\n    });\r\n  }\r\n\r\n  #onMonitor(e) {\r\n    const me = this;\r\n    const list = me.list;\r\n    me.value = '';\r\n    const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n    GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n    const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n    GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n\r\n  }\r\n\r\n  #togleEl(el, key = '', value = '') {\r\n\r\n    const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n    const isMatch = value.length > 0 && data.includes(value);\r\n    const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n\r\n    if (frmel) {\r\n      GSAttr.toggle(el, 'disabled', !isMatch);\r\n    } else {\r\n      isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n    }\r\n\r\n    const form = GSDOM.closest(el, 'form');\r\n    GSDOM.formElements(form)\r\n      .forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n  }\r\n\r\n  #isInList() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (!list) return true;\r\n    if (!me.strict) return true;\r\n    if (!list.querySelector('option')) return true;\r\n    const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n    return opt != null;\r\n  }\r\n\r\n}  ","\r\nimport { notEqual, defaultConverter } from '../../lib.mjs';\r\n\r\n\r\nconst defaultPropertyDeclaration = {\r\n    attribute: true,\r\n    reflect: false,\r\n    type: String,\r\n    converter: defaultConverter,\r\n    hasChanged: notEqual,\r\n}\r\n\r\nconst attributeToPropertyMap = Symbol();\r\nconst prepare = Symbol();\r\nconst elementProperties = Symbol();\r\nconst finalize = Symbol();\r\nconst finalized = Symbol();\r\n\r\nconst prepareFn = function () {\r\n    const me = this;\r\n    if (Object.getOwnPropertySymbols(me).includes(elementProperties)) return;\r\n    const superCtor = Object.getPrototypeOf(me);\r\n    if (typeof superCtor[finalize] === 'function') superCtor[finalize]();\r\n    me[elementProperties] = new Map(superCtor[elementProperties]);\r\n}\r\n\r\nconst attributeNameForProperty = (name, options) => {\r\n    const attribute = options.attribute;\r\n    return attribute === false\r\n        ? undefined\r\n        : typeof attribute === 'string'\r\n            ? attribute\r\n            : typeof name === 'string'\r\n                ? name.toLowerCase()\r\n                : undefined;\r\n}\r\n\r\n/**\r\n * Reactivity for HTMLInputElement based on Google ltd. Lit ReactiveElement\r\n */\r\nexport class ReactiveInput extends HTMLInputElement {\r\n\r\n    // user defiend \r\n    static properties = {};\r\n    \r\n    static [finalized] = false;\r\n\r\n    #reflectingProperties = undefined;\r\n    #instanceProperties = undefined;\r\n\r\n    #controllers = undefined;\r\n    #updatePromise = undefined;\r\n    #changedProperties = undefined;\r\n    #reflectingProperty = undefined;\r\n\r\n    #hasUpdated = false;\r\n    #isUpdatePending = false;\r\n\r\n    /**\r\n     * Returns a list of attributes corresponding to the registered properties.\r\n    */\r\n    static get observedAttributes() {\r\n        Object.defineProperty(ReactiveInput.__proto__, prepare, { value: prepareFn });\r\n        const me = this;\r\n        me[finalize]();\r\n        return me[attributeToPropertyMap] && [...me[attributeToPropertyMap].keys()];\r\n    }\r\n\r\n    static addInitializer(initializer) {\r\n        const me = this;\r\n        me[prepare]();\r\n        me.initializers ??= [].push(initializer);\r\n    }\r\n\r\n    static [finalize]() {\r\n        const me = this;\r\n        //if (Object.hasOwn(me, 'finalized')) return;\r\n        if (me[finalized] === true) return;\r\n        me[finalized] = true;\r\n        me[prepare]();\r\n\r\n        if (Object.hasOwn(me, 'properties')) {\r\n            const props = me.properties;\r\n            const propKeys = [\r\n                ...Object.getOwnPropertyNames(props),\r\n                ...Object.getOwnPropertySymbols(props),\r\n            ];\r\n            for (const p of propKeys) {\r\n                me.createProperty(p, props[p]);\r\n            }\r\n        }\r\n\r\n        // Create the attribute-to-property map\r\n        me[attributeToPropertyMap] = new Map();\r\n        for (const [p, options] of me[elementProperties]) {\r\n            const attr = attributeNameForProperty(p, options);\r\n            if (attr !== undefined) {\r\n                me[attributeToPropertyMap].set(attr, p);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static createProperty(name, options) {\r\n        const me = this;\r\n        if (options.state) options.attribute = false;\r\n        me[prepare]();\r\n        me[elementProperties].set(name, options);\r\n        if (!options.noAccessor) {\r\n            const key = Symbol();\r\n            const descriptor = me.getPropertyDescriptor(name, key, options);\r\n            if (descriptor !== undefined) {\r\n                Object.defineProperty(me.prototype, name, descriptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    static getPropertyDescriptor(name, key, options) {\r\n        const { get, set } = Object.getOwnPropertyDescriptor(this.prototype, name) ?? {\r\n            get() {\r\n                return this[key];\r\n            },\r\n            set(v) {\r\n                this[key] = v;\r\n            },\r\n        }\r\n        return {\r\n            get() {\r\n                return get?.call(this);\r\n            },\r\n            set(value) {\r\n                const me = this;\r\n                const oldValue = get?.call(me);\r\n                set?.call(me, value);\r\n                me.requestUpdate(name, oldValue, options);\r\n            },\r\n            configurable: true,\r\n            enumerable: true,\r\n        }\r\n    }\r\n\r\n    static getPropertyOptions(name) {\r\n        return this[elementProperties].get(name) ?? defaultPropertyDeclaration;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initialize();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.enableUpdating(true);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        this.#attributeToProperty(name, newValue);\r\n    }\r\n\r\n    // ******************************\r\n    // PUBLIC GETTERS\r\n    // ******************************\r\n\r\n    get hasUpdated() { return this.#hasUpdated; }\r\n    get isUpdatePending() { return this.#isUpdatePending; }\r\n    get renderRoot() { return this; }\r\n\r\n    // ******************************\r\n    // PROTECTED FUNCTIONS \r\n    // ******************************\r\n\r\n    addController(controller) {\r\n        // if (!(controller instanceof ReactiveController)) throw new Error('Argument not instance of ReactiveController');\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    enableUpdating(requestedUpdate) { }\r\n\r\n    firstUpdated(changedProperties) { }\r\n\r\n    updated(changedProperties) { }\r\n\r\n    getUpdateComplete() { return this.#updatePromise; }\r\n\r\n    scheduleUpdate() { return this.performUpdate(); }\r\n\r\n    shouldUpdate(changedProperties) { return true; }\r\n\r\n    willUpdate(changedProperties) { }\r\n\r\n    update(changedProperties) {\r\n        const me = this;\r\n        // The forEach() expression will only run when when #reflectingProperties is\r\n        // defined, and it returns undefined, setting #reflectingProperties to undefined\r\n        me.#reflectingProperties &&= me.#reflectingProperties.forEach((p) => me.#propertyToAttribute(p, this[p]));\r\n        me.#markUpdated();\r\n    }\r\n\r\n    get updateComplete() {\r\n        return this.getUpdateComplete();\r\n    }\r\n\r\n    requestUpdate(name, oldValue, options) {\r\n        const me = this;\r\n        if (name !== undefined) {\r\n            options ??= (me.constructor).getPropertyOptions(name);\r\n            const hasChanged = options.hasChanged ?? notEqual;\r\n            const newValue = me[name];\r\n            if (hasChanged(newValue, oldValue)) {\r\n                me.#changeProperty(name, oldValue, options);\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (me.#isUpdatePending === false) {\r\n            me.#updatePromise = me.#enqueueUpdate();\r\n        }\r\n    }\r\n\r\n    performUpdate() {\r\n\r\n        const me = this;\r\n        if (!me.#isUpdatePending) return;\r\n\r\n        if (!me.#hasUpdated) {\r\n\r\n            // Mixin instance properties once, if they exist.\r\n            if (me.#instanceProperties) {\r\n                for (const [p, value] of me.#instanceProperties) {\r\n                    this[p] = value;\r\n                }\r\n                me.#instanceProperties = undefined;\r\n            }\r\n\r\n            const elementProps = me.constructor[elementProperties];\r\n            if (elementProps.size > 0) {\r\n                for (const [p, options] of elementProps) {\r\n                    if (\r\n                        options.wrapped === true &&\r\n                        !me.#changedProperties.has(p) &&\r\n                        me[p] !== undefined\r\n                    ) {\r\n                        me.#changeProperty(p, this[p], options);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let shouldUpdate = false;\r\n        const changedProperties = me.#changedProperties;\r\n        try {\r\n            shouldUpdate = me.shouldUpdate(changedProperties);\r\n            if (shouldUpdate) {\r\n                me.willUpdate(changedProperties);\r\n                me.#controllers?.forEach((c) => c.hostUpdate?.());\r\n                me.update(changedProperties);\r\n            } else {\r\n                me.#markUpdated();\r\n            }\r\n        } catch (e) {\r\n            shouldUpdate = false;\r\n            me.#markUpdated();\r\n            throw e;\r\n        }\r\n\r\n        if (shouldUpdate) {\r\n            me.#didUpdate(changedProperties);\r\n        }\r\n    }\r\n\r\n    // ******************************\r\n    // PRIVATE FUNCTIONS \r\n    // ******************************\r\n\r\n    #didUpdate(changedProperties) {\r\n        const me = this;\r\n        me.#controllers?.forEach((c) => c.hostUpdated?.());\r\n        if (!me.#hasUpdated) {\r\n            me.#hasUpdated = true;\r\n            me.firstUpdated(changedProperties);\r\n        }\r\n        me.updated(changedProperties);\r\n    }\r\n\r\n    #markUpdated() {\r\n        const me = this;\r\n        me.#changedProperties = new Map();\r\n        me.#isUpdatePending = false;\r\n    }\r\n\r\n    async #enqueueUpdate() {\r\n        const me = this;\r\n        me.#isUpdatePending = true;\r\n        try {\r\n            await me.#updatePromise;\r\n        } catch (e) {\r\n            Promise.reject(e);\r\n        }\r\n        const result = me.scheduleUpdate();\r\n\r\n        if (result != null) {\r\n            await result;\r\n        }\r\n        return !me.#isUpdatePending;\r\n    }\r\n\r\n    #changeProperty(name, oldValue, options) {\r\n        const me = this;\r\n        if (!me.#changedProperties.has(name)) {\r\n            me.#changedProperties.set(name, oldValue);\r\n        }\r\n\r\n        if (options.reflect === true && me.#reflectingProperty !== name) {\r\n            (me.#reflectingProperties ??= new Set()).add(name);\r\n        }\r\n    }\r\n\r\n    #attributeToProperty(name, value) {\r\n        const me = this;\r\n        const ctor = me.constructor;\r\n        const propName = (ctor[attributeToPropertyMap]).get(name);\r\n        if (propName !== undefined && me.#reflectingProperty !== propName) {\r\n            const options = ctor.getPropertyOptions(propName);\r\n            const converter =\r\n                typeof options.converter === 'function'\r\n                    ? { fromAttribute: options.converter }\r\n                    : options.converter?.fromAttribute !== undefined\r\n                        ? options.converter\r\n                        : defaultConverter;\r\n            // mark state reflecting\r\n            me.#reflectingProperty = propName;\r\n            me[propName] = converter?.fromAttribute(value, options.type);\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #propertyToAttribute(name, value) {\r\n        const me = this;\r\n        const elementProps = me.constructor[elementProperties];\r\n        const options = elementProps?.get(name);\r\n        const attr = attributeNameForProperty(name, options);\r\n        if (attr !== undefined && options.reflect === true) {\r\n            const converter =\r\n                (options.converter)?.toAttribute !==\r\n                    undefined\r\n                    ? (options.converter)\r\n                    : defaultConverter;\r\n            const attrValue = converter?.toAttribute(value, options.type);\r\n\r\n            me.#reflectingProperty = name;\r\n            if (attrValue == null) {\r\n                me.removeAttribute(attr);\r\n            } else {\r\n                me.setAttribute(attr, attrValue);\r\n            }\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #saveInstanceProperties() {\r\n        const me = this;\r\n        const instanceProperties = new Map();\r\n        const elementProps = me.constructor[elementProperties];\r\n        for (const p of elementProps.keys()) {\r\n            if (Object.hasOwn(me, p)) {\r\n                instanceProperties.set(p, me[p]);\r\n                delete me[p];\r\n            }\r\n        }\r\n        if (instanceProperties.size > 0) {\r\n            me.#instanceProperties = instanceProperties;\r\n        }\r\n    }\r\n\r\n    #initialize() {\r\n        const me = this;\r\n        me.#updatePromise = new Promise((res) => me.enableUpdating = res);\r\n        me.#changedProperties = new Map();\r\n        me.#saveInstanceProperties();\r\n        me.requestUpdate();\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity();\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = { value: o };\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSData } from '../../base/GSData.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\nimport { AdoptedController } from '../../controllers/AdoptedController.mjs';\r\nimport { AttributeController } from '../../controllers/AttributeController.mjs';\r\nimport { CopySelectController } from './controllers/CopySelectController.mjs';\r\nimport { MaskController } from './controllers/MaskController.mjs';\r\nimport { PasswordController } from './controllers/PasswordController.mjs';\r\nimport { NumberController } from './controllers/NumberController.mjs';\r\nimport { TextController } from './controllers/TextController.mjs';\r\nimport { ListController } from './controllers/ListController.mjs';\r\n\r\nimport { ReactiveInput } from './ReactiveInput.mjs';\r\n\r\n/**\r\n * Extended HTMLInputElement with controllers support\r\n * adding various feature such as masked input support \r\n */\r\nexport class GSInputElement extends ReactiveInput {\r\n\r\n  static properties = {\r\n    autocopy: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    autoselect: { type: Boolean },\r\n    reveal: { type: Boolean },\r\n    mask: { reflect: true }\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n\r\n  #copyselect;\r\n  #maskController;\r\n  #passwordController;\r\n  #numberController;\r\n  #textController;\r\n  #listController;\r\n\r\n  constructor() {\r\n    super();\r\n    this.#copyselect = new CopySelectController(this);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n\r\n    super.willUpdate(changed);\r\n\r\n    if (changed.has('mask') && this.mask) {\r\n      this.placeholder = this.mask;\r\n      this.#maskController ??= new MaskController(this);\r\n      this.#maskController.initRules();\r\n    }\r\n\r\n    if (this.list) {\r\n      this.#listController ??= new ListController(this);\r\n    }\r\n\r\n    switch (this.type) {\r\n      case 'text':\r\n        this.#textController ??= new TextController(this);\r\n        break;\r\n      case 'password':\r\n        this.#passwordController ??= new PasswordController(this);\r\n        break;\r\n      case 'number':\r\n        this.#numberController ??= new NumberController(this);\r\n        break;\r\n    }\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus) this.focus();\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value) {\r\n    this.#adopted ??= new AdoptedController(me);\r\n    return this.#adopted.style(id, value);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  get owner() {\r\n    const own = GSDOM.root(this);\r\n    return GSDOM.unwrap(own);\r\n  }\r\n\r\n  get raw() {\r\n    return super.value;\r\n  }\r\n\r\n  get value() {\r\n    return this.#maskController ? this.#maskController.value : super.value;\r\n  }\r\n\r\n  set value(val) {\r\n    super.value = val;\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSInputElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   */\r\n  static define(name, clazz) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, { extends: 'input' });\r\n    }\r\n  }\r\n\r\n  static {\r\n    GSInputElement.define('gs-ext-input', GSInputElement);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined, repeat } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSBreadcrumbElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n    color: { ...color },\r\n    divider: { reflect: true },\r\n    spacing: { reflect: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.spacing = 1;\r\n    me.divider = 'chevron-right';\r\n    me.#updateChildren();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#updateChildren();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<nav part=\"base\" class=\"breadcrumb\" @click=\"${me.#onClick}\" dir=\"${ifDefined(me.direction)}\"><slot>\r\n      ${repeat(me.data || [], (item) => item, (item) => html`\r\n        <gs-breadcrumb-item  \r\n        href=\"${item.href}\"\r\n        color=\"${item.color}\"\r\n        .data=${item}     \r\n        .active=${item.active}\r\n        .divider=\"${item.divider || me.divider}\"\r\n        .spacing=\"${item.spacing || me.spacing}\">\r\n          ${item.$text}\r\n        </gs-breadcrumb-item>\r\n      `)}\r\n    </slot></nav>`;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #updateChildren() {\r\n    const me = this;\r\n    me.queryAll('gs-breadcrumb-item').forEach(el => {\r\n      el.divider = me.divider;\r\n      el.spacing = me.spacing;\r\n      el.color = me.color;\r\n    });\r\n  }\r\n\r\n  #onClick(e) {\r\n    const el = e.target.closest('gs-bradcrumb-item');\r\n    el?.handle(e);\r\n  } \r\n\r\n  static {\r\n    this.define('gs-breadcrumb');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSBreadcrumbItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    color: { ...color },\r\n    data: { state: true, type: Object },\r\n    active: { reflect: true, type: Boolean },\r\n    divider: { state: true, type: Boolean },\r\n    spacing: { state: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div part=\"base\" class=\"breadcrumb-item ${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <span part=\"prefix\"><slot name=\"prefix\"></slot></span>        \r\n        ${me.#label}\r\n        <span part=\"suffix\"><slot name=\"suffix\"></slot></span>\r\n        <span part=\"separator\"><slot name=\"separator\">${me.#separator}</slot></span>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #label() {\r\n    const me = this;\r\n    if (me.active) return html`<slot></slot>`;\r\n    me.data.url = me.data.url || me.href;\r\n    me.data.part = 'label';\r\n    return GSLinklement.generate(me.data, {})\r\n  }\r\n\r\n  get #separator() {\r\n    const me = this;\r\n    return me.nextElementSibling && me.divider ? html`<gs-icon size=\"7\" color=\"${me.color}\" css=\"mx-${me.spacing}\" name=\"${me.divider}\"></gs-icon>` : '';\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.query('a', true), e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-breadcrumb-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/TimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSTimeFormat extends GSElement {\r\n\r\n    static properties = {\r\n        interval: {reflect:true, type:Number},\r\n        locale: {reflect:true},\r\n    }\r\n\r\n    #id = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.interval = 1;\r\n        this.locale = GSUtil.locale;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const date = new Date();\r\n        return date.toLocaleTimeString(this.locale);\r\n    }    \r\n\r\n    start() {\r\n        const me = this;\r\n        if (me.interval >0 && me.#id === 0) {\r\n            me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n        } else {\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n        this.#id = 0;\r\n    }\r\n    \r\n    #update() {\r\n       requestAnimationFrame(() => this.requestUpdate());\r\n    }\r\n\r\n    static {\r\n        this.define('gs-time-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/DateFormat\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDate } from '../../base/GSDate.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSDateFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        format: {},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.locale = navigator.locale;\r\n        this.value = new Date();\r\n    }\r\n\r\n    renderUI() {\r\n        return this.result;\r\n    }    \r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.date;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get date() {\r\n        const me = this;\r\n        const o = Date.parse(me.value || new Date());\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n\r\n    static {\r\n        this.define('gs-date-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/YearFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSYearFormat extends GSElement {\r\n\r\n    static properties = {\r\n        offset: {type :Number},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n    }\r\n\r\n    renderUI() {\r\n        return this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        this.define('gs-year-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/CurrencyFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSCurrencyFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        currency: {},\r\n    }\r\n\r\n    renderUI() {\r\n        return this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-currency-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSCacheStyles } from \"../../base/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepElement class\r\n * @module components/steps/GSStepElement\r\n */\r\n\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepElement extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-primary';\r\n    static COMPLETED = 'text-bg-secondary';\r\n\r\n    static ICON_CSS = 'border rounded-circle fs-1';\r\n    static TITLE_CSS = 'mb-0 fs-6 mt-3 fw-bold';\r\n\r\n    static properties = {\r\n        title: {},\r\n        icon: {},\r\n        color: {},\r\n        iconCSS: { attribute: 'icon-css' },\r\n        titleCSS: { attribute: 'title-css' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const clazz = GSStepElement;\r\n        this.icon = clazz.INACTIVE;\r\n        this.iconCSS = clazz.ICON_CSS;\r\n        this.titleCSS = clazz.TITLE_CSS;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"step d-block w-100 text-center mb-4\"  dir=\"${ifDefined(me.direction)}\">\r\n            <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color || GSStepElement.INACTIVE}\">\r\n                    ${me.#renderIcon()}\r\n                </div>\r\n            </div>\r\n            <div class=\"step-title ${me.titleCSS}\">${me.translate(me.title)}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    #renderIcon() {\r\n        return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-step');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepsElement class\r\n * @module components/steps/GSStepsElement\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSStepStyle } from \"./StepStyle.mjs\";\r\nimport GSStepElement from './Step.mjs';\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepsElement extends GSElement {\r\n\r\n    static CSS = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n\r\n    #index = -1;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldUpdate(changedProperties) { \r\n        return this.steps.length > 0;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\"><slot></slot></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        return this.mapCSS(GSStepsElement.CSS, super.renderClass());\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get length() {\r\n        return this.steps.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length - 1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isLast) return false;\r\n        if (me.#index > - 1) me.current.color = GSStepElement.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStepElement.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStepElement.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStepElement.SELECTED;\r\n        });\r\n    }\r\n\r\n    static {\r\n        GSStepStyle.style;\r\n        this.define('gs-steps', GSStepsElement);\r\n    }\r\n\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\nexport class GSNotificationElement extends GSElement {\r\n\r\n    static TOP_START = \"position-fixed top-0 start-0\";\r\n    static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n    static TOP_END = \"position-fixed top-0 end-0\";\r\n\r\n    static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n    static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n    static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n    \r\n    static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n    static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n    static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n    static DEFAULT = GSNotificationElement.BOTTOM_END;\r\n\r\n    static properties = {\r\n        position: { reflect: true },\r\n        native: { reflect: true, type: Boolean }\r\n    };\r\n\r\n    #list = new Set();\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = 'p-3';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n            class=\"toast-container z-10k ${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        return me.mapCSS(me.#positionCSS, super.renderClass());\r\n    }    \r\n\r\n    get #positionCSS() {\r\n        const clazz = GSNotificationElement;\r\n        const val = this.position || clazz.DEFAULT;\r\n        return val.indexOf('_') > 0 && clazz[val] ? clazz[val] : val;\r\n    }\r\n\r\n    clear() {\r\n        this.queryAll('gs-toast').forEach(el => el.dismiss());\r\n    }\r\n\r\n    info(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n    }\r\n\r\n    success(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n    }\r\n\r\n    warn(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n    }\r\n\r\n    danger(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n    }\r\n\r\n    primary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n    }\r\n\r\n    secondary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n    }\r\n\r\n    dark(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n    }\r\n\r\n    light(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n    }\r\n\r\n    /**\r\n     * Main function to show notification. \r\n     * It has support for Bootstrap based and web based notifications.\r\n     * \r\n     * @async\r\n     * @param {String} title Notification title\r\n     * @param {String} message Notification message\r\n     * @param {String} css CSS styling (web only)\r\n     * @param {Boolean} closable Can user close it (web only)\r\n     * @param {Number} timeout Timeout after which to close notification  (default 2 sec)\r\n     * @param {Number} delay Timeout after which to show notification (default 1 sec)\r\n     * @param {Object} options Options for native Notification\r\n     * @returns {Promise<Notification|GSToast>}\r\n     */\r\n    async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n        if (!message) return;\r\n        const me = this;\r\n        if (me.native) {\r\n            let sts = await GSNotificationElement.requestPermission();\r\n            if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n            if (sts) return sts;\r\n        }\r\n        return me.#showWeb(title, message, css, closable, timeout, delay);\r\n    }\r\n\r\n    #showWeb(title, message, css, closable, timeout, delay) {\r\n        const me = this;\r\n        const tpl = `<gs-toast css=\"${css}\"  opened ${closable ? 'closable' : ''} timeout=\"${timeout}\"  delay=\"${delay}\" message=\"${message}\" title=\"${title}\" locale=\"${me.locale}\" ></gs-toast>`;\r\n        const el = GSDOM.parse(tpl, true);\r\n        requestAnimationFrame(async () => {\r\n            await me.#delay(delay);\r\n            const toast = me.#dialogToast;\r\n            if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n            toast.appendChild(el);\r\n        });\r\n        return el;\r\n    }\r\n\r\n    async #showNative(title, message, timeout, delay, options = {}) {\r\n        const me = this;\r\n        await me.#delay(delay);\r\n        options.body = options.body || message;\r\n        const notification = new Notification(title, options);\r\n        me.#list.add(notification);\r\n        const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n        notification.addEventListener('close', callback);\r\n        if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n        return notification;\r\n    }\r\n\r\n    get #dialogToast() {\r\n        const dlg = customElements.get('gs-dialog')?.top;\r\n        return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n    }\r\n\r\n    async #delay(delay = 0) {\r\n        if (GSUtil.isNumber(delay) && delay > 0) await GSUtil.timeout(delay * 1000);\r\n    }\r\n\r\n    #clearNative() {\r\n        const me = this;\r\n        me.notification.close();\r\n        me.owner.#list.delete(me.notification);\r\n        if (me.notification.iid) clearTimeout(me.notification.iid);\r\n    }\r\n\r\n    /**\r\n     * Clear all triggered notifications\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n        me.#list.forEach(nn => nn.close());\r\n        me.#list.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is supported\r\n     * @returns {Boolean} \r\n     */\r\n    static get isNativeSupported() {\r\n        return \"Notification\" in self;\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is allowed\r\n     * @returns {Boolean} \r\n     */\r\n    static get isGranted() {\r\n        return Notification.permission === \"granted\";\r\n    }\r\n\r\n    /**\r\n     * Request useage for browser native notification\r\n     * \r\n     * @async\r\n     * @returns {Promise<boolean>} Return granted status\r\n     */\r\n    static async requestPermission() {\r\n        const clazz = GSNotificationElement;\r\n        if (!clazz.isNativeSupported) return false;\r\n        if (!clazz.isGranted) await Notification.requestPermission();\r\n        return clazz.isGranted;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-notification');\r\n    }\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNotificationElement } from './Notification.mjs';\r\n\r\nexport class GSToastElement extends GSElement {\r\n\r\n    static properties = {\r\n        closable: { reflect: true, type: Boolean },\r\n        opened: { reflect: true, type: Boolean },\r\n        message: { reflect: true },\r\n        title: { reflect: true },\r\n        delay: { reflect: true, type: Number },\r\n        timeout: { reflect: true, type: Number }\r\n    }\r\n\r\n    #pending = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.timeout = 2;\r\n        me.delay = 2;\r\n        me.auto = true; \r\n    }\r\n\r\n    shouldUpdate(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = changedProperties.has('opened');\r\n        if (me.delay > 0 && me.opened && visibilityChange) {\r\n            me.#pending = true;\r\n            me.#pendingUpdate();\r\n        }\r\n        return me.#validParent && (!me.#pending);\r\n    }\r\n\r\n    async #pendingUpdate() {\r\n        const me = this;\r\n        await GSUtil.timeout(me.delay * 1000);\r\n        me.#pending = false;\r\n        me.requestUpdate();\r\n    }\r\n\r\n    async updated(changedProperties) {\r\n        const me = this;\r\n        if (me.timeout > 0) {\r\n            await GSUtil.timeout(me.timeout * 1000);\r\n            me.opened = false;\r\n            await GSUtil.timeout(GSDOM.SPEED);\r\n            me.remove();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return me.title ? me.#renderWithHeader() : me.#renderSimple();\r\n    }\r\n\r\n    #renderWithHeader() {\r\n        const me = this;\r\n        return html`\r\n        <div dir=\"${ifDefined(me.direction)}\"\r\n            class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n            <div class=\"toast-header\">\r\n                ${me.translate(me.title)}\r\n                <slot name=\"header\"></slot>\r\n                ${me.closable ? me.#button : ''}\r\n            </div>\r\n            <div class=\"toast-body\">\r\n                ${me.translate(me.message)}\r\n                <slot name=\"body\"></slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    #renderSimple() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.translate(me.message)}\r\n              <slot name=\"body\"></slot>\r\n              </div>\r\n              ${me.closable ? me.#button : ''}\r\n          </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': me.opened,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    dismiss() {\r\n        this.opened = false;\r\n    }\r\n\r\n    get #button() {\r\n        const me = this;\r\n        return html`<button type=\"button\" class=\"btn-close me-2 m-auto\" @click=\"${me.dismiss}\"></button>`;\r\n    }\r\n\r\n    get #validParent() {\r\n        return this.parentElement instanceof GSNotificationElement;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-toast');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller managing data tree navigation.\r\n * Controller is added to every gs-tree-node and \r\n * reacts on Tree node changes to update UI\r\n */\r\nexport class AbstractTreeController {\r\n\r\n    #host;\r\n    #node;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        host.addController(me);\r\n    }\r\n    \r\n    hostConnected() {\r\n        const me = this;\r\n        me.#node = me.#host.node;\r\n        me.#addNodeController(me);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        const me = this;\r\n        me.#removeNodeController(me);\r\n        me.#host.removeController(me);\r\n    }\r\n\r\n    // before rendering\r\n    hostUpdate() {\r\n        const me = this;\r\n        const oldNode = me.#node;\r\n        me.#node = me.#host.node;\r\n        if (oldNode != me.#node) {\r\n            me.#removeNodeController(me);\r\n            me.#addNodeController(me);\r\n        }\r\n    }\r\n\r\n    // link Tree node callbacks with controller and component\r\n    #addNodeController(controller) {\r\n        this.#host.node?.addController?.(controller);\r\n    }\r\n\r\n    // unlink Tree node callbacks with controller and component\r\n    #removeNodeController(controller) {\r\n        this.#node?.removeController?.(controller);\r\n    }\r\n\r\n    host(node) {\r\n        return node[Symbol.for('gs-element')] || this.#host;\r\n    }\r\n\r\n    match(node) {\r\n        const host = this.host(node);\r\n        return host?.node === node;\r\n    }\r\n\r\n    get store() {\r\n        return this.#host.dataController?.store;\r\n    }\r\n\r\n    requestUpdate(node) {\r\n        if (this.match(node)) this.host(node).requestUpdate();\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { AbstractTreeController } from './AbstractTreeController.mjs';\r\n\r\n/**\r\n * Controller managing data TreeNode callbacks to reflect UI.\r\n */\r\nexport class TreeController extends AbstractTreeController {\r\n\r\n    constructor(host) {\r\n        super(host);\r\n    }\r\n\r\n    #toggleState(node, state = false) {\r\n        const el = this.host(node);\r\n        if (el) el.loading = state;\r\n    }\r\n\r\n    // Tree controller callbacks\r\n    onLoad(node) {\r\n        this.#toggleState(node, true);\r\n    }\r\n\r\n    onRefresh(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onAppend(node, addedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onInsert(node, insertedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onExpand(node) {\r\n        const store = this.store;\r\n        if (store) {\r\n            store.onExpand(node);\r\n        } else {\r\n            this.requestUpdate(node);\r\n        }\r\n    }\r\n\r\n    onCollapse(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onFocusChanged(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onSelectionChanged(node, selectedNode) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onRemove(node) {\r\n        if (this.match(node)) this.host(node).remove();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { Tree } from \"../helpers/Tree.mjs\";\r\n\r\n/**\r\n * A module loading TreeNode class\r\n * @module data/TreeNode\r\n */\r\n\r\n/**\r\n * UI mediator between Tree linked nodes and WebComponents\r\n * @Class\r\n */\r\nexport class TreeNode extends Tree {\r\n\r\n    #multi = false;\r\n    #opened = false;\r\n    #focused = false;\r\n    #selected = false;\r\n    \r\n    #focusedNode = undefined;\r\n    #selectedNode = undefined;\r\n    #controllers = undefined;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        super(key, value, parent, level);\r\n\r\n        if (value?.select === true || (this.multi && parent?.selected)) this.selected = true;\r\n        if (value?.focus === true) this.focused = true;\r\n        if (value?.open === true) this.opened = true;\r\n    }\r\n\r\n    addController(controller) {\r\n        const root = this.root;\r\n        (root.#controllers ??= new Set()).add(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.root.#controllers?.delete(controller);\r\n    }\r\n\r\n    /**\r\n     * Is multi selection available\r\n     */\r\n    get multi() {\r\n        return this.root.#multi === true;\r\n    }\r\n\r\n    set multi(val) {\r\n        this.root.#multi = val === true;\r\n    }\r\n\r\n    get visible() {\r\n        if (this.level < 0) return true;\r\n        return this.parent?.opened;\r\n    }\r\n\r\n    /**\r\n     * select single node, removing seelction flag from all other nodes\r\n     */\r\n    get opened() {\r\n        if (this.level < 0) return true;\r\n        return this.isLeaf ? this.parent?.opened : this.#opened;\r\n    }\r\n\r\n    set opened(val) {\r\n        val = val === true;\r\n        if (val) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus single node, removing focus flag from all other nodes\r\n     */\r\n    get focused() {\r\n        return this.#focused;\r\n    }\r\n\r\n    set focused(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const changed = this.#focused != val;\r\n        const focusedNode = root.focusedNode();\r\n        \r\n        root.#focusedNode = undefined;        \r\n        this.#focused = val;\r\n        if (focusedNode && focusedNode !== this) {\r\n            focusedNode.focused = false;\r\n        }\r\n\r\n        if (val) root.#focusedNode = this;\r\n        if (changed) root.#controllers?.forEach((c) => c.onFocusChanged?.(this));\r\n    }\r\n\r\n    /**\r\n     * Select single or multi node, depending on multi selection flag\r\n     * If single, remove selection flag from all other nodes\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    set selected(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const selectedNode = root.selectedNode();\r\n        const changed = this.#selected != val;\r\n        this.#selected = val;\r\n        if (val) {\r\n            if (selectedNode && selectedNode !== this && !root.multi) {\r\n                selectedNode.selected = false;\r\n            }\r\n            root.#selectedNode = this;\r\n        }\r\n        if (changed) {\r\n            root.#controllers?.forEach((c) => c.onSelectionChanged?.(this, selectedNode));\r\n            if (root.multi) root.#controllers?.forEach((c) => c.onSelectionChanged?.(this.parent, selectedNode));\r\n        } \r\n    }\r\n\r\n    get isPartialySelected() {\r\n        return this.selected && this.hasChildren && this.nodes.length > this.nodes.filter(n => n.selected).length;\r\n    }\r\n\r\n    /* hide from public\r\n    get host() {\r\n        return this[Symbol.for('gs-element')];\r\n    }\r\n\r\n    set host(el) {\r\n        this[Symbol.for('gs-element')] = el;\r\n    }\r\n    */\r\n\r\n    selectAll() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            this.deselectAll();\r\n            this.selected = true;\r\n            return\r\n        }\r\n        this.#selectionFlag(true);\r\n        root.#selectedNode = this;\r\n        root.#controllers?.forEach((c) => c.onSelectAll?.(root));\r\n    }\r\n\r\n    deselectAll() {\r\n        const root = this.root;\r\n        this.#selectionFlag(false);\r\n        root.#selectedNode = undefined;\r\n        root.#controllers?.forEach((c) => c.onDeselectAll?.(root));\r\n    }\r\n\r\n    /**\r\n     * Return last focused node\r\n     * @returns \r\n     */\r\n    focusedNode() {\r\n        const node = this.root.#focusedNode;\r\n        return node?.focused ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * Return last selected node\r\n     * @returns \r\n     */\r\n    selectedNode() {\r\n        const node = this.root.#selectedNode;\r\n        return node?.selected ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * List all selected nodes.\r\n     * TODO; refactor when Iterator.filter become available \r\n     * @returns \r\n     */\r\n    selectedNodes() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            const node = root.selectedNode()\r\n            return node?.selected ? [node] : [];\r\n        }\r\n        const result = [];\r\n        for (let node of root.walk()) {\r\n            if (node.selected) result.push(node);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Call from external controller data must be refresshed (to notify UI optionally)\r\n     * @param {*} root \r\n     */\r\n    refresh(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onRefresh?.(this));\r\n    }\r\n\r\n    /**\r\n     * Notify controllers about data loading (from async controller)\r\n     * @param {*} root \r\n     */\r\n    loading(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onLoad?.(this));\r\n    }\r\n\r\n    expandAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.expand(root);\r\n        }\r\n    }\r\n\r\n    collapseAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.collapse(root);\r\n        }\r\n    }\r\n\r\n    expand(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        if (!me.parent?.opened) {\r\n            me.parent?.expand(root);\r\n        }\r\n        const update = !me.opened;\r\n        me.#opened = true;\r\n        if (update) me.#expanded(root);\r\n        //me.nodes?.filter( n => !n.opened).forEach(c => c.refresh(root));\r\n        me.nodes?.forEach(c => c.refresh(root));\r\n    }\r\n\r\n    collapse(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        const update = me.#opened || me.parent.#opened;\r\n        me.nodes?.filter(n => n.opened || n.parent.opened).forEach(o => o.collapse(root));\r\n        //me.nodes?.forEach(o => o.collapse(root));\r\n        me.#opened = false;\r\n        if (update) me.#collapsed(root);\r\n    }\r\n\r\n    select(val = true) {\r\n        this.selected = val === true;\r\n    }\r\n\r\n    #expanded(root) {\r\n        root.#controllers?.forEach((c) => c.onExpand?.(this));\r\n    }\r\n\r\n    #collapsed(root) {\r\n        root.#controllers?.forEach((c) => c.onCollapse?.(this));\r\n    }\r\n\r\n    release() {\r\n        if (this.#selected) this.selected = false;\r\n        super.release();\r\n    }\r\n\r\n    append(key, value = key) {\r\n        const me = this;\r\n        const node = super.append(key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onAppend?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    insert(parentNodeKey, key, value = key) {\r\n        const me = this;\r\n        const node = super.insert(parentNodeKey, key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onInsert?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    remove() {\r\n        const node = super.remove();\r\n        if (node) this.root.#controllers?.forEach((c) => c.onInsert?.(node));\r\n        return node;\r\n    }\r\n\r\n    #selectionFlag(val = false) {\r\n        val = val === true\r\n        for (let node of this.walk()) {\r\n            node.selected = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) TreeNode.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.nodes?.map(o => o.toJSON()) || {};\r\n        const obj = Object.assign({\r\n            key: this.key,\r\n            opened: this.#opened,\r\n            focused: this.#focused,\r\n            selected: this.#selected,\r\n            items: undefined\r\n        }, this.value);\r\n        obj.items = this.nodes?.map(o => o.toJSON());\r\n        return obj;\r\n    }\r\n\r\n    static get root() {\r\n        return new TreeNode(null, null, null, -1);\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof TreeNode;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) return TreeNode.from(TreeNode.root, raw);\r\n            raw.forEach(o => TreeNode.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        obj.leaf = !Array.isArray(items);\r\n        const tree = new TreeNode(obj.key, obj, data ? parent : undefined);\r\n        if (items) TreeNode.from(tree, items);\r\n        if (hasParent) parent.append(tree);\r\n        return tree;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../../lib.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSTreeItemElement extends GSElement {\r\n\r\n  /*\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n    */\r\n\r\n  static properties = {\r\n    loading: { state: true },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('node')) this.node[Symbol.for('gs-element')] = this;\r\n  }\r\n\r\n  updated() {\r\n    if (this.focused) this.query('a')?.focus();\r\n    this.dataset.visible = this.visible;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const opt = me.value || {};\r\n    opt.tooltip = me.translate(opt.tooltip)\r\n    opt.title = me.translate(opt.title)\r\n    const before = me.loading ? me.#renderSpinner(node.level) : me.#renderIcon(node.level);\r\n    return GSLinklement.generate(opt, me.renderClass(), before);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const opt = {\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      'user-select-none  ': true,\r\n      'border-0': me.#border ? false : true,\r\n      'gs-hide': !me.visible\r\n    };\r\n    return me.mapCSS(me.#cssFocus, me.mapCSS(me.#cssSelected, opt, me.selected && !me.multiselect), me.focused);\r\n  }\r\n\r\n  /**\r\n   * Toggle folder\r\n   */\r\n  toggle() {\r\n    this.opened ? this.close() : this.open();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open() {\r\n    this.#status(true);\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   */\r\n  close() {\r\n    this.#status(false);\r\n  }\r\n\r\n  focus(val = true) {\r\n    if (val) super.focus();\r\n    this.focused = val == true;\r\n  }\r\n\r\n  select(val = true) {\r\n    this.selected = val == true;\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.querySelector('a'), e);\r\n  }\r\n\r\n  get isLeaf() {\r\n    return this.node?.isLeaf;\r\n  }\r\n\r\n  get isFolder() {\r\n    return !this.isLeaf;\r\n  }\r\n\r\n  get key() {\r\n    return this.node?.key;\r\n  }\r\n\r\n  get value() {\r\n    return this.node?.value || {};\r\n  }\r\n\r\n  get level() {\r\n    return this.node?.level || -1;\r\n  }\r\n\r\n  get focused() {\r\n    return this.node?.focused;\r\n  }\r\n\r\n  get visible() {\r\n    const parent = this.parent;\r\n    return parent?.opened || parent?.level === -1;\r\n  }\r\n\r\n  get parent() {\r\n    return this.node?.parent;\r\n  }\r\n\r\n  get parentItem() {\r\n    const item = this.parent?.[Symbol.for('gs-element')];\r\n    return item instanceof GSTreeItemElement ? item : undefined;\r\n  }\r\n\r\n  set focused(val) {\r\n    val = val === true;\r\n    this.node.focused = val;\r\n  }\r\n\r\n  get selected() {\r\n    return this.node?.selected;\r\n  }\r\n\r\n  set selected(val) {\r\n    val = val === true;\r\n    const me = this;\r\n    if (me.isFolder && me.owner.leaf) val = false;\r\n\r\n    if (me.multiselect) {\r\n      if (val) {\r\n        me.node.selectAll();\r\n      } else {\r\n        me.node.deselectAll();\r\n      }\r\n    } else {\r\n      me.node.selected = val;\r\n    }\r\n  }\r\n\r\n  get opened() {\r\n    return this.node?.opened;\r\n  }\r\n\r\n  set opened(val) {\r\n    this.#status(val === true);\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tree');\r\n  }\r\n\r\n  get multiselect() {\r\n    return this.owner.multiselect;\r\n  }\r\n\r\n  get #cssFocus() { return this.owner.cssFocus || 'focus-ring'; }\r\n  get #cssSelected() { return this.owner.cssSelected || 'active'; }\r\n  get #cssCheck() { return this.owner.cssCheck || ''; }\r\n  get #checkColor() { return this.owner.checkColor || 'secondary'; }\r\n  get #checkColorSelected() { return this.owner.checkColorSelected || 'primary'; }\r\n\r\n  get #border() {\r\n    return this.value?.border === true || this.owner.border === true;\r\n  }\r\n\r\n  get #icon() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const data = me.value;\r\n    const ui = me.owner;\r\n    let itemIco = data.icon || ui.itemIcon;\r\n    if (node.isFolder) itemIco = node.opened ? (data.openIcon || ui.openIcon) : (data.closeIcon || ui.closeIcon);\r\n    return itemIco;\r\n  }\r\n\r\n  #renderIndent(level) {\r\n    return html`<gs-indent size=\"${level}\"></gs-indent>`;\r\n  }\r\n\r\n  #renderSpinner(level) {\r\n    return html`${this.#renderIndent(level)}<gs-spinner small></gs-spinner>`;\r\n  }\r\n\r\n  #renderIcon(level) {\r\n    return html`${this.#renderIndent(level)}${this.#renderMulti()}<gs-icon size=\"5\" name=\"${this.#icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderMulti() {\r\n    const me = this;\r\n    if (!me.multiselect) return '';\r\n    const color = me.selected ? me.#checkColorSelected : me.#checkColor;\r\n    const icon = me.node.isPartialySelected ? 'dash-square-fill' : me.selected ? 'check-square-fill' : 'square';\r\n    return html`<gs-icon size=\"6\" data-type=\"state\" \r\n                css=\"me-1 text-${color} ${me.#cssCheck}\"\r\n                name=\"${icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #status(val = false) {\r\n    const me = this;\r\n    if (me.node?.isFolder) {\r\n      me.node.opened = val;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, css, createRef, ref, repeat, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { TreeController } from './controllers/TreeController.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSTreeElement extends GSElement {\r\n\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n\r\n  static shared = {\r\n    itemIcon: { attribute: 'icon-item' },\r\n    closeIcon: { attribute: 'icon-close' },\r\n    openIcon: { attribute: 'icon-open' },\r\n    cssCheck: { attribute: 'css-check' },\r\n    cssFocus: { attribute: 'css-focus' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    checkColor: { attribute: 'check-color', ...color },\r\n    checkColorSelected: { attribute: 'check-color-selected', ...color },\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode },\r\n    border: { type: Boolean, reflect: true },\r\n    guide: { type: Boolean, reflect: true },\r\n    leaf: { type: Boolean, reflect: true },\r\n    multiselect: { type: Boolean, reflect: true },\r\n    circular: { type: Boolean, reflect: true },\r\n    ...GSTreeElement.shared\r\n  }\r\n\r\n  // GS-ITEM attributes mapping\r\n  static options = {\r\n    ...GSTreeElement.shared,\r\n    css: {},\r\n    icon: {},\r\n    color: {},\r\n    title: {},\r\n    tooltip: {},\r\n    opened: { type: Boolean },\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  #queued = false;\r\n  #listRef = createRef();\r\n\r\n  #controller = null;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.leaf = false;\r\n    me.multiselect = false;\r\n    me.data = GSDOM.toJson(me, true, true).items;\r\n    me.node = new TreeNode(null, { '#tagName': this.tagName }, null, -1);\r\n    me.itemIcon = 'file-earmark';\r\n    me.closeIcon = 'folder'; // caret-right; chevron-right\r\n    me.openIcon = 'folder2-open'; // caret-down; chevron-down\r\n    me.cssSelected = 'active'; // fw-bold\r\n    me.cssFocus = 'focus-ring';\r\n    me.node[Symbol.for('gs-element')] = me;\r\n    me.#controller = new TreeController(me);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n          class=\"treeview ${classMap(me.renderClass())}\"          \r\n          @click=\"${me.#onClick}\"\r\n          @keydown=\"${me.#onKeyDown}\"\r\n          @keyup=\"${me.#onKeyUp}\">\r\n          <div class=\"list-group\" ${ref(me.#listRef)}>\r\n          ${repeat(me.node.walk(me.node, false, false), (node) => node.key, (node) => html`\r\n            <gs-tree-item .node=\"${node}\"></gs-tree-item>\r\n          `)}\r\n          </div>    \r\n        </div>`;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data') && me.data && !me.#queued) {\r\n      me.#queued = true;\r\n      queueMicrotask(() => {\r\n        me.node.clear();\r\n        me.node.fromJSON(me.data);\r\n        me.#queued = false;\r\n        me.requestUpdate();\r\n      });\r\n    }\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('multiselect') && !this.multiselect) this.node?.deselectAll();\r\n    this.node.multi = this.multiselect;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    if (data instanceof TreeNode) {\r\n      if (data.root !== this.node) this.node = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n\r\n  next(expand = false) {\r\n    const me = this;\r\n    let item = me.nextItem;\r\n    if (!item & me.circular) item = me.#first;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (expand && me.focused?.isFolder) me.focused.open();\r\n    }\r\n    return me.focused;\r\n  }\r\n\r\n  previous(collapse = false) {\r\n    const me = this;\r\n    let item = me.previousItem;\r\n    if (!item & me.circular) item = me.#last;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (item.isFolder && collapse) item.close();\r\n    }\r\n    return me.focused;\r\n\r\n  }\r\n\r\n  expandAll() {\r\n    this.node?.expandAll();\r\n  }\r\n\r\n  collapseAll() {\r\n    this.node?.collapseAll();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open(path) {\r\n    const me = this;\r\n    me.focused?.open();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   * TODO - path navigation\r\n   */\r\n  close(path) {\r\n    const me = this;\r\n    me.focused?.close();\r\n  }\r\n\r\n  clear() {\r\n    this.node?.clear();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  reload() {\r\n    this.clear();\r\n    this.dataController?.read();\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host(this.node.selectedNode());\r\n  }\r\n\r\n  get focused() {\r\n    return this.#host(this.node.focusedNode());\r\n  }\r\n\r\n  /**\r\n   * Previous visible ge-node-item\r\n   */\r\n  get previousItem() {\r\n    return this.focused?.node.find(n => n?.visible, true, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  /**\r\n   * Next visible ge-node-item\r\n   */\r\n  get nextItem() {\r\n    return this.focused?.node.find(n => n?.visible, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  get #list() {\r\n    return this.#listRef.value;\r\n  }\r\n\r\n  get #first() {\r\n    return this.#list.firstElementChild;\r\n  }\r\n\r\n  get #last() {\r\n    return this.#list.lastElementChild;\r\n  }\r\n\r\n  #host(node) {\r\n    return node?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const isIcon = e.target.closest('gs-icon')?.dataset.type === 'state';\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!el.node) return;\r\n\r\n    const me = this;\r\n\r\n    if (me.multiselect) {\r\n      if (isIcon) el.select(!el.selected);\r\n    } else {\r\n      el.select(true);\r\n    }\r\n\r\n    const expandable = (me.multiselect && !isIcon) || (!me.multiselect);\r\n    if (el.isFolder && expandable) el.toggle();\r\n\r\n    el.focus();\r\n    el.handle(e);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    const me = this;\r\n    const el = me.focused;\r\n    if (!el) return;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n        me.next();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (el.isFolder) {\r\n          if (el.opened) {\r\n            me.close();\r\n          } else {\r\n            (el.parentItem || el)?.focus();\r\n          }\r\n        } else {\r\n          me.previous();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if (el.isFolder && !el.opened) {\r\n          me.open();\r\n        } else {\r\n          me.next();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!(el?.node)) return;\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        el.handle(e);\r\n        break;\r\n      case 'Tab':\r\n        el.focus();\r\n        break;\r\n      case 'Space':\r\n        el.select(this.multiselect ? !el.selected : true);\r\n        el.focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\n\r\nexport class GSChartElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/bootstrap-lit';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        config: {},\r\n        storage: {},\r\n        height: { type: Number },\r\n        width: { type: Number },\r\n        data: { type: Array },\r\n        options: { type: Object },\r\n    }\r\n\r\n    #canvasRef = createRef();\r\n    #chart = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.height = 0;\r\n        this.width = 0;\r\n        GSChartElement.#init();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#waitInit();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    shouldUpdate(changed) {\r\n        return GSChartElement.#isChart;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#render();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        const me = this;\r\n        if (changed.has('url') || changed.has('config')) me.#render();\r\n        if (changed.has('data') || changed.has('options')) me.#renderData(me.data, me.options);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<canvas ${ref(me.#canvasRef)} \r\n                class=\"${classMap(me.renderClass())}\"\r\n                width=\"${ifDefined(me.width > 0 ? me.width : false)}\" \r\n                height=\"${ifDefined(me.height > 0 ? me.height : false)}\" >\r\n            </canvas>`;\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.#canvasRef.value;\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    refresh() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    updateChart(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const options = await GSLoader.loadSafe(me.config, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.url, 'GET', null, true, []);\r\n        me.data = data;\r\n        me.options = options;\r\n    }\r\n\r\n    #renderData(data, options) {\r\n        const me = this;\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChartElement.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => o.data = sets.length === 1 ? data : data[i] || []);\r\n\r\n        if (me.#chart) return me.updateChart(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChartElement.#Chart(ctx, opt);\r\n    }\r\n\r\n    async #waitInit() {\r\n        if (!GSChartElement.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        this.requestUpdate();\r\n    }\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    static async #init() {\r\n        const me = GSChartElement;\r\n        if (me.URL_LIB === false) return;\r\n        if (me.#isChart || me.#initializing) return;\r\n        me.#initializing = true;\r\n        try {\r\n            const origin = GSChartElement.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);\r\n            me.#Chart = Chart;\r\n            me.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            me.#initializing = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert DOM tree into a JSON structure\r\n     * \r\n     * @param {HTMLElement} obj HTML element instance to convert\r\n     * @param {string} name DOM attribute name for object key\r\n     * @param {string} value DOM attribute name for object value\r\n     * @param {string} type DOM attribute name for object type\r\n     * @returns {object}\r\n     */\r\n    static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n        if (!(el instanceof HTMLElement)) return {};\r\n\r\n        const nameV = el.getAttribute(name);\r\n        const valV = el.getAttribute(value);\r\n        const typeV = el.getAttribute(type);\r\n\r\n        let obj = null;\r\n\r\n        switch (typeV) {\r\n            case 'array':\r\n                obj = [];\r\n                break;\r\n            case 'object':\r\n                obj = {};\r\n                break;\r\n            default:\r\n                return GSChartElement.#toType(valV, typeV);\r\n        }\r\n\r\n        const childs = Array.from(el.children);\r\n        const isArray = typeV === 'array';\r\n        const isObject = typeV === 'object';\r\n\r\n        childs.forEach(el => {\r\n            const _nam = el.getAttribute(name);\r\n            if (isArray) {\r\n                obj.push(GSChart.toJson(el, name, value, type));\r\n            } else if (isObject) {\r\n                const tmp = GSChartElement.toJson(el, name, value, type);\r\n                obj[_nam] = tmp;\r\n            } else {\r\n                const _val = el.getAttribute(value);\r\n                const _typ = el.getAttribute(type);\r\n                obj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    static #toType(val, type) {\r\n        switch (type) {\r\n            case 'boolean': return val === 'true';\r\n            case 'number': return parseFloat(val);\r\n            default: return val\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-chart');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#data = data;\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append: append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref, styleMap } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSMarkdownElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        history: { type: Number },\r\n        maxHeight: { type: Number, attribute: 'max-height' },\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    constructor() {\r\n        super();\r\n        this.history = 10;\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const me = this;\r\n        await me.#initLib();\r\n        if (globalThis.showdown) {\r\n            const opt = { tasklists: true, tables: true };\r\n            me.#converter = new globalThis.showdown.Converter(opt);\r\n            super.connectedCallback();\r\n        }\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('url')) {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url);\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const height = me.maxHeight > 0 ? `${me.maxHeight}px;` : false;\r\n        const opt = { 'max-height': height }\r\n        return html`<div ${ref(me.#containerRef)} class=\"overflow-auto ${classMap(me.renderClass())}\" style=\"${styleMap(opt)}\"><div/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        me.#onURL(url);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n\r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n\r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });\r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n            GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n\r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list = GSDOM.queryAll(me.#container, qry);\r\n        requestAnimationFrame(() => list.forEach(el => GSDOM.toggleClass(el, css)) );\r\n    }\r\n\r\n    #handleLinks() {\r\n        const me = this;\r\n        const links = GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n            .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')))\r\n            .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n            .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/'))\r\n            .forEach(el => GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me)));\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        if (me.#cache.length === 0 ) return me.#first;\r\n        const url = me.#cache.pop();\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if (me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdownElement.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-markdown');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSMonacoElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #editor = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = '';\r\n        this.theme = 'vs-dark';\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonacoElement.#init();\r\n        super.connectedCallback();\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.#onMonacoReady();\r\n        super.firstUpdated();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        if (changed.has('theme')) me.#onTheme(me.theme);\r\n        if (changed.has('target')) me.#onTarget(me.target);\r\n        if (changed.has('url')) me.#onURL(me.url);\r\n        if (changed.has('language')) me.#onLanguage(me.language);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#containerRef)} class=\"${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        return this.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    get owner() {\r\n        return this.parentElement;\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n\r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor?.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor?.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    static #initialized;\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonacoElement.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        const url = GSMonacoElement.URL_LIB;\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${url}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${url}'};\r\n                importScripts('${url}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({\r\n                paths: { 'vs': `${GSMonacoElement.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false }\r\n            });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static async #init() {\r\n        const me = GSMonacoElement;\r\n        if (me.#initialized) return;\r\n        me.#initEnv();\r\n        await me.#initLib();\r\n        await me.#initMonaco();\r\n        me.#initialized = true;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-monaco');\r\n    }\r\n\r\n}"],"names":["gsstyles","GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSUtil$1","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Date","Boolean","value","toString","val","trim","toLowerCase","str","obj","replace","x","g","split","reverse","join","word","toUpperCase","slice","map","i","capitalize","constructor","min","max","Math","match","dft","locale","isString","sep","numberSeparator","extractNumber","replaceAll","isNumber","url","test","startsWith","endsWith","pattern","charset","floor","random","length","navigator","language","languages","flags","RegExp","isStringEmpty","undefined","Intl","NumberFormat","format","DateTimeFormat","Array","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","separator","filter","capitalizeAll","tpl","params","names","keys","vals","values","Function","text","textArea","document","createElement","innerHTML","isStringNonEmpty","o","window","forEach","a","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","result","permissions","query","state","clipboard","writeText","readText","GSFunction$1","GSFunction","isFunction","includes","own","isFunctionDefined","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","from","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSID","prefx","next","s","l","h","charCodeAt","GSAttr$1","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","attributes","host","opt","recursive","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","children","proxify","safe","unsafe","dflt","default","multi","hasAttribute","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","first","getDay","mondayFirst","isMondayFirst","days","repeat","push","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","d","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","m","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","k","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Locale","weekInfo","firstDay","charAt","toLocaleString","size","isLowercase","hour","hour12","pop","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","getDateFormat","regex","getFormattedDateRegex","parseFormattedDate","groups","y","Y","valueOf","GSData","currency","extract","Set","b","every","index","toSorted","compareArrays","second","arr","indexOf","list","it","cfg","toType","rule","toRegex","fmt","style","fields","limit","sts","rec","filterRecord","filterSimple","filterComplex","key","filterValue","found","flt","matchDate","matchNumber","op","toLocaleLowerCase","local","toLocaleDateString","iso","toISOString","operator","sort","sortPair","ord","idx","col","v1","v2","compare","order","compareNum","compareString","isBool","compareBool","isDate","s1","s2","localeCompare","ignoreNull","isNull","seg","writeSingleToOject","tree","hasOwnProperty","r","readFromProperty","GSDOM$1","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","wrap","appendChild","link","slot","isText","tagName","FORMEL","queryAll","HTMLButtonElement","hasClass","ownClazz","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","parentElement","offsetParent","c","ShadowRoot","HTMLBodyElement","root","getByID","documentElement","walk","qry","proxy","res","receiver","sanitize","sanitizer","setHTML","Document","textContent","requestAnimationFrame","toggleClass","contains","unwrap","querySelectorAll","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","readFromObject","fromValue","plain","innerText","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","location","hash","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","allowElement","allowTag","fetch","ok","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","detail","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","delete","removeListener","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","for","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","rid","waitAnimationFrame","onResize","attach","GSAbortController","AbortController","super","abort","clearInterval","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","isFunctions","getFilter","exec","create","GSDynamicStyle","deleteRule","getRule","setRule","sync","insertRule","updateRule","isImportant","setProperty","source","dynamicStyleSheetByID","dynamicStyleSheet","gsClass","dynamicRule","dynamicRuleByID","dynamicStyle","assign","dynamicStyleByID","GSCacheStyles","store","dynamic","styles","adopt","adoptedId","GSAdoptedEngine","now","preload","timerID","setInterval","sheets","adoptable","adoptSheet","update","scheduled","sorted","ID","cssText","monitorAttributes","ownerNode","adoptStyle","disconnect","mutationList","onAttributeChange","attributeFilter","attributeOldValue","HTMLLinkElement","rel","as","HTMLStyleElement","then","adoptLink","registerFilter","onMonitorFilter","onMonitorConnect","onMonitorDisconnect","init","GSEnvironment","isMobile","userAgentData","mobile","userAgent","isDesktop","isWebkit","protocol","strVal","brands","brand","strAgt","isEdge","isDevice","platform","screen","otype","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","ps","p","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","querySelector","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSItem","validate","tags","collect","definition","GSLoader","GS_TEMPLATE_URL","origin","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","searchParams","append","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GS_LOCALIZATION_LANGUAGE","lang","GSLocalization","GSLocalizationImpl","queue","queued","GS_LOCALIZATION_URL","translate","deft","getLanguage","texthash","reset","promises","loadWait","sequential","Pragma","isDefault","hk","details","GSPopper","asRect","sx","scrollX","sy","scrollY","top","bottom","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","arrow","pos","fromPlacement","isPlacementValid","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","aopt","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","applyDynamicStyle","GSQueryCSS","property","object","GSQuery","instance","GSTemplateCache","template","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTheme","switch","theme","STORAGE","htmlEl","bsTheme","matchMedia","q","URLSearchParams","onTheme","settings","getSystemDefaultTheme","darkMode","lightMode","setup","GSAttributeHandler","anchor","call","inject","swap","trigger","calls","toggles","triggers","handle","targets","handleTarget","handleBinding","handleAction","handleAttribute","handleProperty","handleToggle","handleTrigger","handleCall","handleExec","handleSwap","handleInject","handleTemplate","field","form","isField","HTMLFormElement","isFormElement","toObject","isAttributeJSON","jsonToAttr","toggleAttribute","isPropertyJSON","properties","toggleProperty","tout","symbol","applyContent","applyTemplate","clone","insertAdjacent","deattach","DEFINITION","Stack","item","unshift","peek","isEmpty","Queue","enqueue","dequeue","BinaryTreeNode","isLeaf","hasChildren","isRoot","BinaryTree","inOrderTraversal","postOrderTraversal","preOrderTraversal","insert","parentNodeKey","canInsertLeft","canInsertRight","find","Node","previous","release","toJSON","DoublyLinkedList","tail","previousNode","insertAt","splice","insertFirst","insertLast","getAt","removeAt","acc","toArray","iterator","isInvalid","isInvalidIndex","isInteger","Tree","folder","leaf","up","levelID","nodeID","isFolder","hasMore","firstChild","lastChild","down","previousSibling","inclusive","flat","iterate","filtered","We","newOne","findByKey","flatten","fromJSON","raw","hasParent","GSReadWriteRegistryImpl","handlers","INTERNAL","addHandler","removeHandler","getHandler","newHandler","enabled","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","processors","enable","addProcessor","processor","removeProcessor","disable","isRegistered","notify","onRead","postRead","onWrite","postWrite","GSReadWrite","reader","writer","mode","skip","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","litUrl","GS_LIT_URL","litModule","ReactiveController","ReactiveElement","AsyncDirective","AsyncReplaceDirective","CSSResult","Directive","LitElement","PartType","TemplateResultType","UnsafeHTMLDirective","UntilDirective","_$LE","_$LH","adoptStyles","asyncAppend","asyncReplace","choose","classMap","clearPart","createRef","defaultConverter","directive","getCommittedValue","getCompatibleStyle","getDirectiveClass","guard","ifDefined","insertPart","isCompiledTemplateResult","isDirectiveResult","isPrimitive","isServer","isSingleExpression","isTemplateResult","keyed","literal","live","noChange","notEqual","nothing","range","ref","removePart","render","setChildPartValue","setCommittedValue","staticHtml","staticSvg","styleMap","supportsAdoptingStyleSheets","svg","templateContent","unsafeCSS","unsafeHTML","unsafeSVG","unsafeStatic","until","when","withStatic","gsAction","gsAnchor","gsAttribute","gsCall","gsExec","gsInject","gsProperty","gsSwap","gsTarget","gsTemplate","gsToggle","gsTrigger","gsValue","DatasetDirective","part","srcset","DOMStringMap","remap","hasOwn","descriptors","getOwnPropertyDescriptors","listProperties","listGetters","getPrototypeOf","literalTemplate","listGettable","cssMap","CssMapDirective","partInfo","ATTRIBUTE","strings","classInfo","_previousClasses","_staticClasses","notEmpty","newVal","oldVal","numGT0","numGE0","numLT0","numLE0","ButtonTypes","buttonType","hasChanged","is","ColorTypes","color","EnvironmentTypes","environment","InputTypes","inputType","NavTypes","nav","OrientationTypes","PlacementTypes","PositionTypes","ProtocolTypes","SizeTypes","normal","medium","small","large","big","stringArrayConverter","fromAttribute","toAttribute","AdoptedController","addController","hostConnected","controllers","hostDisconnected","removeController","changed","renderRoot","onAdopted","AttributeController","eventName","onNotify","isFormEl","ContentController","refs","removeContent","hostUpdated","isSelf","contentRef","options","renderOptions","renderBefore","previousElementSibling","keep","DataController","readCallback","writeCallback","errorCallback","read","write","storeID","search","storage","firstPage","page","lastPage","nextPage","prevPage","onDataRead","onDataWrite","onDataError","ElementMoveController","attached","cursorX","cursorY","mouseUpCallback","mouseDownCallback","mouseMoveCallback","onMouseUp","onMouseDown","onMouseMove","attachEvent","removeEvent","onStartMove","onEndMove","onCursorRight","onCursorLeft","onCursorUp","onCursorDown","ElementNavigationController","selected","focused","multiselect","circular","multiple","onKeyUp","onClick","onFocusIn","onFocusOut","lastElementChild","focus","blur","onSelected","onDeselected","onFocused","isNavigable","select","OrientationController","hosts","requestUpdate","onOrientation","ThemeController","hostUpdate","updateTheme","updateThemeExt","TemplateController","lastRef","injected","request","templateInjected","templateRef","schedule","tasks","task","process","finally","LocalizationController","updateLanguage","updateLanguageExt","langauge","onLanguage","GSElement","rtl","reflect","hide","rounded","bordered","onready","os","browser","adopted","uiHandler","localization","dataController","themes","attributeChangedCallback","oldValue","newValue","connectedCallback","isBindable","binded","disconnectedCallback","deattachListeners","createRenderRoot","firstUpdated","willUpdate","relink","isAllowRender","renderUI","renderTemplate","renderClass","border","mapCSS","flag","waitEvent","direction","isFocused","isValidEnvironment","isValidBrowser","isValidOS","isValidProtocol","isValidOrientation","definitions","mergeObjects","GSAccordionElement","autoclose","cssItem","cssHeader","cssBody","renderItems","close","open","message","opened","GSAccordionItemElement","shouldUpdate","changedProperties","component","GSAlertElement","closed","closable","pause","interval","handleBillboard","updated","show","isBillboard","button","billboard","GSButtonElement","toggleColor","autofocus","outline","toggling","icon","tooltip","refEl","isReset","isSubmit","submit","isReest","GSCalendarElement","arrovPrev","arrowNext","cssDays","cssToday","cssWeeks","cssMonth","cssYear","cssNav","cssSelected","minYear","maxYear","arrowPrev","previousMonth","nextMonth","previousYear","nextYear","formatted","updateTarget","week","dayList","months","monthsHTML","yearHTML","onKey","onDay","daysHTML","tgt","HTMLInputElement","valueAsDate","isToday","today","c1","c2","current","monthList","onMonth","onYear","selectedIndex","GSCardElement","imageStyle","overlay","align","image","subtitle","footer","header","colorText","colorBack","colorBorder","cssTitle","cssSubtitle","cssFooter","cssImage","isVertical","renderVertical","renderHorizontal","imageTop","imageBottom","isBefore","startClass","endClass","startHtml","images","endHtml","isHorizontal","imageSlot","GSCenterElement","GSMenuElement","auto","dark","menuRef","styleID","closeSubmenus","updatePosition","onMouseOver","onMouseLeave","submenu","dropend","dropstart","popup","caller","isMouseOrPointerEvent","renderSubmenu","renderHeader","renderMenu","renderDivider","menu","toSubmenu","menuItem","isSubmenu","innerWidth","GSDContextElement","attachTarget","onPopup","composedPath","GSCompareElement","background","before","after","elRef","clipRef","slideRef","mouseController","elPosition","splitter","onLoad","onDoubleClick","isAuto","pct","isFixed","slider","clip","GSControllerElement","module","changes","initialize","GSCopyrightElement","company","isCompany","isYear","GSDataHandler","autoload","autorefresh","config","handler","lifoReadRef","initLIFO","PROPERTIES","updateHandler","formatSort","formatFilter","isDebug","gsDebug","formated","verifyHandler","save","callOnceLifo","lifoReadRefCallback","lifoRead","GSDialogElement","standard","refelct","escapable","cancelText","confirmText","buttonAlign","iconCancel","iconConfirm","cssCancel","cssConfirm","cssContent","dialogRef","btnConfirmRef","btnCancelRef","CSS","TITLE_CSS","HEADER_CSS","ALIGN","CANCEL","CONFIRM","updateStack","STACK","dialog","showModal","focusable","renderConfirm","onConfirm","renderCancel","onCancel","renderFooter","info","confirm","prompt","forms","f","tab","btnConfirm","btnCancel","QUERY_INPUT","isVisible","stack","GSDrawerElement","backdrop","expanded","scroll","fingers","transition","duration","cssHead","onLeave","onEnter","hasHeader","headSlot","GSDropdownElement","renderButton","buttonClass","btn","GSEmailElement","user","domain","dev","updateUser","updateDomain","GSFormElement","formRef","onChange","elements","fromObject","disableInput","enableInput","reportValidity","GSFormGroupElement","layout","description","label","placeholder","mask","step","minLength","maxLength","autoid","autocopy","autoselect","autocapitalize","autocomplete","reveal","readonly","required","cellField","cellLabel","cssLabel","cssField","inputRef","ouptutRef","patterns","validateAllowed","ICON","CSS_LABEL","CSS_LABEL_CELL","onRange","formElements","renderFloating","cssCheck","renderInput","renderOutput","renderLabel","renderInfo","renderLabelWrap","renderField","renderIcon","isIcon","CSS_ICON","renderTooltip","isRange","idattr","isFieldset","radioLayout","fieldSet","inputHTML","fld","vertical","isSwitch","onBlur","isCheckable","isFloating","setCustomValidity","slots","tagList","isCheck","isRadio","isChecked","isPassword","isEmail","isURL","GSFormPanelElement","formStorage","GSGroupElement","initData","renderWrappedUI","renderWrappedClass","allProperties","GSIconElement","superColor","fs","GSIndentElement","multiplier","numdef","GSImageElement","invert","grayscale","brightness","contrast","saturate","hue","sepia","alt","loading","imageRef","complete","renderStyle","buildFilter","GSLayoutElement","resizable","autofit","vPos","hPos","els","horizontal","tplEl","elementTemplate","tc","dir","panelCSS","panelStyle","resize","grow","vpos","hpos","GSLinklement","ping","GSListElement","selectable","GSListItemElement","generated","initial","activeCSS","renderFirst","renderSecond","itemCSS","cssActive","GSNavItemElement","itemsCSS","buttonCSS","buildCSS","cssButton","navType","GSNavElement","isTab","GSOverlayElement","autoremove","radius","innerHeight","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathStr","createSVGPathString","windowX","windowY","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPagerElement","pages","labelFirst","labelLast","labelNext","labelPrevious","half","renderPrevious","renderItem","renderNext","renderLast","pagination","decodeHTMLEntities","toTarget","ctrl","GSPopupElement","wMin","wMax","hMin","hMax","panelRef","attachTaraget","onAuto","reposition","popupFixed","panel","Event","HTMLSlotElement","overflowH","overflowV","GSProgressElement","updateStyle","percentage","onKeySelect","increase","decrease","trunc","old","GSSpinnerElement","pulsar","GSSplitterElement","cursor","cssUpdate","lock","updateMouse","stop","isPreceeding","isStyleValue","styleDynamic","lockable","csize","cls","gsSplitter","updateX","updateY","dx","GSTabItemElement","GSTabPanelElement","GSTabGroupElement","tabCSS","isAfter","renderPanels","findPanel","GSTableElement","filterType","cssFilter","colorHead","colorSelect","stripedColumn","divider","striped","hover","grid","borderless","columns","selections","datacolumn","multisort","protected","sortable","sortOrder","headColor","CELLS","table","stripedColumns","fill","renderFilters","onSort","entry","renderColumn","onSelect","renderRecord","renderEmpty","columnType","columType","input","valueAt","row","cell","cfgType","string","timestamp","dataType","renderFilter","onFilter","icons","sortType","column","getElementIndex","prepareSorter","sortData","isComplex","tr","isSelected","GSTagElement","converter","appendable","closeColor","cssClose","cssTag","dataListRef","renderTags","onInput","renderList","updateTag","KEYS","srcElement","removeTag","addTag","isMax","datalist","optEl","tagEl","renderTag","tagClass","btnClass","badge","GSTextElement","GSTooltipElement","arrowRef","arrowStyle","attachEvents","fade","arrowEl","panelEl","refLocal","refGlobal","GSTemplateElement","CopySelectController","clickCallback","copyCallback","onCopy","writeToClipboard","MaskController","_","back","prev","keyDownCallback","inputCallback","focusCallback","blurCallback","onFocus","initRules","j","builSlots","findIndex","builAccept","toPattern","lastIndex","isMatch","setSelectionRange","substring","selectionStart","selectionEnd","maskType","clean","chars","masks","special","NumberController","onNumberInput","PasswordController","revealing","keyUpCallback","isReveal","altKey","TextController","updateText","ListController","monitorCallback","changeCallback","onMonitor","onDataChange","hasUpdated","strict","isInList","togleEl","dataGroup","isButtonElement","defaultPropertyDeclaration","attributeToPropertyMap","prepare","elementProperties","finalize","finalized","prepareFn","getOwnPropertySymbols","superCtor","attributeNameForProperty","ReactiveInput","reflectingProperties","instanceProperties","updatePromise","reflectingProperty","isUpdatePending","observedAttributes","initializer","initializers","props","propKeys","getOwnPropertyNames","createProperty","noAccessor","descriptor","getPropertyDescriptor","prototype","configurable","enumerable","enableUpdating","attributeToProperty","requestedUpdate","getUpdateComplete","scheduleUpdate","performUpdate","propertyToAttribute","markUpdated","updateComplete","getPropertyOptions","changeProperty","enqueueUpdate","elementProps","wrapped","didUpdate","ctor","propName","attrValue","saveInstanceProperties","GSComboExt","HTMLSelectElement","setIf","objToHTML","GSDataListExt","HTMLDataListElement","GSInputElement","copyselect","maskController","passwordController","numberController","textController","listController","GSBreadcrumbElement","spacing","updateChildren","$text","GSBreadcrumbItemElement","generate","GSTimeFormat","toLocaleTimeString","GSDateFormat","GSYearFormat","GSCurrencyFormat","GSStepStyle","GSStepElement","iconCSS","titleCSS","INACTIVE","ICON_CSS","GSStepsElement","steps","isFirst","isLast","COMPLETED","SELECTED","GSNotificationElement","BOTTOM_END","positionCSS","DEFAULT","dismiss","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","dlg","nn","isNativeSupported","isGranted","permission","GSToastElement","pending","visibilityChange","pendingUpdate","validParent","SPEED","renderWithHeader","renderSimple","AbstractTreeController","addNodeController","removeNodeController","oldNode","TreeController","toggleState","onRefresh","onAppend","addedNode","onInsert","insertedNode","onExpand","onCollapse","onFocusChanged","onSelectionChanged","selectedNode","onRemove","TreeNode","focusedNode","visible","expand","collapse","isPartialySelected","selectAll","deselectAll","selectionFlag","onSelectAll","onDeselectAll","selectedNodes","refresh","expandAll","collapseAll","collapsed","GSTreeItemElement","renderSpinner","cssFocus","status","parentItem","checkColor","checkColorSelected","ui","itemIco","itemIcon","openIcon","closeIcon","renderIndent","renderMulti","GSTreeElement","guide","shared","listRef","nextItem","previousItem","reload","expandable","GSChartElement","URL_LIB","GS_URL_CHART","canvasRef","chart","waitInit","destroy","isChart","renderData","canvas","updateChart","div","toBase64Image","quality","sets","datasets","ctx","getContext","Chart","initializing","registerables","nameV","valV","typeV","childs","isObject","_nam","GSChart","_val","_typ","GSHighlightElement","GS_URL_HLJS","codeRef","onTarget","onURL","onHighlight","hasLangauge","highlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMarkdownElement","GS_URL_MARKDOWN","history","maxHeight","containerRef","initLib","showdown","tasklists","tables","Converter","toCache","fromCache","container","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","script","GSMonacoElement","GS_URL_MONACO","editor","onMonacoReady","monaco","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","automaticLayout","minimap","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","paths","vs","initialized","initEnv","initMonaco"],"mappings":"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"}