{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/GSVersion.mjs","../../modules/base/style.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSID.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSDynamicStyle.mjs","../../modules/base/GSCacheStyles.mjs","../../modules/base/GSAdoptedEngine.mjs","../../modules/base/GSBeep.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSLocalization.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSTemplateCache.mjs","../../modules/base/GSTheme.mjs","../../modules/base/GSAttributeHandler.mjs","../../modules/helpers/Stack.mjs","../../modules/helpers/Queue.mjs","../../modules/helpers/BinaryTree.mjs","../../modules/helpers/DoublyLinkedList.mjs","../../modules/helpers/Tree.mjs","../../modules/data/ReadWriteRegistry.mjs","../../modules/data/AbstractReadWrite.mjs","../../modules/data/ReadWrite.mjs","../../modules/data/CachedReadWrite.mjs","../../modules/data/TreeNode.mjs","../../modules/data/TreeReader.mjs","../../modules/lib.mjs","../../modules/directives/dataset.mjs","../../modules/directives/literal.mjs","../../modules/directives/css-map.mjs","../../modules/properties/verificator.mjs","../../modules/properties/autocapitalize.mjs","../../modules/properties/autocomplete.mjs","../../modules/properties/autocorrect.mjs","../../modules/properties/buttonType.mjs","../../modules/properties/color.mjs","../../modules/properties/environment.mjs","../../modules/properties/inputType.mjs","../../modules/properties/nav.mjs","../../modules/properties/orientation.mjs","../../modules/properties/placement.mjs","../../modules/properties/position.mjs","../../modules/properties/protocol.mjs","../../modules/properties/size.mjs","../../modules/properties/arrayConverter.mjs","../../modules/controllers/AdoptedController.mjs","../../modules/controllers/AttributeController.mjs","../../modules/controllers/ContentController.mjs","../../modules/controllers/DataController.mjs","../../modules/controllers/ElementMoveController.mjs","../../modules/controllers/LocalizationController.mjs","../../modules/controllers/OrientationController.mjs","../../modules/controllers/TemplateController.mjs","../../modules/controllers/ThemeController.mjs","../../modules/controllers/SlotController.mjs","../../modules/GSElement.mjs","../../modules/controllers/ElementNavigationController.mjs","../../modules/controllers/GroupController.mjs","../../modules/components/Accordion.mjs","../../modules/components/AccordionItem.mjs","../../modules/components/Alert.mjs","../../modules/components/Button.mjs","../../modules/components/Calendar.mjs","../../modules/components/Card.mjs","../../modules/components/Center.mjs","../../modules/components/Menu.mjs","../../modules/components/Context.mjs","../../modules/components/Compare.mjs","../../modules/components/Controller.mjs","../../modules/components/Copyright.mjs","../../modules/components/DataHandler.mjs","../../modules/components/Dialog.mjs","../../modules/components/Drawer.mjs","../../modules/components/Dropdown.mjs","../../modules/components/Email.mjs","../../modules/components/Form.mjs","../../modules/components/FormGroup.mjs","../../modules/components/FormPanel.mjs","../../modules/components/Group.mjs","../../modules/components/Icon.mjs","../../modules/components/Indent.mjs","../../modules/components/Image.mjs","../../modules/components/Layout.mjs","../../modules/components/Link.mjs","../../modules/components/List.mjs","../../modules/components/ListItem.mjs","../../modules/components/Nav.mjs","../../modules/components/NavItem.mjs","../../modules/components/Overlay.mjs","../../modules/components/Pager.mjs","../../modules/components/Popup.mjs","../../modules/components/Progress.mjs","../../modules/components/Spinner.mjs","../../modules/components/Splitter.mjs","../../modules/components/tab/Tab.mjs","../../modules/components/tab/TabPanel.mjs","../../modules/components/tab/TabGroup.mjs","../../modules/components/Table.mjs","../../modules/components/Tag.mjs","../../modules/components/Text.mjs","../../modules/components/Tooltip.mjs","../../modules/components/Template.mjs","../../modules/components/ext/controllers/CopySelectController.mjs","../../modules/components/ext/controllers/MaskController.mjs","../../modules/components/ext/controllers/MultipatternController.mjs","../../modules/components/ext/controllers/NumberController.mjs","../../modules/components/ext/controllers/PasswordController.mjs","../../modules/components/ext/controllers/TextController.mjs","../../modules/components/ext/controllers/ListController.mjs","../../modules/components/ext/controllers/ValidityController.mjs","../../modules/components/ext/ReactiveInput.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSInputElement.mjs","../../modules/components/ext/GSTextArea.mjs","../../modules/components/breadcrumb/Breadcrumb.mjs","../../modules/components/breadcrumb/BreadcrumbItem.mjs","../../modules/components/filebox/Attachment.mjs","../../modules/components/filebox/FileBox.mjs","../../modules/components/intl/TimeFormat.mjs","../../modules/components/intl/DateFormat.mjs","../../modules/components/intl/YearFormat.mjs","../../modules/components/intl/CurrencyFormat.mjs","../../modules/components/steps/StepStyle.mjs","../../modules/components/steps/Step.mjs","../../modules/components/steps/Steps.mjs","../../modules/components/toast/Notification.mjs","../../modules/components/toast/Toast.mjs","../../modules/components/tree/controllers/AbstractTreeController.mjs","../../modules/components/tree/controllers/TreeController.mjs","../../modules/components/tree/TreeItem.mjs","../../modules/components/tree/Tree.mjs","../../modules/extra/Chart.mjs","../../modules/extra/Highlight.mjs","../../modules/extra/Markdown.mjs","../../modules/extra/Monaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport class GSVersion {\r\n\r\n    static get version() {\r\n        return '2.0.0';\r\n    }\r\n\r\n    static get build() {\r\n        return 2025.0131;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Required CSS Styles for WebCompoents, regardless Bootstrap CSS.\r\n */\r\nexport const gsstyles = `.z-10k{z-index:10000 !important;}\r\n.gs-hide,gs-item{display:none !important;}\r\ngs-popover,gs-tooltip{position:fixed;top:0px;left:0px;},\r\n.d-contents{display:contents;}';\r\ngs-button-group::part(.btn-group){box-shadow:rgba(72, 72, 72, 0.4) 0px 0.125rem 0.25rem;}\r\ngs-group>gs-button::part(button) {box-shadow: none;}\r\ngs-group>gs-button:not(:last-child)::part(button) {border-top-right-radius: 0;border-bottom-right-radius: 0;}\r\ngs-group>gs-button:not(:first-child)::part(button) {margin-left: calc(var(--bs-border-width) * -5);border-top-left-radius: 0;border-bottom-left-radius: 0;}\r\ngs-layout {width: 100%;height: 100%;}\r\ngs-split-panel{flex: 1 1 auto !important;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]:before {content: attr(data-value);}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {visibility: hidden;display: inline-block;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-calendar-picker-indicator {position: relative;top: 0px;right: 0;color: black;opacity: 0.5;}\r\n`;","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic isPrimitive = (o) => !Array.isArray(o) && (this.isBool(o) || this.isDate(o) || this.isNumber(o) || this.isString(o));\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic asArray(val) {\r\n\t\treturn Array.isArray(val) ? val : [val];\r\n\t}\r\n\r\n\tstatic asNum(val, dft = 0, locale) {\r\n\t\tlocale = locale || GSUtil.locale;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(locale);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(locale = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(locale).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t};\r\n\t\tconst reg = /[&<>\"'/]/ig;\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\t\t\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tif (time <= 0) return;\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to write to the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async writeToClipboard(value = '') {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-write\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.writeText(value);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to read from the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async readFromClipboard() {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-read\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.readText();\r\n\t\t}\r\n\t\treturn '';\r\n\t}\t\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribite name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop];\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\t\t\t\t\r\n\t\t\t\tconst tmp = opt; // Object.hasOwn(opt, prop) ? opt : target;\r\n\t\t\t\t\r\n\t\t\t\tconst type = tmp[prop]?.type;\r\n\t\t\t\tconst safe = tmp[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = tmp[prop]?.default;\r\n\t\t\t\tconst multi = tmp[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = tmp[prop]?.attribute || prop;\r\n\t\t\t\tlet val = target.hasAttribute(prop) ? GSAttr.get(target, prop) : target[prop];\r\n\r\n\t\t\t\tif (GSFunction.isFunction(val)) return val.bind(target);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, locale) {\r\n        format = format || GSUtil.getDateFormat(locale);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, locale: {}, extract: {}, key: { type: Boolean } };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', locale:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const locale = cfg.locale || GSUtil.locale;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        // intercept overrides; used b GS-TABLE cell Ui remapping\r\n        if (cfg.childElementCount > 0) {\r\n            const el = cfg.querySelector(`gs-item[value=\"${val}\"]`);\r\n            return GSAttr.get(el, \"map\", val);\r\n        }\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, locale);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'text':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(locale);\r\n                    return new GSDate(val).format(fmt, locale);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, locale);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static *filter(data = [], filter = [], fields, limit = 0) {\r\n        let cnt = 0;\r\n        let sts = false;\r\n        for (let rec of data) {\r\n            sts = GSData.filterRecord(rec, filter, fields);\r\n            if (sts) {\r\n                cnt++\r\n                yield rec;\r\n            }\r\n            if (limit > 0 && cnt >= limit) break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields, limit = 0) {\r\n        data = Array.isArray(data) ? data : [data];\r\n        filter = Array.isArray(filter) ? filter : [filter];\r\n        if (filter.length === 0) return data;\r\n        return [...GSData.filter(data, filter, fields, limit)];\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = GSUtil.isPrimitive(filter);\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter, fields);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (GSData.filterValue(value, filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter, fields) {\r\n\r\n        let primitive = false;\r\n        let found = true;\r\n        let value = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            primitive = GSUtil.isPrimitive(flt);\r\n            if (primitive) {\r\n                found = found && GSData.filterSimple(rec, flt, fields);\r\n            } else {\r\n                value = rec[flt.name];\r\n                if (flt.name) {\r\n                    found = found && GSData.filterValue(value, flt)\r\n                } else {\r\n                    found = found && GSData.filterSimple(rec, flt.value, fields);\r\n                }\r\n            }\r\n\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static filterValue(value, filter) {\r\n        const toCheck = GSUtil.isPrimitive(filter) ? filter : filter.value;\r\n        if (GSUtil.isDate(value)) {\r\n            return GSData.matchDate(value, filter);\r\n        } else if (GSUtil.isNumber(value)) {\r\n            return GSData.matchNumber(value, GSUtil.asNum(toCheck, null), filter.op);\r\n        } else {\r\n            return (GSUtil.normalize(value)).toLocaleLowerCase().includes(GSUtil.normalize(toCheck).toLocaleLowerCase());\r\n        }\r\n    }\r\n\r\n    static matchDate(val, filter, locale) {\r\n\r\n        if (typeof filter === 'string') {\r\n            const value = '' + filter;\r\n            const local = val.toLocaleDateString(locale);\r\n            const iso = val.toISOString();\r\n            return local.includes(value) || iso.includes(value);\r\n        }\r\n\r\n        if (!filter.value) return false;\r\n\r\n        const qry = filter.value instanceof Date ? 'date' : typeof filter.value;\r\n\r\n        switch (qry) {\r\n            case 'number':\r\n                return GSData.matchNumber(val.getTime(), filter.value, filter.op);\r\n            case 'date':\r\n                return GSData.matchNumber(val.getTime(), filter.value.getTime(), filter.op);\r\n        }\r\n\r\n        return GSData.matchDate(val, '' + filter.value, filter.locale);\r\n    }\r\n\r\n    /**\r\n     * Match number by operator\r\n     * @param {*} value \r\n     * @param {*} query \r\n     * @param {*} operator \r\n     */\r\n    static matchNumber(value = 0, query = 0, operator = 'eq') {\r\n        switch (operator) {\r\n            case 'gt': return query > value;\r\n            case 'lt': return query < value;\r\n            case 'ge': return query >= value;\r\n            case 'le': return query <= value;\r\n        }\r\n        return value === query;\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToOject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name, partial = false) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj[n][i] : null;\r\n        } else if (obj.hasOwnProperty(n)) {\r\n            obj = partial ? obj[n] || obj : obj[n];\r\n        } else {\r\n            obj = null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n\tstatic readFromObject(obj, name) {\r\n        if (obj?.hasOwnProperty(name)) return GSData.readFromProperty(obj, name);\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} shadow \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el, shadow = false) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()), shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSlotElement\r\n\t * @returns {Boolean}\r\n\t */\t\r\n\tstatic isSlotElement(el) {\r\n\t\treturn el instanceof HTMLSlotElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @param {Number} level How many levels to wal, 0 = all\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry, levels = 0) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tlevels = GSUtil.asNum(levels, 0);\r\n\t\tconst limit = levels > 0;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t\tif (limit && --levels == 0) return null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el, defaults = false) {\r\n\t\tlet val = null;\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\t\tval = el.value ? el.valueAsNumber : el.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\t\tval = Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value') && el.value) {\r\n\t\t\t\t\tval = el.checked ? el.value : null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tval = el.checked;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tval = el.value;\r\n\t\t\t}\r\n\r\n\t\t\tif(GSUtil.isNull(val) && defaults) {\r\n\t\t\t\tval = el.defaultValue;\r\n\t\t\t}\r\n\t\t\treturn val;\r\n\t\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el, defaults);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromValue(el, val, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tif (defaults) el.defaultValue = el.checked;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = GSUtil.normalize(data);\r\n\t\t\t\tif (defaults) el.defaultValue = el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true, defaults = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => GSDOM.fromElement2Object(el, params, defaults) );\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @param {Boolean} defaults Set default value for form reset  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output', defaults = false) {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\t// if (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj, defaults));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromObject2Element(el, obj, defaults = false) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\tGSDOM.fromValue(el, val, defaults);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement (input) value to JSON Object  \r\n\t * @param {HTMLElement} owner Element value source\r\n\t * @param {Object} obj Object to populate \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromElement2Object(el, obj, defaults = false) {\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t} else if (el.checked) {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\tconst props = GSDOM.allProperties(own);\r\n\t\tArray.from(own.attributes).forEach(v => {\r\n\t\t\tconst type = props[v.name]?.type;\r\n\t\t\tswitch(type) {\r\n\t\t\t\tcase Boolean :\r\n\t\t\t\t\tobj[v.name] = own.hasAttribute(v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Number :\r\n\t\t\t\t\tobj[v.name] = GSAttr.getAsNum(own, v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\tobj[v.name] = v.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', '');\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own\r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t */\r\n\tstatic setValue(qry, val, own, defaults = false) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\t/**\r\n\t * Extract and merge all static properties definition from WebComponent instance\r\n\t * @param {GSElement} obj \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic allProperties(obj) {\r\n\t\tconst list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n\t\tlist.push(obj.constructor?.properties || obj.properties);\r\n\t\treturn GSData.mergeObjects(list);\r\n\t}\r\n\r\n\t/**\r\n\t * Return element template ref\r\n\t * @param {GSElement} host \r\n\t * @returns \r\n\t */\r\n\tstatic templateRef(host) {\r\n\t\tif (!host) return;\r\n\t\tif(host.tagName === 'GS-TEMPLATE') return host.src;\r\n\t\treturn host.template || host.query?.('template', false);\r\n\t  }\r\n\t\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if available.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = GSUtil.isString(data) ? data : data.action || data.data?.action;\r\n\t\t\tGSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(me.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {Boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el, opt) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el, opt);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {Boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {Boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {Boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {Boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {Boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {Boolean} forRemove - call on node remove or add\r\n     * @param {HTMLElement} target - element to monitor\r\n     * @returns {Boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {Boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {Boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = (style || '').toString();\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop();\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n    * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\nimport { gsstyles } from \"./style.mjs\";\r\n\r\n/**\r\n * Cache for dynaamically loaded styles.\r\n * Used to share styles among GS-* WebComponents\r\n * @class\r\n */\r\nexport class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Create a new CSSStyleSheet\r\n\t * @param {String} id Unique ID\r\n\t * @returns {CSSStyleSheet} Created instance\r\n\t */\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {String} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\t\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\t\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {String} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {String} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id, style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSID.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(gsstyles);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from './GSDOM.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSDOMObserver } from './GSDOMObserver.mjs';\r\nimport { GSCacheStyles } from './GSCacheStyles.mjs';\r\n\r\nconst adoptedId = Symbol();\r\nconst observer = Symbol();\r\n\r\n/**\r\n * Monitor HTMLStyleElement & HTMLLinkElement (of type stylesheet) for changes.\r\n * Every such element marked with data-adoptable=\"true\" will be cached and\r\n * will trigger gs-adopted event to notify component controller to update adoptableStyleSheet list\r\n */\r\nexport class GSAdoptedEngine {\r\n\r\n  static #timerID = 0;\r\n  static #ID = Date.now();\r\n  static #scheduled = false;\r\n\r\n  static #init() {\r\n    const me = GSAdoptedEngine;\r\n    me.observe(document.head);\r\n    me.#preload();\r\n    me.#timerID = setInterval(() => me.#adopt(), me.timeout);\r\n  }\r\n\r\n  static #clear() {\r\n    const me = GSAdoptedEngine;\r\n    clearInterval(me.#timerID);\r\n    me.#timerID = undefined;\r\n  }\r\n\r\n  static #adopt() {\r\n    const me = GSAdoptedEngine;\r\n    const sheets = me.#adoptable;\r\n    if (sheets.length == 0) return me.#clear();\r\n    sheets.map(s => me.#adoptSheet(s));\r\n    me.update();\r\n  }\r\n\r\n  static update() {\r\n    const me = GSAdoptedEngine;\r\n    if (me.#scheduled) return;\r\n    me.#scheduled = true;\r\n    queueMicrotask(() => {\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          document.adoptedStyleSheets = me.#sorted;\r\n          document.adoptedStyleSheets.id = ++me.#ID;\r\n        } finally {\r\n          me.#scheduled = false;\r\n          globalThis.dispatchEvent(new CustomEvent('gs-adopted'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static #asText(sheet) {\r\n    return Object.values(sheet.cssRules).map(o => o.cssText).join('');\r\n  }\r\n\r\n  static #adoptLink(el) {\r\n    const me = GSAdoptedEngine;\r\n    GSAdoptedEngine.#monitorAttributes(el);\r\n    Array.from(document.styleSheets).filter(s => s.ownerNode === el).map(s => me.#adoptSheet(s));\r\n  }\r\n\r\n  static #adoptSheet(sheet) {\r\n    const me = GSAdoptedEngine;\r\n    const style = me.#asText(sheet);\r\n    return me.#adoptStyle(sheet.ownerNode, style);\r\n  }\r\n\r\n  static #adoptStyle(ownerNode, style) {\r\n    const me = GSAdoptedEngine;\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(style);\r\n    sheet.id = ++me.#ID;\r\n    ownerNode[adoptedId] = sheet.id;\r\n    me.#store(ownerNode, sheet);\r\n    return sheet;\r\n  }\r\n\r\n  static #store(ownerNode, sheet) {\r\n    GSCacheStyles.set(sheet.id, sheet);\r\n  }\r\n\r\n  static #remove(ownerNode, sheet) {\r\n    GSCacheStyles.remove(sheet.id);\r\n    ownerNode[observer]?.disconnect?.();\r\n    ownerNode[observer] = undefined;\r\n  }\r\n\r\n  static get #sorted() {\r\n    return GSCacheStyles.styles;\r\n  }\r\n\r\n  /**\r\n   * List of adoptable styles or links. Filter only those with dataset.adoptable=true\r\n   * @returns {HTMLStyleElement|HTMLLinkElement}\r\n   */\r\n  static get #adoptable() {\r\n    return Object.values(document.styleSheets)\r\n      .filter(o => o.ownerNode)\r\n      .filter(o => o.ownerNode.dataset.adoptable)\r\n      .filter(o => !o.ownerNode[adoptedId]);\r\n  }\r\n\r\n  static #preload() {\r\n    GSDOM.queryAll(document.head, 'link[rel=\"preload\"][as=\"style\"]')\r\n    .forEach(el => {\r\n      el.remove();\r\n      document.head.appendChild(el);\r\n    });\r\n  }\r\n\r\n  static #onAttributeChange(mutationList) {\r\n    mutationList.forEach((mutation) => {\r\n       const id = mutation.target[adoptedId];\r\n       const style = GSCacheStyles.get(id);\r\n       if(style) style.disabled = mutation.target.hasAttribute('disabled');\r\n    });\r\n    GSAdoptedEngine.update();\r\n  }\r\n  \r\n  static #monitorAttributes(element) {\r\n    const me = GSAdoptedEngine;\r\n    const callback = me.#onAttributeChange.bind(me);\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(element, {\r\n      attributeFilter: [\"disabled\"],\r\n      attributeOldValue: true,\r\n      subtree: false,\r\n    });\r\n    return observer;\r\n  }\r\n  \r\n  /**\r\n   * Filter style and link(css) elements which will be shared\r\n   * with all web componentes. Filter only those marked with data-adoptable\r\n   * @param {HTMLElement} el \r\n   * @returns {Boolean} Return true if monotired element is selected for further processing\r\n   */\r\n  static #onMonitorFilter(el) {\r\n    return (Boolean(el.dataset?.adoptable))\r\n      && (\r\n        (el instanceof HTMLLinkElement && (el.rel === 'stylesheet' || el.as === \"style\"))\r\n        || el instanceof HTMLStyleElement\r\n      );\r\n  }\r\n\r\n  /**\r\n   * When style added to the HTML page, attach it to the WebComponents\r\n   * @param {HTMLStyleElement|HTMLLinkElement} el \r\n   */\r\n  static #onMonitorConnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    if (el instanceof HTMLStyleElement) {\r\n      me.#adoptStyle(el, el.innerText);\r\n      me.update();\r\n    } else if (el instanceof HTMLLinkElement) {\r\n      GSEvents.wait(el, 'load', 0, false).then(e => {\r\n        if (el.rel === 'preload') return el.rel = \"stylesheet\";\r\n        me.#adoptLink(e.target);\r\n        me.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When style removed, remove from adoptable and update\r\n   * @param {HTMLElement} el \r\n   */\r\n  static #onMonitorDisconnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    me.#sorted.filter(o => o.id === el[adoptedId])\r\n          .forEach(o => me.#remove(el, o));\r\n    me.update();\r\n  }\r\n\r\n  /**\r\n   * Observe DOM tree from mutations\r\n   * @param {HTMLElement} owner Root element to watch DOM tree from \r\n   */\r\n  static observe(owner) {\r\n    const me = GSAdoptedEngine;\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorConnect, false, owner);\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorDisconnect, true, owner);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBeep class\r\n * @module base/GSBeep\r\n */\r\n\r\n\r\n/**\r\n * A helper class to use browser AudiContext to make tones\r\n * @class\r\n */\r\nexport class GSBeep {\r\n\r\n    static audioCtx = globalThis.AudioContext || globalThis.webkitAudioContext || globalThis.audioContext;\r\n\r\n    /**\r\n     * Helper function to emit a beep sound in the browser using the Web Audio API.\r\n     * \r\n     * @param {number} duration - The duration of the beep sound in milliseconds.\r\n     * @param {number} frequency - The frequency of the beep sound.\r\n     * @param {number} volume - The volume of the beep sound.\r\n     * @param {string} tyoe - The sound type (sine, square, sawtooth, triangle, custom)\r\n     * \r\n     * @returns {Promise} - A promise that resolves when the beep sound is finished.\r\n     */\r\n    static beep(duration = 200, frequency = 440, volume = 1, type = 'sine') {\r\n        return new Promise((resolve, reject) => {\r\n            try{\r\n                if (!GSBeep.isAvailable) return resolve();\r\n                const context = new GSBeep.audioCtx();\r\n                const oscillatorNode = context.createOscillator();\r\n                const gainNode = context.createGain();\r\n                oscillatorNode.connect(gainNode);\r\n\r\n                // Set the oscillator frequency in hertz\r\n                oscillatorNode.frequency.value = frequency;\r\n\r\n                // Set the type of oscillator\r\n                oscillatorNode.type = type;\r\n                gainNode.connect(context.destination);\r\n\r\n                // Set the gain to the volume\r\n                gainNode.gain.value = volume * 0.01;\r\n\r\n                // Start audio with the desired duration\r\n                oscillatorNode.start(context.currentTime);\r\n                oscillatorNode.stop(context.currentTime + duration * 0.001);\r\n\r\n                // Resolve the promise when the sound is finished\r\n                oscillatorNode.onended = () => resolve();                \r\n            }catch(error) {\r\n                reject(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    static get isAvailable() {\r\n        const {isActive, hasBeenActive } =  navigator.userActivation;\r\n        return isActive || hasBeenActive;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promisses sequentially\r\n\t * @param {Arrayy<Promise>} ps \r\n\t * @returns \r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport { GSEvent } from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport class GSEventBus {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {String} name EventBus name\r\n     * @param {String} type Event name\r\n     * @param {Object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {String} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {String} name unique buss name\r\n     * @returns {Boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constructor to attach Gesture featuer to an HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {Boolean} swipe Monitor swipe gesture\r\n     * @param {Boolean} tap Monitor tap gesture\r\n     * @param {Boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move: me.#handleTouchMove.bind(me),\r\n            start: me.#handleTouchStart.bind(me),\r\n            end: me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) {\r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 && Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {Number}\r\n     */\r\n    static fingers(e) {\r\n        return e.detail.touches?.length;\r\n    }\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns {GSGesture}\r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport class GSItem extends HTMLElement {\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic properties = {\r\n\t\tactive: { type: Boolean },\r\n\t\tdisabled: { type: Boolean },\r\n\t\tautofocus: { type: Boolean },\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return template content of GS-ITEM element (if exists)\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tget body() {\r\n\t\tlet tpl = GSAttr.get(this, 'template');\r\n\t\tif (tpl) return `<gs-template flat src=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = this.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item elements\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tget items() {\r\n\t\treturn Array.from(this.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSAttr.get(this, 'name', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent GS-* component\r\n\t */\r\n\tget parentComponent() {\r\n\t\treturn GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n\t}\r\n\t\t\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate that parent element contains only specific childrens\r\n\t * @param {*} own \r\n\t * @param {*} tagName \r\n\t * @returns \r\n\t */\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic collect(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Convert GS-ITEM list to JSON\r\n\t * @param {HTMLElement} root Element containing GS-ITEM childs \r\n\t * @returns {Array} Arary of JSON objects\r\n\t */\r\n\tstatic toJSON(root) {\r\n\t\treturn GSItem.collect(root).map(el => el.asJSON(true));\r\n\t}\r\n\r\n\t/**\r\n\t * Make GS-ITEM attributes JSON compatible \r\n\t * @param {*} root \r\n\t * @param {*} definition \r\n\t * @returns \r\n\t */\r\n    static proxify(root, definition) {        \r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, definition));\r\n    }\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSVersion } from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        //if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        }\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport class GSPopper {\r\n\r\n\t/**\r\n\t * A simple wrapper to get element DOMRect\r\n\t * @param {HTMLElement} el \r\n\t * @returns {DOMRect}\r\n\t */\r\n\tstatic asRect(el) {\r\n\t\treturn el.getBoundingClientRect();\r\n\t}\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = GSPopper.asRect(el);\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = GSPopper.asRect(element);\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\r\n\t\tconst css = {\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '0px',\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.translate = `${obj.x}px ${obj.y}px`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tconst astyle = GSDynamicStyle.dynamicStyle(arrow);\r\n\r\n\t\tconst css = {\r\n\t\t\tinset: GSPopper.#inset(pos),\r\n\t\t\tposition: 'absolute',\r\n\t\t\tmargin: '0px',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\twidth: 'max-content',\r\n\t\t\theight: 'max-content',\t\t\t\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\t\tastyle.position = 'absolute';\r\n\r\n\t\tconst srect = GSPopper.asRect(source);\r\n\t\tconst arect = GSPopper.asRect(arrow);\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tconst aopt = {\r\n\t\t\ttranslate: `${arr.x}px ${arr.y}px`,\r\n\t\t\ttop: arr.top ? arr.top : '',\r\n\t\t\tleft: arr.left ? arr.left : ''\r\n\t\t}\r\n\r\n\t\tconst opt = {\r\n\t\t\ttranslate : `${obj.x}px ${obj.y}px`\r\n\t\t};\r\n\r\n\t\tObject.assign(style, opt);\r\n\t\tObject.assign(astyle, aopt);\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst opt = {};\r\n\r\n\t\topt.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\topt.left = '';\r\n\t\t\topt.top = '0px';\r\n\t\t\tshift = 0; //pos.isStart ? size : -1 * size;\r\n\t\t\topt.translate = `${shift}px ${arrowPosH / 2}px`;\r\n\t\t} else {\r\n\t\t\topt.top = '';\r\n\t\t\topt.left = '0px';\r\n\t\t\tshift = 0; //pos.isTop ? size : -1 * size;\r\n\t\t\topt.translate = `${arrowPosW}px ${shift}px`;\r\n\t\t}\r\n\r\n\t\tGSDynamicStyle.applyDynamicStyle(arrow, opt);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {\r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSQueryCSS } from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value);\r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n\r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t// return document.getElementById(tpl.slice(1));\r\n\t\t\treturn GSDOM.query(`template[id=\"${tpl.slice(1)}\"]`, true);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTheme class\r\n * @module base/GSTheme\r\n */\r\n\r\n/**\r\n * Switch between dark and light mode\r\n * @Class\r\n */\r\nexport class GSTheme {\r\n\r\n    static #STORAGE = 'gs-theme-mode';\r\n\r\n    /**\r\n     * Changes the theme to 'dark mode' and save settings to local stroage.\r\n     * Basically, replaces/toggles every CSS class that has '-light' class with '-dark'\r\n     * @param {HTMLElement} el \r\n     */\r\n    static darkMode(el) {\r\n        GSTheme.#switch(el, 'light', 'dark');\r\n    }\r\n\r\n    /**\r\n     * Changes the theme to 'light mode' and save settings to local stroage.\r\n     * @param {HTMLElement} el \r\n     */\r\n    static lightMode(el) {\r\n        GSTheme.#switch(el, 'dark', 'light');\r\n    }\r\n\r\n    static #switch(el, from = 'light', to = 'dark') {\r\n\r\n        const root = el || document.body;\r\n\r\n        // TODO  switch dark/light mode ?!??!? \r\n\r\n        // save last state\r\n        GSTheme.theme = to;\r\n    }\r\n\r\n    static get theme() {\r\n        return localStorage.getItem(GSTheme.#STORAGE);\r\n    }\r\n\r\n    static set theme(val) {\r\n        localStorage.setItem(GSTheme.#STORAGE, val);\r\n        window.dispatchEvent(new CustomEvent('gs-theme', { detail: val }));\r\n        const htmlEl = document.head.parentElement;\r\n        if (val) {\r\n            htmlEl.dataset.bsTheme = val;\r\n        } else {\r\n            delete htmlEl.dataset.bsTheme;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get system default theme by media query\r\n     * @returns {String} dark|light \r\n     */\r\n    static getSystemDefaultTheme() {\r\n        const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\r\n        return darkThemeMq.matches ? 'dark' : 'light';\r\n    }\r\n\r\n    static #onTheme(e) {\r\n        const q = new URLSearchParams(location.hash.slice(1));\r\n        GSTheme.theme = q.get('theme');\r\n    }\r\n\r\n    static #setup() {\r\n        window.addEventListener('hashchange', GSTheme.#onTheme)\r\n        let settings = localStorage.getItem(GSTheme.#STORAGE);\r\n        if (settings == null) {\r\n            settings = GSTheme.getSystemDefaultTheme();\r\n        }\r\n\r\n\r\n        if (settings == 'dark') return GSTheme.darkMode();\r\n        if (settings == 'light') return GSTheme.lightMode();\r\n        // TODO switch\r\n\r\n    }\r\n\r\n    static {\r\n        GSTheme.#setup();\r\n        globalThis.GSTheme = GSTheme;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-attribute - toggle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-call - calls a function on a given target (multipel functions supported)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: \r\n * data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * \r\n * data-gs-target determine element on which to execute,\r\n * if not specified, it means current element\r\n * \r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el) {\r\n        const me = this;\r\n        me.#host = el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = GSAttributeHandler.proxify(me.#host);\r\n    }\r\n\r\n    /**\r\n     * Main function to process element data-gs-* attributes\r\n     * @param {Event} e \r\n     */\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    /**\r\n     * Process each individual data-gs-* attribute\r\n     * @param {GSElement} host \r\n     * @param {String|HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleSwap(target);\r\n        me.#handleInject(host, target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    /**\r\n     * Bind provided value to the form or form element\r\n     * @param {HTMLFormElement|HTMLInputElement} target \r\n     * @param {Event} evt \r\n     * @returns \r\n     */\r\n    #handleBinding(target, evt) {\r\n        const source = evt.target.field || evt.target.form || evt.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (!(isField || isForm)) return;\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Trigger 'action' event on target to execute specific function\r\n     * @param {GSElement} target \r\n     */\r\n    #handleAction(target) {\r\n        if (this.action) GSEvents.send(target, 'action', this.action, true, true);\r\n    }\r\n\r\n    /**\r\n     * Set target attribute value\r\n     * @param {HTMLElement} target \r\n     * @returns \r\n     */\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    /**\r\n     * Set value to target propery\r\n     * @param {GSElement} target \r\n     * @returns \r\n     */\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle target css class\r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {*} host \r\n     * @param {*} target \r\n     * @param {*} evt \r\n     * @returns \r\n     */\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)();\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send an event to a target\r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    /**\r\n     * Inject HTML to target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleInject(host, target) {\r\n        if (this.inject) {\r\n            const src = this.#toHTML(this.inject);\r\n            const content = GSDOM.parse(src, true);\r\n            this.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Swap inner HTML on a target\r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleSwap(target) {\r\n        if (this.swap) target.innerHTML =  this.#toHTML(this.swap);\r\n    }\r\n\r\n    /**\r\n     * Convert value as URL to a tempalte or as a component name to inject\r\n     * @param {String} value \r\n     * @returns {String}\r\n     */\r\n    #toHTML(value = '') {\r\n        return value.indexOf('/') < 0 ? `<${value}></${value}>` : `<gs-template flat src=\"${value}\"></gs-template>`;\r\n    }\r\n\r\n    /**\r\n     * Load HTML template and apply to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    /**\r\n     * Apply htmltemplate to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} template \r\n     */    \r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    /**\r\n     * Apply html template to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} content \r\n     */    \r\n    #applyContent(host, target, content) {\r\n        if (host.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    deattach(name = 'click') {\r\n        //GSEvents.deattachListeners(this.#host);\r\n        const me = this;\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        me.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n        const me = this;\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                //return [GSDOM.root(me.#host)];\r\n                return [me.#host.parentComponent];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n        const list = GSDOM.queryAll(document.body, me.target, false, true).filter(el => el.tagName !== 'GS-ITEM'); \r\n        if (list.length === 0) list.push(me.#host);\r\n        return list;\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    /**\r\n     * Is property value JSON\r\n     */\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    /**\r\n     * Is element attribute value JSON\r\n     */\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    /**\r\n     * Wrap any element into data-gs-* handler\r\n     * @param {HTMLElement} el \r\n     * @returns {Proxy}\r\n     */\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    /**\r\n     * Process data-gs-* attributtes on a element\r\n     * @param {HTMLElement} el \r\n     * @param {Event} e \r\n     * @returns \r\n     */\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    /**\r\n     * Create a new attribute handler instance\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     * @param {boolean} override If 'false' will skip existing atributes\r\n     */\r\n    static clone(from, to, override = true) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .filter(o => override || !to.hasAttribute(o.attribute))          \r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    /**\r\n     * Check if component is bindable to events\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static isBindable(el) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        return Object.values(def)\r\n            .filter(o => el.hasAttribute(o.attribute))\r\n            .length > 0;\r\n\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig  last in, first out (LIFO) order of operations.\r\n */\r\nexport class Stack extends Array {\r\n    \r\n    push(item) {\r\n        this.unshift(item);\r\n    }\r\n\r\n    pop() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure follownig first in, first out (FIFO) order of operations.\r\n */\r\nexport class Queue extends Array {\r\n    \r\n    enqueue(item) {\r\n        this.push(item);\r\n    }\r\n\r\n    dequeue() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst tree = new BinaryTree(1, 'AB');\r\n\r\ntree.insert(1, 11, 'AC');\r\ntree.insert(1, 12, 'BC');\r\ntree.insert(12, 121, 'BG', { right: true });\r\n\r\n[...tree.preOrderTraversal()].map(x => x.value);\r\n// ['AB', 'AC', 'BC', 'BCG']\r\n\r\n[...tree.inOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB', 'BC', 'BG']\r\n\r\ntree.value;                // 'AB'\r\ntree.hasChildren;          // true\r\n\r\ntree.find(12).isLeaf;           // false\r\ntree.find(121).isLeaf;          // true\r\ntree.find(121).parent.value;    // 'BC'\r\ntree.find(12).left;             // null\r\ntree.find(12).right.value;      // 'BG'\r\n\r\ntree.remove(12);\r\n\r\n[...tree.postOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB']\r\n*/\r\n\r\n/**\r\n * Binary Tree Node data holder\r\n */\r\nexport class BinaryTreeNode {\r\n\r\n    constructor(key, value = key, parent = null) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n\r\n    /**\r\n     * Check if both left and right are empty.\r\n     */\r\n    get isLeaf() {\r\n        return this.left === null && this.right === null;\r\n    }\r\n\r\n    /**\r\n     * Check if node has children\r\n     */\r\n    get hasChildren() {\r\n        return !this.isLeaf;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Binary tree implementation\r\n */\r\nexport class BinaryTree extends BinaryTreeNode {\r\n\r\n    constructor(key, value = key) {\r\n        super(key, value);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in in-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *inOrderTraversal(node = this) {\r\n        if (node.left) yield* this.inOrderTraversal(node.left);\r\n        yield node;\r\n        if (node.right) yield* this.inOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in post-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *postOrderTraversal(node = this) {\r\n        if (node.left) yield* this.postOrderTraversal(node.left);\r\n        if (node.right) yield* this.postOrderTraversal(node.right);\r\n        yield node;\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in pre-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *preOrderTraversal(node = this) {\r\n        yield node;\r\n        if (node.left) yield* this.preOrderTraversal(node.left);\r\n        if (node.right) yield* this.preOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to find the given parent node and \r\n     * insert a new child BinaryTreeNode either as the left or right child, \r\n     * depending on the passed options object.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @param {*} options \r\n     * @returns {boolean} Return true if data inserted\r\n     */\r\n    insert(\r\n        parentNodeKey,\r\n        key,\r\n        value = key,\r\n        { left, right } = { left: true, right: true }\r\n    ) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === parentNodeKey) {\r\n                const canInsertLeft = left && node.left === null;\r\n                const canInsertRight = right && node.right === null;\r\n                if (!canInsertLeft && !canInsertRight) return false;\r\n                if (canInsertLeft) {\r\n                    node.left = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n                if (canInsertRight) {\r\n                    node.right = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to remove a BinaryTreeNode from the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.left.key === key) {\r\n                node.left = null;\r\n                return true;\r\n            }\r\n            if (node.right.key === key) {\r\n                node.right = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to retrieve the given node in the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    find(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new DoublyLinkedList();\r\n\r\nlist.insertFirst(1);\r\nlist.insertFirst(2);\r\nlist.insertFirst(3);\r\nlist.insertLast(4);\r\nlist.insertAt(3, 5);\r\n\r\nlist.size;                      // 5\r\nlist.head.value;                // 3\r\nlist.head.next.value;           // 2\r\nlist.tail.value;                // 4\r\nlist.tail.previous.value;       // 5\r\n[...list].map(e => e.value);    // [3, 2, 1, 5, 4]\r\n\r\nlist.removeAt(1);               // 2\r\nlist.getAt(1).value;            // 1\r\nlist.head.next.value;           // 1\r\n[...list].map(e => e.value);    // [3, 1, 5, 4]\r\n\r\nlist.reverse();\r\n[...list].map(e => e.value);    // [4, 5, 1, 3]\r\n\r\nlist.clear();\r\nlist.size;                      // 0\r\n*/\r\n\r\n/**\r\n * Node data holder\r\n */\r\nexport class Node {\r\n\r\n    value = null;\r\n    next = null;\r\n    previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    release() {\r\n        this.value = undefined;\r\n        this.next = undefined;\r\n        this.previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DoublyLinkedList {\r\n\r\n    #nodes = [];\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     */\r\n    get size() {\r\n        return this.#nodes.length;\r\n    }\r\n\r\n    /**\r\n     * First element in the list\r\n     */\r\n    get head() {\r\n        return this.size ? this.#nodes[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Last elemet in the list\r\n     */\r\n    get tail() {\r\n        return this.size ? this.#nodes[this.size - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Create new linked node\r\n     * @param {*} value \r\n     * @param {*} nextNode \r\n     * @param {*} previousNode \r\n     * @returns \r\n     */\r\n    create(value, nextNode, previousNode) {\r\n        return new Node(value, nextNode, previousNode);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the given position in the list\r\n     * @param {*} index \r\n     * @param {*} value \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    insertAt(index, value, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index] || null;\r\n        const node = create(value, nextNode, previousNode);\r\n\r\n        if (previousNode) previousNode.next = node;\r\n        if (nextNode) nextNode.previous = node;\r\n        this.#nodes.splice(index, 0, node);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the beginning of the list\r\n     * @param {*} value \r\n     */\r\n    insertFirst(value) {\r\n        this.insertAt(0, value);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the end of the list\r\n     * @param {*} value \r\n     */\r\n    insertLast(value) {\r\n        this.insertAt(this.size, value);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data in the given index\r\n     * @param {Number} index \r\n     * @returns \r\n     */\r\n    getAt(index) {\r\n        return this.#nodes[index];\r\n    }\r\n\r\n    indexOf(val) {\r\n        return this.#nodes.indexOf(val);\r\n    }\r\n\r\n    /**\r\n     * Remove the data at the given index\r\n     * @param {*} index \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    removeAt(index, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index + 1] || null;\r\n\r\n        if (previousNode) previousNode.next = nextNode;\r\n        if (nextNode) nextNode.previous = previousNode;\r\n\r\n        return this.#nodes.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    clear(full = true) {\r\n        if (full) this.#nodes.forEach(o => o.release());\r\n        this.#nodes = [];\r\n    }\r\n\r\n    /**\r\n     * Reverse data order\r\n     */\r\n    reverse() {\r\n        this.#nodes = this.#nodes.reduce((acc, { value }) => {\r\n            const nextNode = acc[0] || null;\r\n            const node = new Node(value, nextNode, null);\r\n            if (nextNode) nextNode.previous = node;\r\n            return [node, ...acc];\r\n        }, []);\r\n    }\r\n\r\n    toArray() {\r\n        return this.#nodes.map(e => e.value);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#nodes;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield* this.#nodes;\r\n    }\r\n\r\n    #validate(index, safe = false) {\r\n        const isInvalid = this.#isInvalidIndex(index);\r\n        if (isInvalid) {\r\n            if (safe) {\r\n                console.log(this.#error());\r\n            } else {\r\n                throw new Error(this.#error());\r\n            }\r\n        }\r\n        return !isInvalid;\r\n    }\r\n\r\n    #isInvalidIndex(index) {\r\n        return !Number.isInteger(index) || index < 0 || index > this.size;\r\n    }\r\n\r\n    #error() {\r\n        return `Invalid index. Current length is ${this.size}.`;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        const list = new DoublyLinkedList();\r\n        if (Array.isArray(data)) data.forEach(v => list.insertLast(v));\r\n        return list;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Tree Node data holder\r\n */\r\nexport class Tree {\r\n\r\n    value;\r\n\r\n    #key = null;\r\n    #parent = null;\r\n    #children;\r\n\r\n    #folder = false;\r\n    #level = 0;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        this.#key = key;\r\n        this.#parent = parent;\r\n        this.#folder = value?.leaf === false;\r\n        this.#level = parent ? parent.level + 1 : level;\r\n        this.#children = this.#folder ? [] : undefined;\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Return tree list from root to this node.\r\n     * TODO: Refactor when iterator \"map\" become available\r\n     */\r\n    get subtree() {\r\n        return Array.from(this.up(undefined, false, true, true));\r\n    }\r\n\r\n    get levelID() {\r\n        return this.subtree.map(o => o.level).join('.');\r\n    }\r\n\r\n    /**\r\n     * Unique node canonical form\r\n     */\r\n    get nodeID() {\r\n        //if (this.parent?.level < 0) return this.index;\r\n        return this.subtree.map(o => o.index).join('.');\r\n    }\r\n\r\n    get path() {\r\n        return this.subtree.map(o => o.key).join('/');\r\n    }\r\n\r\n    get index() {\r\n        return this.parent?.nodes.indexOf(this) || 0;\r\n    }\r\n\r\n    get size() {\r\n        return this.#children?.length || -1;\r\n    }\r\n\r\n    get level() {\r\n        return this.#level;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Check if #children is empty\r\n     */\r\n    get isLeaf() {\r\n        return !this.#folder;\r\n    }\r\n\r\n    get isFolder() {\r\n        return this.#folder;\r\n    }\r\n\r\n    /**\r\n     * Check if has #childrens\r\n     */\r\n    get hasChildren() {\r\n        return this.#folder && this.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get key() {\r\n        this.#key ??= this.nodeID;\r\n        return this.#key;\r\n    }\r\n\r\n    get nodes() {\r\n        return this.#children;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get parent() {\r\n        return this.#parent;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n    /**\r\n     * Check if there are more siblings \r\n     */\r\n    get hasMore() {\r\n        return this.#parent?.size > this.index + 1;\r\n    }\r\n\r\n    get firstChild() {\r\n        return this.hasMore ? this.#children[0] : undefined;\r\n    }\r\n\r\n    get lastChild() {\r\n        return this.hasMore ? this.#children[this.#children.length - 1] : undefined;\r\n    }\r\n\r\n    get next() {\r\n        return this.down(this, false, false).next().value || this.nextSibling || this.parent?.nextSibling;\r\n    }\r\n\r\n    get previous() {\r\n        const node = this.previousSibling;\r\n        return (node?.hasChildren) ? node.lastChild : node || this.up(this, false, false).next().value;\r\n    }\r\n\r\n    get nextSibling() {\r\n        return this.hasMore ? this.#parent.#children[this.index + 1] : undefined;\r\n    }\r\n\r\n    get previousSibling() {\r\n        return this.index > 0 ? this.#parent.#children[this.index - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Clear all #children\r\n     */\r\n    clear() {\r\n        if (this.#children) {\r\n            this.#children.forEach(o => o.release?.());\r\n            this.#children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally, if called externally, \r\n     * make sure node is removed from parent \r\n     */\r\n    release() {\r\n        this.clear();\r\n        this.#key = null;\r\n        this.value = null;\r\n        this.#parent = null;\r\n    }\r\n\r\n    /**\r\n     * Walk down the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     * @param {Boolean} flat Navigate all nodes out of subtree\r\n     */\r\n    *down(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (node.#children?.length) {\r\n            for (let child of node.#children) {\r\n                yield* this.down(child, values, true, reverse, flat);\r\n            }\r\n        }\r\n        if (flat) {\r\n            const item = node.nextSibling || node.parent.nextSibling;\r\n            if (item) yield* this.down(item, values, true, reverse, flat);\r\n        }\r\n        /*\r\n        */\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk up the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     */\r\n    *up(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (flat) {\r\n            let item = node.previousSibling;\r\n            item = item?.isFolder ? item.lastChild : item\r\n            if (item) yield* this.up(item, values, true, reverse, flat);\r\n        }        \r\n        if (node.parent) {\r\n            yield* this.up(node.parent, values, true, reverse, flat);\r\n        }\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk through all nodes\r\n     * @param {*} node \r\n     */\r\n    walk = this.down;\r\n\r\n    /**\r\n     * Simulate array function \"forEach\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */\r\n    forEach(callback, flat = false, reverse = false) {\r\n        this.every((node, index) => {\r\n            callback(node, index);\r\n            return true;\r\n        }, flat, reverse);\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"every\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    every(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let sts = true;\r\n        let i = 0;\r\n        for (let node of it) {\r\n            sts = callback(node, i++);\r\n            if (!sts) break;\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"find\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    find(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let i = 0;\r\n        for (let node of it) {\r\n            if (callback(node, i++)) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"filter\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only childrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    filter(callback, flat, reverse) {\r\n        return [...this.#filtered(callback, flat, reverse)];\r\n    }\r\n\r\n    *#filtered(callback, flat, reverse) {\r\n        const it = this.iterate(flat, reverse);\r\n        for (let node of it) {\r\n            let res = callback(node);\r\n            if (res) yield node;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Iterate all nodes\r\n     * @param {boolean} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {boolean} reverse If set, will iterate up the tree\r\n     */\r\n    *iterate(flat, reverse) {\r\n        reverse ? yield* this.up(this, false, false, false, flat) : yield* this.down(this, false, false,  false, flat);\r\n    }\r\n\r\n    /**\r\n     * Add a new Tree to the tree.\r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    append(key, value = key) {\r\n        let newOne = undefined;\r\n        if (key instanceof Tree) {\r\n            key.#parent = this;\r\n            key.#level = this.#level + 1;\r\n            newOne = key;\r\n        } else {\r\n            newOne = new Tree(key, value, this);\r\n        }\r\n        this.#folder = true;\r\n        this.#children ??= [];\r\n        this.#children.push(newOne);\r\n        return newOne;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method and Array.prototype.push() \r\n     * to add a new Tree to the tree.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    insert(parentNodeKey, key, value = key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === parentNodeKey) {\r\n                const newOne = new Tree(key, value, node);\r\n                this.#folder = true;\r\n                this.#children ??= [];\r\n                node.#children.push(newOne);\r\n                return newOne;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove node from tree. If key is set, will search for first node with matching key.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n\r\n        const me = this;\r\n\r\n        if (key) {\r\n            const node = me.findByKey(key);\r\n            node?.remove();\r\n            return node;\r\n        }\r\n\r\n        if (me.isRoot) throw new Error('Root node can\\'t be removed!');\r\n        const node = me.parent;\r\n        const filtered = node.#children.filter(c => c !== me);\r\n        if (filtered.length !== node.#children.length) {\r\n            node.#children = filtered;\r\n            return me;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method to retrieve the given node in the tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    findByKey(key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convert tree into array list\r\n     * @returns \r\n     */\r\n    flatten(values, inclusive, reverse) {\r\n        return [...this.down(this, values, inclusive, reverse)];\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) Tree.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.#children?.map(o => o.toJSON()) || {};\r\n        return this.isLeaf ? { key: this.key, value: this.value } :\r\n            {\r\n                key: this.key,\r\n                value: this.value,\r\n                items: this.#children.map(o => o.toJSON())\r\n            }\r\n    }\r\n\r\n    /**\r\n     * Make node iterable\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.down();\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof Tree;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) throw new Error('Parent required when data is array');\r\n            raw.forEach(o => Tree.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        const tree = new Tree(obj.key, obj, data ? parent : undefined);\r\n        if (hasParent) parent.append(tree);\r\n        if (items) Tree.from(tree, items);\r\n        return tree;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../base/GSID.mjs\";\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynamic menu etc.\r\n * @Class\r\n */\r\nexport class GSAbstractReadWrite extends GSEvent {\r\n\r\n    static #SELECT = Symbol('select');\r\n\r\n    #id = null;\r\n    #processors = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to register\r\n     * @param {object} processor\r\n     */\r\n    addProcessor(processor) {\r\n        if (!processor) return;\r\n        this.#processors ??= new Set();\r\n        this.#processors.add(processor);\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to remove\r\n     * @param {object} processor \r\n     */    \r\n    removeProcessor(processor) {\r\n        if (processor) this.#processors?.delete(processor);\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Generic event dispatcher, can be overriden to controll when to fire event\r\n     * @param {*} owner \r\n     * @param {*} type \r\n     * @param {*} data \r\n     * @param {*} error \r\n     */\r\n    notify(owner, type, data, error) {\r\n        this.emit(error ? 'error' : type, { type: type, error: error, owner: owner, data: data }, true);\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.#processors?.forEach(c => c.postRead?.(data));\r\n            if (data) me.notify(owner, 'read', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'read', data, e);\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.#processors?.forEach(c => c.postWrite?.(data));\r\n            if (result) me.notify(owner, 'write', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'write', data, e);\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        if (!val) return false;\r\n        GSUtil.asArray(val).forEach(o => o[GSAbstractReadWrite.#SELECT] = true);\r\n        const me = this;\r\n        me.emit('selection-add', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        if (!val) return false;\r\n        delete val[GSAbstractReadWrite.#SELECT];\r\n        const me = this;\r\n        me.emit('selection-remove', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        const me = this;\r\n        GSUtil.asArray(data).forEach(o => me.removeSelected(o));\r\n        me.emit('selection-clear');\r\n        me.emit('select');\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    getSelected(data = []) {\r\n        const me = this;        \r\n        return GSUtil.asArray(data).filter(o => me.isSelected(o));\r\n    }\r\n\r\n    /**\r\n     * Check if record id is in list of selected records\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    isSelected(val) {\r\n        return val ? val[GSAbstractReadWrite.#SELECT] === true : false;\r\n    }\r\n\r\n    /**\r\n     * Get list of selected records.\r\n     * Override in inherited class\r\n     */\r\n    get selected() {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"../base/GSFunction.mjs\";\r\nimport { GSLoader } from \"../base/GSLoader.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSAbstractReadWrite } from \"./AbstractReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #TYPE = \"remote\";\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #key = null;\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically register in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */\r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */\r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return { ...this.#headers };\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = { ...val };\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     */\r\n    get key() {\r\n        return this.#key;\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     * @var {String} \r\n     */\r\n    set key(val) {\r\n        this.#key = val;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */\r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#filter = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#sort = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest', 'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#writer);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSReadWrite.#TYPE, GSReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSData } from \"../base/GSData.mjs\";\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSCachedReadWrite class\r\n * @module base/GSCachedReadWrite\r\n */\r\n\r\n/**\r\n * ReadWrite with cached memory data. \r\n * @Class\r\n */\r\nexport class GSCachedReadWrite extends GSReadWrite {\r\n\r\n    static #TYPE = 'cached';\r\n\r\n    #data = [];\r\n\r\n    #reformat(data = []) {\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        return records;\r\n    }\r\n\r\n    #postFilter(data) {\r\n        const me = this;\r\n        data = GSData.sortData(data, me.sort);        \r\n        let limit = me.limit === 0 ? data.length : me.limit;\r\n        data = data.slice(me.skip, me.skip + limit);\r\n        return data;\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelected(this.#data);\r\n        this.#data = [];\r\n    }\r\n\r\n    append(data) {\r\n        if(!data) return false;\r\n        const me = this;\r\n        data = me.#reformat(data);\r\n        me.#data = me.#data.concat(data);\r\n        return me.#data;\r\n    }\r\n\r\n    remove(data) {\r\n        const me = this;\r\n        me.removeSelected(data);\r\n        me.#data = me.#data.filter(o => o =! data);\r\n        return me.#data;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n\r\n        if (me.#data.length === 0) {\r\n            const data = await super.onRead();\r\n            me.#data = me.#reformat(data);\r\n        }\r\n\r\n        let data = GSData.filterData(me.#data, me.filter, me.fields, me.limit);\r\n        data = me.#postFilter(data);\r\n        return data;\r\n    }\r\n\r\n    async onWrite(owner, data) {\r\n        return this.append(data);        \r\n    }\r\n\r\n    disable() {\r\n        this.#data = [];\r\n        super.disable();\r\n    }\r\n\r\n    set search(val) {\r\n        const me = this;\r\n        me.filter = val ? [{value : val}] : [];\r\n        me.read();\r\n        /*\r\n        let data = GSData.filterData(me.#data, [{value : val}]);\r\n        data = me.#postFilter(data);\r\n        me.notify(me, 'read', data);\r\n        */\r\n    }\r\n\r\n    clearSelected() {\r\n        return super.clearSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return super.getSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSCachedReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSCachedReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSCachedReadWrite.#TYPE, GSCachedReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { Tree } from \"../helpers/Tree.mjs\";\r\n\r\n/**\r\n * A module loading TreeNode class\r\n * @module data/TreeNode\r\n */\r\n\r\n/**\r\n * UI mediator between Tree linked nodes and WebComponents\r\n * @Class\r\n */\r\nexport class TreeNode extends Tree {\r\n\r\n    #multi = false;\r\n    #opened = false;\r\n    #focused = false;\r\n    #selected = false;\r\n    \r\n    #focusedNode = undefined;\r\n    #selectedNode = undefined;\r\n    #controllers = undefined;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        super(key, value, parent, level);\r\n\r\n        if (value?.select === true || (this.multi && parent?.selected)) this.selected = true;\r\n        if (value?.focus === true) this.focused = true;\r\n        if (value?.open === true) this.opened = true;\r\n    }\r\n\r\n    addController(controller) {\r\n        const root = this.root;\r\n        (root.#controllers ??= new Set()).add(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.root.#controllers?.delete(controller);\r\n    }\r\n\r\n    /**\r\n     * Is multi selection available\r\n     */\r\n    get multi() {\r\n        return this.root.#multi === true;\r\n    }\r\n\r\n    set multi(val) {\r\n        this.root.#multi = val === true;\r\n    }\r\n\r\n    get visible() {\r\n        if (this.level < 0) return true;\r\n        return this.parent?.opened;\r\n    }\r\n\r\n    /**\r\n     * select single node, removing seelction flag from all other nodes\r\n     */\r\n    get opened() {\r\n        if (this.level < 0) return true;\r\n        return this.isLeaf ? this.parent?.opened : this.#opened;\r\n    }\r\n\r\n    set opened(val) {\r\n        val = val === true;\r\n        if (val) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus single node, removing focus flag from all other nodes\r\n     */\r\n    get focused() {\r\n        return this.#focused;\r\n    }\r\n\r\n    set focused(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const changed = this.#focused != val;\r\n        const focusedNode = root.focusedNode();\r\n        \r\n        root.#focusedNode = undefined;        \r\n        this.#focused = val;\r\n        if (focusedNode && focusedNode !== this) {\r\n            focusedNode.focused = false;\r\n        }\r\n\r\n        if (val) root.#focusedNode = this;\r\n        if (changed) root.#controllers?.forEach((c) => c.onFocusChanged?.(this));\r\n    }\r\n\r\n    /**\r\n     * Select single or multi node, depending on multi selection flag\r\n     * If single, remove selection flag from all other nodes\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    set selected(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const selectedNode = root.selectedNode();\r\n        const changed = this.#selected != val;\r\n        this.#selected = val;\r\n        if (val) {\r\n            if (selectedNode && selectedNode !== this && !root.multi) {\r\n                selectedNode.selected = false;\r\n            }\r\n            root.#selectedNode = this;\r\n        }\r\n        if (changed) {\r\n            root.#controllers?.forEach((c) => c.onSelectionChanged?.(this, selectedNode));\r\n            if (root.multi) root.#controllers?.forEach((c) => c.onSelectionChanged?.(this.parent, selectedNode));\r\n        } \r\n    }\r\n\r\n    get isPartialySelected() {\r\n        return this.selected && this.hasChildren && this.nodes.length > this.nodes.filter(n => n.selected).length;\r\n    }\r\n\r\n    /* hide from public\r\n    get host() {\r\n        return this[Symbol.for('gs-element')];\r\n    }\r\n\r\n    set host(el) {\r\n        this[Symbol.for('gs-element')] = el;\r\n    }\r\n    */\r\n\r\n    selectAll() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            this.deselectAll();\r\n            this.selected = true;\r\n            return\r\n        }\r\n        this.#selectionFlag(true);\r\n        root.#selectedNode = this;\r\n        root.#controllers?.forEach((c) => c.onSelectAll?.(root));\r\n    }\r\n\r\n    deselectAll() {\r\n        const root = this.root;\r\n        this.#selectionFlag(false);\r\n        root.#selectedNode = undefined;\r\n        root.#controllers?.forEach((c) => c.onDeselectAll?.(root));\r\n    }\r\n\r\n    /**\r\n     * Return last focused node\r\n     * @returns \r\n     */\r\n    focusedNode() {\r\n        const node = this.root.#focusedNode;\r\n        return node?.focused ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * Return last selected node\r\n     * @returns \r\n     */\r\n    selectedNode() {\r\n        const node = this.root.#selectedNode;\r\n        return node?.selected ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * List all selected nodes.\r\n     * TODO; refactor when Iterator.filter become available \r\n     * @returns \r\n     */\r\n    selectedNodes() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            const node = root.selectedNode()\r\n            return node?.selected ? [node] : [];\r\n        }\r\n        const result = [];\r\n        for (let node of root.walk()) {\r\n            if (node.selected) result.push(node);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Call from external controller data must be refresshed (to notify UI optionally)\r\n     * @param {*} root \r\n     */\r\n    refresh(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onRefresh?.(this));\r\n    }\r\n\r\n    /**\r\n     * Notify controllers about data loading (from async controller)\r\n     * @param {*} root \r\n     */\r\n    loading(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onLoad?.(this));\r\n    }\r\n\r\n    expandAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.expand(root);\r\n        }\r\n    }\r\n\r\n    collapseAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.collapse(root);\r\n        }\r\n    }\r\n\r\n    expand(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        if (!me.parent?.opened) {\r\n            me.parent?.expand(root);\r\n        }\r\n        const update = !me.opened;\r\n        me.#opened = true;\r\n        if (update) me.#expanded(root);\r\n        //me.nodes?.filter( n => !n.opened).forEach(c => c.refresh(root));\r\n        me.nodes?.forEach(c => c.refresh(root));\r\n    }\r\n\r\n    collapse(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        const update = me.#opened || me.parent.#opened;\r\n        me.nodes?.filter(n => n.opened || n.parent.opened).forEach(o => o.collapse(root));\r\n        //me.nodes?.forEach(o => o.collapse(root));\r\n        me.#opened = false;\r\n        if (update) me.#collapsed(root);\r\n    }\r\n\r\n    select(val = true) {\r\n        this.selected = val === true;\r\n    }\r\n\r\n    #expanded(root) {\r\n        root.#controllers?.forEach((c) => c.onExpand?.(this));\r\n    }\r\n\r\n    #collapsed(root) {\r\n        root.#controllers?.forEach((c) => c.onCollapse?.(this));\r\n    }\r\n\r\n    release() {\r\n        if (this.#selected) this.selected = false;\r\n        super.release();\r\n    }\r\n\r\n    append(key, value = key) {\r\n        const me = this;\r\n        const node = super.append(key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onAppend?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    insert(parentNodeKey, key, value = key) {\r\n        const me = this;\r\n        const node = super.insert(parentNodeKey, key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onInsert?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    remove() {\r\n        const node = super.remove();\r\n        if (node) this.root.#controllers?.forEach((c) => c.onInsert?.(node));\r\n        return node;\r\n    }\r\n\r\n    #selectionFlag(val = false) {\r\n        val = val === true\r\n        for (let node of this.walk()) {\r\n            node.selected = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) TreeNode.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.nodes?.map(o => o.toJSON()) || {};\r\n        const obj = Object.assign({\r\n            key: this.key,\r\n            opened: this.#opened,\r\n            focused: this.#focused,\r\n            selected: this.#selected,\r\n            items: undefined\r\n        }, this.value);\r\n        obj.items = this.nodes?.map(o => o.toJSON());\r\n        return obj;\r\n    }\r\n\r\n    static get root() {\r\n        return new TreeNode(null, null, null, -1);\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof TreeNode;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) return TreeNode.from(TreeNode.root, raw);\r\n            raw.forEach(o => TreeNode.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        obj.leaf = !Array.isArray(items);\r\n        const tree = new TreeNode(obj.key, obj, data ? parent : undefined);\r\n        if (items) TreeNode.from(tree, items);\r\n        if (hasParent) parent.append(tree);\r\n        return tree;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { TreeNode } from \"./TreeNode.mjs\";\r\n\r\n/**\r\n * A module loading GSTreeReader class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for reading Tree nodes\r\n * @Class\r\n */\r\nexport class GSTreeReader extends GSReadWrite {\r\n\r\n    #data = TreeNode.root;\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    async write(val) {\r\n        throw new Error('Writer not available for TreeReader')\r\n    }\r\n\r\n    async read(owner) {\r\n        const me = this;\r\n        let node = undefined;\r\n        const data = await super.read(owner);\r\n        if (!this.#data) {\r\n            node = TreeNode.from(data);\r\n            this.#data = node;\r\n        } else {\r\n            const parent = me.filter?.length > 0 ? me.#data.findByKey(me.filter[0]) : me.#data;\r\n            parent.clear();\r\n            node = parent.fromJSON(data);\r\n        }\r\n        me.filter = undefined;\r\n        me.notify(owner, 'read', node);\r\n        return node;\r\n    }\r\n\r\n    disable() {\r\n        super.disable();\r\n        this.#data?.release();\r\n    }\r\n\r\n    notify(owner, type, data, error) {\r\n        const isNode = data instanceof TreeNode;\r\n        if (!error && !isNode && type === 'read') return;\r\n        super.notify(owner, type, data, error);\r\n    }\r\n\r\n    /**\r\n     * Called from Tree when node is expanded \r\n     * @param {*} node \r\n     */\r\n    async onExpand(node) {\r\n        if (node.hasChildren) return;\r\n        node.loading();\r\n        this.filter = node.key;\r\n        return await this.read();\r\n    }\r\n\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSTreeReader} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSTreeReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('tree', GSTreeReader);\r\n    }\r\n\r\n}","// Lit 3.0 Google\r\nconst litUrl = globalThis.GS_LIT_URL || '/bootstrap-lit/assets/lib/lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const Directive = litModule.Directive;\r\nexport const LitElement = litModule.LitElement;\r\nexport const PartType = litModule.PartType;\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const adoptStyles = litModule.adoptStyles;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const createRef = litModule.createRef;\r\nexport const css = litModule.css;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const directive = litModule.directive;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getCompatibleStyle = litModule.getCompatibleStyle;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const guard = litModule.guard;\r\nexport const html = litModule.html;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isServer = litModule.isServer;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const literal = litModule.literal;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const noChange = litModule.noChange;\r\nexport const notEqual = litModule.notEqual;\r\nexport const nothing = litModule.nothing;\r\nexport const range = litModule.range;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const render = litModule.render;\r\nexport const repeat = litModule.repeat;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const staticHtml = litModule.staticHtml;\r\nexport const staticSvg = litModule.staticSvg;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const svg = litModule.svg;\r\nexport const templateContent = litModule.templateContent;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const unsafeStatic = litModule.unsafeStatic;\r\nexport const until = litModule.until;\r\nexport const when = litModule.when;\r\nexport const withStatic = litModule.withStatic;","import { Directive, directive, nothing } from \"../lib.mjs\";\r\n\r\nconst definition = {\r\n    'action': 'gsAction',\r\n    'anchor': 'gsAnchor',\r\n    'attribute': 'gsAttribute',\r\n    'call': 'gsCall',\r\n    'exec': 'gsExec',\r\n    'inject': 'gsInject',\r\n    'property': 'gsProperty',\r\n    'swap': 'gsSwap',\r\n    'target': 'gsTarget',\r\n    'template': 'gsTemplate',\r\n    'toggle': 'gsToggle',\r\n    'trigger': 'gsTrigger',\r\n    'value': 'gsValue'\r\n}\r\n\r\nconst template = {\r\n    'gsAction': undefined,\r\n    'gsAnchor': undefined,\r\n    'gsAttribute': undefined,\r\n    'gsCall': undefined,\r\n    'gsExec': undefined,\r\n    'gsInject': undefined,\r\n    'gsProperty': undefined,\r\n    'gsSwap': undefined,\r\n    'gsTarget': undefined,\r\n    'gsTemplate': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTrigger': undefined,\r\n    'gsValue': undefined\r\n}\r\n\r\nclass DatasetDirective extends Directive {\r\n\r\n    render(obj) {\r\n        console.log(obj);\r\n        return nothing;\r\n    }\r\n\r\n    update(part, [obj, flat = true]) {\r\n\r\n        if (!obj) return nothing;\r\n\r\n        const dataset = part.element.dataset;\r\n        const srcset = obj.dataset || obj;\r\n        const isDataset = srcset instanceof DOMStringMap;\r\n\r\n        if (isDataset) {\r\n            Object.assign(dataset, srcset);\r\n        } \r\n        \r\n        if (flat) this.#remap(dataset, obj);\r\n\r\n        return nothing;\r\n    }\r\n\r\n    #remap(dataset, obj) {\r\n        const opt = Object.assign({}, template);\r\n        const list = Object.entries(obj).filter(v => Object.hasOwn(definition, v[0]));\r\n        if (list.length > 0) {\r\n            list.forEach(kv => opt[definition[kv[0]]] = kv[1]);\r\n            Object.assign(dataset, opt);\r\n        }\r\n    }\r\n}\r\n\r\nexport const dataset = directive(DatasetDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\n\r\n/**\r\n * Generic object property descritptor getter\r\n * @param {Object} instance \r\n * @returns {PropertyDescriptor}\r\n */\r\nfunction descriptors(instance) {\r\n  return Object.entries(Object.getOwnPropertyDescriptors(instance));\r\n}\r\n\r\n/**\r\n * List of all object property descriptors \r\n * @param {Object} instance Object instance \r\n * @returns {Array<PropertyDescriptor>}\r\n */\r\nfunction listProperties(instance) {\r\n  return descriptors(instance)\r\n    .filter(e => typeof e[1].value !== 'function')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List all object property getters\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGetters(instance) {\r\n  return descriptors(Reflect.getPrototypeOf(instance))\r\n    .filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List of all getteble properties from an object\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGettable(instance) {\r\n  return new Set([...listGetters(instance), ...listProperties(instance)]);\r\n}\r\n\r\n/**\r\n * Parse string literal template into Lit html instance\r\n * @param {*} tpl \r\n * @param {*} params \r\n * @returns {function}\r\n */\r\nexport function literalTemplate(tpl, params) {\r\n  const names = Array.from(listGettable(params));\r\n  const vals = names.map(v => params[v]);\r\n  names.push('html');\r\n  vals.push(html);\r\n  return new Function(...names, `return html\\`${tpl}\\`;`)(...vals);\r\n}","/**\r\n * A clone of classMap directive to support CSS directive.\r\n * Lit classs is not expoed, so we have to clone it and create our own.\r\n */\r\n\r\nimport { Directive, PartType, directive, noChange } from \"../lib.mjs\";\r\n\r\nclass CssMapDirective extends Directive {\r\n\r\n    constructor(partInfo) {\r\n        super(partInfo);\r\n        if (partInfo.type !== PartType.ATTRIBUTE ||\r\n            partInfo.name !== 'css' ||\r\n            partInfo.strings?.length > 2) {\r\n            throw new Error('`classMap()` can only be used in the `css` attribute ' +\r\n                'and must be the only part in the attribute.');\r\n        }\r\n    }\r\n\r\n    render(classInfo) {\r\n        // Add spaces to ensure separation from static classes\r\n        return (' ' +\r\n            Object.keys(classInfo)\r\n                .filter((key) => classInfo[key])\r\n                .join(' ') +\r\n            ' ');\r\n    }\r\n\r\n    update(part, [classInfo]) {\r\n\r\n        // Remember dynamic classes on the first render\r\n        if (this._previousClasses === undefined) {\r\n            this._previousClasses = new Set();\r\n            if (part.strings !== undefined) {\r\n                this._staticClasses = new Set(part.strings\r\n                    .join(' ')\r\n                    .split(/\\s/)\r\n                    .filter((s) => s !== ''));\r\n            }\r\n\r\n            for (const name in classInfo) {\r\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\r\n                    this._previousClasses.add(name);\r\n                }\r\n            }\r\n            return this.render(classInfo);\r\n        }\r\n\r\n        const classList = part.element.classList;\r\n\r\n        // Remove old classes that no longer apply\r\n        for (const name of this._previousClasses) {\r\n            if (!(name in classInfo)) {\r\n                classList.remove(name);\r\n                this._previousClasses.delete(name);\r\n            }\r\n        }\r\n\r\n        // Add or remove classes based on their classMap value\r\n        for (const name in classInfo) {\r\n            // We explicitly want a loose truthy check of `value` because it seems\r\n            // more convenient that '' and 0 are skipped.\r\n            const value = !!classInfo[name];\r\n            if (value !== this._previousClasses.has(name) &&\r\n                !this._staticClasses?.has(name)) {\r\n                if (value) {\r\n                    classList.add(name);\r\n                    this._previousClasses.add(name);\r\n                } else {\r\n                    classList.remove(name);\r\n                    this._previousClasses.delete(name);\r\n                }\r\n            }\r\n        }\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * A directive that applies dynamic CSS classes.\r\n *\r\n * This must be used in the `css` attribute and must be the only part used in\r\n * the attribute. It takes each property in the `classInfo` argument and adds\r\n * the property name to the element's `classList` if the property value is\r\n * truthy; if the property value is falsey, the property name is removed from\r\n * the element's `css`.\r\n *\r\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\r\n * truthy.\r\n *\r\n * @param classInfo\r\n */\r\nexport const cssMap = directive(CssMapDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocapitalizeTypes = ['', 'none', 'off', 'on', 'sentences', 'words', 'characters'];\r\n\r\nexport const autocapitalize = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocapitalizeTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocompleteTypes = ['', 'off', 'on'];\r\n\r\nexport const autocomplete = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocompleteTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocorrectTypes = ['', 'on', 'off'];\r\n\r\nexport const autocorrect = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocorrectTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class ButtonTypes {\r\n\r\n    static values = ['button', 'reset', 'submit'];\r\n\r\n    static is(val) {\r\n        return ButtonTypes.values.includes(val);\r\n    }\r\n\r\n    static isReest(val) {\r\n        return ButtonTypes.values.indexOf(val) === 1;\r\n    }\r\n\r\n    static isSubmit(val) {\r\n        return ButtonTypes.values.indexOf(val) === 2;\r\n    }\r\n} \r\n\r\nexport const buttonType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ButtonTypes.is(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ColorTypes = ['', 'primary', 'secondary', 'dark', 'light', 'info', 'warning', 'danger', 'alert', 'link', 'success'];\r\n\r\nexport const color = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ColorTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'dektop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const InputTypes = [\r\n   { type: 'checkbox', ignore: true},\r\n   { type: 'radio', ignore: true},\r\n   { type: 'switch', ignore: true},\r\n   { type: 'range', ignore: true},\r\n   { type: 'number', native: true},\r\n   { type: 'email', native: true},\r\n   { type: 'url',  native: true},\r\n   { type: 'file', native: true}, \r\n   { type: 'text'},\r\n   { type: 'password'}\r\n];\r\n\r\nexport const inputType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && InputTypes.filter(o => o.type === newVal).length === 1;\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const NavTypes = ['', 'pills', 'tabs', 'underline'];\r\n\r\nexport const nav = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && NavTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PlacementTypes {\r\n\r\n    static values = ['center', 'left', 'right', 'start', 'end', 'top', 'bottom'];\r\n\r\n    static includes(val) {\r\n        return PlacementTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        return PlacementTypes.values.indexOf(val) > 4;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = PlacementTypes.values.indexOf(val)\r\n        return idx > 0 && idx < 5;\r\n    }\r\n\r\n    static isCenter(val) {\r\n        return PlacementTypes.values.indexOf(val) === 0;\r\n    }\r\n\r\n    static isBefore(val) {\r\n        return ['left', 'start', 'top'].includes(val);\r\n    }\r\n\r\n    static isAfter(val) {\r\n        return ['right', 'end', 'bottom'].includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const placement = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PlacementTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PositionTypes {\r\n\r\n    static values = ['absolute', 'fixed', 'relative', 'sticky', 'static'];\r\n\r\n    static includes(val) {\r\n        return PositionTypes.values.includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const position = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PositionTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const SizeTypes = { 'default' : '', 'normal': '',  'medium': '', 'small': 'sm', 'large': 'lg', 'big' : 'lg', 'extra' : 'xl' };\r\n\r\nexport const size = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && Object.hasOwn(SizeTypes, newVal);\r\n    }\r\n\r\n};","export const stringArrayConverter = {\r\n    fromAttribute: (value, type) => {\r\n        return (value || '').split(',');\r\n    },\r\n    toAttribute: (value, type) => {\r\n        return (value || []).join(',');\r\n    }\r\n  }","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCacheStyles } from '../base/GSCacheStyles.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time even gs-adopted is triggered by the GSAdoptedEngien class,\r\n * all registerd controller will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to preven dom node polution; \r\n * Style  changes  are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me.#host);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values, isGlobal = false) {\r\n    const me = this;\r\n    let style = null;\r\n    if (isGlobal) {\r\n      style = GSCacheStyles.dynamic;\r\n    } else {\r\n      me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');      \r\n      style = me.#dynamic;\r\n    }    \r\n    if (values === null && style.rules.length > 0 ) return style.removeRule(name);\r\n    return style.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.deattach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (!me.#isSelf() && me.#target) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs).forEach(el => el?.remove());\r\n      me.#refs.clear();\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n  #selectCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#selectCallback = me.#onSelect.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async relink(read = true) {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#listen(read);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.filter = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get selected() {\r\n    return this.store?.selected;\r\n  }\r\n\r\n  isSelected(val) {\r\n    return this.store?.isSelected(val);\r\n  }\r\n\r\n  addSelected(val) {\r\n    return this.store?.addSelected(val);\r\n  }\r\n  \r\n  removeSelected(val) {\r\n    return this.store?.removeSelected(val);\r\n  }\r\n\r\n  clearSelected(data) {\r\n    return this.store?.clearSelected(data);\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    storage?.on('read', me.#readCallback);\r\n    storage?.on('write', me.#writeCallback);\r\n    storage?.on('error', me.#errorCallback);\r\n    storage?.on('select', me.#selectCallback);\r\n    if (read) storage.read(me.#host);\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    storage?.off('read', me.#readCallback);\r\n    storage?.off('write', me.#writeCallback);\r\n    storage?.off('error', me.#errorCallback);\r\n    storage?.off('select', me.#selectCallback);\r\n  }\r\n\r\n  #onSelect(e) {\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for elment move events, properly handling mouse events.\r\n */\r\nexport class ElementMoveController {\r\n\r\n  #host;\r\n  #element;\r\n  #attached = false;\r\n\r\n  #cursorX = 0;\r\n  #cursorY = 0;\r\n\r\n  #mouseUpCallback;\r\n  #mouseDownCallback;\r\n  #mouseMoveCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n    me.#mouseUpCallback = me.#onMouseUp.bind(me);\r\n    me.#mouseDownCallback = me.#onMouseDown.bind(me);\r\n    me.#mouseMoveCallback = me.#onMouseMove.bind(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  attach(element) {\r\n    const me = this;\r\n    if (!me.#attached) {\r\n      me.#element = element;\r\n      me.#attached = true;\r\n      me.#host.attachEvent(me.#element, 'mousedown', me.#mouseDownCallback);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.#cursorX = 0;\r\n    me.#cursorY = 0;\r\n    me.#host.removeEvent(document, 'mouseup', me.#mouseUpCallback);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n  * Call host onStartMove function\r\n  * @param {MouseEvent} e \r\n  */\r\n  #onMouseDown(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n    me.#host.onStartMove?.(e, me.#cursorX, me.#cursorY);\r\n    me.#host.attachEvent(document, 'mouseup', me.#mouseUpCallback, true);\r\n    me.#host.attachEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n   * Remove mousemove listener and call host onEndMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseUp(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n    return me.#host.onEndMove?.(e, me.#cursorX, me.#cursorY);\r\n  }\r\n\r\n  /**\r\n   * Call host onMouseMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseMove(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n\r\n    me.#host.onMouseMove?.(e, me.#cursorX, me.#cursorY);\r\n\r\n    if (me.#cursorX < e.clientX) {\r\n      me.#host.onCursorRight?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorX > e.clientX) {\r\n      me.#host.onCursorLeft?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    if (me.#cursorY < e.clientY) {\r\n      me.#host.onCursorUp?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorY > e.clientY) {\r\n      me.#host.onCursorDown?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #locale;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#locale = host.locale;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#locale !== me.#host?.locale) {\r\n      me.#locale === me.#host?.locale;\r\n      me.updateLanguage(me.#locale);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#locale) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me.#host);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n  static #cache = new Map();\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  // inherited\r\n  hostConnected() {\r\n\r\n  }\r\n\r\n  // inherited\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  // inherited\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#template) return;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      me.#template = TemplateController.#cache.get(ref);      \r\n      me.#lastRef = ref;\r\n      if (ref && !me.#template) TemplateController.#schedule(this);\r\n    }\r\n  }\r\n\r\n  // inherited\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (me.#template) {\r\n      this.#host.removeController(this);\r\n      me.#host.templateInjected?.();\r\n    } \r\n\r\n  }\r\n\r\n  async #load() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (!ref) return;\r\n    let template = null;\r\n    const isTplEl = ref instanceof HTMLTemplateElement;\r\n    const cacheable = GSUtil.isString(ref);\r\n    if (cacheable) {\r\n      template = TemplateController.#cache.get(ref);\r\n    }\r\n    if (!template) {\r\n      template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n      if (cacheable) {\r\n        TemplateController.#cache.set(ref, template);\r\n      }       \r\n    }\r\n    if (template) {\r\n      me.#template = template;\r\n      me.#host.requestUpdate();\r\n    }\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    return GSDOM.templateRef(this.#host);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = false));\r\n    }\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle event when template slot changes\r\n */\r\nexport class SlotController {\r\n\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      const me = this;\r\n      const target = me.#host.renderRoot || me.#host;\r\n      me.#host.attachEvent(target, 'slotchange', me.#onSlotChanged.bind(me));\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    #onSlotChanged(e) {\r\n      e.target.assignedElements().forEach(el => {\r\n        el.onSlotInjected?.(e.target);\r\n      });\r\n    }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\nimport { SlotController } from './controllers/SlotController.mjs';\r\nimport { GSAttributeHandler } from './base/GSAttributeHandler.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    locale: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n  #orientation;\r\n  #localization;\r\n  #dataController;\r\n  #slotController;\r\n  #themes\r\n  #template;\r\n  #content;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.locale = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    //me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n    me.#slotController = new SlotController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    const tpl = GSDOM.templateRef(me);\r\n    if (tpl) me.#template = new TemplateController(me);    \r\n    if (me.isBindable) me.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('storage')) {\r\n      if (me.storage) {\r\n        if (!me.#dataController) {\r\n          me.#dataController = new DataController(me);\r\n        } else {\r\n          me.#dataController.relink();\r\n        }\r\n      } else {\r\n        me.#dataController?.hostDisconnected();\r\n        me.#dataController = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when this element injected in some slot\r\n   * @param {*} slot \r\n   */\r\n  onSlotInjected(slot) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return this.renderTemplate();\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : noChange;\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Called when asynchronnous template is injected into component\r\n   */\r\n  templateInjected() {\r\n    \r\n\t}\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to witch to add parsed CSS\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @param {boolean} isGlobal \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value, isGlobal = false) {\r\n    return this.#adopted.style(id, value, isGlobal);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @param {Number} levels - walk limit\r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '', levels = -1) {\r\n    return GSDOM.closest(this, query, levels);\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.locale, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    //return this.dataset.gsTarget;\r\n    return GSAttributeHandler.isBindable(this);\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template?.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment);\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os);\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol);\r\n  }\r\n\r\n  /**\r\n   * Internal attribute set if component is genrated by other components\r\n   */\r\n  get isGenerated() {\r\n    return this.hasAttribute('generated');\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Get instance of internal styles\r\n   */\r\n  get elementStyles() {\r\n    return this.constructor.elementStyles.map(s => Object.values(s).filter(o => o instanceof CSSStyleSheet).pop()).pop();\r\n  }\r\n\r\n  /**\r\n   * Internal shadow styles rule\r\n   * @param {*} name \r\n   * @returns \r\n   */\r\n  cssRule(name) {\r\n    return Array.from(this.elementStyles.rules).filter(r => r.selectorText === name).pop();\r\n  }\r\n\r\n  /**\r\n   * Set dynamic CSS rule \r\n   * See GSIcon hot it is done\r\n   * @param {*} rule \r\n   * @param {*} name \r\n   * @param {*} value \r\n   */\r\n  setCSSProperty(rule, name, value) {\r\n    this.cssRule(rule).style.setProperty(name, value);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    return GSDOM.allProperties(obj);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, opt);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from \"../GSElement.mjs\";\r\n\r\n/**\r\n * Controller for child element navigation / selection / focusing\r\n */\r\nexport class ElementNavigationController {\r\n\r\n  #host;\r\n  #attached;\r\n  #focused;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#attached = false;\r\n  }\r\n\r\n  get circular() {\r\n    return this.#host?.circular === true;\r\n  }\r\n\r\n  get multiple() {\r\n    return this.#host?.multiple === true;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host.active;\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */\r\n  init() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */  \r\n  attach(el) {\r\n    const me = this;\r\n    if (me.#attached) return;\r\n    me.#attached = true;\r\n    me.#host.attachEvent(el, 'keydown', e => me.onKeyDown(e));\r\n    me.#host.attachEvent(el, 'keyup', e => me.onKeyUp(e));\r\n    me.#host.attachEvent(el, 'click', e => me.onClick(e));\r\n    me.#host.attachEvent(el, 'focusin', e => me.onFocusIn(e));\r\n    me.#host.attachEvent(el, 'focusout', e => me.onFocusOut(e));\r\n  }\r\n\r\n  previous() {\r\n    const me = this;\r\n    let el = me.#focused?.previousElementSibling;\r\n    while (el?.disabled) el = el.previousElementSibling;\r\n    if (me.circular && !el) el = me.lastElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  next() {\r\n    const me = this;\r\n    let el = me.#focused?.nextElementSibling;\r\n    while (el?.disabled) el = el.nextElementSibling;\r\n    if (me.circular && !el) el = me.firstElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    const me = this;\r\n    const active = me.selected;\r\n    if (me.multiple) {\r\n      active.forEach(el => {\r\n        el.active = false;\r\n        el.blur();\r\n      });\r\n    } else if (active) {\r\n      active.active = false;\r\n      active.blur();\r\n    }\r\n    me.#focused = undefined;\r\n    me.#host?.emit('group-reset', undefined, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element selected\r\n   * @param {*} el \r\n   */\r\n  #onSelected(el) {\r\n    const me = this;\r\n    me.#host?.onSelected?.(el);\r\n    me.#host?.emit('group-selected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element deselected\r\n   * @param {*} el \r\n   */\r\n  #onDeselected(el) {\r\n    this.#host?.onDeselected?.(el);\r\n    this.#host?.emit('group-deselected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  #onFocused(el) {\r\n    this.#host?.onFocused?.(el);\r\n    this.#host?.emit('group-focused', el, true);\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  #isNavigable(el) {\r\n    return this.#host?.isNavigable ? this.#host?.isNavigable(el) : true;\r\n  }\r\n\r\n  #focus(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    me.#focused = el;\r\n    if (el) {\r\n      me.#onFocused(me.#focused);\r\n    }\r\n  }\r\n\r\n  #toggle(el) {\r\n    if (!el) return;\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    if (el.active) {\r\n      me.#onSelected(el);\r\n    } else {\r\n      me.#onDeselected(el);\r\n    }\r\n  }\r\n\r\n  #select(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n\r\n    const active = me.selected;\r\n    if (active && !me.multiple) {\r\n      active.active = false;\r\n      me.#toggle(active);\r\n    }\r\n\r\n    if (me.multiple) {\r\n      el.active = !el.active;\r\n    } else {\r\n      el.active = true;\r\n    }\r\n    me.#toggle(el);\r\n  }\r\n\r\n  onFocusOut(e) {\r\n    const me = this;\r\n    //if (me.#focused === e.target) me.#focused = undefined;\r\n  }\r\n\r\n  onFocusIn(e) {\r\n    if (!e.target.isNav) return;\r\n    const me = this;\r\n    if(e.relatedTarget?.isNav) {\r\n      me.#focus(e.target)\r\n    } else {\r\n      me.selected?.focus();\r\n    }\r\n\r\n  }\r\n\r\n  onClick(e) {\r\n    const me = this;\r\n    const el = e.composedPath()\r\n    .filter(el => el instanceof GSElement)\r\n    .filter(el => el.parentComponent === me.#host).pop();\r\n    if (!me.#isNavigable(el)) return;\r\n    if (e.ctrlKey) me.reset();\r\n    me.#onDeselected(me.selected);\r\n    me.#select(el);\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    if (!e.target.isNav) return;\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        me.next();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    if (!e.target.isNav) return;\r\n    switch (e.code) {\r\n      case 'Space':\r\n      case 'Enter':\r\n        me.#focused?.click();\r\n        break;\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEventBus } from \"../base/GSEventBus.mjs\";\r\n\r\n/**\r\n * Controller for multiple elements groups\r\n */\r\nexport class GroupController {\r\n\r\n  #host;\r\n\r\n  #busEvent;\r\n  #busCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    if (me.#host.group) {\r\n      me.#busCallback = me.#onBusEvent.bind(me);\r\n      me.#busEvent = GSEventBus.register(me.#host.clazzName);\r\n      me.#busEvent.on(me.#host.group, me.#busCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#busEvent?.off(me.#host.group, me.#busCallback);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  #onBusEvent(e) {\r\n    this.#host.onBusEvent?.(e);\r\n  }\r\n\r\n  notify(data) {\r\n    const me = this;\r\n    me.#busEvent?.emit(me.#host.group, {owner: me.#host, item:data}); \t\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\n\r\nexport class GSAccordionElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    autoclose: { type: Boolean },\r\n    cssItem: { reflect: true, attribute: 'css-item' },\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    data: { type: Array }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.settings;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n       @notify=\"${me.#onNotify.bind(me)}\"\r\n       @click=\"${me.#onClick}\" \r\n       @keyup=\"${me.#onKeyUp}\" \r\n       class=\"accordion ${classMap(me.renderClass())}\">\r\n       ${this.#renderItems()}\r\n       <slot></slot></div>`\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-accordion-item');\r\n  }\r\n\r\n  get settings() {\r\n    const cfg = this.constructor.properties;\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n  }\r\n\r\n  close() {\r\n    this.#state(false);\r\n  }\r\n\r\n  open() {\r\n    this.#state(true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-accordion-item generated\r\n        .opened=\"${ifDefined(o.disabled === true)}\" \r\n        message=\"${ifDefined(o.message)}\" \r\n        template=\"${ifDefined(o.template)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-accordion-item>`;\r\n    });\r\n  }\r\n\r\n  #state(val = false) {\r\n    this.items.forEach(el => el.opened = val);\r\n    this.notify();\r\n  }\r\n\r\n  #onNotify(e) {\r\n    const me = this;\r\n    if (me.autoclose && e.target.opened) {\r\n      me.items.filter(el => el != e.target).forEach(el => el.opened = false);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const isItemCloser = e?.composedPath()[0]?.matches('.accordion-button');\r\n    if(isItemCloser) e.target.toggle?.();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        e.target.close?.();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.target.open?.();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSAccordionItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    message: { reflect: true, },\r\n    title: { reflect: true, },\r\n    opened: { type: Boolean, reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-ACCORDION';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const owner = me.owner;\r\n    const cssHeader = me.cssHeader || owner?.cssHeader;\r\n    const cssBody = me.cssBody || owner?.cssBody;\r\n    return html`<div class=\"accordion-item ${me.css}\">\r\n             <h2 class=\"accordion-header\">\r\n               <button type=\"button\" \r\n                class=\"accordion-button  ${cssHeader} ${me.opened ? '' : 'collapsed'}\"> \r\n                 ${me.translate(me.title)}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse  ${cssBody} ${me.opened ? 'show' : ''}\">\r\n               <div class=\"accordion-body\">\r\n                   ${me.translate(me.message)}\r\n                   ${me.renderTemplate()}\r\n                   <slot></slot>\r\n               </div>\r\n             </div>      \r\n     </div>`\r\n  }\r\n\r\n  open() {\r\n    this.notify(true);\r\n  }\r\n  \r\n  close() {\r\n    this.notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.notify(!this.opened);\r\n  }\r\n\r\n  notify(val = false) {\r\n    const me = this;\r\n    me.opened = val;\r\n    super.notify();\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-accordion') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSAlertElement extends GSElement {\r\n\r\n    static properties = {\r\n        message: { reflect: true },\r\n        color: { ...color },\r\n        closed: { reflect: true, type: Boolean },\r\n        closable: { reflect: true, type: Boolean },\r\n        delay: { reflect: true, type: Number },\r\n    }\r\n\r\n    #ref;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.delay = 1;\r\n        this.#ref = createRef();\r\n        this.#data = this.#proxify(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div role=\"alert\" dir=\"${ifDefined(me.direction)}\" ${ref(me.#ref)} \r\n            @mouseover=\"${() => me.#pause = true}\"\r\n            @mouseout=\"${() => me.#pause = false}\"\r\n            class=\"alert fade ${classMap(me.renderClass())}\" >\r\n            ${me.#first}\r\n            ${me.renderTemplate()}\r\n            <slot></slot>\r\n            ${me.#second}\r\n        </div>`;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#handleBillboard();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        if (!changed.has('opened')) return;\r\n        this.#handleBillboard();\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': !me.closed,\r\n            'alert-dismissible': me.closable,\r\n            [`alert-${this.color}`]: me.color,\r\n\r\n        }\r\n        return css;\r\n    }\r\n\r\n    open() {\r\n        this.notify(false);\r\n    }\r\n\r\n    close() {\r\n        this.notify(true);\r\n    }\r\n\r\n    toggle() {\r\n        this.notify(!this.closed);\r\n    }\r\n\r\n    notify(val = false) {\r\n        const me = this;\r\n        me.closed = val;\r\n        if (me.closed) setTimeout(() => { me.#ref.value.classList.toggle('d-none', true) }, 250);\r\n        super.notify();\r\n    }\r\n\r\n    get isBillboard() {\r\n        return this.#data?.length > 0;\r\n    }\r\n\r\n    get #message() {\r\n        return this.translate(this.message);\r\n    }\r\n\r\n    get #first() { return this.rtl ? this.#button : this.#message; };\r\n\r\n    get #second() { return this.rtl ? this.#message : this.#button; };\r\n\r\n    get #button() {\r\n        return this.closable ? html`<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"${this.close}\"></button>` : '';\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, {message:{}}));\r\n    }\r\n\r\n    #handleBillboard() {\r\n        const me = this;\r\n        if (me.closed) {\r\n            clearInterval(me.#interval);\r\n            me.#interval = 0;\r\n        } else {\r\n            me.#billboard();\r\n        }        \r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        if (!me.isBillboard) return;\r\n        const items = me.#data;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].message;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].message;\r\n        }, me.delay * 1000);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-alert');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, size, buttonType, ButtonTypes, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSButtonElement extends GSElement {\r\n\r\n  static properties = {\r\n    type: { ...buttonType }, // reset, submit\r\n    size: { ...size }, // small, large, normal\r\n    color: { ...color },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    toggleColor: { ...color, attribute : 'toggle-color' },\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    outline: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    toggling: { type: Boolean },\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    text: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'button';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<button part=\"button\" role=\"button\" ${ref(me.#refEl)}\r\n        dir=\"${ifDefined(me.direction)}\"\r\n        type=\"${ifDefined(me.type)}\" \r\n        class=\"btn ${classMap(me.renderClass())}\" \r\n        title=\"${ifDefined(me.#tooltip)}\"\r\n        ?disabled=${me.disabled}\r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"\r\n        @click=\"${me.#onClick}\">\r\n          ${me.#first} ${me.#second}</button>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n      'focus-ring': document.activeElement === me,\r\n      [`text-${me.text}`]: me.text,\r\n      [`btn-${size}`]: size,\r\n      [`btn-outline-${me.color}`]: me.outline,\r\n      [`btn-${me.color}`]: !me.outline && me.color,\r\n      [`btn-${me.toggleColor}`]: me.active && me.toggleColor,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    if(me.toggling) me.toggle();\r\n    me.iconEl?.animate();\r\n    if (me.isReset) return me.form?.reset();\r\n    if (me.isSubmit) return me.form?.submit();\r\n    me.notify();\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get isReset() {\r\n    return ButtonTypes.isReest(this.type);\r\n  }\r\n\r\n  get isSubmit() {\r\n    return ButtonTypes.isSubmit(this.type);\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('gs-form, form');\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #tooltip() {\r\n    return this.translate(this.tooltip);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-button');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { unsafeHTML, classMap, html, ifDefined, css } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\n\r\nexport class GSCalendarElement extends GSElement {\r\n\r\n  static styles = css`.year::-webkit-outer-spin-button,.year::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;} .year {-moz-appearance: textfield;} .day:focus{font-weight: bold;}`\r\n\r\n  static properties = {\r\n    date: {},\r\n    target: {},\r\n    format: { hasChanged: notEmpty },\r\n    year: { type: Number },\r\n    month: { type: Number, hasChanged: numGE0 },\r\n    day: { type: Number, hasChanged: numGE0 },\r\n    arrovPrev: { attribute: 'arrow-prev' },\r\n    arrowNext: { attribute: 'arrow-next' },\r\n    cssDays: { attribute: 'css-days' },\r\n    cssToday: { attribute: 'css-today' },\r\n    cssWeeks: { attribute: 'css-weeks' },\r\n    cssMonth: { attribute: 'css-month' },\r\n    cssYear: { attribute: 'css-year' },\r\n    cssNav: { attribute: 'css-nav' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    minYear: { attribute: 'year-min', type: Number },\r\n    maxYear: { attribute: 'year-max', type: Number },\r\n  }\r\n\r\n  #date;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.#date = new GSDate();\r\n    me.#date.locale = GSUtil.locale;\r\n    me.locale = GSUtil.locale;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.minYear = 1900;\r\n    me.maxYear = 2100;\r\n    me.arrowPrev = '&#10094;';\r\n    me.arrowNext = '&#10095;';\r\n    me.cssNav = 'btn-light';\r\n    me.cssToday = 'btn-secondary';\r\n    me.cssSelected = 'btn-primary';\r\n    me.cssWeeks = 'fw-bold text-bg-dark';\r\n    me.cssYear = 'form-control fs-5 fw-bold border-0 text-center m-1 p-0';\r\n    me.cssMonth = 'form-control fs-3 fw-bold border-0 text-center m-1 p-0';\r\n  }\r\n\r\n  get date() {\r\n    const me = this;\r\n    //return this.#date.toISOString();\r\n    return new Proxy(this.#date, {\r\n      set(target, prop, value) {\r\n        if (typeof target[prop] != 'function') {\r\n          target[prop] = value;\r\n          me.#update();\r\n        }\r\n        return true;\r\n      },\r\n      get(target, prop, receiver) {\r\n        const value = target[prop];\r\n        if (value instanceof Function) {\r\n          return function (...args) {\r\n            try {\r\n              return value.apply(this === receiver ? target : this, args);\r\n            } finally {\r\n              me.#update();\r\n            }\r\n          };\r\n        }\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  previousMonth() {\r\n    const me  =this;\r\n    if (me.month == 0) {\r\n      me.month = 11;\r\n      me.year--;\r\n    } else {\r\n      me.month--;\r\n    }\r\n  }\r\n\r\n  nextMonth() {\r\n    const me  =this;\r\n    if (me.month == 11) {\r\n      me.month = 0;\r\n      me.year++;\r\n    } else {\r\n      me.month++;\r\n    } \r\n  }\r\n\r\n  previousYear() {\r\n    this.year--;\r\n  }\r\n\r\n  nextYear() {\r\n    this.year++;\r\n  }\r\n\r\n  formatted(date) {\r\n    const me = this;\r\n    return (date || me.#date).format(me.format, me.locale);\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    const date = new GSDate(me.#date);\r\n    me.#updateTarget(date);\r\n    me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#date.year = me.year;\r\n    me.#date.month = me.month;\r\n    me.#date.day = me.day;\r\n    me.#date.locale = me.locale;\r\n\r\n    const week = GSDate.dayList(true, me.locale).map(v => html`<div class=\"col\">${v}</div>`);\r\n    const months = me.#monthsHTML();\r\n    const year = me.#yearHTML();\r\n\r\n    return html`\r\n          <div class=\"container-fluid text-center ${classMap(me.renderClass())}\"\r\n          dir=\"${ifDefined(me.direction)}\"\r\n          @keydown=\"${me.#onKey}\"\r\n          @click=\"${me.#onDay}\">\r\n          <div class=\"row align-items-center ${me.cssHeader} header\">\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.previousMonth}\" class=\"btn ${me.cssNav} arrow prev\">${unsafeHTML(me.arrowPrev)}</a>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  ${months}\r\n                  ${year}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.nextMonth}\" class=\"btn ${me.cssNav} arrow next\">${unsafeHTML(me.arrowNext)}</a>\r\n              </div>\r\n          </div>\r\n          <div class=\"row weeks ${me.cssWeeks}\">${week}</div>\r\n          ${unsafeHTML(me.#daysHTML())}\r\n      </div>`;\r\n  }\r\n\r\n  #updateTarget(date) {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    const tgt = GSDOM.query(document.documentElement, me.target);\r\n    if (!tgt) return;\r\n\r\n    if (tgt instanceof HTMLInputElement) {\r\n      if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n      return tgt.value = me.formatted(date);\r\n    }\r\n    GSDOM.setHTML(tgt, me.formatted(date));\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.locale = me.#date.locale;\r\n  }\r\n\r\n  #isToday(v, date) {\r\n    const me = this;\r\n    return v && GSUtil.asNum(v) === date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n  }\r\n\r\n  #daysHTML() {\r\n    const me = this;\r\n    const today = new GSDate();\r\n    today.locale = me.locale;\r\n    const list = me.#date.build(me.locale);\r\n    const result = list\r\n      .map(v => {\r\n        const c1 = me.#isToday(v, today) ? me.cssToday : '';\r\n        const c2 = me.#isToday(v, me.#date) ? me.cssSelected : '';\r\n\r\n        const d = v ? `<a tabindex=\"0\" href=\"#\" class=\"btn shadow-none ${c1} ${c2} day\" data-day=\"${v}\">${v}</a>` : ''\r\n        return `<div class=\"col p-0\">${d}</div>`;\r\n      })\r\n      .map((v, i) => {\r\n        if (i === 0) return `<div class=\"row days\">${v}`;\r\n        const isBreak = i % 7 == 0;\r\n        return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n      });\r\n    result.push('</div>');\r\n    return result.join('');\r\n  }\r\n\r\n\r\n  #monthsHTML() {\r\n    const me = this;\r\n    const current = me.#date.MMMM;\r\n    const months = GSDate.monthList(false, me.locale);\r\n    const list = months.map((v, i) => html`<option value=\"${i}\" selected=${ifDefined(current == v ? true : undefined)}>${v}</option>`);\r\n    //const list = GSDate.monthList(false, me.locale).map((v, i) => html`<option value=\"${i}\" ${current == v ? 'selected' : ''}>${v}</option>`);\r\n    return html`<select @change=\"${me.#onMonth}\" name=\"month\" class=\"month ${me.cssMonth}\" value=\"${months.indexOf(current)}\">${list}</select>`;\r\n  }\r\n\r\n  #yearHTML() {\r\n    const me = this;\r\n    return html`<input @change=\"${me.#onYear}\" name=\"year\" class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n  }\r\n\r\n  #onDay(e) {\r\n    GSEvents.prevent(e);\r\n    if (!e.target.classList.contains('day')) return;\r\n    this.day = GSUtil.asNum(e.target.dataset.day, this.day);\r\n  }\r\n\r\n  #onMonth(e) {\r\n    this.month = e.target.selectedIndex;\r\n  }\r\n\r\n  #onYear(e) {\r\n    this.year = e.target.value;\r\n  }\r\n\r\n  #onKey(e) {\r\n    console.log(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-calendar');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCardElement extends GSElement {\r\n\r\n  static styles = css`.card-header, .card-footer{ background-color: inherit; color: inherit;}`;\r\n\r\n  static properties = {\r\n\r\n    imageStyle: { type: Object, attribute: 'image-style', reflect : true },\r\n\r\n    overlay: { type: Boolean },\r\n    placement: { ...placement },\r\n    align: { ...placement },\r\n\r\n    image: {},\r\n    title: {},\r\n    subtitle: {},\r\n    text: {},\r\n    footer: {},\r\n    header: {},\r\n\r\n    colorText: { attribute: 'color-text' },\r\n    colorBack: { attribute: 'color-back' },\r\n    colorBorder: { attribute: 'color-border' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssSubtitle: { attribute: 'css-subtitle' },\r\n    cssText: { attribute: 'css-text' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssImage: { attribute: 'css-image' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.border = false;\r\n    this.shadow = false;\r\n    this.align = 'start';\r\n    this.placement = 'top';\r\n    this.imageStyle = this.imageStyle || {};\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const content =  me.isVertical ? me.#renderVertical() : me.#renderHorizontal();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"card ${classMap(me.renderClass())}\">${content}</div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return [me.#imageTop, me.#header, me.#body, me.#footer, me.#imageBottom];\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    const start = PlacementTypes.isBefore(me.placement);\r\n    const startClass = start ? 'col-4' : 'col-8';\r\n    const endClass = start ? 'col-8' : 'col-4';\r\n    const startHtml = start ? me.#images : me.#body;\r\n    const endHtml =  start ? me.#body : me.#images;\r\n    return html`<div class=\"row g-0\">\r\n        <div class=\"${startClass}\">\r\n            ${startHtml}\r\n        </div>\r\n        <div class=\"${endClass}\">\r\n          ${endHtml}\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      border: me.border || me.colorBorder,\r\n      [`text-${me.align}`]: me.align,\r\n      [`text-${me.colorText}`]: me.colorText,\r\n      [`bg-${me.colorBack}`]: me.colorBack,\r\n      [`border-${me.colorBorder}`]: me.colorBorder,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return PlacementTypes.isHorizontal(this.placement);\r\n  }\r\n\r\n  get #body() {\r\n    const me = this;\r\n    return html`<div class=\"${me.overlay ? 'card-img-overlay' : 'card-body'} ${me.cssBody}\">\r\n      <h5 class=\"card-title  ${me.cssTitle}\"><slot name=\"title\">${me.translate(me.title)}</slot></h5>\r\n      <h6 class=\"card-subtitle  ${me.cssSubtitle}\"><slot name=\"subtitle\">${me.translate(me.subtitle)}</slot></h6>\r\n      <p class=\"card-text ${me.cssText}\"><slot name=\"text\">${me.translate(me.text)}</slot></p>\r\n      <slot name=\"body\"></slot>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  get #header() {\r\n    return this.overlay ? '' : html`<div class=\"card-header  ${this.cssHeader}\"><slot name=\"header\">${this.header}</slot></div>`;\r\n  }\r\n\r\n  get #footer() {\r\n    return this.overlay ? '' : html`<div class=\"card-footer ${this.cssFooter}\"><slot name=\"footer\">${this.footer}</slot></div>`;\r\n  }\r\n\r\n  get #imageSlot() {\r\n    return html`<slot name=\"image\"></slot>`;\r\n  }\r\n\r\n  get #image() {\r\n    const me = this;\r\n    const css = me.isHorizontal ? 'img-fluid' : 'card-img';\r\n    me.dynamicStyle(me.#styleID, me.imageStyle);\r\n    return html`<img src=\"${me.image}\" class=\"rounded-${me.placement} ${css} ${me.cssImage} ${me.#styleID}\" alt=\"...\">`;\r\n  }\r\n\r\n  get #images() {\r\n    return this.image ? this.#image : this.#imageSlot;\r\n  }\r\n\r\n  get #imageTop() {\r\n    return this.placement === 'top' ? this.#images : '';\r\n  }\r\n\r\n  get #imageBottom() {\r\n    return this.placement === 'bottom' ? this.#images : '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-card');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSCenterElement extends GSElement {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n      class=\"position-absolute top-50 start-50 translate-middle ${classMap(me.renderClass())}\">\r\n    ${me.renderTemplate()}<slot></slot></div>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-center');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenuElement class\r\n * @module components/GSMenuElement\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSMenuElement extends GSElement {\r\n\r\n    static properties = {\r\n        storage: {},\r\n        auto: { type: Boolean, reflect: true },\r\n        opened: { type: Boolean, reflect: true },\r\n        dark: { type: Boolean },\r\n        reverse: { type: Boolean },\r\n        offset: { type: Number },\r\n        data: { type: Array },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {},\r\n        title: {},\r\n        header: {},\r\n        color: {},\r\n        icon: {},\r\n        url: { default: '#' }\r\n    }\r\n\r\n    #menuRef = createRef();\r\n    #styleID = GSID.id;\r\n    #controller = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.offset = 0;\r\n        me.dynamicStyle(me.#styleID);\r\n        me.data = me.#proxify(me);\r\n        me.#controller = new GroupController(this);\r\n    }\r\n\r\n    onBusEvent(e) {\r\n       if (e.detail.owner != this) {\r\n            this.opened = false;\r\n       }\r\n     }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        if (changed.has('opened') && !this.opened) {\r\n            this.#closeSubmenus();\r\n        }\r\n    }\r\n\r\n    updated() {\r\n        this.#updatePosition();\r\n        if (this.opened) {\r\n            this.#controller.notify();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<ul \r\n            ${ref(me.#menuRef)}\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            class=\"dropdown-menu ${classMap(me.renderClass())}\"\r\n            data-gs-class=\"${me.#styleID}\"\r\n            data-menu=\"true\"\r\n            @mouseover=\"${me.#onMouseOver}\"\r\n            @mouseleave=\"${me.#onMouseLeave}\"\r\n            @keydown=\"${me.#onKeyDown}\"\r\n            @click=\"${me.#onClick}\">\r\n            ${me.#items(me.data)}\r\n        </ul>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'submenu': me.dataset.submenu,\r\n            'dropdown-menu-dark': me.dark,\r\n            [me.#styleID]: true,\r\n            'show': me.opened,\r\n            'dropend': !me.reverse,\r\n            'dropstart': me.reverse,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    /**\r\n     * Show at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {HTMLElement} caller\r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n\r\n        const me = this;\r\n        // offset to render under the mouse,\r\n        // important for GSGrid for better UI experience\r\n        const offset = GSUtil.asNum(me.offset, 0);\r\n        let target = caller;\r\n\r\n        if (GSEvents.isMouseOrPointerEvent(x)) {\r\n            const e = x;\r\n            target = e.target;\r\n            y = e.clientY;\r\n            x = e.clientX;\r\n            let offset = GSDOM.offsetParent(me);\r\n            offset = offset ? offset.getBoundingClientRect() : null;\r\n            x = x - (offset?.left || 0);\r\n            y = y - (offset?.top || 0);\r\n        }\r\n\r\n        const cfg = { clientX: x - offset, clientY: y - offset, target: target };\r\n\r\n        requestAnimationFrame(() => {\r\n            const style = {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                left: '0px',\r\n                translate: `${cfg.clientX}px ${cfg.clientY}px`\r\n            };\r\n            const rule = me.dynamicStyle(me.#styleID);\r\n            Object.assign(rule.style, style);\r\n        });\r\n        me.open();\r\n\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    #items(root) {\r\n        const me = this;\r\n        return root.map(el => me.#item(el));\r\n    }\r\n\r\n    #item(el) {\r\n        const me = this;\r\n        const isSub = el.items?.length > 0;\r\n        if (isSub) return me.#renderSubmenu(el);\r\n        if (!(el.header || el.name)) return me.#renderDivider();\r\n        return el.header ? me.#renderHeader(el) : me.#renderMenu(el);\r\n    }\r\n\r\n    #renderHeader(el) {\r\n        return html`<li data-inert=\"true\"><h6 class=\"dropdown-header\">${this.#renderIcon(el)}${el.header}</h6></li>`;\r\n    }\r\n\r\n    #renderDivider() {\r\n        return html`<li data-inert=\"true\"><hr class=\"dropdown-divider\"></li>`;\r\n    }\r\n\r\n    #renderSubmenu(el) {\r\n        const me = this;\r\n        return html`<li>\r\n            <a class=\"dropdown-item dropdown-toggle\" data-toggle=\"true\" href=\"#\">\r\n                <div class=\"d-inline-block w-100\">${me.#renderIcon(el)}${el.name}</div>\r\n            </a>\r\n            <gs-menu auto \r\n                .data=${el.items} \r\n                ?dark=${me.dark} \r\n                ?reverse=\"${me.reverse}\" \r\n                locale=\"${ifDefined(me.locale)}\" \r\n                data-submenu=\"true\">\r\n            </gs-menu>\r\n        </li>`;\r\n    }\r\n\r\n    #renderIcon(el) {\r\n        return el.icon ? html`<gs-icon css=\"mx-1\" name=\"${el.icon}\"></gs-icon>` : '';\r\n    }\r\n\r\n    #renderMenu(el) {\r\n        return html`<li>\r\n                <gs-button css=\"dropdown-item shadow-none\" \r\n                    ${dataset(el, false)}\r\n                    url=\"${el.url}\"\r\n                    title=\"${el.name}\" \r\n                    locale=\"${ifDefined(this.locale)}\" \r\n                    icon=\"${ifDefined(el.icon)}\" \r\n                    text=\"${ifDefined(el.color)}\"\r\n                    data-gs-target=\"${ifDefined(el.target || 'self')}\"\r\n                    data-gs-action=\"${ifDefined(el.action)}\">\r\n                </gs-button></li>`;\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSMenuElement.options));\r\n    }\r\n\r\n    #closeSubmenus(menu) {\r\n        GSDOM.queryAll(this.renderRoot, 'gs-menu', false, false)\r\n            .filter(el => el != menu)\r\n            .forEach(el => el.close());\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.key) {\r\n            case 'Escape':\r\n                me.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        submenu?.close();\r\n        if (me.auto) me.close();\r\n    }\r\n\r\n    #onMouseLeave(e) {\r\n        GSEvents.prevent(e);\r\n        if (this.auto) this.close();\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        me.#closeSubmenus(submenu);\r\n        submenu?.open();\r\n    }\r\n\r\n    #toSubmenu(e) {\r\n        const menuItem = e.target.closest('li');\r\n        return menuItem?.querySelector('gs-menu');\r\n    }\r\n\r\n    #updatePosition() {\r\n        const me = this;\r\n        if (!me.opened) return;\r\n        const rule = me.dynamicStyle(me.#styleID);\r\n        if (me.isSubmenu) {\r\n            const opt = { translate: `0px -25px` };\r\n            if (me.reverse) {\r\n                opt.left = 'inherited';\r\n                opt.right = '100%';\r\n            } else {\r\n                opt.right = 'inherited';\r\n                opt.left = '100%';\r\n            }\r\n            Object.assign(rule.style, opt);\r\n        } else {\r\n            rule.style.translate = null;\r\n            const rect = me.#menu.getBoundingClientRect();\r\n            const offset = window.innerWidth - rect.right;\r\n            me.reverse = offset - 5 < 0;\r\n            if (me.reverse) rule.style.translate = `${offset - 2}px`;\r\n        }\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.dataset.submenu;\r\n    }\r\n\r\n    get #menu() {\r\n        return this.#menuRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-menu');\r\n    }\r\n}\r\n","/*GSContextElement\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContextElement class\r\n * @module components/GSContextElement\r\n */\r\n\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for context menu\r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSContextElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        target: {},\r\n        filter: {},\r\n        altContext: { type: Boolean },\r\n        disabled: { type: Boolean },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;        \r\n        me.auto = true;\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n            me.target = \"tbody\";\r\n            me.filter = \"[selected]\";\r\n            me.offset =\"4\";\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', me.close.bind(me));        \r\n        if (!me.slot) me.#attachTarget();\r\n    }\r\n    \r\n    onSlotInjected(slot) {\r\n        this.#attachTarget();\r\n    }\r\n\r\n    #attachTarget() {\r\n        const me = this;        \r\n        const owner = GSDOM.parent(me.assignedSlot || me);\r\n        let targets = me.target ? GSDOM.queryAll(owner, me.target) : [owner];\r\n        if (!targets.length) targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    }\r\n\r\n    #match(e) {\r\n        const me = this;\r\n        return e.composedPath().filter(el => el.matches)\r\n            .filter(el => el.matches(me.filter ? me.filter : me.target));\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        if (e.shiftKey && me.altContext) return;\r\n        const list = me.#match(e);\r\n        if (list.length === 0) return;\r\n        GSEvents.prevent(e);\r\n        me.popup(e);\r\n        return true;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    /**\r\n     * Show submenu at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n        return this.disabled ? false : super.popup(x, y, caller);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-context');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, notEmpty } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\nexport class GSCompareElement extends GSElement {\r\n\r\n  static styles = css`.slider {\r\n         --gs-position : 50%;\r\n          left : var(--gs-position);\r\n          width: 8px;\r\n          height: 100%;\r\n          border-width: 1px;\r\n          cursor: w-resize;\r\n          border-color: darkgray;\r\n          border-style: solid;\r\n          background-color: lightgray;\r\n      }\r\n      .clipper {\r\n        --gs-position : 50%;\r\n        clip-path: inset(0px var(--gs-position) 0px 0px);\r\n      }\r\n    `;\r\n\r\n  static properties = {\r\n    background: { ...color },\r\n    width: { type: Number },\r\n    height: { type: Number },\r\n    before: { hasChanged: notEmpty },\r\n    after: { hasChanged: notEmpty },\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  #elRef = createRef();\r\n  #clipRef = createRef();\r\n  #slideRef = createRef();\r\n\r\n  #mouseController;\r\n  #elPosition;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.width = 0;\r\n    me.height = 0;\r\n    me.dynamicStyle(me.#styleID);\r\n    me.#mouseController = new ElementMoveController(me);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#mouseController.attach(this.#splitter);\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n         dir=\"${ifDefined(me.direction)}\"\r\n         @loaded=\"${me.#onLoad}\" \r\n         @dblclick=\"${me.#onDoubleClick}\"\r\n         data-gs-class=\"${me.#styleID}\"\r\n         class=\"${classMap(me.renderClass())}\">\r\n      <div class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden\"><slot name=\"before\">${me.#before}</slot></div>\r\n      <div ${ref(me.#clipRef)} class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden clipper\"><slot name=\"after\">${me.#after}</slot></div>\r\n      <div ${ref(me.#slideRef)} class=\"slider position-absolute top-0><slot name=\"control\"></slot></div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      \"position-relative\": true,\r\n      \"user-select-none\": true,\r\n      \"d-contents\": me.isAuto,\r\n      \"h-100\": me.isAuto,\r\n      \"w-100\": me.isAuto,\r\n      \"overflow-hidden\": true,\r\n      [`bg-${me.background}`]: me.background,\r\n      [`${me.#styleID}`]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Handles resizing based on mouse move event\r\n   * @param {MouseEvent} e \r\n   */\r\n  onStartMove(e) {\r\n    this.#elPosition = this.#splitter.getBoundingClientRect();\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    const me = this;\r\n    const offset = me.#elPosition.left;\r\n    const width = me.#elPosition.width;\r\n    const pos = GSUtil.range(e.clientX - offset, 0, width);\r\n    const pct = (pos / width) * 100;\r\n    me.#update(pct);\r\n  }\r\n\r\n  get isAuto() {\r\n    return this.width == 0 || this.height == 0;\r\n  }\r\n\r\n  get isFixed() {\r\n    return !this.isAuto;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  get #before() {\r\n    return this.before ? html`<img @load=\"${this.#onLoad}\" src=\"${me.before}\"></img>` : '';\r\n  }\r\n\r\n  get #after() {\r\n    return this.after ? html`<img @load=\"${this.#onLoad}\" src=\"${me.after}\"></img>` : '';\r\n  }\r\n\r\n  get #isAuto() {\r\n    return this.width === 0 || this.height === 0;\r\n  }\r\n\r\n  get #splitter() {\r\n    return this.#elRef.value;\r\n  }\r\n\r\n  get #slider() {\r\n    return this.#slideRef.value;\r\n  }\r\n\r\n  get #clip() {\r\n    return this.#clipRef.value;\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const me = this;\r\n    if (me.#isAuto) {\r\n      const el = e.target;\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n    }\r\n  }\r\n\r\n  #onDoubleClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#update();\r\n    me.#mouseController.reset();\r\n  }\r\n\r\n  #update(pct = 50) {\r\n    const me = this;\r\n    me.#clip.style.setProperty('--gs-position', `${100 - pct}%`);\r\n    me.#slider.style.setProperty('--gs-position', `${pct}%`);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-compare');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\n\r\n/**\r\n * Helper component to enable controller attachment to the GS WebComponent.\r\n * It is used to simplify and separate templates from logic.\r\n */\r\nexport class GSControllerElement extends GSElement {\r\n\r\n  static properties = {\r\n    module: {},\r\n    controller: {},\r\n  }\r\n\r\n  #clazz = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  updated(changes) {\r\n    super.updated(changes);\r\n    const me = this;\r\n    if (me.isConnected && me.isValid) {\r\n      me.#initialize();\r\n    }\r\n  }\r\n\r\n  get isValid() {\r\n    return this.parentElement instanceof GSElement;\r\n  }\r\n\r\n  async #initialize() {\r\n\r\n    const me = this;\r\n    const host = me.parentElement;\r\n\r\n    if (me.#clazz) return;\r\n\r\n    let clazz = globalThis[me.controller];\r\n    if (!clazz && me.module) {\r\n      const url = GSLoader.normalizeURL(me.module);\r\n      const module = await import(url);\r\n      clazz = module[me.controller];\r\n    }\r\n\r\n    if (clazz) {\r\n      new clazz(host);\r\n      me.#clazz = clazz;\r\n      globalThis[me.controller] = clazz;\r\n    }\r\n\r\n  }\r\n\r\n  static {\r\n    this.define('gs-controller');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSCopyrightElement extends GSElement {\r\n\r\n  static properties = {\r\n    year: { reflect: true, type: Number },\r\n    company: { reflect: true },\r\n    url: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    if (!(me.isCompany && me.isYear)) return '';\r\n    const year = new Date().getFullYear();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"${classMap(me.renderClass())}\"><a target=\"_blank\" href=\"${me.url ? me.url : '#'}\"><small>&copy; ${me.company} ${me.year}. - ${year}.</small></a></div>`;\r\n  }\r\n\r\n  get isCompany() {\r\n    return GSUtil.isStringNonEmpty(this.company);\r\n  }\r\n\r\n  get isYear() {\r\n    return GSUtil.isStringNonEmpty(this.year);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-copyright');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSFunction } from '../base/GSFunction.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/verificator.mjs';\r\nimport { GSReadWriteRegistry } from '../data/ReadWriteRegistry.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for easier access to the GSReadWrite/GSTreeReader\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSDataHandler extends GSElement {\r\n\r\n    static properties = {\r\n        storage: { state: true },\r\n        src: { reflect: true },\r\n        action: { reflect: true },\r\n        mode: { reflect: true },\r\n        reader: { reflect: true },\r\n        writer: { reflect: true },\r\n        limit: { type: Number, reflect: true },\r\n        skip: { type: Number, reflect: true },\r\n        filter: { type: Array, reflect: true },\r\n        sort: { type: Array, reflect: true },\r\n        type: {},\r\n        autoload: { type: Boolean },\r\n        autorefresh: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    }\r\n\r\n    #iid = 0;\r\n    #config = null;\r\n    #handler = null;\r\n    #lifoReadRef = null;\r\n    #lifoWriteRef = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        me.autorefresh = 0;\r\n        me.autoload = false;\r\n        me.flat = true;\r\n        me.filter = [];\r\n        me.sort = [];\r\n        me.limit = 0;\r\n        me.skip = 0;\r\n        me.src = '';\r\n        me.type = 'remote';\r\n        me.mode = 'query';\r\n        me.reader = 'GET';\r\n        me.writer = 'POST';\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n          }\r\n        if (!me.isGenerated && !me.id) throw new Error('Element ID is required attribute!');\r\n        GSItem.validate(me, me.tagName);\r\n    }\r\n    \r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        const itemHolder = me.isGenerated && me.childElementCount === 0 ? me.parentComponent : me;\r\n        me.#config = GSItem.proxify(itemHolder, GSData.PROPERTIES);\r\n        me.#initLIFO(true);\r\n        me.#initLIFO(false);\r\n    }\r\n    \r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        me.#handler?.disable();\r\n        me.#handler?.removeProcessor(me);\r\n        me.#lifoReadRef = null;\r\n        me.#lifoWriteRef = null;\r\n        clearTimeout(me.#iid);\r\n    }\r\n    \r\n    firstUpdated() {\r\n        const me = this;\r\n        me.#handler = GSReadWriteRegistry.newHandler(me.type, me.storage, false);\r\n        if (me.#config?.length > 0) me.#handler?.addProcessor(me);\r\n        me.#updateHandler();\r\n        me.#handler?.enable();\r\n        me.dataController?.read();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        const me = this;\r\n        me.#updateHandler();\r\n        if (changed.has('autorefresh')) me.schedule(me.autorefresh);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.key = me.key;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.formatSort(me.sort);\r\n        me.#handler.filter = me.formatFilter(me.filter);\r\n        if (me.autoload) me.read();\r\n    }\r\n\r\n    get isDebug() {\r\n        return this.dataset.gsDebug;\r\n    }\r\n\r\n    get handler() {\r\n        return this.#handler;\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    get isCached() {\r\n        return this.#handler?.type == 'cached';\r\n    }\r\n\r\n    set search(val) {\r\n        if (this.#handler) this.#handler.search = val;\r\n    }\r\n\r\n    get key() {\r\n        return this.#config.filter(o => o.key).map(o => o.name).pop() || null;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    formatFilter(val) {\r\n        val = this.#formated(val);\r\n        return Array.isArray(val) ? val : [];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    formatSort(val) {\r\n        val = this.#formated(val);\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort || [];\r\n    }\r\n\r\n    schedule(time = 0) {\r\n        const me = this;\r\n        time = GSUtil.asNum(time) * 1000;\r\n        clearInterval(me.#iid);\r\n        if (time > 0) me.#iid = setInterval(() => {\r\n            me.read(me);\r\n        }, time);\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data, append = false) {\r\n        return this.#lifoWriteRef(data, append);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return this.#handler?.selected;\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        return this.#handler?.addSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        return this.#handler?.removeSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        return this.#handler?.clearSelected();\r\n    }\r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onDataRead(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data Read: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onDataWrite(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data write: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Process data after receive, before notifying \r\n     * @param {*} data \r\n     */\r\n    postRead(data) {\r\n        const me = this;\r\n        if (!Array.isArray(data)) data = [data];\r\n        data.forEach(r => {\r\n            me.#config.forEach(c => {\r\n                let val = r[c.name];\r\n                if (!GSUtil.isNull(val)) {\r\n                    val = GSData.format(c, val);\r\n                    r[c.name] = val;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onDataError(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data error: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #initLIFO(read = true) {\r\n        const me = this;\r\n        if (read) {\r\n            me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n        } else {\r\n            me.#lifoWriteRef = GSFunction.callOnceLifo(me.#lifoWriteRefCallback, me);\r\n        }\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO(true);\r\n        return me.#lifoCall(true);\r\n    }\r\n\r\n    #lifoWriteRefCallback(data, append) {\r\n        const me = this;\r\n        me.#initLIFO(false);\r\n        return me.#lifoCall(false, data, append);\r\n    }\r\n    \r\n    #lifoCall(read = true, data, append) {\r\n        const me = this;\r\n        me.#verifyHandler();        \r\n        if (read) return me.#handler?.read(me);        \r\n        if (!append) me.#handler.clear();\r\n        return me.#handler?.write(me, data);\r\n    }\r\n\r\n    #formated(val) {\r\n        return GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    static {\r\n        this.define('gs-data-handler');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { size, SizeTypes } from '../properties/size.mjs';\r\n\r\nexport class GSDialogElement extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n  static ALIGN = 'end';\r\n  static CANCEL = 'Cancel';\r\n  static CONFIRM = 'Ok';\r\n\r\n  static #STACK = [];\r\n\r\n  static styles = css`dialog{--bs-modal-width: 500px;width:var(--bs-modal-width);outline:none;}dialog::backdrop{backdrop-filter: blur(4px);}`;\r\n\r\n  static properties = {\r\n\r\n    standard: { reflect: true, type: Boolean },\r\n    opened: { reflect: true, type: Boolean },\r\n    cancelable: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    escapable: { reflect: true, type: Boolean },\r\n    disabled: { reflect: true, type: Boolean },\r\n\r\n    size : size,\r\n\r\n    title: { reflect: true },\r\n    message: { reflect: true },\r\n    cancelText: { reflect: true, },\r\n    confirmText: { reflect: true, },\r\n\r\n    minWidth: { reflect: true, type: Number, attribute: 'min-width' },\r\n    buttonAlign: { reflect: true, attribute: 'button-align' },\r\n\r\n    iconCancel: { reflect: true, attribute: 'icon-cancel' },\r\n    iconConfirm: { reflect: true, attribute: 'icon-confirm' },\r\n\r\n    colorCancel: { attribute: 'color-cancel' },\r\n    colorConfirm: { attribute: 'color-confirm' },\r\n\r\n    cssCancel: { attribute: 'css-cancel' },\r\n    cssConfirm: { attribute: 'css-confirm' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssContent: { attribute: 'css-content' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #dialogRef = createRef();\r\n  #btnConfirmRef = createRef();\r\n  #btnCancelRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    const clazz = GSDialogElement;\r\n    me.opened = false;\r\n    me.standard = false;\r\n    me.cancelable = false;\r\n    me.closable = false;\r\n    me.escapable = false;\r\n    me.disabled = false;\r\n    me.shadow = false;\r\n    me.rounded = false;\r\n\r\n    me.minWidth = 0;\r\n    me.css = clazz.CSS;\r\n    me.cssTitle = clazz.TITLE_CSS;\r\n    me.cssHeader = clazz.HEADER_CSS;\r\n    me.buttonAlign = clazz.ALIGN;\r\n    me.cancelText = clazz.CANCEL;\r\n    me.confirmText = clazz.CONFIRM;\r\n    me.colorCancel = 'secondary';\r\n    me.colorConfirm = 'primary';\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialogElement.#updateStack();\r\n  }\r\n\r\n  updated(changed) {\r\n    super.updated(changed);\r\n    if (changed.has('opened')) {\r\n      this.#onOpenChanged();\r\n    }\r\n  }\r\n\r\n  #onOpenChanged() {\r\n    const me = this;\r\n    let state = null;\r\n    if (me.opened) {\r\n      GSDialogElement.#STACK.push(me);\r\n      state = 'opening';\r\n      if (me.standard) {\r\n        me.#dialog?.open();\r\n      } else {\r\n        me.#dialog?.showModal();\r\n      }\r\n      me.#focusable()?.focus();\r\n    } else {\r\n      state = 'closing';\r\n      GSDialogElement.#STACK.pop();\r\n      me.#dialog?.close();\r\n    }\r\n    me.notify(true, false, state);\r\n  }\r\n\r\n  #renderConfirm() {\r\n    const me = this;\r\n    if (!me.closable) return '';\r\n    return html`<gs-button  ${ref(me.#btnConfirmRef)} \r\n      @click=\"${me.#onConfirm.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconConfirm)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      .disabled=\"${me.disabled}\"  \r\n      css=\"${ifDefined(me.cssConfirm)}\" \r\n      color=\"${ifDefined(me.colorConfirm)}\" \r\n      title=\"${me.confirmText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderCancel() {\r\n    const me = this;\r\n    if (!me.cancelable) return '';\r\n    return html`<gs-button ${ref(me.#btnCancelRef)}\r\n      @click=\"${me.#onCancel.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconCancel)}\"\r\n      locale=\"${ifDefined(me.locale)}\"\r\n      css=\"${ifDefined(me.cssCancel)}\" \r\n      color=\"${ifDefined(me.colorCancel)}\" \r\n      title=\"${me.cancelText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderFooter() {\r\n    const me = this;\r\n    const isFooter = me.cancelable || me.closable;\r\n    if (!isFooter) return '';\r\n    return html`<div class=\"card-footer d-flex user-select-none justify-content-${me.buttonAlign} ${me.cssFooter}\">\r\n      ${me.#renderCancel()} &nbsp;${me.#renderConfirm()}\r\n      </div>`;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const styles = { \r\n      'min-width': me.minWidth > 0 ? `${me.minWidth}px` : undefined \r\n    };\r\n    me.dynamicStyle(me.#styleID, styles);\r\n    return html`\r\n        <dialog tabindex=\"-1\" ${ref(me.#dialogRef)} \r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @close=\"${me.#onCancel.bind(me)}\"\r\n            @cancel=\"${me.#onCancel.bind(me)}\"\r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @form=\"${me.#onForm.bind(me)}\"\r\n            @submit=\"${me.#onSubmit.bind(me)}\"\r\n            class=\"${classMap(me.renderClass())}\">\r\n            <div class=\"card ${me.cssContent}\">\r\n                <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n                  <div class=\"card-title ${me.cssTitle}\">\r\n                    <slot name=\"title\">${me.translate(me.title)}</slot>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body ${me.cssBody}\">\r\n                  <slot name=\"body\">\r\n                  ${me.translate(me.message)}\r\n                  ${me.renderTemplate()}\r\n                  </slot>\r\n                </div>\r\n                ${me.#renderFooter()}\r\n            </div>\r\n            <slot name=\"extra\"></slot>\r\n            <div class=\"toast-container position-fixed\"></slot></div>\r\n        </dialog>`\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'dialog': true,\r\n      'p-0': true,\r\n      'border-0': true,\r\n      [me.#styleID]: true,\r\n      [`modal-${size}`]: size ? true : false\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.closable = closable;\r\n    me.cancelable = cancelable;\r\n    me.escapable = cancelable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('click-action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    return this.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    return this.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    index = GSUtil.asNum(index, 0);\r\n    const me = this;\r\n    me.forms?.forEach?.(f => { f.reset(); f.data = data; });\r\n    const tab = me.tab;\r\n    if (tab && index > -1) tab.index = index;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  get form() {\r\n    return this.query('gs-form', true);\r\n  }\r\n\r\n  get forms() {\r\n    return this.queryAll('gs-form', true);\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('gs-tab', true);\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.#dialogRef.value;\r\n  }\r\n\r\n  get #btnConfirm() {\r\n    return this.#btnConfirmRef.value;\r\n  }\r\n\r\n  get #btnCancel() {\r\n    return this.#btnCancelRef.value;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  #focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#btnCancel;\r\n    if (me.closable) return me.#btnConfirm;\r\n    return me;\r\n  }\r\n\r\n  async #onConfirm(e) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const ret = await Promise.all(me.forms?.map?.(form => form.submit()));\r\n    if (ret.indexOf(false) < 0) me.close();\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.close();\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle injected form events\r\n   * @param {*} e \r\n   */\r\n  #onForm(e) {\r\n    let  sts = true;\r\n    const me = this;\r\n    const data = e.detail;\r\n    switch (data.type) {\r\n      case 'submit':\r\n        sts = me.emit('data', data.data, false, false, true);\r\n        if (!sts) GSEvents.prevent(e);\r\n        //me.opened = false;\r\n        break;\r\n      case 'valid':\r\n        me.disabled = data.data === false;     \r\n        break;\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  #onSubmit(e) {\r\n    debugger;\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialogElement.#STACK = GSDialogElement.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  /**\r\n   * Return number of dialogs in a stack\r\n   */\r\n  static get size() {\r\n    return GSDialogElement.#STACK.length;\r\n  }\r\n\r\n  static get top() {\r\n    GSDialogElement.#updateStack();\r\n    const size = GSDialogElement.size;\r\n    return size === 0 ? null :  GSDialogElement.#STACK[size - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialogElement.#updateStack();\r\n    return Array.from(GSDialogElement.#STACK);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-dialog');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, unsafeHTML, html, ifDefined } from '../lib.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSDrawerElement extends GSElement {\r\n\r\n  static properties = {\r\n    autoclose: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    backdrop: { reflect: true, type: Boolean },\r\n    expanded: { reflect: true, type: Boolean },\r\n    scroll: { reflect: true, type: Boolean },\r\n\r\n    min: { reflect: true, type: Number},\r\n    max: { reflect: true},\r\n    fingers: { reflect: true, type: Number},\r\n    placement: {...placement},\r\n    \r\n    transition: { reflect: true },\r\n    duration: { reflect: true, type: Number },\r\n\r\n    title: { reflect: true},\r\n\r\n    cssTitle: { reflect: true, attribute: \"css-title\"},\r\n    cssHead: { reflect: true, attribute: \"css-head\" },\r\n    cssBody: { reflect: true, attribute: \"css-body\" },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.placement = 'start';\r\n    me.cssTitle = 'fs-5';\r\n    me.transition = 'linear';\r\n    me.duration = 0.2;\r\n    me.min = 0;\r\n    me.max = 'auto';\r\n    me.fingers = 2;\r\n    me.on('mouseleave', me.#onLeave.bind(me));\r\n    me.on('mouseenter', me.#onEnter.bind(me));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`${unsafeHTML(me.#style)}\r\n    <div tabindex=\"-1\" dir=\"${ifDefined(me.direction)}\"\r\n     class=\"offcanvas overflow-hidden anime ${classMap(me.renderClass())}\">\r\n      ${me.#header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        ${me.renderTemplate()}\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>${me.#backdrop}`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': true,\r\n      'anime-open' : me.expanded,\r\n      'anime-close' : !me.expanded,\r\n      [`offcanvas-${me.placement}`]: me.placement,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #style() {\r\n    const me = this;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    return `<style>\r\n    .anime {\r\n      transition-property: ${pos} !important;\r\n      transition-duration: ${me.duration}s  !important;\r\n      transition-timing-function: ${me.transition} !important;\r\n    }\r\n    .anime-open {\r\n        ${pos} : ${me.max}${GSUtil.isNumber(me.max) ? 'px':''} !important;\r\n    }\r\n    .anime-close {\r\n      ${pos} : ${me.min}${GSUtil.isNumber(me.min) ? 'px':''} !important;\r\n    }    \r\n    </style>`;\r\n  }\r\n\r\n  get #backdrop() {\r\n    const me = this;\r\n    if (!me.backdrop) return '';\r\n    return html`<div class=\"offcanvas-backdrop fade ${me.expanded ? 'show' : 'invisible'}\" @click=\"${me.close}\"></div>`;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    return me.closable ? html`<button type=\"button\" class=\"btn-close text-reset\" @click=\"${me.close}\"></button>` : '';\r\n  }\r\n\r\n  get #title() {\r\n    const me = this;\r\n    return me.title ? html`<div class=\"offcanvas-title ${me.cssTitle}\">${me.translate(me.title)}</div>` : '';\r\n  }\r\n\r\n  get #header() {\r\n    const me = this;\r\n    return me.#hasHeader ? html`<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${me.#title}${me.#button}</slot></div>` : '';\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  get #hasHeader() {\r\n    return this.title || this.closable || this.#headSlot;\r\n  }\r\n\r\n  #notify(val) {\r\n    const me = this;\r\n    me.expanded = val == true;\r\n    me.notify();\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  open() {\r\n    this.#notify(true);\r\n  }\r\n\r\n  close() {\r\n    this.#notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.#notify(!this.expanded);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return !this.isVertical;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-drawer');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdownElement class\r\n * @module components/GSDropdownElement\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { cssMap } from '../directives/css-map.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDropdownElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        icon: {},\r\n        text: {...color},\r\n        color: {...color},\r\n        size: {},\r\n        title: {},\r\n        tooltip: {},\r\n        group: {},\r\n        simple: {type:Boolean}\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"dropdown\"  dir=\"${ifDefined(me.direction)}\">\r\n                ${me.#renderButton()}\r\n                ${super.renderUI()}\r\n            </div>`;\r\n    }\r\n\r\n    #buttonClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'btn': true,\r\n            [`btn-${me.color}`] : me.color ? true : false,\r\n            'dropdown-toggle': !me.simple,\r\n            'shadow-none' : true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    #renderButton() {\r\n        const me = this;\r\n        return html`<gs-link css=\"${cssMap(me.#buttonClass())}\"\r\n            url=\"#\"         \r\n            icon=\"${ifDefined(me.icon)}\"\r\n            text=\"${ifDefined(me.text)}\"\r\n            size=\"${ifDefined(me.size)}\"\r\n            title=\"${ifDefined(me.title)}\"\r\n            tooltip=\"${ifDefined(me.tooltip)}\"\r\n            @notify=\"${me.toggle}\">\r\n            </gs-link>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-dropdown');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html, unsafeHTML } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Safe email rendering to protect from spam bots.\r\n */\r\nexport class GSEmailElement extends GSElement {\r\n\r\n  static shadowRootOptions = { mode: 'closed' }\r\n\r\n  static style = css`.e-mail:before {\r\n    content: attr(data-website) \"\\0040\" attr(data-user);\r\n    unicode-bidi: bidi-override;\r\n    direction: rtl;\r\n    }`;\r\n\r\n  static properties = {\r\n    user: { reflect: true },\r\n    domain: { reflect: true },\r\n    dev: { type: Boolean }\r\n  }\r\n\r\n  #user;\r\n  #domain;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  willUpdate(changes) {\r\n    super.willUpdate(changes);\r\n    this.#updateUser();\r\n    this.#updateDomain()\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${unsafeHTML(this.#style)}<a @click=\"${this.#onClick}\" class=\"e-mail\" data-user=\"${this.#user}\" data-website=\"${this.#domain}\"  href=\"mailto://\"></a>`;\r\n  }\r\n\r\n  get #style() {\r\n    return '<style>.e-mail:before { content: attr(data-website) \"\\u0040\" attr(data-user); unicode-bidi: bidi-override; direction: rtl; }</style>';\r\n  }\r\n\r\n  get #url() {\r\n    return `mailto://${GSUtil.reverse(this.dataset.user)}@${GSUtil.reverse(this.dataset.domain)}`;\r\n  }\r\n\r\n  #updateUser() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.user) {\r\n      me.#user = dataset.user || GSUtil.reverse(me.user);\r\n      if (me.dev) dataset.user = me.#user;\r\n      me.user = '';\r\n    }\r\n  }\r\n\r\n  #updateDomain() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.domain) {\r\n      me.#domain = dataset.domain || GSUtil.reverse(me.domain);\r\n      if (me.dev) dataset.domain = me.#domain;\r\n      me.domain = '';\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    window.location.href = me.#url;\r\n    //window.open(me.#url, '_blank');  \r\n  }\r\n\r\n  static {\r\n    this.define('gs-email');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSFormElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    disabled: { type: Boolean },\r\n    data: { type: Object },\r\n\r\n    name: { reflect : true},\r\n    rel: { reflect : true},\r\n    acceptCharset : {reflect : true, attribute: 'accept-charset'},\r\n    autocapitalize: { reflect : true},\r\n    autocomplete: { reflect : true},\r\n\r\n    action: { reflect : true},\r\n    enctype: { reflect : true},\r\n    method: { reflect : true},\r\n    novalidate: { reflect : true, type: Boolean},\r\n    target: { reflect : true},\r\n\r\n    block: { type: Boolean },\r\n    beep: { type: Boolean },\r\n    timeout: { type: Number }\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n    this.disabled = false;\r\n    this.method = \"dialog\";\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<form ${ref(me.#formRef)}\r\n      name=\"${ifDefined(me.name)}\"\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      @change=\"${me.#onChange}\"\r\n      @blur=\"${me.#onBlur}\"\r\n      @invalid=\"${me.#onInvalid}\"\r\n      @submit=\"${me.submit}\"\r\n      @reset=\"${me.reset}\"\r\n      method=\"${me.method}\"\r\n      \r\n      rel=\"${ifDefined(me.rel)}\"\r\n      acceptCharset=\"${ifDefined(me.acceptCharset)}\"\r\n      autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n      autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n      action=\"${ifDefined(me.action)}\"\r\n      enctype=\"${ifDefined(me.enctype)}\"\r\n      target=\"${ifDefined(me.target)}\"\r\n\r\n      ?novalidate=\"${me.novalidate}\">\r\n      <slot></slot>\r\n    </form>`;\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    me.dataController?.read();\r\n  }\r\n  \r\n  updated(changed) {\r\n    const me = this;\r\n    if (changed.has('disabled')) {\r\n      if (me.disabled) {\r\n        me.disable();\r\n      } else {\r\n        me.enable();\r\n      }\r\n    }\r\n    if (changed.has('data')) {\r\n      if (GSUtil.isNull(me.data)) {\r\n        me.reset();\r\n      } else {\r\n        me.asJSON = Object.assign(me.asJSON, me.data);\r\n      }\r\n    }\r\n  }\r\n\r\n  templateInjected() {\r\n    const me = this;\r\n    me.#doFilter(me.#filterField);\r\n\t}  \r\n\r\n  async reset(e) {\r\n    const me = this;\r\n    const internal = e?.target === me.form;\r\n\r\n    if (internal) {\r\n      await me.dataController?.read(me.asJSON);\r\n    } else {\r\n      me.data = {};\r\n      me.form.reset();\r\n    }\r\n  }\r\n\r\n  async submit(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    if (!me.validate()) return;\r\n    const json = me.asJSON;\r\n    await me.dataController?.write(json);\r\n    const data = { type: 'submit', data: json, source: e, owner : me};\r\n    return me.emit('form', data, true, true, true);\r\n  }\r\n\r\n  #button(type) {\r\n    return this.query(`button[type=\"${type}\"]`, true);\r\n  }\r\n\r\n  get submitButton() {\r\n    return this.#button('submit');\r\n  }\r\n  \r\n  get resetButton() {\r\n    return this.#button('reset');\r\n  }\r\n  \r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n  \r\n  /**\r\n  * Overide native to pickup all form elements, including ones in shadow dom\r\n  */\r\n  get elements() {\r\n    return this.#childrens(true);\r\n  }\r\n\r\n  get fields() {\r\n    return this.elements;\r\n  }\r\n\r\n  get inputs() {\r\n    return this.elements;\r\n  }\r\n\r\n  get asJSON() {\r\n    const data = {};\r\n    this.elements.forEach(field => GSDOM.fromElement2Object(field, data));    \r\n    return data;\r\n  }\r\n\r\n  set asJSON(data) {\r\n    const me = this;\r\n    //me.form.reset(); do not use, create a circular calls\r\n    me.elements.forEach(field => GSDOM.fromObject2Element(field, data));    \r\n    //me.#doFilter(me.#filterField);\r\n    me.validate();\r\n  }\r\n\r\n  get isValid() {\r\n    return this.elements\r\n      .filter(el => !el.disabled)\r\n      .filter(el => !el.validity.valid).length === 0;\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.form.checkValidity() && \r\n    this.elements\r\n      .filter(el => !el.disabled)\r\n      .filter(el => !el.checkValidity()).length === 0;;\r\n  }\r\n\r\n  reportValidity() {\r\n    this.elements\r\n      .filter(el => !el.disabled)\r\n      .filter(el => !el.validity?.valid)\r\n      .forEach(el => el.reportValidity() );\r\n    return this.form.reportValidity();\r\n  }\r\n\r\n  validate() {\r\n    const me = this;\r\n    let isValid = me.checkValidity();\r\n    if (!isValid) me.reportValidity();\r\n    isValid = me.onValidate(isValid);\r\n    me.#toggle(isValid);\r\n    me.#notify(isValid);\r\n    return isValid;\r\n  }\r\n\r\n  disable() {\r\n    GSDOM.disableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  enable() {\r\n    GSDOM.enableInput(this, 'gs-form-group, input, textarea, select, .btn', false, 'gsForm');\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataWrite(data) {\r\n\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  /**\r\n   * Called only if field is valid and changed\r\n   * @param {HTMLInputElement|HTMLSelectElement|HTMLTextAreaElement} el \r\n   */\r\n  onFieldChange(el) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Called only if field is invalid\r\n   * @param {HTMLInputElement|HTMLSelectElement|HTMLTextAreaElement} el \r\n   */\r\n  onFieldInvalid(el) {\r\n\r\n  }\r\n\r\n  onValidate(sts) {\r\n\r\n    return sts;\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    const field = me.#findField(e);\r\n    if(field) me.onFieldInvalid(field);\r\n    me.#toggle(false);\r\n    me.#notify(false);\r\n  }\r\n\r\n  #onBlur(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#toggle(me.isValid);\r\n    me.#notify(me.isValid);\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    const field = me.#findField(e);\r\n    if (field) {\r\n      me.#doFilter(field);\r\n      me.handle(e);\r\n      if (field.validity.valid) me.onFieldChange(field);\r\n    }\r\n    me.#toggle(me.isValid);\r\n  }\r\n\r\n  #notify(isValid = false) {\r\n    const me = this;\r\n    const data = { type: 'valid', data: isValid, owner : this};\r\n    this.emit('form', data, true, true);    \r\n  }\r\n\r\n  #toggle(isValid = false) {\r\n    const me = this;\r\n    const btn = me.submitButton;\r\n    if (btn) btn.disabled = !isValid;\r\n  }  \r\n\r\n  #findField(e) {\r\n    if (!(e instanceof Event)) return;\r\n    const me = this;\r\n    let field = e.target;\r\n    if (e.composed) {\r\n      field = e.composedPath()\r\n        .filter(el => me.#isField(el))\r\n        .pop();\r\n    }\r\n    if(!me.#isField(field)) field = me.#findField(e.detail);\r\n    return me.#isField(field) ? field : null;\r\n  }\r\n\r\n  #isField(el) {\r\n    return el?.matches?.('input,select,textarea');\r\n  }\r\n\r\n  /**\r\n   * Filter field disabled status\r\n   * @param {HTMLInputElement} field \r\n   */\r\n  #doFilter(field) {\r\n    \r\n    if(!field) return;\r\n    \r\n    const me = this;\r\n\r\n    const value = me.#fieldValue(field);\r\n    const fldName = me.dataset.gsfDisable;\r\n    const fldVal = me.dataset.gsfValue;\r\n    const matched = fldName && field.name === fldName;\r\n    const flag = matched && value === fldVal;\r\n    if (matched) {\r\n      me.elements\r\n        .filter(el => el.name != fldName)\r\n        .forEach(el => el.disabled = flag);\r\n    } \r\n\r\n  }\r\n\r\n  /**\r\n   * Initialy, field might not be set just yet (if it is selectable),\r\n   * so we need to take valeu fro mgs-item definition\r\n   * @param {*} field \r\n   * @returns \r\n   */\r\n  #fieldValue(field) {\r\n    let value = field.tagName === 'GS-FORM-GROUP' ? field.field?.value : field.value;\r\n    if (field.selectable && GSUtil.isNull(value)) {\r\n      value = GSAttr.get(this.query('gs-item[selected]'), 'value');\r\n    }\r\n    return value;\r\n  }\r\n\r\n  #childrens(shadow = false) {\r\n    return this.queryAll('input,select,output,textarea', shadow);\r\n  }\r\n\r\n  get #filterField() {\r\n    const me = this;\r\n    return me.elements.filter(el => el.name === me.dataset.gsfDisable).pop();\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, unsafeHTML, ifDefined } from '../lib.mjs';\r\nimport { inputType, numGT0, numGE0, autocapitalize, autocorrect, autocomplete } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSFormGroupElement extends GSElement {\r\n\r\n  static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2';\r\n  static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n  static CSS_ICON = 'text-primary me-2 fs-5';\r\n  static ICON = 'info-circle-fill';\r\n\r\n  static #SELECTOPT = {\r\n    name : {},\r\n    value : {},\r\n    selected : {type: Boolean}\r\n  }\r\n\r\n  static properties = {\r\n    icon: {},\r\n    layout: {},\r\n    placement: {},\r\n\r\n    label: {},\r\n    description: {},\r\n    placeholder: {reflect: true},\r\n\r\n    pattern: {},\r\n    mask: {},\r\n    \r\n    form: {},\r\n    wrap: {},\r\n    spellcheck: {},\r\n\r\n    type: { ...inputType },\r\n    name: {},\r\n    list: {},\r\n    accept: {},   \r\n    value: {},\r\n\r\n    lang: {reflect: true},\r\n    title: {reflect: true},\r\n    rows: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    cols: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    step: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    min: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    max: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    minLength: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    maxLength: { type: Number, reflect: true, hasChanged: numGT0 },\r\n\r\n    reverse: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n\r\n    autoid: { type: Boolean },\r\n    autocopy: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    autocapitalize: { ...autocapitalize, reflect: true },\r\n    autocorrect: { ...autocorrect, reflect: true },\r\n    autocomplete: { reflect: true },\r\n\r\n    autofocus: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    checked: { type: Boolean, reflect: true },\r\n    multiple: { type: Boolean, reflect: true },\r\n    reveal: { type: Boolean, reflect: true },\r\n    readonly: { type: Boolean, reflect: true },\r\n    required: { type: Boolean, reflect: true },\r\n\r\n    invalidMessage: {reflect: true},\r\n\r\n    cellField: { attribute: 'cell-field' },\r\n    cellLabel: { attribute: 'cell-label' },\r\n    cssLabel: { attribute: 'css-label' },\r\n    cssField: { attribute: 'css-field' },\r\n\r\n    block: { type: Boolean },\r\n    beep: { type: Boolean },\r\n    timeout: { type: Number }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #inputRef = createRef();\r\n  #ouptutRef = createRef();\r\n  #patterns = [];\r\n  #options = [];\r\n\r\n  constructor() {\r\n    super();\r\n    this.#validateAllowed();\r\n    this.dynamicStyle(this.#styleID);\r\n    this.rows = 0;\r\n    this.cols = 0;\r\n    this.type = 'text';\r\n    this.placement = 'top';\r\n    this.layout = 'horizontal';\r\n    this.invalidMessage = 'Invalid input',\r\n    this.icon = GSFormGroupElement.ICON;\r\n    this.cssLabel = GSFormGroupElement.CSS_LABEL;\r\n    this.cellLabel = GSFormGroupElement.CSS_LABEL_CELL;\r\n  }\r\n  \r\n  connectedCallback() {\r\n    const me = this;\r\n    const form = GSDOM.closest(me, 'gs-form');\r\n    me.layout = GSAttr.get(form, 'layout', me.layout);\r\n\r\n    if (!me.form && form) me.form = form.name;\r\n\r\n    if (me.selectable) {\r\n      me.#options = GSItem.proxify(me, GSFormGroupElement.#SELECTOPT);\r\n    } else {\r\n      me.#patterns = GSItem.collect(me)\r\n      .filter(el => el.dataset.pattern)\r\n      .map(el => new RegExp(el.dataset.pattern));\r\n    }      \r\n    super.connectedCallback();\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    me.#onRange();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    switch (me.layout) {\r\n      case 'floating': return me.#renderFloating();\r\n      case 'vertical': return me.#renderVertical();\r\n      default: return me.#renderHorizontal();\r\n    }\r\n  }\r\n\r\n\r\n  #renderFloating() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n       <div class=\"form-floating ${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n          ${me.#renderLabel()}\r\n       </div>\r\n       ${me.#renderInfo()}\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n      <div class=\"col-12 text-md-start ${me.cellLabel}\">\r\n          ${me.#renderLabel()}\r\n      </div>\r\n       <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n       </div>\r\n       ${me.#renderInfo()}   \r\n    </div>      \r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row form-group ${classMap(me.renderClass())}\">    \r\n       <slot name=\"header\"></slot>\r\n       ${me.#renderLabelWrap()}\r\n       ${me.#renderField()}\r\n       ${me.#renderInfo()}\r\n       <slot name=\"footer\"></slot>\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderLabel() {\r\n    const me = this;\r\n    return html`<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.translate(me.label)}</label>`;\r\n  }\r\n\r\n  #renderLabelWrap() {\r\n    const me = this;\r\n    return html`<div class=\" text-md-end ${me.cellLabel}\">${me.#renderLabel()}</div>`;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.#isIcon ? html`<gs-icon size=\"5\" css=\"${GSFormGroupElement.CSS_ICON}}\" name=\"${me.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderTooltip() {\r\n    const me = this;\r\n    const tgt = me.#isIcon ? '@parent' : `[name='${me.name}']`;\r\n    return me.description ? html`<gs-tooltip local locale=\"${ifDefined(me.locale)}\" placement=\"${me.placement}\" title=\"${me.description}\" target=${ifDefined(tgt)}></gs-tooltip>` : '';\r\n  }\r\n\r\n  #renderInfo() {\r\n    const me = this;\r\n    const tooltip = me.#renderTooltip();\r\n    if (tooltip && me.#isIcon) return html`\r\n    <div class=\"col-auto\">\r\n       ${tooltip}\r\n       ${me.#renderIcon()}\r\n    </div>`;\r\n    return tooltip;\r\n  }\r\n\r\n  #renderField() {\r\n    const me = this;\r\n    return html`\r\n    <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n       <slot name=\"body\">${me.#renderInput()}${me.#renderOutput()}</slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderOutput() {\r\n    const me = this;\r\n    if (!me.isRange) return \"\";\r\n    return html`<span ${ref(me.#ouptutRef)} class=\"position-absolute px-1\">${me.value}</span>`;\r\n  }\r\n\r\n  #renderInput() {\r\n\r\n    const me = this;\r\n\r\n    const idattr = me.autoid ? me.name : undefined;\r\n    const val = me.isFieldset ? me.value.split(',') : me.value;\r\n\r\n    if (Array.isArray(val)) {\r\n      const wrap = me.dataset.radioLayout === 'vertical';\r\n      return val.map((it, i) => { return { v: it, id: `${me.name}_${i}` } })\r\n        .map((o, i) => me.#fieldSet(me.name + i, o.v, me.#inputHTML(o.id, me.name, o.v), wrap));\r\n    }\r\n\r\n    if (me.selectable) return me.#selectHTML(idattr, me.name, me.value);\r\n\r\n    if (me.#isTextArea) return me.#textArea(idattr, me.name, me.value);\r\n\r\n    return me.#inputHTML(idattr, me.name, me.value);\r\n  }\r\n\r\n  #fieldSet(id, val, fld, vertical = false) {\r\n    const me = this;\r\n    return vertical ?\r\n      html`<div class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></div>`\r\n      :\r\n      html`<span class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></span>`;\r\n  }\r\n\r\n  #initStyle() {\r\n    const me = this;\r\n    const style = {\r\n      transform: me.reverse && me.isRange ? 'rotateY(180deg)' : ''\r\n    }\r\n    me.dynamicStyle(me.#styleID, style);    \r\n  }\r\n\r\n  #renderOptions() {\r\n    const me = this;\r\n    return me.#options.map( el => html`<option value=\"${el.value}\" ?selected=${el.selected}>${el.name || el.innerText || el.value }</option>`);\r\n  }\r\n\r\n  #selectHTML(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n\r\n    return html`<select ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n        \r\n            name=\"${name}\"             \r\n            form=\"${ifDefined(me.form)}\"\r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\">\r\n            ${me.#renderOptions()}\r\n            </select>`;\r\n  }\r\n\r\n  get #isTextArea() {\r\n    const me = this;\r\n    return (me.rows > 0 || me.cols > 0) && me.type === 'text';\r\n  }\r\n\r\n  get #listHTML() {\r\n    const me = this;\r\n    let list = '';\r\n    if (me.list) {\r\n      const root = me.parentComponent || me.parentElement;\r\n      const el = GSDOM.query(root, `datalist[id=\"${me.list}\"]`, true);\r\n      if (el) list = html`${unsafeHTML(el.outerHTML)}`;\r\n    }\r\n    return list;\r\n  }\r\n\r\n  get #isBlock() {\r\n    return this.block || this.parentComponent?.block || false;\r\n  }\r\n\r\n  get #isBeep() {\r\n    return this.beep || this.parentComponent?.beep || false;\r\n  }\r\n  \r\n  #timeout() {\r\n    return this.timeout || this.parentComponent?.timeout || 0;\r\n  }\r\n\r\n  #textArea(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder) : null;\r\n    const title = me.title ? me.translate(me.title) : null;\r\n\r\n    return html`<textarea  is=\"gs-ext-text\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)}\r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @invalid=\"${me.#onInvalid.bind(me)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n            cols=\"${me.cols}\"\r\n            rows=\"${me.rows}\"\r\n\r\n            ?block=\"${me.#isBlock}\"\r\n            ?beep=\"${me.#isBeep}\"\r\n            timeout=\"${me.#timeout()}\"\r\n\r\n            spellcheck=\"${ifDefined(me.spellcheck)}\" \r\n            wrap=\"${ifDefined(me.wrap)}\" \r\n            form=\"${ifDefined(me.form)}\" \r\n            name=\"${name}\" \r\n            value=\"${ifDefined(value)}\"\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            title=\"${ifDefined(title)}\"\r\n    \r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus}\"            \r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"      \r\n      ></textarea>`;\r\n  }\r\n\r\n  #inputHTML(id, name, value) {\r\n    const me = this;\r\n    const type = me.isSwitch ? 'checkbox' : me.type;\r\n    let title = me.isRange ? me.value : me.title;\r\n    title = title ? me.translate(me.title) : title;\r\n\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder) : null;\r\n    const description = me.description ? me.translate(me.description) : null;\r\n    \r\n    me.#initStyle();\r\n\r\n    return html`<input is=\"gs-ext-input\" \r\n            ${ref(me.#inputRef)}\r\n            id=${ifDefined(id)} \r\n            @input=\"${me.#onRange.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @invalid=\"${me.#onInvalid.bind(me)}\"\r\n        \r\n            name=\"${name}\" \r\n            type=\"${type}\" \r\n            form=\"${ifDefined(me.form)}\"\r\n            value=\"${ifDefined(value)}\"\r\n            title=\"${ifDefined(title)}\"\r\n\r\n            ?block=\"${me.#isBlock}\"\r\n            ?beep=\"${me.#isBeep}\"\r\n            timeout=\"${me.#timeout()}\"\r\n\r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            description=\"${ifDefined(description)}\"\r\n\r\n            .multipattern=\"${ifDefined(me.#patterns)}\"\r\n            mask=\"${ifDefined(me.mask)}\"\r\n            pattern=\"${ifDefined(me.pattern)}\"\r\n            list=\"${ifDefined(me.list)}\"\r\n            accept=\"${ifDefined(me.accept)}\"\r\n             \r\n            step=\"${ifDefined(me.step)}\"\r\n            min=\"${ifDefined(me.min)}\"\r\n            max=\"${ifDefined(me.max)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus}\"\r\n            ?autocopy=\"${me.autocopy}\"\r\n            ?autoselect=\"${me.autoselect}\"\r\n            ?multiple=\"${me.multiple}\"\r\n            ?checked=\"${me.checked}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"\r\n            ?reveal=\"${me.reveal}\"\r\n            >${me.#listHTML}`;\r\n  }\r\n\r\n  get #cssField() {\r\n    const me = this;\r\n    if (me.selectable) return 'form-select ms-0';\r\n    if (me.isCheckable) return 'form-check-input ms-0';\r\n    if (me.isRange) return 'form-range';\r\n    return 'form-control';\r\n  }\r\n\r\n  get #cssLabel() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-label';\r\n    if (me.isFloating) return 'ms-2';\r\n    return me.isVertical ? 'form-label' : '';\r\n  }\r\n\r\n  get #cssCheck() {\r\n    const me = this;\r\n    if (me.isCheckable) {\r\n      //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      if (me.isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n      return me.isFieldset ? '' : 'form-check';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get #cellField() {\r\n    const me = this;\r\n    const val = (me.isHorizontal) ? '6' : '11';\r\n    return me.cellField || `col-md-${val} col-sm-${val} col-xs-11`;\r\n  }\r\n\r\n  get #isIcon() {\r\n    return GSUtil.isStringNonEmpty(this.icon);\r\n  }\r\n\r\n  #onRange(e) { \r\n    this.emit('input', e);\r\n  }\r\n\r\n  #onBlur(e) {\r\n    this.emit('blur', e, true, true);\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if (me.isRange) me.value = e.target?.value;\r\n    me.emit('change', e, true, true);\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    this.emit('invalid', e, true, true);\r\n  }\r\n\r\n  #validateAllowed() {\r\n    const me = this;\r\n    const slots = ['header', 'body', 'footer'];\r\n    let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n    if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n    list = Array.from(me.children).filter(el => !el.slot);\r\n    const tagList = ['GS-ITEM', 'DATALIST'];\r\n    const allowed = GSDOM.isAllowed(list, tagList);\r\n    if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n  get isFloating() {\r\n    return this.layout === 'floating';\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.layout === 'horizontal';\r\n  }\r\n\r\n  get isVertical() {\r\n    return this.layout === 'vertical';\r\n  }\r\n\r\n  get isFieldset() {\r\n    const me = this;\r\n    return me.type === 'radio' && me.value?.includes(',');\r\n  }\r\n\r\n  get isCheckable() {\r\n    const me = this;\r\n    return me.isCheck || me.isRadio || me.isSwitch;\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.field?.checked;\r\n  }\r\n\r\n  get isCheck() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get isRadio() {\r\n    return this.type === 'radio';\r\n  }\r\n\r\n  get isSwitch() {\r\n    return this.type === 'switch';\r\n  }\r\n\r\n  get isNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  get isRange() {\r\n    return this.type === 'range';\r\n  }\r\n\r\n  get isText() {\r\n    return this.type === 'text';\r\n  }\r\n\r\n  get isPassword() {\r\n    return this.type === 'passsword';\r\n  }\r\n\r\n  get isEmail() {\r\n    return this.type === 'email';\r\n  }\r\n\r\n  get isURL() {\r\n    return this.type === 'url';\r\n  }\r\n\r\n  get isFile() {\r\n    return this.type === 'file';\r\n  }\r\n\r\n  get field() {\r\n    return this.#inputRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref, repeat } from '../lib.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSFormGroupElement } from './FormGroup.mjs';\r\n\r\n/**\r\n * Component is responsible for auto-building gs-form and gs-form-group elements\r\n * from either JSON data or GS-ITEM elements.\r\n */\r\nexport class GSFormPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    formStorage: { attribute: 'form-storage' },\r\n    disabled: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.#proxify;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<gs-form ${ref(me.#formRef)}\r\n      ?disabled=${me.disabled} \r\n      storage=\"${ifDefined(me.formStorage)}\" \r\n      .locale=\"${me.locale}\"\r\n      .rtl=\"${me.rtl}\"\r\n      .css=\"${me.css}\"\r\n      .theme=\"${me.theme}\"\r\n      .margin=\"${me.margin}\"\r\n      .padding=\"${me.padding}\"\r\n      .border=\"${me.border}\"\r\n      .shadow=\"${me.shadow}\"\r\n      .os=\"${me.os}\"\r\n      .browser=\"${me.browser}\"\r\n      .environment=\"${me.environment}\"\r\n      .orientation=\"${me.orientation}\"\r\n      .protocol=\"${me.protocol}\">\r\n      <slot>\r\n        ${repeat(me.data, (r) => html`<gs-form-group .data=${r} locale=\"${ifDefined(me.locale)}\" ></gs-form-group>`)}\r\n      </slot>\r\n    </gs-form>`;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  get #proxify() {\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, GSFormGroupElement.properties));\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGroupElement class\r\n * @module components/GSGroupElement\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSAttributeHandler } from '../base/GSAttributeHandler.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { ElementNavigationController } from '../controllers/ElementNavigationController.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { classMap, createRef, html, render, ifDefined, ref } from '../lib.mjs';\r\n\r\n/**\r\n * Renderer for grouped elements such as Buttons, Navs, Tabs and lists.\r\n * Components handles grouped elements navigation, selection and focus.\r\n * \r\n * @class\r\n * @extends { GSElement }\r\n */\r\nexport class GSGroupElement extends GSElement {\r\n\r\n  static properties = {\r\n    // multiple lists with single select across \r\n    group : {},\r\n    storage: {},    \r\n    circular: { type: Boolean },\r\n    multiple: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #elRef = createRef();\r\n  #controller;\r\n  #controllerGroup;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.data = me.initData();\r\n    me.#controller = new ElementNavigationController(me);\r\n    me.#controllerGroup = new GroupController(me);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    // allow single setting at the container component to apply to the child\r\n    Array.from(me.children).forEach(it => {\r\n      GSAttributeHandler.clone(me, it, false);\r\n    });\r\n  }  \r\n\r\n\r\n  #prerender() {\r\n    const me = this;\r\n    me.queryAll('[generated]').forEach(el => el.remove());\r\n    if (me.data.length > 0) {\r\n      const items = me.renderItems();\r\n      const tpl = document.createElement('template');\r\n      render(items, tpl);\r\n      Array.of(...tpl.children).forEach(el => GSDOM.appendChild(me, el));\r\n    }\r\n  }\r\n  \r\n  firstUpdated(changed) {\r\n    const me = this;\r\n    me.#controller.init();\r\n    me.#controller.attach(me.#elRef.value);\r\n    super.firstUpdated(changed);\r\n    //me.#prerender();\r\n  }  \r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.#prerender();\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      ${me.renderWrappedUI()}\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedUI(name) {\r\n    const me = this;\r\n    return html`<div \r\n      class=\"${classMap(me.renderWrappedClass())}\">\r\n      <slot name=\"${ifDefined(name)}\"></slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    return {};\r\n  }\r\n\r\n  renderItems() {\r\n    return '';\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSItem);\r\n  }\r\n\r\n  previous() {\r\n    this.#controller.previous();\r\n  }\r\n\r\n  next() {\r\n    this.#controller.next();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    this.#controller.reset();\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  isNavigable(el) {\r\n    return el?.tagName === this.childTagName;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onBusEvent(e) {\r\n    let owner, item;  \r\n    ({owner, item} = e.detail);\r\n    if (owner != this) {\r\n      if (!item?.disabled || owner?.selectable) {\r\n        this.reset();\r\n      }\r\n    }\r\n  }\r\n  \r\n  onSelected(el) {\r\n    this.#controllerGroup.notify(el);\r\n  }\r\n\r\n  get focused() {\r\n    return this.#controller.focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#controller.selected;\r\n  }\r\n\r\n  get childTagName() {\r\n    return '';\r\n  }\r\n    \r\n  get items() {\r\n    const me = this;\r\n    return me.queryAll(me.childTagName);\r\n  }\r\n\r\n  get generated() {\r\n    const me = this;\r\n    return this.queryAll(`${me.childTagName}[generated]`);\r\n  }\r\n\r\n  get active() {\r\n    const me = this;\r\n    if (me.multiple) return me.queryAll(`${me.childTagName}[active]`);\r\n    return me.query(`${me.childTagName}[active]`);\r\n  }\r\n\r\n  settings(el) {\r\n    const tagName = customElements.getName(el)?.toUpperCase() || 'GS-ITEM';\r\n    const cfg = GSElement.allProperties(el);\r\n    const items = Array.from(this.children).filter(e => e.tagName === tagName ).map(el => GSAttr.proxify(el, cfg));\r\n    const active = items.filter(el => el.active);\r\n    active.forEach((el, idx) => el.active = idx === 0);\r\n    return items;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-group');\r\n  }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGT0 } from '../properties/index.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSIconElement extends GSElement {\r\n\r\n  static styles = css`\r\n    :host {\r\n      --gs-icon-super-color : cornflowerblue;\r\n      --gs-icon-content : '';\r\n    }\r\n    i::after {\r\n      top: -8px;\r\n      font-size: 0.7em;\r\n      position: relative;\r\n      content: var(--gs-icon-content);\r\n      content: attr(data-super);\r\n      color: var(--gs-icon-super-color);\r\n    }`;\r\n\r\n  static properties = {\r\n    name: { reflect: true, hasChanged: notEmpty },\r\n    size: { reflect: true, type: Number, hasChanged: numGT0 },\r\n    color: { reflect: true, ...color },\r\n    superColor: { attribute : 'super-color'},\r\n    super: { reflect: true },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    _clicked: { attribute:false},\r\n    _hovered: { attribute:false},\r\n  }\r\n\r\n  #ref = createRef();\r\n  \r\n  constructor() {\r\n    super();\r\n    //this.flat = true;\r\n  }\r\n\r\n  /*\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    this.#embdeded = GSDOM.matches(this.parentComponent, '[icon]');\r\n  }\r\n  */\r\n\r\n  updated(changed) {\r\n    if (changed.has('_clicked')) {\r\n      if (this._clicked) this.#postAnimate();\r\n    } \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.setCSSProperty(':host', '--gs-icon-super-color', me.superColor);\r\n    return html`<i  ${ref(me.#ref)}\r\n       class=\"bi ${classMap(me.renderClass())}\"\r\n       data-super=\"${ifDefined(me.super)}\"\r\n       @click=\"${me.animate}\"\r\n       @mouseover=\"${me.#onMouseOver}\"\r\n       @mouseout=\"${me.#onMouseOut}\"></i>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      [`text-${me.color}`]: me.color,\r\n      [`bi-${me.name}`]: me.name,\r\n      'fs': me.size > 0,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.clickCss]: me._clicked,\r\n      [me.hoverCss]: me._hovered,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  async #postAnimate() {\r\n    const me = this;\r\n    const delay = GSUtil.asNum(me.dataset.delay, 1);\r\n    if (delay > 0) {\r\n      await GSUtil.timeout(delay * 1000);\r\n      me._clicked = false;\r\n    }    \r\n  }\r\n\r\n  #onMouseOver(e) {\r\n    this.hover(true);\r\n  }\r\n\r\n  #onMouseOut(e) {\r\n    this.hover(false);\r\n  }\r\n\r\n  animate() {\r\n    const me = this;\r\n    me._hovered = false;\r\n    me._clicked = true;\r\n  }\r\n\r\n  hover(sts = false) {\r\n    const me = this;\r\n    if (sts) {\r\n      me._clicked = false;\r\n    }\r\n    me._hovered = sts;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-icon');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/index.mjs';\r\n\r\nexport class GSIndentElement extends GSElement {\r\n\r\n  static styles = css`.indent {\r\n      --gs-indent : 10px;\r\n      margin-left: var(--gs-indent);\r\n      margin-right: var(--gs-indent);\r\n    }`;\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    size: { type: Number, hasChanged: numGT0 },\r\n    multiplier: { type: Number, hasChanged: numGT0 }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.size = 1;\r\n    me.multiplier = 10;\r\n  }\r\n\r\n  renderUI() {\r\n    const size = this.size * this.multiplier;\r\n    return html`<span class=\"indent\" style=\"--gs-indent: ${size}px;\"></span>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-indent');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nconst numdef = { reflect: true, type: Number, hasChanged: numGE0 };\r\n\r\nexport class GSImageElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { hasChanged: notEmpty },\r\n    width: numdef,\r\n    height: numdef,\r\n    opacity: numdef,\r\n    invert: numdef,\r\n    grayscale: numdef,\r\n    brightness: numdef,\r\n    blur: numdef,\r\n    contrast: numdef,\r\n    saturate: numdef,\r\n    hue: numdef,\r\n    sepia: numdef,\r\n\r\n    alt: {},\r\n    loading: {}\r\n\r\n  }\r\n\r\n  #imageRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    this.#update();\r\n    return this.src;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<img ${ref(me.#imageRef)} \r\n            @load=\"${me.#onLoad}\"\r\n            src=\"${me.src}\" \r\n            alt=\"${me.alt}\" \r\n            loading=\"${ifDefined(me.loading)}\" \r\n            class=\"${me.#styleID}\" \r\n            data-gs-class=\"${me.#styleID}\">\r\n          </img>`;\r\n  }\r\n\r\n  get complete() {\r\n    return this.#imageRef.value?.complete || false;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  #renderStyle() {\r\n    const me = this;\r\n    const filter = me.#buildFilter();\r\n    const css = {\r\n      width: me.width > 0 ? me.width : undefined,\r\n      height: me.height > 0 ? me.height : undefined,\r\n      filter: filter.length > 0 ? filter.join(' ') : ''\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #buildFilter() {\r\n    const me = this;\r\n    const o = [];\r\n\r\n    if (me.blur > 0) o.push(`blur(${me.blur}px)`);\r\n    if (me.invert > 0) o.push(`invert(${me.invert})`);\r\n    if (me.opacity > 0) o.push(`opacity(${me.opacity})`);\r\n    if (me.contrast > 0) o.push(`contrast(${me.contrast})`);\r\n    if (me.grayscale > 0) o.push(`grayscale(${me.grayscale})`);\r\n    if (me.brightness > 0) o.push(`brightness(${me.brightness})`);\r\n\r\n    if (me.hue > 0) o.push(`hue-rotate(${me.hue}deg)`);\r\n    if (me.sepia > 0) o.push(`sepia(${me.sepia}%)`);\r\n    if (me.saturate > 0) o.push(`saturate(${me.saturate}%)`);\r\n\r\n    return o;\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.filter = me.#buildFilter().join(' ').trim();\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const el = e.target;\r\n    const me = this;\r\n    if (el) {\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n      me.emit('loaded', { width: el.width, height: el.height, element: el }, true);\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-image');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayoutElement\r\n */\r\n\r\nimport { classMap, html, ifDefined, templateContent } from '../lib.mjs';\r\nimport { orientation, OrientationTypes } from '../properties/orientation.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSLayoutElement extends GSElement {\r\n\r\n    static properties = {\r\n        type: { ...orientation }\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        id : {},\r\n        type: {},\r\n        min: { type: Number },\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        resizable: { type: Boolean },\r\n        autofit: { type: Boolean },\r\n        vPos: { attribute: 'h-pos' },\r\n        hPos: { attribute: 'v-pos' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.autofit = true;  \r\n        me.#items(me).map((el, idx, els) => me.#dyncss(el, idx, els, 0));\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if ( this.autofit && GSDOM.root(this) === document.body) document.body.classList.add('vh-100');\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const list = me.#items(me).map((el, idx, els) => me.#build(el, idx, els));\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"d-flex flex-fill w-100 h-100 ${classMap(me.renderClass())}\">${list}</div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const horizontal = OrientationTypes.isHorizontal(me.type);\r\n        return {\r\n            ...super.renderClass(),\r\n            'flex-column': horizontal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #items(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSLayoutElement.options));\r\n    }\r\n\r\n    #resizable(el) {\r\n        return el.size > 0 || el.min > 0 || el.max > 0 || el.resizable;\r\n    }\r\n\r\n    #dyncss(el, idx, els, lev = 0) {\r\n        const me = this;\r\n        me.#items(el.self).map((it, idx, items) => me.#dyncss(it, idx, items, lev+1));\r\n        if(me.#resizable(el)) me.dynamicStyle(`gsd-${lev}-${idx}`);\r\n    }\r\n\r\n    #build(el, idx, els, lev = 0) {\r\n\r\n        const me = this;\r\n        const type = el.self.parentElement.type || 'vertical';\r\n\r\n        const list = me.#items(el.self).map((it, idx, items) => me.#build(it, idx, items, lev+1));\r\n        \r\n        const min = el.min;\r\n        const max = el.max;\r\n        const template = el.template;\r\n        const tplEl = me.#elementTemplate(el);\r\n\r\n        const tc = `#${tplEl?.id}` !== template;\r\n\r\n        const dir = el.type || type || 'vertical';\r\n        const horizontal = OrientationTypes.isHorizontal(dir);\r\n        \r\n        const col = list.length > 0 && horizontal ? 'flex-column' : '';\r\n\r\n        const did = `gsd-${lev}-${idx}`;\r\n        const css = me.#panelCSS(el, col, did);\r\n        const style = me.#panelStyle(el, horizontal);\r\n        me.dynamicStyle(did, style);\r\n\r\n        const slot = el.name ? html`<slot name=\"${el.name}\"></slot>` : '';\r\n        const src = html`<div id=\"${ifDefined(el.id)}\" class=\"d-flex ${classMap(css)}\">\r\n            ${list}\r\n            ${templateContent(tplEl)}\r\n            ${template && tc ? html`<gs-template flat src=\"${template}\"></gs-template>` : ''}\r\n            ${slot}\r\n            </div>`;\r\n\r\n        if (!el.resizable) return src;\r\n\r\n        const resize = (idx === els.length - 1) ? 'end' : 'start';\r\n        const splitter = me.#splitter(min, max, type, resize);\r\n\r\n        if (idx === els.length - 1) return [splitter , src];\r\n        return [src, splitter];\r\n    }\r\n    \r\n    #elementTemplate(el) {\r\n        const tplEl = el.self.firstElementChild;\r\n        return tplEl instanceof HTMLTemplateElement ? tplEl : undefined;\r\n    }\r\n\r\n    #panelCSS(el, col, did) {\r\n\r\n        const resizable = this.#resizable(el);\r\n        const grow = resizable ? '' : 'flex-grow-1';\r\n\r\n        let vpos = el.vPos;\r\n        let hpos = el.hPos;\r\n\r\n        hpos = hpos ? `align-items-${hpos}` : '';\r\n        vpos = vpos ? `justify-content-${vpos}` : '';\r\n\r\n        const css = this.mapCSS(el.css, {\r\n            [did] : resizable,\r\n            [col] : col,\r\n            [grow] : grow,\r\n            [hpos] : hpos,\r\n            [vpos] : vpos\r\n        });\r\n    \r\n        return css;        \r\n    }\r\n\r\n    #panelStyle(el, horizontal) {\r\n        const min = el.size || el.min;\r\n        const max = el.max || el.size;\r\n        const style = {};\r\n        if (horizontal) {\r\n            style['min-height'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-height'] = max > 0 ? `${max}px` : undefined;\r\n        } else {\r\n            style['min-width'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-width'] = max > 0 ? `${max}px` : undefined;\r\n        }\r\n        return style;        \r\n    }\r\n\r\n    #splitter(min, max, dir, resize) {\r\n        return html`<gs-splitter split=\"${dir}\" resize=\"${resize}\" min=\"${min}\" max=\"${max}\"></gs-splitter>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-layout');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSLinklement extends GSElement {\r\n\r\n  static properties = {\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    size: { type: Number },\r\n    text: { ...color },\r\n    color: { ...color },\r\n    url: {},\r\n    ping: {},\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    target: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.url = '#';\r\n    // this.text = 'primary'; // do not set as default -> gs-dropdown\r\n    // this.target = '_blank'; // not used \r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n      <a ${ref(me.#refEl)}  \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        title=\"${ifDefined(me.translate(me.tooltip))}\" \r\n        href=\"${ifDefined(me.url)}\" \r\n        ping=\"${ifDefined(me.ping)}\" \r\n        target=\"${ifDefined(me.target)}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        ?disabled=${me.disabled} \r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"        \r\n        @click=\"${me.#onClick}\">\r\n        ${me.#first}${me.#second}\r\n        </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,      \r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [`text-${me.text}`]: me.text,\r\n      [`bg-${me.color}`]: me.color\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.iconEl?.animate();\r\n    me.notify();\r\n    if (me.url === '#' || GSUtil.isStringEmpty(me.url)) {\r\n      GSEvents.prevent(e);\r\n      me.handle(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon css=\"mx-1\" ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    size=\"${this.size}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  /**\r\n   * Generate clickable link\r\n   * @param {*} options \r\n   * @param {*} css \r\n   * @param {*} before \r\n   * @param {*} after \r\n   * @returns \r\n   */\r\n  static generate(options, css, before, after) {\r\n    const opt = options;\r\n    return html`<a class=\"${classMap(css)}\"\r\n        tabindex=\"0\"    \r\n        ${dataset(opt, true)}\r\n        part=\"${ifDefined(opt.part)}\"\r\n        tooltip=\"${ifDefined(opt.tooltip)}\"\r\n        href=\"${ifDefined(opt.url)}\">        \r\n        ${before || ''}\r\n        <slot>${opt.title}</slot> \r\n        ${after || ''}\r\n    </a>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-link');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\n\r\nexport class GSListElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    selectable: { reflect: true, type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = false;\r\n    this.multiple = false;\r\n    this.selectable = false;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  renderClass() {\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group': true,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    return html`<slot></slot>`;\r\n  }\r\n\r\n  reset() {\r\n    this.items.forEach(el => el.reset());\r\n    this.notify();\r\n  }\r\n\r\n  renderItems() {    \r\n    return this.data.map(o => {\r\n      return html`<gs-list-item generated\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-list-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return super.isNavigable(el) && this.selectable;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-LIST-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSListItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    size: { type: Number },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true }\r\n  }\r\n\r\n  #initial;\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.binded();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.#initial = this.active;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-LIST';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n        // allow single setting at the gs-list to apply to the child\r\n        // GSAttributeHandler.clone(this.parentComponent, this, false);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<a  tabindex=\"0\" ${ref(me.#refEl)}\r\n       href=\"${ifDefined(me.url)}\" \r\n       target=\"${ifDefined(me.target)}\" \r\n       class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()} \r\n        ${me.#renderSecond()}\r\n        <slot>${me.renderTemplate()}</slot>\r\n      </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.#itemCSS] : true,\r\n      'active': me.active && me.isSelectable()\r\n    }\r\n    return me.mapCSS(me.#itemStatusCSS, css);\r\n  }\r\n\r\n  isSelectable() {\r\n    return !GSUtil.asBool(this.disabled) || GSUtil.asBool(this.parentComponent.selectable);\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.icon ? html`<gs-icon name=\"${me.icon}\" size=\"${me.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderText() {\r\n    return this.title ? html`<span>${this.translate(this.title)}</span>` : html`<slot name=\"title\"></slot>`;\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.rtl ? this.#renderText() : this.#renderIcon();\r\n  }\r\n\r\n  #renderSecond() {\r\n    return this.rtl ? this.#renderIcon() : this.#renderText();\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || this.#initial || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #inactiveCSS() {\r\n    return this.parentComponent.dataset?.cssInactive || '';\r\n  }\r\n\r\n  get #itemCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #itemStatusCSS() {\r\n    return this.active && this.isSelectable() ? this.#activeCSS : this.#inactiveCSS;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { PlacementTypes, nav, placement } from '../properties/index.mjs';\r\n\r\nexport class GSNavElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    type: nav,\r\n    placement: placement,\r\n    vertical: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = true;\r\n    this.multiple = false;\r\n    this.type = 'pills';\r\n    this.placement = 'start';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-nav-item');\r\n  }\r\n  \r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const isBefore = PlacementTypes.isBefore(me.placement);\r\n    const isTab = me.type === 'tabs';\r\n    const css = {\r\n      'nav': true,\r\n      [`nav-${me.type}`]: me.type,\r\n      'flex-column': me.vertical,\r\n      'border-bottom-0': me.vertical,\r\n      'border-end': isTab && isBefore && me.vertical,\r\n      'border-start': isTab && !isBefore && me.vertical,\r\n      [`justify-content-${me.placement}`]: !me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Render items based on data propprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-nav-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-nav-item>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  onFocused(el) {\r\n    // el?.click();\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-NAV-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { NavTypes, PlacementTypes } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSNavItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    disabled: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    active: { type: Boolean, reflect: true }\r\n  }\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-NAV';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div class=\"nav-item ${classMap(me.renderClass())}\">${me.#button}</div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    return this.mapCSS(this.#itemsCSS, super.renderClass());\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get isNav() {\r\n    return true;\r\n  }\r\n\r\n  get vertical() {\r\n    return this.parentComponent.vertical || false;\r\n  }\r\n\r\n  get placement() {\r\n    return this.parentComponent.placement;\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #title() {\r\n    return html`<slot>${this.translate(this.title)}</slot>`;\r\n  }\r\n\r\n  get #icon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  get #first() {\r\n    return this.rtl ? this.#title : this.#icon;\r\n  }\r\n\r\n  get #second() {\r\n    return this.rtl ? this.#icon : this.#title;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#buttonCSS, {});\r\n    if (me.active) obj = me.mapCSS(me.#buildCSS + ' ' + me.#activeCSS, obj);\r\n    return html`<a tabindex=\"0\" type=\"button\" role=\"nav\" \r\n     ${ref(me.#refEl)}\r\n     class=\"nav-link ${classMap(obj)}\"\r\n     href=\"${ifDefined(me.url)}\" \r\n     target=\"${ifDefined(me.target)}\">\r\n        ${me.#first} \r\n        ${me.#second}\r\n      </a>`;\r\n  }\r\n\r\n  get #itemsCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #buttonCSS() {\r\n    return this.parentComponent.dataset?.cssButton || '';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #navType() {\r\n    return NavTypes.indexOf(this.parentComponent.type);\r\n  }\r\n\r\n  // fiix for shadowed DOM, parent class=\"nav nav-pills..\" \r\n  // do not cross shadow dom, so item elements does not see CSS\r\n  // we have to simulate\r\n  get #buildCSS() {\r\n    const isVertical = this.vertical;\r\n    const isBefore = PlacementTypes.isBefore(this.placement);\r\n    switch (this.#navType) {\r\n      // pills\r\n      case 1: return 'rounded text-bg-primary';\r\n      // tabs\r\n      case 2:\r\n        if (isVertical) {\r\n          if (isBefore) {\r\n            return 'shadow-none border border-end-0';\r\n          } else {\r\n            return 'shadow-none border border-start-0';\r\n          }\r\n        }\r\n        return 'shadow-none border border-bottom-0';\r\n      // underline\r\n      case 3: return 'shadow-none border-bottom border-3 fw-medium';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { svg, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSOverlayElement extends GSElement {\r\n\r\n    static properties = {\r\n        color: {},\r\n        target: {},\r\n        autoremove: { type: Boolean },\r\n        opened: { type: Boolean },\r\n        opacity: { type: Number },\r\n        padding: { type: Number },\r\n        radius: { type: Number },\r\n    }\r\n\r\n    #styleID = GSID.id;\r\n    #styleID2 = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        //this.color = 'rgb(0,0,0)';\r\n        this.color = '#000';\r\n        this.opacity = 0.7;\r\n        this.padding = 1;\r\n        this.radius = 6;\r\n        this.dynamicStyle(this.#styleID);\r\n        this.dynamicStyle(this.#styleID2);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', () => me.requestUpdate());\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        if (!me.opened) return '';\r\n        const path = me.#path;\r\n        return path ? html`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlspce=\"preserve\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\" preserveAspectRatio=\"xMinYMin slice\"\r\n            viewvbox=\"0 0 ${window.innerWidth} ${window.innerHeight}\"\r\n            class=\"gs-overlay gs-overlay-animated ${me.#styleID}\"\r\n            @click=\"${me.reset.bind(me)}\">\r\n            ${path}\r\n        </svg>` : '';\r\n    }\r\n\r\n    async firstUpdated(changed) {\r\n        const me = this;\r\n        const opt = {\r\n            fillRule: \"evenodd\",\r\n            clipRule: \"evenodd\",\r\n            strokeLinejoin: \"round\",\r\n            strokeMiterlimit: \"2\",\r\n            zIndex: \"10000\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    get #path() {\r\n        const me = this;\r\n        const el = GSDOM.query(me.target);\r\n        if (!me.target) return '';\r\n        const pathStr = me.#createSVGPathString(el);\r\n        const opt = { fill: me.color, opacity: me.opacity, pointerEvents: 'auto', cursor: 'auto' };\r\n        me.dynamicStyle(me.#styleID2, opt);\r\n        return svg`<path class=\"${me.#styleID2}\"  d=\"${pathStr}\"></path>`;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n\r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n\r\n        const rect = target.getBoundingClientRect();\r\n\r\n        const padding = me.padding;\r\n        const radius = me.radius;\r\n\r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n\r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n\r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n\r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n\r\n        const val = `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n            M${highlightBoxX},${highlightBoxY} \r\n            h${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n            v${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n            h-${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n            v-${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;\r\n        return val.replace(/[\\t\\n]/g, ' ');\r\n    }\r\n\r\n    static {\r\n        this.define('gs-overlay');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, map, range, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { size, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSPagerElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    size: { ...size },\r\n    first: { type: Boolean },\r\n    last: { type: Boolean },\r\n    next: { type: Boolean },\r\n    previous: { type: Boolean },\r\n    pages: { type: Number },\r\n\r\n    labelFirst: { attribute: 'label-first' },\r\n    labelLast: { attribute: 'label-last' },\r\n    labelNext: { attribute: 'label-next' },\r\n    labelPrevious: { attribute: 'label-previous' },\r\n\r\n    cssItem: { attribute: 'css-item' },\r\n\r\n  }\r\n\r\n  #ref = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.pages = 5;\r\n    me.labelFirst = '&laquo;';\r\n    me.labelLast = '&raquo;';\r\n    me.labelNext = '&rsaquo;';\r\n    me.labelPrevious = '&lsaquo;';\r\n    if (me.#isInTable) {\r\n      me.slot = \"extra\";\r\n    }\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const half = Math.floor((me.pages - 1) / 2);\r\n    const page = me.dataController?.page || 0;\r\n    const start = page - half < 1 ? 1 : page - half;\r\n    const end = page > 0 ? page + half : me.pages;\r\n\r\n    return html`<nav \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        @click=\"${me.#onClick}\"\r\n        @keyup=\"${me.#onKeyUp}\"\r\n        @keydown=\"${me.#onKeyDown}\">\r\n        <ul ${ref(me.#ref)} class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()}\r\n        ${me.#renderPrevious()}\r\n        ${map(range(start, end + 1), (i) => me.#renderItem(i, '', '', i  === page))}\r\n        ${me.#renderNext()}\r\n        ${me.#renderLast()}\r\n        </ul></nav>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = me.size ? SizeTypes[me.size] || me.size : '';\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'pagination': true,\r\n      [`pagination-${size}`]: size,\r\n\r\n    }\r\n    return css;\r\n  }\r\n\r\n  updated() {\r\n    const target = this.#ref.value;\r\n    if (target && this.isFocused) {\r\n      target.querySelector('.active > a')?.focus();\r\n    }\r\n  }\r\n\r\n  onDataRead() {\r\n    this.requestUpdate();\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.first ? this.#renderItem(this.labelFirst, 'first', 'First page') : '';\r\n  }\r\n\r\n  #renderLast() {\r\n    return this.last ? this.#renderItem(this.labelLast, 'last', 'Last page') : '';\r\n  }\r\n\r\n  #renderPrevious() {\r\n    return this.previous ? this.#renderItem(this.labelPrevious, 'previous', 'Previous page') : '';\r\n  }\r\n\r\n  #renderNext() {\r\n    return this.next ? this.#renderItem(this.labelNext, 'next', 'Next page') : '';\r\n  }\r\n\r\n  #renderItem(text = '', name = '', title = '', active = false) {\r\n    const me = this;\r\n    text = GSUtil.decodeHTMLEntities(text);\r\n    return html`<li class=\"page-item ${active ? 'active' : ''}\">\r\n              <a class=\"page-link ${this.cssItem}\" \r\n                 name=\"${name}\" \r\n                 title=\"${me.translate(title)}\" \r\n                 href=\"#\">${me.translate(text)}</a>\r\n            </li>`;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const el = this.#toTarget(e, 'a');\r\n    if (!el) return;\r\n\r\n    const ctrl = me.dataController;\r\n    if (!ctrl) return;\r\n\r\n    const val = el.name || el.text;\r\n    me.emit(val, el);\r\n    \r\n    switch (val) {\r\n      case 'first':\r\n        return ctrl.firstPage();\r\n      case 'last':\r\n        return ctrl.lastPage();\r\n      case 'next':\r\n        return ctrl.nextPage();\r\n      case 'previous':\r\n        return ctrl.prevPage();\r\n    }\r\n\r\n    ctrl.page = val;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const current = this.#toTarget(e, 'li');\r\n    let el = null;\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        el = current?.previousElementSibling;\r\n        break;\r\n      case 'ArrowRight':\r\n        el = current?.nextElementSibling;\r\n        break;\r\n    }\r\n    el = el?.querySelector('a');\r\n    el?.focus();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') {\r\n      this.#toTarget(e, 'a')?.click();\r\n    }\r\n  }\r\n\r\n  #toTarget(e, name) {\r\n    const el = e.target.closest(name) || e.target;\r\n    return el.tagName === name.toUpperCase() ? el : undefined;\r\n  }\r\n\r\n  get #isInTable() {\r\n    return this.parentComponent?.tagName === 'GS-TABLE';\r\n  }\r\n  \r\n  static {\r\n    this.define('gs-pagination');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, position } from '../properties/index.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSPopper } from \"../base/GSPopper.mjs\";\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopupElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    position: { ...position },\r\n    trigger: {},\r\n    target: {},\r\n    autoclose: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    opened: { type: Boolean },\r\n    hPos: { type: Number, attribute: 'h-pos' },\r\n    vPos: { type: Number, attribute: 'v-pos' },\r\n    wMin: { type: Number, attribute: 'w-min' },\r\n    wMax: { type: Number, attribute: 'w-max' },\r\n    hMin: { type: Number, attribute: 'h-min' },\r\n    hMax: { type: Number, attribute: 'h-max' },\r\n\r\n  }\r\n\r\n  #caller = null;\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.autofocus = true;\r\n    this.autoclose = true;\r\n    this.trigger = 'click';\r\n    this.position = 'absolute';\r\n    this.placement = 'bottom';\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachTaraget();\r\n    me.attachEvent(window, 'resize', me.close.bind(me));\r\n    me.on('mouseleave', me.#onAuto.bind(me));\r\n  }\r\n\r\n  firstUpdated(changedProperties) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#resize();\r\n      me.#reposition();\r\n    });\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#reposition();\r\n    if (me.autofocus) me.focus();\r\n    me.notify();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div \r\n      ${ref(me.#panelRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"fade ${classMap(me.renderClass())}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      @keydown=\"${me.#onKeyDown}\">\r\n      ${me.renderTemplate()}\r\n      <slot></slot>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': me.opened,\r\n      //'d-none' : !me.opened,\r\n      [me.#styleID]: true,\r\n      [`position-${me.position}`]: me.position,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  focus() {\r\n    this.query('[tabindex], input, select, textarea, button, a', true)?.focus();\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Show popup at x/y position on the screen\r\n   * @param {Number} x \r\n   * @param {Number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const obj = {\r\n      top: '0px',\r\n      left: '0px',\r\n      translate: `${x}px ${y}px`\r\n    };\r\n    me.#resize(obj);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      case 'Escape':\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    //if (!me.opened) return;\r\n    if (me.vPos || me.hPos) {\r\n      const opt = {\r\n        top: '0px',\r\n        left: '0px',\r\n        translate: `${me.hPos}px ${me.vPos}px`\r\n      };\r\n      const rule = me.dynamicStyle(me.#styleID);\r\n      Object.assign(rule.style, opt);\r\n    } else if (me.target) {\r\n      let target = GSDOM.query(document.documentElement, me.target);\r\n      target = target.renderRoot?.firstElementChild || target;\r\n      GSPopper.popupFixed(me.placement, me.#panel, target);\r\n    }\r\n\r\n  }\r\n\r\n  #resize(obj = {}) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n    if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n    if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n    if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n    Object.assign(rule.style, obj);\r\n  }\r\n\r\n  #onPopup(e) {\r\n    const me = this;\r\n    me.#caller = e;\r\n    if (e instanceof Event) {\r\n      GSEvents.prevent(e);\r\n      me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n    }\r\n\r\n    if (me.placement) {\r\n      GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n      me.opened = true;\r\n      return;\r\n    }\r\n\r\n    let x = e.clientX, y = e.clientY;\r\n    const rect = me.#panel.getBoundingClientRect();\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #attachTaraget() {\r\n    const me = this;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    me.trigger.split(' ').forEach(evt => {\r\n      targets.forEach(target => me.attachEvent(target, evt, me.#onPopup.bind(me)));\r\n    });\r\n  }\r\n\r\n  #onAuto(e) {\r\n    if (this.autoclose) this.close();\r\n  }\r\n\r\n  get #panel() {\r\n    return this.#panelRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-popup');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, classMap, ifDefined } from '../lib.mjs';\r\nimport { literalTemplate } from '../directives/literal.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSProgressElement extends GSElement {\r\n\r\n  static properties = {\r\n    min: { reflect: true, type: Number },\r\n    max: { reflect: true, type: Number },\r\n    step: { reflect: true, type: Number },\r\n    value: { reflect: true, type: Number },\r\n    label: { reflect: true }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.min = 0;\r\n    this.step = 1;\r\n    this.max = 100;\r\n    this.value = 0;\r\n    this.styles = { width: '0%' };\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'progress-bar' : true,\r\n      [me.#styleID] : true\r\n    }\r\n    return css;\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#updateStyle();\r\n    const obj = {min :me.min, max:me.max, step:me.step, value:me.value, percentage:me.percentage};\r\n    return html`\r\n    <div class=\"progress\" @keydown=\"${me.#onKeySelect}\" dir=\"${ifDefined(me.direction)}\">\r\n        <div class=\"${classMap(me.renderClass())}\" \r\n             \r\n             role=\"progressbar\"\r\n             tabindex=\"0\">\r\n             ${literalTemplate(me.label, obj)}\r\n        </div>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    if (changed.has('value')) {\r\n      let val = me.step + changed.get('value');\r\n      val = me.#update(val, val);\r\n      changed.set('value', val);\r\n    }\r\n  }\r\n\r\n  updated(changed) {\r\n    if (changed.has('value')) {\r\n      this.notify();\r\n    }\r\n  }\r\n\r\n  increase(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value + val, me.value);\r\n    return true;\r\n  }\r\n\r\n  decrease(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value - val, me.value);\r\n    return true;\r\n  }\r\n\r\n  get percentage() {\r\n    const me = this;\r\n    return Math.trunc((me.value / me.max) * 100);\r\n  }\r\n\r\n  #updateStyle() {\r\n    const me = this;\r\n    me.styles.width = `${me.percentage}%`;\r\n    me.dynamicStyle(me.#styleID, me.styles);\r\n  }\r\n\r\n  #update(val, old = 0) {\r\n    val = GSUtil.asNum(val, GSUtil.asNum(old));\r\n    const me = this;\r\n    if (val > me.max) val = me.max;\r\n    if (val < me.min) val = me.min;\r\n    return val;\r\n  }\r\n\r\n  #onKeySelect(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp' :\r\n      case 'ArrowRight' :\r\n          return me.increase();\r\n      case 'ArrowLeft' :\r\n      case 'ArrowDown' :\r\n         return me.decrease();\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-progress');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\n\r\nexport class GSSpinnerElement extends GSElement {\r\n\r\n    static styles = css`.spinner-border { border: var(--bs-spinner-border-width) solid currentcolor; border-right-color: transparent; }`;\r\n\r\n    static properties = {\r\n        color: { ...color, reflect: true },\r\n        small: { type: Boolean, reflect: true },\r\n        pulsar: { type: Boolean }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\" role=\"status\"></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"spinner-border\": !me.pulsar,\r\n            \"spinner-grow\": me.pulsar,\r\n            [`text-${me.color}`]: me.color,\r\n            [`spinner-border-sm`]: !me.pulsar && me.small,\r\n            [`spinner-grow-sm`]: me.pulsar && me.small,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-spinner');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitterElement class\r\n * @module components/GSSplitterElement\r\n */\r\n\r\nimport { classMap, createRef, ref, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCSSMap } from '../base/GSCSSMap.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { notEmpty, numGT0, placement } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSSplitterElement extends GSElement {\r\n\r\n    static properties = {\r\n        // Check if splitter use vertical or horizontal splitting\r\n        split: { reflect: true },\r\n        // start|end|top|bottom\r\n        resize: { ...placement, hasChanged: notEmpty },\r\n        size: { type: Number, hasChanged: numGT0 }\r\n    }\r\n\r\n    #cursor = 0;\r\n    #styleID = GSID.id;\r\n    #styleTGT = GSID.id;\r\n    #elRef = createRef();\r\n    #mouseController;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.size = 8;\r\n        me.resize = 'start';\r\n        me.dynamicStyle(me.#styleID);\r\n        me.#load();\r\n        me.#mouseController = new ElementMoveController(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        //this.dynamicStyle(this.#styleTGT, null, true);\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        super.firstUpdated(changed);\r\n        const me = this;\r\n        me.#mouseController.attach(me.#splitter);\r\n        //const shadow = GSDOM.root(me.target) instanceof ShadowRoot;\r\n        //me.dynamicStyle(me.#styleTGT, {}, !shadow);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#elRef)} \r\n            @dblclick=\"${me.#onDoubleClick}\"\r\n            data-gs-class=\"${me.#styleID}\" \r\n            class=\"${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'splitter': true,\r\n            [me.#styleID]: true\r\n        }\r\n        return css;\r\n    }\r\n\r\n    updated(changedProperties) {\r\n        const me = this;\r\n        me.#cssUpdate();\r\n    }\r\n\r\n    /**\r\n    * Lock UI for mouse events to enable resizing over embedded iframes\r\n    * @param {MouseEvent} e \r\n    */\r\n    onStartMove(e) {\r\n        const me = this;\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', { start: true });\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    onMouseMove(e) {\r\n        const me = this;\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Save last position and unlock mouse UI events when resizing finished\r\n     * @param {*} e \r\n     */\r\n    onEndMove(e) {\r\n        const me = this;\r\n        me.#save();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', { stop: true });\r\n    }\r\n\r\n    /**\r\n    * Check if splitter use vertical or hotizontal splitting\r\n    * @returns {Boolean}\r\n    */\r\n    get isVertical() {\r\n        return this.split === 'vertical';\r\n    }\r\n\r\n    get isHorizontal() {\r\n        return !this.isVertical;\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display', 'none')).pop();\r\n        }\r\n        el.classList?.add(me.#styleTGT);\r\n        return el;\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.#elRef.value;\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        return this.target.style;\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n\r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n                .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, true);\r\n                    el.dataset.gsSplitter = true;\r\n                });\r\n        } else {\r\n            me.#lockable\r\n                .filter(el => el.dataset.gsSplitter)\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, false);\r\n                    delete el.dataset.gsSplitter;\r\n                });\r\n        }\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { width: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { height: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        const key = me.isVertical ? 'width' : 'height';\r\n        me.#styleDynamic[key] = val + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { [key]: val + \"px\" }, true);\r\n    }\r\n\r\n    #cssUpdate() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        const opt = {\r\n            [size]: `${me.size}px`,\r\n            [full]: '100%',\r\n            'border-width': '1px',\r\n            cursor: cursor,\r\n            'border-color': 'darkgray',\r\n            'border-style': 'solid',\r\n            'background-color': 'lightgray',\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-splitter');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNavItemElement } from '../NavItem.mjs';\r\n\r\n/**\r\n * Tab component (gs-tab), generate selectable/switchable tabs on a panel\r\n */\r\nexport class GSTabItemElement extends GSNavItemElement {\r\n\r\n  static properties = {\r\n    name: {}\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.#updateCSS + this.css;\r\n  }\r\n\r\n  get #updateCSS() {\r\n    const me = this;\r\n    return me.shouldUpdate() ? GSUtil.normalize(me.parentComponent?.tabCSS) : '';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.parentComponent?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\n\r\n/**\r\n * Container for individual tab; part of tabed panel\r\n */\r\nexport class GSTabPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    name: {},\r\n    template: {},\r\n    active: { type: Boolean, reflect : true }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.active = false;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-TAB-GROUP';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" \r\n      class=\"${classMap(this.renderClass())}\">\r\n      <slot>\r\n      ${this.template ? html`<gs-template flat src=\"${this.template}\"></gs-template>` : ''}\r\n      </slot></div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tab-pane': true,\r\n      'd-none' : !me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tab-group') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../../base/GSID.mjs';\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { PlacementTypes } from '../../properties/placement.mjs';\r\nimport { GSNavElement } from '../Nav.mjs';\r\n\r\n/**\r\n * Panel with tabs component (gs-tab-group), generate childrens gs-tab and gs-tab-panel \r\n */\r\nexport class GSTabGroupElement extends GSNavElement {\r\n\r\n  static properties = {\r\n    panelCSS: { attribute: 'css-panel' },\r\n    tabCSS: { attribute: 'css-tab' },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n   \r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    // link tabs and panels\r\n    me.items.forEach(el => me.#findPanel(el));\r\n    me.onSelected(me.active);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.items.forEach(el => me.#findPanel(el));\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'd-flex': me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    const me = this;\r\n    const reverse = PlacementTypes.isAfter(me.placement);\r\n    const list = [super.renderWrappedUI('tabs'),\r\n    html`<div class=\"tab-content flex-fill ${me.panelCSS}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <slot name=\"panels\"></slot>\r\n      </div>\r\n      <slot class=\"d-none\"></slot>`];\r\n    return reverse ? list.reverse() : list;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const css = super.renderWrappedClass();\r\n    return me.mapCSS(me.tabCSS, css);\r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    const me = this;\r\n    const tabs =  me.#renderTabs();\r\n    const panels = me.#renderPanels();\r\n    return tabs.concat(...panels);\r\n  }\r\n\r\n  #renderTabs() {    \r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab generated slot=\"tabs\"\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\"    \r\n        title=\"${ifDefined(o.title)}\"\r\n        name=\"${o.name}\"></gs-tab>`;\r\n    });    \r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  #renderPanels() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-panel generated  \r\n        slot=\"panels\" name=\"${o.name}\" \r\n        .active=\"${ifDefined(o.active)}\"\r\n        template=\"${ifDefined(o.template)}\"></gs-tab-panel>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when tab selected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onSelected(el) {\r\n    el?.click();\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = true;\r\n  }\r\n\r\n  /**\r\n   * Callback when tab deselected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onDeselected(el) {\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = false;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-TAB';\r\n  }\r\n\r\n  /**\r\n   * Selected Tab node name is used to find the panel.\r\n   * If panel found, auto-link it with node element\r\n   * @param {GSTabElement} el \r\n   */\r\n  #findPanel(el) {\r\n    if (!el) return null;\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    const generated = me.data?.length > 0;\r\n    let panel = el[key] || me.query(`gs-tab-panel[name=\"${el.name}\"]`, generated);\r\n    if (!el[key]) el[key] = panel;\r\n    return panel;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\n/**\r\n * A HTML Table renderer for tabular data representation.\r\n * Either use \"storage\" property to point to data handler\r\n * or use simpler form by using \"data\" property.\r\n * \r\n * NOTE: Simpler form currently does not suport data filter.\r\n * Simpler form is only for read-ony static data representation.\r\n */\r\nexport class GSTableElement extends GSElement {\r\n\r\n  static #icons = ['sort-up', 'arrow-down-up', 'sort-down-alt'];\r\n\r\n  static styles = css`th:hover { opacity: 50% !important; }`;\r\n\r\n  static CELLS = {\r\n    align: {},\r\n    width: {},\r\n    width: {},\r\n    css: {},\r\n    title: {},\r\n    colspan: {},\r\n    storage: {},\r\n    ref: {}, // if set; use storage or gs-items to map ref value to virtual field\r\n    filter: { type: Boolean },\r\n    hidden: { type: Boolean },\r\n    fixed: { type: Boolean },\r\n    filterType: { attribute: 'filter-type' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    ...GSData.PROPERTIES\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    color: { ...color },\r\n    colorHead: { ...color, attribute: 'head-color' },\r\n    colorSelect: { ...color, attribute: 'select-color' },\r\n    colorSort: { ...color, attribute: 'sort-color' },\r\n    stripedColumn: { type: Boolean, attribute: 'striped-column' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    divider: { type: Boolean },\r\n    striped: { type: Boolean },\r\n    hover: { type: Boolean },\r\n    small: { type: Boolean },\r\n    grid: { type: Boolean },\r\n    borderless: { type: Boolean },\r\n\r\n    sort: { type: Array, state: true },\r\n    columns: { type: Array, state: true },\r\n    key: { type: Number, state: true },\r\n\r\n    data: { type: Array },\r\n    datacolumn: { type: Boolean },\r\n    multisort: { type: Boolean },\r\n    multiselect: { type: Boolean },\r\n    protected: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n    toggle: { type: Boolean },\r\n    sortable: { type: Boolean },\r\n  }\r\n\r\n  #config = [];\r\n  #sortOrder = [];\r\n  #auto = false;\r\n\r\n  constructor() {\r\n    super();\r\n    this.headColor = 'secondary';\r\n    this.colorSelect = 'info';\r\n    this.columns = [];    \r\n    this.data = [];\r\n    this.sort = [];\r\n    this.key = 0;\r\n  }\r\n\r\n  get selected() {\r\n    return this.dataController.selected;\r\n  }\r\n\r\n  set search(val) {\r\n    const me = this;\r\n    if (me.storage && me.dataController) {\r\n      return me.dataController.search = val;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#config = GSItem.proxify(me, GSTableElement.CELLS);\r\n    if (me.columns.length === 0) me.columns = me.#config.map(v => v.name);\r\n    if (!me.storage) {      \r\n      me.storage = me.#auto = GSID.next('table-');\r\n    }\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.dataController.clearSelected(this.data);\r\n    this.data = [];\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'user-select-none': me.protected,\r\n      'table': true,\r\n      'table-sm': me.small,\r\n      'table-hover': me.hover,\r\n      'table-striped': me.striped,\r\n      'table-bordered': me.grid,\r\n      'table-borderless': me.borderless,\r\n      'table-striped-columns': me.stripedColumns,\r\n      [`table-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.dataController?.read();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (me.columns.length != me.sort.length) me.sort = Array(me.columns.length).fill(0);\r\n    if (me.datacolumn && me.data.length > 0) {\r\n      me.columns = me.data[0];\r\n      me.data = me.data.slice(1);\r\n    }\r\n    if (changed.has('multiselect') && !me.multiselect) me.dataController.clearSelected();\r\n    if (changed.has('selectable') && !me.selectable) me.dataController.clearSelected();\r\n    if (changed.has('sortable') || changed.has('multisort')) {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [];\r\n    }\r\n\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const headColor = me.colorHead ? `table-${me.colorHead}` : '';\r\n    return html`\r\n      <table  \r\n       dir=\"${ifDefined(me.direction)}\"\r\n       @keyup=\"${me.#onKeyUp}\"\r\n       @keydown=\"${me.#onKeyDown}\"\r\n       class=\"${classMap(me.renderClass())}\">\r\n        <thead class=\"${ifDefined(headColor)}\">\r\n          ${me.#renderFilters()}\r\n          <tr @click=${me.#onSort}>\r\n            ${me.columns.map((entry, index) => me.#renderColumn(entry, index))}\r\n          </tr>\r\n        </thead>\r\n        <tbody @click=${me.#onSelect} @contextmenu=${me.#onSelect} class=\"${me.divider ? 'table-group-divider' : ''}\" role=\"button\">\r\n          ${me.data.map((entry, index) => me.#renderRecord(entry, index))}\r\n          ${me.#renderEmpty()}\r\n        </tbody>\r\n      </table>\r\n      <slot name=\"extra\">${me.#renderHandler()}</slot>\r\n    `;\r\n  }\r\n\r\n  #renderHandler() {\r\n    const me = this;\r\n    return me.#auto ? html`<gs-data-handler type=\"cached\" mode=\"\" id=${me.#auto} generated></gs-data-handler>` : '';\r\n  }\r\n\r\n  onDataRead(data) {\r\n    const me = this;\r\n    me.data = data;\r\n    //me.dataController.clearSelected();\r\n\r\n    // update filtering\r\n    if (data.length > 0 && me.#hasFilters) {\r\n      me.#config.forEach((entry, index) => {\r\n        entry.columnType = me.#columType(index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear table filters\r\n   */\r\n  clear() {\r\n    this.#input.forEach(el => el.value = '');\r\n    this.dataController?.filter([]);\r\n  }\r\n\r\n  valueAt(row, cell) {\r\n    return this.data.length > row ? this.data[row][cell] : undefined;\r\n  }\r\n\r\n  get #input() {\r\n    return this.queryAll('th > input, th > select', true);\r\n  }\r\n\r\n  get #hasFilters() {\r\n    return this.#config.filter(o => o.filter).length > 0;\r\n  }\r\n\r\n  #columType(index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const cell = me.valueAt(0, me.columns[index]);\r\n    cfg.type = cfg.type || 'text';\r\n    const cfgType = { 'string': 'text', 'currency': 'number', 'timestamp': 'datetime-local' }[cfg.type]\r\n    const dataType = cell instanceof Date ? 'date' : typeof cell;\r\n    return cell ? dataType : cfgType || cfg.type;\r\n  }\r\n\r\n  #renderFilters() {\r\n    const me = this;\r\n    return me.#hasFilters ? html`<tr>${me.columns.map((entry, index) => me.#renderFilter(entry, index))}</tr>` : '';\r\n  }\r\n\r\n  #renderFilter(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (!cfg?.filter) return html`<th></th>`;\r\n\r\n    let mask = '';\r\n    const hasSub = cfg.childElementCount > 0;\r\n    const isDate = cfg.columnType === 'date';\r\n    if (isDate) mask = cfg.format || GSUtil.getDateFormat(cfg.locale || GSUtil.locale);\r\n    const css = `${GSUtil.normalize(me.cssFilter)} ${GSUtil.normalize(cell.cssFilter)}`; \r\n\r\n    if (hasSub && cfg.fixed) {\r\n      return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n          <select is=\"gs-ext-select\" .index=${index}\r\n              class=\"form-select ${css}\" \r\n              name=\"${cell}\"> \r\n              ${me.#renderOption(cfg)}\r\n              </select>\r\n          </th>`;\r\n    }\r\n\r\n    let listid = '';\r\n    let list = '';\r\n    if (hasSub) {\r\n      listid = `${me.id}-list-${index}`;\r\n      list = html`<datalist id=\"${listid}\">${me.#renderOption(cfg)}</datalist>`;\r\n    } \r\n\r\n    return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n        ${list}\r\n        <input is=\"gs-ext-input\" .index=${index}\r\n            class=\"form-control ${css}\" \r\n            mask=\"${ifDefined(mask)}\"\r\n            list=\"${ifDefined(listid)}\"\r\n            name=\"${cell}\" \r\n            placeholder=\"${ifDefined(cfg.title)}\" \r\n            type=\"${cfg.filterType || cfg.columnType}\"\r\n            data-slots=\"${ifDefined(isDate ? 'DMY' : undefined)}\">\r\n        </th>`;\r\n  }\r\n\r\n  #renderOption(cfg) {\r\n    if (cfg.childElementCount == 0) return '';\r\n    const sub = GSItem.proxify(cfg);\r\n    return sub.map(el => html`<option value=\"${el.value}\">${cfg.fixed ? el.map : ''}</option>`);\r\n  }\r\n\r\n  #renderColumn(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    const css = `${GSUtil.normalize(me.cssHeader)} ${GSUtil.normalize(cell.cssHeader)}`; \r\n    return html`\r\n      <th .index=${index} class=\"${css}\" \r\n        colspan=\"${ifDefined(cfg.colspan)}\"\r\n        width=\"${ifDefined(cfg?.width)}\">\r\n        <div class=\"d-flex justify-content-between\"> \r\n          <span>${cfg?.title || cell}</span>\r\n          ${me.#renderIcon(index)}\r\n        </div>\r\n      </th>\r\n    `\r\n  }\r\n\r\n  #renderIcon(index) {\r\n    const me = this;\r\n    if (!me.sortable) return '';\r\n    const icons = GSTableElement.#icons;\r\n    const sortType = me.sort[index];\r\n    const order = me.multisort ? me.#sortOrder.indexOf(index) + 1 : '';\r\n    return html`<gs-icon name=\"${icons[sortType + 1]}\" super=\"${order > 0 ? order : ''}\" color=\"${ifDefined(me.colorSort)}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderRecord(entry, index) {\r\n    const me = this;\r\n    const selected = me.dataController.isSelected(entry);\r\n    const color = me.colorSelect && selected ? `table-${me.colorSelect}` : '';\r\n    const cells = me.#remapRecord(entry);\r\n    return html`\r\n        <tr .index=${index} class=\"${color}\" tabindex=\"0\" ?selected=${selected}>\r\n          ${cells.map((cell, i) => me.#renderCell(cell, i))}\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  #renderCell(cell, index) {\r\n    const cfg = this.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    return html`<td class=\"text-${cfg?.align}\" colspan=\"${ifDefined(cfg.colspan)}\" ><span>${cell}</span></td>`;\r\n  }\r\n\r\n  #remapRecord(record) {\r\n    const me = this;\r\n    if (!Array.isArray(record)) record = me.columns.map(v => record[v]);\r\n    return record.map((val, i) => me.#config[i] ? GSData.format(me.#config[i], val) : val);\r\n  }\r\n\r\n  #renderEmpty() {\r\n    const me = this;\r\n    return me.data.length > 0 ?  '' :\r\n    html`<tr data-ignore=\"true\"><td colspan=\"${me.columns.length}\" class=\"text-center fw-bold text-muted\">${me.translate('No Data')}</td></tr>`;\r\n  }\r\n\r\n  #elementTofilter(el) {\r\n    if (!el.value) return undefined;\r\n    const isDate = el.type === 'date';\r\n    const val = isDate ? el.valueAsDate : el.value;\r\n    const cfg = this.#config[el.index];\r\n    return { name: el.name, value: val, locale : cfg?.locale };\r\n  }\r\n\r\n  #onFilter(e) {\r\n    \r\n    const me = this;\r\n    \r\n    const filter = me.#input\r\n      .map(el => me.#elementTofilter(el))\r\n      .filter(el => el?.value);\r\n\r\n    if (me.storage) {\r\n      me.dataController.filter(filter);\r\n    } else {\r\n      // TODO keep full data, use sorted\r\n      // GSData.filter(me.data, filter);\r\n    }\r\n  }  \r\n\r\n  #onSort(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.sortable) return;\r\n    \r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const column = e.target.closest('th');\r\n    if (!icon || !column) return;\r\n\r\n    const idx = column.index !== undefined ? column.index : GSDOM.getElementIndex(column);\r\n    const current = me.sort[idx];\r\n    const sortType = current === 1 ? -1 : current + 1;\r\n\r\n    if (me.multisort) {\r\n      if (sortType == 0) {\r\n        me.#sortOrder = me.#sortOrder.filter(v => v != idx);\r\n      } else if (!me.#sortOrder.includes(idx)) {\r\n        me.#sortOrder.push(idx);\r\n      }\r\n    } else {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [idx];\r\n    }\r\n\r\n    me.sort[idx] = sortType;\r\n\r\n    const sort = me.#prepareSorter(me.sort, me.#sortOrder);\r\n\r\n    if (me.storage) {\r\n      me.dataController?.sort(sort);\r\n    } else {\r\n      me.data = GSData.sortData(me.data, sort);\r\n    }\r\n\r\n    me.emit('sort');\r\n  }\r\n\r\n  #prepareSorter(sort, sortOrder) {\r\n    \r\n    const me = this;\r\n\r\n    if (sort.filter(v => v).length === 0) {\r\n      sort = Array(me.columns.length).fill(0);\r\n      sort[me.key] = 1;\r\n    }\r\n\r\n    // if data record is object (not simple array)\r\n    const isComplex = me.data[0] && !Array.isArray(me.data[0]);\r\n\r\n    // sort list \r\n    const list = sort.map((v, i) => v ? { name: isComplex ? me.columns[i] : undefined, col: i, ord: v, idx: sortOrder.indexOf(i) } : null).filter(v => v);\r\n\r\n    // order sort list by idx\r\n    sort = GSData.sortData(list, [{ name: 'idx', ord: 1 }]);\r\n\r\n    return sort;\r\n  }\r\n\r\n  #onSelect(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.selectable) return;\r\n    \r\n    const tr = e.target.tagName === 'TR' ? e.target : e.target.closest('tr');\r\n    if (!tr) return;\r\n    \r\n    // if context menu is attached and right click made\r\n    if (e.button === 2 && !me.query('gs-context')) return;\r\n    \r\n    const record = me.data[tr.index];\r\n    const isSelected = me.dataController.isSelected(record);\r\n    if (me.multiselect) {\r\n      if (isSelected) {\r\n        me.dataController.removeSelected(record);\r\n      } else {\r\n        me.dataController.addSelected(record);\r\n      }\r\n    } else if (me.toggle) {\r\n      if (isSelected) {\r\n        me.dataController.clearSelected(me.data);\r\n      } else {\r\n        me.dataController.addSelected(record);\r\n      }\r\n    } else {\r\n      me.dataController.clearSelected(me.data);\r\n      me.dataController.addSelected(record);\r\n    }\r\n    me.emit('select');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    if (!e.target.matches('tbody tr')) return;\r\n    let el = null;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        el = e.target.previousElementSibling;\r\n        break;\r\n      case 'ArrowDown':\r\n        el = e.target.nextElementSibling;\r\n        break;\r\n    }\r\n\r\n    if (el) {\r\n      el.focus();\r\n      this.emit('focus', el);\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') this.#onSelect(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-table');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport { createRef, ref, classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { stringArrayConverter, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSTagElement}\r\n */\r\nexport default class GSTagElement extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static styles = css`\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n\r\n    static properties = {\r\n        placeholder: {},\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        name: {},\r\n        data: { type: Array },\r\n        values: { type: Array, reflect: true, converter: stringArrayConverter },\r\n        appendable: { type: Boolean },\r\n        color: { ...color },\r\n        closeColor: { ...color, attribute: 'close-color' },\r\n        cssClose: { attribute: 'css-close' },\r\n        cssTag: { attribute: 'css-tag' },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {}\r\n    }\r\n\r\n    #dataListRef = createRef();\r\n    #inputRef = createRef();\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = '';\r\n        this.data = this.#items;\r\n        this.closeColor = 'light';\r\n        this.color = 'primary';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const tags = me.#renderTags();\r\n        return html`\r\n        <div  dir=\"${ifDefined(me.direction)}\" \r\n            class=\"${classMap(me.renderClass())}\"\r\n            @click=\"${me.#onClick.bind(me)}\">\r\n            ${tags}\r\n            <input type=\"text\" \r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            ${ref(me.#inputRef)}\r\n            name=\"${me.name}\" \r\n            list=\"${me.name}_list\"\r\n            class=\"form-control d-flex w-auto flex-grow-1\" \r\n            placeholder=\"${me.#info}\">\r\n            <datalist ${ref(me.#dataListRef)} id=\"${me.name}_list\">${me.#renderList()}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"d-flex\": true,\r\n            \"flex-wrap\": true,\r\n            \"align-items-center\": true,\r\n            \"gap-1 \": true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    get #info() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return me.placeholder ? me.placeholder : alt;\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTagElement.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.data.length >= me.max;\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax || (!optEl && me.appendable == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (!me.values.includes(fld.value)) {\r\n            me.values.push(fld.value);\r\n            fld.value = '';\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const value = tagEl.dataset.value;\r\n        me.values = me.values.filter(v => v != value);\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v));\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        const size = me.size > 0 ? `fs-${me.size}` : '';\r\n        return html`<div class=\"${classMap(me.#tagClass)}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"${classMap(me.#btnClass)}\"></button></div>`;\r\n    }\r\n\r\n    get #tagClass() {\r\n        const me = this;\r\n        const opt = {\r\n            badge: true,\r\n            tag: true,\r\n            [`fs-${me.size}`]: me.size > 0,\r\n            [`bg-${me.color}`]: me.color ? true : false\r\n        }\r\n        return me.mapCSS(me.cssTag, opt);\r\n    }\r\n\r\n    get #btnClass() {\r\n        const me = this;\r\n        const opt = {\r\n            'btn-close': true,\r\n            'ms-1': true,\r\n            [`bg-${me.closeColor}`]: me.closeColor ? true : false\r\n        }\r\n        return me.mapCSS(me.cssClose, opt);\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        return me.data.map(v => html`<option value=\"${v}\">`);\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el));\r\n    }\r\n\r\n    get #items() {\r\n        return this.#proxify(this).map(el => el.name).filter(v => v ? true : false);\r\n    }\r\n\r\n    get #input() {\r\n        return this.#inputRef.value;\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.#dataListRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-tag');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSTextElement extends GSElement {\r\n\r\n  #text = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.#text = this.innerText;\r\n    this.innerText = \"\";\r\n  }\r\n\r\n  renderUI() {\r\n    return this.translate(this.#text);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-text');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSTooltipElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    title: {},\r\n    target: {},\r\n    opened: { type: Boolean },\r\n    local: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowStyle = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.placement = 'top';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowStyle);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      role=\"tooltip\"\r\n      data-popper-placement=\"${me.placement}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      <div ${ref(me.#arrowRef)} \r\n          class=\"tooltip-arrow ${me.#arrowStyle}\" \r\n          data-gs-class=\"${me.#arrowStyle}\">\r\n      </div>\r\n      <div class=\"tooltip-inner\">${me.translate(me.title)}</div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tooltip': true,\r\n      'bs-tooltip-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  #attachEvents() {\r\n    const me = this;\r\n    me.attachEvent(me.#ref, 'mouseenter', me.open.bind(me));\r\n    me.attachEvent(me.#ref, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const arrowEl = me.#arrow;\r\n    const panelEl = me.#panel;\r\n    if (!panelEl) return;\r\n    if (me.opened) {\r\n      GSPopper.popupFixed(me.placement, panelEl, me.#ref, arrowEl);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, { top: '-1000px', left: '-1000px' });\r\n    }\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return me.local ? me.#refLocal : me.#refGlobal;\r\n    }\r\n  }\r\n\r\n  get #refLocal() {\r\n    const root = GSDOM.root(this);\r\n    return GSDOM.query(root, this.target);\r\n  }\r\n  \r\n  get #refGlobal() {\r\n    return GSDOM.query(document.body, this.target);\r\n  }\r\n\r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-tooltip');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty } from '../properties/index.mjs';\r\n\r\nexport class GSTemplateElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { reflect: true, hasChanged: notEmpty }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    const me = this;\r\n    if (me.flat) {\r\n      me.renderOptions.renderBefore = me;\r\n      return me.parentElement;\r\n    }\r\n    return super.createRenderRoot();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${this.renderTemplate()}`;\r\n  }\r\n\r\n\ttemplateInjected() {\r\n\t\tthis.emit('template-injected', null, true, true);\r\n\t}\r\n\r\n  static {\r\n    this.define('gs-template');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle automatic field value copy and select\r\n */\r\nexport class CopySelectController {\r\n\r\n  #host;\r\n\r\n  #clickCallback;\r\n  #copyCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#clickCallback = me.#onClick.bind(me);\r\n    me.#copyCallback = me.#onCopy.bind(me);\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on?.('click', me.#clickCallback);\r\n    me.#host.on?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host.off?.('click', me.#clickCallback);\r\n    me.#host.off?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  #onCopy() {\r\n    GSUtil.writeToClipboard(this.#host.value);\r\n  }\r\n\r\n  #onClick(e) {\r\n      const me = this;\r\n      if (me.#host.autocopy) GSUtil.writeToClipboard(me.#host.value);\r\n      if (me.#host.autoselect) me.#host.select();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Handle field mask \r\n */\r\nexport class MaskController {\r\n\r\n  static #special = '.^$*+?()[]{}\\|';\r\n\r\n  static #maskType = {\r\n    x: /[0-9a-fA-F]/g,\r\n    n: /[0-9]/g,\r\n    y: /[0-9]/g,\r\n    m: /[0-9]/g,\r\n    d: /[0-9]/g,\r\n    h: /[0-9]/g,\r\n    s: /[0-9]/g,\r\n    '.': /[0-9]/g,\r\n    '#': /[a-zA-Z]/g,\r\n    '*': /[0-9a-zA-Z]/g,\r\n    '_': /./g\r\n  };\r\n\r\n  #back = false;\r\n  #slots;\r\n  #prev;\r\n  #first;\r\n  #accept;\r\n  #pattern;\r\n\r\n  #host;\r\n\r\n  #keyDownCallback;\r\n  #inputCallback;\r\n  #focusCallback;\r\n  #changeCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.initRules();\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    me.#inputCallback = me.#format.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    me.#changeCallback = me.#onChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.initRules();\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n    me.#host.on('input', me.#inputCallback);\r\n    me.#host.on('focus', me.#focusCallback);\r\n    me.#host.on('change', me.#changeCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n    me.#host.off('input', me.#inputCallback);\r\n    me.#host.off('focus', me.#focusCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n  }\r\n\r\n  initRules() {\r\n    const me = this;\r\n    if (!me.pattern) return;\r\n    me.#slots = me.#buildSlots();\r\n    me.#prev = (j => Array.from(me.pattern, (c, i) => me.#slots.has(c) ? j = i + 1 : j))(0);\r\n    me.#first = [...me.pattern].findIndex(c => me.#slots.has(c));\r\n    me.#accept = me.#buildAccept();\r\n    me.#toPattern();\r\n  }\r\n\r\n  checkValidity() {  \r\n    const me = this;  \r\n    let isMatch = true;\r\n    if (me.isValid) {\r\n      isMatch = me.isEmpty || me.isMatch;\r\n      if (!isMatch) me.setCustomValidity('Mask not matched!');\r\n    }\r\n    return me.isValid && isMatch;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n    \r\n  setSelectionRange(i, j) {\r\n    this.#host.setSelectionRange(i, j);\r\n  }\r\n\r\n  select() {\r\n    this.#host.select();\r\n  }\r\n\r\n  get isEmpty() {\r\n    return GSUtil.isStringEmpty(this.raw);\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    const [i, j] = this.#range();\r\n    return this.raw.substring(0, j);\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get pattern() {\r\n    return this.#host.mask;\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get selectionStart() {\r\n    return this.#host.selectionStart;\r\n  }\r\n\r\n  get selectionEnd() {\r\n    return this.#host.selectionEnd;\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.#host.autoselect;\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n\r\n    let isMatch = true;\r\n    if (me.#pattern) {\r\n      me.#pattern.lastIndex = 0;\r\n      isMatch = me.#pattern.test(me.raw);\r\n    }\r\n\r\n    return isMatch;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    this.#back = e.key === \"Backspace\";\r\n  }\r\n\r\n  #onFocus(e) {\r\n    const me = this;\r\n    me.#format();\r\n    if (me.autoselect) me.select();\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.#format();\r\n  }\r\n\r\n  /**\r\n   * If data-slots not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildSlots() {\r\n    const me = this;\r\n    let slots = me.dataset.slots;\r\n    if (!slots) {\r\n      const maskType = MaskController.#maskType;\r\n      slots = [...new Set(me.pattern)]\r\n        .filter(v => maskType[v.toLowerCase()])\r\n        .join('');\r\n    }\r\n    return new Set(slots || \"_\");\r\n  }\r\n\r\n  /**\r\n   * If data-accept not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildAccept() {\r\n    const me = this;\r\n    let accept = me.dataset.accept;\r\n    if (!accept) {\r\n      const maskType = MaskController.#maskType;\r\n      accept = [...new Set(me.pattern)]\r\n        .map(v => maskType[v.toLowerCase()])\r\n        .filter(v => v);\r\n      if (accept.length > 0) {\r\n        const tmp = {};\r\n        accept.forEach(v => tmp[v.src] = v);\r\n        accept = Object.values(tmp);\r\n        return accept.length === 1 ? accept.pop() : accept;\r\n      }\r\n\r\n    }\r\n    return new RegExp(accept || \"\\\\d\", \"g\");\r\n  }\r\n\r\n  #range() {\r\n    const me = this;\r\n    const value = me.raw;\r\n    return [me.selectionStart, me.selectionEnd].map(i => {\r\n      i = me.#clean(value.slice(0, i)).findIndex(c => me.#slots.has(c));\r\n      return i < 0 ? me.#prev[me.#prev.length - 1] : me.#back ? me.#prev[i - 1] || me.#first : i;\r\n    });\r\n  }\r\n\r\n  #format() {\r\n    const me = this;\r\n    const [i, j] = me.#range();\r\n    const val = me.#clean(me.#host.raw);\r\n    me.value = val.join``;\r\n    me.setSelectionRange(i, j);\r\n    me.#back = false;\r\n  }\r\n\r\n  //  TODO support multi #accecpt\r\n  #clean(input) {\r\n    const me = this;\r\n    input = input.match(me.#accept) || [];\r\n    return Array.from(me.pattern, (c, i) => input[i] === c || me.#slots.has(c) ? input.shift() || c : c);\r\n  }\r\n\r\n  #toPattern() {\r\n\r\n    const me = this;\r\n\r\n    if (me.pattern.length === 0) return;\r\n\r\n    const chars = me.pattern.split('');\r\n    const masks = ['^'];\r\n\r\n    const maskType = MaskController.#maskType;\r\n    const special = MaskController.#special;\r\n\r\n    let cnt = 0;\r\n    chars.forEach((v, i) => {\r\n      const m = me.#slots.has(v) ? maskType[v.toLowerCase()] : null;\r\n      if (!m) {\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        cnt = 0;\r\n        if (special.includes(v)) masks.push('\\\\');\r\n        return masks.push(v);\r\n      }\r\n\r\n      chars[i] = new RegExp(m, 'g');\r\n\r\n      if (masks.length === 0) return masks.push(m.source);\r\n\r\n      if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n      if (cnt > 0) masks.push(`{${++cnt}}`);\r\n      cnt = 0;\r\n      masks.push(m.source);\r\n    });\r\n\r\n    if (cnt > 0) masks.push(`{${++cnt}}`);\r\n    masks.push('$');\r\n\r\n    me.#pattern = new RegExp(masks.join(''), 'g');\r\n    // me.#max = me.pattern.length;\r\n    // me.#masks = chars;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle multiple patterns\r\n */\r\nexport class MultipatternController {\r\n\r\n  #host;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n  \r\n  checkValidity() {    \r\n    const me = this;  \r\n    let isMatch = true;\r\n    if (me.isValid) {\r\n      isMatch = me.isEmpty || me.isMatch;\r\n      if (!isMatch) me.setCustomValidity('Pattern not matched!');\r\n    }\r\n    return me.isValid && isMatch;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get patterns() {\r\n    const obj = this.#host.multipattern;\r\n    if (obj instanceof RegExp) return [obj];\r\n    if (Array.isArray(obj)) return obj.filter(o => o instanceof RegExp);\r\n    throw new Error('Invalid multipattern value. Expected RegExp object or array.');\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n    let isMatch = true;\r\n    for (const r of me.patterns) {\r\n      isMatch = r.test(me?.value);\r\n      if (isMatch) break;\r\n    }\r\n   \r\n    return isMatch;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type number to support max length entry\r\n */\r\nexport class NumberController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get maxLength() {\r\n    return GSUtil.asNum(this.#host.maxLength, 0);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n    \r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'number') return me.#onNumberInput(e);\r\n  }\r\n\r\n  #onNumberInput(e) {\r\n    const me = this;\r\n    if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n        me.value = me.value.substring(0, me.maxLength);\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle for input tpye password to support keyboard shortcut for password reveal.\r\n */\r\nexport class PasswordController {\r\n\r\n  #host;\r\n\r\n  #revealing = false;\r\n\r\n  #keyUpCallback;\r\n  #keyDownCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#keyUpCallback = me.#onKeyUp.bind(me);\r\n    me.#keyDownCallback = me.#onKeyDown.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('keyup', me.#keyUpCallback);\r\n    me.#host.on('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('keyup', me.#keyUpCallback);\r\n    me.#host.off('keydown', me.#keyDownCallback);\r\n  }\r\n\r\n  get reveal() {\r\n    return this.#host.hasAttribute('reveal');\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  set type(val) {\r\n    if (this.#host) this.#host.type = val;\r\n  }\r\n\r\n  #isReveal(e) {\r\n    return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    const me = this;\r\n    if (e.key === 'Shift' && me.#revealing) {\r\n      me.type = 'password';\r\n    }\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (me.#isReveal(e)) {\r\n      me.#revealing = true;\r\n      me.type = 'text';\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCSSMap } from \"../../../base/GSCSSMap.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type text to support text value changes based on CSS\r\n */\r\nexport class TextController {\r\n\r\n  #host;\r\n\r\n  #inputCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  #onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'text') me.value = me.#updateText(me.value);\r\n  }\r\n\r\n  #updateText(value = '') {\r\n    const map = GSCSSMap.styleValue(this.#host, 'text-transform');\r\n    if (map) value = GSUtil.textTransform(map.value, value);\r\n    return value;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update avaialble selections in another field selections.\r\n */\r\nexport class ListController {\r\n\r\n  #host;\r\n\r\n  #monitorCallback;\r\n  #changeCallback;\r\n  #blurCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#monitorCallback = me.#onMonitor.bind(me);\r\n    me.#changeCallback = me.#onDataChange.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (list) {\r\n      me.#host.on('blur', me.#blurCallback);\r\n      me.#host.on('change', me.#changeCallback);\r\n      me.#host.attachEvent(me.filter, 'change', me.#monitorCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.off('blur', me.#blurCallback);\r\n    me.#host.off('change', me.#changeCallback);\r\n    me.#host.removeEvent(me.filter, 'change', me.#monitorCallback);\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n      this.#onDataChange();\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get list() {\r\n    const me = this;\r\n    if (me.#host.list) return me.#host.list;\r\n    const list = GSAttr.get(me.#host, 'list');\r\n    return GSDOM.getByID(me.#host.owner, list);\r\n  }\r\n\r\n  get filter() {\r\n    const me = this;\r\n    const filter = GSAttr.get(me.#host, 'data-filter');\r\n    return GSDOM.getByID(me.#host.owner, filter);\r\n  }\r\n\r\n  get owner() {\r\n    return this.#host.owner;\r\n  }\r\n\r\n  get strict() {\r\n    return GSAttr.get(this.#host, 'strict', '');\r\n  }\r\n\r\n  #onBlur(e) {\r\n    if (!this.#isInList()) GSEvents.send(this.#host, 'strict', { ok: false, source: e });\r\n  }\r\n\r\n  #onDataChange(e) {\r\n    const me = this;\r\n    const own = me.owner;\r\n    let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n    let clean = false;\r\n    if (!opt) {\r\n        opt = me.list?.querySelector('option');\r\n        clean = true;\r\n    }\r\n\r\n    const obj = opt?.dataset || {};\r\n    Object.entries(obj).forEach(p => {\r\n        const val = clean ? '' : p[1];\r\n        const key = p[0];\r\n        GSAttr.set(me.#host, `data-${key}`, p[1]);\r\n        if (key === 'id' || key === 'group') return;\r\n\r\n        const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n        const els = Array.from(GSDOM.queryAll(own, filter));\r\n        els.filter(el => el.tagName !== 'OPTION')\r\n            .filter(el => el !== me)\r\n            .filter(el => GSAttr.get(el, 'list').length === 0)\r\n            .forEach(el => me.#togleEl(el, key, val))\r\n    });\r\n  }\r\n\r\n  #onMonitor(e) {\r\n    const me = this;\r\n    const list = me.list;\r\n    me.value = '';\r\n    const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n    GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n    const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n    GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n\r\n  }\r\n\r\n  #togleEl(el, key = '', value = '') {\r\n\r\n    const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n    const isMatch = value.length > 0 && data.includes(value);\r\n    const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n\r\n    if (frmel) {\r\n      GSAttr.toggle(el, 'disabled', !isMatch);\r\n    } else {\r\n      isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n    }\r\n\r\n    const form = GSDOM.closest(el, 'form');\r\n    GSDOM.formElements(form)\r\n      .forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n  }\r\n\r\n  #isInList() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (!list) return true;\r\n    if (!me.strict) return true;\r\n    if (!list.querySelector('option')) return true;\r\n    const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n    return opt != null;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSBeep } from \"../../../base/GSBeep.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Handle for input/testarea to support validity checkups\r\n */\r\nexport class ValidityController {\r\n\r\n  #host;\r\n\r\n  #invalidCallback;\r\n  #blurCallback;\r\n  #changeCallback;\r\n  #focusCallback;\r\n  #inputCallback;\r\n\r\n  #processing;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#processing = false;\r\n    me.#host = host;\r\n    me.#invalidCallback = me.#onInvalid.bind(me);\r\n    me.#blurCallback = me.#onBlur.bind(me);\r\n    me.#changeCallback = me.#onChange.bind(me);\r\n    me.#focusCallback = me.#onFocus.bind(me);\r\n    me.#inputCallback = me.#onInput.bind(me);\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on?.('invalid', me.#invalidCallback);\r\n    me.#host.on?.('blur', me.#blurCallback);\r\n    me.#host.on?.('focus', me.#focusCallback);\r\n    me.#host.on?.('change', me.#changeCallback);\r\n    me.#host.on('input', me.#inputCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host.off?.('invalid', me.#invalidCallback);\r\n    me.#host.off?.('blur', me.#blurCallback);\r\n    me.#host.off?.('focus', me.#focusCallback);\r\n    me.#host.off?.('change', me.#changeCallback);\r\n    me.#host.off('input', me.#inputCallback);\r\n  }\r\n\r\n  reset() {\r\n    this.setCustomValidity('');\r\n    this.#togglUI(this.isValid);\r\n  }\r\n\r\n  async report() {    \r\n    const me = this;\r\n    if (me.#processing) return;\r\n    me.#processing = true;\r\n    me.reportValidity();\r\n    if (me.isVisible) {\r\n      if (me.block) me.focus();\r\n      if (me.beep) await me.#beep();\r\n    }\r\n    await GSUtil.timeout(me.timeout);\r\n    me.setCustomValidity(me.isValid ? '' : ' ');\r\n    me.#togglUI(me.isValid);\r\n    me.#processing = false;    \r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.#host.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.#host.reportValidity();\r\n  }\r\n\r\n  focus() {\r\n    return this.#host.focus();\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  get beep() {\r\n    return this.#host.beep;\r\n  }\r\n\r\n  get block() {\r\n    return this.#host.block;\r\n  }\r\n\r\n  get timeout() {\r\n    return this.#host.timeout;\r\n  }\r\n\r\n  get isVisible() {\r\n    return GSDOM.isVisible(this.#host);\r\n  }\r\n\r\n  #onInput(e) {\r\n    this.#processing = false;\r\n  }\r\n\r\n  #onFocus(e) {\r\n    this.#togglUI(this.isValid);\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    this.report();\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    if(me.checkValidity()) {\r\n      me.reset();\r\n    }\r\n  }\r\n\r\n  #onBlur(e) {\r\n    const me = this;\r\n    if (me.isValid) {\r\n      me.reset();\r\n    } else {\r\n      me.checkValidity();\r\n    }\r\n  }\r\n\r\n  #togglUI(isValid) {\r\n    GSDOM.toggleClass(this.#host, 'is-invalid', !isValid);\r\n  }\r\n\r\n  #beep() {\r\n    return GSBeep.beep(100, 1200, 150, 'triangle');\r\n  }\r\n\r\n}  ","\r\nimport { notEqual, defaultConverter } from '../../lib.mjs';\r\n\r\n\r\nconst defaultPropertyDeclaration = {\r\n    attribute: true,\r\n    reflect: false,\r\n    type: String,\r\n    converter: defaultConverter,\r\n    hasChanged: notEqual,\r\n}\r\n\r\nconst attributeToPropertyMap = Symbol();\r\nconst prepare = Symbol();\r\nconst elementProperties = Symbol();\r\nconst finalize = Symbol();\r\nconst finalized = Symbol();\r\n\r\nconst prepareFn = function () {\r\n    const me = this;\r\n    if (Object.getOwnPropertySymbols(me).includes(elementProperties)) return;\r\n    const superCtor = Object.getPrototypeOf(me);\r\n    if (typeof superCtor[finalize] === 'function') superCtor[finalize]();\r\n    me[elementProperties] = new Map(superCtor[elementProperties]);\r\n}\r\n\r\nconst attributeNameForProperty = (name, options) => {\r\n    const attribute = options.attribute;\r\n    return attribute === false\r\n        ? undefined\r\n        : typeof attribute === 'string'\r\n            ? attribute\r\n            : typeof name === 'string'\r\n                ? name.toLowerCase()\r\n                : undefined;\r\n}\r\n\r\n/**\r\n * Reactivity for HTMLInputElement based on Google ltd. Lit ReactiveElement\r\n */\r\nexport class ReactiveInput extends HTMLInputElement {\r\n\r\n    // user defiend \r\n    static properties = {};\r\n    \r\n    static [finalized] = false;\r\n\r\n    #reflectingProperties = undefined;\r\n    #instanceProperties = undefined;\r\n\r\n    #controllers = undefined;\r\n    #updatePromise = undefined;\r\n    #changedProperties = undefined;\r\n    #reflectingProperty = undefined;\r\n\r\n    #hasUpdated = false;\r\n    #isUpdatePending = false;\r\n\r\n    #isConnected = false;\r\n\r\n    /**\r\n     * Returns a list of attributes corresponding to the registered properties.\r\n    */\r\n    static get observedAttributes() {\r\n        Object.defineProperty(ReactiveInput.__proto__, prepare, { value: prepareFn });\r\n        const me = this;\r\n        me[finalize]();\r\n        return me[attributeToPropertyMap] && [...me[attributeToPropertyMap].keys()];\r\n    }\r\n\r\n    static addInitializer(initializer) {\r\n        const me = this;\r\n        me[prepare]();\r\n        me.initializers ??= [].push(initializer);\r\n    }\r\n\r\n    static [finalize]() {\r\n        const me = this;\r\n        //if (Object.hasOwn(me, 'finalized')) return;\r\n        if (me[finalized] === true) return;\r\n        me[finalized] = true;\r\n        me[prepare]();\r\n\r\n        if (Object.hasOwn(me, 'properties')) {\r\n            const props = me.properties;\r\n            const propKeys = [\r\n                ...Object.getOwnPropertyNames(props),\r\n                ...Object.getOwnPropertySymbols(props),\r\n            ];\r\n            for (const p of propKeys) {\r\n                me.createProperty(p, props[p]);\r\n            }\r\n        }\r\n\r\n        // Create the attribute-to-property map\r\n        me[attributeToPropertyMap] = new Map();\r\n        for (const [p, options] of me[elementProperties]) {\r\n            const attr = attributeNameForProperty(p, options);\r\n            if (attr !== undefined) {\r\n                me[attributeToPropertyMap].set(attr, p);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static createProperty(name, options) {\r\n        const me = this;\r\n        if (options.state) options.attribute = false;\r\n        me[prepare]();\r\n        me[elementProperties].set(name, options);\r\n        if (!options.noAccessor) {\r\n            const key = Symbol();\r\n            const descriptor = me.getPropertyDescriptor(name, key, options);\r\n            if (descriptor !== undefined) {\r\n                Object.defineProperty(me.prototype, name, descriptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    static getPropertyDescriptor(name, key, options) {\r\n        const { get, set } = Object.getOwnPropertyDescriptor(this.prototype, name) ?? {\r\n            get() {\r\n                return this[key];\r\n            },\r\n            set(v) {\r\n                this[key] = v;\r\n            },\r\n        }\r\n        return {\r\n            get() {\r\n                return get?.call(this);\r\n            },\r\n            set(value) {\r\n                const me = this;\r\n                const oldValue = get?.call(me);\r\n                set?.call(me, value);\r\n                me.requestUpdate(name, oldValue, options);\r\n            },\r\n            configurable: true,\r\n            enumerable: true,\r\n        }\r\n    }\r\n\r\n    static getPropertyOptions(name) {\r\n        return this[elementProperties].get(name) ?? defaultPropertyDeclaration;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initialize();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.enableUpdating(true);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n        me.#isConnected = true;\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.#isConnected = false;\r\n        this.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        this.#attributeToProperty(name, newValue);\r\n    }\r\n\r\n    // ******************************\r\n    // PUBLIC GETTERS\r\n    // ******************************\r\n\r\n    get hasUpdated() { return this.#hasUpdated; }\r\n    get isUpdatePending() { return this.#isUpdatePending; }\r\n    get renderRoot() { return this; }\r\n\r\n    // ******************************\r\n    // PROTECTED FUNCTIONS \r\n    // ******************************\r\n\r\n    addController(controller) {\r\n        // if (!(controller instanceof ReactiveController)) throw new Error('Argument not instance of ReactiveController');\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.#isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    enableUpdating(requestedUpdate) { }\r\n\r\n    firstUpdated(changedProperties) { }\r\n\r\n    updated(changedProperties) { }\r\n\r\n    getUpdateComplete() { return this.#updatePromise; }\r\n\r\n    scheduleUpdate() { return this.performUpdate(); }\r\n\r\n    shouldUpdate(changedProperties) { return true; }\r\n\r\n    willUpdate(changedProperties) { }\r\n\r\n    update(changedProperties) {\r\n        const me = this;\r\n        // The forEach() expression will only run when when #reflectingProperties is\r\n        // defined, and it returns undefined, setting #reflectingProperties to undefined\r\n        me.#reflectingProperties &&= me.#reflectingProperties.forEach((p) => me.#propertyToAttribute(p, this[p]));\r\n        me.#markUpdated();\r\n    }\r\n\r\n    get updateComplete() {\r\n        return this.getUpdateComplete();\r\n    }\r\n\r\n    requestUpdate(name, oldValue, options) {\r\n        const me = this;\r\n        if (name !== undefined) {\r\n            options ??= (me.constructor).getPropertyOptions(name);\r\n            const hasChanged = options.hasChanged ?? notEqual;\r\n            const newValue = me[name];\r\n            if (hasChanged(newValue, oldValue)) {\r\n                me.#changeProperty(name, oldValue, options);\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (me.#isUpdatePending === false) {\r\n            me.#updatePromise = me.#enqueueUpdate();\r\n        }\r\n    }\r\n\r\n    performUpdate() {\r\n\r\n        const me = this;\r\n        if (!me.#isUpdatePending) return;\r\n\r\n        if (!me.#hasUpdated) {\r\n\r\n            // Mixin instance properties once, if they exist.\r\n            if (me.#instanceProperties) {\r\n                for (const [p, value] of me.#instanceProperties) {\r\n                    this[p] = value;\r\n                }\r\n                me.#instanceProperties = undefined;\r\n            }\r\n\r\n            const elementProps = me.constructor[elementProperties];\r\n            if (elementProps.size > 0) {\r\n                for (const [p, options] of elementProps) {\r\n                    if (\r\n                        options.wrapped === true &&\r\n                        !me.#changedProperties.has(p) &&\r\n                        me[p] !== undefined\r\n                    ) {\r\n                        me.#changeProperty(p, this[p], options);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let shouldUpdate = false;\r\n        const changedProperties = me.#changedProperties;\r\n        try {\r\n            shouldUpdate = me.shouldUpdate(changedProperties);\r\n            if (shouldUpdate) {\r\n                me.willUpdate(changedProperties);\r\n                me.#controllers?.forEach((c) => c.hostUpdate?.());\r\n                me.update(changedProperties);\r\n            } else {\r\n                me.#markUpdated();\r\n            }\r\n        } catch (e) {\r\n            shouldUpdate = false;\r\n            me.#markUpdated();\r\n            throw e;\r\n        }\r\n\r\n        if (shouldUpdate) {\r\n            me.#didUpdate(changedProperties);\r\n        }\r\n    }\r\n\r\n    // ******************************\r\n    // PRIVATE FUNCTIONS \r\n    // ******************************\r\n\r\n    #didUpdate(changedProperties) {\r\n        const me = this;\r\n        me.#controllers?.forEach((c) => c.hostUpdated?.());\r\n        if (!me.#hasUpdated) {\r\n            me.#hasUpdated = true;\r\n            me.firstUpdated(changedProperties);\r\n        }\r\n        me.updated(changedProperties);\r\n    }\r\n\r\n    #markUpdated() {\r\n        const me = this;\r\n        me.#changedProperties = new Map();\r\n        me.#isUpdatePending = false;\r\n    }\r\n\r\n    async #enqueueUpdate() {\r\n        const me = this;\r\n        me.#isUpdatePending = true;\r\n        try {\r\n            await me.#updatePromise;\r\n        } catch (e) {\r\n            Promise.reject(e);\r\n        }\r\n        const result = me.scheduleUpdate();\r\n\r\n        if (result != null) {\r\n            await result;\r\n        }\r\n        return !me.#isUpdatePending;\r\n    }\r\n\r\n    #changeProperty(name, oldValue, options) {\r\n        const me = this;\r\n        if (!me.#changedProperties.has(name)) {\r\n            me.#changedProperties.set(name, oldValue);\r\n        }\r\n\r\n        if (options.reflect === true && me.#reflectingProperty !== name) {\r\n            (me.#reflectingProperties ??= new Set()).add(name);\r\n        }\r\n    }\r\n\r\n    #attributeToProperty(name, value) {\r\n        const me = this;\r\n        const ctor = me.constructor;\r\n        const propName = (ctor[attributeToPropertyMap]).get(name);\r\n        if (propName !== undefined && me.#reflectingProperty !== propName) {\r\n            const options = ctor.getPropertyOptions(propName);\r\n            const converter =\r\n                typeof options.converter === 'function'\r\n                    ? { fromAttribute: options.converter }\r\n                    : options.converter?.fromAttribute !== undefined\r\n                        ? options.converter\r\n                        : defaultConverter;\r\n            // mark state reflecting\r\n            me.#reflectingProperty = propName;\r\n            me[propName] = converter?.fromAttribute(value, options.type);\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #propertyToAttribute(name, value) {\r\n        const me = this;\r\n        const elementProps = me.constructor[elementProperties];\r\n        const options = elementProps?.get(name);\r\n        const attr = attributeNameForProperty(name, options);\r\n        if (attr !== undefined && options.reflect === true) {\r\n            const converter =\r\n                (options.converter)?.toAttribute !==\r\n                    undefined\r\n                    ? (options.converter)\r\n                    : defaultConverter;\r\n            const attrValue = converter?.toAttribute(value, options.type);\r\n\r\n            me.#reflectingProperty = name;\r\n            if (attrValue == null) {\r\n                me.removeAttribute(attr);\r\n            } else {\r\n                me.setAttribute(attr, attrValue);\r\n            }\r\n            // mark state not reflecting\r\n            me.#reflectingProperty = null;\r\n        }\r\n    }\r\n\r\n    #saveInstanceProperties() {\r\n        const me = this;\r\n        const instanceProperties = new Map();\r\n        const elementProps = me.constructor[elementProperties];\r\n        for (const p of elementProps.keys()) {\r\n            if (Object.hasOwn(me, p)) {\r\n                instanceProperties.set(p, me[p]);\r\n                delete me[p];\r\n            }\r\n        }\r\n        if (instanceProperties.size > 0) {\r\n            me.#instanceProperties = instanceProperties;\r\n        }\r\n    }\r\n\r\n    #initialize() {\r\n        const me = this;\r\n        me.#updatePromise = new Promise((res) => me.enableUpdating = res);\r\n        me.#changedProperties = new Map();\r\n        me.#saveInstanceProperties();\r\n        me.requestUpdate();\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n        const data = this.form?.data;\r\n        if (data) GSDOM.fromObject2Element(this, data);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n        \r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity();\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get form() {\r\n        return this.closest('gs-form');\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n    /**\r\n     * Find closest top element by CSS selector\r\n     * @param {String} query \r\n     * @returns {HTMLElement}\r\n     */\r\n    closest(query = '') {\r\n        return GSDOM.closest(this, query);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        GSID.setIf(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n        \r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = { value: o };\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSData } from '../../base/GSData.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\nimport { AdoptedController } from '../../controllers/AdoptedController.mjs';\r\nimport { AttributeController } from '../../controllers/AttributeController.mjs';\r\nimport { CopySelectController } from './controllers/CopySelectController.mjs';\r\nimport { MaskController } from './controllers/MaskController.mjs';\r\nimport { MultipatternController } from './controllers/MultipatternController.mjs';\r\nimport { PasswordController } from './controllers/PasswordController.mjs';\r\nimport { NumberController } from './controllers/NumberController.mjs';\r\nimport { TextController } from './controllers/TextController.mjs';\r\nimport { ListController } from './controllers/ListController.mjs';\r\n\r\nimport { ReactiveInput } from './ReactiveInput.mjs';\r\nimport { ValidityController } from './controllers/ValidityController.mjs';\r\n\r\n/**\r\n * Extended HTMLInputElement with controllers support\r\n * adding various features such as masked input support \r\n */\r\nexport class GSInputElement extends ReactiveInput {\r\n\r\n  static properties = {\r\n    autocopy: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    autoselect: { type: Boolean },\r\n    reveal: { type: Boolean },\r\n    mask: { reflect: true },\r\n    multipattern: { type : Object},\r\n\r\n    block: { type: Boolean },\r\n    beep: { type: Boolean },\r\n    timeout: { type: Number }\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n\r\n  #copyselect;\r\n  #maskController;\r\n  #multiPatternController;\r\n  #passwordController;\r\n  #numberController;\r\n  #textController;\r\n  #listController;\r\n  #validityController;\r\n\r\n  constructor() {\r\n    super();\r\n    this.block = false;\r\n    this.beep = false;\r\n    this.timeout = 0;\r\n    this.#copyselect = new CopySelectController(this);\r\n    this.#validityController = new ValidityController(this);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n\r\n    if (changed.has('mask') && me.mask && me.type === 'text') {\r\n      me.placeholder = me.mask;\r\n      me.#maskController ??= new MaskController(me);\r\n    }\r\n\r\n    if (changed.has('multipattern')) {\r\n      const isMulti = Array.isArray(me.multipattern) && me.multipattern.length > 0;\r\n      const isType = ['text', 'password'].includes(me.type);\r\n      if (isMulti && isType) {\r\n        me.#multiPatternController ??= new MultipatternController(me);\r\n      }\r\n    }\r\n\r\n    if (me.list) {\r\n      me.#listController ??= new ListController(me);\r\n    }\r\n\r\n    switch (me.type) {\r\n      case 'text':\r\n        me.#textController ??= new TextController(me);\r\n        break;\r\n      case 'password':\r\n        me.#passwordController ??= new PasswordController(me);\r\n        break;\r\n      case 'number':\r\n        me.#numberController ??= new NumberController(me);\r\n        break;\r\n    }\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    if (me.autofocus) me.focus();    \r\n    const data = me.formComponent?.data;\r\n    if (data) GSDOM.fromObject2Element(me, data);\r\n    me.checkValidity();\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value) {\r\n    this.#adopted ??= new AdoptedController(me);\r\n    return this.#adopted.style(id, value);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  checkValidity() {\r\n    const me = this;\r\n    me.#validityController.reset();\r\n    super.checkValidity();\r\n    me.#multiPatternController?.checkValidity();\r\n    me.#maskController?.checkValidity();\r\n    super.checkValidity();\r\n    return me.validity.valid;\r\n  }\r\n\r\n  reportValidity() {\r\n    super.reportValidity();\r\n    this.#validityController.report();\r\n  }\r\n\r\n  get formComponent() {\r\n    return this.closest('gs-form');\r\n  }\r\n\r\n  get owner() {\r\n    const own = GSDOM.root(this);\r\n    return GSDOM.unwrap(own);\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  get raw() {\r\n    return super.value;\r\n  }\r\n\r\n  get value() {\r\n    return this.#maskController ? this.#maskController.value : super.value;\r\n  }\r\n\r\n  set value(val) {\r\n    super.value = this.mask === val ? '' : val;\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSInputElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   */\r\n  static define(name, clazz) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, { extends: 'input' });\r\n    }\r\n  }\r\n\r\n  static {\r\n    GSInputElement.define('gs-ext-input', GSInputElement);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvent } from \"../../base/GSEvent.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { GSBeep } from \"../../base/GSBeep.mjs\";\r\nimport { CopySelectController } from \"./controllers/CopySelectController.mjs\";\r\nimport { ValidityController } from \"./controllers/ValidityController.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <textarea is=\"gs-ext-text\"></textarea>\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLTextAreaElement}\r\n */\r\nexport class GSTextArea extends HTMLTextAreaElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-text', GSTextArea, { extends: 'textarea' });\r\n        Object.seal(GSTextArea);\r\n    }\r\n\r\n    #isConnected = false;\r\n    #controllers = undefined;\r\n\r\n    #copyselect;\r\n    #validityController;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#copyselect = new CopySelectController(this);\r\n        this.#validityController = new ValidityController(this);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        const data = me.form?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        me.#controllers?.forEach((c) => c.hostConnected?.());\r\n        me.#isConnected = true;\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#isConnected = false;\r\n        me.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    addController(controller) {\r\n        // if (!(controller instanceof ReactiveController)) throw new Error('Argument not instance of ReactiveController');\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.#isConnected) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n    checkValidity() {\r\n        const me = this;\r\n        me.#validityController.reset();\r\n        return super.checkValidity();\r\n    }\r\n\r\n    reportValidity() {\r\n        super.reportValidity();\r\n        this.#validityController.report();\r\n    }\r\n\r\n    get block() {\r\n        return this.hasAttribute('block');\r\n    }\r\n\r\n    get beep() {\r\n        return this.hasAttribute('beep');\r\n    }\r\n\r\n    get timeout() {\r\n        return GSAttr.getAsNum(this, 'timeout', 0);\r\n    }\r\n\r\n    set block(val = false) {\r\n        GSAttr.toggle(this, 'block', val);\r\n    }\r\n\r\n    set beep(val = false) {\r\n        GSAttr.toggle(this, 'beep', val);\r\n    }\r\n\r\n    set timeout(val = 0) {\r\n        return GSAttr.setAsNum(this, 'timeout', val);\r\n    }\r\n\r\n    get form() {\r\n        return this.closest('gs-form');\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSDOM.root(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    /**\r\n     * Get parent GS-* component\r\n     */\r\n    get parentComponent() {\r\n        return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n    }\r\n\r\n    /**\r\n     * Find closest top element by CSS selector\r\n     * @param {String} query \r\n     * @returns {HTMLElement}\r\n     */\r\n    closest(query = '') {\r\n        return GSDOM.closest(this, query);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        this.value = await GSLoader.loadSafe(url, 'GET', null, true);\r\n    }\r\n\r\n    /**\r\n     * Generic component signal\r\n     * @param {Boolean} bubbles  Does buuble to upper nodes\r\n     * @param {Boolean} composed Does traverse from shadow DOM \r\n     */\r\n    notify(bubbles = true, composed = false, data) {\r\n        this.emit('notify', data, bubbles, composed, true);\r\n    }\r\n\r\n    /**\r\n     * Send event\r\n     * @param {String} name \r\n     * @param {Object} obj \r\n     * @param {Boolean} bubbles \r\n     * @param {Boolean} composed \r\n     * @param {Boolean} cancelable \r\n     */\r\n    emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n        return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @async\r\n     * @param {String} name \r\n     * @returns {Promise}\r\n     */\r\n    waitEvent(name = '', timeout = 0) {\r\n        return GSEvents.wait(this, name, timeout);\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    once(name, func) {\r\n        return this.listen(name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event listen\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    on(name, func, once = false) {\r\n        return this.listen(name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Alternative function for event unlisten\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    off(name, func) {\r\n        return this.unlisten(name, func);\r\n    }\r\n\r\n    /**\r\n     * Prevent event firing up the DOM tree\r\n     * @param {Event} e \r\n     */\r\n    prevent(e) {\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    listen(name, func, once = false) {\r\n        return this.attachEvent(this, name, func, once);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {String} name  A name of the event\r\n     * @param {Function} func A callback function on event trigger\r\n     * @returns {Boolean}\r\n     */\r\n    unlisten(name, func) {\r\n        return this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * \r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @param {Boolean} once Listen only once\r\n    * @returns {Boolean} State if attachment was successful\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remove\r\n    * @param {HTMLElement} el Element on which to monitor for named events\r\n    * @param {String} name Event name to watch for\r\n    * @param {Function} fn Event trigger callback\r\n    * @returns {Boolean} State if attachment was successful\t\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        return GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined, repeat } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSBreadcrumbElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n    color: { ...color },\r\n    divider: { reflect: true },\r\n    spacing: { reflect: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.spacing = 1;\r\n    me.divider = 'chevron-right';\r\n    me.#updateChildren();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#updateChildren();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<nav part=\"base\" class=\"breadcrumb\" @click=\"${me.#onClick}\" dir=\"${ifDefined(me.direction)}\"><slot>\r\n      ${repeat(me.data || [], (item) => item, (item) => html`\r\n        <gs-breadcrumb-item  \r\n        href=\"${item.href}\"\r\n        color=\"${item.color}\"\r\n        .data=${item}     \r\n        .active=${item.active}\r\n        .divider=\"${item.divider || me.divider}\"\r\n        .spacing=\"${item.spacing || me.spacing}\">\r\n          ${item.$text}\r\n        </gs-breadcrumb-item>\r\n      `)}\r\n    </slot></nav>`;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #updateChildren() {\r\n    const me = this;\r\n    me.queryAll('gs-breadcrumb-item').forEach(el => {\r\n      el.divider = me.divider;\r\n      el.spacing = me.spacing;\r\n      el.color = me.color;\r\n    });\r\n  }\r\n\r\n  #onClick(e) {\r\n    const el = e.target.closest('gs-bradcrumb-item');\r\n    el?.handle(e);\r\n  } \r\n\r\n  static {\r\n    this.define('gs-breadcrumb');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSBreadcrumbItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    color: { ...color },\r\n    data: { state: true, type: Object },\r\n    active: { reflect: true, type: Boolean },\r\n    divider: { state: true, type: Boolean },\r\n    spacing: { state: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div part=\"base\" class=\"breadcrumb-item ${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <span part=\"prefix\"><slot name=\"prefix\"></slot></span>        \r\n        ${me.#label}\r\n        <span part=\"suffix\"><slot name=\"suffix\"></slot></span>\r\n        <span part=\"separator\"><slot name=\"separator\">${me.#separator}</slot></span>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #label() {\r\n    const me = this;\r\n    if (me.active) return html`<slot></slot>`;\r\n    me.data.url = me.data.url || me.href;\r\n    me.data.part = 'label';\r\n    return GSLinklement.generate(me.data, {})\r\n  }\r\n\r\n  get #separator() {\r\n    const me = this;\r\n    return me.nextElementSibling && me.divider ? html`<gs-icon size=\"7\" color=\"${me.color}\" css=\"mx-${me.spacing}\" name=\"${me.divider}\"></gs-icon>` : '';\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.query('a', true), e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-breadcrumb-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport { classMap, createRef, ref, css, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSAttachment } from './Attachment.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSFileBoxElement extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    static properties = {\r\n        cssList: { attribute: 'css-list' },\r\n        cssLabel: { attribute: 'css-label' },\r\n        cssInput: { attribute: 'css-input' },\r\n\r\n        multiple: { reflect: true, type: Boolean },\r\n        directory: { reflect: true, type: Boolean },\r\n        name: {},\r\n        title: {},\r\n        accept: {},\r\n        filter: {},\r\n    }\r\n\r\n    #listEl = createRef();\r\n    #fileEl = createRef();\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = GSFileBoxElement.CSS;\r\n        this.cssInput = 'd-none';\r\n        this.multiple = true;\r\n        this.title = GSFileBoxElement.TITLE;\r\n        this.filter = '^image\\/(gif|png|jpeg)$'\r\n        this.directory = false;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div part=\"border\" class=\"${classMap(me.renderClass())}\"\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @click=\"${me.#onClick}\"\r\n            @dragenter=\"${me.#onDragenter}\"\r\n            @dragover=\"${me.#onDragenter}\"\r\n            @dragleave=\"${me.#onDragleave}\"\r\n            @drop=\"${me.#onDrop}\"\r\n            @paste=\"${me.#onPaste}\"\r\n            @change=\"${me.#onChange}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.translate(me.title)}</label>\r\n            <input ${ref(me.#fileEl)}  part=\"input\" \r\n                type=\"file\" accept=\"${me.accept}\" \r\n                class=\"${me.cssInput}\" \r\n                name=\"${me.name}\" \r\n                id=\"${me.name}\" \r\n                ${me.multiple ? \"multiple\" : \"\"} \r\n                ${me.directory ? \"directory webkitdirectory\" : \"\"}>\r\n            <pre ${ref(me.#listEl)} part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    get listEl() {\r\n        return this.#listEl.value;\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.#fileEl.value;\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = me.emit('accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            me.emit('accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static styles = css`\r\n        .dash {\r\n            border-style: var(--gs-fieldbox-border, dashed) !important;\r\n            border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n        }\r\n        input[type=file] {\r\n            color : var(--gs-fieldbox-color, transparent);\r\n        } \r\n        input[type=file]::file-selector-button {}             \r\n        input[type=file]::file-selector-button:hover {}`;\r\n\r\n    static {\r\n        this.define('gs-filebox');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/TimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSTimeFormat extends GSElement {\r\n\r\n    static properties = {\r\n        interval: {reflect:true, type:Number},\r\n        locale: {reflect:true},\r\n    }\r\n\r\n    #id = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.interval = 1;\r\n        this.locale = GSUtil.locale;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const date = new Date();\r\n        return date.toLocaleTimeString(this.locale);\r\n    }    \r\n\r\n    start() {\r\n        const me = this;\r\n        if (me.interval >0 && me.#id === 0) {\r\n            me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n        } else {\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n        this.#id = 0;\r\n    }\r\n    \r\n    #update() {\r\n       requestAnimationFrame(() => this.requestUpdate());\r\n    }\r\n\r\n    static {\r\n        this.define('gs-time-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/DateFormat\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDate } from '../../base/GSDate.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSDateFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        format: {},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.locale = navigator.locale;\r\n        this.value = new Date();\r\n    }\r\n\r\n    renderUI() {\r\n        return this.result;\r\n    }    \r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.date;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get date() {\r\n        const me = this;\r\n        const o = Date.parse(me.value || new Date());\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n\r\n    static {\r\n        this.define('gs-date-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/YearFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSYearFormat extends GSElement {\r\n\r\n    static properties = {\r\n        offset: {type :Number},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n    }\r\n\r\n    renderUI() {\r\n        return this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        this.define('gs-year-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/CurrencyFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSCurrencyFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        locale: {},\r\n        currency: {},\r\n    }\r\n\r\n    renderUI() {\r\n        return this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-currency-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCacheStyles } from \"../../base/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepElement class\r\n * @module components/steps/GSStepElement\r\n */\r\n\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepElement extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-primary';\r\n    static COMPLETED = 'text-bg-secondary';\r\n\r\n    static ICON_CSS = 'border rounded-circle fs-1';\r\n    static TITLE_CSS = 'mb-0 fs-6 mt-3 fw-bold';\r\n\r\n    static properties = {\r\n        title: {},\r\n        icon: {},\r\n        color: {},\r\n        iconCSS: { attribute: 'icon-css' },\r\n        titleCSS: { attribute: 'title-css' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const clazz = GSStepElement;\r\n        this.icon = clazz.INACTIVE;\r\n        this.iconCSS = clazz.ICON_CSS;\r\n        this.titleCSS = clazz.TITLE_CSS;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"step d-block w-100 text-center mb-4\"  dir=\"${ifDefined(me.direction)}\">\r\n            <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color || GSStepElement.INACTIVE}\">\r\n                    ${me.#renderIcon()}\r\n                </div>\r\n            </div>\r\n            <div class=\"step-title ${me.titleCSS}\">${me.translate(me.title)}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    #renderIcon() {\r\n        return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-step');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepsElement class\r\n * @module components/steps/GSStepsElement\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSStepStyle } from \"./StepStyle.mjs\";\r\nimport GSStepElement from './Step.mjs';\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepsElement extends GSElement {\r\n\r\n    static CSS = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n\r\n    #index = -1;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldUpdate(changedProperties) { \r\n        return this.steps.length > 0;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\"><slot></slot></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        return this.mapCSS(GSStepsElement.CSS, super.renderClass());\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get length() {\r\n        return this.steps.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length - 1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isLast) return false;\r\n        if (me.#index > - 1) me.current.color = GSStepElement.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStepElement.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStepElement.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStepElement.SELECTED;\r\n        });\r\n    }\r\n\r\n    static {\r\n        GSStepStyle.style;\r\n        this.define('gs-steps', GSStepsElement);\r\n    }\r\n\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSAttr } from '../../base/GSAttr.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\n\r\nexport class GSNotificationElement extends GSElement {\r\n\r\n    static TOP_START = \"position-fixed top-0 start-0\";\r\n    static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n    static TOP_END = \"position-fixed top-0 end-0\";\r\n\r\n    static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n    static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n    static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n    \r\n    static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n    static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n    static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n    static DEFAULT = GSNotificationElement.BOTTOM_END;\r\n\r\n    static properties = {\r\n        position: { reflect: true },\r\n        native: { reflect: true, type: Boolean }\r\n    };\r\n\r\n    #list = new Set();\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = 'p-3';\r\n        this.position = GSNotificationElement.DEFAULT;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n            class=\"toast-container z-10k ${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        return me.mapCSS(me.#positionCSS, super.renderClass());\r\n    }    \r\n\r\n    get #positionCSS() {\r\n        const clazz = GSNotificationElement;\r\n        const val = this.position || clazz.DEFAULT;\r\n        return val.indexOf('_') > 0 && clazz[val] ? clazz[val] : val;\r\n    }\r\n\r\n    clear() {\r\n        this.queryAll('gs-toast').forEach(el => el.dismiss());\r\n    }\r\n\r\n    info(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n    }\r\n\r\n    success(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n    }\r\n\r\n    warn(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n    }\r\n\r\n    danger(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n    }\r\n\r\n    primary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n    }\r\n\r\n    secondary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n    }\r\n\r\n    dark(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n    }\r\n\r\n    light(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n    }\r\n\r\n    /**\r\n     * Main function to show notification. \r\n     * It has support for Bootstrap based and web based notifications.\r\n     * \r\n     * @async\r\n     * @param {String} title Notification title\r\n     * @param {String} message Notification message\r\n     * @param {String} css CSS styling (web only)\r\n     * @param {Boolean} closable Can user close it (web only)\r\n     * @param {Number} timeout Timeout after which to close notification  (default 2 sec)\r\n     * @param {Number} delay Timeout after which to show notification (default 1 sec)\r\n     * @param {Object} options Options for native Notification\r\n     * @returns {Promise<Notification|GSToast>}\r\n     */\r\n    async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n        if (!message) return;\r\n        const me = this;\r\n        if (me.native) {\r\n            let sts = await GSNotificationElement.requestPermission();\r\n            if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n            if (sts) return sts;\r\n        }\r\n        return me.#showWeb(title, message, css, closable, timeout, delay);\r\n    }\r\n\r\n    #showWeb(title, message, css, closable, timeout, delay) {\r\n        const me = this;\r\n        const tpl = `<gs-toast css=\"${css}\"  opened ${closable ? 'closable' : ''} timeout=\"${timeout}\"  delay=\"${delay}\" message=\"${message}\" title=\"${title}\" locale=\"${me.locale}\" ></gs-toast>`;\r\n        const el = GSDOM.parse(tpl, true);\r\n        requestAnimationFrame(async () => {\r\n            await me.#delay(delay);\r\n            const toast = me.#dialogToast;\r\n            if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n            toast.appendChild(el);\r\n        });\r\n        return el;\r\n    }\r\n\r\n    async #showNative(title, message, timeout, delay, options = {}) {\r\n        const me = this;\r\n        await me.#delay(delay);\r\n        options.body = options.body || message;\r\n        const notification = new Notification(title, options);\r\n        me.#list.add(notification);\r\n        const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n        notification.addEventListener('close', callback);\r\n        if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n        return notification;\r\n    }\r\n\r\n    get #dialogToast() {\r\n        const dlg = customElements.get('gs-dialog')?.top;\r\n        return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n    }\r\n\r\n    async #delay(delay = 0) {\r\n        if (GSUtil.isNumber(delay) && delay > 0) await GSUtil.timeout(delay * 1000);\r\n    }\r\n\r\n    #clearNative() {\r\n        const me = this;\r\n        me.notification.close();\r\n        me.owner.#list.delete(me.notification);\r\n        if (me.notification.iid) clearTimeout(me.notification.iid);\r\n    }\r\n\r\n    /**\r\n     * Clear all triggered notifications\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n        me.#list.forEach(nn => nn.close());\r\n        me.#list.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is supported\r\n     * @returns {Boolean} \r\n     */\r\n    static get isNativeSupported() {\r\n        return \"Notification\" in self;\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is allowed\r\n     * @returns {Boolean} \r\n     */\r\n    static get isGranted() {\r\n        return Notification.permission === \"granted\";\r\n    }\r\n\r\n    /**\r\n     * Request useage for browser native notification\r\n     * \r\n     * @async\r\n     * @returns {Promise<boolean>} Return granted status\r\n     */\r\n    static async requestPermission() {\r\n        const clazz = GSNotificationElement;\r\n        if (!clazz.isNativeSupported) return false;\r\n        if (!clazz.isGranted) await Notification.requestPermission();\r\n        return clazz.isGranted;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-notification');\r\n    }\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNotificationElement } from './Notification.mjs';\r\n\r\nexport class GSToastElement extends GSElement {\r\n\r\n    static properties = {\r\n        closable: { reflect: true, type: Boolean },\r\n        opened: { reflect: true, type: Boolean },\r\n        message: { reflect: true },\r\n        title: { reflect: true },\r\n        delay: { reflect: true, type: Number },\r\n        timeout: { reflect: true, type: Number }\r\n    }\r\n\r\n    #pending = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.timeout = 2;\r\n        me.delay = 2;\r\n        me.auto = true; \r\n    }\r\n\r\n    shouldUpdate(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.delay > 0 && me.opened && visibilityChange) {\r\n            me.#pending = true;\r\n            me.#pendingUpdate();\r\n        }\r\n        return me.#validParent && (!me.#pending);\r\n    }\r\n\r\n    #isVisibilityChanged(changedProperties) {\r\n        return changedProperties.has('opened');\r\n    }\r\n\r\n    async #pendingUpdate() {\r\n        const me = this;\r\n        await GSUtil.timeout(me.delay * 1000);\r\n        me.#pending = false;\r\n        me.requestUpdate();\r\n    }\r\n\r\n    async updated(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.timeout > 0 && me.opened) {\r\n            await GSUtil.timeout(me.timeout * 1000);\r\n            me.opened = false;\r\n        } else if (visibilityChange && !me.opened) { \r\n            me.remove();\r\n        };\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return me.title ? me.#renderWithHeader() : me.#renderSimple();\r\n    }\r\n\r\n    #renderWithHeader() {\r\n        const me = this;\r\n        return html`\r\n        <div dir=\"${ifDefined(me.direction)}\"\r\n            class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n            <div class=\"toast-header\">\r\n                ${me.translate(me.title)}\r\n                <slot name=\"header\"></slot>\r\n                ${me.closable ? me.#button : ''}\r\n            </div>\r\n            <div class=\"toast-body\">\r\n                ${me.translate(me.message)}\r\n                <slot name=\"body\"></slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    #renderSimple() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.translate(me.message)}\r\n              <slot name=\"body\"></slot>\r\n              </div>\r\n              ${me.closable ? me.#button : ''}\r\n          </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': me.opened,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    dismiss() {\r\n        this.opened = false;\r\n    }\r\n\r\n    get #button() {\r\n        const me = this;\r\n        return html`<button type=\"button\" class=\"btn-close me-2 m-auto\" @click=\"${me.dismiss}\"></button>`;\r\n    }\r\n\r\n    get #validParent() {\r\n        const isToast = GSDOM.hasClass(this.parentElement, 'toast-container');\r\n        const isNotify = this.parentElement instanceof GSNotificationElement;\r\n        return isToast || isNotify;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-toast');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller managing data tree navigation.\r\n * Controller is added to every gs-tree-node and \r\n * reacts on Tree node changes to update UI\r\n */\r\nexport class AbstractTreeController {\r\n\r\n    #host;\r\n    #node;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        host.addController(me);\r\n    }\r\n    \r\n    hostConnected() {\r\n        const me = this;\r\n        me.#node = me.#host.node;\r\n        me.#addNodeController(me);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        const me = this;\r\n        me.#removeNodeController(me);\r\n        me.#host.removeController(me);\r\n    }\r\n\r\n    // before rendering\r\n    hostUpdate() {\r\n        const me = this;\r\n        const oldNode = me.#node;\r\n        me.#node = me.#host.node;\r\n        if (oldNode != me.#node) {\r\n            me.#removeNodeController(me);\r\n            me.#addNodeController(me);\r\n        }\r\n    }\r\n\r\n    // link Tree node callbacks with controller and component\r\n    #addNodeController(controller) {\r\n        this.#host.node?.addController?.(controller);\r\n    }\r\n\r\n    // unlink Tree node callbacks with controller and component\r\n    #removeNodeController(controller) {\r\n        this.#node?.removeController?.(controller);\r\n    }\r\n\r\n    host(node) {\r\n        return node[Symbol.for('gs-element')] || this.#host;\r\n    }\r\n\r\n    match(node) {\r\n        const host = this.host(node);\r\n        return host?.node === node;\r\n    }\r\n\r\n    get store() {\r\n        return this.#host.dataController?.store;\r\n    }\r\n\r\n    requestUpdate(node) {\r\n        if (this.match(node)) this.host(node).requestUpdate();\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { AbstractTreeController } from './AbstractTreeController.mjs';\r\n\r\n/**\r\n * Controller managing data TreeNode callbacks to reflect UI.\r\n */\r\nexport class TreeController extends AbstractTreeController {\r\n\r\n    constructor(host) {\r\n        super(host);\r\n    }\r\n\r\n    #toggleState(node, state = false) {\r\n        const el = this.host(node);\r\n        if (el) el.loading = state;\r\n    }\r\n\r\n    // Tree controller callbacks\r\n    onLoad(node) {\r\n        this.#toggleState(node, true);\r\n    }\r\n\r\n    onRefresh(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onAppend(node, addedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onInsert(node, insertedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onExpand(node) {\r\n        const store = this.store;\r\n        if (store) {\r\n            store.onExpand(node);\r\n        } else {\r\n            this.requestUpdate(node);\r\n        }\r\n    }\r\n\r\n    onCollapse(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onFocusChanged(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onSelectionChanged(node, selectedNode) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onRemove(node) {\r\n        if (this.match(node)) this.host(node).remove();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../../lib.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSTreeItemElement extends GSElement {\r\n\r\n  /*\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n    */\r\n\r\n  static properties = {\r\n    loading: { state: true },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('node')) this.node[Symbol.for('gs-element')] = this;\r\n  }\r\n\r\n  updated() {\r\n    if (this.focused) this.query('a')?.focus();\r\n    this.dataset.visible = this.visible;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const opt = me.value || {};\r\n    opt.tooltip = me.translate(opt.tooltip)\r\n    opt.title = me.translate(opt.title)\r\n    const before = me.loading ? me.#renderSpinner(node.level) : me.#renderIcon(node.level);\r\n    return GSLinklement.generate(opt, me.renderClass(), before);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const opt = {\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      'user-select-none  ': true,\r\n      'border-0': me.#border ? false : true,\r\n      'gs-hide': !me.visible\r\n    };\r\n    return me.mapCSS(me.#cssFocus, me.mapCSS(me.#cssSelected, opt, me.selected && !me.multiselect), me.focused);\r\n  }\r\n\r\n  /**\r\n   * Toggle folder\r\n   */\r\n  toggle() {\r\n    this.opened ? this.close() : this.open();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open() {\r\n    this.#status(true);\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   */\r\n  close() {\r\n    this.#status(false);\r\n  }\r\n\r\n  focus(val = true) {\r\n    if (val) super.focus();\r\n    this.focused = val == true;\r\n  }\r\n\r\n  select(val = true) {\r\n    this.selected = val == true;\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.querySelector('a'), e);\r\n  }\r\n\r\n  get isLeaf() {\r\n    return this.node?.isLeaf;\r\n  }\r\n\r\n  get isFolder() {\r\n    return !this.isLeaf;\r\n  }\r\n\r\n  get key() {\r\n    return this.node?.key;\r\n  }\r\n\r\n  get value() {\r\n    return this.node?.value || {};\r\n  }\r\n\r\n  get level() {\r\n    return this.node?.level || -1;\r\n  }\r\n\r\n  get focused() {\r\n    return this.node?.focused;\r\n  }\r\n\r\n  get visible() {\r\n    const parent = this.parent;\r\n    return parent?.opened || parent?.level === -1;\r\n  }\r\n\r\n  get parent() {\r\n    return this.node?.parent;\r\n  }\r\n\r\n  get parentItem() {\r\n    const item = this.parent?.[Symbol.for('gs-element')];\r\n    return item instanceof GSTreeItemElement ? item : undefined;\r\n  }\r\n\r\n  set focused(val) {\r\n    val = val === true;\r\n    this.node.focused = val;\r\n  }\r\n\r\n  get selected() {\r\n    return this.node?.selected;\r\n  }\r\n\r\n  set selected(val) {\r\n    val = val === true;\r\n    const me = this;\r\n    if (me.isFolder && me.owner.leaf) val = false;\r\n\r\n    if (me.multiselect) {\r\n      if (val) {\r\n        me.node.selectAll();\r\n      } else {\r\n        me.node.deselectAll();\r\n      }\r\n    } else {\r\n      me.node.selected = val;\r\n    }\r\n  }\r\n\r\n  get opened() {\r\n    return this.node?.opened;\r\n  }\r\n\r\n  set opened(val) {\r\n    this.#status(val === true);\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tree');\r\n  }\r\n\r\n  get multiselect() {\r\n    return this.owner.multiselect;\r\n  }\r\n\r\n  get #cssFocus() { return this.owner.cssFocus || 'focus-ring'; }\r\n  get #cssSelected() { return this.owner.cssSelected || 'active'; }\r\n  get #cssCheck() { return this.owner.cssCheck || ''; }\r\n  get #checkColor() { return this.owner.checkColor || 'secondary'; }\r\n  get #checkColorSelected() { return this.owner.checkColorSelected || 'primary'; }\r\n\r\n  get #border() {\r\n    return this.value?.border === true || this.owner.border === true;\r\n  }\r\n\r\n  get #icon() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const data = me.value;\r\n    const ui = me.owner;\r\n    let itemIco = data.icon || ui.itemIcon;\r\n    if (node.isFolder) itemIco = node.opened ? (data.openIcon || ui.openIcon) : (data.closeIcon || ui.closeIcon);\r\n    return itemIco;\r\n  }\r\n\r\n  #renderIndent(level) {\r\n    return html`<gs-indent size=\"${level}\"></gs-indent>`;\r\n  }\r\n\r\n  #renderSpinner(level) {\r\n    return html`${this.#renderIndent(level)}<gs-spinner small></gs-spinner>`;\r\n  }\r\n\r\n  #renderIcon(level) {\r\n    return html`${this.#renderIndent(level)}${this.#renderMulti()}<gs-icon size=\"5\" name=\"${this.#icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderMulti() {\r\n    const me = this;\r\n    if (!me.multiselect) return '';\r\n    const color = me.selected ? me.#checkColorSelected : me.#checkColor;\r\n    const icon = me.node.isPartialySelected ? 'dash-square-fill' : me.selected ? 'check-square-fill' : 'square';\r\n    return html`<gs-icon size=\"6\" data-type=\"state\" \r\n                css=\"me-1 text-${color} ${me.#cssCheck}\"\r\n                name=\"${icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #status(val = false) {\r\n    const me = this;\r\n    if (me.node?.isFolder) {\r\n      me.node.opened = val;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, css, createRef, ref, repeat, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { TreeController } from './controllers/TreeController.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSTreeElement extends GSElement {\r\n\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n\r\n  static shared = {\r\n    itemIcon: { attribute: 'icon-item' },\r\n    closeIcon: { attribute: 'icon-close' },\r\n    openIcon: { attribute: 'icon-open' },\r\n    cssCheck: { attribute: 'css-check' },\r\n    cssFocus: { attribute: 'css-focus' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    checkColor: { attribute: 'check-color', ...color },\r\n    checkColorSelected: { attribute: 'check-color-selected', ...color },\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode },\r\n    border: { type: Boolean, reflect: true },\r\n    guide: { type: Boolean, reflect: true },\r\n    leaf: { type: Boolean, reflect: true },\r\n    multiselect: { type: Boolean, reflect: true },\r\n    circular: { type: Boolean, reflect: true },\r\n    ...GSTreeElement.shared\r\n  }\r\n\r\n  // GS-ITEM attributes mapping\r\n  static options = {\r\n    ...GSTreeElement.shared,\r\n    css: {},\r\n    icon: {},\r\n    color: {},\r\n    title: {},\r\n    tooltip: {},\r\n    opened: { type: Boolean },\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  #queued = false;\r\n  #listRef = createRef();\r\n\r\n  #controller = null;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.leaf = false;\r\n    me.multiselect = false;\r\n    me.data = GSDOM.toJson(me, true, true).items;\r\n    me.node = new TreeNode(null, { '#tagName': this.tagName }, null, -1);\r\n    me.itemIcon = 'file-earmark';\r\n    me.closeIcon = 'folder'; // caret-right; chevron-right\r\n    me.openIcon = 'folder2-open'; // caret-down; chevron-down\r\n    me.cssSelected = 'active'; // fw-bold\r\n    me.cssFocus = 'focus-ring';\r\n    me.node[Symbol.for('gs-element')] = me;\r\n    me.#controller = new TreeController(me);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n          class=\"treeview ${classMap(me.renderClass())}\"          \r\n          @click=\"${me.#onClick}\"\r\n          @keydown=\"${me.#onKeyDown}\"\r\n          @keyup=\"${me.#onKeyUp}\">\r\n          <div class=\"list-group\" ${ref(me.#listRef)}>\r\n          ${repeat(me.node.walk(me.node, false, false), (node) => node.key, (node) => html`\r\n            <gs-tree-item .node=\"${node}\"></gs-tree-item>\r\n          `)}\r\n          </div>    \r\n        </div>`;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data') && me.data && !me.#queued) {\r\n      me.#queued = true;\r\n      queueMicrotask(() => {\r\n        me.node.clear();\r\n        me.node.fromJSON(me.data);\r\n        me.#queued = false;\r\n        me.requestUpdate();\r\n      });\r\n    }\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('multiselect') && !this.multiselect) this.node?.deselectAll();\r\n    this.node.multi = this.multiselect;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    if (data instanceof TreeNode) {\r\n      if (data.root !== this.node) this.node = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n\r\n  next(expand = false) {\r\n    const me = this;\r\n    let item = me.nextItem;\r\n    if (!item & me.circular) item = me.#first;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (expand && me.focused?.isFolder) me.focused.open();\r\n    }\r\n    return me.focused;\r\n  }\r\n\r\n  previous(collapse = false) {\r\n    const me = this;\r\n    let item = me.previousItem;\r\n    if (!item & me.circular) item = me.#last;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (item.isFolder && collapse) item.close();\r\n    }\r\n    return me.focused;\r\n\r\n  }\r\n\r\n  expandAll() {\r\n    this.node?.expandAll();\r\n  }\r\n\r\n  collapseAll() {\r\n    this.node?.collapseAll();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open(path) {\r\n    const me = this;\r\n    me.focused?.open();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   * TODO - path navigation\r\n   */\r\n  close(path) {\r\n    const me = this;\r\n    me.focused?.close();\r\n  }\r\n\r\n  clear() {\r\n    this.node?.clear();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  reload() {\r\n    this.clear();\r\n    this.dataController?.read();\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host(this.node.selectedNode());\r\n  }\r\n\r\n  get focused() {\r\n    return this.#host(this.node.focusedNode());\r\n  }\r\n\r\n  /**\r\n   * Previous visible ge-node-item\r\n   */\r\n  get previousItem() {\r\n    return this.focused?.node.find(n => n?.visible, true, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  /**\r\n   * Next visible ge-node-item\r\n   */\r\n  get nextItem() {\r\n    return this.focused?.node.find(n => n?.visible, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  get #list() {\r\n    return this.#listRef.value;\r\n  }\r\n\r\n  get #first() {\r\n    return this.#list.firstElementChild;\r\n  }\r\n\r\n  get #last() {\r\n    return this.#list.lastElementChild;\r\n  }\r\n\r\n  #host(node) {\r\n    return node?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const isIcon = e.target.closest('gs-icon')?.dataset.type === 'state';\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!el.node) return;\r\n\r\n    const me = this;\r\n\r\n    if (me.multiselect) {\r\n      if (isIcon) el.select(!el.selected);\r\n    } else {\r\n      el.select(true);\r\n    }\r\n\r\n    const expandable = (me.multiselect && !isIcon) || (!me.multiselect);\r\n    if (el.isFolder && expandable) el.toggle();\r\n\r\n    el.focus();\r\n    el.handle(e);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    const me = this;\r\n    const el = me.focused;\r\n    if (!el) return;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n        me.next();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (el.isFolder) {\r\n          if (el.opened) {\r\n            me.close();\r\n          } else {\r\n            (el.parentItem || el)?.focus();\r\n          }\r\n        } else {\r\n          me.previous();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if (el.isFolder && !el.opened) {\r\n          me.open();\r\n        } else {\r\n          me.next();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!(el?.node)) return;\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        el.handle(e);\r\n        break;\r\n      case 'Tab':\r\n        el.focus();\r\n        break;\r\n      case 'Space':\r\n        el.select(this.multiselect ? !el.selected : true);\r\n        el.focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\n\r\nexport class GSChartElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/bootstrap-lit';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        config: {},\r\n        storage: {},\r\n        height: { type: Number },\r\n        width: { type: Number },\r\n        data: { type: Array },\r\n        options: { type: Object },\r\n    }\r\n\r\n    #canvasRef = createRef();\r\n    #chart = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.height = 0;\r\n        this.width = 0;\r\n        GSChartElement.#init();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#waitInit();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    shouldUpdate(changed) {\r\n        return GSChartElement.#isChart;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#render();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        const me = this;\r\n        if (changed.has('url') || changed.has('config')) me.#render();\r\n        if (changed.has('data') || changed.has('options')) me.#renderData(me.data, me.options);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<canvas ${ref(me.#canvasRef)} \r\n                class=\"${classMap(me.renderClass())}\"\r\n                width=\"${ifDefined(me.width > 0 ? me.width : false)}\" \r\n                height=\"${ifDefined(me.height > 0 ? me.height : false)}\" >\r\n            </canvas>`;\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.#canvasRef.value;\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    refresh() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    updateChart(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const options = await GSLoader.loadSafe(me.config, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.url, 'GET', null, true, []);\r\n        me.data = data;\r\n        me.options = options;\r\n    }\r\n\r\n    #renderData(data, options) {\r\n        const me = this;\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChartElement.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => o.data = sets.length === 1 ? data : data[i] || []);\r\n\r\n        if (me.#chart) return me.updateChart(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChartElement.#Chart(ctx, opt);\r\n    }\r\n\r\n    async #waitInit() {\r\n        if (!GSChartElement.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        this.requestUpdate();\r\n    }\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    static async #init() {\r\n        const me = GSChartElement;\r\n        if (me.URL_LIB === false) return;\r\n        if (me.#isChart || me.#initializing) return;\r\n        me.#initializing = true;\r\n        try {\r\n            const origin = GSChartElement.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);\r\n            me.#Chart = Chart;\r\n            me.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            me.#initializing = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert DOM tree into a JSON structure\r\n     * \r\n     * @param {HTMLElement} obj HTML element instance to convert\r\n     * @param {string} name DOM attribute name for object key\r\n     * @param {string} value DOM attribute name for object value\r\n     * @param {string} type DOM attribute name for object type\r\n     * @returns {object}\r\n     */\r\n    static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n        if (!(el instanceof HTMLElement)) return {};\r\n\r\n        const nameV = el.getAttribute(name);\r\n        const valV = el.getAttribute(value);\r\n        const typeV = el.getAttribute(type);\r\n\r\n        let obj = null;\r\n\r\n        switch (typeV) {\r\n            case 'array':\r\n                obj = [];\r\n                break;\r\n            case 'object':\r\n                obj = {};\r\n                break;\r\n            default:\r\n                return GSChartElement.#toType(valV, typeV);\r\n        }\r\n\r\n        const childs = Array.from(el.children);\r\n        const isArray = typeV === 'array';\r\n        const isObject = typeV === 'object';\r\n\r\n        childs.forEach(el => {\r\n            const _nam = el.getAttribute(name);\r\n            if (isArray) {\r\n                obj.push(GSChart.toJson(el, name, value, type));\r\n            } else if (isObject) {\r\n                const tmp = GSChartElement.toJson(el, name, value, type);\r\n                obj[_nam] = tmp;\r\n            } else {\r\n                const _val = el.getAttribute(value);\r\n                const _typ = el.getAttribute(type);\r\n                obj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    static #toType(val, type) {\r\n        switch (type) {\r\n            case 'boolean': return val === 'true';\r\n            case 'number': return parseFloat(val);\r\n            default: return val\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-chart');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#data = data;\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append: append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSMarkdownElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        history: { type: Number },\r\n        maxHeight: { type: Number, attribute: 'max-height' },\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        this.history = 10;\r\n        this.dynamicStyle(this.#styleID);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const me = this;\r\n        await me.#initLib();\r\n        if (globalThis.showdown) {\r\n            const opt = { tasklists: true, tables: true };\r\n            me.#converter = new globalThis.showdown.Converter(opt);\r\n            super.connectedCallback();\r\n        }\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('url')) {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url);\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const height = me.maxHeight > 0 ? `${me.maxHeight}px;` : false;\r\n        const opt = { 'max-height': height }\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        return html`<div ${ref(me.#containerRef)} class=\"overflow-auto ${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [me.#styleID] : true,\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        me.#onURL(url);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n\r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n\r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });\r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n            GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n\r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list = GSDOM.queryAll(me.#container, qry);\r\n        requestAnimationFrame(() => list.forEach(el => GSDOM.toggleClass(el, css)) );\r\n    }\r\n\r\n    #handleLinks() {\r\n        const me = this;\r\n        const links = GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n            .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')))\r\n            .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n            .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/'))\r\n            .forEach(el => GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me)));\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        if (me.#cache.length === 0 ) return me.#first;\r\n        const url = me.#cache.pop();\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if (me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdownElement.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-markdown');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSMonacoElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #editor = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = '';\r\n        this.theme = 'vs-dark';\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonacoElement.#init();\r\n        super.connectedCallback();\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.#onMonacoReady();\r\n        super.firstUpdated();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        if (changed.has('theme')) me.#onTheme(me.theme);\r\n        if (changed.has('target')) me.#onTarget(me.target);\r\n        if (changed.has('url')) me.#onURL(me.url);\r\n        if (changed.has('language')) me.#onLanguage(me.language);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#containerRef)} class=\"${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        return this.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    get owner() {\r\n        return this.parentElement;\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n\r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor?.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor?.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    static #initialized;\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonacoElement.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        const url = GSMonacoElement.URL_LIB;\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${url}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${url}'};\r\n                importScripts('${url}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({\r\n                paths: { 'vs': `${GSMonacoElement.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false }\r\n            });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static async #init() {\r\n        const me = GSMonacoElement;\r\n        if (me.#initialized) return;\r\n        me.#initEnv();\r\n        await me.#initLib();\r\n        await me.#initMonaco();\r\n        me.#initialized = true;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-monaco');\r\n    }\r\n\r\n}"],"names":["GSVersion","version","build","gsstyles","GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSUtil$1","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Date","Boolean","value","toString","val","trim","toLowerCase","str","obj","replace","x","g","split","reverse","join","word","toUpperCase","slice","map","i","capitalize","constructor","o","Array","isArray","isBool","isDate","isNumber","isString","min","max","Math","match","dft","locale","sep","numberSeparator","extractNumber","replaceAll","url","test","startsWith","endsWith","pattern","charset","floor","random","length","navigator","language","languages","flags","RegExp","isStringEmpty","undefined","Intl","NumberFormat","format","DateTimeFormat","string","isNull","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","separator","filter","capitalizeAll","tpl","params","names","keys","vals","values","Function","text","textArea","document","createElement","innerHTML","isStringNonEmpty","window","forEach","a","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","result","permissions","query","state","clipboard","writeText","readText","GSFunction$1","GSFunction","isFunction","includes","own","isFunctionDefined","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","from","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSID","prefx","next","s","l","h","charCodeAt","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","attributes","host","opt","recursive","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","children","proxify","safe","unsafe","dflt","default","multi","hasAttribute","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","first","getDay","mondayFirst","isMondayFirst","days","repeat","push","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","d","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","m","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","k","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Locale","weekInfo","firstDay","charAt","toLocaleString","size","isLowercase","hour","hour12","pop","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","getDateFormat","regex","getFormattedDateRegex","parseFormattedDate","groups","y","Y","valueOf","GSData","currency","extract","key","Set","b","every","index","toSorted","compareArrays","second","arr","indexOf","list","it","cfg","toType","rule","toRegex","childElementCount","querySelector","fmt","style","fields","limit","sts","rec","filterRecord","isPrimitive","filterSimple","filterComplex","filterValue","primitive","found","flt","toCheck","matchDate","matchNumber","op","toLocaleLowerCase","local","toLocaleDateString","iso","toISOString","operator","sort","sortPair","ord","idx","col","v1","v2","compare","order","compareNum","compareString","compareBool","s1","s2","localeCompare","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","partial","r","readFromProperty","readFromObject","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","wrap","appendChild","link","slot","isText","tagName","FORMEL","shadow","queryAll","HTMLButtonElement","hasClass","ownClazz","inheritance","pel","HTMLSlotElement","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","parentAll","childAll","child","parentElement","offsetParent","c","ShadowRoot","HTMLBodyElement","root","getByID","documentElement","walk","qry","levels","proxy","res","receiver","sanitize","sanitizer","setHTML","Document","textContent","requestAnimationFrame","toggleClass","contains","unwrap","querySelectorAll","defaults","valueAsNumber","selectedOptions","checked","defaultValue","getValue","styleValue","textTransform","ignore","checkValidity","fromElement2Object","fromObject2Element","objectPathExist","fromValue","writeToOject","toValue","plain","innerText","props","allProperties","getAsNum","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","location","hash","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","CLEANUP1","whiteList","asState","isAllowed","toValidationError","allowElement","allowTag","fetch","ok","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","properties","mergeObjects","template","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","detail","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","delete","removeListener","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","for","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","rid","waitAnimationFrame","onResize","attach","GSAbortController","AbortController","super","abort","clearInterval","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","isFunctions","getFilter","exec","create","GSDynamicStyle","deleteRule","getRule","setRule","sync","insertRule","updateRule","isImportant","setProperty","source","dynamicStyleSheetByID","dynamicStyleSheet","gsClass","dynamicRule","dynamicRuleByID","dynamicStyle","assign","dynamicStyleByID","GSCacheStyles","store","dynamic","styles","adopt","adoptedId","GSAdoptedEngine","now","preload","timerID","setInterval","sheets","adoptable","adoptSheet","update","scheduled","sorted","ID","cssText","monitorAttributes","ownerNode","adoptStyle","disconnect","mutationList","onAttributeChange","attributeFilter","attributeOldValue","HTMLLinkElement","rel","as","HTMLStyleElement","then","adoptLink","registerFilter","onMonitorFilter","onMonitorConnect","onMonitorDisconnect","init","GSBeep","AudioContext","webkitAudioContext","audioContext","duration","frequency","volume","isAvailable","audioCtx","oscillatorNode","createOscillator","gainNode","createGain","connect","destination","gain","start","currentTime","stop","onended","isActive","hasBeenActive","userActivation","GSEnvironment","isMobile","userAgentData","mobile","userAgent","isDesktop","isWebkit","protocol","strVal","brands","brand","strAgt","isEdge","isDevice","platform","screen","otype","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","ps","p","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSItem","autofocus","validate","parentComponent","GSElement","tags","collect","definition","GSLoader","GS_TEMPLATE_URL","origin","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","UNIQUE","searchParams","append","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GS_LOCALIZATION_LANGUAGE","lang","GSLocalization","GSLocalizationImpl","queue","queued","GS_LOCALIZATION_URL","translate","deft","getLanguage","texthash","reset","promises","loadWait","sequential","Pragma","isDefault","hk","details","GSPopper","asRect","sx","scrollX","sy","scrollY","top","bottom","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","arrow","pos","fromPlacement","isPlacementValid","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","aopt","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","applyDynamicStyle","GSQueryCSS","property","object","GSQuery","instance","GSTemplateCache","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTheme","switch","theme","STORAGE","htmlEl","bsTheme","matchMedia","q","URLSearchParams","onTheme","settings","getSystemDefaultTheme","darkMode","lightMode","setup","GSAttributeHandler","anchor","call","inject","swap","trigger","calls","toggles","triggers","handle","targets","handleTarget","handleBinding","handleAction","handleSwap","handleInject","handleAttribute","handleProperty","handleToggle","handleTrigger","handleCall","handleExec","handleTemplate","field","form","isForm","HTMLFormElement","isField","isFormElement","toObject","isAttributeJSON","jsonToAttr","toggleAttribute","isPropertyJSON","toggleProperty","tout","symbol","toHTML","applyContent","applyTemplate","clone","insertAdjacent","deattach","DEFINITION","override","Stack","item","unshift","peek","isEmpty","Queue","enqueue","dequeue","BinaryTreeNode","isLeaf","hasChildren","isRoot","BinaryTree","inOrderTraversal","postOrderTraversal","preOrderTraversal","insert","parentNodeKey","canInsertLeft","canInsertRight","find","Node","previous","release","toJSON","DoublyLinkedList","tail","previousNode","insertAt","splice","insertFirst","insertLast","getAt","removeAt","acc","toArray","iterator","isInvalid","isInvalidIndex","isInteger","Tree","folder","leaf","up","levelID","nodeID","isFolder","hasMore","firstChild","lastChild","down","previousSibling","inclusive","flat","iterate","filtered","Je","newOne","findByKey","flatten","fromJSON","raw","hasParent","GSReadWriteRegistryImpl","handlers","INTERNAL","addHandler","removeHandler","getHandler","newHandler","enabled","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","processors","enable","addProcessor","processor","removeProcessor","disable","isRegistered","notify","onRead","postRead","onWrite","postWrite","addSelected","asArray","SELECT","removeSelected","clearSelected","getSelected","isSelected","selected","GSReadWrite","reader","writer","mode","skip","TYPE","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCachedReadWrite","reformat","records","postFilter","sortData","filterData","search","read","TreeNode","opened","focused","focusedNode","selectedNode","controllers","select","focus","open","addController","removeController","visible","expand","collapse","changed","onFocusChanged","onSelectionChanged","isPartialySelected","selectAll","deselectAll","selectionFlag","onSelectAll","onDeselectAll","selectedNodes","refresh","onRefresh","loading","onLoad","expandAll","collapseAll","expanded","collapsed","onExpand","onCollapse","onAppend","onInsert","GSTreeReader","litUrl","GS_LIT_URL","litModule","ReactiveController","ReactiveElement","AsyncDirective","AsyncReplaceDirective","CSSResult","Directive","LitElement","PartType","TemplateResultType","UnsafeHTMLDirective","UntilDirective","_$LE","_$LH","adoptStyles","asyncAppend","asyncReplace","choose","classMap","clearPart","createRef","defaultConverter","directive","getCommittedValue","getCompatibleStyle","getDirectiveClass","guard","ifDefined","insertPart","isCompiledTemplateResult","isDirectiveResult","isServer","isSingleExpression","isTemplateResult","keyed","literal","live","noChange","notEqual","nothing","range","ref","removePart","render","setChildPartValue","setCommittedValue","staticHtml","staticSvg","styleMap","supportsAdoptingStyleSheets","svg","templateContent","unsafeCSS","unsafeHTML","unsafeSVG","unsafeStatic","until","when","withStatic","gsAction","gsAnchor","gsAttribute","gsCall","gsExec","gsInject","gsProperty","gsSwap","gsTarget","gsTemplate","gsToggle","gsTrigger","gsValue","DatasetDirective","part","srcset","DOMStringMap","remap","hasOwn","descriptors","getOwnPropertyDescriptors","listProperties","listGetters","getPrototypeOf","literalTemplate","listGettable","cssMap","CssMapDirective","partInfo","ATTRIBUTE","strings","classInfo","_previousClasses","_staticClasses","notEmpty","newVal","oldVal","numGT0","numGE0","numLT0","numLE0","AutocapitalizeTypes","autocapitalize","hasChanged","AutocompleteTypes","autocomplete","AutocorrectTypes","autocorrect","ButtonTypes","buttonType","is","ColorTypes","color","EnvironmentTypes","environment","InputTypes","inputType","NavTypes","nav","OrientationTypes","PlacementTypes","PositionTypes","ProtocolTypes","SizeTypes","normal","medium","small","large","big","extra","stringArrayConverter","fromAttribute","toAttribute","AdoptedController","hostConnected","hostDisconnected","isGlobal","rules","removeRule","renderRoot","onAdopted","AttributeController","eventName","onNotify","isFormEl","ContentController","refs","removeContent","hostUpdated","isSelf","contentRef","options","renderOptions","renderBefore","previousElementSibling","keep","DataController","readCallback","writeCallback","errorCallback","selectCallback","onSelect","write","storeID","firstPage","page","lastPage","nextPage","prevPage","storage","requestUpdate","onDataRead","onDataWrite","onDataError","ElementMoveController","attached","cursorX","cursorY","mouseUpCallback","mouseDownCallback","mouseMoveCallback","onMouseUp","onMouseDown","onMouseMove","attachEvent","removeEvent","onStartMove","onEndMove","onCursorRight","onCursorLeft","onCursorUp","onCursorDown","LocalizationController","hostUpdate","updateLanguage","updateLanguageExt","langauge","onLanguage","OrientationController","hosts","onOrientation","TemplateController","lastRef","templateRef","schedule","templateInjected","isTplEl","cacheable","tasks","task","process","finally","ThemeController","updateTheme","updateThemeExt","SlotController","onSlotChanged","assignedElements","onSlotInjected","rtl","reflect","hide","rounded","bordered","onready","os","browser","adopted","uiHandler","localization","dataController","slotController","themes","attributeChangedCallback","oldValue","newValue","connectedCallback","isBindable","binded","disconnectedCallback","deattachListeners","createRenderRoot","firstUpdated","willUpdate","relink","isAllowRender","renderUI","renderTemplate","renderClass","border","mapCSS","flag","waitEvent","direction","isFocused","isValidEnvironment","isValidBrowser","isValidOS","isValidProtocol","isValidOrientation","isGenerated","definitions","elementStyles","cssRule","setCSSProperty","ElementNavigationController","circular","multiple","onKeyUp","onClick","onFocusIn","onFocusOut","lastElementChild","blur","onSelected","onDeselected","onFocused","isNavigable","isNav","relatedTarget","composedPath","GroupController","busEvent","busCallback","onBusEvent","GSAccordionElement","autoclose","cssItem","cssHeader","cssBody","renderItems","close","message","isItemCloser","GSAccordionItemElement","shouldUpdate","changedProperties","component","GSAlertElement","closed","closable","pause","interval","handleBillboard","updated","show","isBillboard","button","billboard","GSButtonElement","clickCss","hoverCss","toggleColor","outline","toggling","icon","tooltip","refEl","refIco","onMouseOver","onMouseOut","iconEl","animate","isReset","isSubmit","submit","hover","isReest","iconHtml","renderIcon","GSCalendarElement","arrovPrev","arrowNext","cssDays","cssToday","cssWeeks","cssMonth","cssYear","cssNav","cssSelected","minYear","maxYear","arrowPrev","previousMonth","nextMonth","previousYear","nextYear","formatted","updateTarget","week","dayList","months","monthsHTML","yearHTML","onKey","onDay","daysHTML","tgt","HTMLInputElement","valueAsDate","isToday","today","c1","c2","current","monthList","onMonth","onYear","selectedIndex","GSCardElement","imageStyle","overlay","align","image","subtitle","footer","header","colorText","colorBack","colorBorder","cssTitle","cssSubtitle","cssFooter","cssImage","styleID","isVertical","renderVertical","renderHorizontal","imageTop","imageBottom","isBefore","startClass","endClass","startHtml","images","endHtml","isHorizontal","imageSlot","GSCenterElement","GSMenuElement","auto","dark","menuRef","closeSubmenus","updatePosition","onMouseLeave","submenu","dropend","dropstart","popup","caller","isMouseOrPointerEvent","renderSubmenu","renderHeader","renderMenu","renderDivider","menu","toSubmenu","menuItem","isSubmenu","innerWidth","GSContextElement","isInTable","attachTarget","assignedSlot","onPopup","GSCompareElement","background","before","after","elRef","clipRef","slideRef","mouseController","elPosition","splitter","onDoubleClick","isAuto","pct","isFixed","slider","clip","GSControllerElement","module","changes","initialize","GSCopyrightElement","company","isCompany","isYear","GSDataHandler","autoload","autorefresh","config","handler","lifoReadRef","lifoWriteRef","itemHolder","PROPERTIES","initLIFO","updateHandler","formatSort","formatFilter","isDebug","gsDebug","isCached","formated","save","verifyHandler","callOnceLifo","lifoReadRefCallback","lifoWriteRefCallback","lifoCall","GSDialogElement","standard","escapable","cancelText","confirmText","minWidth","buttonAlign","iconCancel","iconConfirm","colorCancel","colorConfirm","cssCancel","cssConfirm","cssContent","dialogRef","btnConfirmRef","btnCancelRef","CSS","TITLE_CSS","HEADER_CSS","ALIGN","CANCEL","CONFIRM","updateStack","onOpenChanged","STACK","dialog","showModal","focusable","renderConfirm","onConfirm","renderCancel","onCancel","renderFooter","onForm","onSubmit","info","confirm","prompt","forms","f","tab","btnConfirm","btnCancel","QUERY_INPUT","isVisible","GSDrawerElement","backdrop","scroll","fingers","transition","cssHead","onLeave","onEnter","hasHeader","headSlot","GSDropdownElement","simple","renderButton","buttonClass","btn","GSEmailElement","user","domain","dev","updateUser","updateDomain","GSFormElement","acceptCharset","enctype","novalidate","block","beep","formRef","onChange","onBlur","onInvalid","doFilter","filterField","submitButton","resetButton","elements","childrens","inputs","validity","valid","reportValidity","onValidate","disableInput","enableInput","onFieldChange","onFieldInvalid","findField","Event","fieldValue","fldName","gsfDisable","fldVal","gsfValue","matched","selectable","GSFormGroupElement","layout","label","description","placeholder","mask","spellcheck","rows","cols","step","minLength","maxLength","autoid","autocopy","autoselect","reveal","readonly","required","invalidMessage","cellField","cellLabel","cssLabel","cssField","inputRef","ouptutRef","patterns","validateAllowed","ICON","CSS_LABEL","CSS_LABEL_CELL","SELECTOPT","onRange","renderFloating","cssCheck","renderInput","renderOutput","renderLabel","renderInfo","renderLabelWrap","renderField","isIcon","CSS_ICON","renderTooltip","isRange","idattr","isFieldset","radioLayout","fieldSet","inputHTML","selectHTML","isTextArea","fld","vertical","initStyle","listHTML","outerHTML","isBlock","isBeep","isSwitch","isCheckable","isFloating","slots","tagList","isCheck","isRadio","isChecked","isPassword","isEmail","isURL","GSFormPanelElement","formStorage","GSGroupElement","controllerGroup","initData","prerender","of","renderWrappedUI","renderWrappedClass","childTagName","generated","getName","GSIconElement","superColor","_clicked","_hovered","postAnimate","fs","GSIndentElement","multiplier","numdef","GSImageElement","invert","grayscale","brightness","contrast","saturate","hue","sepia","alt","imageRef","complete","renderStyle","buildFilter","GSLayoutElement","resizable","autofit","vPos","hPos","els","dyncss","horizontal","lev","tplEl","elementTemplate","tc","dir","did","panelCSS","panelStyle","resize","grow","vpos","hpos","GSLinklement","ping","GSListElement","GSListItemElement","initial","renderFirst","renderSecond","itemCSS","isSelectable","itemStatusCSS","renderText","activeCSS","cssActive","inactiveCSS","cssInactive","GSNavElement","isTab","GSNavItemElement","itemsCSS","buttonCSS","buildCSS","cssButton","navType","GSOverlayElement","autoremove","radius","styleID2","innerHeight","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathStr","createSVGPathString","fill","pointerEvents","cursor","windowX","windowY","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPagerElement","pages","labelFirst","labelLast","labelNext","labelPrevious","half","renderPrevious","renderItem","renderNext","renderLast","pagination","decodeHTMLEntities","toTarget","ctrl","GSPopupElement","wMin","wMax","hMin","hMax","panelRef","attachTaraget","onAuto","reposition","popupFixed","panel","overflowH","overflowV","GSProgressElement","updateStyle","percentage","onKeySelect","increase","decrease","trunc","old","GSSpinnerElement","pulsar","GSSplitterElement","styleTGT","cssUpdate","lock","updateMouse","isPreceeding","isStyleValue","styleDynamic","lockable","csize","cls","gsSplitter","updateX","updateY","dx","GSTabItemElement","updateCSS","tabCSS","GSTabPanelElement","GSTabGroupElement","findPanel","isAfter","tabs","renderTabs","panels","renderPanels","GSTableElement","colspan","hidden","fixed","filterType","cssFilter","colorHead","colorSelect","colorSort","stripedColumn","divider","striped","grid","borderless","columns","datacolumn","multisort","multiselect","protected","sortable","sortOrder","headColor","CELLS","table","stripedColumns","renderFilters","onSort","entry","renderColumn","renderRecord","renderEmpty","renderHandler","columnType","columType","input","valueAt","row","cell","cfgType","timestamp","dataType","renderFilter","hasSub","onFilter","renderOption","listid","icons","sortType","cells","remapRecord","renderCell","record","elementTofilter","column","getElementIndex","prepareSorter","isComplex","tr","GSTagElement","converter","appendable","closeColor","cssClose","cssTag","dataListRef","renderTags","onInput","renderList","updateTag","KEYS","srcElement","removeTag","addTag","isMax","datalist","optEl","tagEl","renderTag","tagClass","btnClass","badge","GSTextElement","GSTooltipElement","arrowRef","arrowStyle","attachEvents","fade","arrowEl","panelEl","refLocal","refGlobal","GSTemplateElement","CopySelectController","clickCallback","copyCallback","onCopy","writeToClipboard","MaskController","_","back","prev","keyDownCallback","inputCallback","focusCallback","changeCallback","initRules","onFocus","j","buildSlots","findIndex","buildAccept","toPattern","isMatch","setCustomValidity","setSelectionRange","substring","selectionStart","selectionEnd","lastIndex","maskType","clean","chars","masks","special","MultipatternController","multipattern","NumberController","onNumberInput","PasswordController","revealing","keyUpCallback","isReveal","altKey","TextController","updateText","ListController","monitorCallback","blurCallback","onMonitor","onDataChange","hasUpdated","strict","isInList","togleEl","dataGroup","isButtonElement","formElements","ValidityController","invalidCallback","processing","togglUI","report","defaultPropertyDeclaration","attributeToPropertyMap","prepare","elementProperties","finalize","finalized","prepareFn","getOwnPropertySymbols","superCtor","attributeNameForProperty","ReactiveInput","reflectingProperties","instanceProperties","updatePromise","reflectingProperty","isUpdatePending","observedAttributes","initializer","initializers","propKeys","getOwnPropertyNames","createProperty","noAccessor","descriptor","getPropertyDescriptor","prototype","configurable","enumerable","enableUpdating","attributeToProperty","requestedUpdate","getUpdateComplete","scheduleUpdate","performUpdate","propertyToAttribute","markUpdated","updateComplete","getPropertyOptions","changeProperty","enqueueUpdate","elementProps","wrapped","didUpdate","ctor","propName","attrValue","saveInstanceProperties","GSComboExt","HTMLSelectElement","setIf","objToHTML","GSDataListExt","HTMLDataListElement","GSInputElement","copyselect","maskController","multiPatternController","passwordController","numberController","textController","listController","validityController","isMulti","isType","formComponent","GSTextArea","HTMLTextAreaElement","GSBreadcrumbElement","spacing","updateChildren","$text","GSBreadcrumbItemElement","generate","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBoxElement","cssList","cssInput","listEl","fileEl","dragging","TITLE","onDragenter","onDragleave","onDrop","onPaste","dataTransfer","hasFile","dropEffect","clipboardData","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","GSTimeFormat","toLocaleTimeString","GSDateFormat","GSYearFormat","GSCurrencyFormat","GSStepStyle","GSStepElement","iconCSS","titleCSS","INACTIVE","ICON_CSS","GSStepsElement","steps","isFirst","isLast","COMPLETED","SELECTED","GSNotificationElement","BOTTOM_END","DEFAULT","positionCSS","dismiss","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","dlg","nn","isNativeSupported","isGranted","permission","GSToastElement","pending","visibilityChange","isVisibilityChanged","pendingUpdate","validParent","renderWithHeader","renderSimple","isToast","isNotify","AbstractTreeController","addNodeController","removeNodeController","oldNode","TreeController","toggleState","addedNode","insertedNode","onRemove","GSTreeItemElement","renderSpinner","cssFocus","status","parentItem","checkColor","checkColorSelected","ui","itemIco","itemIcon","openIcon","closeIcon","renderIndent","renderMulti","GSTreeElement","guide","shared","listRef","nextItem","previousItem","reload","expandable","GSChartElement","URL_LIB","GS_URL_CHART","canvasRef","chart","waitInit","destroy","isChart","renderData","canvas","updateChart","div","toBase64Image","quality","sets","datasets","ctx","getContext","Chart","initializing","registerables","nameV","valV","typeV","childs","isObject","_nam","GSChart","_val","_typ","GSHighlightElement","GS_URL_HLJS","codeRef","onTarget","onURL","onHighlight","hasLangauge","highlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMarkdownElement","GS_URL_MARKDOWN","history","maxHeight","containerRef","initLib","showdown","tasklists","tables","Converter","toCache","fromCache","container","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","script","GSMonacoElement","GS_URL_MONACO","editor","onMonacoReady","monaco","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","automaticLayout","minimap","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","paths","vs","initialized","initEnv","initMonaco"],"mappings":"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"}